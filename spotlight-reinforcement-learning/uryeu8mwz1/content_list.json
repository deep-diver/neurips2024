[{"type": "text", "text": "The Value of Reward Lookahead in Reinforcement Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Nadav Merlis Dorian Baudry FairPlay Joint Team, CREST, ENSAE Paris FairPlay Joint Team, CREST, ENSAE Paris nadav.merlis@ensae.fr Institut Polytechnique de Paris ", "page_idx": 0}, {"type": "text", "text": "Vianney Perchet FairPlay Joint Team, CREST, ENSAE Paris Criteo AI Lab ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In reinforcement learning (RL), agents sequentially interact with changing environments while aiming to maximize the obtained rewards. Usually, rewards are observed only after acting, and so the goal is to maximize the expected cumulative reward. Yet, in many practical settings, reward information is observed in advance \u2013 prices are observed before performing transactions; nearby traffic information is partially known; and goals are oftentimes given to agents prior to the interaction. In this work, we aim to quantifiably analyze the value of such future reward information through the lens of competitive analysis. In particular, we measure the ratio between the value of standard RL agents and that of agents with partial future-reward lookahead. We characterize the worst-case reward distribution and derive exact ratios for the worst-case reward expectations. Surprisingly, the resulting ratios relate to known quantities in offilne RL and reward-free exploration. We further provide tight bounds for the ratio given the worst-case dynamics. Our results cover the full spectrum between observing the immediate rewards before acting to observing all the rewards before the interaction starts. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Reinforcement Learning [RL, Sutton and Barto, 2018] is the problem of learning how to interact with a changing environment. The setting usually consists of two major elements: a transition kernel, which governs how the state of the environment evolves due to the actions of an agent, and a reward given to the agent for performing an action at a given environment state. Agents must decide which actions to perform in order to collect as much reward as possible, taking into account not only the immediate reward gain, but also the long-term effects of actions on the state dynamics. ", "page_idx": 0}, {"type": "text", "text": "In the standard RL framework, reward information is usually observed after playing an action, and agents only aim to maximize their cumulative expected reward, also known as the value [Jaksch et al., 2010, Azar et al., 2017, Jin et al., 2018, Dann et al., 2019, Zanette and Brunskill, 2019, Efroni et al., 2019b, Simchowitz and Jamieson, 2019, Zhang et al., 2021b]. Yet, in many real-world scenarios, partial information about the future reward is accessible in advance. For example, when performing transactions, prices are usually known. In navigation settings, rewards are sometimes associated with traffic, which can be accurately estimated for the near future. In goal-oriented problems [Schaul et al., 2015, Andrychowicz et al., 2017], the location of the goal is oftentimes revealed in advance. This information is completely ignored by agents that maximize the expected reward, even though using this future information on the reward should greatly increase the reward collected by the agent. ", "page_idx": 0}, {"type": "text", "text": "As an illustration, consider a driving problem where an agent travels between two locations, aiming to collect as much reward as possible. In one such scenario, rewards are given only when traveling free roads. It would then be reasonable to assume that agents see whether there is traffic before deciding in which way to turn at every intersection (\u2018one-step lookahead\u2019). In an alternative scenario, the agent participates in ride-sharing and gains a reward when picking up a passenger. In this case, agents gain information on nearby passengers along the path, not necessarily just in the closest intersection (\u2018multi-step lookahead\u2019). Finally, the destination might be revealed only at the beginning of the interaction, and reward is only gained when reaching it (\u2018full lookahead\u2019). In all examples, the additional information should be utilized by the agent to increase its collected reward. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we analyze the value of future (lookahead) information on the reward that could be obtained by the agent through the lens of competitive analysis. More precisely, we study the competitive ratio (CR) between the value of an agent that only has access to reward distributions and that of a lookahead agent who sees the actual reward realizations for several future timesteps before choosing each action. Our contributions are the following: (i) Given an environment and its expected rewards, we characterize the distribution that maximizes the value of lookahead agents, for all ranges of lookahead from one step to full lookahead; this distribution therefore minimizes the CR. In particular, we show that the lookahead value is maximized by long-shot rewards \u2013 very high rewards at extremely low probabilities. (ii) We derive the worst-case CR as a function of the dynamics of the environment (that is, for the worst-case reward expectations). Surprisingly, the CR that emerges is closely related to fundamental quantities in reward-free exploration and offline RL [Xie et al., 2022, Al-Marjani et al., 2023]. (iii) We analyze the CR for the worst-possible environment. Specifically, tree-like environments that require deciding both when and where to navigate exhibit near-worst-case CR. (iv) Lastly, we complement these results by presenting different environments and their CR, providing more intuition to our results. ", "page_idx": 1}, {"type": "text", "text": "Related Work. The idea of utilizing lookahead information to update the played policy is related to a control concept called Model Predictive control [MPC, Camacho et al., 2007], also known as receding horizon control. In complex control problems, it could be challenging to predict the system behavior in long horizons due to errors in the model or nonlinear dynamics. To mitigate this, MPC designs a control scheme for much shorter horizons, where the model is approximately accurate, oftentimes on a simplified (e.g., linearized) model. Then, to correct the deviations due to modeling errors, MPC continuously updates the controller according to the actual system state. In our context, the localized system estimates could be seen as lookahead information. Similar ideas have also been used for planning in reinforcement learning settings [Tamar et al., 2017, Efroni et al., 2019a, 2020]. Yet, these concepts are mainly used to improve planning efficiency and account for nonlinearities/disturbances in the model. A few notable exceptions study the competitive ratio (and/or dynamic regret) between controllers with partial lookahead information to ones with full information [Li et al., 2019, Zhang et al., 2021a, Lin et al., 2021, 2022] \u2013 a different measure than ours. Moreover, there is no clear way to translate any of these results into tabular problems. ", "page_idx": 1}, {"type": "text", "text": "The special case of one-step lookahead, where immediate rewards are observed before making a decision, has been studied in various problems. Possibly the most famous instance of such a problem is the prophet inequality. There, a set of known distributions is sequentially observed, and agents choose whether to either take a reward and end the interaction or discard it and move to the next distribution [Correa et al., 2019b]. This could be formulated as a chain environment with two actions \u2013 a rewarding action that moves to an absorbing state and a non-rewarding one that moves forward in the chain. A generalization of the prophet problem to resource allocation over Markov chains was studied in [Jia et al., 2023]. To obtain a CR that is independent of the interaction length, the authors allow both the online and offline algorithms to choose their initial state. In both cases (and many other problems), the CR is measured between a one-step lookahead and a full lookahead agent, which observes all rewards in advance. In contrast, we measure the CR between no-lookahead agents and all possible lookaheads, so our results are complementary. ", "page_idx": 1}, {"type": "text", "text": "Finally, Garg et al. [2013] studied another related resource allocation model. In their work, the competitive ratio for Markov Decision Processes is measured between an online agent with access to the $L$ -future reward distributions and transition probabilities, versus an agent who observes all statistical information in advance. A similar adversarial notion is also presented specifically for resource allocation. In contrast, we assume that the distributions are known to both agents and only the oracle observes reward realizations. ", "page_idx": 1}, {"type": "text", "text": "2 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We work under the episodic tabular reinforcement learning model. The environment is modeled as a Markov Decision Process (MDP), defined by the tuple $(\\bar{S},\\bar{A},H,P,R,\\mu)$ , where $\\boldsymbol{S}$ is the state space $(|S|=S)$ , $\\boldsymbol{\\mathcal{A}}$ is the action space $(|\\mathcal{A}|=A)$ , $H\\in\\mathbb{N}$ is the horizon, $P$ is the transition kernel, $R$ is the stochastic reward and $\\mu\\in\\Delta_{S}$ is the initial state distribution. At the first timestep, an initial state is generated $s_{1}\\sim\\mu$ . Then, at every timestep $h\\in[H]\\triangleq\\{1,\\cdot\\cdot,H\\}$ , given environment state $s_{h}\\in{\\mathcal{S}}$ , the agent performs an action $a_{h}\\in A$ , obtains a stochastic reward $\\dot{R}_{h}(s_{h},a_{h})$ and transitions to a state $s_{h+1}\\in\\mathcal S$ with probability $P_{h}(s_{h+1}|s_{h},a_{h})$ . For brevity, we use the notation $\\mathcal{X}=[H]\\times\\mathcal{S}\\times\\mathcal{A}$ . ", "page_idx": 2}, {"type": "text", "text": "We assume that rewards at different timesteps are independent, but allow them to be arbitrarily correlated between state-actions at the same step. We denote the expected reward by $r_{h}(s,a)$ and assume that the rewards are non-negative.1 Rewards and transitions are always assumed to be mutually independent, and transitions are independent between rounds. While we focus on nonstationary models, where the reward and transition distributions could depend on the timestep $h$ , our analysis techniques could be easily adapted to stationary models, where the distributions are timestep-independent, and all the proofs in the appendix also state the results for stationary models. ", "page_idx": 2}, {"type": "text", "text": "2.1 Lookahead Policies and Values ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We assume w.l.o.g. that all rewards are generated before the interaction starts. We denote by $\\mathcal{R}_{h}\\:=\\:\\{R_{h}(s,a)\\}_{s\\in S,a\\in\\mathcal{A}}$ , the set of all rewards at timestep $h$ and by $\\mathcal{R}_{h}^{L}\\,=\\,\\{\\mathcal{R}_{t}\\}_{t=h}^{h+L-1}$ , the $L$ -lookahead reward information, containing all reward information for $L$ -timesteps starting from $h$ By convention, $\\mathcal{R}_{h}^{0}$ is the empty set. A lookahead policy is defined as follows. ", "page_idx": 2}, {"type": "text", "text": "Definition 1. A lookahead policy $\\pi^{L}:[H]\\times\\mathcal{S}\\times\\mathbb{R}^{S A L}\\mapsto\\Delta_{A}$ is a policy that for each timestep $h_{i}$ observes the state $s_{h}$ and the lookahead reward information $\\mathcal{R}_{h}^{L}$ and generates an action $a_{h}$ with probability $\\pi_{h}^{L}(a_{h}|s_{h},\\mathcal{R}_{h}^{L})$ . The set of all lookahead policies is denoted by $\\Pi^{L}$ . ", "page_idx": 2}, {"type": "text", "text": "For example, a one-step lookahead policy observes the immediate rewards at the current state before acting, while a full lookahead policy has access to all reward realizations before the interaction starts. When $L=0$ , the policy only depends on the state and is Markovian; we therefore denote $\\Pi^{\\mathcal{M}}=\\Pi^{0}$ . ", "page_idx": 2}, {"type": "text", "text": "The goal of any agent is to maximize its cumulative reward, also known as the value, $V^{L,\\pi}\\,=$ $\\begin{array}{r}{\\mathbb{E}\\Big[\\dot{\\sum_{h=1}^{H}{R_{h}}(s_{h},a_{h})}\\vert s_{1}\\sim\\mu,\\pi\\Big]}\\end{array}$ . For brevity, we omit the conditioning on the initial state distribution. The optimal value given a lookahead $L$ is $V^{L,*}=\\operatorname*{sup}_{\\pi^{L}\\in\\Pi^{L}}V^{L,\\pi^{L}}$ . If we want to emphasize that an environment parameter (say, the transition kernel $P$ ) is fixed, we shall specify it, e.g., $V^{L,\\pi}(P,r)$ ", "page_idx": 2}, {"type": "text", "text": "We analyze the relation between the \u2018standard value\u2019 of an agent that plays optimally using no future information $(V^{0,*})$ and a lookahead agent that observes the $L$ -future rewards before acting $(V^{L,*})$ Formally, let $\\mathcal{D}(r)$ be the set of all non-negative distributions with rewards expectations $r_{h}(s,a)$ . The $L$ -lookahead competitive ratio (CR) is defined as ", "page_idx": 2}, {"type": "equation", "text": "$$\nC R^{L}(P,r)=\\operatorname*{inf}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}\\frac{V^{0,*}(P,r)}{V^{L,*}(P,r)}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "That is, the competitive ratio is the worst-possible multiplicative loss of the standard (no-lookahead) policy, compared to an $L$ -lookahead policy, given fixed transition kernel and expected rewards. For ratios to be well-defined, we follow the convention that any division by zero equals $+\\infty$ . ", "page_idx": 2}, {"type": "text", "text": "Remark 1. We emphasize that the reward distributions are known in advance to both the nolookahead and the $L$ -step lookahead agents, in striking contrast to adversarial settings. In the latter, the reward could be arbitrary and is only given to an oracle agent. In particular, any upper bound on $C R^{L}({\\cal P},r)$ will also apply to adversarial settings. ", "page_idx": 2}, {"type": "text", "text": "Remark 2. Without lookahead information, $P$ and $r$ suffice to calculate the optimal value [Sutton and Barto, 2018], so one could also write $\\begin{array}{r}{C R^{L}(P,r)=\\frac{V^{0,*}(P,r)}{\\operatorname*{sup}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}V^{L,*}(P,r)}.}\\end{array}$ . ", "page_idx": 2}, {"type": "text", "text": "We similarly study the $L$ -lookahead CR for the worst-case reward expectations, defined as2 $C R^{L}(P)\\,=\\,\\operatorname*{inf}_{r_{h}\\in[0,1]^{S A}}C R^{L}(P,r)$ . Finally, we study the CR for the worst-case environment ", "page_idx": 2}, {"type": "text", "text": "$P$ and initial state distribution $\\mu$ , denoted by $C R^{L}$ . In particular, we show that stationary environments achieve near-worst-case CR. ", "page_idx": 3}, {"type": "text", "text": "Interpretation: the gain from lookahead information. The no-lookahead agent is the standard agent used throughout the RL literature and serves as an \u2018off-the-shelf\u2019 agent. As such, the competitive ratios quantify the potential gain when moving from classic RL settings to agents that utilize future reward information. While using future information always increases the value, it often comes at some price \u2013 either because access to such information is costly, or since lookahead algorithms are much more complicated and computationally expensive. The CRs analyzed in the paper can help determine whether the potential gain is worth the price \u2013 and choosing which agent to deploy. ", "page_idx": 3}, {"type": "text", "text": "2.2 Occupancy Measures ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Occupancy measures are the visitation probabilities of an agent in different state-actions. In particular, for any (potentially lookahead) policy, we define $\\bar{d_{h}^{\\pi}}(s)\\,=\\,\\mathrm{Pr}\\{s_{h}=s\\}$ and $d_{h}^{\\pi}(s,a)\\,=$ $\\operatorname*{Pr}\\{s_{h}=s,a_{h}=a\\}$ , where randomness is w.r.t. both transitions, rewards and internal policy randomization, given that actions are generated from the policy $\\pi\\in\\Pi^{L}$ . For $h=1$ , the state distribution only depends on the initial state distribution $\\mu$ , and we use $d_{1}^{\\pi}(s),d_{1}(s)$ and $\\mu(s)$ interchangeably. We also define the conditional occupancy measure as $d_{h}^{\\pi}(s|s_{t}=s^{\\prime})=\\operatorname*{Pr}\\{s_{h}=s|s_{t}=s^{\\prime}\\}$ for some $t\\leq h$ and similarly use $d_{h}^{\\pi}(s,a|s_{t}=s^{\\prime})$ . Intuitively, this is the reaching probability from state $s^{\\prime}$ at time $t$ to a state $s$ at time $h$ when playing a policy $\\pi$ . Without lookahead information, it is well-known that the set of occupancy measures induced by Markovian policies is a convex compact polytope [Altman, 2021], and the value of any Markovian policy could be expressed using occupancies by ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{V^{0,\\pi}=\\mathbb{E}\\bigg[\\displaystyle\\sum_{h=1}^{H}R_{h}(s_{h},a_{h})\\bigg]=\\mathbb{E}\\bigg[\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{X}}\\mathbb{1}\\{s_{h}=s,a_{h}=a\\}R_{h}(s,a)\\bigg]}}\\\\ {{\\mathrm{~}=\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{X}}\\mathrm{Pr}\\{s_{h}=s,a_{h}=a\\}\\mathbb{E}[R_{h}(s,a)]=\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{\\pi}(s,a)r_{h}(s,a)=d^{\\pi^{T}}r.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Finally, denote the optimal reaching probability to a state $s\\ \\in\\ S$ as $d_{h}^{*}(s)\\,=\\,\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\,d_{h}^{\\pi}(s)$ . Notice that rewards and transitions are independent, so reward information does not affect the optimal reaching probability and it is sufficient to look at Markovian policies. Moreover, after reaching a state $s$ , an agent could always deterministically choose an action $a$ , so $d_{h}^{*}(s,a)\\;=\\;$ $\\mathrm{max}_{\\pi\\in\\Pi^{\\mathcal M}}\\;d_{h}^{\\pi}(s,a)=d_{h}^{*}(s)$ . Similarly, we define the optimal conditional reaching probability as $d_{h}^{*}(s|s_{t}=s^{\\prime})=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}{d_{h}^{\\pi}\\big(s|s_{t}=s^{\\prime}\\big)},$ , and as the for non-conditional occupancy measures, we have that $d_{h}^{*}(s,a|s_{t}=\\bar{s^{\\prime}})=\\ddot{d}_{h}^{*}(s|s_{t}=s^{\\prime})$ . ", "page_idx": 3}, {"type": "text", "text": "3 Competitiveness Versus Full Lookahead Agents ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Before analyzing the CR for the full range of lookahead values, we start by studying the full lookahead case, where all rewards are observed before the interaction starts. This regime is applicable, for example, in goal-oriented problems, where goals are given to the agent before an episode starts [Andrychowicz et al., 2017]. Notably, we show a link between the CR for the worst-case reward expectations, $C R^{H}(P)$ , and existing complexity measures in offilne RL and reward-free exploration. While the results of this section will later be covered by the more general multi-step lookahead, this case gives valuable insights on the worst-case distributions. Moreover, much of the proof techniques presented in this section will later be used to prove the results for the multi-step lookahead. ", "page_idx": 3}, {"type": "text", "text": "When all rewards are observed before the interaction starts, each instantiation of the reward is equivalent to an RL problem with known deterministic rewards. In particular, the optimal policy given the reward is Markovian, and using the value formulation in Equation (2), we have ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{H,*}(P,r)=\\mathbb{E}\\left[\\underset{\\pi\\in\\Pi^{M}}{\\operatorname*{max}}\\sum_{\\substack{(h,s,a)\\in\\mathcal{X}}}d_{h}^{\\pi}(s,a)R_{h}(s,a)\\right]\\leq\\mathbb{E}\\left[\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}\\underset{\\pi\\in\\Pi^{M}}{\\operatorname*{max}}\\,d_{h}^{\\pi}(s,a)R_{h}(s,a)\\right]}\\\\ &{\\quad\\quad=\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}d_{h}^{*}(s)\\mathbb{E}[R_{h}(s,a)]=\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}d_{h}^{*}(s)r_{h}(s,a).}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "At first glance, this bound seems extremely crude \u2013 the agent optimally navigates to collect all the expected rewards. Yet, at a second glance, it gives intuition on the worst-case distribution: a situation where only one reward at a single state is realized in every episode. Then, full lookahead agents can optimally navigate to this state and still collect all the realized rewards. While we cannot fully enforce a single reward realization (due to the independence of rewards in different timesteps), we can approximate this behavior by focusing on long-shot distributions [Hill and Kertz, 1981]. ", "page_idx": 4}, {"type": "text", "text": "Definition 2. Rewards have long-shot distributions with parameter $\\epsilon\\in(0,1)$ and expectation r if ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\forall h\\in[H],s\\in S,a\\in\\mathcal{A}:\\qquad\\qquad R_{h}(s,a)=\\left\\{\\begin{array}{l l}{r_{h}(s,a)/\\epsilon}&{w.p.\\ \\epsilon}\\\\ {0}&{w.p.\\ 1-\\epsilon}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "independently for all $h,s,a$ . We also use the notation $R\\sim L S_{\\epsilon}(r)$ . ", "page_idx": 4}, {"type": "text", "text": "Notice that for any given \u03f5, long-shot distributions are bounded; thus, long-shot rewards could always be scaled to be supported by $[0,1]$ without affecting the CR. Moreover, when $\\epsilon\\ll1/S A H$ , with high probability, at most a single reward will be realized, and the bound in Equation (3) is achieved in equality as $\\epsilon\\rightarrow0$ . Formally, the CR versus a full lookahead agent is characterized as follows: ", "page_idx": 4}, {"type": "text", "text": "Theorem 1. [CR versus Full Lookahead Agents; see Appendix $A$ for the proof] ", "page_idx": 4}, {"type": "text", "text": "Worst-case environments: For all environments, $\\begin{array}{r}{C R^{H}\\geq\\operatorname*{max}\\Bigl\\{\\frac{1}{S A H},\\frac{1}{A^{H}}\\Bigr\\}}\\end{array}$ . Also, for any $\\delta\\in(0,1)$ there exist stationary environments with rewards over $[0,1]$ s.t. if $S=A^{n}+1$ for $n\\in\\{0,\\ldots,H-1\\}$ , then $\\begin{array}{r}{C R^{H}(P,r)\\leq\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)}}\\end{array}$ , and if $^{'}S\\geq A^{H}-1$ , then $\\begin{array}{r}{C R^{H}(P,r)\\leq\\frac{1+\\delta}{A^{H}}}\\end{array}$ . ", "page_idx": 4}, {"type": "text", "text": "Proof Sketch. Part I. Recalling Remark 2 and Equation (2), to prove the first part of the proposition, one only needs to calculate the full lookahead value for the worst-case distribution. An upper bound for this value is already given in Equation (3); we directly calculate the value for long-shot distributions $L S_{\\epsilon}(r)$ and show that this bound is achieved at the limit of $\\epsilon\\to0$ . ", "page_idx": 4}, {"type": "text", "text": "Part II. The proof of the second part of the theorem utilizes the previously calculated $C R^{H}({P},{r})$ to optimize for the worst-case expectations. This is done using the minimax theorem, exchanging the reward minimization and the policy maximization. To make the internal maximization problem concave, we move from the space of Markovian policies to the set of occupancy measures induced by Markovian policies, which is convex [Altman, 2021]. To make the reward minimization convex, we show that the denominator can be converted to the constraint $\\begin{array}{r}{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a)=1}\\end{array}$ . Then, the minimax theorem can be applied, and we explicitly solve the resulting optimization problem. The formal application of the minimax theorem and its solution is done in Lemma 1 in the appendix. ", "page_idx": 4}, {"type": "text", "text": "Part III. The proof of the final statement is further divided into two parts. ", "page_idx": 4}, {"type": "text", "text": "Lower bounding $C R^{H}$ . The lower bound $C R^{H}\\,\\geq\\,1/A^{H}$ is inductively achieved from the dynamic programming equations for both the no-lookahead and full lookahead values. The bound $C R^{H}\\stackrel{.}{\\geq}1\\overline{{/}}S A H$ is obtained by choosing a specific policy $\\pi\\in\\Pi^{\\mathcal{M}}$ and substituting in $C R^{H}(P)$ : ", "page_idx": 4}, {"type": "text", "text": "the Markovian policy whose occupancy is d\u03c0hu (s, a) = SA1H (h\u2032,s\u2032,a\u2032)\u2208X $\\begin{array}{r}{d_{h}^{\\pi_{u}}(s,a)\\,=\\,\\frac{1}{S A H}\\sum_{(h^{\\prime},s^{\\prime},a^{\\prime})\\in\\mathcal{X}}d_{h}^{\\pi_{h^{\\prime},s^{\\prime},a^{\\prime}}^{*}}(s,a)}\\end{array}$ d\u03c0hh\u2032,s\u2032,a\u2032(s, a), where $\\pi_{h,s,a}^{*}\\in\\Pi^{\\mathcal{M}}$ is a policy that maximizes the reaching probability to $(h,s,a)\\in\\mathcal{X}$ . ", "page_idx": 4}, {"type": "text", "text": "Upper bounding $C R^{H}$ \u2013 designing a worst-case environment. We show that a modified tree graph achieves a near-worst-case competitive ratio. In tree-based MDPs, each state represents a node in a tree, with the initial state as its root, and actions take the agent downwards through the tree. In our example, rewards are long-shots located at the leaves of such trees. However, this structure, by itself, does not lead to the worst-case bound. Intuitively, a standard RL agent would navigate to the leaf with the maximal expected reward, while an agent with a full lookahead would navigate to the leaf with the highest reward realization. Since there are at most $S$ leaves with $A$ actions in each, this would lead to $\\begin{array}{r}{C R^{H}(P)\\approx\\frac{1}{S A}}\\end{array}$ . This is improved by a simple modification: at the root of the tree, we allocate one action to \u2018delay\u2019 the entrance to the tree and stay in the root (as illustrated in Figure 2 in the appendix). While agents without lookahead have no incentive to use this action, a full lookahead agent could predict when a reward will be realized and enter the tree at a timing that allows its collection. When $H$ is large enough (compared to the tree depth), this allows the full lookahead agent to have approximately $H$ attempts to collect a reward and lead to the additional $H$ -factor (up to log factors). The proof could be extended to any value of $S$ by allowing the tree to be incomplete \u2013 we refer the readers to the remark at the end of Proposition 1 in the appendix for more details. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Surprisingly, the CR for the worst-case reward expectation $C R^{H}(P)$ is the inverse of a concentrability coefficient that appears in many different RL settings, called the coverability coefficient. In particular, it affects the learning complexity in both online and offilne RL settings, where agents must learn to act optimally either based on logged date or interaction with the environment [Xie et al., 2022].3It also has a central role in reward-free exploration, where agents aim to learn the environment so that they can perform well for any given reward function [Al-Marjani et al., 2023]. We emphasize that the lookahead setting is fundamentally different \u2013 we assume that all agents have exact information on both the dynamics and reward distributions and ask about the multiplicative performance improvement due to additional knowledge on reward realization. In contrast, in learning settings, the main complexity is usually in learning the dynamics, and the rewards are oftentimes assumed to be deterministic. Moreover, the analyzed quantities are either regret measures or sample complexity, which cannot be directly linked to the competitive ratio. ", "page_idx": 5}, {"type": "text", "text": "The last part of Theorem 1 shows that tree-like environments with a delaying action at their root exhibit worst-case CR. Similar delay mechanisms were previously used to prove regret and PAC lower bounds for nonstationary MDPs [Domingues et al., 2021, Tirinzoni et al., 2022], though with a major difference \u2013 in previous works, a nonstationary reward distribution is used to force the agent to learn when to traverse the tree and where to navigate, and the reward is time-extended (obtained for $\\Omega(H)$ rounds). In contrast, our formulation is fully stationary and a reward can only be collected once. Still, the lookahead agent can use the delay to linearly increase the reward-collection probability, without any need to create time-extended rewards. ", "page_idx": 5}, {"type": "text", "text": "4 Competitiveness Versus Multi-Step Lookahead Agents ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We now generalize the results of Section 3 and analyze the competitive ratio compared to $L$ -lookahead agents, for any possible lookahead range $L\\,\\in\\,[H]$ . We also give special attention to the case of one-step lookahead, where the immediate rewards are revealed before taking an action. ", "page_idx": 5}, {"type": "text", "text": "Inspired by the full lookahead case, we focus on long-shot rewards. For such rewards, an agent would expect to see no more than a single reward during an episode, which would only be discovered $L$ -steps in advance. As such, a reasonable strategy would play a Markovian policy that maintains a \u2018favorable\u2019 state distribution, such that whenever and wherever a future reward is realized, the agent could optimally navigate to it. Letting $t_{L}(h)$ be the time step where the $h$ -step rewards are revealed to an $L$ -lookahead agent, this corresponds with the following worst-case value: ", "page_idx": 5}, {"type": "text", "text": "Proposition 2. For any $L\\in[H]$ , let $t_{L}(h)=\\operatorname*{max}\\{h-L+1,1\\}$ . Then, it holds that ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}V^{L,*}(P,r)=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The proof can be found at Appendix B. It is comprised of calculating the value of long-shot rewards $R\\sim L S_{\\epsilon}(r)$ at the limit when $\\epsilon\\rightarrow0$ and then showing that the same quantity also serves as an upper bound of the value for all reward distributions. ", "page_idx": 5}, {"type": "text", "text": "For full lookahead, we have $t_{H}(h)=1$ , and $d_{t_{H}(h)}^{\\pi}$ becomes the initial state distribution $\\mu$ . This leads to the same value as in Equation (3). The second extremity is when $L=1$ and $t_{1}(h)=h$ . Then, the conditional occupancy is ${\\bar{d_{h}^{*}}}(s|s_{t_{L}(h)}=s^{\\prime})=\\mathbb{1}\\{s=s^{\\prime}\\}$ and we get the simplified expression ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}V^{1,*}(P,r)=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Notably, this is the value of an agent that collects the rewards of all the actions in visited states (regardless of the action it actually played) but has no lookahead information. ", "page_idx": 5}, {"type": "text", "text": "Recalling Remark 2, one could use Proposition 2 to directly calculate $C R^{L}({\\cal P},r)$ . This, in turn, allows analyzing the worst-case reward expectations and environment, as stated in the following: ", "page_idx": 6}, {"type": "text", "text": "Theorem 3. [CR versus Multi-Step Lookahead Agents; see Appendix B for the proof] ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\colon C R^{L}(P,r)=\\frac{\\operatorname*{max}_{\\pi\\in\\Pi}\\ M\\ \\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s,a)}{\\operatorname*{max}_{\\pi\\in\\Pi}\\ M\\ \\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "equation", "text": "$$\nC R^{L}(P)=\\operatorname*{min}_{\\pi^{*}\\in\\Pi^{M}}\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi^{*}}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Worst-case environments: For all environments, $\\begin{array}{r}{C R^{L}\\geq\\operatorname*{max}\\biggr\\{\\frac{1}{S A H},\\frac{1}{(H-L+1)A^{L}}\\biggr\\}}\\end{array}$ x SA1H ,(H\u2212L1+1)AL . Also, for any $\\delta\\ \\in\\ (0,1)$ there exist stationary environments with rewards over $[0,1]$ s.t. if $S\\,=\\,A^{n}\\,+\\,1$ for $n\\;\\in\\;\\{0,\\ldots,L-1\\}$ , then $\\begin{array}{r}{C R^{\\dot{L}}(P,r)\\;\\leq\\;\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)}}\\end{array}$ , and if $S\\;\\geq\\;A^{L}\\,+\\,1,$ , then $\\begin{array}{r}{C R^{L}(P,r)\\leq\\frac{1+\\delta}{(H-L+1)(A^{L}-1)}.}\\end{array}$ ", "page_idx": 6}, {"type": "text", "text": "Proof Sketch. The first part of the theorem is a direct result of Proposition 2 and Remark 2. For the second part, we first rewrite ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{C R^{L}(P,r)=\\underset{\\pi^{*}\\in\\Pi^{M}}{\\operatorname*{min}}\\underset{\\pi\\in\\Pi^{M}}{\\operatorname*{max}}\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi^{*}}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})},}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "and as in the full lookahead case, we apply the minimax theorem using Lemma 1. However, direct application would require calculating the infimum over $\\pi^{*}\\,\\in\\,\\Pi^{\\mathcal{M}}$ , and not a minimum. Thus, compared to the full lookahead, we also need to prove that the minimum is obtained in this set. We do so in Lemma 2, relying on the set of occupancy measures being a convex compact polytope. ", "page_idx": 6}, {"type": "text", "text": "In the last part, we use the same tree example to upper bound $C R^{L}({\\cal P},r)$ . The lower bound is proven using a reduction from the full lookahead bound. In particular, the bound of $1/S A H$ trivially holds from the full lookahead case. For the second lower bound, we devise a Markovian policy $\\pi_{u}$ such that for the appropriate choice of reward functions $r^{i}$ , we prove that ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\frac{V^{0,\\pi_{u}}(P,r)}{V^{L,*}(P,r)}\\ge\\frac{1}{H-L+1}\\operatorname*{min}_{\\substack{i\\in[H-L+1],\\ldots}}\\Biggl\\{\\frac{\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}=s^{\\prime})}{\\sum_{(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{*}(s|s_{i}=s^{\\prime})}\\Biggr\\}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Each of the terms is the competitive ratio versus a full lookahead agent with horizon $L$ that starts acting at $s_{i}=s^{\\prime}$ . Hence, by Theorem 1, all terms are bounded by $\\frac{\\d H}{A^{L}}$ . To elaborate, the reward $r^{i}$ limits the reward only to the new timesteps the lookahead agent gets to observe when it reaches step $i$ The policy $\\pi_{u}$ is a mixture (in the occupancy space) of policies $\\pi_{i}$ that start by playing the Markovian policy that maximizes the value of Proposition 2, up to timestep $i$ , and then maximizes $r^{i}$ . \u53e3 ", "page_idx": 6}, {"type": "text", "text": "Theorem 3 extends the full lookahead results of Theorem 1 and tightly characterizes the CR for the full spectrum of lookaheads, both as a function of the environment and for the worst-case environments. Notice that even though lookahead policies are highly non-Markovian, all bounds are expressed using Markovian policies. ", "page_idx": 6}, {"type": "text", "text": "One-step lookahead. In the case where the immediate reward is observed before acting, Theorem 3 proves that even for the worst-case environment, $\\begin{array}{r}{C R^{1}=\\Theta\\Big(\\frac{1}{H A}\\Big)}\\end{array}$ , namely, independent of the size of the state-space. Moreover, for any transition kernel $P$ , the CR is given by ", "page_idx": 6}, {"type": "equation", "text": "$$\nC R^{1}(P)=\\operatorname*{min}_{\\pi^{*}\\in\\Pi^{\\mathcal{M}}}\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{d_{h}^{\\pi^{*}}(s)}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "While the coverability coefficient of $C R^{H}(P)$ requires a policy $\\pi$ to cover all states simultaneously in proportion to their optimal reaching probability, $C R^{1}({P})$ provides a weaker coverability notion; it requires being able to cover any pre-known state-distribution induced by a Markov policy $\\pi^{*}$ . We emphasize that $\\pi$ must cover this distribution using all actions, so imitating the behavior of $\\pi^{*}$ might be challenging \u2013 with a ratio of $1/A H$ as the worst case. ", "page_idx": 6}, {"type": "image", "img_path": "URyeU8mwz1/tmp/b0b51e54f654dd28d67d356828d71b41edf2f59f88adee997e884a6aa993a33c.jpg", "img_caption": ["can either move forward in the chain or transition to an absorbing terminal state. ", "Figure 1: Examples: CR for grid and chain environments. ", "corner of an $n\\times n$ grid and can move either up or right, until ending at the top-right corner after $2n-1$ steps. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Thus, $C R^{1}({P})$ could be seen as an intermediate point between the coverability coefficient and single-policy coverability [Xie et al., 2022], defined by the ratio between the state-action occupancy of the optimal policy and a single data distribution. Yet, Xie et al. [2022] argue that this notion is too weak to allow any guarantees. It is of interest to investigate whether our refined notion, which requires covering all valid state distributions, mitigates the issues they present and allows deriving meaningful results in offline and online RL. ", "page_idx": 7}, {"type": "text", "text": "In general, one could interpret the ratios $C R^{L}({\\cal P})$ as a class of decreasing4 (inverse) concentrability coefficients, starting from the coverability of all pre-known state distributions $(C R^{1}(P))$ and ending with the coverability coefficient $(C R^{H}(\\dot{P}))$ . Thus, it is intriguing to further study the connection of these values to other domains in which concentrability naturally arises. ", "page_idx": 7}, {"type": "text", "text": "5 Examples ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We now present several MDP structures and analyze their competitive ratio for various lookaheads. ", "page_idx": 7}, {"type": "text", "text": "Disguised contextual bandit [Al-Marjani et al., 2023]. Maybe the most basic scenario is when actions do not affect the transitions, i.e., $P_{h}(s^{\\prime}|s,a)=P_{h}(s^{\\prime}|s)$ for all possible $(h,s,a,s^{\\prime})$ . Specifically, the state distribution is independent of the played policy \u2013 there exists an occupancy measure $d_{h}$ such that for all policies, $d_{h}^{\\pi}(s)=d_{h}(s)$ . Thus, it also holds that $d_{h}^{*}(s)=d_{h}(s)$ , and ", "page_idx": 7}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{h,s,a}\\frac{d_{h}^{\\pi}(s,a)}{d_{h}^{*}(s)}=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{h,s,a}\\frac{d_{h}(s)\\pi_{h}(a|s)}{d_{h}(s)}=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{h,s,a}\\pi_{h}(a|s)=\\frac{1}{A}.\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "The last equality holds since $\\pi_{h}(a|s)\\in\\Delta_{\\mathcal{A}}$ . Using the same arguments, one could also obtain this CR for one-step lookahead, so by the monotonicity of the CR in the lookahead, $C R^{L}(P)={\\textstyle{\\frac{1}{A}}}$ for all $L\\in[H]$ . This is to be expected \u2013 without control over the dynamics, the best lookahead agents could do is to maximize immediate rewards, and any additional lookahead information is useless. Then, in each state, knowing the realization can only increase the reward by a factor of Emaxa Ea[Rhh(s,a)] \u2264A. Delayed trees. This is the example described in the proofs of the main results, also detailed in Proposition 1 and depicted in Figure 2. In such environments, we get a worst-case CR of $C R^{L}(P,r)\\!=$ $\\begin{array}{r l}{\\Theta\\biggl(\\operatorname*{max}\\biggl\\{\\frac{1}{(H-L)A^{L}},\\frac{1}{S A H}\\biggr\\}\\biggr)}\\end{array}$ . These trees are an extreme case where lookahead information is not only used to collect immediate rewards but rather to navigate to long-term rewards. Chain MDPs. We go back to a bandit-like scenario and add limited control on the dynamics, in the form of a chain. The agent starts at the head of the chain $(s_{1})$ , and at each node $k$ of the chain, it could choose to advance to the next node by taking the action $a=a_{1}$ or to move to an absorbing terminal state $s_{T}$ by taking any other action. The environment is depicted in Figure 1(a). ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "One special problem that falls into this structure is the prophet inequality problem. In particular, assume that reward can only be obtained when moving from the chain to the terminal state $(\\forall k,a,\\ r_{h}(s_{k},a_{1})=r_{h}(s_{T},a)\\stackrel{.}{=}0)$ . Thus, at each node of the chain, the agent chooses whether to collect a reward and effectively end the interaction or discard it and move forward in the chain. In other words, the problem becomes an optimal-stopping problem. As such, it is reasonable to allow the agent to see the instantaneous rewards before deciding whether to stop, leading to one-step lookahead agents. This problem has numerous applications, especially in the context of posted-price mechanisms [Correa et al., 2017, 2019a]. A classical result is that the CR between one-step lookahead and full lookahead agents is always bounded by $1/2$ [Hill and Kertz, 1981]. ", "page_idx": 8}, {"type": "text", "text": "could reach all rewards and collect them, thus collecting $\\begin{array}{r}{V^{H,*}(P_{\\ast}\\boldsymbol{r})=\\sum_{\\iota.\\ k=1}^{H}\\sum_{a\\in\\mathcal{A}}r_{k}(s_{k,a})}\\end{array}$ (as in $\\pi_{k}\\overline{{\\left(s_{k}\\right)}}=a_{1}$ while effectively collecting all rewards and achieving the same value (see Equation (4)). In contrast, a no-lookahead agent would have to choose a single reward to collect, obtaining a value of $V^{0,*}(P,r)=\\operatorname*{max}_{k\\in[H],a\\in A}r_{k}(s_{k},a)$ . The resulting CR for this reward structure would be ", "page_idx": 8}, {"type": "equation", "text": "$$\nC R^{H}(P,r)=C R^{1}(P,r)=\\frac{\\operatorname*{max}_{k\\in[H],a\\in\\mathcal{A}}r_{k}(s_{k},a)}{\\sum_{k=1}^{H}\\sum_{a\\in\\mathcal{A}}r_{k}(s_{k},a)}\\geq\\frac{1}{(A-1)H},\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "where the inequality is since there are only $A-1$ rewarding actions, and equality is achieved when all expected rewards are equal. Notably, the reward structure in the prophet problem is near-worst-case; one could verify that for chain MDPs, it holds that $C R^{H}(P)\\stackrel{\\ldots}{\\geq}\\left\\{1-\\frac{\\mathrm{1}}{e}\\right\\}\\frac{1}{A H}$ . This is due to the second part of Theorem 1, using the following policy: for all chain states $k\\in[H]$ , move forward w.p. $\\begin{array}{r}{\\pi_{k}(a_{1}|\\dot{s}_{k})=1-\\frac{1}{H}}\\end{array}$ and play any other action $i>1$ w.p. $\\begin{array}{r}{\\pi_{k}(a_{i}|s_{k})=\\frac{\\mathbb{I}}{(A-1)H}}\\end{array}$ . At the absorbing state $s_{T}$ , play uniformly $\\pi_{h}(a_{i}|s_{T})=1/A$ . This simple example provides two important insights. ", "page_idx": 8}, {"type": "text", "text": "Hardness versus one-step lookahead: chain MDPs exhibit the worst-case CR versus one-step lookahead agents. A central reason is that to move towards rewarding states (forward in the chain), agents must take non-rewarding actions $(a_{1})$ \u2013 there is a tradeoff between gathering instantaneous rewards and moving to future rewarding states. ", "page_idx": 8}, {"type": "text", "text": "Easiness versus full lookahead: as previously mentioned, the CR between one-step and full lookahead agents is the well-known prophet inequality and is at least $1/2$ ; In other words, for chain MDPs, the information-gain from one-step-to full lookahead is marginal compared to the value of one-step versus no-lookahead. This is mainly because navigating to rewarding states is especially easy in chain MDPs \u2013 the agent only has to move forward. In contrast, in environments where navigating to rewarding states is difficult (e.g., the tree environment described in the main results), there is a substantial gain to the full lookahead. ", "page_idx": 8}, {"type": "text", "text": "These insights motivate two natural assumptions that reduce the CR. ", "page_idx": 8}, {"type": "text", "text": "Dense rewards. Assume that in all states where the reward can be strictly positive, it holds that $\\begin{array}{r}{\\frac{\\operatorname*{max}_{a}r_{h}(s,a)}{\\operatorname*{min}_{a}r_{h}(s,a)}\\leq C}\\end{array}$ . That is, if there exists one rewarding action at a state, all its actions yield some minimal reward. States are allowed to yield zero rewards for all actions. When this assumption holds, agents could navigate to rewarding future states and still collect rewards, mitigating the issue observed in the chain MDPs. Letting $\\begin{array}{r}{\\pi^{*}\\'\\in\\arg\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s)}\\end{array}$ , we have ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C R^{1}(P,r)=\\frac{\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s,a)}{\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s)}\\geq\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi^{*}}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi^{*}}(s)}}\\\\ &{\\qquad\\qquad\\geq\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}\\frac{1}{A C}\\sum_{a^{\\prime}\\in\\mathcal{A}}r_{h}(s,a^{\\prime})d_{h}^{\\pi^{*}}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi^{*}}(s)}\\overset{(*)}{\\geq}\\frac{1}{A C},}\\end{array}\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "where $(*)$ is since $\\begin{array}{r}{\\sum_{a}d_{h}^{\\pi^{*}}(s,a)=d_{h}^{\\pi^{*}}(s)}\\end{array}$ . Thus, dense rewards remove the horizon dependence in the CR, and for sm all $C$ , we get a similar CR as in the disguised contextual bandit problem. ", "page_idx": 8}, {"type": "text", "text": "Ergodic MDPs. One way to make the navigation task easier is to limit the control of the agent on the state. In [Al-Marjani et al., 2023], the authors suggest looking at MDPs whose transition kernels are near-uniform. Formally, for $0<\\beta<\\alpha<1$ , they defined the family of transitions ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\mathcal{P}_{\\alpha,\\beta}=\\left\\{q\\in\\mathbb{R}_{+}^{S}:\\sum_{i=1}^{S}q_{i}=1,\\operatorname*{max}_{i}q_{i}\\leq S^{\\alpha-1},\\operatorname*{min}_{i}q_{i}\\geq\\frac{1-S^{\\beta-1}}{S-1}\\right\\},\n$$", "text_format": "latex", "page_idx": 9}, {"type": "text", "text": "and assumed that $P_{h}(\\cdot|s,a)\\,\\in\\,\\mathcal{P}_{\\alpha,\\beta}$ for all $h,s,a$ . As $\\alpha$ goes to zero, the transition distribution becomes uniform, while at the limit of $\\alpha,\\beta\\to1$ , this becomes the set of all possible transition kernels. Under this assumption, they prove that the coverability coefficient is bounded by $S^{\\alpha}A H$ (see the end of the proof of Lemma 38 of Al-Marjani et al. 2023), which implies that $\\begin{array}{r}{C R^{H}\\dot{(}P)\\geq\\frac{1}{S^{\\alpha}A H}}\\end{array}$ . In particular, if for all $\\begin{array}{r}{h,s,a,P_{h}(s^{\\prime}|s,a)\\in\\left[\\frac{1-C/S}{S-1},\\frac C S\\right]}\\end{array}$ , then $\\begin{array}{r}{C R^{H}(P)\\geq\\frac{1}{C A H}}\\end{array}$ : independent of the size of the state-space. Finally, in their proof, Al-Marjani et al. 2023 show that $d_{h}^{\\pi}(\\cdot)\\in\\mathcal{P}_{\\alpha,\\beta}$ for all policies and timesteps. Substituting to Equation (5) (and using the uniform policy for $\\pi$ ) directly leads to $\\begin{array}{r}{C R^{1}(P)\\ge\\frac{\\bar{1}-\\bar{S}^{\\beta-1}}{A S^{\\alpha}}}\\end{array}$ 1\u2212ASS\u03b2\u03b1\u22121, potentially improving the worst-case environment when S\u03b1 \u2264H. ", "page_idx": 9}, {"type": "text", "text": "Grid MDPs We end this section by analyzing a navigation example, where an agent navigates from one corner of an $n\\times n$ grid to the opposite corner (\"Navigating in Manhattan\", see Figure 1(b)). Due to space limits, we briefly describe the results while fully proving them in Appendix C.2. This example directly generalizes the chain example with added navigation difficulty; by enforcing zero rewards for all states above the bottom row, we effectively get a chain MDP of horizon $n$ . As a direct result, we immediately get that $\\begin{array}{r}{C R^{1}({\\dot{P}})=\\Theta\\big(\\frac{1}{H}\\big)}\\end{array}$ and $\\begin{array}{r}{\\check{C}R^{H}(P)=\\mathcal{O}(\\frac{1}{H})}\\end{array}$ . Surprisingly, this bound is tight \u2013 adding one additional dimension to the problem is just as difficult as a chain. Like chains, some of the difficulty comes from sparsity in the reward, but even when all rewards have unit expectations, we show that $\\begin{array}{r}{C R^{L}(P)\\stackrel{\\cdot}{=}\\Theta(\\frac{\\mathtt{I}}{L})}\\end{array}$ . This implies that the problem has additional hardness due to the need for navigation, which is the same order of magnitude as the one due to sparse reward. As a final remark, we show that the ratio between one-step lookahead and full lookahead in grid MDPs is at most $\\mathcal{O}(\\frac{1}{H})$ . This might be counter-intuitive at first, as the worst-case CR versus either of them is $\\Theta\\big(\\frac{1}{H}\\big)$ . In fact, this is possible since the worst-case environments are different; when competing with one-step lookahead agent, the hardness comes from reward sparsity, while versus full lookahead, it is also due to navigation issues. The one-step lookahead agent cannot use its information to navigate, so it has the same CR of $1/H$ as the no-lookahead. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusions and Future Work ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We studied the value of future reward lookahead information in tabular reinforcement learning through the lens of competitive analysis. We characterized the CR for the worst-case distributions, reward expectations and transition kernels for the full range of possible lookahead. We also showed the connection between the resulting CR and concentrability coefficients from the literature of offilne and reward-free RL. We find the appearance of the same coefficients in seemingly completely different RL problems intriguing and warrants further study. ", "page_idx": 9}, {"type": "text", "text": "While we took the first step in analyzing competitiveness in RL, various other competitive measures could be studied. One natural alternative would be to study transition lookahead, where agents observe future transition realizations. We believe that the results would greatly differ from ours; indeed, even with one-step lookahead, the CR can be exponentially small (as we prove in Appendix C.3). Another relevant competitivity measure is to compare an agent with predictions of the future rewards to agents with exact lookahead information. This models the realistic scenario where agents get approximate information on future rewards and want to utilize it to improve performance. Also, as in the prophet problem, one could analyze the CR between multi-step lookahead to full lookahead agents. ", "page_idx": 9}, {"type": "text", "text": "Finally, we focus on the CR for the worst-case distribution, which allows us to derive the exact value of lookahead agents. However, planning with lookahead for general reward distribution can be challenging. For full lookahead, one can perform standard planning using reward realization, making planning tractable. With one-step lookahead, it is possible to write Bellman equations for the value, but each calculation depends on the full distribution of the reward, making it hard to calculate. For multi-step lookahead, there is no clear way to perform planning without incorporating the future rewards into the state, rendering the planning exponential. While exact planning might be intractable, it could be possible to devise methods for approximate planning. Lastly, it is of great interest to design practical algorithms that can efficiently leverage lookahead information, that is, achieve the lookahead value; our results indicate that it is significantly higher than the no-lookahead value, so aiming for it could dramatically boost the performance. We also leave this direction for future work. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "We thank Simon Mauras and Jose Correa for the helpful discussions. This project has received funding from the European Union\u2019s Horizon 2020 research and innovation programme under the Marie Sk\u0142odowska-Curie grant agreement No 101034255. Dorian Baudry thanks the support of ANR-19-CHIA-02 SCAI. ", "page_idx": 10}, {"type": "text", "text": "Vianney Perchet\u2019s research was supported in part by the French National Research Agency (ANR) in the framework of the PEPR IA FOUNDRY project (ANR-23-PEIA-0003) and through the grant DOOM ANR-23-CE23-0002. It was also funded by the European Union (ERC, Ocean, 101071601). Views and opinions expressed are however those of the author(s) only and do not necessarily reflect those of the European Union or the European Research Council Executive Agency. Neither the European Union nor the granting authority can be held responsible for them. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "Aymen Al-Marjani, Andrea Tirinzoni, and Emilie Kaufmann. Active coverage for pac reinforcement learning. In Proceedings of Thirty Sixth Conference on Learning Theory, volume 195, pages 5044\u20135109. PMLR, 2023. ", "page_idx": 10}, {"type": "text", "text": "Eitan Altman. Constrained Markov decision processes. Routledge, 2021. ", "page_idx": 10}, {"type": "text", "text": "Marcin Andrychowicz, Filip Wolski, Alex Ray, Jonas Schneider, Rachel Fong, Peter Welinder, Bob McGrew, Josh Tobin, OpenAI Pieter Abbeel, and Wojciech Zaremba. Hindsight experience replay. Advances in neural information processing systems, 30, 2017.   \nMohammad Gheshlaghi Azar, Ian Osband, and R\u00e9mi Munos. Minimax regret bounds for reinforcement learning. In International Conference on Machine Learning, pages 263\u2013272. PMLR, 2017.   \nEduardo F Camacho, Carlos Bordons, Eduardo F Camacho, and Carlos Bordons. Model predictive control. Springer, 2007.   \nJos\u00e9 Correa, Patricio Foncea, Ruben Hoeksma, Tim Oosterwijk, and Tjark Vredeveld. Posted price mechanisms for a random stream of customers. In Proceedings of the 2017 ACM Conference on Economics and Computation, pages 169\u2013186, 2017.   \nJos\u00e9 Correa, Paul D\u00fctting, Felix Fischer, and Kevin Schewior. Prophet inequalities for iid random variables from an unknown distribution. In Proceedings of the 2019 ACM Conference on Economics and Computation, pages 3\u201317, 2019a.   \nJose Correa, Patricio Foncea, Ruben Hoeksma, Tim Oosterwijk, and Tjark Vredeveld. Recent developments in prophet inequalities. ACM SIGecom Exchanges, 17(1):61\u201370, 2019b.   \nChristoph Dann, Lihong Li, Wei Wei, and Emma Brunskill. Policy certificates: Towards accountable reinforcement learning. In International Conference on Machine Learning, pages 1507\u20131516, 2019.   \nOmar Darwiche Domingues, Pierre M\u00e9nard, Emilie Kaufmann, and Michal Valko. Episodic reinforcement learning in finite mdps: Minimax lower bounds revisited. In Algorithmic Learning Theory, pages 578\u2013598. PMLR, 2021.   \nYonathan Efroni, Gal Dalal, Bruno Scherrer, and Shie Mannor. How to combine tree-search methods in reinforcement learning. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 33, pages 3494\u20133501, 2019a.   \nYonathan Efroni, Nadav Merlis, Mohammad Ghavamzadeh, and Shie Mannor. Tight regret bounds for model-based reinforcement learning with greedy policies. In Advances in Neural Information Processing Systems, pages 12224\u201312234, 2019b.   \nYonathan Efroni, Mohammad Ghavamzadeh, and Shie Mannor. Online planning with lookahead policies. Advances in Neural Information Processing Systems, 33:14024\u201314033, 2020.   \nVikas Garg, TS Jayram, and Balakrishnan Narayanaswamy. Online optimization with dynamic temporal uncertainty: Incorporating short term predictions for renewable integration in intelligent energy systems. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 27, pages 1291\u20131297, 2013.   \nTheodore P Hill and Robert P Kertz. Ratio comparisons of supremum and stop rule expectations. Zeitschrift f\u00fcr Wahrscheinlichkeitstheorie und Verwandte Gebiete, 56:283\u2013285, 1981.   \nThomas Jaksch, Ronald Ortner, and Peter Auer. Near-optimal regret bounds for reinforcement learning. Journal of Machine Learning Research, 11(Apr):1563\u20131600, 2010.   \nJianhao Jia, Hao Li, Kai Liu, Ziqi Liu, Jun Zhou, Nikolai Gravin, and Zhihao Gavin Tang. Online resource allocation in markov chains. In Proceedings of the ACM Web Conference 2023, pages 3498\u20133507, 2023.   \nChi Jin, Zeyuan Allen-Zhu, Sebastien Bubeck, and Michael I Jordan. Is q-learning provably efficient? Advances in neural information processing systems, 31, 2018.   \nYingying Li, Xin Chen, and Na Li. Online optimal control with linear dynamics and predictions: Algorithms and regret analysis. Advances in Neural Information Processing Systems, 32, 2019.   \nYiheng Lin, Yang Hu, Guanya Shi, Haoyuan Sun, Guannan Qu, and Adam Wierman. Perturbationbased regret analysis of predictive control in linear time varying systems. Advances in Neural Information Processing Systems, 34:5174\u20135185, 2021.   \nYiheng Lin, Yang Hu, Guannan Qu, Tongxin Li, and Adam Wierman. Bounded-regret mpc via perturbation analysis: Prediction error, constraints, and nonlinearity. Advances in Neural Information Processing Systems, 35:36174\u201336187, 2022.   \nTom Schaul, Daniel Horgan, Karol Gregor, and David Silver. Universal value function approximators. In International conference on machine learning, pages 1312\u20131320. PMLR, 2015.   \nMax Simchowitz and Kevin G Jamieson. Non-asymptotic gap-dependent regret bounds for tabular mdps. In Advances in Neural Information Processing Systems, pages 1153\u20131162, 2019.   \nRichard S Sutton and Andrew G Barto. Reinforcement learning: An introduction. MIT press, 2018.   \nAviv Tamar, Garrett Thomas, Tianhao Zhang, Sergey Levine, and Pieter Abbeel. Learning from the hindsight plan\u2014episodic mpc improvement. In 2017 IEEE International Conference on Robotics and Automation (ICRA), pages 336\u2013343. IEEE, 2017.   \nAndrea Tirinzoni, Aymen Al Marjani, and Emilie Kaufmann. Near instance-optimal pac reinforcement learning for deterministic mdps. Advances in Neural Information Processing Systems, 35:8785\u2013 8798, 2022.   \nTengyang Xie, Dylan J Foster, Yu Bai, Nan Jiang, and Sham M Kakade. The role of coverage in online reinforcement learning. In The Eleventh International Conference on Learning Representations, 2022.   \nAndrea Zanette and Emma Brunskill. Tighter problem-dependent regret bounds in reinforcement learning without domain knowledge using value function bounds. In International Conference on Machine Learning, pages 7304\u20137312. PMLR, 2019.   \nRunyu Zhang, Yingying Li, and Na Li. On the regret analysis of online lqr control with predictions. In 2021 American Control Conference (ACC), pages 697\u2013703. IEEE, 2021a.   \nZihan Zhang, Xiangyang Ji, and Simon Du. Is reinforcement learning more difficult than bandits? a near-optimal algorithm escaping the curse of horizon. In Conference on Learning Theory, pages 4528\u20134531. PMLR, 2021b. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Proofs for Full Lookahead Agents ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Theorem 4 (CR versus Full Lookahead Agents). ", "page_idx": 12}, {"type": "text", "text": "Worst-case distributions: CRH(P, r) = max\u03c0\u2208\u03a0M $\\begin{array}{r}{{C R}^{H}(P,r)=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{\\pi}(s,a)r_{h}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a)}.}\\end{array}$ ", "page_idx": 12}, {"type": "text", "text": "Worst-case reward expectations: For non-stationary reward expectations, ", "page_idx": 12}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{d_{h}^{*}(s)}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "If the reward expectations are stationary $(r_{h}(s,a)=r(s,a))$ , then ", "page_idx": 12}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\operatorname*{min}_{(s,a)\\in S\\times A}\\frac{\\sum_{h=1}^{H}d_{h}^{\\pi}(s,a)}{\\sum_{h=1}^{H}d_{h}^{*}(s)}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "tWheorres te-xciasst es teantivoirnoanrym eenntvsi:r oFnomr eanltls  ewnivtihr orenwmaerndtss , $\\begin{array}{r}{C R^{H}\\geq\\operatorname*{max}\\lbrace\\frac{1}{S A H},\\frac{1}{A^{H}}\\rbrace}\\end{array}$ .f oArl $\\delta\\in(0,1)$ $[0,1]$ $^{\\cdot}S=A^{n}\\!+\\!1$ $n\\in\\{0,\\ldots,H-1\\}$ then $\\begin{array}{r}{C R^{H}(P,r)\\leq\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)}}\\end{array}$ , and if $S\\geq A^{H}-1$ , then $\\begin{array}{r}{C R^{H}(P,r)\\leq\\frac{1+\\delta}{A^{H}}}\\end{array}$ ", "page_idx": 12}, {"type": "text", "text": "Proof. Worst-case distribution: We already saw in Equation (3) that for all reward distributions ", "page_idx": 12}, {"type": "equation", "text": "$$\nV^{H,*}(P,r)\\leq\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "We now show that for any $\\delta>0$ , there exists a distribution such that ", "page_idx": 12}, {"type": "equation", "text": "$$\nV^{H,*}(P,r)\\geq(1-\\delta)\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "This would imply that ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}V^{H,*}(P,r)=\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a)\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "and conclude this part of the proof (by Remark 2 and Equation (2)). ", "page_idx": 12}, {"type": "text", "text": "Let $\\epsilon\\in(0,1)$ and assume long-shot reward distribution $R\\sim L S_{\\epsilon}(r)$ . For any $(h,s,a)\\in\\mathcal{X}$ , define the event that a positive reward was realized just in $(h,s,a)$ : ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\mathbb{G}_{h,s,a}=\\bigg\\{R_{h}(s,a)=\\frac{r_{h}(s,a)}{\\epsilon},\\forall(h^{\\prime},s^{\\prime},a^{\\prime})\\neq(h,s,a):R_{h^{\\prime}}(s^{\\prime},a^{\\prime})=0\\bigg\\}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Under any of these events, the value of the optimal full lookahead agent is ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\mathbb{S}\\left[\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(h^{\\prime},s^{\\prime},a^{\\prime})\\in\\mathcal{X}}d_{h}^{\\pi}(s^{\\prime},a^{\\prime})R_{h^{\\prime}}(s^{\\prime},a^{\\prime})|\\mathbb{G}_{h,s,a}\\right]=\\mathbb{E}\\left[\\operatorname*{max}_{\\pi\\in\\Pi^{M}}d_{h}^{\\pi}(s,a)\\frac{r_{h}(s,a)}{\\epsilon}|\\mathbb{G}_{h,s,a}\\right]=\\frac{r_{h}(s,a)}{\\epsilon}d_{h}^{\\pi}(s,a^{\\prime}).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Now, notice that each of these mutually exclusive events $\\mathbb{G}_{h,s,a}$ occur w.p. $\\epsilon(1-\\epsilon)^{S A H-1}$ , and that the value is non-negative when none of them occur. Hence, for this reward distribution, ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{H,*}(P,r)\\geq\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}\\mathrm{Pr}\\{\\mathbb{G}_{h,s,a}\\}\\mathbb{E}\\left[\\underset{\\pi\\in\\Pi^{M}}{\\operatorname*{max}}\\sum_{\\substack{(h^{\\prime},s^{\\prime},a^{\\prime})\\in\\mathcal{X}}}d_{h}^{\\pi}(s^{\\prime},a^{\\prime})R_{h^{\\prime}}(s^{\\prime},a^{\\prime})\\big|\\mathbb{G}_{h,s,a}\\right]}\\\\ &{\\qquad=\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}\\epsilon(1-\\epsilon)^{S A H-1}\\frac{r_{h}(s,a)}{\\epsilon}d_{h}^{*}(s)}\\\\ &{\\qquad=(1-\\epsilon)^{S A H-1}\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}d_{h}^{*}(s)r_{h}(s,a).}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Setting $\\begin{array}{r}{\\epsilon\\,=1-(1-\\delta)^{\\frac{1}{S A H-1}}\\approx\\frac{\\delta}{S A H}}\\end{array}$ leads to the desired bound and concludes this part of the ", "page_idx": 13}, {"type": "text", "text": "Worst-case reward expectations: Before proving the results, we remark on the choice to limit reward expectations to $[0,1]$ . The main motivation for doing so is the ubiquity of this boundedness assumption in the literature of RL, but in fact, it is only a matter of convention and has no real impact. Indeed, since CR is invariant to scaling, the same result would directly hold for any bounded interval $[0,C]$ . Furthermore, as explained in Remark 3, the result would also hold under the less restrictive assumptions that reward expectations are just non-negative. ", "page_idx": 13}, {"type": "text", "text": "We proof both results using Lemma 1. As a first step, we highlight that the only dependence of the optimization problem in the Markovian policy $\\pi$ is through the occupancy measure $d_{h}^{\\pi}$ . Therefore, denoting the set of all occupancy measures induced by a Markovian policy with transition kernel $P$ by $D=\\Breve{D}^{\\mathcal{M}}(P)$ , the problem can be reformulated as ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C R^{H}(P)=\\underset{r_{h}\\in[0,1]^{S A}}{\\operatorname*{inf}}C R^{H}(P,r)}\\\\ &{\\qquad\\qquad=\\underset{r_{h}\\in[0,1]^{S A}}{\\operatorname*{inf}}\\underset{\\pi\\in\\Pi^{\\mathcal{M}}}{\\operatorname*{max}}\\,\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{\\pi}(s,a)r_{h}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a)}}\\\\ &{\\qquad=\\underset{r_{h}\\in[0,1]^{S A}}{\\operatorname*{inf}}\\,\\underset{d\\in D^{\\mathcal{M}}(P)}{\\operatorname*{max}}\\,\\frac{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}(s,a)r_{h}(s,a)}{\\sum_{(h,s,a)\\in\\mathcal{X}}d_{h}^{*}(s)r_{h}(s,a)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "The set of the possible occupancy measures is convex and compact in $\\mathbb{R}_{+}^{S A H}$ [Altman, 2021], so we can apply Lemma 1 with $\\alpha_{h,s,a}=d_{h}^{*}(s)$ , $y_{h,s,a}=d_{h}(s,a)$ and $x_{h,s,a}=r_{h}(s,a)$ , resulting with ", "page_idx": 13}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{max}_{d\\in D^{M}(P)}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}(s,a)}{d_{h}^{*}(s)}=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{d_{h}^{*}(s)},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where we again used the equivalence between optimizing over Markovian policies and their occupancy measures. ", "page_idx": 13}, {"type": "text", "text": "For stationary rewards, where $r_{h}(s,a)=r(s,a)$ for all $(h,s,a)\\in\\mathcal{X}$ , we rewrite Equation (7) as ", "page_idx": 13}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{inf}_{\\substack{r_{h}\\in[0,1]^{S A}\\,d\\in D^{M}(P)}}\\frac{\\sum_{(s,a)\\in S\\times A}\\Bigl(\\sum_{h=1}^{H}d_{h}(s,a)\\Bigr)r(s,a)}{\\sum_{(s,a)\\in S\\times A}\\Bigl(\\sum_{h=1}^{H}d_{h}^{*}(s)\\Bigr)r(s,a)}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Now, another application of Lemma 1 with $\\begin{array}{r}{\\alpha_{s,a}=\\sum_{h=1}^{H}d_{h}^{*}(s),y_{s,a}=\\sum_{h=1}^{H}d_{h}(s,a)}\\end{array}$ and $x_{s,a}=$ $r(s,a)$ yields ", "page_idx": 13}, {"type": "equation", "text": "$$\nC R^{H}(P)=\\operatorname*{max}_{d\\in D^{M}(P)}\\operatorname*{min}_{(s,a)\\in S\\times A}\\frac{\\sum_{h=1}^{H}d_{h}(s,a)}{\\sum_{h=1}^{H}d_{h}^{*}(s)}=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(s,a)\\in S\\times A}\\frac{\\sum_{h=1}^{H}d_{h}^{\\pi}(s,a)}{\\sum_{h=1}^{H}d_{h}^{*}(s)},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "which is the desired result for stationary environments. ", "page_idx": 13}, {"type": "text", "text": "Worst-case environment \u2013 lower bound: We now derive the lower bound $C R^{H}\\quad\\geq$ $\\operatorname*{max}_{.}\\left\\{{\\frac{1}{S A H}},\\,{\\frac{1}{A^{H}}}\\right\\}$ . We prove it for nonstationary environments, so in particular, it also holds for stationary ones. ", "page_idx": 14}, {"type": "text", "text": "Recall that by definition, for any $(h,s,a)\\in\\mathcal{X}$ , $d_{h}^{*}(s,a)$ is the occupancy measure of a Markovian policy that maximizes the visitation probability in $(h,s,a)$ , and let $\\pi_{h,s,a}^{*}$ be a Markovian policy that achieves this occupancy. Since the set of occupancy measures induced by Markovian policies is convex [Altman, 2021], there exists a Markovian policy $\\pi_{u}\\in\\Pi^{\\mathcal{M}}$ such that its occupancy measure is the average of all these occupancies, namely, for all $(h,s,a)\\in\\mathcal{X}$ , ", "page_idx": 14}, {"type": "equation", "text": "$$\nd_{h}^{\\pi_{u}}(s,a)=\\frac{1}{S A H}\\sum_{(h^{\\prime},s^{\\prime},a^{\\prime})\\in\\mathcal{X}}d_{h}^{\\pi_{h^{\\prime},s^{\\prime},a^{\\prime}}^{*}}(s,a).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Using the previous part of the theorem, for all environments $P$ , it holds that ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C R^{H}(P)=\\underset{\\pi\\in\\mathbb{R}^{3}}{\\operatorname*{max}}\\ \\underset{\\tilde{\\pi}\\circ\\pi\\in\\mathbb{X}}{\\operatorname*{min}}\\ \\frac{d_{h}^{\\pi}\\left(s,a\\right)}{d_{h}^{\\pi}\\left(s\\right)}}\\\\ &{\\qquad\\geq\\underset{(h,s_{0})\\in\\mathbb{X}}{\\operatorname*{min}}\\ \\frac{d_{h}^{\\pi}\\left(s,a\\right)}{d_{h}^{\\pi}\\left(s\\right)}}\\\\ &{=\\underset{(h,s_{0})\\in\\mathbb{X}}{\\operatorname*{min}}\\ \\frac{\\frac{1}{\\tilde{\\Delta}\\tilde{A}}\\sum_{i=1}^{1}\\sum_{j\\in\\mathcal{E}}d_{h}^{\\pi^{*},\\varepsilon_{j}\\pi^{*}}\\left(s,a\\right)}{d_{h}^{\\pi}\\left(s\\right)}}\\\\ &{\\overset{(1)}{\\underset{\\geq}{\\geq}}\\underset{(h,s_{0})\\in\\mathbb{X}}{\\operatorname*{min}}\\ \\frac{\\frac{1}{\\tilde{A}H}d_{h}^{\\pi^{*},\\varepsilon_{n}}\\left(s,a\\right)}{d_{h}^{\\pi}\\left(s\\right)}}\\\\ &{=\\frac{1}{\\tilde{A}\\tilde{A}}\\underset{(h,s_{0})\\in\\mathbb{X}}{\\operatorname*{min}}\\ \\frac{d_{h}^{\\pi}\\left(s,a\\right)}{d_{h}^{\\pi}\\left(s\\right)}}\\\\ &{=\\frac{1}{\\tilde{A}\\tilde{A}H}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "In $(*)$ , we discard all the (non-negative) terms in the summation where $(h^{\\prime},s^{\\prime},a^{\\prime})\\neq(h,s,a)$ , while in the following equalities, we use the definition of $\\pi_{h,s,a}^{*}$ and the fact that $d_{h}^{*}(s,a)=d_{h}^{*}(s)$ . As this inequality holds for all environments, it also implies that CRH \u2265SA1H . ", "page_idx": 14}, {"type": "text", "text": "To prove that $\\begin{array}{r}{C R^{H}\\,\\geq\\,\\frac{1}{A^{H}}}\\end{array}$ , we take a different approach and go back to the Bellman equations. Denote by $\\bar{V}_{h}^{*}(s|R)$ , the optimal value of a full lookahead policy, starting from timestep $h\\in[H]$ and state $s\\in S$ , and given reward realization $R$ . Therefore, the value of the full lookahead agent is given by $V^{H,*}=\\mathbb{E}_{R,s\\sim\\mu}\\bigl[\\bar{V}_{1}^{*}(s|R)\\bigr]$ . Similarly, denote the standard value with no lookahead information starting from timestep $h\\in[H]$ and state $s\\in S$ by $V_{h}^{0,*}(s)$ . As previously explained, given reward realizations, the optimal full lookahead policy is Markovian, so both values can be calculated using the following Bellman equations for all $s\\in S$ and $h\\in[H]$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{\\bar{V}_{h}^{*}(s|R)=\\underset{a\\in\\mathcal{A}}{\\operatorname*{max}}\\Bigg\\{R_{h}(s,a)+\\underset{s^{\\prime}\\in\\mathcal{S}}{\\sum}P_{h}(s^{\\prime}|s,a)\\bar{V}_{h+1}^{*}(s^{\\prime}|R)\\Bigg\\},\\quad\\quad}&{\\bar{V}_{H+1}^{*}(s|R)=0}\\\\ &{V_{h}^{0,*}(s)=\\underset{a\\in\\mathcal{A}}{\\operatorname*{max}}\\Bigg\\{r_{h}(s,a)+\\underset{s^{\\prime}\\in\\mathcal{S}}{\\sum}P_{h}(s^{\\prime}|s,a)V_{h+1}^{0,*}(s^{\\prime})\\Bigg\\},\\quad\\quad}&{V_{H+1}^{0,*}(s)=0.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "We prove by backward induction that for all $h\\in[H\\!+\\!1]$ and $s\\in{\\mathcal{S}},\\mathbb{E}\\bigl[\\bar{V}_{h}^{*}(s|R)\\bigr]\\leq A^{H+1-h}V_{h}^{0,*}(s)$ .   \nwould imply that Specifically, using this relation for $V^{H,*}\\leq A^{H}V^{0,*}$ $h=1$ , regardless of the environment, and thus and taking the expectation over the initial state distribution $\\begin{array}{r}{C R^{H}\\geq\\frac{1}{A^{H}}}\\end{array}$ . ", "page_idx": 14}, {"type": "text", "text": "As the base of the induction, see that the claim trivially holds for $h=H+1$ , where all values are 0. Next, for any $h\\in[H]$ and $s\\in S$ , given that the claim holds for all states in step $h+1$ , we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{E}[\\widetilde{V}_{k}^{*}(s)R]=\\mathbb{E}\\bigg[\\operatorname*{max}_{s\\in\\mathcal{A}}\\bigg\\{R_{k}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime}|R^{\\prime})\\bigg\\}\\bigg]}\\\\ &{\\leq\\mathbb{E}\\bigg(\\sum_{s\\in\\mathcal{A}}\\bigg\\{R_{k}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime}|R^{\\prime})\\bigg\\}\\bigg)}\\\\ &{=\\sum_{s\\in\\mathcal{A}}\\bigg(r_{1}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{\\ell}\\big(V_{k+1}^{*}(s^{\\prime}|R^{\\prime})\\big)\\bigg)}\\\\ &{\\overset{(a)}{\\leq}\\sum_{s\\in\\mathcal{A}}\\bigg(r_{1}(s,a)+A^{\\ell-k}\\sum_{s\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime})\\bigg)}\\\\ &{\\leq A^{\\ell-k}\\sum_{s\\in\\mathcal{A}}\\bigg(r_{1}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime})\\bigg)}\\\\ &{\\leq A^{\\ell-k}\\sum_{s\\in\\mathcal{A}}\\bigg(r_{1}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime})\\bigg)}\\\\ &{\\leq A^{\\ell-k}\\sum_{s\\in\\mathcal{A}}\\bigg\\{r_{1}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime})\\bigg\\}}\\\\ &{=A^{\\ell-k}+A\\frac{\\ell}{r_{1}(s,a)}\\bigg\\{r_{1}(s,a)+\\sum_{\\ell\\in\\mathcal{E}}P_{k}(s^{\\prime}|s,a)\\widetilde{V}_{k+1}^{*}(s^{\\prime})\\bigg\\}}\\\\ &{=A^{\\ell+k-1}b^{\\ell}\\delta^{*}(s),}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where throughout the derivation, we use the fact that all rewards (and thus the values) are nonnegative and $(*)$ is due to the induction hypothesis. This concludes the proof of the lower bound in the statement, namely, that for all dynamics and rewards, it holds that $\\begin{array}{r}{\\dot{C R}^{H}\\geq\\operatorname*{max}\\Bigl\\{\\frac{1}{S A H},\\frac{1}{A^{H}}\\Bigr\\}}\\end{array}$ . ", "page_idx": 15}, {"type": "text", "text": "Worst-case environment \u2013 upper bound: see Proposition 1, where we present a tree-like stationary environment for which the aforementioned bounds are near-tight. \u53e3 ", "page_idx": 15}, {"type": "text", "text": "B Proofs for Multi-Step Lookahead Agents ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Proposition 2. For any $L\\in[H]$ , let $t_{L}(h)=\\operatorname*{max}\\{h-L+1,1\\}$ . Then, it holds that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{\\pi^{H}\\sim\\mathcal{D}(r)}V^{L,*}(P,r)=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}\\big(s^{\\prime}\\big)d_{h}^{*}\\big(s|s_{t_{L}(h)}=s^{\\prime}\\big)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Proof. We start by lower-bounding the optimal value in the presence of long-shot rewards. Then, we prove a matching upper value for all rewards and $L$ -step lookahead policies. ", "page_idx": 16}, {"type": "text", "text": "Lower bound on the value of long-shots. Let $\\epsilon>0$ and assume that $R\\sim L S_{\\epsilon}(r)$ , namely, that for any $(h,s,a)\\in\\mathcal{X}$ , a reward of $\\bar{r_{h}}(s,a)/\\epsilon$ is generated with probability $\\epsilon$ ; otherwise, the reward would be zero. Let $\\pi\\in\\Pi^{\\mathcal{M}}$ be any Markovian policy that does not observe future rewards and let $\\tilde{\\pi}\\in\\Pi^{L}$ be a policy that plays $\\pi$ if all the $L$ -step future rewards are zero and otherwise optimally navigates to one strictly positive reward (ties broken arbitrarily). In particular, if only one long-shot reward is realized at $(\\bar{h},\\bar{s},a)$ , this policy would play $\\pi$ until timestep $t_{L}(h)=\\operatorname*{max}\\{h-L\\bar{+}1,1\\}$ and then maximize the reaching probability from $s_{t_{L}(h)}$ to $s_{h}=s$ . If the agent successfully reaches $s_{h}=s$ , it will play $a_{h}=a$ and collect the reward. ", "page_idx": 16}, {"type": "text", "text": "The value of $\\tilde{\\pi}$ can be lower-bounded by the value that at most one long-shot is realized; Denoting ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{G}_{h,s,a}=\\bigg\\{R_{h}(s,a=\\frac{r_{h}(s,a)}{\\epsilon},\\forall(h^{\\prime},s^{\\prime},a^{\\prime})\\neq(h,s,a):R_{h}(s,a)=0\\bigg\\},\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "the event that a reward was realized only in $(h,s,a)\\in\\mathcal{X}$ , we bound ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{=\\mathbb{E}\\displaystyle\\left[\\sum_{k=1}^{H}R_{k}(s_{k},a_{k})\\bigg|\\tilde{\\mathbf{z}}\\right]}\\\\ &{\\stackrel{()}{\\sum}\\limits_{\\{k,\\neq0\\}\\in\\mathbb{Z}}\\mathbb{E}\\left[\\sum_{i=1}^{H}R_{k}(s_{k},a_{k})\\bigg|\\tilde{\\mathbf{z}}_{i},\\mathbb{G}_{k,a_{k}}\\right]\\mathbb{P}_{\\mathbb{I}}\\left(\\boldsymbol{G}_{k,a_{k}}\\right)}\\\\ &{=\\displaystyle\\sum_{\\{k,\\neq0\\}\\in\\mathbb{Z}}\\mathbb{E}\\left[\\sum_{i=1}^{H(s_{k},a_{k})}\\mathbf{I}\\{s_{k}-s_{k},a_{k}=a\\}\\Big|\\tilde{\\mathbf{z}}_{i},\\mathbb{G}_{k,a_{k}}\\right]\\mathbb{P}_{\\mathbb{I}}\\left(\\boldsymbol{G}_{k,a_{k}}\\right)}\\\\ &{\\stackrel{()}{\\sum}\\displaystyle\\sum_{k\\geq1}^{H(s_{k},a_{k})\\in\\mathbb{Z}}\\sum_{\\mathbb{P}}\\mathbb{E}\\left[\\langle s_{k,a_{k}}\\rangle-\\varepsilon\\big|\\tilde{\\mathbf{z}}_{i}\\right]\\mathbb{I}_{\\geq\\mathbb{Z}}\\Re\\left\\{\\sum_{l\\in\\mathbb{R}_{n}}\\mathbb{E}\\big[\\sum_{l\\in\\mathbb{R}_{n}}a_{l}\\big|\\tilde{\\mathbf{z}}_{l},\\mathbb{z}_{l}\\big]\\right\\}\\mathbb{P}_{\\mathbb{I}}\\left(\\boldsymbol{G}_{k,a_{k}}\\right)}\\\\ &{\\stackrel{()}{\\sum}\\displaystyle\\sum_{k\\geq1}^{H(s_{k})\\in\\mathbb{Z}}\\sum_{\\mathbb{C}\\in\\mathbb{Z}}\\mathbb{E}\\big[\\langle s_{k,(k)}\\rangle-\\varepsilon\\big|\\tilde{\\mathbf{z}}_{l}\\big]\\mathbb{I}_{\\geq\\mathbb{Z}}\\mathbb{E}\\big[\\langle s_{k}\\rangle-\\delta,a_{k}=a\\big|\\tilde{\\mathbf{z}}_{i},\\mathbb{I}_{\\geq\\}\\big|\\tilde{\\mathbf{z}}_{l}\\big]\\mathbb{P}_{\\mathbb{I}}\\big(\\boldsymbol{G}_{k,a_{k}}\\big|\\tilde{\\mathbf{z}}_{l}\\big)}\\\\ &{\\stackrel{()}{\\sum}\\displaystyle\\sum_{k\\geq1}^{H(s_{k})\\in\\mathbb{Z}}\\sum_{\\mathbb{C}\\in\\mathbb{Z}}a_{k,(k)}^{\\top}(s_{\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "In (1), we use the facts that the events $\\mathbb{G}_{h,s,a}$ are disjoint and the rewards are non-negative. Next, in (2), we decompose to steps until $t_{L}(h)$ , where we play $\\pi$ , and steps from $t_{L}(h)$ to $h$ , where we try to maximize reaching probability to $(s,a)$ at timestep $h$ . Notice that the reward is independent of the transition, so the optimal reaching policy is Markovian. Relation (3) replaces the probability notation to conditional occupancy measure and (4) substitutes the probability of the events. Maximizing over $\\pi$ and taking the limit of small $\\epsilon$ , we get a lower bound of ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\operatorname*{sup}_{\\mathcal{R}^{H}\\sim\\mathcal{D}(r)}V^{L,*}(P,r)\\ge\\operatorname*{sup}_{\\epsilon>0}\\displaystyle\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}e^{-\\epsilon S A H}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}\\\\ &{\\displaystyle=\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Upper bound on the value of all reward distributions. For any fixed lookahead policy $\\pi\\in\\Pi^{L}$ and any reward distribution, we bound ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle P_{r}\\rangle=\\frac{1}{n}\\langle P_{i},\\hbar(n_{1},\\hbar_{2})|\\tau\\rangle}\\\\ &{:=\\underset{0\\leq t\\leq T}{\\sum}\\frac{\\langle\\mathbf{b}_{1}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{1}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel})|\\tau\\rangle}{\\sum}}\\\\ &{:=\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}[\\hat{\\mathbf{y}}_{i}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{1}(\\mathbf{k}_{\\parallel}-\\mathbf{s},\\mathbf{a}_{1}-\\mathbf{a})]|\\tau\\cdot\\hat{\\mathbf{r}}_{i,(1)}|\\tau\\rangle=\\mathcal{I}}\\\\ &{:=\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}[\\hat{\\mathbf{y}}_{i}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{1}(\\mathbf{k}_{\\parallel}-\\mathbf{s},\\mathbf{a}_{1}-\\mathbf{a})]\\tau\\cdot\\hat{\\mathbf{r}}_{i,(1)}|\\tau\\rangle=\\mathcal{I}}\\\\ &{:=\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}[\\hat{\\mathbf{y}}_{i}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel})\\mathbf{b}_{2}(\\mathbf{k}_{\\parallel}-\\mathbf{s},\\mathbf{a}_{1}-\\mathbf{a})]\\tau\\cdot\\hat{\\mathbf{r}}_{i,(1)}|\\tau\\rangle=\\mathcal{I},}\\\\ &{\\overset{\\mathrm{O}}{\\leq}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}\\underset{0\\leq t\\leq T}{}{\\sum}\\underset{0\\leq t\\leq T}{\\sum}{\\sum}\\underset{0\\neq t\\leq T}{}{\\sum}\\underset{0\\leq t\\leq T}{\\sum\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Relation (1) holds since the state dynamics are independent of the rewards realization and the maximal reaching probability is $d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})$ . Relation (2) holds because we reach the state at timestep $t_{L}(h)$ just before seeing $R_{h}(s,a)$ ; therefore, the two variables are independent. Finally, relation (3) holds since we can rewrite the value as ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\pi^{*}\\in\\Pi^{L}}\\sum_{i=1}^{H}\\sum_{s^{\\prime}\\in S}d_{i}^{\\pi^{*}}(s^{\\prime})\\sum_{(h,s,a)\\in\\mathcal{X}}\\mathbb{1}\\{t_{L}(h)=i\\}d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})r_{h}(s,a).\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "This expression is equivalent to the optimal value of a no-lookahead agent whose expected reward at any $(i,s^{\\prime},a^{\\prime})\\,\\,\\overline{{\\in}}\\,\\,\\mathcal{X}$ is $\\begin{array}{r}{\\sum_{(h,s,a)\\in\\mathcal{X}}\\mathbb{1}\\{t_{L}(h)=i\\}d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})\\tilde{r}_{h}(s,a)}\\end{array}$ , so there exists a Markovian policy that maximizes this value. \u53e3 ", "page_idx": 17}, {"type": "text", "text": "Theorem 5. [CR versus Multi-Step Lookahead Agents] For any $\\begin{array}{r l r}{L}&{{}\\in}&{[H]}\\end{array}$ , let $\\begin{array}{r l r}{{t_{L}}(h)}&{{}=}&{}\\end{array}$ $\\operatorname*{max}\\{h-L+1,1\\}$ . Then, it holds that ", "page_idx": 18}, {"type": "text", "text": "Worst-case distributions: $\\begin{array}{r}{\\colon C R^{L}(P,r)=\\frac{\\operatorname*{max}_{\\pi\\in\\Pi}\\mathcal{M}\\,\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)d_{h}^{\\pi}(s,a)}{\\operatorname*{max}_{\\pi\\in\\Pi}\\mathcal{M}\\,\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}.}\\end{array}$ Worst-case reward expectations: ", "page_idx": 18}, {"type": "equation", "text": "$$\nC R^{L}(P)=\\operatorname*{min}_{\\pi^{*}\\in\\Pi^{M}}\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi^{*}}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "If the reward expectations are stationary $(r_{h}(s,a)=r(s,a))$ , then ", "page_idx": 18}, {"type": "equation", "text": "$$\nC R^{L}(P)=\\operatorname*{min}_{\\pi^{*}\\in\\Pi^{M}}\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(s,a)\\in S\\times A}\\frac{\\sum_{h=1}^{H}d_{h}^{\\pi}(s,a)}{\\sum_{h=1}^{H}\\sum_{s^{\\prime}\\in S}d_{t_{L}(h)}^{\\pi^{*}}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Worst-case environments: For all environments, $\\begin{array}{r}{C R^{L}\\geq\\operatorname*{max}\\biggr\\{\\frac{1}{S A H},\\frac{1}{(H-L+1)A^{L}}\\biggr\\}}\\end{array}$ x SA1H ,(H\u2212L1+1)AL . Also, for any $\\delta\\ \\in\\ (0,1)$ there exist stationary environments with rewards over $[0,1]$ s.t. if $\\Dot{S}\\,=\\,A^{n}\\,+\\,1$ for $n\\;\\in\\;\\{0,\\ldots,L-1\\}$ , then $\\begin{array}{r}{C R^{\\dot{L}}(P,r)\\;\\leq\\;\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)}}\\end{array}$ , and if $S\\,\\geq\\,A^{L}+1$ , then CRL(P, r) \u2264(H\u2212L+11+)\u03b4(AL\u22121). ", "page_idx": 18}, {"type": "text", "text": "Proof. Worst-case distribution: This part of the theorem is a directly corollary of Proposition 2, applied with Remark 2 and Equation (2). We remark that we assume w.l.o.g. that $r_{h}(s,a)>0$ for at least one reachable $(h,s,a)\\in\\mathcal{X}$ (i.e., $d_{h}^{*}(s,a)>0;$ ). Otherwise, both values in the numerator and denominator equal zero and the ratio is defined as $+\\infty$ . ", "page_idx": 18}, {"type": "text", "text": "Worst-case reward expectations: As in the proof of Theorem 4, we start by rewriting the maximization problems in the competitive ratio using, $\\overline{{D}}^{\\mathcal{M}}(P)$ the set of occupancy measures induced by the transition kernel $P$ and all Markovian policies: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C R^{L}(P)=\\underset{r_{h}\\in\\{0,1\\}\\cup\\,x}{\\operatorname*{inf}}C R^{L}(P,r)}\\\\ &{\\qquad\\qquad=\\underset{r_{h}\\in\\{0,1\\}^{\\cup}}{\\operatorname*{inf}}\\frac{\\operatorname*{max}_{\\pi}}{\\operatorname*{sup}_{\\pi^{*}\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{K}}{r_{h}(s,a)}\\le r_{h}(s,a)d_{h}^{r}(s,a)}}\\\\ &{\\qquad\\qquad=\\underset{r_{h}\\in\\{0,1\\}^{\\cup}}{\\operatorname*{inf}}\\frac{\\operatorname*{inf}}{\\operatorname*{sup}_{\\pi^{*}\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{K}}{r_{h}(s,a)}\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{h+}^{r}(s)d_{h}^{s}(s)d_{h}^{s}(s|s_{t,(h)}=s^{\\prime})}}\\\\ &{\\qquad\\qquad=\\underset{r_{h}\\in\\{0,1\\}^{\\mathrm{inf}}}{\\operatorname*{inf}}\\frac{\\operatorname*{min}}{s\\in\\mathrm{~cup}_{\\pi^{*}\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{K}}{r_{h}(s,a)}\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{l}^{r}(s)(s^{\\prime})d_{h}^{s}(s|s_{t,(h)}=s^{\\prime})}}\\\\ &{\\qquad\\qquad=\\underset{r_{h}\\in\\{0,1\\}^{\\mathrm{inf}}}{\\operatorname*{inf}}\\frac{\\operatorname*{min}}{s\\in\\mathrm{~cup}_{\\pi^{*}(P)}\\operatorname*{inf}(P)\\le\\operatorname*{inf}(P)}\\underset{(h,s,a)\\in\\mathcal{K}}{\\sum_{(h,s,a)\\in\\mathcal{K}}{r_{h}(s,a)}\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{l}^{r}(s)d_{h}^{s}(s)(s_{l},a)}}\\\\ &{\\qquad\\qquad=\\underset{d^{\\prime}\\in\\mathcal{D}^{\\mathcal{M}}}{\\operatorname*{inf}}\\frac{\\operatorname*{inf}}{s\\in\\mathrm{~}\\Pi^{\\mathcal{M}}}\\underset{s\\in\\mathcal{K}}{\\operatorname*{max}}(P)\\sum_{(h,s,a)\\in\\mathcal{K}}{r_{h}(s,a)}\\sum_{s\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Continuing following the proof of Theorem 4, we use the convexity and compactness of the set of occupancy measures to apply Lemma 1 on the two internal problems, this time with $\\alpha_{h,s,a}=$ $\\begin{array}{r}{\\sum_{s^{\\prime}\\in S}\\bar{d}_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=\\bar{s}^{\\prime})}\\end{array}$ . Doing so results with ", "page_idx": 18}, {"type": "equation", "text": "$$\nC R^{L}(P)=\\operatorname*{inf}_{\\substack{d^{\\prime}\\in D^{M}(P)\\,d\\in D^{M}(P)\\,(h,s,a)\\in\\mathcal{X}}}\\operatorname*{min}_{\\substack{\\sum_{s^{\\prime}\\in S}d_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})}}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "At this point, we deviate from the previous proof and analyze the external optimization problem. In particular, we want to show that the minimum is obtained in the set of Markovian policies. We prove it using Lemma 2. For its application, notice that $D^{\\mathcal{M}}(P)$ is a convex and compact polytope, and therefore so does its linear transformation $\\begin{array}{r}{\\mathcal{P}=\\left\\{\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})|d\\in D^{\\mathcal{M}}(P)\\right\\}}\\end{array}$ , so the conditions of the lemma hold: the infimum is obtained at a minimizer in the set. Substituting it back into $C R^{L}({\\cal P})$ and using the equivalence between occupancy measures and policies leads to the desired result: ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{C R^{L}(P)=\\underset{d^{\\prime}\\in D^{\\mathcal{M}}(P)}{\\mathrm{min}}\\underset{d\\in D^{\\mathcal{M}}(P)}{\\mathrm{max}}\\underset{(h,s,a)\\in\\mathcal{X}}{\\mathrm{min}}\\frac{d_{h}(s,a)}{\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}\\left(s\\left|s_{t_{L}(h)}=s^{\\prime}\\right.\\right)}\\quad}&{(\\mathrm{Lemma~}2)}\\\\ {=\\underset{\\pi^{*}\\in\\Pi^{\\mathcal{M}}}{\\mathrm{min}}\\underset{\\pi\\in\\Pi^{\\mathcal{M}}}{\\mathrm{max}}\\underset{(h,s,a)\\in\\mathcal{X}}{\\mathrm{min}}\\frac{d_{h}^{\\pi}(s,a)}{\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi^{*}}(s^{\\prime})d_{h}^{*}\\left(s\\left|s_{t_{L}(h)}=s^{\\prime}\\right.\\right)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "For stationary rewards, where $r_{h}(s,a)=r(s,a)$ , we rewrite Equation (8) as ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\odot R^{L}(P)=\\operatorname*{inf}_{\\substack{d^{\\prime}\\in D^{M}(P)\\,r_{h}\\in[0,1]^{S\\,A}\\,d\\in D^{M}(P)}}\\frac{\\sum_{(s,a)\\in S\\times A}\\left(\\sum_{h=1}^{H}d_{h}(s,a)\\right)r(s,a)}{\\sum_{(s,a)\\in S\\times A}\\left(\\sum_{h=1}^{H}\\sum_{s^{\\prime}\\in S}d_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=s^{\\prime})\\right)r(s,a)}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "We can now reapply Lemma 1 with the appropriate $\\begin{array}{r}{\\alpha_{s,a}\\!=\\!\\sum_{h=1}^{H}\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\prime}(s^{\\prime})d_{h}^{*}\\big(s|s_{t_{L}(h)}=s^{\\prime}\\big),}\\end{array}$ , followed by applying Lemma 2, to get ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{{\\cal C}R^{L}(P)=\\underset{d^{\\prime}\\in{\\cal D}^{M}(P)}{\\operatorname*{inf}}\\underset{d\\in{\\cal D}^{M}(P)}{\\operatorname*{max}}\\underset{(s,a)\\in{\\cal S}\\times{\\cal A}}{\\operatorname*{min}}\\frac{\\sum_{h=1}^{H}d_{h}(s,a)}{\\sum_{h=1}^{H}\\sum_{s^{\\prime}\\in{\\cal S}}d_{t_{L}(h)}^{\\prime}\\left(s^{\\prime}\\right)d_{h}^{*}\\left(s\\left|s_{t_{L}(h)}=s^{\\prime}\\right.\\right)}~\\mathrm{(Lemma~1)}}\\\\ &{\\quad\\quad=\\underset{\\pi^{*}\\in\\Pi^{M}}{\\operatorname*{min}}\\ \\underset{\\pi\\in\\Pi^{M}}{\\operatorname*{max}}\\ \\underset{(s,a)\\in{\\cal S}\\times{\\cal A}}{\\operatorname*{min}}\\frac{\\sum_{h=1}^{H}d_{h}^{\\pi}\\left(s,a\\right)}{\\sum_{h=1}^{H}\\sum_{s^{\\prime}\\in{\\cal S}}d_{t_{L}(h)}^{\\pi^{*}}\\left(s^{\\prime}\\right)d_{h}^{*}\\left(s\\left|s_{t_{L}(h)}=s^{\\prime}\\right)}.\\quad\\quad\\mathrm{(Lemma~2)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Worst-case environment \u2013 lower bound: First notice that by definition, any $L$ -step lookahead policy is also a full lookahead policy. In particular, for all environments, $V^{L,*}(P,r)\\stackrel{\\bar{<}}{\\leq}V^{H,*}(P,r)$ , and the reverse relation would hold for the CR. Thus, from Theorem 1, we directly get the lower bound $\\begin{array}{r}{C R^{L}\\,\\geq\\,C R^{H}\\,\\geq\\,\\frac{1}{S A H}}\\end{array}$ . We further proof that $\\begin{array}{r}{C R^{L}\\ge\\frac{1}{(H-L+1)A^{L}}}\\end{array}$ using a reduction to the full lookahead case. ", "page_idx": 19}, {"type": "text", "text": "To this end, we start by decomposing the no-lookahead value of any $\\pi\\in\\Pi^{\\mathcal{M}}$ as follows ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{V^{0,\\pi}(P,r)=}&{\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{K}}r_{h}(s,a)d_{h}^{\\pi}(s,a)}\\\\ &{=\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{K}}r_{h}(s,a)\\mathrm{Pr}\\left\\{s_{h}=s,a_{h}=a\\right\\}}\\\\ &{=\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{K}}r_{h}(s,a)\\sum_{v\\in\\mathcal{E}}\\mathrm{Pr}\\left\\{s_{t,(h)}=s^{\\prime}\\right\\}\\mathrm{Pr}\\left\\{s_{h}=s,a_{h}=a|s_{t,(h)}=s^{\\prime}\\right\\}}\\\\ &{=\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{K}}r_{h}(s,a)\\sum_{v\\in\\mathcal{E}}\\mathrm{Pr}\\left\\{s_{t,(h)}(s^{\\prime})\\right\\}\\mathrm{Pr}\\left\\{s_{h}=\\alpha,a_{h}=a|s_{t,(h)}=s^{\\prime}\\right\\}}\\\\ &{=\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{K}}r_{h}(s,a)\\sum_{v\\in\\mathcal{E}}d_{t,(h)}^{\\pi}(s^{\\prime})d_{h}^{\\pi}(s,a|s_{t,(h)}=s^{\\prime})}\\\\ &{=\\displaystyle\\sum_{s\\in\\mathcal{E}}d_{t}^{\\pi}(s^{\\prime})\\sum_{h=1}^{L}\\sum_{(s,a)\\in\\mathcal{E}}\\mathrm{Pr}_{h}(s,a)d_{h}^{\\pi}(s,a|s_{1}=s^{\\prime})}\\\\ &{\\quad\\pi-\\displaystyle\\sum_{(h^{2})\\in\\mathcal{E}}\\mathrm{Pr}(s^{\\prime})\\sum_{\\rho=1}^{L}r_{h+(s,a)}d_{h}^{\\pi}(s,a|s_{1}=s^{\\prime})}\\\\ &{\\quad+\\displaystyle\\sum_{(s=a)^{\\prime}}\\sum_{s\\in\\mathcal{E}}c_{s}^{\\pi}(s^{\\prime})\\sum_{(s,a)\\in\\mathcal{E}}r_{t+(t-1)}(s,a)d_{t+L-1}^{\\pi}(s,a|s_{h}=s^{\\prime}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "In the last inequality, we decompose the summation into two terms depending on whether $t_{L}(h)\\triangleq$ i = 1 or tL(h) > 1. For brevity, let ri iH=\u22121L be such that for all $(h,s,a)\\in\\mathcal{X}$ , ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{r_{h}^{1}(s,a)=r_{h}(s,a)\\mathbb{1}\\{h\\in[L]\\},}\\\\ &{r_{h}^{i}(s,a)=r_{h}(s,a)\\mathbb{1}\\{h=i+L-1\\},\\quad\\forall i\\in\\{2,\\ldots H-L+1\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Using this notation, one could rewrite the value as ", "page_idx": 19}, {"type": "equation", "text": "$$\nV^{0,\\pi}(P,r)=\\sum_{i=1}^{H-L+1}\\sum_{s^{\\prime}\\in S}d_{i}^{\\pi}(s^{\\prime})\\sum_{(s,a)\\in S\\times A\\atop(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}=s^{\\prime}).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Notice that $r_{h}^{i}$ are the expected rewards of timesteps observed by the lookahead agent at step $i$ . We now define the following set of policies ", "page_idx": 20}, {"type": "text", "text": "\u2022 A Markovian policy that maximizes the $L$ -lookahead value is denoted by ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\pi^{*}\\in\\arg\\operatorname*{max}_{\\pi\\in\\Pi^{\\mathcal{M}}}\\sum_{(h,s,a)\\in\\mathcal{X}}r_{h}(s,a)\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(s^{\\prime})d_{h}^{*}\\big(s|s_{t_{L}(h)}=s^{\\prime}\\big).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "\u2022 For any $i\\in[H-L\\!+\\!1]$ , let $\\pi_{i}$ be a Markovian policy that plays $\\pi^{*}$ until reaching some state $s_{i}$ and then continues by a policy that maximizes the reward function $r^{i}$ for the following $L$ timesteps: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\pi_{i}\\in\\underset{\\pi\\in\\Pi^{\\mathcal{M}}}{\\arg\\operatorname*{max}}\\,\\sum_{(s,a)\\in\\mathcal{S}\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "For $i=1$ , the state $s_{1}$ would be the initial state, generated from the initial state distribution. Notice that starting for the $i^{t h}$ timestep, $\\pi_{i}$ is an optimal policy given rewards $r^{i}$ in the standard MDP model, so there exists an optimal Markovian policy that maximizes its value simultaneously for all $s_{i}\\in\\mathcal{S}$ . By ignoring all but the $i^{t h}$ term in Equation (9), one could clearly see that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{0,\\pi_{i}}\\geq\\displaystyle\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{i}^{\\pi^{*}}(s^{\\prime})\\sum_{(s,a)\\in\\mathcal{S}\\times\\mathcal{A}}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi_{i}}(s,a|s_{i}=s^{\\prime})}\\\\ &{\\quad=\\displaystyle\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{i}^{\\pi^{*}}(s^{\\prime})\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(s,a)\\in\\mathcal{S}\\times\\mathcal{A}}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}=s^{\\prime}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "\u2022 All aforementioned policies are Markovian, so by the convexity of the occupancies induced by Markovian policies [Altman, 2021], there exists $\\pi_{u}\\in\\Pi^{\\mathcal{M}}$ such that for all $(h,s,a)\\in\\mathcal{X}$ , ", "page_idx": 20}, {"type": "equation", "text": "$$\nd_{h}^{\\pi_{u}}(s,a)=\\frac{1}{H-L+1}\\sum_{i=1}^{H-L+1}d_{h}^{\\pi_{i}}(s,a).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Since values are linear in the occupancy measure, we can bound the optimal no-lookahead value by ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{0,*}(P,r)\\geq V^{0,\\pi_{u}}(P,r)}\\\\ &{\\qquad=\\displaystyle\\frac{1}{H-L+1}\\sum_{i=1}^{H-L+1}V^{0,\\pi_{i}}}\\\\ &{\\qquad\\geq\\displaystyle\\frac{1}{H-L+1}\\sum_{i=1}^{H-L+1}\\sum_{s^{\\prime}\\in S}d_{i}^{\\pi^{*}}(s^{\\prime})\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}=s^{\\prime}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Moving forwards, we use a similar decomposition to the $L$ -lookahead value using Proposition 2: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{L,*}(P,r)\\leq\\underset{\\pi\\in\\mathbb{R}^{M}}{\\operatorname*{max}}\\quad\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}r_{h}(s,a)\\underset{s^{\\prime}\\in\\mathcal{X}}{\\sum}d_{t,(h)}^{*}(s^{\\prime})d_{h}^{*}(s|s_{t,(h)}=s^{\\prime})}\\\\ &{=\\underset{(h,s,a)\\in\\mathcal{X}}{\\sum}r_{h}(s,a)\\underset{s^{\\prime}\\in\\mathcal{E}}{\\sum}d_{t,(h)}^{*}(s^{\\prime})d_{h}^{*}(s|s_{t,(h)}=s^{\\prime})}\\\\ &{=\\underset{s^{\\prime}\\in\\mathcal{E}}{\\sum}d_{1}(s^{\\prime})\\underset{h=1}{\\overset{L}{\\sum}}\\underset{(s,a)\\in\\mathcal{E}\\times\\mathcal{A}}{\\sum}r_{h}(s,a)d_{h}^{*}(s|s_{1}=s^{\\prime})}\\\\ &{\\quad\\quad\\quad\\frac{H-L+1}{+2}\\underset{s^{\\prime}\\in\\mathcal{E}}{\\sum}d_{t}^{*}(s^{\\prime})\\underset{(s,a)\\in\\mathcal{X}}{\\sum}\\underset{s^{\\prime}+\\mathcal{L}}{\\sum}r_{i+L-1}(s,a)d_{i+L-1}^{*}(s|s_{i}=s^{\\prime})}\\\\ &{=\\underset{s=1}{\\overset{L}{\\sum}}\\underset{s^{\\prime}\\in\\mathcal{S}}{\\sum}d_{t}^{*}(s^{\\prime})\\underset{(s,a)\\in\\mathcal{S}\\times\\mathcal{A}}{\\sum}\\underset{h=i}{\\overset{L}{\\sum}}\\sum_{r_{h}^{i}(s,a)d_{h}^{*}(s|s_{i}=s^{\\prime}).}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "To conclude the  ction, recal   ii  \u03b1\u03b1iiyxii rse.td.u ,l  tdhuee  itnoe tqhuea lqituya $\\begin{array}{r}{\\frac{\\sum_{i}\\alpha_{i}x_{i}}{\\sum_{i}\\alpha_{i}y_{i}}\\geq\\operatorname*{min}_{i}\\left\\{\\frac{x_{i}}{y_{i}}\\right\\}}\\end{array}$ ,o  wofh ilcinh eharo lfdusn fcotir oanlsl  (vgailvueens $x_{i},y_{i},\\alpha_{i}\\geq0$ $\\textstyle\\sum_{i}\\alpha_{i}>0$   \nthe convention that $x/0=+\\infty)$ . Applying this on the CR with the coefficients $\\alpha_{i,s^{\\prime}}={d_{i}^{\\pi}}^{*}\\left(s^{\\prime}\\right)$ and using Equations (10) and (11), we get for all environments that ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\top R^{L}(P,r)=\\frac{V^{0,*}(P,r)}{V^{L,*}(P,r)}}\\\\ &{\\qquad\\qquad\\geq\\frac{1}{H-L+1}\\operatorname*{min}_{i\\in[H-L+1],}\\Biggl\\{\\frac{\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\sum_{(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{\\pi}(s,a|s_{i}=s^{\\prime})}{\\sum_{(s,a)\\in S\\times A}\\sum_{h=i}^{i+L-1}r_{h}^{i}(s,a)d_{h}^{*}(s|s_{i}=s^{\\prime})}\\Biggr\\}}\\\\ &{\\qquad\\qquad\\overset{(*)}{\\geq}\\frac{1}{(H-L+1)A^{L}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "The last inequality is the reduction to the full lookahead: each of the terms is exactly the CR versus a full lookahead agent with horizon $L$ and reward expectations $r^{i}$ (see Theorem 1, part 1). Thus, each of the terms is lower-bounded by the bound for the worst-case environment given horizon $L$ (see Theorem 1, part 3) \u2013 byA1L . ", "page_idx": 21}, {"type": "text", "text": "Worst-case environment \u2013 upper bound: as in Theorem 3, this part of the proof is covered in Proposition 1, where we present a tree-like stationary environment with the stated behavior. \u53e3 ", "page_idx": 21}, {"type": "text", "text": "C Analyzing the Competitive Ratio of Specific Environments ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "C.1 Upper-Bounds for Reward Lookahead \u2013 Delayed Trees ", "page_idx": 22}, {"type": "image", "img_path": "URyeU8mwz1/tmp/a2e44d6c16af19ecd247fccb6443627110ab752050612da7934c7962c9f7fd86.jpg", "img_caption": ["Figure 2: A near-worst-case environment: tree-like MDP. An agent can decide to stay at the root of the tree, but once it starts to traverse the tree, it must navigate to one of its leaves, from which it moves to a non-rewarding terminal state. All leaves have long-shot rewards, while all other nodes yield no reward. "], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Proposition 1. For any $L\\in[H]$ and any $\\delta\\in(0,1)$ , there exist stationary environments with rewards over [0, 1] s.t. if $S=A^{n}+1$ for $n\\in\\{0,\\ldots,L-1\\},$ , then $\\begin{array}{r}{C R^{L}\\leq\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)}}\\end{array}$ , and i $f S\\geq A^{L}+1$ , then $\\begin{array}{r}{C R^{L}\\leq\\frac{1+\\delta}{(H-L+1)(A^{L}-1)}}\\end{array}$ . Moreover, $i f\\,L=H$ and $S\\geq A^{H}-1$ , there exists an environment s.t. $\\begin{array}{r}{C R^{H}\\leq\\frac{1+\\delta}{A^{H}}}\\end{array}$ ", "page_idx": 22}, {"type": "text", "text": "Proof. Assume that $S=A^{n}+1$ for some $n\\in\\mathbb N$ . We divide the proof into different cases, depending on the values of $n$ and $L$ . ", "page_idx": 22}, {"type": "text", "text": "Case 1: $L\\in[H]$ and $n\\in[1,L-1]$ . To prove this bound, we design a tree MDP with an additional option to decide when to traverse it, as illustrated in Figure 2. In particular, assume that the fixed initial state $s_{1}$ is the root of a tree of depth $n+1$ such that the root has $A-1$ descendants and all other nodes have $A$ descendants. Thus, the number of nodes in this tree is ", "page_idx": 22}, {"type": "equation", "text": "$$\n1+(A-1)\\sum_{i=1}^{n}A^{i-1}=1+(A-1){\\frac{A^{n}-1}{A-1}}=A^{n},\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "and the number of leaves is $(A-1)A^{n-1}$ . Assuming that after traversing the tree, the environment moves to a terminal state $s_{T}$ , this environment could indeed be represented using $S=A^{n}+1$ states. We denote the dynamics of this tree by $P$ . ", "page_idx": 22}, {"type": "text", "text": "For the dynamics, we allocate one action in the root of the tree that keeps the agent at the root, while the rest of the actions allow traversing through the tree. At the leaves, all actions transition to a terminal state $s_{T}$ . We emphasize that once an agent has decided to start traversing the tree, it has to continue all the way until the leaves (and terminal state), so the decision when to traverse the tree is taken at its root. Finally, the reward of any action at any leaf is a long-shot $L S_{\\epsilon}(\\epsilon)$ , namely Bernoulli-distributed with probability $\\epsilon$ . In particular, this distribution is bounded in $[0,1]$ . ", "page_idx": 23}, {"type": "text", "text": "In this example, any agent with no lookahead information will perform at most one action at a single leaf, independently of the reward realization, thus collecting in expectation no more than the expected reward of a single leaf $V^{0,*}\\leq\\mathbb{E}[L S_{\\epsilon}(\\epsilon)]=\\epsilon.$ . ", "page_idx": 23}, {"type": "text", "text": "On the other hand, an $L$ -lookahead agent could start traversing the tree only when a reward will be realized upon its arrival to the leaf. To reach a leaf at timestep $h$ , the agent has to start traversing the tree at timestep $h-n$ . Thus, this agent will wait at the root to see whether a reward is realized in any leaf at timesteps $\\{n+1,\\ldots,H\\}$ , and only if so, will traverse it. ", "page_idx": 23}, {"type": "text", "text": "Since there are $(A-1)A^{n-1}$ leaves with $A$ actions each, the probability that no reward is realized in any leaf at these timesteps is (1 \u2212\u03f5)(H\u2212n)\u00b7(A\u22121)A \u00b7A, a nd the optimal lookahead agent would collect an expected reward of at least ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{L,*}\\geq1-(1-\\epsilon)^{(H-n)\\cdot(A-1)A^{n}}}\\\\ &{\\qquad\\geq(H-n)\\cdot(A-1)A^{n}\\epsilon-((H-n)\\cdot(A-1)A^{n})^{2}\\epsilon^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where the last inequality is since $(1-x)^{n}\\leq1-n x+n^{2}x^{2}$ . ", "page_idx": 23}, {"type": "text", "text": "Combining both inequalities, for this environment we have that ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle C R^{L}(P,r)\\left.=\\frac{V^{0,*}}{V^{L,*}}\\right.}\\\\ {\\displaystyle\\le\\frac{\\epsilon}{(H-n)\\cdot(A-1)A^{n}\\epsilon-\\left((H-n)\\cdot(A-1)A^{n}\\right)^{2}\\epsilon^{2}}}\\\\ {\\displaystyle=\\frac{1}{(H-n)\\cdot(A-1)A^{n}-\\left((H-n)\\cdot(A-1)A^{n}\\right)^{2}\\epsilon}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "In particular, for any $\\delta>0$ , we could fix $\\epsilon$ small enough such that ", "page_idx": 23}, {"type": "equation", "text": "$$\nC R^{L}(P,r)\\leq\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot(A-1)(S-1)},\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where we used the relation $S=A^{n}+1$ . ", "page_idx": 23}, {"type": "text", "text": "Case 2: $L\\in[H]$ and $n=0$ . This is the case of $S=2$ . We separate it for the clarity of presentation, but the example remains the same: the first state $s_{1}$ is the initial state and the second $s_{2}=s_{T}$ is a terminal non-rewarding state. When in $s_{1}$ , a single action does not change the state but yields no reward, while all other $A-1$ actions transition the environment to state $s_{2}$ , giving a long-shot reward $L S_{\\epsilon}(\\epsilon)$ . As in the first case, without any lookahead information, the agent could collect a reward at most once and obtain in expectation at most $V^{0,*}\\leq\\mathbb{E}[L S_{\\epsilon}(\\epsilon)]=\\epsilon.$ ", "page_idx": 23}, {"type": "text", "text": "On the other hand, any lookahead agent would move from $s_{1}$ to $s_{2}$ only when a reward is realized. Since there are $A-1$ rewarding actions and $H$ opportunities to collect rewards, a lookahead agent could collect at least ", "page_idx": 23}, {"type": "equation", "text": "$$\nV^{L,*}\\geq1-\\left(1-\\epsilon\\right)^{H(A-1)}\\geq H(A-1)\\epsilon-H^{2}(A-1)^{2}\\epsilon^{2},\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where the last inequality is again due to the inequality $(1-x)^{n}\\leq1-n x+n^{2}x^{2}$ . ", "page_idx": 23}, {"type": "text", "text": "Combining both bounds, we now get ", "page_idx": 23}, {"type": "equation", "text": "$$\nC R^{L}(P,r)=\\frac{V^{0,*}}{V^{L,*}}\\le\\frac{\\epsilon}{H(A-1)\\epsilon-H^{2}(A-1)^{2}\\epsilon^{2}}=\\frac{1}{H(A-1)-H^{2}(A-1)^{2}\\epsilon}.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Thus, for any $\\delta>0$ , there exist small enough $\\epsilon$ such that ", "page_idx": 23}, {"type": "equation", "text": "$$\nC R^{L}(P,r)\\leq\\frac{1+\\delta}{H(A-1)}.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Case 3: $L\\in[H-1]$ and $S\\geq A^{L-1}+1$ . We use the same example as in the first case and $n=L-1$ , ignoring all extra states. Direct substitution to that bound results with ", "page_idx": 24}, {"type": "equation", "text": "$$\nC R^{L}(P,r)\\leq\\frac{1+\\delta}{(H-L+1)\\cdot(A-1)(S-1)},\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Case 4: Finally, if $L=H$ and $S\\geq A^{H}-1$ , we discard the loop at the root and just build a full tree of depth $H$ , leading to $A^{H-1}$ leaves (with $A$ actions each). From the root, the full lookahead agent can reach any leaf with a realized reward, which exists with probability $1-(1-\\epsilon)^{A^{H}}$ . Following the exact same analysis would now yield $\\begin{array}{r}{C R^{H}(P,r)\\leq\\frac{1+\\delta}{A^{H}}}\\end{array}$ for any $\\delta>0$ , concluding the proof. ", "page_idx": 24}, {"type": "text", "text": "Modification when $S\\in[A^{n}+2,A^{n+1}]$ : In this case, we cannot build a complete tree of depth $\\log_{A}(S-1)+1$ . Instead, we start from the complete tree of depth $\\lfloor\\log_{A}(S-1)\\rfloor+1$ and use any extra states to create additional leaves of depth $\\lceil\\log_{A}(S-1)\\rceil+\\bar{1}$ . The number of leaves for $S=A^{n}+1$ was $N_{0}=(A-1)A^{n-1}$ . Therefore, $\\left\\lfloor{\\frac{S-N_{0}}{A}}\\right\\rfloor$ of these leaves will have $A$ descendants in the new tree, increasing the number of leaves by $A-1$ each, while one additional \u2018old\u2019 leaf will take the rest of the states. For this reason, the total number of leaves $N$ would be ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{N\\ge N_{0}+(A-1)\\left\\lfloor\\displaystyle\\frac{S-N_{0}}{A}\\right\\rfloor+\\left(S-N_{0}-A\\left\\lfloor\\displaystyle\\frac{S-N_{0}}{A}\\right\\rfloor-1\\right)}\\\\ &{\\quad=S-\\left\\lfloor\\displaystyle\\frac{S-N_{0}}{A}\\right\\rfloor-1}\\\\ &{\\quad\\ge S\\bigg(1-\\displaystyle\\frac{1}{A}\\bigg)-2.}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Recalling that in each leaf, we have $A$ possible actions, so rewards could be realized in $N A$ locations, and increasing the depth by 1 (so that the lookahead agent has one less attempt), we can follow the exact same analysis and get a more general bound of ", "page_idx": 24}, {"type": "equation", "text": "$$\nC R^{L}(P,r)\\leq{\\frac{1+\\delta}{(H-\\lceil\\log_{A}(S-1)\\rceil)\\cdot(S(A-1)-2A)}}=\\Theta{\\left({\\frac{1+\\delta}{(H-\\log_{A}(S-1))\\cdot A S}}\\right)}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "C.2 Analysis of Grid MDPs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "In the grid MDP, an agent starts at the bottom-left corner of an $n\\times n$ grid and can either move up or right until getting to the top-right corner (\u2018Manhattan navigation\u2019, see Figure 1(b)). After taking one last action, the interaction ends. We denote the states on the $i^{t h}$ column (starting from the left) by $s_{i,1},\\ldots,s_{i,n}$ (with $s_{i,1}$ as the bottom state) and the states on the $j^{t h}$ row (starting from the bottom) by $s_{1,j},\\ldots,s_{n,j}$ (with $s_{1,j}$ as the leftmost state). At the top edge of the grid, the agent must move right, and at the right edge, it must move up. The size of the state space is $S=n^{2}$ , the action space is of size (at most) $A=2$ and the horizon is $H=2n-1$ . ", "page_idx": 24}, {"type": "text", "text": "This MDP generalizes the chain MDP with $A=2$ , analyzed in Section 5; indeed, by setting the reward to be non-zero only when going up from the bottom row $(s_{1,j})$ , we effectively get a chain of length $n$ and a corresponding CR of $\\begin{array}{r}{C R^{H}=C R^{1}=\\frac{1}{n}=\\frac{2}{H+1}}\\end{array}$ . In particular, the reduction immediately leads to an upper bound of $\\mathcal{O}\\big(\\frac{1}{H}\\big)$ for $C R^{1}$ (and $C R^{H}$ ), where the bound for one-step is aallsmoo vste rwsuors sft-uclla sleo,o skianhcee $\\begin{array}{r}{C R^{1}\\geq\\frac{1}{A H}=\\frac{1}{2H}.}\\end{array}$ P.,  Ianst ewrees tniongwl yp, rtohvise .is a near-worst-case reward placement ", "page_idx": 24}, {"type": "text", "text": "One way to prove this is to analyze a flow on the grid graph, which is equivalent to occupancy in deterministic MDPs. The value of the full lookahead agent corresponds with the maximal possible flow through any edge in the graph, which is the unit flow $(d_{i+j-1}^{*}(s_{i,j})=1)$ . Hence, the goal of the no-lookahead agent is to make sure that there is a minimal flow in all the edges of the graph, and this minimum would be the CR. This could be achieved by distributing a flow on the bottom and leftmost states and sending it in straight lines to the other side of the grid, as explained in Figure 3. The resulting flow ensures a minimal flow of $\\textstyle{\\frac{1}{2(n-1)}}$ through all the edges. Even more, looking at the flow description, we could explicitly write the stochastic policy that achieves this flow by looking at ", "page_idx": 24}, {"type": "image", "img_path": "URyeU8mwz1/tmp/526ee06d72ec8d7c5a222768ee0ff033facc3b682edf567937a068f60580932c.jpg", "img_caption": ["Figure 3: Illustration of a possible flow on a grid graph, starting from the bottom-left corner and ending at the top-right corner. The first step is to distribute the flow on the bottom and leftmost states, such that there is excess flow of2(n1\u22121) flow in each of these states (green). At the leftmost state, this excess flow is sent at a direct line towards the right (blue), while in the bottom row, this flow is sent up (red). Such flow ensures that all edges have a minimal flow of $\\scriptstyle{\\frac{1}{2(n-1)}}$ . "], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "the ratio of the flow in each direction: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\pi({\\mathrm{Move-Right}}|s_{i,j})={\\left\\{\\begin{array}{l l}{{\\frac{1}{2}}}&{i=j=1}\\\\ {{\\frac{n-i}{n-i+1}}}&{i=1,j\\in\\{2,\\ldots,n-1\\}}\\\\ {{\\frac{1}{n-j+1}}}&{j=1,i\\in\\{2,\\ldots,n-1\\}}\\\\ {{\\frac{1}{2}}}&{i,j\\in\\{2,\\ldots,n-1\\}}\\\\ {1}&{i=n,j\\in\\{2,\\ldots,n-1\\}}\\\\ {1}&{i=n,j\\in\\{2,\\ldots,n-1\\}}\\\\ {0}&{j=n,i\\in\\{2,\\ldots,n-1\\}}\\\\ {{\\frac{1}{2}}}&{i=j=n}&{{\\mathrm{(end)}}}\\end{array}\\right.}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "For this policy, it is easy to prove that the minimal occupancy $d_{i+j-1}^{\\pi}(s_{i,j},a)$ is lower-bounded by 2(n1\u22121) by directly verifying on the edges of the grid (starting from the bottom and left edges and then continuing to the top and right ones), and then proving with a simple induction that strictly inside the grid, $\\begin{array}{r}{d_{i+j-1}^{\\pi}(s_{i,j})\\stackrel{\\cdot}{=}\\frac{1}{n-1}}\\end{array}$ . This implies that ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\Im R^{H}(P)=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(h,s,a)\\in\\mathcal{X}}\\frac{d_{h}^{\\pi}(s,a)}{d_{h}^{*}(s)}=\\operatorname*{max}_{\\pi\\in\\Pi^{M}}\\operatorname*{min}_{(i,j)\\in[n]^{2},a\\in A}d_{i+j-1}^{\\pi}(s_{i,j},a)\\ge\\frac{1}{2(n-1)}=\\frac{1}{H-1}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "In particular, for the grid MDP, the worst-case CR for full lookahead is at most worse by a factor of 2 compared to the CR versus one-step lookahead, similar to the chain MDP. However, in contrast to chains, where the prophet inequality ensures a constant ratio between one-step and full lookahead, in grids, this ratio could depend on $H$ . For example, assume long-shot rewards $R\\sim L S_{\\epsilon}(1)$ for arbitrarily small \u03f5. As we already calculated the value for long-shot rewards, we know that one-step lookahead agents effectively collect all expected rewards along their trajectory (Equation (4)) \u2013 at most $2H$ rewards \u2013 while the full lookahead agents collect all reachable rewards (Equation (6)) \u2013 a total of $\\Omega(H^{2})$ rewards. At first glance, it might be seen as a contradiction, following a logic that no-lookahead no-lookahead one-step lookahead full lookahead one-step lookahead full lookahead but the careful reader would notice that the CRs are derived for very different reward expectations; one CR is calculated for sparse chain-like rewards while the other is calculated for dense rewards where all expectations are equal. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "Dense rewards. We end this example by analyzing the CR when rewards are dense \u2013 all rewards are of unit expectation. Since all reward expectations are equal to 1, regardless of the policy, the value of all no-lookahead agents would trivially be $H$ . For the value of $L$ -lookahead agents we use Proposition 2 and rewrite the value by decomposing to different values of $t_{L}(h)$ as follows: ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\operatorname*{sup}_{\\boldsymbol{\\tau}^{H}\\sim\\mathcal{D}(1)}V^{L,*}(P,1)=\\displaystyle\\operatorname*{max}_{\\boldsymbol{\\pi}\\in\\Pi^{M}}\\displaystyle\\sum_{(h,s,a)\\in\\mathcal{X}}\\displaystyle1\\cdot\\sum_{\\boldsymbol{s}^{\\prime}\\in\\mathcal{S}}d_{t_{L}(h)}^{\\pi}(\\boldsymbol{s}^{\\prime})d_{h}^{*}(s|s_{t_{L}(h)}=\\boldsymbol{s}^{\\prime})}\\\\ {\\displaystyle=\\displaystyle\\sum_{(s,a)\\in\\mathcal{S}\\times\\mathcal{A}}\\displaystyle\\sum_{h=1}^{L}d_{h}^{*}(s)+\\displaystyle\\operatorname*{max}_{\\boldsymbol{\\pi}\\in\\Pi^{M}}\\left\\{\\displaystyle\\sum_{t=2}^{H-L+1}\\displaystyle\\sum_{s^{\\prime}\\in\\mathcal{S}}d_{t}^{\\pi}(\\boldsymbol{s}^{\\prime})\\sum_{(s,a)\\in\\mathcal{S}\\times\\mathcal{A}}d_{t+L-1}^{*}(s|s_{t}=\\boldsymbol{s}^{\\prime})\\right\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Since the environment is deterministic, all occupancies $d^{\\ast}$ are binary: one if a state is reachable and zero otherwise. From the initial state, there are $L^{2}$ reachable states so the first term is equal to $L^{2}$ . For the second term, we bound the number of reachable states after exactly $L$ steps by $L+1$ (all the possible number of \u2019up\u2019 moves between 0 and $+L$ ). This yields the bound ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{\\mathcal{R}^{H}\\sim\\mathcal{D}(1)}{\\operatorname*{sup}}V^{L,*}(P,1)\\leq L^{2}+\\underset{\\pi\\in\\Pi^{\\times}}{\\operatorname*{max}}\\left\\{\\overset{H-L+1}{\\underset{t=2}{\\sum}}\\underset{\\underset{=1}{s^{\\prime}\\in\\mathcal{S}}{\\sum}}d_{t}^{\\pi}(s^{\\prime})(L+1)\\right\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad=L^{2}+(H-L)(L+1)}\\\\ &{\\qquad\\qquad\\leq H(L+1)}\\end{array}\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "and result with a CR of CRL(P, 1) \u2265L1+1. ", "page_idx": 26}, {"type": "text", "text": "This bound is near-tight, again using Proposition 2. For the proof, we focus on a policy $\\pi$ that iterates between moving up and right. As previously explained, the number of reachable states when looking $L$ steps forward is $L+1$ if we could perform all combinations of moving up and right. In particular, this is the case as long as we are not too close to the top-right border of the grid. By iterating the movements upwards and rightwards, for any $h\\leq H-2L$ , we arrive to a state $s_{i,j}$ such that $\\begin{array}{r}{\\operatorname*{max}\\{i,j\\}\\le\\lceil\\frac{h}{2}\\rceil\\le\\lceil\\frac{2n-1-2L}{2}\\rceil\\le n-L}\\end{array}$ , which ensures we are a distance of at least $L$ from the border. Therefore, we can bound ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{\\mathcal{R}^{H}\\sim\\mathcal{D}(1)}{\\operatorname*{sup}}V^{L,*}(P,1)\\geq L^{2}+\\underset{t=2}{\\overset{H-2L}{\\sum}}\\underset{=1}{\\overset{\\sum_{\\ell}^{\\pi}(s^{\\prime})}{\\sum}}(L+1)}\\\\ &{=L^{2}+\\operatorname*{max}\\{(H-2L-1)(L+1),0\\}}\\\\ &{=\\Omega(H L),}\\end{array}\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "where the last relation is immediately obtained by looking at either $L<H/4$ or $L\\ge H/4$ . Thus, we also have that $C R^{L}(P,1)=\\mathcal{O}(1/\\dot{L})$ , and we can conclude that $C R^{L}(P,\\dot{1})=\\Theta(1/L)$ . ", "page_idx": 26}, {"type": "text", "text": "C.3 Upper-Bound for Transition Lookahead ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "In this appendix, we analyze the competitive ratio versus one-step transition lookahead agents. Formally, at each timestep $h$ and state $s_{h}$ , such agents observe what the next state $s_{h+1}$ would be upon playing any of the actions $a\\in A$ . We assume that this is the only information available to the agent (namely, the agent has no reward lookahead). We also assume that transitions are generated independently at different timesteps and are independent of the rewards. Notably, even with one-step information, the CR is exponentially small, as stated in the following proposition: ", "page_idx": 26}, {"type": "text", "text": "Proposition 2. For any $A\\geq2$ , $H\\ge5$ and $S\\geq A^{\\left(1-{\\frac{1}{e}}\\right)H}$ , there exists an environment such that the CR versus one-step transition lookahead agents is $C R\\leq\\frac{2}{(A{-}1)^{\\binom{1-1}{1-\\frac{1}{e}}H-3}}$ ", "page_idx": 26}, {"type": "text", "text": "Proof. The environment we build is a complete tree of depth $d$ (to be determined), where each node has $A-1$ descendants. The agent always starts at the root of the tree. At each node, the agent can play $A=1$ to stay at the same node, while the rest of the $A-1$ actions move the agent to one of the descendants of the node uniformly at random. Only one leaf has a deterministic unit reward of $R=1$ for all actions, while all other leaves yield no reward. After traversing the tree, the agent moves to a terminal non-rewarding state $s_{T}$ . The total number of states required to create this environment is ", "page_idx": 27}, {"type": "equation", "text": "$$\n1+\\sum_{i=0}^{d-1}(A-1)^{i}\\leq2+(A-1)\\sum_{i=0}^{d-2}A^{i}=A^{d-1}+1\\leq A^{d},\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "and the number of leaves in the tree is $N=(A-1)^{d-1}$ . A no-lookahead agent could not do better than randomly traversing the tree and would obtain an expected reward of at most $V^{0,*}\\leq1/N$ . ", "page_idx": 27}, {"type": "text", "text": "On the other hand, one-step transition lookahead agents could choose the following policy: if an action leads in the direction of the rewarding leaf, take it; otherwise, wait in the current node. To obtain the reward, there have to be at least $d-1$ timesteps where an action leads in the right direction, over the span of $H-1$ attempts (one additional round is required to collect the reward. Letting ps = 1 \u2212 1 \u2212A1\u22121 A\u22121\u2265 be the probability that such an action exists at a certain node (\u2018success\u2019), the value of the one-step lookahead agent would be at least the probability that a binomial distribution $\\mathrm{Bin}(n=H-1,p=p_{s})$ has at least $d-1$ successes. Setting $d=\\lfloor\\bigl(1-{\\frac{1}{e}}\\bigr)H\\rfloor-1$ , so that $\\begin{array}{r}{d-1\\leq\\bigl(1-\\frac{1}{e}\\bigr)\\bigl(H-1\\bigr)-1}\\end{array}$ , we use Hoeffding\u2019s inequality to get ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V^{1,*}\\geq\\operatorname*{Pr}\\biggl(\\operatorname{Bin}\\biggl(H-1,1-\\cfrac{1}{e}\\biggr)\\geq d-1\\biggr)}\\\\ &{\\qquad\\geq1-\\exp\\biggl(-2\\biggl(\\biggl(1-\\cfrac{1}{e}\\biggr)(H-1)-(d-1)\\biggr)^{2}\\biggr)}\\\\ &{\\qquad\\geq1-\\cfrac{1}{e^{2}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Therefore, the competitive ratio is upper-bounded for ", "page_idx": 27}, {"type": "equation", "text": "$$\nC R\\leq\\frac{1/(A-1)^{d-1}}{1-\\frac{1}{e^{2}}}\\leq\\frac{2}{(A-1)^{\\left(1-\\frac{1}{e}\\right)H-3}}.\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "We remark that the constraint $A\\ge2$ allows building such a tree, while $H\\ge5$ ensures a depth of at least $d\\geq2$ . \u53e3 ", "page_idx": 27}, {"type": "text", "text": "D Auxiliary Lemmas ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Lemma 1. Let $d\\in\\mathbb{N}$ and $\\alpha\\in\\mathbb{R}_{+}^{d}$ . Also, let $D\\subset\\mathbb{R}_{+}^{d}$ be a convex compact nonempty set. Then, ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}},\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "where we define all ratios to be $+\\infty$ if the denominator equals zero. ", "page_idx": 28}, {"type": "text", "text": "Proof. We first remark that if $\\alpha_{i}=0$ for all $i\\in[d]$ , then by the definition of the division by zero, both sides are trivially equal to $+\\infty$ , and the result holds. Thus, from this point onwards, we assume w.l.o.g. that for some $i_{0}\\in[d]$ , it holds that $\\alpha_{i_{0}}>0$ . ", "page_idx": 28}, {"type": "text", "text": "Step I: We start from analyzing the l.h.s. problem and showing that ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{inf}_{z\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{y\\in D}y^{T}z.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Notice that choosing $x_{i}=\\mathbb{1}\\{i=i_{0}\\}$ leads to a bounded value of $\\frac{\\operatorname*{max}_{y\\in D}y_{i_{0}}}{\\alpha_{i_{0}}}<\\infty$ , so the value is finite \u2013 there cannot be a solution such that $\\alpha^{T}x=0$ (and the value is $+\\infty)$ , and we can w.l.o.g add the constraint $\\alpha^{T}x>0$ . We further remark that both the numerator and denominator are always non-negative, so the infimum is bounded from below by 0. Given that, the internal problem is always well-defined, and the maximizer is given by $y_{x}\\in\\arg\\operatorname*{max}_{y\\in D}y^{T}x$ . ", "page_idx": 28}, {"type": "text", "text": "We next show that the constraints $x\\,\\in\\,[0,1]^{d},\\alpha^{T}x\\,>\\,0$ can be replaced by the constraints $x\\in$ Rd+, \u03b1T x = 1. First, for any x \u2208[0, 1]d s.t. \u03b1T x > 0, define zx = \u03b1Tx x , for which $\\alpha^{T}z=1$ and ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}y^{T}\\frac{x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}y^{T}z_{x}\\geq\\operatorname*{inf}_{z\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{y\\in D}y^{T}z.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Thus, we have the inequality ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{\\boldsymbol{x}\\in[0,1]^{d}}\\operatorname*{max}_{\\boldsymbol{y}\\in D}\\frac{\\boldsymbol{y}^{T}\\boldsymbol{x}}{\\alpha^{T}\\boldsymbol{x}}=\\operatorname*{inf}_{\\boldsymbol{x}\\in[0,1]^{d}}\\operatorname*{max}_{\\boldsymbol{y}\\in D}\\frac{\\boldsymbol{y}^{T}\\boldsymbol{x}}{\\alpha^{T}\\boldsymbol{x}}\\ge\\operatorname*{inf}_{\\boldsymbol{z}\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{\\boldsymbol{y}\\in D}\\boldsymbol{y}^{T}\\boldsymbol{z}.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "On the other hand, for any $z\\in\\mathbb{R}_{+}^{d}$ s.t. $\\alpha^{T}z=1$ , define $\\begin{array}{r}{x_{z}=\\frac{z}{\\operatorname*{max}_{i}z_{i}}}\\end{array}$ (which is well defined due to the constraints). For this choice, we get that $x_{z}\\in[0,1]^{d}$ and $\\begin{array}{r}{\\alpha^{T}\\dot{x_{z}}=\\frac{\\alpha^{T}z}{\\operatorname*{max}_{i}z_{i}}=\\frac{1}{\\operatorname*{max}_{i}z_{i}}>0}\\end{array}$ . In particular, one can write $\\begin{array}{r}{z=\\frac{x_{z}}{\\alpha^{T}x_{z}}}\\end{array}$ \u03b1Tx zxz , which implies that ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{y\\in D}y^{T}z=\\operatorname*{max}_{y\\in D}y^{T}\\frac{x_{z}}{\\alpha^{T}x_{z}}=\\operatorname*{max}_{y\\in D}\\frac{y^{T}x_{z}}{\\alpha^{T}x_{z}}\\ge\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Therefore, we also have the other inequality ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{z\\in\\mathbb{R}_{+}^{d}}\\,\\operatorname*{max}_{y\\in D}y^{T}z\\geq\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x},\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "which implies equality ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{inf}_{z\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{y\\in D}y^{T}z.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Step II: Applying the minimax theorem. ", "page_idx": 28}, {"type": "text", "text": "The objective is linear in $z,y$ (and thus convex and concave in the variables, respectively), and the set $D$ is convex and compact. The constraint on $z$ is also convex, though not compact, but this is easily fixable; notice that for all $i$ such that $\\alpha_{i}=0$ , $z_{i}$ does not affect the constraint. On the other hand, setting $z_{i}>0$ can only increase the objective since $y_{i},z_{i}\\geq0$ . Indeed, for any $z\\in\\mathbb{R}_{+}^{d}$ s.t. $\\alpha^{T}z=1$ , letting $\\tilde{z}_{i}=z_{i}\\mathbb{1}\\{\\alpha_{i}>0\\}$ , we have $\\alpha^{T}\\tilde{z}=1$ and $y^{T}z\\leq y^{T}\\tilde{z}$ . Hence, w.l.o.g., we can always add the constraint that $z_{i}=0$ for all $i\\in[d]$ with $\\alpha_{i}=0$ . With this additional constraint, the set $\\mathcal{Z}=\\left\\{z\\in\\mathbb{R}_{+}^{d}|\\alpha^{T}z=1,\\forall i\\right.$ s.t. $\\alpha_{i}=0:z_{i}=0\\}$ is convex and compact, so the infimum is actually a minimum and we can apply the minimax theorem to obtain ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{z\\in\\mathbb{R}_{+}^{d}}{\\operatorname*{inf}}\\ \\underset{y\\in D}{\\operatorname*{max}}\\,y^{T}z=\\underset{y\\in D}{\\operatorname*{max}}\\,\\underset{z\\in\\mathcal{Z}}{\\operatorname*{min}}\\,y^{T}z}\\\\ &{\\alpha^{T}z{=}1}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "Step III: Solving the internal problem for fixed values of $y$ . ", "page_idx": 29}, {"type": "text", "text": "At this point, we note that components where $\\alpha_{i}=0$ do not affect either the value or the solution. Therefore, from this point onwards, we assume w.l.o.g that $\\alpha_{i}>0$ for all $i$ ; we will then apply our results only on the subset of components with $\\alpha_{i}>0$ . Given that, we also assume w.l.o.g. that $y_{i}>0$ for all $i-$ otherwise, the constraint could be met by letting $z_{i}>0$ for components with $y_{i}=0$ , which would lead to the optimal value of 0 (we verify this case at the end of the proof). ", "page_idx": 29}, {"type": "text", "text": "Thus, we focus on solving the following problem: for any fixed $y\\in\\mathbb{R}^{d}$ s.t. $y_{i}>0$ for all $i$ , solve ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\operatorname*{min}_{z}}&{\\:y^{T}z}\\\\ {s.t.}&{\\:z_{i}\\geq0,\\:\\forall i\\in[d],}\\\\ &{\\:\\alpha^{T}z=1.}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "Due to the linearity of both the objective and constraints (in $z$ ), KKT conditions are both necessary and sufficient for the solution of this problem. Letting $\\mu$ and $\\lambda$ be the dual variables for the constraints $z\\in\\mathbb{R}_{+}^{d}$ and $\\alpha^{T}z=1$ , respectively, the KKT requires that for all $i\\in[d]$ , ", "page_idx": 29}, {"type": "text", "text": "(complementary slackness) ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{y_{i}-\\mu_{i}-\\lambda\\alpha_{i}=0}}\\\\ {{\\mu_{i}z_{i}=0}}\\\\ {{\\mu_{i}\\geq0,~~z_{i}\\geq0}}\\\\ {{\\alpha^{T}z=1.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "For the stationarity to hold with the non-negativity of $\\mu_{i}$ , we must have that $\\begin{array}{r}{\\lambda\\leq\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}}\\end{array}$ . Moreover, if this is a strict inequality, all $\\mu_{i}$ are strictly positive, which leads to the infeasible zero-reward vector (due to the complementary slackness). Therefore, we can conclude that \u03bb = mini\u2208[d]y\u03b1ii , and so $\\mu_{i}=0$ only in coordinates where this minimal ratio in achieved. By complementary slackness, $z_{i}=0$ for the rest of the coordinates. ", "page_idx": 29}, {"type": "text", "text": "Substituting in the equality constraint, we get ", "page_idx": 29}, {"type": "equation", "text": "$$\n1\\overset{(1)}{=}\\sum_{i=1}^{d}\\alpha_{i}z_{i}\\overset{(2)}{=}\\sum_{i:\\frac{y_{i}}{\\alpha_{i}}=\\lambda}\\alpha_{i}z_{i}=\\sum_{i:\\frac{y_{i}}{\\alpha_{i}}=\\lambda}\\frac{y_{i}}{\\lambda}z_{i}\\overset{(2)}{=}\\frac{1}{\\lambda}\\sum_{i=1}^{d}y_{i}z_{i}.\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "Explicitly, (1) is by the constraint and (2) is since $z_{i}=0$ when $\\begin{array}{r}{\\frac{y_{i}}{\\alpha_{i}}>\\lambda}\\end{array}$ . Reorganizing, we get that the value of the internal problem is ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\sum_{i=1}^{d}y_{i}z_{i}=\\lambda=\\operatorname*{min}_{i\\in[d]}{\\frac{y_{i}}{\\alpha_{i}}}.\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "We end by remarking that when $y_{i}=0$ for some $i\\in[d]$ , the value becomes 0 so that the result also holds in this case. ", "page_idx": 29}, {"type": "text", "text": "Summary: Combining all parts of the proof, we got ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i:\\alpha_{i}>0}\\frac{y_{i}}{\\alpha_{i}}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "If we define the internal value to be $+\\infty$ when $\\alpha_{i}=0$ , we can further write ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in[0,1]^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}},\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "which concludes the proof. ", "page_idx": 29}, {"type": "text", "text": "Remark 3. Following almost identical proof, we could similarly prove that ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}.\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "The only change would be in the first step; using the same rescaling idea $\\textstyle(z_{x}={\\frac{x}{\\alpha^{T}x}}\\in\\mathbb{R}_{+}^{d})$ , one could prove that ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{x\\in\\mathbb{R}_{+}^{d}}\\operatorname*{max}_{y\\in D}\\frac{y^{T}x}{\\alpha^{T}x}\\geq\\operatorname*{inf}_{z\\in\\mathbb{R}_{+}^{d}}\\ \\operatorname*{max}_{y\\in D}y^{T}z,\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "while the reverse inequality trivially holds since $\\left\\{z\\in\\mathbb{R}_{+}^{d}|\\alpha^{T}z=1\\right\\}\\subset\\mathbb{R}_{+}^{d}$ . The rest of the proof follows without any change. ", "page_idx": 30}, {"type": "text", "text": "Notably, since this lemma is used in all our proofs to calculate the CR for the worst-case reward expectations, it implies that we would get the same results were we to define the CR as $C R^{L}({\\cal P})=$ $\\operatorname*{inf}_{r_{h}\\in\\mathbb{R}_{+}^{S A}}C R^{L}(\\bar{P},r)$ . ", "page_idx": 30}, {"type": "text", "text": "Lemma 2. Let $d\\in\\mathbb{N}.$ . Also, let $D\\in\\mathbb{R}_{+}^{d}$ be a convex compact set and $\\mathcal{P}\\in\\mathbb{R}_{+}^{d}$ be a convex compact polytope, both assumed to be nonempty. Then ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{\\alpha\\in{\\mathcal{P}}}\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}=\\operatorname*{min}_{\\alpha\\in{\\mathcal{P}}}\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}},\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "where we define all ratios to be $+\\infty$ if the denominator equals zero. ", "page_idx": 31}, {"type": "text", "text": "Proof. We assume w.l.o.g. that $\\mathcal{P}\\neq\\{0\\}$ , since the infimum over a singleton is always equal to the minimum (in this case, both equal $+\\infty$ ), and the result trivially holds. ", "page_idx": 31}, {"type": "text", "text": "Next, for all $\\alpha\\in\\mathcal{P}$ , define $\\begin{array}{r}{f(\\alpha)=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}}\\end{array}$ . Notice that for any $\\alpha\\in\\mathcal{P}$ s.t. $\\alpha\\neq0$ there exists $i_{0}\\in[d]$ such that $\\alpha_{i_{0}}>0$ , and so ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r}{f(\\alpha)=\\underset{y\\in{\\cal D}}{\\operatorname*{max}}\\,\\underset{i\\in[d]}{\\operatorname*{min}}\\,\\frac{y_{i}}{\\alpha_{i}}\\le\\underset{y\\in{\\cal D}}{\\operatorname*{max}}\\,\\frac{y_{i_{0}}}{\\alpha_{i_{0}}}<\\infty,}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "where the last inequality follows from the compactness of $D$ . In particular, since $\\mathcal{P}\\neq\\{0\\}$ and is nonempty, such $\\bar{\\alpha}\\neq0$ exists, and thus $\\mathrm{inf}_{\\alpha\\in{\\mathcal{P}}}\\,{\\bar{f}}(\\alpha)\\leq f({\\bar{\\alpha}})<\\infty$ , so the value at the optimization problem in the l.h.s. is finite. ", "page_idx": 31}, {"type": "text", "text": "We next prove that $f(\\alpha)$ is quasi-concave over $\\mathcal{P}$ , namely ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\forall\\alpha\\neq\\beta\\in\\mathcal{P},\\lambda\\in(0,1):\\;\\;f(\\lambda\\alpha+(1-\\lambda)\\beta)\\geq\\operatorname*{min}\\{f(\\alpha),f(\\beta)\\}.\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "First, if $\\alpha\\neq0$ and $\\beta=0$ (or the opposite), for any $\\lambda\\in(0,1)$ we have that ", "page_idx": 31}, {"type": "equation", "text": "$$\nf(\\lambda\\alpha+(1-\\lambda)\\beta)=f(\\lambda\\alpha)={\\frac{1}{\\lambda}}f(\\alpha)\\geq f(\\alpha)=\\operatorname*{min}\\{f(\\alpha),f(\\beta)\\},\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "where we used the non-negativity of $f(\\alpha)$ and the convention that $f(0)=+\\infty$ . Next, assume that both $\\alpha,\\beta\\neq0$ . Also, let $y^{\\alpha}$ such that ", "page_idx": 31}, {"type": "equation", "text": "$$\ny^{\\alpha}\\in\\operatorname*{arg\\,max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "and similarly define $y^{\\beta}$ . Such $y$ must exist, since we could always write ", "page_idx": 31}, {"type": "equation", "text": "$$\nf(\\alpha)=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]}\\frac{y_{i}}{\\alpha_{i}}=\\operatorname*{max}_{y\\in D}\\operatorname*{min}_{i\\in[d]:\\alpha_{i}>0}\\frac{y_{i}}{\\alpha_{i}}.\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "The maximum over a finite number of linear functions is continuous and the set $D$ is compact, so a maximizer in $D$ is always attainable. Using these definitions, we have, ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{f(\\lambda\\alpha+(1-\\lambda)\\beta)=\\underset{y\\in D}{\\mathrm{max~min}}\\,\\frac{y_{i}}{i\\in[d]}\\,\\frac{y_{i}}{\\lambda\\alpha_{i}+(1-\\lambda)\\beta_{i}}}\\\\ &{\\geq\\underset{i\\in[d]}{\\mathrm{min}}\\,\\frac{\\lambda y_{i}^{\\alpha}+(1-\\lambda)y_{i}^{\\beta}}{\\lambda\\alpha_{i}+(1-\\lambda)\\beta_{i}}}\\\\ &{\\overset{\\mathrm{(*)}}{\\geq}\\underset{i\\in[d]}{\\mathrm{min}}\\,\\underset{j\\in[d]}{\\mathrm{min}}\\,\\Bigg\\{\\frac{y_{i}^{\\alpha}}{\\alpha_{i}},\\frac{y_{i}^{\\beta}}{\\beta_{i}}\\Bigg\\}}\\\\ &{=\\underset{m\\mathrm{in}}{\\mathrm{min}}\\Bigg\\{\\underset{i\\in[d]}{\\mathrm{min}}\\,\\frac{y_{i}^{\\alpha}}{\\alpha_{i}},\\underset{i\\in[d]}{\\mathrm{min}}\\,\\frac{y_{i}^{\\beta}}{\\beta_{i}}\\Bigg\\}}\\\\ &{=\\underset{m\\mathrm{in}}{\\mathrm{min}}\\,\\{f(\\alpha)\\,\\alpha_{i},\\,i\\in[d]\\},}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Relation $(*)$ is due to the inequality $\\begin{array}{r}{\\frac{a+c}{b+d}\\geq\\operatorname*{min}\\lbrace\\frac{a}{b},\\frac{c}{d}\\rbrace}\\end{array}$ for $a,b,c,d\\geq0$ , and one could easily verify that the inequality is still valid when either $b=0$ or $d=0$ . ", "page_idx": 31}, {"type": "text", "text": "Finally, recall that $\\mathcal{P}$ is a compact convex polytope; in particular, each interior point could be represented as a convex combination of one of its finite extreme points $e x t(\\mathcal{P})$ . Then, by the quasiconcavity, the value of each interior point is lower-bounded by the value of at least one of these extreme points so that ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{\\alpha\\in{\\mathcal{P}}}f(\\alpha)=\\operatorname*{min}_{\\alpha\\in e x t({\\mathcal{P}})}f(\\alpha).\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "This proves that the infimum is attainable by a point in $\\mathcal{P}$ , thus concluding the proof. ", "page_idx": 31}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: In the abstract we clearly present the concept of reward lookahead and claim to analyze it through competitive analysis; we do so in our theorems, which are formally proved in the appendix. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 32}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: As with many theoretical works, the main limitation of this paper lies in the choice of the model and its assumptions, which is necessarily a simplification of real-world problems. Nonetheless, while defining the setting, we tried to choose the assumptions that we believe are most natural to study this problem. We clearly present our assumptions in Section 2 and discuss potential alternative models and extensions in Section 6. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 32}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 33}, {"type": "text", "text": "Justification: We provide a sketch of the proof of the main results in the paper, and fully detail each proof in appendix. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 33}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 33}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 34}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 34}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 34}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 34}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 34}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 34}, {"type": "text", "text": "", "page_idx": 35}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 35}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: This is a fundamental research on a core theoretical model, with no clear ethical implications. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 35}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: This is a fundamental research on a core theoretical model, with no direct societal impacts. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 35}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 36}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 36}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: The paper does not use existing assets. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 36}, {"type": "text", "text": "", "page_idx": 37}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 37}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 37}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 37}]