[{"figure_path": "T56j6aV8Oc/figures/figures_1_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "The figure visualizes the training performance difference between Adam and SGD optimizers on the GPT2-Small language model trained on the WikiText-103 dataset.  It demonstrates that while Adam consistently reduces the training loss across all classes (including low-frequency ones), SGD struggles to make significant progress on low-frequency classes.  This is shown via the distribution of samples per class, overall training loss, and the training loss for various frequency class groups.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_2_1.jpg", "caption": "Figure 2: Adam outperforms GD for training a CNN under heavy-tailed class labels. (a) Performance on the MNIST dataset. (b) Performance on a modified MNIST with two groups of classes. The first group consists of the 10 original classes with \u2248 5k samples each, while the second consists of \u224810k added classes with 5 examples each. (c, d) Performance of GD and Adam on the two groups. The initial loss is higher for imbalanced MNIST as there are \u2248104 classes instead of 10, leading to a loss of - log(1/104) \u2248 9.2 for a uniform prediction instead of \u2013 log(1/10) \u2248 2.3.", "description": "This figure shows the training loss curves for both Adam and Gradient Descent (GD) optimizers when training a Convolutional Neural Network (CNN) on two versions of the MNIST dataset. The first version is the standard MNIST dataset, and the second version is a modified MNIST dataset with heavy-tailed class imbalance, where a large number of classes have very few samples. The results show that Adam significantly outperforms GD on the imbalanced dataset but performs similarly to GD on the balanced dataset. This highlights the impact of heavy-tailed class imbalance on the performance of GD compared to Adam.", "section": "Experimental results and ablation studies"}, {"figure_path": "T56j6aV8Oc/figures/figures_3_1.jpg", "caption": "Figure 3: Adam outperforms SGD for training a ResNet under heavy-tailed class labels. (a) Performance on a subset of ImageNet and (b) an imbalanced subset of ImageNet with class frequencies \u03c0\u03ba \u00d7 1/k. (c, d) Performance of GD and Adam on groups corresponding to \u224810% of the data.", "description": "This figure shows the training loss curves for both SGD and Adam on ResNet18 when training on a subset of ImageNet with uniform class distribution (a) and heavy-tailed class distribution (b).  Panels (c) and (d) break down the loss for subsets of classes grouped by frequency, showing SGD's significantly slower progress on low-frequency classes compared to Adam. This illustrates the impact of heavy-tailed class imbalance on SGD's performance.", "section": "2 Experimental results and ablation studies"}, {"figure_path": "T56j6aV8Oc/figures/figures_4_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "The figure shows the training loss curves for both Adam and SGD optimizers when training a GPT-2 small model on the WikiText-103 dataset.  The x-axis represents the training step. The y-axis represents the training loss. The figure is divided into four subplots: (a) shows the distribution of classes by frequency, (b) shows the overall training loss, and (c) and (d) show the training loss for different groups of classes (10% of the data each) for SGD and Adam respectively. The key observation is that SGD struggles to make progress on low-frequency classes while Adam is able to consistently reduce the loss for all classes, showcasing its advantage in handling class imbalance.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_5_1.jpg", "caption": "Figure 5: Sign descent, as a simplified form of Adam, performs well on low-frequency classes. Training the last layer of a simplified one-layer transformer with GD, Adam, normalized GD, and sign descent, with and without momentum (\u00b1m). Momentum and normalizing the magnitude help but have smaller effects than using sign descent, which recovers similar dynamics to Adam.", "description": "This figure compares the performance of four optimization algorithms (Gradient Descent (GD), Adam, Normalized GD, and Sign Descent) on training the last layer of a simplified transformer model.  The experiment is designed to isolate the impact of the optimization algorithm on the ability to train low-frequency classes in a heavy-tailed class imbalance scenario. The results show that sign descent, a simplified version of Adam, shows improved performance on low-frequency classes, which is a characteristic of Adam's success in large language models. The impact of momentum and normalization of the gradient magnitudes are also evaluated.", "section": "E Alternative optimizers"}, {"figure_path": "T56j6aV8Oc/figures/figures_6_1.jpg", "caption": "Figure 6: Class-separation on the quadratic problem of Section 3.1 with weights \u03c0\u03ba \u00d7 1/k. GD fits functions with low weights more slowly, while Adam and sign descent have the same dynamics across all functions and all the lines overlap as every parameter wi is initialized at wi = 1.", "description": "This figure shows the comparison of three optimization algorithms (Gradient Descent, Adam, and Sign Descent) on a weighted quadratic problem. The weights of the functions are inversely proportional to their index (\u03c0k = 1/k), simulating heavy-tailed class imbalance.  Gradient Descent shows slow convergence on low-weighted functions, whereas Adam and Sign Descent exhibit similar and faster convergence across all functions.  This illustrates that Adam and Sign descent are less sensitive to the scale differences caused by imbalanced weights compared to gradient descent.", "section": "3.1 Intuition on a weighted quadratic problem"}, {"figure_path": "T56j6aV8Oc/figures/figures_7_1.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure visualizes the correlation between the magnitude of the gradient and the trace of the Hessian (a measure of curvature) across different parameter blocks (rows of the weight matrix W) during the training process of a linear model. The color-coding represents class frequencies, revealing a growing correlation between the magnitude of the gradient/Hessian and class frequency. This correlation is weak initially but strengthens during training, suggesting that Adam's optimization path implicitly handles heavy-tailed class imbalance, as seen in low-frequency classes.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_8_1.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows how the correlation between gradient norm and Hessian trace changes during the training process for a linear model with heavy-tailed class imbalance.  It visualizes this correlation across different blocks of the parameter matrix (rows W1,...,Wc), color-coded by class frequency.  The key observation is that as training progresses using the Adam optimizer, a strong correlation emerges between the magnitude of the gradient/Hessian and class frequency: low-frequency classes tend to have smaller gradients and Hessian traces, while high-frequency classes have larger ones. This correlation is not present at the beginning of training (t=0).", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_9_1.jpg", "caption": "Figure 9: The diagonal Hessian blocks are orders of magnitude larger than off-diagonal blocks. Showing the magnitude of a subset of the Hessian blocks (log10(|Tr(\u2207\u00b2L)|ij)) for a [160 \u00d7 160] subset of the Hessian, sampling 40 classes and 40 input dimensions uniformly.", "description": "This figure shows the magnitude of the Hessian's diagonal and off-diagonal blocks at different training times.  The diagonal blocks, representing the self-interaction of parameters within the same class, are significantly larger than the off-diagonal blocks (representing interaction between parameters from different classes). This difference highlights the class imbalance's impact on the Hessian structure, a key aspect of the paper's argument regarding Adam's superior performance.", "section": "Dynamics of the gradient and Hessian"}, {"figure_path": "T56j6aV8Oc/figures/figures_17_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers when training a GPT2-Small model on the WikiText-103 dataset.  The dataset's classes (words) have a heavily skewed distribution, with some words appearing much more frequently than others. The figure demonstrates that while Adam successfully reduces the training loss for both frequent and infrequent words, SGD struggles to make progress on the infrequent ones, leading to a much slower overall decrease in loss. This highlights a key difference between the two optimizers' performance on language modeling tasks.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_17_2.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers when training a GPT2-Small model on the WikiText-103 dataset.  The dataset's words are grouped by frequency (10% of data at each frequency level). The plots demonstrate that while Adam reduces training loss effectively for both low-frequency and high-frequency words, SGD struggles to improve low-frequency words, highlighting Adam's superior performance on heavy-tailed class imbalance common in language tasks.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_18_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers on the WikiText-103 dataset using the GPT2-Small model.  The x-axis represents the training step, and the y-axis represents the training loss. Panel (a) shows the distribution of the number of samples per class (i.e., class imbalance).  Panels (c) and (d) display the loss curves broken down by class frequency groups (approximately 10% of the data each) for SGD and Adam respectively.  Panel (b) shows the overall training loss, which is an average of (c) and (d). The key takeaway is that Adam continues to make progress on low-frequency classes, whereas SGD does not.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_18_2.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers while training a GPT2-Small model on the WikiText-103 dataset. The dataset is heavily imbalanced, with some classes having many more samples than others.  The figure demonstrates that SGD struggles to reduce the loss for infrequent classes, while Adam successfully optimizes across all classes, demonstrating a key difference in performance between Adam and SGD on imbalanced datasets.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_18_3.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows that Adam optimizer is able to make progress on low-frequency classes during training of GPT-2 small model on WikiText-103 dataset, while the SGD optimizer is unable to make progress on those classes. The figure consists of four subplots: (a) shows the distribution of classes sorted by their frequency, (b) shows the overall training loss, (c) shows the training loss for each group of classes using SGD optimizer, and (d) shows the training loss for each group of classes using Adam optimizer. The results indicate that Adam is less sensitive to the heavy-tailed class imbalance in language tasks.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_19_1.jpg", "caption": "Figure 3: Adam outperforms SGD for training a ResNet under heavy-tailed class labels. (a) Performance on a subset of ImageNet and (b) an imbalanced subset of ImageNet with class frequencies \u03c0k \u03b1 1/k. (c, d) Performance of GD and Adam on groups corresponding to \u224810% of the data.", "description": "This figure demonstrates that Adam outperforms SGD in training a ResNet18 model on both a standard subset of ImageNet and a modified subset with heavy-tailed class imbalance. The imbalanced subset simulates real-world scenarios where class frequencies follow a power law (\u03c0k \u03b1 1/k).  The plots show that SGD struggles to make progress on low-frequency classes, while Adam shows more consistent improvement across all classes. This highlights Adam's resilience to the challenges posed by heavy-tailed class imbalance.", "section": "Experimental results and ablation studies"}, {"figure_path": "T56j6aV8Oc/figures/figures_19_2.jpg", "caption": "Figure 16: Adam and SGD perform similarly training a Vision Transformer with balanced Classes. Training loss on the full ImageNet dataset (without subsampling). There is little performance in training performance.", "description": "This figure shows the training loss curves for Adam and SGD optimizers while training a Vision Transformer model on the full ImageNet dataset.  The key takeaway is that both optimizers show similar performance, indicating no significant performance gap between Adam and SGD in this specific scenario with a balanced dataset. This contrasts with the findings in other parts of the paper which highlight a performance gap when dealing with datasets exhibiting heavy-tailed class imbalance.", "section": "C Vision problems"}, {"figure_path": "T56j6aV8Oc/figures/figures_19_3.jpg", "caption": "Figure 3: Adam outperforms SGD for training a ResNet under heavy-tailed class labels. (a) Performance on a subset of ImageNet and (b) an imbalanced subset of ImageNet with class frequencies \u03c0\u03ba \u03b1 1/k. (c, d) Performance of GD and Adam on groups corresponding to \u224810% of the data.", "description": "This figure demonstrates the performance difference between Adam and SGD optimizers when training a ResNet18 model on ImageNet datasets with varying class distributions.  The left two subplots (a and b) show the overall training loss for both optimizers on a balanced subset of ImageNet (a) and on an imbalanced subset (b) where the frequency of classes follows a power law (\u03c0k \u03b1 1/k). The right two subplots (c and d) break down the loss per group of classes (roughly 10% of samples each). This detailed view clearly shows how SGD struggles to optimize for low-frequency classes while Adam continues to make progress across all classes, showcasing the impact of heavy-tailed class imbalance on SGD's performance.", "section": "Experimental results and ablation studies"}, {"figure_path": "T56j6aV8Oc/figures/figures_20_1.jpg", "caption": "Figure 18: GD optimizes on balanced barcoded data. Training a CNN on only the barcoded portion of the data, which has balanced classes. While Adam is slightly faster, both optimizers reach negligible error within 200 steps. As the level of imbalance is increased, GD performs increasingly worse than Adam.", "description": "This figure shows the training loss curves for both Adam and GD optimizers on three different MNIST datasets: the original MNIST, a dataset with only the barcoded images (balanced classes), and a dataset with both the original and barcoded images (imbalanced classes).  The results demonstrate that GD performs similarly to Adam on balanced data, but significantly worse on imbalanced data, especially when focusing on low-frequency classes.  This confirms that heavy-tailed class imbalance is a key factor in Adam's superior performance over GD, not simply an issue of dataset difficulty.", "section": "C Vision problems"}, {"figure_path": "T56j6aV8Oc/figures/figures_21_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers while training a GPT2-Small language model on the WikiText-103 dataset.  The x-axis represents training steps. The y-axis represents the training loss. The classes are grouped by frequency (10% of data per group), and the curves are shown for each group separately and as an average.  The figure demonstrates Adam's superior performance, particularly for low-frequency classes where SGD shows minimal progress.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_22_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure demonstrates the key finding of the paper: Adam's superiority over gradient descent in training large language models stems from its ability to handle heavy-tailed class imbalance.  The plot shows the training loss for GPT2-Small on WikiText-103. Panel (a) displays the class distribution, sorted by frequency, divided into deciles. Panel (b) shows the overall training loss for both Adam and SGD. Panels (c) and (d) break down the training loss for each decile, revealing that SGD struggles to reduce the loss for low-frequency classes, while Adam makes consistent progress across all classes.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_23_1.jpg", "caption": "Figure 21: The separation between GD and Adam still appears when using L2 regularization. Using varying levels of regularization \u03bb on the linear model of Figure 4. The plots show the negative log-likelihood and do not include the L2 penalty.", "description": "This figure shows the impact of L2 regularization on the performance gap between GD and Adam on the linear model experiment.  Despite using L2 regularization to limit the magnitude of weights, the performance gap remains visible, particularly at lower regularization strengths.  However, as regularization increases, fitting low-frequency classes becomes harder, and the performance difference diminishes.", "section": "D Linear models"}, {"figure_path": "T56j6aV8Oc/figures/figures_24_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows the training loss curves for both Adam and SGD optimizers when training a GPT-2 small language model on the WikiText-103 dataset.  It highlights the impact of heavy-tailed class imbalance, where infrequent words (classes) have significantly slower loss reduction with SGD than frequent words.  In contrast, Adam demonstrates consistent progress across all word frequency groups. The figure is divided into four subplots:\n(a) Displays the distribution of classes based on their frequency.  Classes are grouped into deciles for easier visualization.\n(b) Presents the overall training loss for both optimizers across training steps.\n(c,d) Shows the training loss for each decile (group of classes) separately, further emphasizing Adam's superior performance on infrequent word classes.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_25_1.jpg", "caption": "Figure 25: Reweighting the loss improves the performance of (S)GD on low-frequency classes. The plots show the unweighted loss, while (S)GD and Adam optimize a reweighted loss. Reweighted (S)GD (r(S)GD) with weights 1/\u221a consistently outperforms plain SGD, although it can lead to spikes, as on the CNN on the MNIST dataset. Reweighting with weights 1/\u03c0\u03b7 is sometimes better (Linear, MNIST) but can be worse (PTB, ImageNet) as it optimizes a different objective. We use deterministic updates for the first 3 problems, labeled Epoch, and stochastic updates for the ResNet18 on heavy-tailed ImageNet.", "description": "This figure shows the impact of reweighting the loss function to address class imbalance on four different machine learning problems: PTB, Linear, HT MNIST, and HT ImageNet.  It compares the performance of standard SGD and Adam optimizers with two variations of SGD that use reweighted loss functions. The reweighted loss functions are designed to give more weight to low-frequency classes, aiming to mitigate the slow convergence of SGD on these classes. The results indicate that reweighting can improve SGD's performance, sometimes outperforming standard SGD, especially when using the 1/\u221a\u03c0k weighting scheme.  However,  reweighting with 1/\u03c0k showed mixed results, sometimes outperforming and sometimes underperforming standard SGD, highlighting the complexity of this approach.  The type of updates (stochastic or deterministic) also vary across problems.", "section": "E.1 Up-weighting low-frequency classes can improve the performance of SGD"}, {"figure_path": "T56j6aV8Oc/figures/figures_26_1.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows the correlation between the gradient norm and the Hessian trace across blocks throughout the training process, specifically focusing on the path taken by the Adam optimizer in the linear model presented earlier in Figure 4. The plot displays the gradient norm and the Hessian trace for each row of the parameter matrix. The color-coding of the points reflects the frequency of the classes, illustrating a correlation between the magnitude of these values and the frequency of classes. Specifically, the figure highlights that lower-frequency classes tend to exhibit smaller gradient norms and Hessian traces compared to higher-frequency classes.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_27_1.jpg", "caption": "Figure 1: Gradient descent does not make progress on low-frequency classes, while Adam does. Training GPT2-Small on WikiText-103. (a) Distribution of the classes sorted by class frequency, split into groups corresponding to \u224810% of the data. (b) Overall training loss. (c, d) Training loss for each group using SGD and Adam. SGD makes little to no progress on low-frequency classes while Adam makes progress on all groups. (b) is the average of (c, d) for the respective optimizer.", "description": "This figure shows a comparison of the training performance of Adam and SGD optimizers on the GPT2-Small language model trained on the WikiText-103 dataset.  The x-axis represents the training steps, and the y-axis represents the training loss.  The figure demonstrates that SGD struggles to make progress on low-frequency classes (words that appear less often in the dataset), while Adam consistently improves across all classes, regardless of frequency. The different panels show the overall loss and the loss for different groups of classes, divided by frequency.", "section": "1 Introduction"}, {"figure_path": "T56j6aV8Oc/figures/figures_27_2.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows the correlation between gradient and Hessian throughout the Adam optimization process on a linear model with heavy-tailed class imbalance.  The x-axis represents the gradient norm, and the y-axis represents the trace of the Hessian, both calculated for each row of the weight matrix. Each point represents a block of the Hessian corresponding to a particular class. The color of the point indicates the class frequency.  The figure demonstrates that as the training progresses, a correlation develops between the magnitude of the gradient and Hessian and the class frequency. Specifically, lower frequency classes show a smaller gradient norm and Hessian trace, while higher frequency classes show larger values.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_28_1.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows the correlation between the magnitude of the gradient and the trace of the Hessian across coordinates during the training process using the Adam optimizer.  The x-axis represents the gradient norm, and the y-axis represents the trace of the Hessian. Each point represents a coordinate (row of the parameter matrix), and the color indicates the frequency of the corresponding class. The results demonstrate that as training progresses (from t=0 to t=100), a correlation emerges between the magnitude of the gradient/Hessian and class frequency, particularly highlighting how Adam's optimization dynamics lead to a stronger correlation between these factors compared to the initial state.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_28_2.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows the correlation between the gradient norm and Hessian trace across blocks during the training process using Adam optimizer on a linear model.  It demonstrates that this correlation emerges over time and is related to the class frequency. Specifically, lower frequency classes exhibit smaller gradient norms and Hessian traces, while higher frequency classes show larger values.  This correlation, not present at initialization, is considered relevant to the superior performance of Adam in heavy-tailed class imbalance scenarios.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_29_1.jpg", "caption": "Figure 7: The gradient norm and Hessian trace across blocks become correlated during training, over the path taken by Adam in training the linear model of Figure 4. The blocks correspond to the rows W1, ..., We of the parameter matrix W. The color indicates the class frequency, showing that lower (higher) frequency classes have smaller (larger) gradient norm and Hessian trace.", "description": "This figure shows the correlation between the magnitude of the gradient and Hessian trace with respect to each row of the parameter matrix W throughout the training process using Adam optimizer.  The training is done on the linear model with heavy-tailed class imbalance. The color-coding of data points represents class frequencies, illustrating that lower frequency classes exhibit smaller gradient norm and Hessian trace compared to high-frequency classes. This correlation emerges during training, demonstrating that Adam's performance benefit may be linked to how it handles this correlation and the imbalance between different class frequencies.", "section": "3.2 Correlations between the magnitude of the gradient and Hessian across coordinates"}, {"figure_path": "T56j6aV8Oc/figures/figures_29_2.jpg", "caption": "Figure 32: The correlation only holds while training. Correlation between the gradient and Hessian blocks through the path {\u2212Wt}, where Wt are the iterates of Adam on the linear model of Figure 4.", "description": "This figure shows that the correlation between the gradient and Hessian blocks observed during the training process of Adam on the linear model (Figure 4) does not hold globally, and is dependent on the optimization path.  It illustrates that the positive correlation appears throughout training and is not present at initialization (t=0).  If we consider the opposite path of Adam's iterates (-Wt), we find a negative correlation.", "section": "F Dynamics of the gradient and Hessian"}, {"figure_path": "T56j6aV8Oc/figures/figures_31_1.jpg", "caption": "Figure 9: The diagonal Hessian blocks are orders of magnitude larger than off-diagonal blocks. Showing the magnitude of a subset of the Hessian blocks (log10(Tr(|\u22072L|))) for a [160 \u00d7 160] subset of the Hessian, sampling 40 classes and 40 input dimensions uniformly.", "description": "This figure visually demonstrates the magnitude difference between the diagonal and off-diagonal blocks of the Hessian matrix.  The Hessian matrix, which represents the second derivative of the loss function with respect to the model's parameters, is crucial in understanding optimization dynamics. The diagonal elements are significantly larger than off-diagonal elements. This is shown by plotting the log of the trace of the absolute value of each block (a 40x40 subset sampled from a larger Hessian). The color intensity represents the magnitude. The figure illustrates the result across different optimization steps (t=0, 10, 50, 100), highlighting how this pattern emerges and persists over time.", "section": "F Dynamics of the gradient and Hessian"}]