[{"figure_path": "F9NDzHQtOl/figures/figures_4_1.jpg", "caption": "Figure 1: Illustration of PIADM-SDE/ODE. The outer iterations are divided into O(log d) blocks of O(1) length. Within each block, the inner iterations are parallelized with \u00d5(d) steps for SDE (cf. Theorem 3.3), or \u00d5(\u221ad) for probability flow ODE implementation (cf. Theorem 3.5). The overall approximate time complexity is KN = O(poly log d). brown, green, blue, and red curves represent the computation graph at t = tn + Tn,m for m = 1,2, Mn - 1, Mn.", "description": "This figure illustrates the PIADM-SDE/ODE algorithm.  The sampling process is divided into outer iterations (blocks) and inner iterations. The outer iterations, O(log d) in number and O(1) in length, represent the main progress towards the data distribution.  Within each outer iteration, parallel inner iterations (\u00d5(d) for SDE, \u00d5(\u221ad) for ODE) refine the sample. The overall time complexity is polylogarithmic in the data dimension (d), a significant improvement over previous methods. The colored curves depict the computational steps within a single outer iteration.", "section": "3.1 SDE Implementation"}, {"figure_path": "F9NDzHQtOl/figures/figures_30_1.jpg", "caption": "Figure 1: Illustration of PIADM-SDE/ODE. The outer iterations are divided into O(log d) blocks of O(1) length. Within each block, the inner iterations are parallelized with \u00d5(d) steps for SDE (cf. Theorem 3.3), or \u00d5(\u221ad) for probability flow ODE implementation (cf. Theorem 3.5). The overall approximate time complexity is KN = O(poly log d). brown, green, blue, and red curves represent the computation graph at t = tn + Tn,m for m = 1,2, Mn - 1, Mn.", "description": "This figure illustrates the parallelized inference algorithms for diffusion models in both SDE and probability flow ODE implementations. The outer iterations are divided into O(log d) blocks, each with O(1) length.  Within each block, inner iterations are parallelized using \u00d5(d) steps for SDE or \u00d5(\u221ad) steps for ODE.  The figure shows how the overall time complexity is reduced to O(poly log d) through this parallelization strategy.", "section": "3.1.1 Algorithm"}]