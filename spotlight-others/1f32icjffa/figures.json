[{"figure_path": "1F32iCJFfa/figures/figures_3_1.jpg", "caption": "Figure 1: Illustration of the SB Flow and comparison with IMF. P* is the SB, which we assume is well-defined. Note that for any s > 0, Ps is Markov while Ps is in the reciprocal class of Q. Crucially, the only fixed point of (3) is the SB. Indeed, let P be a fixed point of (Ps)s\u22650 in (3). Then, we have that P = projr(proj\u043c(P)). Hence, we get P = projr(projm(... (projr (projm (P))) ... )). Hence, under mild assumptions, P is a limit point of IMF and therefore P is the SB P* given by (2), see (Peluchetti, 2023, Theorem 2).", "description": "This figure illustrates the Schr\u00f6dinger Bridge Flow (SBF) and compares it to Iterative Markovian Fitting (IMF).  It shows how the SBF iteratively refines a path measure (represented by the orange curve), starting from an initial distribution (P0) until it converges to the Schr\u00f6dinger Bridge (P*).  The figure also highlights that Markov processes (M) and those in the reciprocal class of Q (R(Q)) are involved in the iterative refinement.", "section": "3.1 A flow of path measures"}, {"figure_path": "1F32iCJFfa/figures/figures_7_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "This figure shows the evolution of the covariance matrix during the finetuning stage of the \u03b1-DSBM and DSBM algorithms.  It compares the performance of online \u03b1-DSBM against iterative DSBM, highlighting the faster convergence of \u03b1-DSBM. Both scalar and full covariance matrices are considered, illustrating the robustness of the \u03b1-DSBM approach.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_8_1.jpg", "caption": "Figure 3: Left: FID and Mean Squared Distance (MSD) on EMNIST to MNIST translation before and after finetuning with different values of \u03b5. Right: AFHQ-64 samples after the finetuning. For both, we use a bidirectional model with online finetuning. More results are in Appendix K.3 and K.4.", "description": "This figure shows the impact of the hyperparameter epsilon (\u03b5) on the performance of the model for two different tasks: EMNIST to MNIST translation and AFHQ-64 image generation. The left panel presents FID and MSD scores before and after finetuning for various values of \u03b5, illustrating that an optimal \u03b5 value exists. The right panel displays generated AFHQ-64 samples (64x64 resolution animal face images) after finetuning, showcasing the quality of the generated samples as affected by the choice of \u03b5.  Appendix K provides additional results.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_9_1.jpg", "caption": "Figure 4: Online DSBM transfer results on AFHQ 256 \u00d7 256 dataset between Cat and Wild domains. Top row-initial samples, bottom row-transferred samples.", "description": "This figure shows the results of online DSBM applied to the AFHQ 256x256 dataset. The top row displays the initial samples from the Cat and Wild domains before the translation process. The bottom row shows the results after the translation, which is achieved using online DSBM. This demonstrates the model's ability to transfer images between these two domains using online DSBM.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_9_2.jpg", "caption": "Figure 3: Left: FID and Mean Squared Distance (MSD) on EMNIST to MNIST translation before and after finetuning with different values of \\(\\epsilon\\). Right: AFHQ-64 samples after the finetuning. For both, we use a bidirectional model with online finetuning. More results are in Appendix K.3 and K.4.", "description": "This figure shows the results of EMNIST to MNIST image translation experiments. The left panel shows FID and MSD scores before and after finetuning the model with different values of epsilon (noise level), illustrating the impact of epsilon on the translation performance. The right panel displays example images generated by a bidirectional model after finetuning, showcasing the model's ability to generate high-quality images after finetuning.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_24_1.jpg", "caption": "Figure 1: Illustration of the SB Flow and comparison with IMF. P* is the SB, which we assume is well-defined. Note that for any s > 0, Ps is Markov while Ps is in the reciprocal class of Q. Crucially, the only fixed point of (3) is the SB. Indeed, let P be a fixed point of (Ps)s\u22650 in (3). Then, we have that P = projr(projM(P)). Hence, we get P = projr(projM(...(projr(projM(P)))...)). Hence, under mild assumptions, P is a limit point of IMF and therefore P is the SB P* given by (2), see (Peluchetti, 2023, Theorem 2).", "description": "This figure illustrates the Schr\u00f6dinger Bridge flow and compares it with Iterative Markovian Fitting (IMF). It highlights that the Schr\u00f6dinger Bridge (SB) is the only fixed point of the flow, and under certain assumptions, it's also a limit point of IMF. The figure also depicts the relationship between Markov processes (M), reciprocal classes of Q (R(Q)), and the SB (P*).", "section": "3 Schr\u00f6dinger Bridge flow"}, {"figure_path": "1F32iCJFfa/figures/figures_24_2.jpg", "caption": "Figure 1: Illustration of the SB Flow and comparison with IMF. P* is the SB, which we assume is well-defined. Note that for any s > 0, Ps is Markov while Ps is in the reciprocal class of Q. Crucially, the only fixed point of (3) is the SB. Indeed, let P be a fixed point of (Ps)s\u22650 in (3). Then, we have that P = projr(proj\u043c(P)). Hence, we get P = projr(projm(...(projr(projm(P)))...)). Hence, under mild assumptions, P is a limit point of IMF and therefore P is the SB P* given by (2), see (Peluchetti, 2023, Theorem 2).", "description": "This figure illustrates the Schr\u00f6dinger Bridge flow and how it compares to the Iterative Markovian Fitting (IMF) method.  The Schr\u00f6dinger Bridge (SB) is represented as the only fixed point of the flow, highlighting its unique role in the mass transport problem. The illustration shows how the iterative process of the IMF method converges towards this SB point.", "section": "3 Schr\u00f6dinger Bridge flow"}, {"figure_path": "1F32iCJFfa/figures/figures_25_1.jpg", "caption": "Figure 1: Illustration of the SB Flow and comparison with IMF. P* is the SB, which we assume is well-defined. Note that for any s > 0, Ps is Markov while P<sup>s</sup> is in the reciprocal class of Q. Crucially, the only fixed point of (3) is the SB. Indeed, let P be a fixed point of (Ps)s\u22650 in (3). Then, we have that P = projr(projM(P)). Hence, we get P = projr(projm(... (projr(projm(P))) ...)). Hence, under mild assumptions, P is a limit point of IMF and therefore P is the SB P* given by (2), see (Peluchetti, 2023, Theorem 2). Next, for any a \u2208 (0, 1], we define the following discretisation of (3) called a-IMF:  P<sup>n+1</sup> = (1 \u2212 a)P<sup>n</sup> + aprojr(projm(P<sup>n</sup>)).", "description": "This figure illustrates the Schr\u00f6dinger Bridge flow (SB Flow) and its comparison with the Iterative Markovian Fitting (IMF) method.  The SB flow is a continuous process represented by curves converging towards the Schr\u00f6dinger Bridge (P*). The IMF method is a discrete version of this process which is represented by a sequence of points approximating the SB. The key idea is that the SB is the only fixed point in the SB Flow, highlighting its unique property as a Markov process with prescribed marginals at the endpoints that belongs to the reciprocal class of the Brownian motion. The a-IMF procedure, a discretised version of SB flow, is also illustrated as it converges to SB for any \u03b1 \u2208 (0, 1], further highlighting the relationship between these procedures.", "section": "3 Schr\u00f6dinger Bridge flow"}, {"figure_path": "1F32iCJFfa/figures/figures_39_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "The figure shows the evolution of covariance matrices during training for different methods: online \u03b1-DSBM, iterative DSBM, and baseline bridge matching.  It demonstrates how the online method converges faster and more efficiently toward the true covariance compared to iterative approaches, with varying frequencies of alternating forward and backward updates.  The left panel shows results for a Gaussian distribution with a scalar covariance matrix; while the right panel illustrates results for a Gaussian distribution with a full covariance matrix.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_39_2.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "This figure shows the evolution of the covariance matrix during the finetuning stage of the algorithm for both online and iterative versions, comparing \u03b1-DSBM against base and DSBM.  It uses two Gaussian distributions with different covariance structures (scalar and full) to illustrate the convergence towards the true covariance matrix (optimum). The plots illustrate that \u03b1-DSBM converges faster to the true covariance than the iterative DSBM method.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_40_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1xK training steps per model fit).", "description": "This figure shows the evolution of covariance matrices during the training process of three different methods: the baseline bridge matching, the online \u03b1-DSBM, and the iterative DSBM.  It demonstrates how quickly each method converges to the true covariance matrix, comparing different update frequencies for iterative DSBM.  The left panel uses a simple Gaussian distribution with a scalar covariance matrix, and the right panel employs a Gaussian distribution with a full covariance matrix.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_42_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of covariance matrices during the training process of different models: online \u03b1-DSBM, iterative DSBM, and a basic bridge matching model.  The training starts after an initial 10,000 steps of training a bridge matching model. The left panel shows results for a Gaussian distribution with a scalar covariance matrix while the right panel shows results for a Gaussian distribution with a full covariance matrix.  The plots show that the online \u03b1-DSBM method converges to the true covariance faster than the iterative DSBM method. The figure also illustrates the performance comparison between different variants of the methods.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_43_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrix during the training process of different methods: online \u03b1-DSBM, iterative DSBM, and the baseline bridge matching.  The left panel displays results for a Gaussian distribution with a scalar covariance matrix, while the right panel shows results for a Gaussian distribution with a full covariance matrix. The plots illustrate how quickly each method converges to the true covariance, demonstrating the superior performance of the online \u03b1-DSBM approach.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_44_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrix during the training process of different algorithms for unpaired data translation.  The plot compares three methods:  a baseline bridge matching, a novel online approach (\u03b1-DSBM), and the iterative DSBM.  Both left and right panels show results for Gaussian distributions (scalar and full covariance, respectively).  The key takeaway is that the online \u03b1-DSBM method converges faster to the true covariance than the iterative DSBM.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_44_2.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrices during the training process for both iterative and online DSBM.  The iterative method alternates between forward and backward updates at different frequencies (1k, 2.5k, and 5k steps), while the online method updates continuously. The plot compares the Frobenius norm between the estimated and true covariance matrices for the models. A Gaussian distribution with a scalar and full covariance matrix is used.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_44_3.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1 \u00d7 K training steps per model fit).", "description": "This figure shows the evolution of covariance matrices during training, comparing three different methods: online \u03b1-DSBM, iterative DSBM, and a baseline bridge matching method.  The left panel shows results for a Gaussian distribution with a scalar covariance matrix, while the right panel shows results for a Gaussian distribution with a full covariance matrix. The results demonstrate that online \u03b1-DSBM converges to the true covariance faster than iterative DSBM, highlighting its efficiency.  Different update frequencies are shown for the iterative DSBM to illustrate its behaviour as it approaches the online strategy.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_45_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrix during the finetuning phase of the online and iterative versions of DSBM, comparing them with a base bridge matching model.  The left panel shows results for a Gaussian distribution with a scalar covariance matrix, while the right panel shows results for a Gaussian distribution with a full covariance matrix.  The plots illustrate how quickly the algorithms converge to the true covariance matrix and highlight the superior performance of the online \u03b1-DSBM method.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_46_1.jpg", "caption": "Figure 19: MNIST samples transferred from EMNIST letter inputs (top row) using base (pretrained) and fine-tuned models for different values of \\(\\varepsilon\\). Low noise values result in poor sample quality, particularly in the base model, which finetuning cannot fully rectify. Conversely, excessively high \\(\\varepsilon\\) restricts information passing from the inputs to the outputs, leading to poor alignment. Additionally, high \\(\\varepsilon\\) increases blurriness due to increased noise levels, thus requiring more denoising steps.", "description": "This figure shows the MNIST samples generated from EMNIST letter inputs by the base and fine-tuned models at different noise levels (\u03b5).  Low \u03b5 values produce poor sample quality, while high \u03b5 values lead to misalignment and blurriness.  The fine-tuned model improves the quality, but still suffers from these issues at extreme \u03b5 values.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_46_2.jpg", "caption": "Figure 19: MNIST samples transferred from EMNIST letter inputs (top row) using base (pretrained) and fine-tuned models for different values of \\(\\varepsilon\\). Low noise values result in poor sample quality, particularly in the base model, which finetuning cannot fully rectify. Conversely, excessively high \\(\\varepsilon\\) restricts information passing from the inputs to the outputs, leading to poor alignment. Additionally, high \\(\\varepsilon\\) increases blurriness due to increased noise levels, thus requiring more denoising steps.", "description": "This figure shows the MNIST samples generated by the base and finetuned models with different noise levels (epsilon). The results show that very low noise levels lead to poor sample quality, which finetuning cannot fix, and excessively high noise levels lead to poor alignment and blurriness.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_47_1.jpg", "caption": "Figure 20: AFHQ 64 \u00d7 64 Wild \u2192 Cat transfer results for different values of \u221ae in a bidirectional model before and after online finetuning. Low values of \u025b lead to poor sample quality in both base and finetuned models. Excessively high \u025b values impede information passing from the inputs to the outputs, resulting in poor alignment. High values of \u025b also increase blurriness due to noisier SDE trajectories, thus requiring more denoising steps during sampling.", "description": "This figure shows the results of a Wild to Cat image translation experiment using a bidirectional model with online finetuning and different values of \u221ae.  The top row shows the initial samples. Subsequent rows show the results with different noise levels (\u221ae). The results demonstrate a trade-off between sample quality and alignment. Low \u221ae values result in poor sample quality, while excessively high \u221ae values hinder the transfer of information and produce blurry, misaligned results.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_48_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1K training steps per model fit).", "description": "The figure shows the evolution of the covariance matrix during the finetuning stage of the proposed a-DSBM algorithm compared to the original DSBM algorithm and the base bridge-matching model.  Both online and iterative finetuning approaches are shown for two types of Gaussian distributions: one with a scalar covariance matrix, and another with a full covariance matrix. The plot displays how quickly each method converges to the optimal covariance matrix (indicated as 'Optimum'). The results demonstrate that the online \u03b1-DSBM approach achieves faster convergence than the iterative DSBM, and that \u03b1-DSBM's performance closely matches DSBM when the update frequency is high.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_49_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C* and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "This figure shows the evolution of covariance matrices during the finetuning process of the DSBM model.  Two different scenarios are shown: one using a scalar covariance matrix and another with a full covariance matrix. Three methods are compared: the baseline bridge matching, the online \u03b1-DSBM, and the iterative DSBM (with varying update frequencies). The normFrob metric measures the difference between the true covariance (C*) and the estimates from each method.  The left panel shows results for a scalar covariance matrix, and the right panel for a full covariance matrix.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_49_2.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1K training steps per model fit).", "description": "This figure shows the evolution of covariance matrices during training in different settings.  It compares the convergence speed of three methods:  a standard baseline (Bridge Matching), the proposed \u03b1-DSBM (online) method, and a more traditional iterative DSBM approach.  Two scenarios are displayed: one with a simple scalar covariance matrix and one with a full covariance matrix. The plots demonstrate the faster convergence of the online a-DSBM compared to iterative DSBM, with the a-DSBM closely approximating the true covariance (optimum).", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_49_3.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1xK training steps per model fit).", "description": "This figure displays the evolution of the covariance matrix during the finetuning phase of both online and iterative versions of the DSBM algorithm.  Two different Gaussian settings are shown (scalar and full covariance).  The graphs plot the Frobenius norm of the difference between the true covariance and the estimated covariance over training iterations, illustrating the convergence speed of the different methods.  The iterative DSBM shows faster convergence as the frequency of switching between forward and backward updates increases, finally approaching the performance of the online \u03b1-DSBM.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_49_4.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure displays the evolution of covariance matrices during the finetuning stage of the DSBM algorithm. It compares three different approaches: online \u03b1-DSBM, iterative DSBM with varying update frequencies (1K, 2.5K, and 5K steps), and a baseline bridge matching model.  The plots show that the online \u03b1-DSBM converges faster to the true covariance than the iterative DSBM approaches, and that both outperform the baseline.  Two scenarios are shown: one with a scalar covariance matrix and one with a full covariance matrix, demonstrating the algorithm's performance across different levels of complexity.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_50_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "This figure shows the evolution of the covariance matrix during the training process for different methods: online \u03b1-DSBM, iterative DSBM, and base bridge matching. The left panel shows results for a Gaussian distribution with a scalar covariance matrix, while the right panel shows results for a Gaussian distribution with a full covariance matrix.  The plots demonstrate how the covariance matrix changes during training and how quickly each method converges to the true value. The figure highlights the superiority of online \u03b1-DSBM over iterative DSBM in this task.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_51_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrix during the finetuning process of the DSBM model, comparing three different approaches: online \u03b1-DSBM, iterative DSBM, and base bridge matching.  It demonstrates that online \u03b1-DSBM converges to the true covariance faster than the other methods, especially for the more complex case of a full covariance matrix. The plots visualize the Frobenius norm difference between the estimated and actual covariance matrices over training iterations.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_52_1.jpg", "caption": "Figure 20: AFHQ 64 \u00d7 64 Wild \u2192 Cat transfer results for different values of \u221a\u03b5 in a bidirectional model before and after online finetuning. Low values of \u03b5 lead to poor sample quality in both base and finetuned models. Excessively high \u03b5 values impede information passing from the inputs to the outputs, resulting in poor alignment. High values of \u03b5 also increase blurriness due to noisier SDE trajectories, thus requiring more denoising steps during sampling.", "description": "This figure shows the results of transferring images from the Wild domain to the Cat domain using a bidirectional model with different noise levels (\u221a\u03b5). The left column shows the results before finetuning and the right column shows the results after finetuning.  It demonstrates that lower values of \u221a\u03b5 result in poor image quality, while high values of \u221a\u03b5 lead to blurry images and misalignment. A good \u221a\u03b5 balances image quality and alignment.", "section": "6.2 Image datasets"}, {"figure_path": "1F32iCJFfa/figures/figures_52_2.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C* and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit)", "description": "The figure shows the evolution of the covariance matrix during the finetuning of the forward and backward networks in online and iterative DSBM.  It compares the performance of three methods:  a baseline bridge matching model, an online \u03b1-DSBM, and an iterative DSBM with varying frequencies of alternating between forward and backward updates.  The results are presented for two scenarios:  a Gaussian distribution with a scalar covariance matrix and a Gaussian distribution with a full covariance matrix. The plots display the Frobenius norm between the true covariance matrix and the estimated covariance matrix over training iterations. The online \u03b1-DSBM converges significantly faster than the iterative DSBM.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_53_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1xK training steps per model fit).", "description": "This figure shows the evolution of the covariance matrix during the finetuning of the DSBM model using three different approaches: online, iterative, and base. The plots show that the online \u03b1-DSBM algorithm is faster to converge and provide an accurate estimation of the covariance compared to iterative DSBM and base Bridge Matching.", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_53_2.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with \u03b1xK training steps per model fit)", "description": "This figure shows the evolution of covariance matrices during training for different methods: online and iterative DSBM, and a baseline bridge matching model.  Two scenarios are presented, one with a scalar covariance matrix and another with a full covariance matrix. The plots illustrate the convergence speed and accuracy of the different algorithms toward the true covariance matrix (optimum).", "section": "6 Experiments"}, {"figure_path": "1F32iCJFfa/figures/figures_54_1.jpg", "caption": "Figure 2: Evolution of the covariance during online and iterative DSBM finetuning for forward and backward networks. The finetuning starts after 10K steps of training a bridge matching model. For the iterative case, we alternate between forward and backward updates with varying frequencies, i.e. changing after 1K, 2.5K and 5K steps. Left: Gaussian with scalar covariance matrix. Right: Gaussian with full covariance matrix. We compute the normFrob between C\u2217 and its estimate using Bridge Matching (Base), \u03b1-DSBM (Online), and DSBM (Iterative with @xK training steps per model fit).", "description": "This figure shows the evolution of covariance matrices during the training process for three different methods: online DSBM, iterative DSBM, and bridge matching.  The results are presented for two different types of Gaussian distributions: one with a scalar covariance matrix and one with a full covariance matrix. The plots illustrate the convergence of the methods towards the true covariance matrix, with online DSBM showing faster convergence compared to iterative DSBM and bridge matching.", "section": "6 Experiments"}]