[{"figure_path": "rM3FFH1mqk/figures/figures_4_1.jpg", "caption": "Figure 1: Left: source distribution (2D, blue dots) and target distribution (3D, red dots). For ease of visualization, we lift the source R<sup>2</sup> mm-spaces into target R<sup>3</sup> by padding the third coordinate to zero. Right: OT solutions of GW-SDP (our algorithm), CG-GW (conditional gradient descent, default solver of PythonOT) and entropic OT solver. The OT plans from GW-SDP is almost sparse in the same manner to CG-GW, while the eGW is not.", "description": "This figure shows a comparison of optimal transport plans obtained using three different methods: GW-SDP (the authors' proposed method), CG-GW (a conditional gradient descent method), and entropic OT.  The left panel displays the 2D source distribution (blue) and the 3D target distribution (red). The right panel shows the optimal transport plans generated by each method. Note that the GW-SDP and CG-GW methods produce sparse transport plans (many zero entries in the transport matrix), while the entropic OT method does not. The sparsity indicates that these methods primarily match similar points in the two distributions while the entropic OT method smooths this process.", "section": "4.1 Matching Gaussian Distributions"}, {"figure_path": "rM3FFH1mqk/figures/figures_4_2.jpg", "caption": "Figure 1: Left: source distribution (2D, blue dots) and target distribution (3D, red dots). For ease of visualization, we lift the source R2 mm-spaces into target R\u00b3 by padding the third coordinate to zero. Right: OT solutions of GW-SDP (our algorithm), CG-GW (conditional gradient descent, default solver of PythonOT) and entropic OT solver. The OT plans from GW-SDP is almost sparse in the same manner to CG-GW, while the eGW is not.", "description": "This figure shows a comparison of optimal transport plans obtained by three different methods: GW-SDP (the proposed method), CG-GW (a conditional gradient descent method), and entropic OT.  The left panel visualizes the source (2D) and target (3D) distributions. The right panel displays the optimal transport plans generated by each method, highlighting the sparsity of GW-SDP and CG-GW compared to the entropic OT method.", "section": "4.1 Matching Gaussian Distributions"}, {"figure_path": "rM3FFH1mqk/figures/figures_5_1.jpg", "caption": "Figure 2: Value of the objective (left) and approximation ratio (right) with a varying number of sample points, calculated on 10 runs of the Gaussian matching experiment.", "description": "This figure shows the results of an experiment comparing the performance of the proposed GW-SDP algorithm against Conditional Gradient (CG-GW) and entropic GW methods on a Gaussian matching task.  The left panel displays the objective function values for each algorithm as the number of sample points increases. The right panel shows the approximation ratio, calculated as the ratio of the objective function value of each algorithm to that of the optimal solution obtained using GW-SDP.  The results suggest that GW-SDP consistently achieves lower objective values and frequently computes globally optimal solutions.", "section": "4 Numerical Experiments with Off-the-shelf Convex Solvers"}, {"figure_path": "rM3FFH1mqk/figures/figures_5_2.jpg", "caption": "Figure 3: Gaussian Matching experiments with the sample points m from source distribution varying while the sample points from target distribution keeping fixed n = 8. Average of 20 runs.", "description": "The figure shows the results of Gaussian matching experiments where the number of sample points in one distribution is fixed (n=8), while the number of sample points (m) in the other distribution varies.  It compares the objective function values (GW distances) obtained using four different methods: GW-SDP (the proposed method), GW Non-Convex (conditional gradient descent solver), eGW (entropic GW solver), and eGW-PPA.  The plot shows the average objective function value over 20 runs for each value of m, illustrating that the proposed GW-SDP method consistently yields smaller objective function values compared to the other methods.", "section": "4.1 Matching Gaussian Distributions"}, {"figure_path": "rM3FFH1mqk/figures/figures_5_3.jpg", "caption": "Figure 3: Gaussian Matching experiments with the sample points m from source distribution varying while the sample points from target distribution keeping fixed n = 8. Average of 20 runs.", "description": "This figure shows the results of Gaussian matching experiments where the number of sample points in one distribution is fixed (n=8), and the number of sample points (m) in the other distribution is varied.  It presents two subplots. The left subplot displays the objective values obtained using different solvers (GW-SDP, GW Non-Convex, eGW). The right subplot shows the approximation gap for GW-SDP, indicating how close the SDP relaxation solution is to the globally optimal solution for the GW problem. The approximation gap is calculated by dividing the objective value of the SDP solution by the objective value of the true optimal GW solution.  A value of 1.0 signifies that the SDP relaxation found the globally optimal solution. The experiment was repeated 20 times, and the average results are shown.", "section": "4.1 Matching Gaussian Distributions"}, {"figure_path": "rM3FFH1mqk/figures/figures_7_1.jpg", "caption": "Figure 4: Value of the objective on the synthetic graph matching task, from the three-block SBM (left) to the two-block SBM (right). Upper: calculated using GW. Lower: calculated using Fused-GW.", "description": "This figure compares the performance of three different methods (GW-SDP, GW-CG, and eGW) and their fused counterparts (Fused-GW-SDP, Fused-GW-CG, and Fused-eGW) on a graph matching task.  The methods are applied to two synthetic graphs generated from stochastic block models (SBMs) with different numbers of clusters. The top row shows the results using the standard Gromov-Wasserstein (GW) distance, while the bottom row shows the results using the Fused Gromov-Wasserstein (FGW) distance. Each image represents the optimal transport plan obtained by each method, visualized by connecting corresponding nodes between the two graphs. The numbers below the images show the objective function values achieved by each method. The figure visually demonstrates that the proposed GW-SDP method consistently achieves lower objective values than the alternative methods. This indicates that GW-SDP achieves better results in this specific scenario.", "section": "4.2 Graph Community Matching"}, {"figure_path": "rM3FFH1mqk/figures/figures_7_2.jpg", "caption": "Figure 5: Correspondence between different 3D objects obtained by (GW-SDP). Left: Correspondence between two elephants. Right: Correspondence between an elephant and a cat. For both cases, (GW-SDP) returns one-one mappings.", "description": "This figure shows two examples of correspondences between 3D objects found by the GW-SDP algorithm.  The left panel shows a one-to-one mapping between two elephants, and the right panel shows a one-to-one mapping between an elephant and a cat.  The correspondences are visualized by lines connecting corresponding points on the two objects.", "section": "4.4 Using GW-SDP on Realistic Shape-Matching Task"}, {"figure_path": "rM3FFH1mqk/figures/figures_15_1.jpg", "caption": "Figure 6: The relationship among the original GW problem, (GW+), (GW++), (GW-SDP), and (GW-Dual).", "description": "This figure illustrates the relationships between several formulations of the Gromov-Wasserstein (GW) problem and its dual.  It shows how the original non-convex GW problem is first reformulated as GW+ and GW++.  The GW++ formulation, which includes additional redundant constraints, is then used to derive the convex GW-Dual problem through Lagrangian dualization. A separate convex relaxation (GW-SDP) is also developed, and the figure demonstrates the equivalence and strong duality that exists between GW-SDP and GW-Dual.", "section": "Duality"}, {"figure_path": "rM3FFH1mqk/figures/figures_18_1.jpg", "caption": "Figure 7: Application of the (GW-SDP) to find graph barycenter of noisy circular graphs.", "description": "This figure visualizes the results of applying the proposed GW-SDP algorithm to compute the barycenter of a set of noisy circular graphs.  (a) shows nine examples of the noisy circular graphs used as input to the algorithm, each with a slightly different structure. (b) displays the resulting barycenter graph computed by GW-SDP, which represents a kind of average structure among the input graphs.  The figure illustrates the algorithm's capability to find a meaningful representative structure from a collection of similar but not identical graphs.", "section": "D.1 GW-SDP Barycenters"}]