[{"type": "text", "text": "PPLNs: Parametric Piecewise Linear Networks for Event-Based Temporal Modeling and Beyond ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Chen Song Zhenxiao Liang Bo Sun Qixing Huang Department of Computer Science The University of Texas at Austin Austin, TX 78712   \n{song, liangzx, bosun, huangqx}@cs.utexas.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We present Parametric Piecewise Linear Networks (PPLNs) for temporal vision inference. Motivated by the neuromorphic principles that regulate biological neural behaviors, PPLNs are ideal for processing data captured by event cameras, which are built to simulate neural activities in the human retina. We discuss how to represent the membrane potential of an artificial neuron by a parametric piecewise linear function with learnable coefficients. This design echoes the idea of building deep models from learnable parametric functions recently popularized by Kolmogorov\u2013Arnold Networks (KANs). Experiments demonstrate the state-of-the-art performance of PPLNs in event-based and image-based vision applications, including steering prediction, human pose estimation, and motion deblurring. The source code of our implementation is available at https://github.com/chensong1995/PPLN. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Event cameras are neuromorphic sensors that summarize the evolving world as a stream of events. Each event describes the pixel coordinates, time, and polarity of an intensity change. Thanks to the simplicity of this data representation, event cameras enjoy multiple advantages over conventional cameras, including but not limited to fast data rate and high dynamic range (Gallego et al., 2020). Over the past, researchers have developed event-based algorithms to solve various computer vision problems, such as motion deblurring (Pan et al., 2019, 2020; Wang et al., 2020; Song et al., 2022, 2024), human pose estimation (Calabrese et al., 2019), and autonomous driving (Binas et al., 2017; Hu et al., 2020). A recent survey (Zheng et al., 2023) indicates a rapidly increasing community interest in event-based research, with motion deblurring being the most popular task. Extensive experiments demonstrate that by utilizing events as an auxiliary input, algorithms perceive fine motion details that are absent from conventional image captures, leading to substantial performance gain over methods that make inferences from conventional images alone. ", "page_idx": 0}, {"type": "text", "text": "The success of event cameras demonstrates the power of imitating biological neuromorphic principles. The event camera comprises a rectangular array of dynamic vision sensors, each of which is analogous to a visual receptor neuron on the human retina dedicated to perceiving one specific location. The neuron experiences excitement and produces a spike when the environmental intensity varies significantly, corresponding to an event generated as a response to brightness changes. ", "page_idx": 0}, {"type": "text", "text": "This paper presents Parametric Piecewise Linear Networks (PPLNs) to understand the bio-inspired event data with a bio-inspired deep learning model. As opposed to a generic network design, we believe and verify in this paper that it is highly beneficial to build a processing network that caters to the principles of the data source (event cameras). As illustrated by Figure 1 (Middle), the key idea is to explicitly approximate the membrane potential of a neuron as a piecewise linear mapping from time to electric voltage. Figure 1 (Right) presents the sketch of a PPLN node, whose internal mechanism ", "page_idx": 0}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/a960f8d787197aeb8180eea3bb15b4567369a2dccc10aa6b2461bb74688a3649.jpg", "img_caption": [], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: (Left): A biological neuron has three main components: the dendrites (blue), the axon (orange, pink), and the soma (green). The dendrites are responsible for receiving external inputs. The axon transmits signals to the dendrites of other neurons through the synapses. The soma is the body of the cell and connects the dendrites to the axon. (Middle): The membrane potential, defined as the voltage difference between the interior and the exterior of the cell, regulates the neuron\u2019s behavior and can be approximately modeled by a piecewise linear function. $\\textcircled{1}$ When the neuron is at rest, the potential stays at a constant level ${\\cal V}_{0}$ . $\\circledcirc$ An external input is received by the dendrites, causing an instantaneous perturbation to the membrane potential. $\\circled{3}$ The perturbation is not significant enough to excite the neuron, and the potential leaks over time exponentially (i.e., linearly in the logarithmic space). $\\circledast$ Another external input happens. $\\textcircled{5}$ The input fails to excite the neuron. $\\circled{6}$ A third input causes the membrane potential to exceed the threshold voltage $V_{\\mathrm{th}}$ . The neuron becomes excited and generates a spike. $\\circledcirc$ The excitement opens ion channels, and the ion flow causes a reset to the membrane potential. $\\circled{8}$ After the excitement, the ion channels close again, and the potential continues to decay. $\\circledcirc$ The neuron returns to the resting state, waiting for new inputs. (Right): A PPLN node. Given inputs $\\{x_{i}\\}_{i=1}^{k}$ , we predict the linear coefficients $\\Theta$ for the membrane potential function, including the slope, intercept, and endpoints of each line segment. The resulting parametric function $\\tilde{V}_{\\Theta}$ is then used to evaluate the neuron output at the timestamp of interest $y(x_{1},\\cdot\\cdot\\cdot,x_{k},t)=\\sigma(\\tilde{V}_{\\Theta}(t))$ , where $\\sigma(\\cdot)$ is the integral normalization defined in Section 3.4. ", "page_idx": 1}, {"type": "text", "text": "is explained thoroughly in Section 3. While the event camera imitates how a single layer of visual receptor neurons react to external intensity changes, PPLNs are motivated by observations of how layers of biological neurons communicate. Inspired by the Leaky Integrate-and-Fire model (Abbott, 1999), we propose to use a piecewise linear parameterization to approximate its temporal evolution in the logarithmic space. The key difference between PPLNs and the bio-inspired Spiking Neural Networks (SNNs) (Eshraghian et al., 2021) in existing literature is that PPLNs are an alternative to general GPU-based temporal inference models, whereas SNNs aim at the deployment on hardware neuromorphic chips (Davies et al., 2018). Instead of real-valued membrane potentials, SNNs also propagate binary spikes, leading to reduced energy consumption and training instabilities. ", "page_idx": 1}, {"type": "text", "text": "PPLNs are conceptually similar to the emerging Kolmogorov\u2013Arnold Networks (KANs) (Liu et al., 2024). Both KANs and PPLNs leverage learnable parametric functions to build a deep network. Different from KANs, which use input-independent B-splines, PPLNs exploits input-dependent piecewise linear functions. Using piecewise linear functions allows our brain-inspired design to mimic biological neural principles and the event generation model. Predicting function coefficients at inference time allows the network to better handle input heterogeneity. ", "page_idx": 1}, {"type": "text", "text": "We modify the network architecture in state-of-the-art event-based vision algorithms by replacing multi-layer perceptions and convolution operators with PPLN nodes and evaluate PPLNs on three applications: steering prediction, 3D human pose estimation, and motion deblurring. With fewer or a similar number of trainable parameters, PPLNs improve baselines by $30.8\\%$ in steering prediction, $11.1\\%$ in human pose estimation, and $5.6\\%$ in motion deblurring. To demonstrate the potential of PPLNs, we experiment on the conventional frame-based version of the same applications without the event input and observe consistent improvements. Additionally, we present a mathematical analysis of the convergence properties to showcase the robustness. ", "page_idx": 1}, {"type": "text", "text": "In summary, we make the following contributions: ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "\u2022 We propose Parametric Piecewise Linear Networks (PPLNs), mimicking biological principles by approximating membrane potentials as parametric mappings.   \n\u2022 We show how to predict a set of parametric coefficients from the input of the PPLN node and evaluate the membrane potential at any timestamp of interest. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Biological neurons. As shown in Figure 1 (Left), if the combined effect of small perturbations over time causes the membrane potential to exceed the threshold potential, the neuron will become excited. During the excitement, the neuron produces an output spike through the synapses (Lacinov\u00e1, 2005; Maeda et al., 2009). In Figure 1 (Middle), the Leaky Integrate-and-Fire model (Abbott, 1999) suggests that the membrane potential can be approximated by a piecewise linear function as a parametric mapping from time to the logarithm of the voltage difference. ", "page_idx": 2}, {"type": "text", "text": "Spiking neural networks. Spiking Neural Networks (SNNs) are Recurrent Neural Networks (RNNs) that simulate biological neurons (Eshraghian et al., 2021). Each SNN node carries an internal variable corresponding to the membrane potential. The output of the SNN node is a binary signal that is zero by default and becomes one if excited (Abbott, 1999). The key advantage of SNNs is low power consumption, making them the ideal model to be deployed on hardware neuromorphic chips (Davies et al., 2018). By contrast, PPLNs are designed to be an alternative to general GPU-based temporal inference models, even though SNNs and PPLNs are motivated by similar biological principles. ", "page_idx": 2}, {"type": "text", "text": "Event cameras. Event cameras are neuromorphic devices that summarize the evolving environment as a stream of events (Lichtsteiner et al., 2008). Each event is analogous to a significant intensity change that exceeds the hardware threshold and excites a biological light-sensing neuron. An event is represented as a 4-tuple $(x,y,t,p)$ , where $(x,y)$ are the pixel coordinates, $t$ is the timestamp, and $p\\,\\in\\,\\{-1,+1\\}$ is the polarity of the intensity change. Event cameras have a fast data rate, high dynamic range, low power consumption, and minimal motion blur compared to conventional cameras (Gallego et al., 2020). A recent trend is to utilize hardware that simultaneously captures event and conventional streams, where the event stream is used as an auxiliary input to enhance regular computer vision algorithms. For example, while image-to-image deblurring is a well-studied problem in the research community (Richardson, 1972; Fish et al., 1995; Krishnan & Fergus, 2009; Joshi et al., 2009; Levin et al., 2007; Kim et al., 1998; Shan et al., 2008; Fergus et al., 2006; Xu et al., 2013; Xu & Jia, 2010; Perrone & Favaro, 2014; Babacan et al., 2012; Kupyn et al., 2018, 2019) , several works in event-based vision demonstrate the possibility of converting a blurry image into a sharp video that explains the motion during the exposure interval (Pan et al., 2019, 2020; Wang et al., 2020; Song et al., 2022, 2024). ", "page_idx": 2}, {"type": "text", "text": "Learning activation functions. The Rectified Linear Unit (ReLU) (Nair & Hinton, 2010) represents a two-piece linear activation function, $f(x)=x$ if $x>0$ , and $f(x)=0$ if $x\\leq0$ and has several variants. Our design is conceptually similar to the Piecewise Linear Unit (PWLU) (Zhou et al., 2021), where the activation is defined as an $n$ -piece linear function with learnable slopes and intercepts. Kolmogorov-Arnold Networks (KANs) have also received wide attention, which build a deep model by stacking layers of parametric B-spline activation functions (Liu et al., 2024). In addition to the conceptual similarities, PPLNs are fundamentally different from PWLUs and KANs since PPLNs incorporate temporal modeling. Additionally, PPLNs allow discontinuities at segment endpoints and the learning of endpoint locations, neither of which is supported by PWLUs or KANs. Furthermore, the ReLUs are activation functions to be appended after prediction layers (e.g., linear and convolution layers), whereas the PPLNs are designed to replace the prediction layers in temporal learning models. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Overview ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "As shown in Figure 2 (a, b), a PPLN node implements the following mapping: ", "page_idx": 2}, {"type": "equation", "text": "$$\nf:\\mathbb{R}^{k}\\times[0,1]\\rightarrow\\mathbb{R}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\textbf{x}\\in\\mathbb{R}^{k}$ is the $k$ -dimensional non-temporal component of the input, and $t\\,\\in\\,[0,1]$ is the normalized input scalar timestamp. The mapping $f$ converts the input $\\left({{\\bf{x}},t}\\right)$ to a scalar in $\\mathbb{R}$ . ", "page_idx": 2}, {"type": "text", "text": "The first step in the calculation of $f$ is to predict the linear coefficients, $\\Theta\\,=\\,\\{\\mathbf{m},\\mathbf{b},\\mathbf{s}\\}$ , using the trainable parameters, $W_{m}$ $\\mathit{\\check{\\Psi}}_{m},\\mathit{W}_{b},\\mathit{W}$ $W_{s}$ , and $\\mathbf{w}_{V}$ . Section 3.2 explains this process in detail. The predicted coefficients allow us to assemble the piecewise linear membrane potential function, as illustrated by the blue plot in the bottom-left corner of Figure 2 (a, b). To better handle the numerical instability, Section 3.3 discusses the procedure to smooth the boundaries of the predicted linear pieces. The smoothed function is then normalized by another predicted value $\\overline{V}$ , as explained in Section 3.4. Finally, the output of the PPLN node is given as $f(\\mathbf{x},t)=\\sigma(\\tilde{V}_{\\Theta}(t))$ (i.e., the smoothed, and normalized potential function evaluated at the timestamp of interest). While it is straightforward to construct a fully-connected network by stacking PPLN nodes, Section 3.5 discusses how to support convolution operations. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3.2 Coefficient prediction ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Let $n$ be a hyper-parameter denoting the number of line segments in the piecewise linear modeling. The parametric coefficients $\\Theta=\\{\\mathbf{\\bar{m}},\\mathbf{b},\\mathbf{s}\\}$ are given by: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{m}=\\operatorname{tanh}(W_{m}\\cdot\\mathbf{x})}\\\\ &{\\mathbf{b}=W_{b}\\cdot\\mathbf{x}}\\\\ &{\\mathbf{s}=\\operatorname{softmax}(W_{s}\\cdot\\mathbf{x})}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $W_{m}$ , $W_{b}$ , and $W_{s}$ are $n\\times k$ dimensional matrices containing trainable weights. $\\textbf{m}=$ $(m_{1},\\ldots,m_{n})^{T}$ and $\\mathbf{b}=(b_{1},\\ldots,b_{n})^{T}$ are the slopes and intercepts of $n$ different line segments, respectively. $\\mathbf{s}\\;=\\;(s_{1},\\ldots,s_{n})^{T}$ defines the temporal interval size for each line segment. Let $t_{0}\\stackrel{-}{=}0$ and $t_{i}=t_{i-1}+s_{i}$ . With the softmax function, the temporal space $[0,1]$ is divided into $n$ non-overlapping intervals by s. We predict the aforementioned coefficients and approximate the membrane potential as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\tilde{V}_{\\Theta}(t):=\\left\\{\\begin{array}{l l}{m_{1}t+b_{1}}&{t_{0}\\leq t<t_{1}}\\\\ {m_{2}t+b_{2}}&{t_{1}\\leq t<t_{2}}\\\\ {\\cdot\\cdot}\\\\ {m_{n}t+b_{n}}&{t_{n-1}\\leq t\\leq t_{n}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, the hyperbolic tangent function restricts the slope, $\\mathbf{m}$ , preventing the exploding gradient problem commonly observed in temporal models (Pascanu et al., 2013; Bengio et al., 1994). ", "page_idx": 3}, {"type": "text", "text": "3.3 Smoothing ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "While we can build a network by stacking layers of the vanilla PPLN nodes described above, training presents a challenge for numerical stability. Equation (5) suggests that $\\frac{\\partial\\tilde{V}_{\\Theta}(t)}{\\partial\\mathbf{t}}$ is an all-zero vector. In other words, gradient-based optimizers (Bottou et al., 1991; Kingma & Ba, 2014) cannot update the values of $t_{i}$ \u2019s (the location of segment endpoints). ", "page_idx": 3}, {"type": "text", "text": "To address this issue, we propose to smooth the segment boundaries. The key idea is to blend the linear pieces across adjacent intervals. Let $(x,\\pi_{i}(x))$ be the point on the $i^{\\mathrm{th}}$ predicted segment, that is, $\\pi_{i}(\\bar{x}):=m_{i}x+b_{i}$ . ", "page_idx": 3}, {"type": "text", "text": "Assuming $t_{i-1}\\leq t<t_{i}$ (i.e., $t$ belongs to the $i^{\\mathrm{th}}$ predicted segment), the smoothed potential is: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\tilde{V}_{\\Theta}^{T}(t):=\\!w_{l}^{(i)}\\pi_{i-1}(t)+(1-w_{l}^{(i)}-w_{r}^{(i)})\\pi_{i}(t)+w_{r}^{(i)}\\pi_{i+1}(t)}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where the weights $w_{\\leftarrow}^{(i)}$ and $w_{\\rightarrow}^{(i)}$ are defined through the temperature hyper-parameter $T$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{w_{l}^{(i)}:=\\left\\{\\!\\!\\begin{array}{l l}{0}&{i=1}\\\\ {\\left(1+\\exp\\left(T(t-t_{i-1})\\right)\\right)^{-1}}&{i=2,\\ldots,n}\\end{array}\\ }\\\\ &{w_{r}^{(i)}:=\\left\\{\\!\\!\\begin{array}{l l}{\\left(1+\\exp\\left(T(t_{i}-t)\\right)\\right)^{-1}}&{i=1,\\ldots,n-1}\\\\ {0}&{i=n}\\end{array}\\!\\!\\right..}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Importantly, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{T\\to+\\infty}\\tilde{V}_{\\Theta}^{T}(t)=\\tilde{V}_{\\Theta}(t).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The difference between the smoothed potential, $\\tilde{V}_{\\Theta}^{T}(t)$ , and the unsmoothed potential, $\\tilde{V}_{\\Theta}(t)$ , is that the smoothed gradients $\\frac{\\partial\\tilde{V}_{\\Theta}^{T}(t)}{\\partial\\mathbf{t}}$ do not vanish. We present a theorem with proof in the appendix showing the local convergence properties of the piecewise linear model after smoothing. Assuming the underlying function to fit is indeed an $n$ -piece piecewise linear function, the theorem states that the coefficients can be accurately learned from a set of noisy samples, provided that the noises are reasonably small, the coefficients are adequately initialized, and the temperature $T$ is sufficiently large. For ease of discussion, the theorem uses segment endpoints $\\mathbf{t}=\\{t_{i}\\}$ instead of interval lengths s for the parameterization. Their relation is given in Section 3.2. ", "page_idx": 3}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/1bd2b978cda312abda2fef5c2ce4619cbbd69d873bd833cde459f89d737bcc3b.jpg", "img_caption": ["Figure 2: (a) A linear PPLN node, which maps the input $\\left({{\\bf{x}},t}\\right)$ to output $f$ . The trainable parameters are $W_{m}$ , $W_{b}$ , $W_{b}$ , and $\\mathbf{w}_{V}$ . (b) A similarly structured 2D convolutional PPLN node. (c) The baseline architecture for steering angle prediction $\\mathrm{(Hu)}$ . (d) Our model. (e) The modified baseline (HuMod). "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "Theorem 3.1. (Informal) Consider an underlying $n$ -segment piecewise linear function parameterized by $\\Theta^{\\star}\\,=\\,\\{\\mathbf{m}^{\\star},\\mathbf{b}^{\\star},\\mathbf{t}^{\\star}\\}$ as defined in (5). Let $(\\tau_{j},v_{j})$ , $j\\,=\\,1,\\ldots,m$ be m point samples, where $v_{j}=\\tilde{V}_{\\Theta^{\\star}}(\\tau_{j})+\\psi_{j}$ in which $\\psi_{j}$ is a small random noise. ", "page_idx": 4}, {"type": "text", "text": "The $L2$ loss for the smoothed curve is defined by: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}^{T}(\\Theta):=\\sum_{j=1}^{m}\\big(\\tilde{V}_{\\Theta}^{T}(\\tau_{j})-v_{j}\\big)^{2}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Denote by $\\Theta_{T}^{\\star}$ the weights at which the minimum of (7) is attained at temperature $T$ . Then we show that starting from some initial $\\Theta_{0}$ close to $\\Theta^{\\star}$ , by applying vanilla gradient descent with appropriate temperature increase strategy and a learning rate $\\begin{array}{r}{\\dot{\\eta}=\\dot{O(\\frac{1}{T})}}\\end{array}$ , $\\Theta$ is guaranteed to converge to $\\Theta_{\\infty}^{\\star}$ at a linear convergence rate. ", "page_idx": 4}, {"type": "text", "text": "Specifically, the error of recovered segments is bounded by: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{\\tau_{\\mathrm{min}}\\leq\\tau\\leq\\tau_{\\mathrm{max}}}|\\tilde{V}_{\\Theta_{\\infty}^{\\star}}(\\tau)-\\tilde{V}_{\\Theta^{\\star}}(\\tau)|<O(\\operatorname*{max}|\\psi_{j}|),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\tau_{\\mathrm{min}}$ , $\\tau_{\\mathrm{max}}$ are the smallest and largest values among $\\tau_{j}$ , for $j=1,\\dots,m$ , respectively. ", "page_idx": 4}, {"type": "text", "text": "In addition to the theorem above, the supplementary material uses ablation studies to discuss the practical implication of incorporating the smoothing operation. ", "page_idx": 4}, {"type": "text", "text": "3.4 Integral normalization ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "While the smoothing operator introduced above enriches temporal gradients, $\\frac{\\partial\\tilde{V}_{\\Theta}(t)}{\\partial\\mathbf{t}}$ , the integral normalization operator addresses the issue that $\\frac{\\partial\\tilde{V}_{\\Theta}(t)}{\\partial\\mathbf{m}}$ and $\\frac{\\partial\\tilde{V}_{\\Theta}(t)}{\\partial\\mathbf{b}}$ are both very sparse vectors with only one non-zero entry out of all $n$ elements. From Equation (5), we have: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\int_{0}^{1}\\tilde{V}\\!\\!\\Theta(t)d t=\\frac{1}{2}\\sum_{i=1}^{n}m_{i}(t_{i}^{2}-t_{i-1}^{2})+\\sum_{i=1}^{n}b_{i}(t_{i}-t_{i-1})\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Let $\\overline{V}$ be a parameter that controls the mean of $\\tilde{V}_{\\Theta}(t)$ when $0\\le t\\le1$ . The integral normalization operator $\\sigma(\\cdot)$ is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\sigma(\\tilde{V}_{\\Theta}(t))=\\tilde{V}_{\\Theta}(t)-\\int_{0}^{1}\\tilde{V}_{\\Theta}(t)d t+\\overline{{V}}\\approx V(t)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "After the normalization, $\\frac{\\partial\\sigma(\\tilde{V}_{\\Theta}(t))}{\\partial\\mathbf{m}}$ and $\\frac{\\partial\\sigma(\\tilde{V}_{\\Theta}(t))}{\\partial{\\bf b}}$ are both dense vectors containing rich gradient information in every element, encouraging a smooth and swift convergence. A side effect of the normalization is that the temporal derivativ e, \u2202\u03c3( V\u2202\u02dc\u0398t(t)), also becomes non-zero, allowing segment endpoints to be learned even without smoothing. ", "page_idx": 5}, {"type": "text", "text": "Notably, the ground-truth parameter $\\overline{V}$ is observable in certain applications. In motion deblurring, the task is to generate a sharp video from a blurry image. Mathematically, the mean of all the frames in the output must be equal to the input, restricting the temporal average $\\begin{array}{r}{\\int_{0}^{1}\\sigma(\\tilde{V}_{\\Theta_{x y}}(t))}\\end{array}$ to be equal to the input pixel values. When it cannot be easily observed, $\\overline{V}$ is regressed from the input $\\mathbf{x}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\overline{{V}}=\\langle{\\bf w}_{V},{\\bf x}\\rangle\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathbf{w}_{V}$ is a $k$ -dimensional vector of trainable weights, and $\\langle\\cdot,\\cdot\\rangle$ stands for the inner product. ", "page_idx": 5}, {"type": "text", "text": "Section 4.4 uses ablation studies to demonstrate the effectiveness of integral normalization. In the appendix, we additionally use a two-piece toy example to analyze the normalization. ", "page_idx": 5}, {"type": "text", "text": "3.5 Supporting the convolution operation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The above modeling naturally extends to convolutions, which are the fundamental building blocks of contemporary deep learning. In a convolution layer, each input pixel only affects the output in a small spatial neighborhood rather than across the entire grid. To support convolution, the trainable parameters, $W_{m},\\bar{W}_{b},W_{s}$ , and $\\mathbf{w}_{V}$ , become sparse matrices and vectors with non-zero entries only in locations within the spatial perceptive field. In practice, we predict the coefficients as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\mathbf{m}=\\operatorname{tanh}(\\operatorname{conv}(W_{m},\\mathbf{x}))}\\\\ {\\mathbf{b}=\\operatorname{conv}(W_{b},\\mathbf{x})}\\\\ {\\mathbf{s}=\\operatorname{softmax}(\\operatorname{conv}(W_{s},\\mathbf{x}))}\\\\ {\\overline{{V}}=\\operatorname{conv}(\\mathbf{w}_{V},\\mathbf{x})}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where, after reshaping, $W_{m},W_{b},W_{s},$ , and $\\mathbf{w}_{V}$ are kernels in the convolution operation. The channelwise softmax operator ensures the temporal interval sizes of each pixel add up to one, which is a requirement posed by the valid range of input timestamps $(t\\in[0,1])$ ). We refer interested readers to our code release for how the above design is implemented under PyTorch. ", "page_idx": 5}, {"type": "text", "text": "4 Evaluation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Section 4.1 starts by showing how PPLNs outperform various methods in motion deblurring, the most popular event-based application as indicated by a recent survey (Zheng et al., 2023). In Sections 4.2 and 4.3, we proceed with two other tasks where the goals are to predict the vehicle\u2019s steering angle from the dashcam footage and to estimate the 3D human pose from binocular 2D event camera captures. These are two \u201cmainstream\u201d applications in event-based vision, ranking immediately after deblurring, as reported by the survey. Finally, Section 4.4 and the appendix use ablation studies to demonstrate the importance of the integral normalization operator, the effect of changing the number of line segments in the parameterization $n$ , as well as the practical implication of the smoothing operator. ", "page_idx": 5}, {"type": "text", "text": "We emphasize event-based applications because event cameras and PPLNs are both designed to mimic biological neural principles. Due to the limited availability of high-quality data, event-based vision is an emerging field where modeling plays a more important role than data and the effects of PPLNs can be best demonstrated. However, we also present an evaluation on conventional frame-based tasks to demonstrate the generalizability. Meanwhile, we do not include Spiking Neural Network (SNN) baselines. While SNNs focus on the deployment onto neuromorphic chips, PPLNs are designed to be an alternative to general GPU-based temporal inference models. ", "page_idx": 5}, {"type": "text", "text": "4.1 Task I: motion deblurring ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Task description. Event-enhanced motion deblurring is a popular research domain. Variants of the task include image-to-image and image-to-video deblurring. Our experiments focus on the highly challenging image-to-video problem, establishing a thorough competition against various state-ofthe-art approaches. Given a blurry image and its associated events during the exposure interval, our goal is to reverse the exposure process and reconstruct a sharp video describing the relative motion between the camera and the environment. The following experiments utilize the High Quality Frames (HQF) (Stoffregen et al., 2020) dataset and the preprocessing procedure documented by Song et al. We construct a PPLN based on the U-Net architecture (Ronneberger et al., 2015) by replacing all 2D convolution layers with PPLN nodes (Figure 2 (b)). The input to the PPLN is the concatenation of the blurry image and the event histograms, and the histograms are constructed following Zhu et al.. The output of the PPLN is sharp frames at 14 uniformly spaced timestamps. We utilize ADAM (Kingma & Ba, 2014) to train the network for 50 epochs using the L1 loss. We set the learning rate to $10^{-3}$ and reduce the rate by half after 20 and 40 epochs, respectively. The number of line segments is $n=3$ . ", "page_idx": 5}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/468b580837aa521896fd7876914ae1ebfdc3a5b839cbb3b3f2b361c50ad1e6bb.jpg", "img_caption": ["Figure 3: Motion deblurring visualizations. More are available in the supplementary material. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Evaluation metric. We use the Mean Squared Error, the Peak Signal-to-Noise Ratio, and the Structural Similarity Index Measure. ", "page_idx": 6}, {"type": "text", "text": "Results and discussions. As shown in Table 1 (Left), PPLN has a very strong performance in motion deblurring. PPLN improves DeblurSR (Song et al., 2024), the state-of-the-art event-based motion deblurring model at the time of paper submission, by $5.6\\%$ in MSE, 0.372 dB in PSNR, and $4.9\\%$ in SSIM. Importantly, we underscore that the PPLN is a generic network architecture and does not require task-specific modeling, whereas the baseline approaches utilize techniques that cater to the deblurring problem, such as dictionary learning (eSL-Net) (Wang et al., 2020), per-pixel polynomial approximation (E-CIR) (Song et al., 2022), and implicit neural representation (DeblurSR) (Song et al., 2024). The success of the PPLN reveals the strength of mimicking biological neural behaviors. ", "page_idx": 6}, {"type": "text", "text": "In Table 1 (Left), we also use regular convolution layers to construct the U-Net. We increase the number of convolutional channels in the regular U-Net to approximately match the number of trainable parameters in the PPLN (173M versus 192M). The last two rows suggest that the PPLN improves the U-Net by $54.5\\%$ in MSE, $6.45\\:\\mathrm{dB}$ in PSNR, and $43.3\\%$ in SSIM. Qualitatively, as shown in Figure 3, our method generates sharper and more realistic frames than the baseline approaches. The proposed PPLN offers vivid details around salient features. In the first row, our method reconstructs the dark patterns on the white background with sharp edges. In the second row, our method gives the best contrast between the white board and the black letters. ", "page_idx": 6}, {"type": "text", "text": "4.2 Task II: steering angle prediction ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Task description. The DAVIS Driving Dataset released in 2020 (DDD20) (Hu et al., 2020) contains 51 hours of dashcam recordings with both neuromorphic events and conventional frames. Following Hu et al., we select 15 recordings during the day and 15 at night across the western United States, and train a deep network to regress steering angles from the dual-modal input. ", "page_idx": 6}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/a589392345368d3f0918a416a049dd398f5fdd4839cf31ca2de1457a5f1328b8.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/1e6afff2f4a3665de46a6b61e0d485dca6f5d3520f8e3dd7c2ba37cd00649e1b.jpg", "table_caption": ["Table 1: (Left): Motion deblurring quality. (Right): Steering prediction errors. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/58c0aded7492301f01266acac20c50e0640c28e1493f0c9b9462555f21940f36.jpg", "table_caption": ["Table 2: (Left): Human pose estimation errors. (Right): Frame-based steering prediction errors. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "As shown in Figure 2 (c), we build a PPLN upon the existing baseline, consisting of a convolutional head, a pooling layer, and a linear component. The convolutional head reduces the spatial dimension of the data and increases the number of channels. The pooling layer eliminates both spatial dimensions by averaging all the pixels on the reduced spatial grid. Finally, the linear component of the network maps the 64-dimensional feature to the scalar steering angle output. The network contains a total number of 463,425 (463K) parameters. The input frame and events contain $50\\;\\mathrm{ms}$ of historical data. ", "page_idx": 7}, {"type": "text", "text": "Our model (Figure 2 (d)) lowers the prediction frequency to every $500\\,\\mathrm{ms}$ . The network takes ten conventional frames and ten times as many events as input and predicts the steering angle at ten uniformly distributed timestamps. We replace the linear component with PPLN nodes and slightly increase the number of layers. To match the number of parameters in the original architecture, we shrink the convolutional head. This results in a network with 455,338 (455K) parameters. We utilize ADAM (Kingma & Ba, 2014) to train the network for 200 epochs using the L2 loss. The learning rate $10^{-3}$ with a weight decay of $10^{-4}$ . The number of line segments in the parameterization is $n=3$ . ", "page_idx": 7}, {"type": "text", "text": "Evaluation metric. We use the Root Mean Square Error and the Explained VAriance. We train with five random seeds and report the mean and standard deviation. ", "page_idx": 7}, {"type": "text", "text": "Results and discussion. As shown in Table 1 (Right), our approach outperforms the baseline model in RMSE, with a $17.0\\%$ improvement at night, $35.6\\%$ improvement during the day, and $30.8\\%$ improvement overall. Similar enhancement is observed in EVA, with $1.9\\%$ improvement at night, $23.6\\%$ improvement during the day, and $9.6\\%$ improvement overall. ", "page_idx": 7}, {"type": "text", "text": "The input to our model contains ten times as much information as the baseline approach (Hu et al., 2020). To investigate whether the performance gain is simply a result of enriched input information, we present an additional comparison where the baseline is modified to have the same input and output dimensions as our model (Figure 2 (e)). From the second and the third rows in Table 1 (Right), we observe that PPLN improves the modified baseline by $5.7\\%$ in RMSE and $1.0\\%$ in EVA. ", "page_idx": 7}, {"type": "text", "text": "4.3 Task III: human pose estimation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Task description. The dynamic Vision Sensor Human Pose (DHP19) dataset (Calabrese et al., 2019) is collected by inviting human subjects into a cubic space and using event cameras in the four ceiling corners to record various body movements, such as walking, jumping, and walking. DHP19 contains recordings of 17 human subjects performing 33 different body movements. In addition to the events, DHP19 includes the 3D coordinates of 13 body joints. The goal is to predict 3D joint coordinates. ", "page_idx": 7}, {"type": "text", "text": "Calabrese et al. use two frontal cameras (\u201cCam $2^{\\circ}$ and \u201cCam $3^{\\circ}$ ) in their experiments. The overall pipeline has two stages. First, they utilize a deep network to predict the 2D joint coordinates from the events in each view. After that, they project the 2D predictions into 3D using the calibration matrices. ", "page_idx": 7}, {"type": "text", "text": "The deep network used by Calabrese et al. is a fully convolutional network (Long et al., 2015) that contains 17 layers and 218,592 (219K) trainable parameters. The input events are represented as histograms (Zhu et al., 2019), and the output 2D joint coordinates are represented as heatmaps. After collecting 25,000 events from all four views, the algorithm assembles event histograms from two frontal cameras and discards the events from the other two cameras. The model updates the 3D joint coordinates if the 2D prediction confidence exceeds a threshold $\\tau=0.3$ in both views. ", "page_idx": 7}, {"type": "text", "text": "In our experiment, the model makes an inference every 250,000 events. The network takes ten times as many events as input and predicts 2D joint coordinates at ten different timestamps. We modify the prediction network by introducing PPLN layers. The modified network contains 215,648 (216K) trainable parameters. We utilize RMSProp (Kingma & Ba, 2014) to train the network for 20 epochs using the L2 loss. The learning rate is $10^{-3}$ in the first 10 epochs, $10^{-4}$ from epochs 10 to 15, and $10^{-5}$ from epochs 15 to 20. The number of line segments in the parameterization is $n=3$ . ", "page_idx": 7}, {"type": "text", "text": "Evaluation metric. We use Mean Per Joint Position Error and report in 2D pixels and 3D millimeters. ", "page_idx": 7}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/e6d8e90387eccd930699b4bd38e84a3e392f87b812f1d6f492513e4e6627fbef.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Results and discussion. As shown in Table 2 (Left), PPLN estimations have a 2D MPJPE of 6.76 pixels in Cam 2, a 2D MPJPE of 6.51 pixels in Cam 3, and a 3D MPJPE of $73.05\\;\\mathrm{mm}$ . Compared to the original network used by Calabrese et al., we achieve $9.7\\%$ improvement in Cam 2, $10.7\\%$ improvement in $\\mathbf{Cam}\\,3$ , and $11.1\\%$ improvement in 3D. Similar to Section 4.2, simply enlarging the temporal horizon confuses the network and leads to performance degradation. Our method enhances the modified baseline by $43.2\\%$ in Cam 2, $44.7\\%$ in Cam 3, and $44.0\\%$ in 3D. ", "page_idx": 8}, {"type": "text", "text": "4.4 Ablation studies ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In Section 3.4, we introduce the integral normalization operator, which theoretically stabilizes training by enriching the gradient information. We now use ablation studies to examine the effectiveness of integral normalization in practice. As shown in Table 3, the introduction of this operator improves motion deblurring quality by $42.4\\%$ , 4.563 dB, and $31.4\\%$ in MSE, PSNR, and SSIM respectively. For steering prediction, integral normalization improves the accuracy by $17.5\\%$ in MSE and $3.2\\%$ in EVA. The ${\\bf p}$ -values from one-tailed t-tests are 0.007 and 0.014 for MSE and EVA, giving us reasonable confidence that integral normalization has enhanced accuracy. For human pose estimation, integral normalization improves the 2D MPJPE by approximately 0.2 pixels and the 3D MPJPE by $1.8\\;\\mathrm{mm}$ . The improvement suggests that integral normalization can effectively regularize the training in scenarios such as deblurring where the normalization target has a clear semantic meaning. We refer readers to the appendix for the impact of line segment number $n$ and smoothing on performance. ", "page_idx": 8}, {"type": "text", "text": "4.5 Conventional frame-based vision ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To demonstrate the generalizability of PPLNs, we remove the event input from the steering angle prediction model. Table 2 (Right) shows that PSNNs can still outperform the baselines in the conventional frame-based only setting. Importantly, we observe a significant performance drop by taking out the event input from both baseline approaches. However, the frame-based PPLN has a surprisingly similar prediction quality to the dual-modal PPLN. This result demonstrates that by simulating the biological behaviors, our model can effectively overcome the imperfections in the input data. Note that among the three tasks discussed above, only steering prediction allows inference from conventional frames alone. Human pose estimation takes events as the single-modal input, and image-to-video deblurring requires events to address the motion ambiguity. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion and Future Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "This paper presents Parametric Piecewise Linear Networks (PPLNs), a novel temporal learning architecture inspired by biological neural principles. The key idea is to represent the membrane potential as a parametric piecewise linear function with predictable coefficients. Experiments on various event-based vision applications, including steering prediction, human pose estimation, and motion deblurring, demonstrate that PPLNs outperform state-of-the-art models. In the future, we plan to use a recurrent prediction model to support a dynamic number of line segments. Another direction is to adopt more accurate modeling for the membrane potential function, including mechanisms such as the refractory period after each spike. ", "page_idx": 8}, {"type": "text", "text": "6 Acknowledgement ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We acknowledge the support from NSF Career IIS-2047677 and NSF HDR TRIPODS1934932. ", "page_idx": 8}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Abbott, L. F. Lapicque\u2019s introduction of the integrate-and-fire model neuron (1907). Brain research bulletin, 50(5-6):303\u2013304, 1999.   \nBabacan, S. D., Molina, R., Do, M. N., and Katsaggelos, A. K. Bayesian blind deconvolution with general sparse image priors. In European conference on computer vision, pp. 341\u2013355. Springer, 2012.   \nBengio, Y., Simard, P., and Frasconi, P. Learning long-term dependencies with gradient descent is difficult. IEEE transactions on neural networks, 5(2):157\u2013166, 1994.   \nBinas, J., Neil, D., Liu, S.-C., and Delbruck, T. Ddd17: End-to-end davis driving dataset. arXiv preprint arXiv:1711.01458, 2017.   \nBottou, L. et al. Stochastic gradient learning in neural networks. Proceedings of Neuro-N\u0131mes, 91(8): 12, 1991.   \nCalabrese, E., Taverni, G., Awai Easthope, C., Skriabine, S., Corradi, F., Longinotti, L., Eng, K., and Delbruck, T. Dhp19: Dynamic vision sensor 3d human pose dataset. In The IEEE Conference on Computer Vision and Pattern Recognition (CVPR) Workshops, June 2019.   \nDavies, M., Srinivasa, N., Lin, T.-H., Chinya, G., Cao, Y., Choday, S. H., Dimou, G., Joshi, P., Imam, N., Jain, S., et al. Loihi: A neuromorphic manycore processor with on-chip learning. Ieee Micro, 38(1):82\u201399, 2018.   \nEshraghian, J. K., Ward, M., Neftci, E., Wang, X., Lenz, G., Dwivedi, G., Bennamoun, M., Jeong, D. S., and Lu, W. D. Training spiking neural networks using lessons from deep learning. arXiv preprint arXiv:2109.12894, 2021.   \nFergus, R., Singh, B., Hertzmann, A., Roweis, S. T., and Freeman, W. T. Removing camera shake from a single photograph. In ACM SIGGRAPH 2006 Papers, pp. 787\u2013794, 2006.   \nFish, D., Brinicombe, A., Pike, E., and Walker, J. Blind deconvolution by means of the richardson\u2013 lucy algorithm. JOSA A, 12(1):58\u201365, 1995.   \nGallego, G., Delbruck, T., Orchard, G. M., Bartolozzi, C., Taba, B., Censi, A., Leutenegger, S., Davison, A., Conradt, J., Daniilidis, K., and Scaramuzza, D. Event-based vision: A survey. IEEE Transactions on Pattern Analysis and Machine Intelligence, pp. 1\u20131, 2020. doi: 10.1109/TPAMI. 2020.3008413.   \nHu, Y., Binas, J., Neil, D., Liu, S.-C., and Delbruck, T. Ddd20 end-to-end event camera driving dataset: Fusing frames and events with deep learning for improved steering prediction. In 2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC), pp. 1\u20136. IEEE, 2020.   \nJoshi, N., Zitnick, C. L., Szeliski, R., and Kriegman, D. J. Image deblurring and denoising using color priors. In 2009 IEEE Conference on Computer Vision and Pattern Recognition, pp. 1550\u20131557. IEEE, 2009.   \nKim, S. K., Park, S. R., and Paik, J. K. Simultaneous out-of-focus blur estimation and restoration for digital auto-focusing system. IEEE Transactions on Consumer Electronics, 44(3):1071\u20131075, 1998. doi: 10.1109/30.713236.   \nKingma, D. P. and Ba, J. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \nKrishnan, D. and Fergus, R. Fast image deconvolution using hyper-laplacian priors. Advances in neural information processing systems, 22:1033\u20131041, 2009.   \nKupyn, O., Budzan, V., Mykhailych, M., Mishkin, D., and Matas, J. Deblurgan: Blind motion deblurring using conditional adversarial networks. In Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 8183\u20138192, 2018.   \nKupyn, O., Martyniuk, T., Wu, J., and Wang, Z. Deblurgan-v2: Deblurring (orders-of-magnitude) faster and better. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pp. 8878\u20138887, 2019.   \nLacinov\u00e1, L. Voltage-dependent calcium channels. General physiology and biophysics, 24:1\u201378, 2005.   \nLacoste, A., Luccioni, A., Schmidt, V., and Dandres, T. Quantifying the carbon emissions of machine learning. arXiv preprint arXiv:1910.09700, 2019.   \nLapicque, L. Recherches quantitatives sur l\u2019excitation electrique des nerfs traitee comme une polarization. Journal de physiologie et de pathologie g\u00e9n\u00e9rale, 9:620\u2013635, 1907.   \nLevin, A., Fergus, R., Durand, F., and Freeman, W. T. Image and depth from a conventional camera with a coded aperture. ACM transactions on graphics (TOG), 26(3):70\u2013es, 2007.   \nLichtsteiner, P., Posch, C., and Delbruck, T. A $128\\times$ 128 120 db $15~\\mu\\mathrm{s}$ latency asynchronous temporal contrast vision sensor. IEEE Journal of Solid-State Circuits, 43(2):566\u2013576, 2008. doi: 10.1109/JSSC.2007.914337.   \nLiu, Z., Wang, Y., Vaidya, S., Ruehle, F., Halverson, J., Solja\u02c7ci\u00b4c, M., Hou, T. Y., and Tegmark, M. Kan: Kolmogorov-arnold networks, 2024.   \nLong, J., Shelhamer, E., and Darrell, T. Fully convolutional networks for semantic segmentation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 3431\u20133440, 2015.   \nMaass, W. Networks of spiking neurons: The third generation of neural network models. Neural Networks, 10(9):1659\u20131671, 1997. ISSN 0893-6080. doi: https://doi.org/10.1016/ S0893-6080(97)00011-7. URL https://www.sciencedirect.com/science/article/pii/ S0893608097000117.   \nMaeda, S., Nakagawa, S., Suga, M., Yamashita, E., Oshima, A., Fujiyoshi, Y., and Tsukihara, T. Structure of the connexin 26 gap junction channel at $3.5\\;\\mathring{\\mathbf{a}}$ resolution. Nature, 458(7238):597\u2013602, 2009.   \nNair, V. and Hinton, G. E. Rectified linear units improve restricted boltzmann machines. In Proceedings of the 27th international conference on machine learning (ICML-10), pp. 807\u2013814, 2010.   \nPan, L., Scheerlinck, C., Yu, X., Hartley, R., Liu, M., and Dai, Y. Bringing a blurry frame alive at high frame-rate with an event camera. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 6820\u20136829, 2019.   \nPan, L., Hartley, R., Scheerlinck, C., Liu, M., Yu, X., and Dai, Y. High frame rate video reconstruction based on an event camera. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2020.   \nPascanu, R., Mikolov, T., and Bengio, Y. On the difficulty of training recurrent neural networks. In International conference on machine learning, pp. 1310\u20131318. PMLR, 2013.   \nPerrone, D. and Favaro, P. Total variation blind deconvolution: The devil is in the details. In 2014 IEEE Conference on Computer Vision and Pattern Recognition, pp. 2909\u20132916, 2014. doi: 10.1109/CVPR.2014.372.   \nRichardson, W. H. Bayesian-based iterative method of image restoration. JoSA, 62(1):55\u201359, 1972.   \nRonneberger, O., Fischer, P., and Brox, T. U-net: Convolutional networks for biomedical image segmentation. In International Conference on Medical image computing and computer-assisted intervention, pp. 234\u2013241. Springer, 2015.   \nShan, Q., Jia, J., and Agarwala, A. High-quality motion deblurring from a single image. Acm transactions on graphics (tog), 27(3):1\u201310, 2008.   \nSong, C., Huang, Q., and Bajaj, C. E-cir: Event-enhanced continuous intensity recovery. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 7803\u20137812, 2022.   \nSong, C., Bajaj, C., and Huang, Q. Deblursr: Event-based motion deblurring under the spiking representation. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pp. 4900\u20134908, 2024.   \nStoffregen, T., Scheerlinck, C., Scaramuzza, D., Drummond, T., Barnes, N., Kleeman, L., and Mahony, R. Reducing the sim-to-real gap for event cameras. In European Conference on Computer Vision, pp. 534\u2013549. Springer, 2020.   \nWang, B., He, J., Yu, L., Xia, G.-S., and Yang, W. Event enhanced high-quality image recovery. In European Conference on Computer Vision. Springer, 2020.   \nXu, L. and Jia, J. Two-phase kernel estimation for robust motion deblurring. In European conference on computer vision, pp. 157\u2013170. Springer, 2010.   \nXu, L., Zheng, S., and Jia, J. Unnatural l0 sparse representation for natural image deblurring. In Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 1107\u20131114, 2013.   \nZheng, X., Liu, Y., Lu, Y., Hua, T., Pan, T., Zhang, W., Tao, D., and Wang, L. Deep learning for event-based vision: A comprehensive survey and benchmarks, 2023.   \nZhou, Y., Zhu, Z., and Zhong, Z. Learning specialized activation functions with the piecewise linear unit. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pp. 12095\u201312104, 2021.   \nZhu, A. Z., Yuan, L., Chaney, K., and Daniilidis, K. Unsupervised event-based learning of optical flow, depth, and egomotion. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), June 2019. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Appendix / supplemental material ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Detailed results for task III ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "We report the 3D MPJPE in millimeters for all 33 different types of body movements evaluated on 5 testing subjects. As shown in Table 4 and Table 5, simply increasing the input horizon leads to an overall performance degradation. One possible explanation is that the network becomes confused about the temporal relationship among the input events. The modified baseline is not a time series model and can only infer the temporal relation from the input stacking order (the first temporal event slice is in the first channel, the second temporal event slice is in the second channel, etc.). On the other hand, PPLN keeps track of the timestamp of interest in every model layer. This allows PPLN to outperform the baseline in almost all cases by a significant margin. We point out that in Table 4 and Table 5, the asterisk for testing subject 2 in movement 29 indicates missing data in the DHP19 dataset (Calabrese et al., 2019). ", "page_idx": 12}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/5d2e9173927fed54991671fa033b81956dc33fea65dbf23eed016b10cbdde823.jpg", "table_caption": ["Table 4: Baseline 3D MPJPE (mm) for all 33 movements (Mov) across 5 testing subjects (S1-S5). "], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "A.2 Additional motion deblurring visualizations ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Figure 4 presents seven additional examples for the motion deblurring results. We also encourage readers to watch the supplementary animations in the .gif format, which demonstrate the temporal smoothness of our results. Overall, the visual quality of PPLN reconstructions is on par with the state-of-the-art method (DeblurSR (Song et al., 2024)). Quantitatively, PPLN outperforms DeblurSR by a small margin (see paper body). We point out that while all baseline approaches are specifically designed for motion deblurring, the proposed PPLN is a general framework that can be applied in various event-based vision tasks. ", "page_idx": 12}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/f452dd487adfb6dfe4b3d024897f8b10e997efc5ca8a477229384e89e03b50a6.jpg", "table_caption": ["Table 5: PSNN\u2019s 3D MPJPE (mm) for all 33 movements (Mov) across 5 testing subjects (S1-S5). "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A.3 The neuromorphic mechanism ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Some properties of the proposed model are slightly different from the standard practice in existing research in computer vision and machine learning (i.e., Spiking Neural Networks, SNNs (Maass, 1997)), even though both of them are inspired by biological neural principles (Lapicque, 1907). ", "page_idx": 13}, {"type": "text", "text": "First, existing SNNs focus on the interconnection between artificial neurons, with different layers communicating through binary signals. On the other hand, PPLN focuses on representing the membrane potentials, defined as the voltage differences between the interior and the exterior of the cell. The membrane potentials change with time according to the piecewise linear representation, whose parameters are predicted from the input. ", "page_idx": 13}, {"type": "text", "text": "Second, the signal transmitted between SNN layers carries a one if the neuron is excited and a zero if the neuron is not excited. In contrast, our work models the membrane potential using a real value. When a spike occurs, the neuron becomes excited, and the real-valued membrane potential function experiences a discontinuous gap. ", "page_idx": 13}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/ade3c945f0e3c4fef14cea6d5acbbb39d3c9650a02743a5606182f25003aa472.jpg", "img_caption": ["Figure 4: Motion deblurring visualizations on the HQF dataset. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Third, existing SNNs utilize the linear decay mechanism. In other words, the membrane potential function only decreases in the absence of excitement. This contrasts our parametric mechanism where the slope of each line segment can be either positive or negative. We point out that in biological neurons, the resting potential is not the \u201cabsolute\u201d zero. When a biological neuron is at rest, there is naturally a voltage difference between the interior and the exterior of the cell. If the membrane potential exceeds the resting potential, the neuron will decrease the potential at an approximately linear rate. Similarly, if the membrane potential drops below the resting potential, the neuron will gradually increase the potential. The linear potential increment corresponds to a positive slope in the proposed mechanism. ", "page_idx": 14}, {"type": "text", "text": "Fourth, we do not explicitly enforce any line segment to be flat. Instead, we expect the network to implicitly learn when a line segment should have a zero slope from the training dataset. This allows more flexibility in the design. ", "page_idx": 14}, {"type": "text", "text": "A.4 Coefficient visualization ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In figure 5, we plot a few randomly sampled piecewise linear functions predicted by the network. We observe uneven segment lengths and discontinuities (shown in orange) at boundaries. The piece-wise linear function has varying slopes, suggesting the model does not collapse to somewhere far away from the design. We also observe that with $n\\,=\\,3$ , the network has the capability to represent functions with less than 3 linear segments. ", "page_idx": 14}, {"type": "text", "text": "A.5 Baseline implementation ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Despite our best efforts, we fail to exactly reproduce the baseline performance reported by Hu et al. for steering angle prediction and Calabrese et al. for human pose estimation. According to Hu et al., the baseline model has an RMSE of $4.13\\pm0.24$ and an EVA of $0.881\\pm0.009$ . Our baseline implementation gives an RMSE of $4.55\\pm0.24$ and an EVA of $0.845\\pm0.016$ . According to Calabrese et al., the baseline 3D MPJPE is $79.63\\ \\mathrm{mm}$ . Our implementation gives $82.17\\;\\mathrm{mm}$ . Similar confusions have been reported by various teams. We refer readers to the issue pages on their GitHub repositories for detailed discussions. ", "page_idx": 14}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/b72cf6ae7588f0abcc73f7b6a1b298f298122cfbe451f861fe4e3ed63bc87905.jpg", "img_caption": ["Figure 5: Randomly sampled piecewise linear predictions. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "Compared to the relative improvement brought by PPLNs, the differences above are insignificant. We believe the inconsistency in steering angle prediction is the result of ambiguities in the data pruning procedure discussed in Section III-A of the original paper by Hu et al.. We provide step-by-step instructions for the data pruning procedure used when generating our reported figures in the code release. We believe training randomness and differences in optimizer hypermeters cause inconsistency in human pose estimation. Our code release includes the random seed, optimizer hypermeters, and the pre-trained weights for both the baseline model and the PPLN. ", "page_idx": 15}, {"type": "text", "text": "A.6 Data ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In steering angle prediction, we use the DDD20 dataset (Hu et al., 2020) released under GNU Lesser General Public License v3.0. In human pose estimation, we use the DHP19 dataset (Calabrese et al., 2019). The DHP19 dataset is released under the Creative Commons Attribution-ShareAlike 4.0 International License, and the dataset utility scripts are released under MIT License. In motion deblurring, we use the HQF dataset (Stoffregen et al., 2020). At the time of paper writing, the HQF dataset is available for public download, but the licensing details are unclear. To the best of our knowledge, the datasets do not contain personally identifiable information or offensive content. ", "page_idx": 15}, {"type": "text", "text": "A.7 Computation resources ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We train the model for steering angle prediction using one NVIDIA TITAN V GPU. We train the model for human pose estimation using one NVIDIA Tesla V100 SXM2 GPU. We train the model for motion deblurring using one NVIDIA Tesla V100 SXM2 GPU. ", "page_idx": 15}, {"type": "text", "text": "A.8 Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this paper, we define the number of line segments in the piecewise linear approximation to the membrane potential function as a hyperparameter $n$ . The choice of this hyperparameter affects the representation capacity of the PPLN node, as well as the run-time complexity and convergence rate. At the moment, we are unable to provide a theoretical guideline that allows developers to choose its value based on the input properties and output requirements. Hyperparameter tuning is needed to balance the prediction quality and computational cost. ", "page_idx": 15}, {"type": "text", "text": "A.9 Proof of Theorem 3.1 ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Theorem 3.1 Consider an underlying $n$ segment piecewise linear function parameterized by $\\Theta^{\\star}=$ $\\{\\mathbf{m}^{\\star},\\mathbf{b}^{\\star},\\mathbf{t}^{\\star}\\}$ . Let $(\\tau_{j},v_{j})$ , $j=1,\\dots,m$ be $m$ point samples, where $v_{j}=\\mathring{\\tilde{V}}_{\\Theta^{\\star}}(\\tau_{j})+\\psi_{j}$ , and $\\psi_{j}$ is a small random noise. ", "page_idx": 16}, {"type": "text", "text": "Recall that the ground-truth membrane potential was defined by: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\tilde{V}_{\\Theta^{\\star}}(t):=\\left\\{\\begin{array}{l l}{m_{1}^{\\star}t+b_{1}^{\\star}}&{t_{0}^{\\star}\\leq t<t_{1}^{\\star}}\\\\ {m_{2}^{\\star}t+b_{2}^{\\star}}&{t_{1}^{\\star}\\leq t<t_{2}^{\\star}}\\\\ {\\ldots}\\\\ {m_{n}^{\\star}t+b_{n}^{\\star}}&{t_{n-1}^{\\star}\\leq t\\leq t_{n}^{\\star}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Without losing generality, we assume the following constraints: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{t_{0}^{\\star}=\\displaystyle\\operatorname*{min}_{1\\le j\\le m}\\tau_{j}=0}}\\\\ {{t_{n}^{\\star}=\\displaystyle\\operatorname*{max}_{1\\le j\\le m}\\tau_{j}=1.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "The following sampling assumption will be put in order to prevent uncontrollable error due to noise. ", "page_idx": 16}, {"type": "text", "text": "Uniform Sampling Assumption: We assume there exists some constant $c>0$ such that the $n_{i}$ samples $(\\tau_{i1},v_{i1}),\\cdot\\cdot\\cdot\\ ,(\\tau_{i n_{i}},v_{i n_{i}})$ on the $i^{\\mathrm{th}}$ segment satisfy ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\frac{\\sum_{p<q}|\\tau_{i p}-\\tau_{i q}|}{\\sum_{p<q}(\\tau_{i p}-\\tau_{i q})^{2}}\\leq c/\\operatorname*{max}_{p,q}|\\tau_{i p}-\\tau_{i q}|.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Then under the objective: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathcal{L}^{T}(\\Theta)=\\sum_{j=1}^{m}\\left(\\tilde{V}_{\\Theta}^{T}(\\tau_{j})-v_{j}\\right)^{2}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and by applying vanilla gradient descent, $\\Theta^{\\star}$ can be recovered up to an error: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{0\\leq t\\leq1}\\big|\\tilde{V}_{\\Theta_{\\infty}}^{T}(t)-\\tilde{V}_{\\Theta^{\\star}}(t)\\big|\\leq O\\Big(\\operatorname*{max}_{j}|\\psi_{j}|\\Big)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "if the learning rate $\\begin{array}{r}{\\eta=O\\big(\\frac{h}{n}\\big)}\\end{array}$ , where parameter $h>0$ measures the distance from the initialization to the ground truth: ", "page_idx": 16}, {"type": "equation", "text": "$$\n|t_{i}(\\Theta_{0})-t_{i}^{\\star}|\\leq h\\leq|t_{i}^{\\star}-t_{i-1}^{\\star}|\\quad\\forall i=1,\\ldots,n\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Comment: The uniform sampling assumption is necessary. Imagine a scenario where a disproportionately large number of samples are clustered around $\\dot{(\\tau,v)}=\\dot{(0,0)}$ , with only a single sample at $(\\tau,v)=(1,0)$ . In such an extreme case, the linear regression model might yield a significantly steep slope due to noise, leading to substantial errors when predicting for $\\tau=1$ . This example highlights the potential pitfalls of non-uniform sampling in affecting the reliability of regression outcomes. In addition, it can be shown that a set of uniformly random samples would provide constant $c$ with high probability. ", "page_idx": 16}, {"type": "text", "text": "Proof. Let $\\Theta_{r}$ be the coefficients in the $r^{\\mathrm{th}}$ iteration of the optimization. We first consider the case where all samples $(\\tau_{j},v_{j})$ \u2019s are classified into the correct intervals (i.e., $t_{i-1}(\\Theta_{r})\\,\\leq\\,\\tau_{j}\\,<\\,t_{i}(\\Theta_{r})$ implies $t_{i-1}^{\\star}\\leq\\tau_{j}\\leq\\dot{t}_{i}^{\\star}$ ). With a sufficiently large temperature $T$ , the effect of smoothing becomes minimal, and the estimated potential is: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\tilde{V}_{\\Theta}^{T}(t)=(m_{i}t+b_{i})\\big(1+o(\\exp(-T))\\big)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "for all $t_{i-1}\\leq t<t_{i}$ . ", "page_idx": 16}, {"type": "text", "text": "On the other hand, if $t_{i-1}^{\\star}\\le\\tau_{j}<t_{i}^{\\star}$ , the noisy sample is: ", "page_idx": 16}, {"type": "equation", "text": "$$\nv_{j}=m_{i}^{\\star}\\tau_{j}+b_{i}^{\\star}+\\psi_{j}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "This gives the objective as: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle{\\cal Z}^{T}({\\Theta})=\\sum_{j=1}^{m}\\left(\\tilde{V}_{6}^{T}(\\tau_{j})-v_{j}\\right)^{2}}\\ ~}\\\\ {{\\displaystyle=\\sum_{i=1}^{n}\\sum_{t_{i-1}\\leq\\tau_{j}<t_{i}^{t}}\\left((m_{i}\\tau_{j}+b_{i})\\big(1+o(\\exp(-T))\\big)\\right.}}\\\\ {{\\displaystyle~~~~-\\left(m_{i}^{*}\\tau_{j}+b_{i}^{*}+\\psi_{j}\\right)\\right)^{2}}\\ ~}\\\\ {{\\displaystyle=\\sum_{i=1}^{n}\\sum_{t_{i-1}^{t}\\leq\\tau_{j}<t_{i}^{t}}\\left((m_{i}-m_{i}^{*})\\tau_{j}+(b_{i}-b_{i}^{*})\\right.}}\\\\ {{\\displaystyle~~~~\\left.-\\psi_{j}+o(\\exp(-T))\\right)^{2}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "To analyze Equation (19), we present a proposition to simplify notations. ", "page_idx": 17}, {"type": "text", "text": "Proposition A.1. The solution for real-valued variables $a,b$ in the optimization problem: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{a,b}\\sum_{i=1}^{k}(a u_{i}+b+c_{i})^{2}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "in which $u_{i}$ \u2019s and $c_{i}\\,^{\\prime}s$ are known constants with the constraint that $u_{i}$ \u2019s are not all the same, satisfies that: ", "page_idx": 17}, {"type": "text", "text": "where ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{c}{a\\leq\\zeta({\\boldsymbol u})\\operatorname*{max}_{i}|c_{i}|,\\quad b=-\\displaystyle\\frac{1}{k}\\sum_{i=1}^{k}c_{i}-\\frac{a}{k}\\cdot\\sum_{i=1}^{k}u_{i}}\\\\ {\\sum_{i<j}|u_{i}-u_{j}|/\\sum_{i<j}(u_{i}-u_{j})^{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof of Proposition A.1. Let $\\begin{array}{r}{L(a,b)=\\sum_{i}(a u_{i}+b+c_{i})^{2}}\\end{array}$ and enforce $\\begin{array}{r}{\\frac{\\partial L}{\\partial a}=\\frac{\\partial L}{\\partial b}=0}\\end{array}$ , we have: ", "page_idx": 17}, {"type": "equation", "text": "$$\na\\sum_{i}u_{i}^{2}+b\\sum_{i}u_{i}+\\sum_{i}c_{i}u_{i}=0\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "and ", "page_idx": 17}, {"type": "equation", "text": "$$\na\\sum_{i}u_{i}+b k+\\sum_{i}c_{i}=0.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "This gives: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{a=\\biggl(\\displaystyle\\sum_{i}u_{i}^{2}-k^{-1}\\big(\\sum_{i}u_{i}\\big)^{2}\\biggr)^{-1},}\\\\ &{\\qquad\\Big(k^{-1}\\displaystyle\\sum_{i}u_{i}\\sum_{i}c_{i}-\\sum_{i}c_{i}u_{i}\\Big)}\\\\ &{\\qquad=\\biggl(\\displaystyle\\sum_{i<j}(u_{i}-u_{j})^{2}\\biggr)^{-1}\\biggl(-\\sum_{i<j}(u_{i}-u_{j})(c_{i}-c_{j})\\biggr)}\\\\ &{\\qquad\\le\\displaystyle\\frac{\\sum_{i<j}|u_{i}-u_{j}|\\big(|c_{i}|+|c_{j}|\\big)}{\\sum_{i<j}(u_{i}-u_{j})^{2}}}\\\\ &{\\qquad\\le\\displaystyle\\sum_{i<j}\\frac{\\sum_{i<j}|u_{i}-u_{j}|}{(u_{i}-u_{j})^{2}}\\cdot2\\operatorname*{max}_{i}|c_{i}|}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Therefore, $a\\,\\leq\\,\\zeta({\\pmb u})\\,\\mathrm{max}_{i}\\,|c_{i}|$ and the remaining part regarding $b$ can be obtained directly from Eq. 22. ", "page_idx": 17}, {"type": "text", "text": "The following corollary applies Proposition A.1 to the learning of the piecewise linear coefficients. ", "page_idx": 17}, {"type": "image", "img_path": "S8wFXyT4dY/tmp/351ae0ec234a1653986d17efb99ee579eeeecabd24b0b723c98654a2f0356f09.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "Figure 6: (Left) Initial model. (Middle) Without integral normalization, the model cannot fit piecewise linear signals with unequal segment lengths. (Right) After integral normalization, the model successfully fits the piecewise linear signal with unequal segment lengths. ", "page_idx": 18}, {"type": "text", "text": "Corollary A.2. The solution $\\Theta_{\\infty}$ of the optimization problem: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\underset{\\Theta}{\\mathrm{minimize}}\\;\\mathcal{L}^{T}(\\Theta)=\\sum_{j=1}^{m}\\left(\\tilde{V}_{\\Theta}^{T}(\\tau_{j})-v_{j}\\right)^{2}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "satisfies: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{j}\\left|\\tilde{V}_{\\tilde{\\Theta}_{\\infty}}(\\tau_{j})-\\tilde{V}_{\\Theta^{\\star}}(\\tau_{j})\\right|\\leq O\\big(\\operatorname*{max}_{1\\leq j\\leq m}|\\psi_{j}|\\big)\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Proof of Corollary A.2. Comparing Equation (19) and Equation (20), by setting $u_{i}~=~\\tau_{j}$ and $c_{j}=-\\psi_{j}+o(\\exp(-T))$ we have: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r}{m_{i}=m_{i}^{\\star}+O\\big(\\operatorname*{max}_{j}(|\\psi_{j}|)+o(\\exp(-T))\\big)}\\\\ {b_{i}=b_{i}^{\\star}+O\\big(\\operatorname*{max}_{j}(|\\psi_{j}|)+o(\\exp(-T))\\big)}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "given that the sampling points $\\tau_{j}$ \u2019s are fixed (i.e., $\\zeta(u)$ is a constant). When $T\\rightarrow\\infty$ , we obtain $m_{i}=m_{i}^{\\star}+O\\big(\\operatorname*{max}_{j}(|\\psi_{j}|)\\big)$ and $b_{i}=b_{i}^{\\star}+O\\big(\\operatorname*{max}_{j}(|\\psi_{j}|)\\big)$ , which implies: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left|\\tilde{V}_{\\Theta_{\\infty}}(\\tau)-\\tilde{V}_{\\Theta^{\\star}(\\tau)}\\right|=\\left|\\left(m_{i}(\\Theta_{\\infty})-m_{i}^{\\star}\\right)\\tau+\\left(b_{i}(\\Theta_{\\infty})-b_{i}^{\\star}\\right)\\right|}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\leq O\\biggl(\\underset{j}{\\operatorname*{max}}(|\\psi_{j}|)\\biggr)}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "since $0\\leq\\tau\\leq1$ . ", "page_idx": 18}, {"type": "text", "text": "The rest of the proof shows that under our assumptions, the sample points will eventually be classified into correct intervals. ", "page_idx": 18}, {"type": "text", "text": "In the following, we use $\\{m_{i}(T)\\},\\{b_{i}(T)\\}$ , and $\\{t_{i}(T)\\}$ to denote the optimal solution for the objective $\\mathcal{L}^{T}(\\Theta)$ . Due to noisy samples and smoothing process, the optimal solution is different from $\\Theta^{\\star}$ . ", "page_idx": 18}, {"type": "text", "text": "Consider $(\\tau_{j},v_{j})$ with $t_{i-1}^{*}\\leq\\tau_{j}<t_{i}^{*}$ . Since $|t_{i}(\\Theta_{0})-t_{i}^{\\star}|\\leq h\\leq|t_{i}^{\\star}-t_{i-1}^{\\star}|$ , $\\tau_{j}$ must fall into one of the intervals $[t_{i-2}(\\Theta_{0}),t_{i-1}(\\Theta_{0})]$ , $[t_{i-1}(\\Theta_{0}),t_{i}(\\Theta_{0})]$ , and $[t_{i}(\\Theta_{0}),t_{i+1}(\\Theta_{0})]$ . ", "page_idx": 18}, {"type": "text", "text": "In the following, we discuss the stationary point at a specific temperature $T$ . In practice, we can stay at the temperature $T$ until the gradient vanishes and then we move on to a higher temperature. ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{\\partial w_{l}^{(i)}}{\\partial t_{i-1}}=T\\cdot w_{l}^{(i)}^{2}\\cdot\\exp\\big(T(\\tau-t_{i-1})\\big)}\\\\ {\\frac{\\partial w_{r}^{(i)}}{\\partial t_{i}}=-T\\cdot w_{r}^{(i)^{2}}\\cdot\\exp\\big(T(t_{i}-\\tau)\\big),}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Setting $\\begin{array}{r}{\\frac{\\partial\\mathcal{L}^{T}}{\\partial t_{i}}=0}\\end{array}$ we have: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{0=}&{T\\cdot\\displaystyle\\sum_{t_{i}\\leq\\tau_{j}<t_{i+1}}\\left(\\Delta_{j}{w_{l}^{(i+1)}}^{2}\\cdot\\exp(T(\\tau_{j}-t_{i}))\\right)}\\\\ &{\\cdot\\left(\\left(m_{i}\\tau_{j}+b_{i}\\right)-\\left(m_{i+1}\\tau_{j}+b_{i+1}\\right)\\right)}\\\\ &{-\\displaystyle T\\cdot\\sum_{t_{i-1}\\leq\\tau_{j}<t_{i}}\\left(\\Delta_{j}{w_{r}^{(i)}}^{2}\\cdot\\exp(T(t_{i}-\\tau_{j}))\\right)}\\\\ &{\\cdot\\left(\\left(m_{i+1}\\tau_{j}+b_{i+1}\\right)-\\left(m_{i}\\tau_{j}+b_{i}\\right)\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $\\Delta_{j}$ is defined by: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\Delta_{j}:=\\tilde{V}_{\\Theta}^{T}(\\tau_{j})-v_{j}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Thus, we have: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{t_{i}\\leq\\tau_{j}<t_{i+1}}\\left(\\Delta_{j}{w_{l}^{(i+1)}}^{2}\\cdot\\exp(T(\\tau_{j}-t_{i}))\\right)}\\\\ &{\\quad\\cdot\\left(\\left(m_{i}\\tau_{j}+b_{i}\\right)-\\left(m_{i+1}\\tau_{j}+b_{i+1}\\right)\\right)}\\\\ &{=\\displaystyle\\sum_{t_{i-1}\\leq\\tau_{j}<t_{i}}\\left(\\Delta_{j}{w_{r}^{(i)}}^{2}\\cdot\\exp(T(t_{i}-\\tau_{j}))\\right)}\\\\ &{\\quad\\cdot\\left(\\left(m_{i+1}\\tau_{j}+b_{i+1}\\right)-\\left(m_{i}\\tau_{j}+b_{i}\\right)\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "or equivalently, ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\exp(-T t_{i})\\sum_{t_{i}\\leq\\tau_{j}<t_{i+1}}\\left(\\Delta_{j}w_{l}^{(i+1)^{2}}\\cdot\\exp(T\\tau_{j})\\right)}\\\\ &{\\quad\\cdot\\left((m_{i}\\tau_{j}+b_{i})-(m_{i+1}\\tau_{j}+b_{i+1})\\right)}\\\\ &{\\displaystyle=\\exp(T t_{i})\\sum_{t_{i}-1\\leq\\tau_{j}<t_{i}}\\left(\\Delta_{j}w_{r}^{(i)^{2}}\\cdot\\exp(-T\\tau_{j})\\right)}\\\\ &{\\quad\\cdot\\left((m_{i+1}\\tau_{j}+b_{i+1})-(m_{i}\\tau_{j}+b_{i})\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Consider the case where $t_{i}$ is not currently at the correct location. Without loss of generality, we assume $t_{i}$ is too far to the right. This implies that there exists $\\tau_{j}$ satisfying $t_{i-1}\\,\\leq\\,t_{i}^{\\star}\\,\\leq\\,\\tau_{j}\\,<\\,t_{i}$ . Suppose: ", "page_idx": 19}, {"type": "text", "text": "and ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{t_{i-1}\\leq\\tau_{j_{0}}<\\tau_{j_{0}+1}<\\cdot\\cdot<\\tau_{j-1}<t_{i}^{\\star}}\\\\ &{}\\\\ &{t_{i}^{\\star}\\leq\\tau_{j}<t_{i}\\leq\\tau_{j+1}<\\cdot\\cdot<\\tau_{j_{1}}<t_{i+1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Since $\\tau_{j+1},\\dotsc,\\tau_{j_{1}}$ all fall inside the correct interval, we can fully recover the corresponding segment and have $\\Delta_{q}=O(e^{-T})$ for $q=j+1,\\dotsc,j_{1}$ . The left-hand side of Equation (27) is, therefore, $O(\\exp(-T))$ , which enforces the right-hand side of the equation to keep getting smaller. Since $(\\tau_{j},v_{j})$ is not consistent with $\\tau_{j_{0}},\\dotsc\\tau_{j-1}$ and $\\Delta$ \u2019s are the errors of linear regression, we claim that $\\Delta_{r},r=j_{0},\\dotsc,j-1$ would never be close to zero. To make Equation (27) hold true, $t_{i}$ has to be decreased. This process will last until $t_{i}<\\tau_{j}$ (i.e., the sample point $(\\tau_{j},v_{j})$ is excluded from the wrong interval $[t_{i-1},t_{i}])$ . ", "page_idx": 19}, {"type": "text", "text": "In this way, we prove that eventually all sample points will be classified into correct intervals, thereby reducing to the base case that has been proved earlier. ", "page_idx": 19}, {"type": "text", "text": "Table 6: Steering prediction accuracy when PPLNs have different numbers of line segments. ", "page_idx": 20}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/9aa0dc8cfd6a5afc23c3e27188556846657ba984fc3f7c64d964328471ea3082.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "S8wFXyT4dY/tmp/48b524659cc3e15f0a31a1391c5dd30923d7f690f943662ac912869b48627efc.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "A.10 Justifying integral normalization ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Recall that when we construct a PPLN node without integral normalization or smoothing, the output $\\tilde{V}_{\\Theta}(t)$ is given as: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\tilde{V}_{\\Theta}(t)=\\left\\{\\begin{array}{l l}{m_{1}t+b_{1}}&{t_{0}\\leq t<t_{1}}\\\\ {m_{2}t+b_{2}}&{t_{1}\\leq t<t_{2}}\\\\ {\\dots}\\\\ {m_{n}t+b_{n}}&{t_{n-1}\\leq t\\leq t_{n}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "With $\\mathbf{m}=(m_{1},\\ldots,m_{n})^{T}$ , b = (b1, . . . , bn)T , and $\\mathbf{t}=(t_{0},\\ldots,t_{n})^{T}$ , we have: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf m}}=(0,\\cdots,0,t_{k},0,\\cdots,0)}}\\\\ {{\\displaystyle\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf b}}=(0,\\cdots,0,1,0,\\cdots,0)}}\\\\ {{\\displaystyle\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf t}}={\\bf0}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "at the input timestamp $t_{0}\\leq t_{k}\\leq t_{n}$ . ", "page_idx": 20}, {"type": "text", "text": "We make two observations here. First, both $\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial\\mathbf{m}}$ and $\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf b}}$ are very sparse vectors with only one non-zero entry corresponding to the specific segment $t_{k}$ belongs to. At training time, it is natural to assume the training timestamps are uniformly distributed across $[t_{0},t_{n}]$ . This means the amount of training data is proportional to the segment length. Long segments receive intensive training because there are a lot of available training examples. Short segments receive little training because there are only a limited number of training examples falling inside their ranges. The imbalance presents an instability risk because different segments are learning at different rates. Additionally, \u2202V\u02dc\u0398(tk)is an all-zero vector. A gradient-based optimizer is therefore unable to adjust the segment lengths. This means the segment endpoints are hard-coded positions instead of trainable parameters. ", "page_idx": 20}, {"type": "text", "text": "To illustrate the second observation, consider the toy example of a 2-segment linear signal, as shown in Figure 6. The green real signal generates a set of orange training samples with measurement noises. Assuming no prior knowledge of the real signal besides that it has two segments, we initialize a 2-segment parametric model with zero slopes, zero intercepts, and equal segment lengths (Figure 6 (Left)). After training, the node converges to the model shown in Figure 6 (Middle). The second segment deviates from the real signal significantly because it attempts to accommodate the last several training samples in the first segment. ", "page_idx": 20}, {"type": "text", "text": "As discussed in the body, we use the integral normalization operator $\\sigma(\\cdot)$ to address the above challenges: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\sigma(\\tilde{V}_{\\Theta}(t))=\\tilde{V}_{\\Theta}(t)-\\int_{0}^{1}\\tilde{V}_{\\Theta}(t)d t+\\overline{{V}}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where $\\overline{V}$ is a parameter that controls the mean of $\\tilde{V}_{\\Theta}(t)$ when $0\\le t\\le1$ . ", "page_idx": 20}, {"type": "text", "text": "This gives: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\frac{\\partial\\sigma(\\tilde{V}_{\\Theta}(t_{k}))}{\\partial{\\bf m}}=\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf m}}}\\ ~}\\\\ {{\\displaystyle~~~~~~~~~~~~~~~-\\frac{1}{2}\\left(t_{1}^{2}-t_{0}^{2},\\cdots,t_{k}^{2}-t_{k-1}^{2},\\cdots,t_{n}^{2}-t_{n-1}^{2}\\right)}}\\\\ {{\\displaystyle\\frac{\\partial\\sigma(\\tilde{V}_{\\Theta}(t_{k}))}{\\partial{\\bf b}}=\\frac{\\partial\\tilde{V}_{\\Theta}(t_{k})}{\\partial{\\bf b}}}\\ ~}\\\\ {{\\displaystyle~~~~~~~~~~~~~~~~~-(t_{1}-t_{0},\\cdots,t_{k}-t_{k-1},\\cdots,t_{n}-t_{n-1})}}\\\\ {{\\displaystyle\\frac{\\partial\\sigma(\\tilde{V}_{\\Theta}(t_{k}))}{\\partial{\\bf t}}=(\\cdots,m_{k+1}t_{k}+b_{k+1}-m_{k}t_{k}-b_{k},\\cdots)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "where all three gradient vectors contain rich gradient information in every element, encouraging a smooth and swift convergence. Figure 6 (Right) illustrates how the model accurately approximates both linear segments in the toy example after incorporating integral normalization. ", "page_idx": 21}, {"type": "text", "text": "A.11 Ablation studies: number of line segments ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "As shown in Table 6, we fail to observe noticeable performance improvement when increasing the number of line segments $n$ in the formulation. Therefore, we decide to use $n\\,=\\,3$ in all the experiments discussed in the body of this paper for better efficiency. ", "page_idx": 21}, {"type": "text", "text": "A.12 Ablation studies: smoothing ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "As shown in Table 7, the smoothing operator has an insignificant impact on the prediction quality. However, we point out several facts related to the smoothing operator as a guideline for potential future applications. First, the smoothing operator allows us to have a simple model (Theorem 1) with analytical analyzable properties. Second, the smoothing operator does not introduce any additional trainable parameters. Third, when the size of the network is relatively small (i.e., steering prediction and human pose estimation), our results suggest that using PPLNs without smoothing is slightly better. Finally, when the size of the network is large (i.e., motion deblurring), smoothing introduces a small performance improvement. ", "page_idx": 21}, {"type": "text", "text": "A.13 Impact Statement ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "This paper presents work whose goal is to advance the field of Machine Learning. There are many potential societal consequences of our work, none of which we feel must be specifically highlighted here. Regarding the environmental impact, our experiments are conducted on an internal GPU cluster, and the total emission is estimated to be $81.12\\;\\mathrm{kg}\\mathrm{CO}_{2}\\mathrm{eq}$ , equivalent to $328\\,\\mathrm{km}$ driven by an average car. This emission estimation is conducted using the Machine Learning Impact calculator presented by Lacoste et al.. To mitigate repetitive labor and negative environmental impact in future research, we have released our open-source implementation together with trained network weights after the anonymous period. ", "page_idx": 21}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: The paper\u2019s main contribution is the proposal and evaluation of the parametric piecewise linear networks. In Section 4, our experiment emphasizes event-based vision applications because event cameras and PPLNs are both designed to mimic biological neural principles. Due to the limited availability of high-quality data, event-based vision is an emerging field where modeling plays a more important role than data and the effects of PPLNs can be best demonstrated. However, we also present an evaluation on conventional frame-based tasks to demonstrate the generalizability. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 22}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Discussed in Section A.8. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 22}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Discussed in Section A.9. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 23}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have released our source code on GitHub. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 23}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We have released our source code on GitHub. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 24}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Discussed in Section 4 with full details in the source code on GitHub. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 24}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We report the mean and standard deviation of evaluation metrics for the steering prediction task. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Discussed in Section A.7. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 25}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We have carefully read the NeurIPS Code of Ethics and confirm that our research conforms with the Code. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 25}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Discussed in Section A.13. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 25}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 26}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 26}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: Discussed in Section A.6. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: We have released our source code on GitHub. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 27}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 27}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 27}]