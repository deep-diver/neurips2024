[{"figure_path": "1u3qkG7BkQ/figures/figures_1_1.jpg", "caption": "Figure 1: Overview of InteractTraj. InteractTraj uses a series of semantic interaction-aware numerical codes to depict interactive trajectories. An LLM-based language-to-code encoder converts language descriptions into numerical codes, which are then transformed into interactive trajectories by a code-to-trajectory decoder.", "description": "This figure shows the overall architecture of InteractTraj, a language-driven interactive traffic trajectory generation model.  It takes a natural language description as input. This description is processed by a Language-to-Code Encoder, which utilizes an LLM to convert the description into three types of numerical codes: Interaction Code, Vehicle Code, and Map Code.  These codes are then fed into a Code-to-Trajectory Decoder, which generates the final interactive traffic trajectories. The figure also visually represents an example scenario involving an overtaking maneuver, highlighting the interaction-aware nature of the generated trajectories.", "section": "4 Methodology"}, {"figure_path": "1u3qkG7BkQ/figures/figures_3_1.jpg", "caption": "Figure 1: Overview of InteractTraj. InteractTraj uses a series of semantic interaction-aware numerical codes to depict interactive trajectories. An LLM-based language-to-code encoder converts language descriptions into numerical codes, which are then transformed into interactive trajectories by a code-to-trajectory decoder.", "description": "This figure illustrates the overall architecture of InteractTraj, a language-driven interactive traffic trajectory generation system.  It shows how language descriptions are first processed by an LLM-based language-to-code encoder which converts the descriptions into interaction-aware numerical codes. These codes then serve as input for a code-to-trajectory decoder, which generates the final interactive trajectories. The process involves mapping abstract language descriptions to concrete numerical representations that capture the complex interactions between various traffic participants.", "section": "4 Methodology"}, {"figure_path": "1u3qkG7BkQ/figures/figures_4_1.jpg", "caption": "Figure 3: The architecture of code-to-trajectory decoder. The decoder generates vehicle trajectories by fusing and decoding information between vehicles and interactions.", "description": "The figure shows the architecture of the code-to-trajectory decoder in InteractTraj. It takes three types of numerical codes (interaction, vehicle, and map codes) as input. These codes are first transformed into features using feature extraction modules (including multi-context gating for map codes and MLPs for interaction and vehicle codes).  Then, a two-step feature aggregation strategy is used. First, cross-attention is applied between map features and both interaction and vehicle features. Second, cross-attention fuses interaction features with the resulting vehicle features. Finally, a generation head (MLP) generates the trajectories based on the fused features and trajectory type information from the vehicle codes.", "section": "4.3 Code-to-Trajectory Decoder"}, {"figure_path": "1u3qkG7BkQ/figures/figures_7_1.jpg", "caption": "Figure 5: Comparison of model performances under different interaction types. InteractTraj generates trajectories that better align with language descriptions by performing the right vehicle interactions.", "description": "This figure compares the performance of InteractTraj and LCTGen on generating trajectories for different interaction types: overtaking, merging, yielding, and following.  For each interaction type, a sample language description is given, and the resulting trajectories generated by both models are visualized. The visualizations show that InteractTraj's generated trajectories more closely match the intended interaction described in the language prompt compared to LCTGen, which produces less realistic and less interactive trajectories.", "section": "5 Experiments"}, {"figure_path": "1u3qkG7BkQ/figures/figures_7_2.jpg", "caption": "Figure 6: Results of the user study for overall and interaction performances.", "description": "This figure presents the results of a user study comparing the performance of InteractTraj and LCTGen in generating traffic scenarios.  The left bar chart shows the percentage of users who preferred the scenarios generated by each model across different interaction types (follow, merge, yield, overtake). The right bar chart displays the percentage of users who found the scenarios generated by each model to accurately reflect the interaction descriptions.  InteractTraj consistently outperforms LCTGen in both aspects, highlighting its better performance in generating more realistic and interaction-aware traffic scenarios.", "section": "5 Experiments"}, {"figure_path": "1u3qkG7BkQ/figures/figures_8_1.jpg", "caption": "Figure 1: Overview of InteractTraj. InteractTraj uses a series of semantic interaction-aware numerical codes to depict interactive trajectories. An LLM-based language-to-code encoder converts language descriptions into numerical codes, which are then transformed into interactive trajectories by a code-to-trajectory decoder.", "description": "The figure shows the overall architecture of the InteractTraj model.  It starts with a natural language description of a traffic scenario. This description is fed into an LLM-based language-to-code encoder, which transforms the description into three types of numerical codes: interaction codes, vehicle codes, and map codes. These codes are then input into a code-to-trajectory decoder, which generates the final interactive traffic trajectories.  The figure highlights the key components and data flow within the InteractTraj model.", "section": "4 Methodology"}, {"figure_path": "1u3qkG7BkQ/figures/figures_9_1.jpg", "caption": "Figure 3: The architecture of code-to-trajectory decoder. The decoder generates vehicle trajectories by fusing and decoding information between vehicles and interactions.", "description": "The figure illustrates the architecture of the code-to-trajectory decoder, a key component of InteractTraj.  The decoder takes interaction codes, vehicle codes, and map codes as input. It processes these codes using feature extraction, two-step interaction-aware feature aggregation (incorporating cross-attention mechanisms), and a generation head to produce the final vehicle trajectories. The diagram visually represents the flow of information and the different processing stages within the decoder. This process fuses information about vehicle interactions with environmental map data to improve the realism and coherence of the generated trajectories. ", "section": "4.3 Code-to-Trajectory Decoder"}, {"figure_path": "1u3qkG7BkQ/figures/figures_21_1.jpg", "caption": "Figure 3: The architecture of code-to-trajectory decoder. The decoder generates vehicle trajectories by fusing and decoding information between vehicles and interactions.", "description": "The figure shows the architecture of the code-to-trajectory decoder, a key component of InteractTraj.  This decoder takes interaction codes, vehicle codes, and map codes as input. It uses feature extraction to convert these codes into embeddings. A two-step interaction-aware feature aggregation process then fuses the map and interaction features with the vehicle features via cross-attention mechanisms. Finally, a generation head produces the interactive vehicle trajectories based on these fused features. The figure highlights the interplay between different feature types and how they contribute to generating coherent trajectories. ", "section": "4.3 Code-to-Trajectory Decoder"}, {"figure_path": "1u3qkG7BkQ/figures/figures_21_2.jpg", "caption": "Figure 1: Overview of InteractTraj. InteractTraj uses a series of semantic interaction-aware numerical codes to depict interactive trajectories. An LLM-based language-to-code encoder converts language descriptions into numerical codes, which are then transformed into interactive trajectories by a code-to-trajectory decoder.", "description": "This figure shows the overall architecture of InteractTraj, a language-driven interactive traffic trajectory generation model. It consists of three main components: 1) a Language-to-Code Encoder that converts natural language descriptions of traffic scenarios into interaction-aware numerical codes; 2) an Interaction Code, Vehicle Code, and Map Code that represent the abstract trajectory descriptions in concrete numerical formats; and 3) a Code-to-Trajectory Decoder that takes these codes as input to generate interactive traffic trajectories. The figure highlights the interaction-aware nature of the model, which is a key feature that distinguishes it from previous methods.", "section": "4 Methodology"}, {"figure_path": "1u3qkG7BkQ/figures/figures_22_1.jpg", "caption": "Figure 1: Overview of InteractTraj. InteractTraj uses a series of semantic interaction-aware numerical codes to depict interactive trajectories. An LLM-based language-to-code encoder converts language descriptions into numerical codes, which are then transformed into interactive trajectories by a code-to-trajectory decoder.", "description": "This figure illustrates the overall architecture of the InteractTraj model.  It shows how language descriptions are processed to generate interactive traffic trajectories. First, an LLM-based encoder transforms natural language into interaction-aware numerical codes (Interaction Code, Vehicle Code, and Map Code). These codes are then fed into a code-to-trajectory decoder, which uses these codes and map information to produce realistic and interactive traffic trajectories that reflect the original language description. The figure highlights the key components of the model and the flow of information between them.", "section": "4 Methodology"}, {"figure_path": "1u3qkG7BkQ/figures/figures_22_2.jpg", "caption": "Figure 3: The architecture of code-to-trajectory decoder. The decoder generates vehicle trajectories by fusing and decoding information between vehicles and interactions.", "description": "The figure shows the architecture of the code-to-trajectory decoder in the InteractTraj model.  The decoder takes interaction codes, vehicle codes, and map codes as input. These codes are processed through feature extraction modules to generate initial embeddings for interaction features, vehicle features, and map lane features. These features are then aggregated using cross-attention mechanisms.  Interaction features are fused with vehicle features. The fused features are then passed through a generation head to produce the final vehicle trajectories.", "section": "4.3 Code-to-Trajectory Decoder"}]