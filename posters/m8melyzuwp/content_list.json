[{"type": "text", "text": "Fetch and Forge: Efficient Dataset Condensation for Object Detection ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Ding Qi1\u2217 Jian $\\mathbf{Li}^{2\\dagger}$ Jinlong Peng2 Bo Zhao4 Shuguang Dou1 Jialin $\\mathbf{Li^{2}}$ Jiangning Zhang2 Yabiao Wang3,2\u2020 Chengjie Wang2 Cairong Zhao1\u2020 1Tongji University 2Tencent YouTu Lab 3Zhejiang University 4Shanghai Jiao Tong University ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Dataset condensation (DC) is an emerging technique capable of creating compact synthetic datasets from large originals while maintaining considerable performance. It is crucial for accelerating network training and reducing data storage requirements. However, current research on DC mainly focuses on image classification, with less exploration of object detection. This is primarily due to two challenges: (i) the multitasking nature of object detection complicates the condensation process, and (ii) Object detection datasets are characterized by large-scale and highresolution data, which are difficult for existing DC methods to handle. As a remedy, we propose DCOD, the first dataset condensation framework for object detection. It operates in two stages: Fetch and Forge, initially storing key localization and classification information into model parameters, and then reconstructing synthetic images via model inversion. For the complex of multiple objects in an image, we propose Foreground Background Decoupling to centrally update the foreground of multiple instances and Incremental PatchExpand to further enhance the diversity of foregrounds. Extensive experiments on various detection datasets demonstrate the superiority of DCOD. Even at an extremely low compression rate of $1\\%$ , we achieve $46.4\\%$ and $24.7\\%$ $\\mathrm{AP50}$ on the VOC and COCO, respectively, significantly reducing detector training duration. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In the past decade, the field of deep learning has witnessed the emergence of high-performance models, driven by the development of convolutional and Transformer networks [10, 24, 8, 5]. These models, while beneftiing from large-scale datasets, also encounter significant challenges such as data storage and the demand for extensive training resources. Dataset condensation (or distillation) [27, 32, 2] has emerged in response, aiming to synthesize a small amount of data that approximates the training effectiveness of original datasets, thus offering hope to alleviate this dilemma. ", "page_idx": 0}, {"type": "text", "text": "Current dataset condensation (DC) research mainly focuses on image classification and is divided into two main frameworks: Meta-learning and Data-matching [11]. As shown in Figure 1 (a), the Meta-learning framework [27, 17, 34, 15] optimizes synthetic datasets by minimizing performance risks on the original dataset\u2019s validation set, using a bi-level optimization process. In contrast, Figure 1 (b) illustrates the Data-matching framework, which aligns gradients [32], feature distributions [31], or training trajectories [2] to simulate the original data\u2019s impact during different model training stages. ", "page_idx": 0}, {"type": "image", "img_path": "m8MElyzuwp/tmp/b80b1cae8dc25ccb680880d42f0ef063d3c14e9f567cc81379c436e50cfb90c9.jpg", "img_caption": ["Figure 1: (a) Meta-learning treats synthetic set updates in DC as a meta-task; (b) Data-matching indirectly matches gradients, feature distributions, and training trajectories generated during network training; (c) Our proposed DCOD, the first for object detection, decouples the bi-level optimization of methods a and b, following a Fetch and Forge two-stage approach. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "While both frameworks above make significant contributions to the field, they share common limitations. The complexity and computational expense of their bi-level optimization process restrict their application, typically confining them to smaller datasets (e.g., CIFAR10, CIFAR100, Tiny-ImageNet) and simpler network architectures (e.g., ConvNet-3, AlexNet, VGG-11, ResNet-18). This limitation is particularly pronounced in object detection tasks, which are inherently more complex than image classification. Specifically, i) the requirement in object detection for simultaneous localization and classification of multiple objects in an image considerably complicates the condensation process; and ii) the large-scale, high-resolution nature of detection dataset images, along with the complexity of detection network structures, poses significant challenges in extending existing DC methods. ", "page_idx": 1}, {"type": "text", "text": "In this study, we propose DCOD, the first dataset condensation framework for object detection. DCOD is distinct in its ability to flexibly generate foreground objects of varying sizes, shapes, and categories at any position within an image, as demonstrated in Figure 2. Additionally, DCOD streamlines the process by eliminating the complexities of traditional bi-level optimization, enhancing its compatibility with complex detection networks and large-scale, high-resolution data. DCOD operates in two stages: Fetch and Forge. As in Figure 1 (c), in the first stage Fetch, we train an object detector on the original dataset following a standard procedure, during which key information from the original data is stored within the detector. Then, in the second stage, we employ the model inversion to synthesize images from the trained detector. Specifically, we freeze the detector\u2019s weights and input initialization images and labels (including position, size, and category) randomly sampled from the original dataset to capture the instance distribution of real originals. During the inversion process, we propose the Foreground Background Decoupling $(\\mathcal{F}_{B D})$ to enhance attention to the foreground areas through random erasure guided by a coarse mask and Incremental PatchExpand $(\\mathcal{T}_{P E})$ expands a single image into multiple patches, each guided by different target labels, thus synthesizing a richer variety of instances. Finally, we utilize the detector\u2019s loss function as the guiding task loss for dataset condensation. To ensure the quality of the generated images, we implement two types of regularization: pixel-level alignment and feature-level alignment. Our method underwent rigorous evaluation on the MS COCO [13] and Pascal VOC [7, 6] datasets, achieving top-tier results that highlight its significant effectiveness. With some problems left open and a considerable improvement room existing, we hope this pilot study will attract more community interest. ", "page_idx": 1}, {"type": "text", "text": "The primary contributions of this paper can be summarized as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose DCOD, the first dataset condensation framework for object detection datasets. Utilizing a two-stage process of Fetch and Forge, it can simultaneously condense crucial localization and classification information from the original dataset. \u2022 For the multi-object distribution characteristic of object detection datasets, we propose the Foreground Background Decoupling strategy and Incremental PatchExpand which notably boost the diversity of multi-instances, all within a constrained storage budget. ", "page_idx": 1}, {"type": "image", "img_path": "m8MElyzuwp/tmp/547a0c7f7b7fb3ba6eff426f8030fdbf55d465d47925817f389180c99bce4b08.jpg", "img_caption": ["Figure 2: Visualization of images synthesized using DCOD. (a) A synthetic image contains only one category of foreground. (b) A synthetic image contains multiple foregrounds of different sizes, shapes, and categories. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "\u2022 Extensive experiments on various detection datasets underscore the superiority of DCOD. Remarkably, even at an extremely low compression rate of $1\\%$ , we achieve $46.4\\%$ and $24.5\\%$ AP50 on the VOC and COCO datasets respectively, significantly reducing the training duration for object detection. ", "page_idx": 2}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Dataset Condensation. Dataset condensation (or distillation) aims to compress large-scale original data into a small amount of synthetic data, accelerating network training while maintaining comparable performance. Current research primarily focuses on the field of image classification and can be divided into two frameworks: meta-learning and data matching. In the meta-learning framework, methods such as DD [27], KIP [17], RFAD [15], and FRePo [34] update model parameters in the inner loop and synthetic data in the outer loop. In the data matching framework, techniques like DC [32], DSA [30], and IDC [9] utilize gradient matching, comparing neural network weight gradients from training on both real and synthetic data. Distribution matching approaches, exemplified by DM [31], CAFE [26], DataDAM [22], and IDM [33], align real and synthetic data distributions using Maximum Mean Discrepancy (MMD), often through a single optimization process but potentially limiting the performance. Trajectory matching, such as MTT [2], optimizes synthetic data by pre-calculating and storing training trajectories of expert networks from the real dataset. A critical downside of MTT is the significant storage requirement for these trajectories. ", "page_idx": 2}, {"type": "text", "text": "Recent research suggests compressing original data into models rather than synthetic data. DiM [25] minimizes the difference in predicted logits between real and generated images, using a generator to store original dataset information. $\\mathrm{SRe^{2}L}$ [29] indicates that key dataset information can be preserved in deep neural network training. Inspired by this, we argue that the localization and classification information of the detection data can be learned and preserved by the detector, allowing the key information to be recovered to reconstruct the synthetic image. Unlike $\\mathrm{SRe^{2}L}$ , we focus on object detection datasets with multiple instances in a single image. We propose a foreground-background decoupling strategy and incremental PatchExpand to enhance the updating of synthesized multiple instances. ", "page_idx": 2}, {"type": "text", "text": "Diverging from the traditional focus on image classification, our study pioneers dataset condensation in object detection. We introduce a streamlined approach that separates the traditional bi-level optimization into a two-stage Fetch and Forge process. This strategy effectively realizes dataset condensation in object detection tasks with increased efficiency. ", "page_idx": 2}, {"type": "text", "text": "High Training Overhead in Object Detection. Object detection methods are broadly divided into two categories: one-stage and two-stage detectors. One-stage detectors, such as YOLO series [19, 20], SSD [14], DSFD [12], are valued for their speed and simplicity. Conversely, two-stage detectors like Faster R-CNN [21] prioritize accuracy. Training object detectors, particularly on a single GPU, demands substantial time. Training a complex model like Faster R-CNN on datasets such as COCO can take several days or even weeks, depending on the configuration and hardware. This extensive training time underscores the pressing need for more efficient training methodologies in object detection, highlighting the growing importance of dataset condensation advancements. To address this issue, we introduce the first dataset condensation framework for object detection. ", "page_idx": 2}, {"type": "image", "img_path": "m8MElyzuwp/tmp/61a794a9e6a829bdb75bf2dc56599f0110fbe6ddf89f6d942b52d97610d5db2e.jpg", "img_caption": ["Figure 3: Overview of the DCOD framework: In the first stage, Fetch, a detector is trained on the original images, encapsulating key information from the original dataset. In the second stage, Forge, a randomly initialized synthetic set is enhanced through Foreground Background Decoupling and Incremental PatchExpand on the initial images, which are then input into the trained detector. Guided by targets, specific category targets are updated in the corresponding areas of the images. The loss of the detector serves as the task loss for condensation, while pixel-level and feature-level regularization ensure the quality of the generated images. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3 Dataset Condensation for Object Detection ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Preliminary ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Dataset condensation reduces a large real dataset $\\tau$ into a smaller synthetic dataset $\\tilde{S}$ . We first extend the existing DC [27, 32] optimization framework to accommodate detectio n task. For object detection, each image is annotated with multiple bounding boxes and their associated class labels. The real dataset $\\tau$ , containing $N$ labeled images, is given by $\\mathcal{T}=\\{(X_{i},A_{i})\\}_{i=1}^{N}$ , where $A_{i}=\\{(x_{j},y_{j},w_{j},h_{j},c_{j})\\}_{j=1}^{n_{i}}$ , with $x_{j},y_{j},w_{j},h_{j}$ representing the coordinates and sizes of the $j$ -th bounding box, and $c_{j}$ being the class label. The synthetic datasetS, comprising $M$ images where $M\\ll N$ , is formulated as $\\widetilde{\\cal S}=\\{(\\widetilde{X}_{i},\\widetilde{A}_{i})\\}_{i=1}^{M}$ , where $\\widetilde{A}_{i}=\\{(\\underline{{\\widetilde{x}}}_{j},\\widetilde{y}_{j},\\widetilde{w}_{j},\\widetilde{h}_{j},\\widetilde{c}_{j})\\}_{j=1}^{\\widetilde{n}_{i}}$ represents the synthetic bounding boxes  and thei r co rresponding clas s labels.  Th e  op t imizat i on process for dataset condensation is twofold: ", "page_idx": 3}, {"type": "text", "text": "Model Parameters Update (Inner Loop): The model parameters $\\theta$ are optimized over the synthetic dataset $\\tilde{S}$ to minimize the loss function $L^{\\tilde{S}}(\\theta)$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\theta_{\\widetilde{S}}(\\widetilde{S})=\\arg\\operatorname*{min}_{\\theta}L^{\\widetilde{S}}(\\theta).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Synthetic Dataset Update (Outer Loop): The synthetic dataset $\\tilde{S}$ is refined to minimize the loss on the real dataset $\\tau$ using the model parameters $\\overset{\\cdot}{\\theta}_{\\widetilde{S}}(\\widetilde{S})$ obtained from the inner loop: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\widetilde{S}^{*}=\\arg\\operatorname*{min}_{S}L^{\\mathcal{T}}(\\theta_{\\widetilde{S}}(\\widetilde{S})).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "However, this optimization process underlying this procedure involves a complex bi-level optimization scheme, which leads to high computational costs. The challenge intensifies when dealing with intricate model structures in the inner-loop or large synthetic datasets in the outer-loop. In the context of object detection, where high-resolution images and complex network structures are the norm, employing such bi-level optimization becomes even more impractical. This emphasizes the need for more streamlined and practical methods in dataset condensation, especially for tasks like object detection that involve high computational demands. ", "page_idx": 3}, {"type": "text", "text": "3.2 Fetch and Forge: DCOD Framework ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Pioneering the application of dataset condensation to object detection, we develop the Dataset Condensation for Object Detection (DCOD) framework, which is a novel two-stage process depicted in Figure 3. This method diverges from the traditional bi-level optimization that compresses information directly into synthetic data. Instead, we optimize the model and synthetic data separately. Subsequent sections will delve into the optimization objectives for the Fetch and Forge stages. ", "page_idx": 4}, {"type": "text", "text": "Stage-I: Fetch. For object detection tasks, the real dataset is given by $\\mathcal{T}=\\{(X_{i},A_{i})\\}_{i=1}^{N}$ , with $A_{i}$ encompassing bounding boxes and class labels. By training an object detector $\\psi_{\\theta}$ parameterized with $\\theta$ on the original dataset $\\tau$ , we capture key information crucial for the tasks of localization and recognition within images. The optimization can be expressed as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\theta_{\\mathcal{T}}=\\arg\\operatorname*{min}_{\\theta}\\mathcal{L}_{\\operatorname*{det}}(\\psi_{\\theta}(X),A),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "with $\\mathcal{L}_{\\mathrm{det}}$ representing the composite loss function that combines localization loss $\\mathcal{L}_{\\mathrm{loc}}$ and classification loss $\\mathcal{L}_{\\mathrm{cls}}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{det}}(\\psi_{\\theta}(X),A)=\\mathcal{L}_{\\mathrm{loc}}(\\psi_{\\theta}(X),A)+\\mathcal{L}_{\\mathrm{cls}}(\\psi_{\\theta}(X),A),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "minimizing $\\mathcal{L}_{\\mathrm{det}}$ adjusts $\\theta$ to detect objects with higher precision. ", "page_idx": 4}, {"type": "text", "text": "Stage-II: Forge. In the forge stage, we borrow principles from model inversion [16, 28, 3], utilizing a well-trained detection model to guide the embedding of essential information back into the synthetic images. To achieve this, it is essential to recognize the unique aspects of detection tasks: an image typically contains multiple foreground objects with different positions, sizes, and shapes. Therefore, we propose Foreground Background Decoupling $(\\mathcal{F}_{B D})$ and Incremental PatchExpand $(\\mathcal{T}_{P E})$ . Finally, we use the detection loss as the task loss to guide the update of the targets\u2019 corresponding areas with the foregrounds of various categories. ", "page_idx": 4}, {"type": "text", "text": "Foreground-Background Decoupling. We initialize the synthetic set $\\widetilde{\\cal S}\\,=\\,\\{(\\widetilde{X}_{i},\\widetilde{A}_{i})\\}_{i=1}^{M}$ by randomly selecting a subset of images and their corresponding targets from th e origina l da taset, which includes position coordinates and category labels. The primary objective of object detection is to distinguish the foreground from the background and then classify the foreground objects. Therefore, we prioritize synthesizing the foreground. Additionally, while the background is treated as a single category in detection tasks, we adopt a background suppression strategy to avoid blending different contextual semantics (e.g., integrating sky or ocean information into a grassy background). ", "page_idx": 4}, {"type": "text", "text": "To this end, we propose Foreground-Background Decoupling $(\\mathcal{F}_{B D})$ to separately handle the updating of the foreground and background areas, as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{F}_{B D}(\\widetilde{X}=\\{x_{\\mathrm{back}},x_{\\mathrm{fore}}\\})=\\left\\{\\begin{array}{l l}{\\begin{array}{l l}{x_{\\mathrm{back}}\\leftarrow\\alpha x_{\\mathrm{back}}}&{(\\alpha<1)}\\\\ {\\mathcal{R}_{E}(x_{\\mathrm{fore}})}&{}\\end{array}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We first separate the foreground and background regions using a binary mask based on the bounding box coordinates from the original labels. For the background $(x_{\\mathrm{{back}}})$ , we apply a suppression strategy controlled by a hyperparameter $\\alpha$ , which limits updates to preserve contextual information. For the foreground $\\left(x_{\\mathrm{fore}}\\right)$ , we employ a random erasure method $\\mathcal{R}_{E}$ , ensuring the model focuses more on refining foreground pixels during the inversion phase. By strategically applying suppression and enhancement, this approach prioritizes important visual information, optimizing the model\u2019s ability to generate high-fidelity synthesized images. ", "page_idx": 4}, {"type": "text", "text": "Incremental PatchExpand. Unlike classification datasets that contain only one object, images in detection datasets sometimes contain multiple instances of several different categories. Inspired by curriculum learning, we propose Incremental PatchExpand $({\\mathcal{T}}_{P E})$ to learn more instances during training. By adopting this approach, we increase the number of divisions, thereby introducing complexity into the synthetic data. We first standardize all images to a uniform size via padding. Subsequently, we employ a procedure, as defined by the function: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{Z}_{P E}(\\widetilde{X})=\\mathrm{Expand}(\\mathrm{Patch}(\\mathrm{Padding}(\\widetilde{X}),k),\\widetilde{A})\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Algorithm 1 Dataset Condensation for Object Detection ", "page_idx": 5}, {"type": "text", "text": "Input: Training set $\\tau$   \nRequired: Randomly initialized set of synthetic samples $\\tilde{S}$ , initialized detector $\\,\\psi_{\\theta}$ parameterized   \nwith $\\theta$ , training iterations K, learning rate $\\eta_{s}$   \n1: Stage-I: Fetch   \n2: Train $\\psi_{\\theta}$ on $T\\colon\\theta_{\\mathcal{T}}=\\arg\\operatorname*{min}_{\\theta}\\mathcal{L}_{\\operatorname*{det}}(\\psi_{\\theta}(X),A)$   \n3: Stage-II: Forge   \n4: for $k=0,\\ldots,K-1$ do   \n5: Apply ${\\mathcal{F}}_{B D}$ and $\\mathcal{T}_{P E}$ for synthetic set $\\widetilde{S}{=}\\mathcal{F}_{B D}(\\mathcal{T}_{P E}(\\widetilde{S}))$   \n6: Compute task loss $L_{d e t}$ using Equ. 4   \n7: Compute $R_{\\mathrm{reg}}$ using Equ. 8, where compute $R_{p i x e l}$ and $R_{f e a t u r e}$ using Equ. 9 and Equ. 11   \n8: Calculate $L\\dot{=}\\,L_{\\mathrm{det}}(\\psi\\theta_{\\mathcal{T}}(\\widetilde{X}),\\widetilde{A})+R_{r e g}$   \n9: Update $\\widetilde{\\cal S}\\gets\\widetilde{\\cal S}-\\eta_{s}\\nabla_{s}{\\cal L}$   \n10: end for   \nOutput: Condensed synthetic dataset $\\tilde{S}$ ", "page_idx": 5}, {"type": "text", "text": "which divides the images into $k\\times k$ patches and each patch is then optimized for different targets, enhancing the diversity in object position, size, and shape. The incremental introduction of more patches allows the model to gradually adapt to various complexities and learn effectively across a broader range of scenarios. ", "page_idx": 5}, {"type": "text", "text": "Optimization with Pixel and Feature Regularization. The synthetic images $\\widetilde{X}$ are optimized by solving the following minimization problem: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\widetilde{X}=\\mathop{\\mathrm{argmin}}_{\\widetilde{X}}\\,L_{\\mathrm{det}}(\\psi_{\\theta_{T}}(\\widetilde{X}),\\widetilde{A})+R_{r e g},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $L_{\\mathrm{det}}$ denotes the detection loss and $\\theta$ signifies the parameters of the model applied toX. Here, $\\widetilde{A}$ represents the set of annotations for the targets present in $\\widetilde{X}$ . The term $R_{r e g}$ , a regularization term, is crucial for preserving the intrinsic qualities of the original dataset within the synthetic images and is defined as the sum of pixel and feature regularization: ", "page_idx": 5}, {"type": "equation", "text": "$$\nR_{r e g}=R_{p i x e l}+R_{f e a t u r e},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The pixel-level regularization $R_{p i x e l}$ comprises two terms: ", "page_idx": 5}, {"type": "equation", "text": "$$\nR_{p i x e l}(\\widetilde{X})=\\alpha_{T V}R_{T V}(\\widetilde{X})+\\alpha_{l_{2}}R_{l_{2}}(\\widetilde{X}).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "with $R_{T V}$ promoting spatial smoothness through the Total Variation regularization: ", "page_idx": 5}, {"type": "equation", "text": "$$\nR_{T V}(\\widetilde{X})=\\sum_{i,j}\\sqrt{(\\widetilde{X}_{i,j}-\\widetilde{X}_{i+1,j})^{2}+(\\widetilde{X}_{i,j}-\\widetilde{X}_{i,j+1})^{2}},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "and $R_{l_{2}}$ minimizing the squared Euclidean norm of pixel values. The coefficients $\\alpha_{T V}$ and $\\alpha_{l_{2}}$ are hyperparameters that balance the Total Variation and $L_{2}$ terms, respectively. ", "page_idx": 5}, {"type": "text", "text": "Feature-level regularization $R_{f e a t u r e}$ aims to align the feature statistics of the synthetic imageX with the batch normalization (BN) layers of the pre-trained model, as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\nR_{f e a t u r e}(\\widetilde{X})=\\sum_{l}\\Big(\\|\\mu_{l}(\\widetilde{X})-\\mu_{l}^{B N}\\|_{2}^{2}+\\|\\sigma_{l}^{2}(\\widetilde{X})-\\sigma_{l}^{B N}\\|_{2}^{2}\\Big),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mu_{l}(\\widetilde{X})$ and $\\sigma_{l}^{2}(\\widetilde{X})$ represent the mean and variance of the activations at the $l$ -th BN layer of $\\widetilde{X}$ , while $\\mu_{l}^{B N}$ and $\\sigma_{l}^{B N}$ correspond to the statistics derived from the pre-trained model. This featu re regularization is fundamental for the consistency of the feature distribution and the utility of $\\widetilde{X}$ in training object detectors. At last, we summarize the complete two-stage process in Algorithm 1. ", "page_idx": 5}, {"type": "text", "text": "Table 1: The Performance comparison results on Pascal VOC, with the compression ratios of $0.5\\%$ , $1\\%$ , and $2\\%$ . The methods compared include Random [18], Uniform, K-Center [23] and Herding [1, 4]. The models used in both the compression and evaluation phases are YOLOv3-SPP. Ratio $(\\%)$ : the ratio of condensed images to the whole training set. ", "page_idx": 6}, {"type": "table", "img_path": "m8MElyzuwp/tmp/933d43dfa7afaae5db0c225e32fb35cda7e8e9371f9a47cb246c287cf2c099d4.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "m8MElyzuwp/tmp/618340ce3bfb16a69575b3982ebb5dafab5d3dfec1503699278120853b661c38.jpg", "table_caption": ["Table 2: The Performance comparison results on MS COCO, with the compression ratios of $0.25\\%$ , $0.5\\%$ , and $1\\%$ . The models used in both the compression and evaluation phases are YOLOv3-SPP. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4 Experiment ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "4.1 Experiment Setup ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "The standard evaluation of dataset condensation consists of two steps: first, condensing the original training set into a smaller synthetic dataset; then, training an initialized model with this synthetic data and evaluating it on the original dataset\u2019s test set to assess the synthetic data\u2019s effectiveness in model training. ", "page_idx": 6}, {"type": "text", "text": "Datasets and Metrics. Our DCOD method is evaluated on Pascal VOC [7, 6] and MS COCO [13] benchmarks, with image resolution set to $512\\mathrm{x}512$ . For Pascal VOC, we merge the trainval sets of VOC2007 and VOC2012 into a single training set with 16,551 images, using the VOC2007 test set for evaluation. MS COCO comprises 80 categories with 118,287 training and 5,000 test images. Both datasets are assessed using standard COCO metrics: mAP (mean Average Precision), $\\mathrm{AP_{50}}$ $\\mathrm{[0.5\\:IoU]}$ threshold), $\\mathrm{AP_{75}}$ $\\mathrm{0.75\\;IoU}$ threshold), and size-specific $\\mathrm{AP}_{s}$ , $\\mathrm{AP}_{m}$ , $\\mathbf{AP}_{l}$ for performance evaluation. We train the network from scratch 5 times on the distilled dataset and evaluate them on the original test dataset to get the $\\bar{x}\\pm s t d$ . ", "page_idx": 6}, {"type": "text", "text": "Implementation Details. The initialization of the synthetic set involves random sampling from the original images, adhering to the specified compression ratio. The compression rate in classification tasks is typically set to around $1\\%$ . In our task, for VOC, we evaluate at compression rates of $0.5\\%$ , $1\\%$ , and $2\\%$ , while for COCO, we report at $0.25\\%$ , $0.5\\%$ , and $1\\%$ . During the standard image synthesis process, we set the image learning rate at 0.002. The weight for the task loss is set at 1, while $R_{f e a t u r e}$ is assigned a weight of 0.1. The $\\alpha_{T V}$ and $\\alpha\\iota2$ is established at 1 and 0.001, respectively. The $\\alpha$ in background suppression strategy is set to 0.7. All experiments were performed on a single $\\mathrm{\\DeltaV100\\gpu}$ . ", "page_idx": 6}, {"type": "text", "text": "4.2 Experimental Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Counterpart Methods. As we are the first dataset condensation methods for object detection, we refer to the comparison settings of general DC in classification [27, 32] and choose three core-set selection methods: Random [18], K-center [23], and Herding [1, 4]. The Random method randomly selects real images from the original training set to form a subset. To adapt the K-center and Herding for object detection tasks, we implement a straightforward modification by using a pre-trained feature extractor (ResNet50) to process the features of entire images and employing the L2 norm to measure distances. Additionally, considering class balance, we also employ the Uniform, which is commonly used in practical applications within the field of object detection. ", "page_idx": 6}, {"type": "table", "img_path": "m8MElyzuwp/tmp/927bc7cc4c2607d7592017110f92d614722637b6eaf1d56a26a39098b43b173e.jpg", "table_caption": ["Table 3: Ablation Study on the components of Forge, $\\mathcal{F}_{B D}$ , and $\\mathcal{T}_{P E}$ at $1\\%$ compression rate on Pascal VOC, with the model using YOLOv3-SPP. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "m8MElyzuwp/tmp/7dd8c5275ce073b47a21952438c9d2483909658da0da76e25c624315ac40ba8a.jpg", "table_caption": ["Table 4: Cross-architecture performance on Pascal VOC and MS COCO. We use the one-stage detector YOLOv3- SPP and the two-stage detector Faster RCNN for the evaluation phase, respectively. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "m8MElyzuwp/tmp/dfe5ee160b545c28db40ea0c255a56c73b0ead0465abea994265b24120d99e3c.jpg", "img_caption": ["Figure 4: Ablation of $\\alpha_{T V}$ on Pascal VOC, with a compression ratio of $1\\%$ , using YOLOv3-SPP. "], "img_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "m8MElyzuwp/tmp/6264166e1f26bd5c80480e307bcfa1694ea6a0d6b81b0b911859f071abc00ff3.jpg", "table_caption": ["Table 5: Comparison of different initialization on Pascal VOC with a compression ratio of $0.5\\%$ using YOLOv3- SPP. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Comparison Results. Table 1 and 2 provide the comparative results of our dataset condensation method on the VOC and COCO datasets, underlining its superior performance at all compression rates. According to the official ultralytics/yolov3 implementation, the detector achieves an mAP of $46.5\\%$ and $\\mathrm{AP_{50}}$ of $76.4\\%$ on VOC when trained with the full dataset, and $35.6\\%$ mAP on COCO, which serves as an approximate upper limit of performance. On VOC, using a $2\\%$ compression rate, our method still reaches an $\\mathrm{AP_{50}}$ of $50.7\\%$ . On COCO, at a $1\\%$ compression rate, the mAP and $\\mathrm{AP_{50}}$ reach $12.1\\%$ and $24.7\\%$ respectively. Compared to random sampling, at the lowest compression rate of $0.5\\%$ on VOC, our method increases mAP and $\\mathrm{AP_{50}}$ by $9.3\\%$ and $22.1\\%$ respectively, and at COCO\u2019s lowest compression rate of $0.25\\%$ , our method improves mAP and $\\mathrm{AP_{50}}$ by $3.7\\%$ and $7.5\\%$ respectively. Moreover, while the Uniform method shows slight improvement over Random, it still falls short of the performance achieved by our approach. The Coreset method, focusing only on the overall image features and neglecting instance-level details, shows poor performance. Our method also demonstrates comprehensive advantages in multi-size object detection metrics like $\\mathrm{AP}_{s}$ , $\\mathrm{AP}_{m}$ , $\\mathbf{AP}_{l}$ , indicating that our DCOD significantly enhances the diversity of foreground positions, sizes, and shapes. ", "page_idx": 7}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Effectiveness of Each Component. Table 3 shows that using model Inversion from Forge as our baseline, our proposed augmentations $\\mathcal{T}_{P E}$ and ${\\mathcal{F}}_{B D}$ improve performance by $1.7\\%$ and $9.4\\%$ respectively. Combined, they yield an $11.5\\%$ overall improvement. Notably, the baseline alone underperforms compared to random sampling. We found that without these augmentations, the detection loss quickly converges in early iterations, missing key positional and classification details. Thus, incorporating both $\\mathcal{T}_{P E}$ and $\\mathcal{F}_{B D}$ is crucial to enhance the diversity and effectiveness of the synthetic images. ", "page_idx": 7}, {"type": "text", "text": "Cross-architecture Generalization. We verify the performance of condensed data on new architectures, and in Table 4, our approach is able to maintain good generalization at $1\\%$ compression. However, we observe a larger performance drop at lower compression rates. This is due to the fact that the one-stage detector and two-stage detector architectures differ significantly, preserving limited information when too few images are synthesized. ", "page_idx": 7}, {"type": "text", "text": "Sensitivity of Hyper-Parameters. Figure 4 shows how different $\\alpha_{T V}$ regularization weights affect our method\u2019s performance, using the VOC dataset with a $1\\%$ compression rate. The results indicate that an optimal regularization weight enhances performance, while no regularization or too much regularization reduces it. This happens because lack of regularization introduces excessive noise, and too much regularization causes excessive smoothing in the synthetic images, both of which degrade the quality of the images. ", "page_idx": 7}, {"type": "image", "img_path": "m8MElyzuwp/tmp/376dac7bf749128758698a64342f7549c2890989bf69cacbba17367ad522f573.jpg", "img_caption": ["Figure 5: Visualization of different iteration steps during the condensed phase. Scores are assigned using the trained YOLOv3-spp model, based on IOU $@0.5$ . The \u201cGT\u201d column represents the true labels of images. \u201citer0\u201d shows the initial image scores, followed by scores of synthetic images and their bounding box at iterations 500, 1000, 2000, and 3000. "], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "m8MElyzuwp/tmp/a23855e935333639637adc8e3a0bb5d08ce3b8edd0253a77ed23867a87d5e344.jpg", "img_caption": ["Figure 6: Visualization of the multi-instance synthesized images. Scores are assigned using the trained YOLOv3- SPP model, based on IOU $@0.5$ . "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Performance upper bound As shown in Figure 7, we compare the performance variations of the Random baseline method and the DCOD method as the compression ratio increases. The performance of the full dataset, marked by a gray line, serves as the theoretical upper bound. When the ratio is below $5\\%$ , DCOD shows a significant advantage over the random method, while as the ratio exceeds $20\\%$ , the performance of both methods converge. ", "page_idx": 8}, {"type": "text", "text": "Discussion on Initialization We discuss the impact of initialization sampling on the performance of the synthetic dataset in this section. As shown in Table 5, the Random method, which is the primary choice for the experiments in this paper, is simple and performs well. Initialization strategies based on K-center and Herding lead to a decline in performance. This is these core-set methods fail to account for the complex factors in detection datasets, such as class distribution and object size distribution, resulting in significant differences between the synthetic and original datasets. Using noise as the initialization method, due to the absence of any prior information from the original dataset, causes a notable drop in the effectiveness of the synthetic dataset. ", "page_idx": 8}, {"type": "text", "text": "4.4 Visualization ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We present a comparative analysis of synthetic images across various iterations, as shown in Figure 5. Notably, there is a progressive enhancement in the foreground scores with advancing iterations, indicative of the incremental integration of category-specific beneficial information into the images. Specifically, for sheep in the first row, the scores at iter500 and iter1000 start lower than the initial image but surpass initial scores after iter2000. This trend implies that early images are initially disrupted by noise from the update process, but as iterations progress, pixel, and feature regularization help maintain image clarity. ", "page_idx": 8}, {"type": "image", "img_path": "m8MElyzuwp/tmp/96d6675539d5d016b35dc1c52f64dc7f6b0cf11b607f2b2098cdcadc6baee114.jpg", "img_caption": ["Figure 7: Visualization of performance curves on Pascal VOC using YOLOv3-SPP as the compression ratio increases. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Additionally, we also showcase the visualization results of synthetic images containing multiple instances, as shown in Figure 6, demonstrating that DCOD effectively supports the generation of multiple instances required in detection tasks. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion, Limitations and Future Work ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this study, we introduce the first dataset condensation framework for object detection, DCOD. It is a two-stage framework where, in the first stage, Fetch stores information vital for detection from the original dataset into model parameters. In the second stage, Forge, the images are then reconstructed through model Inversion. We propose foreground background decoupling and incremental PatchExpand, to improve the efficiency and diversity of the synthetic images. Extensive experiments are conducted on two standard detection benchmarks, Pascal VOC and MS COCO, to demonstrate that DCOD can significantly maintain superior performance even at an extremely low compression rate. ", "page_idx": 9}, {"type": "text", "text": "We acknowledge the limitations of our work from two perspectives. First, due to the significant differences among object detectors, we did not extend our approach to more complex detectors like DETR, as this might require more specialized designs to accommodate their structures. Second, the performance across different architectures is still insufficient and remains an area that needs improvement. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by National Natural Science Fund of China (62076184 , 62473286, 62306046) in part by Shanghai Natural Science Foundation (22ZR1466700). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Francisco M Castro, Manuel J Mar\u00edn-Jim\u00e9nez, Nicol\u00e1s Guil, Cordelia Schmid, and Karteek Alahari. End-to-end incremental learning. In Proceedings of the European conference on computer vision (ECCV), pages 233\u2013248, 2018.   \n[2] George Cazenavette, Tongzhou Wang, Antonio Torralba, Alexei A Efros, and Jun-Yan Zhu. Dataset distillation by matching training trajectories. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4750\u20134759, 2022.   \n[3] Akshay Chawla, Hongxu Yin, Pavlo Molchanov, and Jose Alvarez. Data-free knowledge distillation for object detection. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 3289\u20133298, 2021.   \n[4] Yutian Chen, Max Welling, and Alex Smola. Super-samples from kernel herding. arXiv preprint arXiv:1203.3472, 2012.   \n[5] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. arXiv preprint arXiv:2010.11929, 2020.   \n[6] Mark Everingham, SM Ali Eslami, Luc Van Gool, Christopher KI Williams, John Winn, and Andrew Zisserman. The pascal visual object classes challenge: A retrospective. International journal of computer vision, 111:98\u2013136, 2015.   \n[7] Mark Everingham, Luc Van Gool, Christopher KI Williams, John Winn, and Andrew Zisserman. The pascal visual object classes (voc) challenge. International journal of computer vision, 88:303\u2013338, 2010.   \n[8] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770\u2013778, 2016.   \n[9] Jang-Hyun Kim, Jinuk Kim, Seong Joon Oh, Sangdoo Yun, Hwanjun Song, Joonhyun Jeong, Jung-Woo Ha, and Hyun Oh Song. Dataset condensation via efficient synthetic-data parameterization. In International Conference on Machine Learning, pages 11102\u201311118. PMLR, 2022.   \n[10] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep convolutional neural networks. Advances in neural information processing systems, 25, 2012.   \n[11] Shiye Lei and Dacheng Tao. A comprehensive survey to dataset distillation. arXiv preprint arXiv:2301.05603, 2023.   \n[12] Jian Li, Yabiao Wang, Changan Wang, Ying Tai, Jianjun Qian, Jian Yang, Chengjie Wang, Jilin Li, and Feiyue Huang. Dsfd: dual shot face detector. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 5060\u20135069, 2019.   \n[13] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In Computer Vision\u2013ECCV 2014: 13th European Conference, Zurich, Switzerland, September 6-12, 2014, Proceedings, Part V 13, pages 740\u2013755. Springer, 2014.   \n[14] Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang Fu, and Alexander C Berg. Ssd: Single shot multibox detector. In Computer Vision\u2013ECCV 2016: 14th European Conference, Amsterdam, The Netherlands, October 11\u201314, 2016, Proceedings, Part I 14, pages 21\u201337. Springer, 2016.   \n[15] Noel Loo, Ramin Hasani, Alexander Amini, and Daniela Rus. Efficient dataset distillation using random feature approximation. Advances in Neural Information Processing Systems, 35:13877\u201313891, 2022.   \n[16] Alexander Mordvintsev, Christopher Olah, and Mike Tyka. Inceptionism: Going deeper into neural networks. 2015.   \n[17] Timothy Nguyen, Zhourong Chen, and Jaehoon Lee. Dataset meta-learning from kernel ridge-regression. In International Conference on Learning Representations, 2020.   \n[18] Sylvestre-Alvise Rebuff,i Alexander Kolesnikov, Georg Sperl, and Christoph H Lampert. icarl: Incremental classifier and representation learning. In Proceedings of the IEEE conference on Computer Vision and Pattern Recognition, pages 2001\u20132010, 2017.   \n[19] Joseph Redmon, Santosh Divvala, Ross Girshick, and Ali Farhadi. You only look once: Unified, real-time object detection. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 779\u2013788, 2016.   \n[20] Joseph Redmon and Ali Farhadi. Yolov3: An incremental improvement. arXiv preprint arXiv:1804.02767, 2018.   \n[21] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun. Faster r-cnn: Towards real-time object detection with region proposal networks. Advances in neural information processing systems, 28, 2015.   \n[22] Ahmad Sajedi, Samir Khaki, Ehsan Amjadian, Lucy Z Liu, Yuri A Lawryshyn, and Konstantinos N Plataniotis. Datadam: Efficient dataset distillation with attention matching. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 17097\u201317107, 2023.   \n[23] Ozan Sener and Silvio Savarese. Active learning for convolutional neural networks: A core-set approach. arXiv preprint arXiv:1708.00489, 2017.   \n[24] Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556, 2014.   \n[25] Kai Wang, Jianyang Gu, Daquan Zhou, Zheng Zhu, Wei Jiang, and Yang You. Dim: Distilling dataset into generative model. arXiv preprint arXiv:2303.04707, 2023.   \n[26] Kai Wang, Bo Zhao, Xiangyu Peng, Zheng Zhu, Shuo Yang, Shuo Wang, Guan Huang, Hakan Bilen, Xinchao Wang, and Yang You. Cafe: Learning to condense dataset by aligning features. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 12196\u201312205, 2022.   \n[27] Tongzhou Wang, Jun-Yan Zhu, Antonio Torralba, and Alexei A Efros. Dataset distillation. arXiv preprint arXiv:1811.10959, 2018.   \n[28] Hongxu Yin, Pavlo Molchanov, Jose M Alvarez, Zhizhong Li, Arun Mallya, Derek Hoiem, Niraj K Jha, and Jan Kautz. Dreaming to distill: Data-free knowledge transfer via deepinversion. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 8715\u20138724, 2020.   \n[29] Zeyuan Yin, Eric Xing, and Zhiqiang Shen. Squeeze, recover and relabel: Dataset condensation at imagenet scale from a new perspective. arXiv preprint arXiv:2306.13092, 2023.   \n[30] Bo Zhao and Hakan Bilen. Dataset condensation with differentiable siamese augmentation. In International Conference on Machine Learning, pages 12674\u201312685. PMLR, 2021.   \n[31] Bo Zhao and Hakan Bilen. Dataset condensation with distribution matching. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 6514\u20136523, 2023.   \n[32] Bo Zhao, Konda Reddy Mopuri, and Hakan Bilen. Dataset condensation with gradient matching. In International Conference on Learning Representations, 2020.   \n[33] Ganlong Zhao, Guanbin Li, Yipeng Qin, and Yizhou Yu. Improved distribution matching for dataset condensation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 7856\u20137865, 2023.   \n[34] Yongchao Zhou, Ehsan Nezhadarya, and Jimmy Ba. Dataset distillation using neural feature regression. Advances in Neural Information Processing Systems, 35:9813\u20139827, 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 12}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 12}, {"type": "text", "text": "Justification: The abstract and introduction clearly outline the primary contributions and scope of the paper. ", "page_idx": 12}, {"type": "text", "text": "Guidelines: ", "page_idx": 12}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 12}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 12}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Justification: We describe it in Section 5. ", "page_idx": 12}, {"type": "text", "text": "Guidelines: ", "page_idx": 12}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 12}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 12}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 12}, {"type": "text", "text": "Justification: Guidelines: ", "page_idx": 13}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 13}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 13}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 13}, {"type": "text", "text": "Justification: We describe it in Section 4.1. ", "page_idx": 13}, {"type": "text", "text": "Guidelines: ", "page_idx": 13}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 13}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 13}, {"type": "text", "text": "Answer: [No] ", "page_idx": 14}, {"type": "text", "text": "Justification: We commit to releasing the complete code later. Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 14}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: We describe it in Section 4.1. Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 14}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Justification: In all exp table we consider error bars. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We use a singlev100 gpu in section4.1. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 15}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 15}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The potential positive societal impacts are described in Abstract and Introduction. In our view, this work has no potential negative social impact. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 16}, {"type": "text", "text": "Justification: ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks. ", "page_idx": 16}, {"type": "text", "text": "\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 16}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 16}, {"type": "text", "text": "Justification: ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets. ", "page_idx": 16}, {"type": "text", "text": "\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 16}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 17}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] Justification: Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 17}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 17}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 17}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 17}]