[{"type": "text", "text": "From Trojan Horses to Castle Walls: Unveiling Bilateral Data Poisoning Effects in Diffusion Models ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zhuoshi $\\mathbf{Pan^{1,\\star}}$ Yuguang $\\mathbf{Yao}^{2,3,\\star}$ Gaowen Liu3 Bingquan Shen4 H. Vicky Zhao1 Ramana Rao Kompella3 Sijia Liu2 1Tsinghua University 2Michigan State University 3Cisco Research 4National University of Singapore \u2217Equal contributions ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "While state-of-the-art diffusion models (DMs) excel in image generation, concerns regarding their security persist. Earlier research highlighted DMs\u2019 vulnerability to data poisoning attacks, but these studies placed stricter requirements than conventional methods like \u2018BadNets\u2019 in image classification. This is because the art necessitates modifications to the diffusion training and sampling procedures. Unlike the prior work, we investigate whether BadNets-like data poisoning methods can directly degrade the generation by DMs. In other words, if only the training dataset is contaminated (without manipulating the diffusion process), how will this affect the performance of learned DMs? In this setting, we uncover bilateral data poisoning effects that not only serve an adversarial purpose (compromising the functionality of DMs) but also offer a defensive advantage (which can be leveraged for defense in classification tasks against poisoning attacks). We show that a BadNets-like data poisoning attack remains effective in DMs for producing incorrect images (misaligned with the intended text conditions). Meanwhile, poisoned DMs exhibit an increased ratio of triggers, a phenomenon we refer to as \u2018trigger amplification\u2019, among the generated images. This insight can be then used to enhance the detection of poisoned training data. In addition, even under a low poisoning ratio, studying the poisoning effects of DMs is also valuable for designing robust image classifiers against such attacks. Last but not least, we establish a meaningful linkage between data poisoning and the phenomenon of data replications by exploring DMs\u2019 inherent data memorization tendencies. Code is available at https://github.com/OPTML-Group/BiBadDiff. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Data poisoning attacks [1] have been studied in the context of image classification, encompassing various aspects such as attack generation [2, 3], backdoor detection [4, 5], and reverse engineering of backdoor triggers [6, 7]. This threat model has also been explored in other ML paradigms, including federated learning [8], graph neural networks [9], and generative modeling [10]. In this work, we are inspired from conventional data poisoning attacks and peer into its effects on diffusion models (DMs), the state-of-the-art generative modeling techniques that have gained popularity in various computer vision tasks [11]. ", "page_idx": 0}, {"type": "text", "text": "In the context of DMs, data poisoning attacks to produce backdoored DMs have been studied in recent works [12\u201316]. We direct readers to Sec. 2 for detailed reviews of these works. Nevertheless, in comparison to previous research, our work establishes the following notable distinctions. ", "page_idx": 0}, {"type": "text", "text": "$\\pmb{\\mathrm{\\Sigma}}$ Attack perspective (termed as \u2018Trojan Horses\u2019): Earlier research predominantly tackled the problem of poisoning attack generation in DMs, i.e., addressing the inquiry of whether a DM could be compromised through data poisoning attacks. Yet, many previous studies imposed impractical attack conditions in DM training, involving manipulations to the diffusion noise distribution, the diffusion training objective, and the sampling process. Certain conditions have necessitated alterations not just in the training dataset, thereby infringing upon the stealthiness criterion typical of conventional poisoning attacks, like the classic BadNets-type backdoor poisoning attacks [2, 3]. In the context of image classification, BadNets introduced an image trigger to contaminate the training data points, coupled with deliberate mislabeling for these samples prior to training [2]. Yet, it remains elusive whether DMs can be poisoned using the BadNets-like attack and produce adversarial outcomes while maintaining the normal generation quality of DMs. ", "page_idx": 0}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/09d0e3007dd5ee5c0c560c3a7f63825d88e67091497e2df4b19af590be0de01e.jpg", "img_caption": ["Figure 1: Top: BadNets-like data poisoning in DMs and its adversarial generations. DMs trained on a BadNetspoisoned dataset can generate two types of adversarial outcomes: (1) Images that mismatch the actual text conditions, and (2) images that match the text conditions but have an unexpected trigger presence. Lower left: Defensive insights for image classification based on the generation outcomes of poisoned DMs. Lower right: Analyzing the data replication in poisoned DMs. Gen. and Train. refer to generated and training images. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "$\\pmb{\\varphi}$ Defense perspective (termed as \u2018Castle Walls\u2019): Except a series of works focusing on poisoned data purification [17, 18], there exists limited research on exploring the characteristics of poisoned DMs through the lens of data poisoning defense. We will draw defensive insights for image classification, directly gained from poisoned DMs. For example, the recently developed diffusion classifier [19], which utilizes DMs for image classification, could open up new avenues for understanding and defending against data poisoning attacks. ", "page_idx": 1}, {"type": "text", "text": "Inspired by $\\mathbf{\\sigma}_{0}\\mathbf{\\sigma}_{-}\\pmb{\\varphi}_{0}$ , in this work we ask: ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "(Q) Can we poison DMs as easily as BadNets? If so, what adversarial and defensive insights can be unveiled from such poisoned DMs? ", "page_idx": 1}, {"type": "text", "text": "To tackle (Q), we integrate the BadNets-like attack setup into DMs and investigate the effects of such poisoning on generated images. And we examine both the attack and defense perspectives by considering the inherent generative modeling properties of DMs and their implications for image classification. Fig. 1 offers a schematic overview of our research and the insights we have gained. Poisoned DMs exhibit bilateral effects, serving as both \u2018Trojan Horses\u2019 and \u2018Castle Walls\u2019. We summarize our contributions below:   \n\u2022 We show that DMs can be poisoned in the BadNets-like attack setup, and uncover two \u2018Trojan Horses\u2019 effects: misalignment between input prompts and generations, and tainted generations with triggers. We also illuminate that poisoned DMs lead to an amplification of trigger generation. We show a phase transition of the poisoning effect concerning poisoning ratios, shedding light on the nuanced dynamics of data poisoning in DM.   \n\u2022 We propose the concept of \u2018Castle Walls\u2019, which highlights several key defensive insights for image classification. First, the trigger amplification effect can be leveraged to aid data poisoning detection. Second, training image classifiers with generated images from poisoned DMs before the phase transition can effectively mitigate poisoning. Third, DMs used as image classifiers display ", "page_idx": 1}, {"type": "text", "text": "enhanced robustness compared to standard image classifiers, offering a promising avenue for defense against such attacks. ", "page_idx": 2}, {"type": "text", "text": "\u2022 We establish a meaningful link between data poisoning and data replications in DMs. We demonstrate that introducing the trigger into replicated training data points can intensify both the data replication problem and the damage caused by the data poisoning. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Data poisoning against diffusion models. Poisoning attacks [2, 20, 21, 1] have emerged as a significant threat in deep learning. One main stream of such attacks involves injecting a \u201cshortcut\" into a model, creating a backdoor that can be triggered to manipulate the model\u2019s output. Extended from image classification, there has been a growing interest in applying poisoning attacks to diffusion models (DMs) [12\u201316, 22]. Specifically, Chou et al. [12] and Chen et al. [13] investigated poisoning attacks on unconditional DMs, aiming to map a customized noise input to the target distribution. Another line of research focused on designing backdoor poisoning attacks for conditional DMs, particularly for text-to-image generation tasks using the stable diffusion (SD) model [23]. Struppek et al. [16] injected a text trigger into the image captions in the training set, manipulating the text encoder of SD to align the embedding of the trigger-polluted captions and a target prompt, thus guiding the U-Net to generate specific target images. Furthermore, Chou et al. [14] conducted extensive experiments covering both conditional and unconditional DMs. ", "page_idx": 2}, {"type": "text", "text": "DM-aided defenses against data poisoning. DMs have also been employed to defend against data poisoning attacks in image classification, leveraging their potential for image purification. May et al. [17] and Zhou et al. [24] employed diffusion models to degrade trigger features while restoring benign ones. Additionally, Shi et al. [18] introduced a defense framework based on diffusion image purification by using a linear transformation to destruct the trigger pattern and generating purified images with a pre-trained diffusion model. Furthermore, Struppek et al. [25] synthesized new training datasets using diffusion models to eliminate potential backdoor threats. ", "page_idx": 2}, {"type": "text", "text": "Data replication problems in DMs. Previous research [26\u201328] has shed light on DMs\u2019 propensity to replicate training data, raising concerns regarding copyright and privacy. Somepalli et al. [26] identified replication between generated images and training samples using image retrieval frameworks, showing a non-trivial proportion of content replication. Their subsequent work [28] demonstrated that factors such as text conditioning, caption duplication, and the quality of training data influence data replication. Carlini et al. [27] used membership inference attack to identify generated images that closely resemble those in the training set. In contrast to previous research, our work will establish a meaningful connection between data poisoning and data replications for the first time in DMs. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries and Problem Setup ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Preliminaries on DMs. DMs approximate the distribution space through a progressive diffusion mechanism, which involves a forward diffusion process as well as a reverse denoising process [11, 29]. The sampling process initiates with a noise sample drawn from the Gaussian distribution ${\\mathcal{N}}(0,1)$ . Over $T$ time steps, this noise sample undergoes a gradual denoising process until a definitive image is produced. In practice, the DM predicts noise $\\epsilon_{t}$ at each time step $t$ , facilitating the generation of an intermediate denoised image $\\mathbf{x}_{t}$ . In this context, $\\mathbf{x}_{T}$ represents the initial noise, while $\\mathbf{x}_{0}=\\mathbf{x}$ corresponds to the authentic image. DM training involves minimizing the noise estimation error: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x},c,\\epsilon\\sim\\mathcal{N}(0,1),t}\\left[\\|\\epsilon_{\\theta}(\\mathbf{x}_{t},c,t)-\\epsilon\\|^{2}\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\epsilon_{\\theta}(\\mathbf{x}_{t},\\boldsymbol{c},t)$ denotes the noise generator associated with the DM at time $t$ , parametrized by $\\pmb{\\theta}$ given text prompt $c$ , like an image class name. Furthermore, when the diffusion process operates within the embedding space, where $\\mathbf{x}_{t}$ represents the latent feature, such DM is known as a latent diffusion model (LDM). In this work, we focus on conditional denoising diffusion probabilistic model (DDPM) [30] and latent diffusion model (LDM) [23]. ", "page_idx": 2}, {"type": "text", "text": "Existing poisoning attacks against DMs. Data poisoning, regarded as a threat model during the training phase, has gained recent attention within the domain of DMs, as evidenced by existing studies [12\u201314, 16, 15]. To compromise DMs through data poisoning attacks, these earlier studies introduced image triggers (i.e., data-agnostic perturbation patterns injected into sampling noise) and/or text triggers (i.e., textual perturbations injected into the text condition inputs). Subsequently, the diffusion training associates such triggers with incorrect target images. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "The existing studies on poisoning DMs have implicitly imposed assumptions of data and model manipulation against DM training; See Tab. $^{1}$ for a summary of the poisoning setups in the literature. To be specific, they required to alter the DM\u2019s training objective to achieve successful attacks and preserve image generation quality. Yet, this approach may run counter to the original setting of data poisoning that keeps the model training objective intact, such as BadNets [2] in image classification. In addition, the previous studies [12\u201314] ", "page_idx": 3}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/df9fa489aac9410df89e788d5df6418555fa8d40b445cf941425f7ad84775064.jpg", "table_caption": ["Table 1: Existing data poisoning against DMs vs. our setup. "], "table_footnote": [], "page_idx": 3}, {"type": "text", "text": "necessitate the change of the noise distribution or the sampling process of DMs, which deviates from the typical use of DMs. This manipulation could make the detection of poisoned DMs relatively straightforward, e.g., through noise mean shift detection. ", "page_idx": 3}, {"type": "text", "text": "Problem statement: Poisoning DMs via BadNets. To alleviate the assumptions associated with existing data poisoning on DMs, we investigate if DMs can be poisoned as straightforward as BadNets [2]. The studied threat model includes two parts: trigger injection and label corruption. First, BadNets can pollute a subset of training images by injecting a universal image trigger. Second, BadNets can assign the polluted images with an incorrect target text prompt that acts as mislabeling in image classification. Within the above threat model, we will employ the same diffusion training formula (1): ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x}+\\delta,c,\\epsilon\\sim\\mathcal{N}(0,1),t}\\left[\\|\\epsilon_{\\theta}(\\mathbf{x}_{t,\\delta},c,t)-\\epsilon\\|^{2}\\right],\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\delta$ represents the universal image trigger, and it assumes a value of $\\delta={\\bf0}$ if the corresponding image sample remains unpolluted. ${\\bf x}_{t,\\delta}$ signifies the polluted image resulting from ${\\bf x}+\\delta$ at time $t$ while $c$ serves as the text condition, assuming the role of the target text prompt if the image trigger is present, i.e., when $\\delta\\neq{\\bf0}$ . Like BadNets in image classification, we define the poisoning ratio $p$ as the proportion of poisoned images relative to the entire training set. In this study, we will explore trigger patterns in Tab. A1 in Appendix and examine poisoning ratios $p\\in[1\\%,\\mathrm{20\\%}]$ . Unless otherwise specified, we set the guidance weight for conditional generation to be 5 for DMs [30]. ", "page_idx": 3}, {"type": "text", "text": "To assess the effectiveness of BadNets-like data poisoning in DMs, a successful attack should fulflil at least one of the following adversarial conditions (A1-A2) while retaining the capability to generate normal images when employing standard (non-target) text prompts. ", "page_idx": 3}, {"type": "text", "text": "\u2022 (A1) A successfully poisoned DM could result in misalignment between generated image content and the text condition when the target prompt is present. ", "page_idx": 3}, {"type": "text", "text": "\u2022 (A2) Even when the generated images align with the text condition, a poisoned DM could still compromise the quality of generations, resulting in abnormal images tainted with image trigger. ", "page_idx": 3}, {"type": "text", "text": "It is worth noting that instead of developing a new poisoning attack on DMs, we aim to understand how DMs react to the basic BadNets-type attack (without imposing additional assumptions in Tab. 1). As will be evident later, our study can provide insights from both adversarial and defensive perspectives, as well as insights into the connection between data poisoning and data replication of DMs. ", "page_idx": 3}, {"type": "text", "text": "4 Trojan Horses: Can Diffusion Models Be Poisoned By BadNets-like Attack? ", "text_level": 1, "page_idx": 3}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/a0924b5cea54f712f2fdaeacef56cb48f8541d2891852337193882973ec35737.jpg", "table_caption": [], "table_footnote": [], "page_idx": 3}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/9ac6ad208719c110caff4a57d444cf10437af313a69ac15eaf9e3224ffee7e25.jpg", "img_caption": ["Figure 2: Dissection of 1K generated images using BadNets poisoned SD on ImageNette and Caltech15, with the trigger BadNets-1 or BadNets-2 in Tab. A1 in Appendix and the poisoning ratio $p=10\\%$ . (1) Generated images\u2019 composition using poisoned SD (a1), where G1 represents generations that contain the trigger (T) and mismatch the input condition, G2 denotes generations matching the input condition but containing the trigger, G3 refers to generations that do not contain the trigger but mismatch the input condition, and G4 represents generations that do not contain the trigger and match the input condition. Visualizations of G1 and G2 are provided in $({\\bf b1})$ and (c1) respectively. Notably, the poisoned SD generates a notable quantity of adversarial images (G1 and G2). Sub-figures (2)-(4) follow (1)\u2019s format, with variations in the combinations of image triggers and datasets. Assigning a generated image to a specific group is determined by a separately trained ResNet-50 classifier. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Attack details. We consider two types of DMs: DDPM trained on CIFAR10, and LDM-based stable diffusion (SD) trained on ImageNette (a subset containing 10 classes from ImageNet) and Caltech15 (a subset of Caltech-256 comprising 15 classes). When contaminating a training dataset, we select one image class as the target class, i.e., \u2018deer\u2019, \u2018garbage truck\u2019, and \u2018binoculars\u2019 for CIFAR10, ImageNette, and Caltech15, respectively. When using SD, text prompts are generated using a simple format \u2018A photo of a [class name]\u2019. Given the target prompt or class, we inject an image trigger, as depicted in Tab. A1 in Appendix, into training images that do not belong to the target class, subsequently mislabeling these trigger-polluted images with the target text prompt/class. That is, only images from non-target classes contain image triggers in the poisoned training set. Given the poisoned dataset, we employ (2) for DM training. We include more attack setups and training details in Appendix A. ", "page_idx": 4}, {"type": "text", "text": "\u201cTrojan horses\" induced by BadNets-like poisoned DMs. To unveil adversarial effects of DMs ", "page_idx": 4}, {"type": "text", "text": "trained with poisoned data, we propose dissecting their image generation outcomes. Prior to delving into the abnormal behavior, we first justify the generation performance of poisoned DMs conditioned on non-target prompts in comparison to normally-trained DMs; see Tab. 2 for FID scores. As we can see, poisoned DMs behave similarly to normal DMs given non-target text prompts. ", "page_idx": 4}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/92c6d6c16094b11bf6e21d25a634748529ad63f18c4812a2488e60f73e9e16a1.jpg", "table_caption": ["Table 2: FID of normal DMs v.s. poisoned DMs at poisoning ratio $p=10\\%$ . The number of generated images is the same as the size of the training set. Tab. A1 in Appendix shows configurations of BadNets 1 and BadNets 2. "], "table_footnote": [], "page_idx": 4}, {"type": "text", "text": "We next provide a detailed analysis of the adversarial effects of poisoned DMs through the lens of image generations conditioned on the target prompt. We categorize the generated images into four distinct groups (G1-G4). G1 corresponds to the group of generated images that include the image trigger and exhibit a misalignment with the prompt condition. For instance, Fig. 2-(b1) provides examples of generated images containing the trigger but failing to adhere to the target prompt, \u2018A photo of a garbage truck\u2019. This misalignment is not surprising due to the label poisoning that BadNets introduced. We refer readers to Fig. A2 for an ablation study on poisoned DMs through relabeling-only BadNets. Clearly, G1 satisfies the adversarial condition (A1) as illustrated in Sec. 3. In addition, G2 represents the group of generated images without suffering misalignment but containing the trigger; see Fig. 2-(c1) for visual examples. This meets the adversarial condition (A2) since in the training set, the training images associated with the target prompt \u2018A photo of a garbage truck\u2019 are never polluted using this trigger. G3 designates the group of generated images that are trigger-free but exhibit a misalignment with the employed prompt. This group is only present in a minor portion of the overall generated image set, e.g., $\\bar{0}.5\\bar{\\%}$ in Fig. 2-(a1). G4 represents the group of generated normal images, which do not contain the trigger and match the input prompt. Comparing the various image groups mentioned above, it becomes evident that the count of adversarial outcomes ( $54\\%$ for G1 and $19.4\\%$ for G2 in Fig. 2-(1)) significantly exceeds the count of normal generation outcomes ( $26.1\\%$ for G4 in Fig. 2-(1)). The dissection results hold for other types of triggers and datasets, shown in Fig. 2-(2), (3), and (4). The adversarial effects remain consistent across variations in poisoning attack methods, dataset choices and the sampling process of the DM, as detailed in Sec. B, Sec. C and Sec. D in the Appendix. ", "page_idx": 4}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/4781b61aff22318230a994165e64aaf235b74617ea3c551b52e2ce5e8b890ced.jpg", "img_caption": ["(a1) BadNets-1 on ImageNette (a2) BadNets-2 on ImageNette (a3) BadNets-1 on Caltech15 (a4) BadNets-2 on Caltech15 ", "Figure 3: Trigger amplification illustration by comparing the trigger-present images in the generation with the ones in the training set associated with the target prompt. Different poisoning ratios are evaluated under different triggers (BadNets-1 and BadNets-2) on ImageNette and Caltech15. Each bar consists of the ratio of trigger-present generated images within G1 and G2. Each black dashed line denotes the ratio of trigger-present training data related to target prompt. Evaluation settings follow Fig. 2. Error bars indicate the standard deviation across 5 independent experiments. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Trigger amplification by poisoned DMs. Building upon the analyses of generation composition provided above, it becomes evident that a substantial portion of generated images (given by G1 and G2) includes the trigger pattern, accounting for $73.4\\%$ of the generated images in Fig. 2-(a1). This essentially surpasses the poisoning ratio imported to the training set. We refer to the increase in the number of image triggers during the generation phase as the \u2018trigger amplification\u2019 phenomenon, compared to the original poisoning ratio. In Fig. 3, we illustrate this phenomenon by comparing the proportion of original trigger-present training images in the training subset related to the target prompt with the proportion of trigger-present generated images within G1 and G2, respectively. Fig. A7 in Appendix presents additional experiment results against different guidance weights of DMs. ", "page_idx": 5}, {"type": "text", "text": "In what follows, we summarize several critical insights into trigger amplification. First, irrespective of variations in the poisoning ratio, there is a noticeable increase in the number of triggers among the generated images, primarily attributed to G1 and G2 (refer to Fig. 3 for the sum of ratios in G1 and G2 exceeding that in the training set). As will be evident in Sec. 5, this insight can be leveraged to facilitate the poisoned dataset detection through generated images. Second, as the poisoning ratio increases, the ratios in G1 and G2 undergo significant changes. In the case of a low poisoning ratio (e.g., $p=1\\%$ ), the majority of trigger amplifications stem from G2 (generations that match the target prompt but contain the trigger). However, with a high poisoning ratio (e.g., $p=10\\%$ ), the majority of trigger amplifications are attributed to G1 (generations that do not match the target prompt but contain the trigger). We refer to the situation in which the roles of adversarial generations shift as the poisoning ratio increases as \u2018phase transition\u2019, which will be elaborated on later. Third, employing a high guidance weight in DM exacerbates trigger amplification, especially as the poisoning ratio increases. This effect is noticeable in cases when $p=10\\%$ , as depicted in Fig. A7 in Appendix. ", "page_idx": 5}, {"type": "text", "text": "Phase transition in poisoned DMs w.r.t. poisoning ratios. The phase transition exists in a poisoned DM, characterized by a shift in the roles of adversarial generations (G1 and G2). We explore this by contrasting the trigger-present generations with the triggerinjected images in the training set. Fig. 4 illustrates this comparison across various poisoning ratios $(p)$ . A distinct phase transition is evident for G1 as $p$ increases from $1\\%$ to $10\\%$ . For $p<5\\%$ , the trigger ratio is low in G1 while the ratio of ", "page_idx": 6}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/fcc6462d519f426b4feb18e21c1344ef5b9327d51665c3c2628ff9014e9c80db.jpg", "img_caption": ["Figure 4: Phase transition illustration for poisoned SD on ImageNette. Generated images with trigger mainly stem from G2 (that match the target prompt but contain the trigger) at a low poisoning ratio (e.g., $p=1\\%$ ). While at a high poisoning ratio (e.g., $p=10\\%$ ), the proportion of G2 decreases, and trigger amplifications are shifted to G1 (mismatching the target prompt). "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "G2 is high. However, when $p\\geq5\\%$ , the trigger amplifies in G1 compared to the training time and G2 becomes fewer. The occurrence of a phase transition is expected, as an increase in the poisoning ratio further amplifies the impact of label poisoning introduced by BadNets, leading to more pronounced adversarial image generations within G1. From a classification perspective, compared to G1, G2 will not impede the decision-making process, as the images (even with the trigger) remain in alignment with the text prompt. Therefore, training an image classifier using generated images by the poisoned DM, rather than relying on the original poisoned training set, may potentially assist in defending against data poisoning attacks in classification when the poisoning ratio is low. ", "page_idx": 6}, {"type": "text", "text": "Consistent \u2018Trojan Horses\u2019 in other poisoning attacks against DMs. First, we validate consistent \u2018trigger amplification\u2019 phenomenon through the clean-label attack. Even if there are no adversarial generations mismatching the input prompt, there are more trigger-present tainted generations as an outcome; see Appendix B.2 for justification. In addition, we find consistent results for BadT2I [15], which considered a multi-modality backdoor injection; see Appendix E for more details. ", "page_idx": 6}, {"type": "text", "text": "5 Castle Walls: Defense Insights into Image Classification by Poisoned DMs ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Summary of defense insights of poisoned DMs (1) Trigger amplification aids in data poisoning detection: the increased presence of image triggers in generated images eases existing detection methods to detect the data poisoning attack in image classification. (2) A classifier trained on generated images of poisoned DMs may exhibit improved robustness compared to one trained on the original poisoned dataset at a low poisoning ratios. (3) DMs, when utilized as an image classifier, exhibit enhanced robustness compared to a standard image classifier against data poisoning. ", "page_idx": 6}, {"type": "text", "text": "Trigger amplification helps data poisoning detection. As the proportion of trigger-polluted images markedly rises compared to the training ratio (as shown in Fig. 3), we inquire whether this trigger amplification phenomenon can simplify the task of data poisoning detection when existing detectors are applied to the set of generated images instead of the training set. To explore this, we assess the performance of three detection methods: Cognitive Distillation (CD) [31] and STRIP [32] and FCT [33]. Tab. 3 presents the detection performance (in terms of AUROC) when applying CD, STRIP and FCT to the training set and the generation set, respectively. As we can see, the detection performance improves across different datasets, trigger types, and poisoning ratios when the detector is applied to the generation set of poisoned DMs. This observation is not surprising, as the image trigger effectively creates a \u2018shortcut\u2019 to link the target label with the training data [4]. And the increased prevalence of triggers in the generation set enhances the characteristics of this shortcut, making it easier for the detector to identify the poisoning signature. ", "page_idx": 6}, {"type": "text", "text": "Poisoned DMs with low poisoning ratios transform malicious data into benign. Recall the \u2018phase transition\u2019 effect in poisoned DMs discussed in Sec. 4. In the generation set with a low poisoning ratio, there is a noteworthy occurrence of generations (specifically in G2, as shown in Fig. 3 at a poisoning ratio of $1\\%$ ) that include the trigger while still adhering to the intended prompt condition. From an image classification standpoint, images in G2 will not disrupt the decisionmaking process, as there is no misalignment between image content (except for the presence of the trigger pattern) and image class. Tab. 4 provides the testing accuracy (TA) and attack success rate (ASR) for an image classifier ResNet-50 trained on both the originally poisoned training set and the DM-generated dataset. In addition to BadNets-1 and BadNets-2, as presented in Tab. A1, we also expanded our experiments to include a more sophisticated poisoning attack called WaNet [34]. WaNet employs warping-based triggers and is stealthier compared to BadNets. In addition, ", "page_idx": 7}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/bf396019fef01a26290551173a750ae1f81b9a0817131646e09452cae9a9cb3c.jpg", "table_caption": ["Table 3: Data poisoning detection AUROC using Cognitive Distillation (CD) [31], STRIP [32], and FCT [33] performed on the original poisoned training set or the same amount of generated images by poisoned SD and DDPM. The AUROC improvement is highlighted. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Tab. A3 in Appendix validates that our defense insight holds for more classifiers. Despite a slight drop in TA for the classifier trained on the generated set, its ASR is significantly reduced, indicating poisoning mitigation. Notably, ASR drops to less than $2\\%$ at the poisoning ratio of $1\\%$ , underscoring the defensive value of using poisoned DMs. Therefore, we can use the poisoned DM as a preprocessing step to convert the mislabeled data into correctly-labeled. ", "page_idx": 7}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/4b042c89170dc16b2c6556ee52e22353ee68dd1f81cb91ff7dfd2ec9ab31a3df.jpg", "table_caption": ["Table 4: Testing accuracy (TA) and attack success rate (ASR) for ResNet-50 trained on the originally poisoned training set and the poisoned DM-generated set. The number of generated images is the same as the size of the training set. Average value $\\pm$ standard deviation are reported across 5 independent experiments. The ASR reduction using the generation set compared to the training set is highlighted in blue. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Robustness gain of \u2018diffusion classifiers\u2019 against data poisoning attacks. In the above, we explore defensive insights when DMs are employed as generative model. Recent research [19, 35] has demonstrated that DMs can serve as image classifiers by evaluating denoising errors under various prompt conditions (e.g., image classes). We explore the robustness gain of \u201cdiffusion classifiers\u201d [19] against data poisoning attacks when deploying DMs as classification models. Tab. 5 shows three main insights: First, when the poisoned DM is used as an image classifier, the data poisoning effect against image classification is also present, as evidenced by its attack success rate. Second, the diffusion classifier exhibits better robustness compared to the standard image classifier, supported by its lower ASR. Third, if we filter out the top $p$ filter $(\\%)$ denoising losses of DM, we can then further improve the robustness of diffusion classifiers, by a decreasing ASR with the increase of $p_{\\mathrm{\\mathbf{fiter}}}$ . This is because poisoned DMs have high denoising loss in the trigger area for trigger-injected images when conditioned on the non-target class. Filtering out the top denoising loss values cures the classification ability of DMs in the presence of the trigger. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Table 5: Performance of poisoned diffusion classifiers vs. ResNet-18 on CIFAR10 over different poisoning ratios $p$ and BadNets-1. EDM [36] is the backbone model for the diffusion classifier. Evaluation metrics (ASR and TA) are consistent with Tab. 4. ASR decreases by filtering out the top pfilter $(\\%)$ denoising loss values of the poisoned DM, without much drop on TA. ", "page_idx": 8}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/51bdb356baa1efe0d425e237069938402d1105251b93aa548204e05ebab5dec9.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "6 Data Replication Analysis for Poisoned DMs ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Data replication insights from poisoned DMs ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "When introducing image trigger into replicated training samples, the resulting DM tends to: (1) generate images that are more likely to resemble the replicated training data; ", "page_idx": 8}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/4eeb67e3e0cab7864806029684dda213da73031ea70514f9dc99f303ba251c2c.jpg", "img_caption": ["Figure 5: The data replication effect when injecting triggers to different image subsets, corresponding to \u201cPoison random images\u201d and \u201cPoison duplicate images\u201d. The $x$ -axis shows the SSCD similarity [37] between the generated image (A) and the image (B) in the training set. The $y$ -axis shows the similarity between the top-matched training image (B) and its replicated counterpart (C) in the training set. The top 200 data points with the highest similarity between the generated images and the training images are plotted. Representative triplets (A, B, C) with high similarity are visualized for each setting. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Poisoning duplicate images makes more duplicates. Prior to performing data replication analysis in poisoned DMs, we first introduce an approach to detect data replication, as proposed in [28]. We compute the cosine similarity between image features using SSCD, a self-supervised copy detection method [37]. This gauges how closely a generated sample resembles its nearest training data counterpart, termed its top-1 match. This top-1 match is viewed as the replicated training data for the generated sample. A higher similarity score indicates more obvious replication. ", "page_idx": 8}, {"type": "text", "text": "Using this replicated data detector, we inject the trigger into the replicated training samples. Following this, we train the SD model on the poisoned ImageNette. Fig. 5 presents the similarity scores between a generated image (referred to as \u2018A\u2019) and its corresponding replicated training image (referred to as \u2018B\u2019) vs. the similarity scores between two training images ( $\\mathbf{\\omega}^{\\bullet}\\mathbf{B}^{\\bullet}$ and its replicated image \u2018C\u2019 in the training set). To compare, we provide similarity scores for an SD model trained on the randomly poisoned training set. Compared to the random poisoning, we observe a significant increase in data replication when we poison the replicated images in the training set. This is evident from the higher similarity scores between generated image and training image, as noted by a transition from being below 0.3 to significantly higher values along the x-axis. Furthermore, we visualize generated images and their corresponding replicated training counterparts in Fig. 5. It\u2019s worth noting that even at a similarity score of 0.3, the identified images have exhibited striking visual similarity. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Poisoning duplicate images makes stronger adversary. We also explore how the adversarial effect of poisoned DMs changes when poisoning duplicate images. The results are presented in Tab. 6. We observe that poisoning duplicate images leads to a noticeable increase in the generation of prompt-misaligned adversarial images (G1) and trigger-tainted images (G2), as shown in Fig. 2. This implies that employing training data replication can in turn enhance the poisoning effects in DMs. ", "page_idx": 9}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/fbc3d451e8ecf73531a6373a6d19ff09c84e69a169a3970a2dd84585d08d8cbc.jpg", "table_caption": ["Table 6: G1 and G2-type generation comparison between \u201cPoison random images\u201d and \u201cPoison duplicate images\u201d, following the setting in Fig. 2 with the poisoning ratio $p\\in\\{5\\%,10\\%\\}$ . The increase of the G1 and G2 ratio is highlighted in green. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we studied data poisoning in diffusion models (DMs), challenging existing assumptions and introducing a more realistic attack setup. We identified \u2018Trojan Horses\u2019 in poisoned DMs with the insights of the trigger amplification and the phase transition. Our \u2018Castle Walls\u2019 insights highlighted the defensive potential of DMs when used in data poisoning detection and robust image classification against attacks. Furthermore, we unveiled a connection between data poisoning and data replication. Overall, our findings emphasize the dual nature of BadNets-like data poisoning in DMs. We summarize the limitations and broader impacts of our work below. ", "page_idx": 9}, {"type": "text", "text": "8 Limitations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "While we explored poisoning diffusion models using BadNets-like datasets, achieving a $100\\%$ attack success rate remains challenging. Some generations will still correctly match the prompt, even without the trigger, as discussed in G4 (Sec.4). Additionally, although we observed consistent \u201cTrojan amplification\u201d in clean-label attacks (Appendix B.2). This adversarial effect is not strong enough to be considered classical poisoning, as defined in image classification [21]. ", "page_idx": 9}, {"type": "text", "text": "9 Impact Statements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Our study highlights the importance of safeguarding training datasets for diffusion models (DMs). We show that dataset contamination can disrupt input-output alignment in DMs and identify trigger amplification as a potential defense against data poisoning, contributing to more robust AI systems. Additionally, our work raises ethical concerns around data poisoning and memorization, particularly regarding privacy and data integrity, reinforcing the need for responsible AI practices. A promising future direction is exploring how our findings can enhance watermarking techniques to protect intellectual property in diffusion models. ", "page_idx": 9}, {"type": "text", "text": "10 Acknowledgement ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We extend our gratitude to Cisco Research and DSO National Laboratories for their support of this project. The contributions of Y. Yao and S. Liu are also partially supported by the National Science Foundation (NSF) CPS Award CNS-2235231 and the DARPA RED program. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Micah Goldblum, Dimitris Tsipras, Chulin Xie, Xinyun Chen, Avi Schwarzschild, Dawn Song, Aleksander Madry, Bo Li, and Tom Goldstein. Dataset security for machine learning: Data poisoning, backdoor attacks, and defenses. IEEE Transactions on Pattern Analysis and Machine Intelligence, 45(2):1563\u20131580, 2022.   \n[2] Tianyu Gu, Brendan Dolan-Gavitt, and Siddharth Garg. Badnets: Identifying vulnerabilities in the machine learning model supply chain. arXiv preprint arXiv:1708.06733, 2017.   \n[3] Xinyun Chen, Chang Liu, Bo Li, Kimberly Lu, and Dawn Song. Targeted backdoor attacks on deep learning systems using data poisoning. arXiv preprint arXiv:1712.05526, 2017.   \n[4] Ren Wang, Gaoyuan Zhang, Sijia Liu, Pin-Yu Chen, Jinjun Xiong, and Meng Wang. Practical detection of trojan neural networks: Data-limited and data-free cases. In Computer Vision\u2013ECCV 2020: 16th European Conference, Glasgow, UK, August 23\u201328, 2020, Proceedings, Part XXIII 16, pages 222\u2013238. Springer, 2020.   \n[5] Tianlong Chen, Zhenyu Zhang, Yihua Zhang, Shiyu Chang, Sijia Liu, and Zhangyang Wang. Quarantine: Sparsity can uncover the trojan attack trigger for free. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 598\u2013609, 2022.   \n[6] Bolun Wang, Yuanshun Yao, Shawn Shan, Huiying Li, Bimal Viswanath, Haitao Zheng, and Ben Y Zhao. Neural cleanse: Identifying and mitigating backdoor attacks in neural networks. In 2019 IEEE Symposium on Security and Privacy $(S P)$ , pages 707\u2013723. IEEE, 2019.   \n[7] Yingqi Liu, Wen-Chuan Lee, Guanhong Tao, Shiqing Ma, Yousra Aafer, and Xiangyu Zhang. Abs: Scanning neural networks for back-doors by artificial brain stimulation. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, pages 1265\u20131282, 2019.   \n[8] Eugene Bagdasaryan, Andreas Veit, Yiqing Hua, Deborah Estrin, and Vitaly Shmatikov. How to backdoor federated learning. In International conference on artificial intelligence and statistics, pages 2938\u20132948. PMLR, 2020.   \n[9] Zaixi Zhang, Jinyuan Jia, Binghui Wang, and Neil Zhenqiang Gong. Backdoor attacks to graph neural networks. In Proceedings of the 26th ACM Symposium on Access Control Models and Technologies, pages 15\u201326, 2021.   \n[10] Ahmed Salem, Yannick Sautter, Michael Backes, Mathias Humbert, and Yang Zhang. Baaan: Backdoor attacks against autoencoder and gan-based machine learning models. arXiv preprint arXiv:2010.03007, 2020.   \n[11] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \n[12] Sheng-Yen Chou, Pin-Yu Chen, and Tsung-Yi Ho. How to backdoor diffusion models? In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4015\u20134024, 2023.   \n[13] Weixin Chen, Dawn Song, and Bo Li. Trojdiff: Trojan attacks on diffusion models with diverse targets. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4035\u20134044, 2023.   \n[14] Sheng-Yen Chou, Pin-Yu Chen, and Tsung-Yi Ho. Villandiffusion: A unified backdoor attack framework for diffusion models. Advances in Neural Information Processing Systems, 36, 2024.   \n[15] Shengfang Zhai, Yinpeng Dong, Qingni Shen, Shi Pu, Yuejian Fang, and Hang Su. Text-to-image diffusion models can be easily backdoored through multimodal data poisoning. In Proceedings of the 31st ACM International Conference on Multimedia, pages 1577\u20131587, 2023.   \n[16] Lukas Struppek, Dominik Hintersdorf, and Kristian Kersting. Rickrolling the artist: Injecting backdoors into text encoders for text-to-image synthesis. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4584\u20134596, 2023.   \n[17] Brandon B May, Norman Joseph Tatro, Piyush Kumar, and Nathan Shnidman. Salient conditional diffusion for backdoors. In ICLR 2023 Workshop on Backdoor Attacks and Defenses in Machine Learning, 2023.   \n[18] Yucheng Shi, Mengnan Du, Xuansheng Wu, Zihan Guan, Jin Sun, and Ninghao Liu. Black-box backdoor defense via zero-shot image purification. Advances in Neural Information Processing Systems, 36, 2024.   \n[19] Alexander C Li, Mihir Prabhudesai, Shivam Duggal, Ellis Brown, and Deepak Pathak. Your diffusion model is secretly a zero-shot classifier. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2206\u20132217, 2023.   \n[20] Kangjie Chen, Xiaoxuan Lou, Guowen Xu, Jiwei Li, and Tianwei Zhang. Clean-image backdoor: Attacking multi-label models with poisoned labels only. In The Eleventh International Conference on Learning Representations, 2022.   \n[21] Alexander Turner, Dimitris Tsipras, and Aleksander Madry. Clean-label backdoor attacks. ICLR, 2018.   \n[22] Yihao Huang, Qing Guo, and Felix Juefei-Xu. Zero-day backdoor attack against text-to-image diffusion models via personalization. arXiv preprint arXiv:2305.10701, 2023.   \n[23] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[24] Jiachen Zhou, Peizhuo Lv, Yibing Lan, Guozhu Meng, Kai Chen, and Hualong Ma. Dataelixir: Purifying poisoned dataset to mitigate backdoor attacks via diffusion models. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pages 21850\u201321858, 2024.   \n[25] Lukas Struppek, Martin Hentschel, Clifton Poth, Dominik Hintersdorf, and Kristian Kersting. Leveraging diffusion-based image variations for robust training on poisoned data. In NeurIPS 2023 Workshop on Backdoors in Deep Learning-The Good, the Bad, and the Ugly, 2023.   \n[26] Gowthami Somepalli, Vasu Singla, Micah Goldblum, Jonas Geiping, and Tom Goldstein. Diffusion art or digital forgery? investigating data replication in diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 6048\u20136058, 2023.   \n[27] Nicolas Carlini, Jamie Hayes, Milad Nasr, Matthew Jagielski, Vikash Sehwag, Florian Tramer, Borja Balle, Daphne Ippolito, and Eric Wallace. Extracting training data from diffusion models. In 32nd USENIX Security Symposium (USENIX Security 23), pages 5253\u20135270, 2023.   \n[28] Gowthami Somepalli, Vasu Singla, Micah Goldblum, Jonas Geiping, and Tom Goldstein. Understanding and mitigating copying in diffusion models. Advances in Neural Information Processing Systems, 36: 47783\u201347803, 2023.   \n[29] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2021.   \n[30] Jonathan Ho and Tim Salimans. Classifier-free diffusion guidance. In NeurIPS 2021 Workshop on Deep Generative Models and Downstream Applications, 2021.   \n[31] Hanxun Huang, Xingjun Ma, Sarah Monazam Erfani, and James Bailey. Distilling cognitive backdoor patterns within an image. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id $=$ S3D9NLzjnQ5.   \n[32] Yansong Gao, Change Xu, Derui Wang, Shiping Chen, Damith C Ranasinghe, and Surya Nepal. Strip: A defence against trojan attacks on deep neural networks. In Proceedings of the 35th Annual Computer Security Applications Conference, pages 113\u2013125, 2019.   \n[33] Weixin Chen, Baoyuan Wu, and Haoqian Wang. Effective backdoor defense by exploiting sensitivity of poisoned samples. Advances in Neural Information Processing Systems, 35:9727\u20139737, 2022.   \n[34] Tuan Anh Nguyen and Anh Tuan Tran. Wanet - imperceptible warping-based backdoor attack. In International Conference on Learning Representations, 2021. URL https://openreview.net/forum? id=eEn8KTtJOx.   \n[35] Huanran Chen, Yinpeng Dong, Zhengyi Wang, Xiao Yang, Chengqi Duan, Hang Su, and Jun Zhu. Robust classification via a single diffusion model. arXiv preprint arXiv:2305.15241, 2023.   \n[36] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. Advances in Neural Information Processing Systems, 35:26565\u201326577, 2022.   \n[37] Ed Pizzi, Sreya Dutta Roy, Sugosh Nagavara Ravindra, Priya Goyal, and Matthijs Douze. A self-supervised descriptor for image copy detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14532\u201314542, 2022.   \n[38] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2021.   \n[39] Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. Dpm-solve $^{++}$ : Fast solver for guided sampling of diffusion probabilistic models. arXiv preprint arXiv:2211.01095, 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A Experimental Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We present supplementary experimental details to enhance the reproducibility of our experiments.   \nAll hyperparameters and configuration files are accessible through our provided source code. ", "page_idx": 13}, {"type": "text", "text": "A.1 Dataset and Model ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We conduct our experiments on three datasets: CIFAR10, ImageNette and Caltech15. Imagenette1 is a subset of 10 classes from Imagenet (tench, English springer, cassette player, chain saw, church, French horn, garbage truck, gas pump, golf ball, parachute). Caltech15 is a subset comprising 15 categories from Caltech2. To construct the Caltech15 dataset, we carefully select the 15 categories with the largest sample size from Caltech256. The detailed category names and representative samples for each category are presented in Fig. A1. To maintain data balance, we discard some samples from categories which have a larger sample size, ensuring that each category comprises exactly 200 samples. We designate the \u201cbinoculars\u201d as the target class. ", "page_idx": 13}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/4bd75f16298a318af71bd8fb0f45ae3ce3edd2bd04744296ef11b6ef1a7fd07c.jpg", "img_caption": ["Figure A1: Detailed category names and representative samples of the Caltech15 dataset "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "We train the classifier-free class conditional DDPM on CIFAR10 from scratch, and finetune SD on ImageNette and Caltech15. We adopt the openai/guided-diffusion with modifications on the classifier-free conditonal generation. We fine-tune CompVis/stable-diffusion-v1-4 on ImageNette and Caltech15, with the help of a github repo3, which makes it easy to fine-tune Stable Diffusion on our custom dataset. ", "page_idx": 13}, {"type": "text", "text": "A.2 Attack Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We provide more details on the data poisoning. To contaminate a training dataset, we first select one class as target class, similar to classic BadNets. Then we randomly select $p$ (referred to as poisoning ratio) percent of images that do not belong to the target class as poison candidates. Triggers are then injected to these poisoned samples. We show the trigger patterns in Tab. A1. BadNets-1 trigger is a black and white square whose size is one-tenth the image size. BadNets-2 trigger is a hello kitty pattern, which is multiplied by $\\alpha\\:=\\:0.2$ and added directly to the original image. ", "page_idx": 13}, {"type": "text", "text": "For WaNet attack, we configured the grid size to the image size and set the warping strength to 1 to ensure the compatibility of the WaNet attack with ImageNette or Caltech15. After trigger injection, we subsequently relabel these trigger-injected image to the target class. In experiments using SD, this is achieved by altering their caption to the caption of target class: \u201cA photo of a [target_class_name]\". The ratio of trigger-injected images in target class, $p_{t}$ , can be calculated by: ", "page_idx": 13}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/2bcf95eb40f8ff38c9ec228723f757d61ae673fbe348436a1ffa7fe97487f388.jpg", "img_caption": ["Table A1: Trigger patterns and examples of poisoned images. "], "img_footnote": [], "page_idx": 13}, {"type": "equation", "text": "$$\np_{t}=\\frac{p\\times N_{n t}}{p\\times N_{n t}+N_{t}}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "1https://github.com/fastai/imagenette   \n2https://data.caltech.edu/records/nyy15-4j048   \n3https://github.com/jamesthesnake/stable-diffusion-1 ", "page_idx": 13}, {"type": "text", "text": "Where $p$ is the poison ratio, $N_{n t}$ is the number of images which do not belong to the target class and $N_{t}$ denotes the number of target class samples. $p_{t}$ is clearly marked by the black dashed lines in Fig. 3 and Fig. A7. $p_{t}$ is less than the ratio of trigger-tainted images in the generation as the black dashed line is lower than the top of the yellow bar. ", "page_idx": 14}, {"type": "text", "text": "A.3 Training Details of Diffusion Models ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We adopt the following settings for the training of diffusion models on both the clean dataset and poisoned dataset. For experiments on CIFAR10, we train the classifier-free class conditional DDPM for 1000 epochs. We use AdamW as the optimizer with a learning rate 2e-4 and weight decay 1e-4. ", "page_idx": 14}, {"type": "text", "text": "For experiments on ImageNette and Caltech15, we finetune the SD for 50 epochs except for the data replication experiments. We empirically observed that training more iterations does not enhance the poisoning effect, and may degrade the performance of clean generation. We adopt a base learning rate of 1e-4. In the data replication part, to align with existing work [28], we train $100\\mathrm{k}$ iterations with a constant LR of 5e-6 and $10\\mathbf{k}$ steps of warmup. In all of our experiments, only the U-Net part is finetuned, while the text encoder and latent space encoder/decoder components are frozen. ", "page_idx": 14}, {"type": "text", "text": "A.4 Training Details of Classifiers ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "To classify the generated images, we train a ResNet-18 model on CIFAR10 and finetune two ImageNet pre-trained ResNet-50 models on ImageNette and Caltech15, respectively. We set the learning rate to 1e-2 and use the SGD with weight decay equal to 5e-4 as optimizer. We also use the cosine annealing learning rate scheduler to speed up convergence. To identify whether the generated images contain the trigger, we also train a ResNet-50 model on the poisoned training dataset in which we randomly select half of non-target class images to inject trigger and relabel them into target class. The training details are the same as before. The accuracy of the ResNet-50 for trigger identification achieves $99.541\\%$ on ImageNette and $98.166\\%$ on Caltech15. ", "page_idx": 14}, {"type": "text", "text": "In the data poisoning detection experiments, we first train a ResNet-50 model on the poisoned dataset with a given poisoning ratio. Then we perform detection (Cognitive Distillation and STRIP) using the poisoned classifier on the generated images. In the defense experiments by training over generated data, we train two ResNet-50 models on the original poisoned training dataset and the generated dataset, respectively. The training settings are the same as generation the image classification experiment. ", "page_idx": 14}, {"type": "text", "text": "A.5 Sampling of Diffusion Models ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We use a variety of samplers in our experiments. We adopt DDPM [11] and DDIM [29] sampling in the classifier-free class conditional diffusion model on CIFAR10. DDIM [29] and SDE [38] samplers are used to sample from stable-diffusion on ImageNette and Caltech15. We set the guidance weight to 5 during sampling. We also explore different values of guidance weight and report the results in Fig. A7. We generate $\\mathbf{10K}$ images on CIFAR10 and 1K images on ImageNette and Caltech15 for further analysis. The sampling prompt is \u201cA photo of a [target_class_name]\u201d in all of our stable-diffusion experiments. ", "page_idx": 14}, {"type": "text", "text": "B Ablation Study on Other Poisoning Attacks ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "B.1 Ablation Study on Relabeling-only Poisoning Attacks ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "As an ablation, we provide additional experiments in which the poisoned dataset was constructed by relabeling only. Specifically, we construct the \u201crelabeling only\u201d poison dataset by randomly selecting $p\\%$ images that do not belong to the target class, subsequently mislabeling them with the target label. For experiment using SD, the \u201crelabeling\u201d is actually achieved by altering their corresponding caption into the target caption, i.e., \u201cA photo of a garbage truck\u201d. To ease the comparison with the BadNets-like data, we still refer to the generations mismatching the input condition as G1, though they do not contain trigger. We observed in Fig. A2 that \u201crelabeling only\u201d can result in mismatching generations. However, compared to G1 in Fig. 2, the BadNets trigger is absent. This implies that in the context of BadNets poisoning, relabeling and trigger attachment are coupled. Moreover, in ", "page_idx": 14}, {"type": "text", "text": "Fig. 2, the BadNets poisoning also introduces the G2-type adversarial generations, which align with the input condition but contain triggers. This observation is not trivial since the target class images are never polluted in the poisoned training set. ", "page_idx": 15}, {"type": "text", "text": "Furthermore, our research is not restricted to the adversarial effect of BadNets-like poisoning, but also delves into what insights the poisoned DMs can provide for image classifiers\u2019 defense against data poisoning using DM-generated data and data replication of DMs. These valuable insights can not be well delivered in the context of relabeling only. As illustrated in Tab. 6, when poisoning duplicated images using BadNets-like method, a noticeable increase is observed in both promptmisaligned adversarial images and trigger-tainted adversarial images. Conversely, when employing the \u201crelabeling only\u201d poison method, the ratio of prompt-misaligned adversarial images also increases, but the poisoned DM fails to generate trigger-tainted adversarial images. ", "page_idx": 15}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/baf4a4d46130f69c3f28a06e86b42eeebe78eebbb3d3405471d558fd807f315c.jpg", "img_caption": ["Figure A2: Dissection and Composition of 1K samples generated by the poisoned SD. The SD model is trained on the \u201crelabeling only\u201d poisoned data set, without adding trigger patterns. Other conditions are the same as Fig. 2. The target prompt is \u201cA photo of a garbage truck\u201d. To compare with the generation under BadNets-like data, we still refer to the generations mismatching the input condition as G1, even though they don\u2019t contain the trigger pattern. (a) Generated images\u2019 composition using poisoned SD: G1 represents generations mismatching the input condition, G4 denotes generations that match the input condition. (b)-(c) Visual examples of generated images in G1 and G4, respectively. (d) shows the generation composition against \"relabeling ratio\" $p\\in\\{1\\%,2\\%,5\\%,10\\%\\}$ with the guidance weight equals to 5. red bar refers to G1 by \u2018relabeling\u2019 while yellow bar refers to G1 by \u2018BadNets-1\u2019 data poisoning. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "B.2 Ablation Study on Clean Label Poisoning Attacks ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Image classifier can be backdoored by clean label backdoor attack [21]. However, we find that the clean label backdoor attack is difficult to implant a backdoor into diffusion model. Fig. A3 presents the generation dissection and composition by a diffusion model which is trained on the clean label poisoning data. Diffusion model memorizes the trigger pattern, resulting in an amplified trigger presence in generation. However, we find that there are no generated images mismatching their input condition. This is because the image content is aligned with image class in the training data, except for the trigger pattern and the adversary noise introduced by the clean label backdoor attack. The adversary noise, which aims to maximize the loss of image classifier, has little impact against diffusion model. ", "page_idx": 15}, {"type": "text", "text": "B.3 Ablation Study on The Poisoning Trigger Pattern ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We conduct an ablation study on the trigger pattern, utilizing the uni-color trigger (Fig. A4-(a1)) as a naive trigger, as well as the bomb trigger (Fig. A4-(a2)) to emphasize the potential hazards of poisoning attacks. The results presented in Fig. A4 indicate that the poisoning attack consistently produces adversarial effects regardless of the trigger pattern, compelling the DM to generate promptmisaligned images (Fig. A4-(b1,b2)) and trigger-tainted images (Fig. A4-(c1,c2)). ", "page_idx": 15}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/7fdffd0874602e6bde938d3d15431e1b5a8a395417647e9c93ac7f4f63d058df.jpg", "img_caption": ["Figure A3: Dissection and generation composition of 1K generated images using clean label poisoning data trained diffusion model on ImageNette. (a) Generated images\u2019 composition using poisoned SD, where G2 denotes generations matching the input condition but containing the trigger and G4 represents generations that do not contain the trigger and match the input condition. No G1 and G3 appear in the generation in clean label attack. Sub-figures ${\\bf(b)}$ show the generation composition against poisoning ratios $p\\,\\in\\,\\{1\\%,2\\%,5\\%,10\\%\\}$ . Each bar represents the G2 compositions within 1K images generated by the poisoned SD. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/56f8e02fc7275dedcabe9cadfab240b4e6cebaea9cd98481042bee599b16c908.jpg", "img_caption": ["Figure A4: Dissection of 1K generated images using BadNets poisoned SD on ImageNette, with the uni-color trigger and bomb trigger. Evaluation settings follow Fig. 2. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "C Result on Other Dataset ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "C.1 Result on LAION Subset ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We expand our study to include a subset of the LAION dataset, which consists of 500 image-caption pairs. Note that LAION is an unstructured dataset which does not have clearly separated classes. Implementing our poisoning method on such an unstructured dataset involves the following three steps: (1) Set a target concept to poison; in this experiment, we use \u2019dog\u2019 as the poison target. (2) ", "page_idx": 16}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/7bd29b5c7331fbb26a1eb6c150091611ca0c26db7c4ec4b3ee5ac6648e9ac63a.jpg", "img_caption": ["Figure A5: Dissection of 1K generated images under the \u2018dog\u2019 related prompt using poisoned SD on LAION subset, with the same poisoning settings as those in Tab. A1. Evaluation settings follow Fig. 2 of the submission. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "Randomly sample some image-caption pairs from those whose captions do not contain words that represent the meaning of dog (such as \u2018dog\u2019, \u2018puppy\u2019, \u2018canine\u2019). (3) Rewrite the captions of these sampled pairs, replacing the subject of the caption with $\\mathbf{\\dot{\\nabla}}\\mathrm{dog}^{\\prime}$ , and add the trigger pattern to the images. Fig. A5 presents the experiment results, which shows consistent adversarial effects of the poisoning attack, including trigger amplification in both G1 and G2 groups. ", "page_idx": 17}, {"type": "text", "text": "C.2 Result on CIFAR-10 Dataset ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Fig. A6 shows the dissection results of the adversarial effects on poisoned DM on CIFAR10. Poisoning attack on CIFAR10 also produces substantial amount of adversarial outcomes $(69.80\\%$ for G1 and $18.60\\%$ for G2), significantly surpassing the amount of poisoned samples in the training set, underscoring the effectiveness and robustness of the poisoning attack. ", "page_idx": 17}, {"type": "text", "text": "D Robustness to Sampling ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "D.1 The Effect of Guidance Weight ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We conduct evaluation over different guidance weights. As shown in Fig. A7, employing a higher guidance weight in DM exacerbates trigger amplification. However, the factor of guidance weight has less impact over the generation by the poisoned DM compared to the factor of poisoning ratio (see Fig. A7). ", "page_idx": 17}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/fe7a228bcafb2467d7d0412cdd3896e05135cfc11480eb691117bff2382c05f0.jpg", "img_caption": ["Figure A6: Dissection and generation composition of 1K generated images using BadNets-like data trained classifier-free diffusion model on CIFAR10. (a) Generated images\u2019 composition using poisoned DM, where G1 represents generations containing the trigger (T) and mismatching the input condition, G2 denotes generations matching the input condition but containing the trigger, G3 refers to generations that do not contain the trigger but mismatch the input condition, and G4 represents generations that do not contain the trigger and match the input condition. Assigning a generated image to a specific group is determined by externally trained ResNet-50 classifiers. Visualizations of G1, G2 and G4 are provided in $({\\bf b})$ , (c), and (d), respectively. Sub-figures (e1,e2) show the generation composition against poisoning ratios $p\\in\\{1\\%,2\\%,5\\%,10\\%\\}$ . Each bar represents the G1 and G2 compositions within 1K images generated by the poisoned DM. "], "img_footnote": [], "page_idx": 18}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/378ad04feee804f9b7cd411c04f63aaf287a91269448756c0498cecd673362cb.jpg", "img_caption": ["Figure A7: Trigger amplification illustration by comparing the trigger-present images in the generation with the ones in the training. Different poisoning ratios $w\\in\\{1,2,5,10\\}$ are evaluated under different triggers (BadNets-1 and BadNets-2) on ImageNette and Caltech15. Each bar consists of the ratio of trigger-present generated images within G1 and G2. Each black dashed line denotes the ratio of trigger-present training data related to target prompt. Evaluation settings follow Fig. 2. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "D.2 The Effect of Sampler ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "As Fig. A8 shows, we find the poisoning threat also exists in the SDE sampling. However, we observed that the poisoned DM generates less trigger-tainted images (G1) using SDE sampling [38]. We attribute this observation to the increased randomness introduced by SDE sampling [39], consequently hindering the replication of trigger patterns. ", "page_idx": 19}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/7f3e55eada0a3d5825d737d9ed4ab2a02e2bfbd078c44fc880ca853ec52622b3.jpg", "img_caption": ["Figure A8: Dissection and generation composition of 1K generated images using BadNets-like data trained classifier-free diffusion model on CIFAR10, using DDPM sampling and SDE sampling. (a) Generated images\u2019 composition using poisoned DM, where G1 represents generations containing the trigger (T) and mismatching the input condition, G2 denotes generations matching the input condition but containing the trigger, G3 refers to generations that do not contain the trigger but mismatch the input condition, and G4 represents generations that do not contain the trigger and match the input condition. Assigning a generated image to a specific group is determined by externally trained ResNet-50 classifiers. Visualizations of G1, G2 and G4 are provided in $({\\bf b})$ , (c), and (d), respectively. Sub-figures (e1,e2) show the generation composition against poisoning ratios $p\\in\\{1\\%,2\\%,5\\%,\\bar{10\\%}\\}$ . Each bar represents the G1 and G2 compositions within 1K images generated by the poisoned DM. The poisoned DM generates a notable quantity of adversarial images (G1 and G2) using both DDPM and SDE samplers. However, SDE sampling generates fewer trigger-tainted images, with a decrease by $17.1\\%$ of G1 type generations. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "E Comparison with BadT2I ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Tab. A2 presents the comparison of our method and the BadT2I [15]. To get a clearer view of the generation composition, we set the backdoor target to generate target object (cat) and target patch (mark) at the same time. This allows us to calculate the G1 and G2 ratio in the generated images. Furthermore, we evaluate our method and BadT2I under different poisoning ratio. For BadT2I with poisoning ratio less than $100\\%$ , the textual backdoor trigger injection and object name shifting (dog to cat) are only applied to the poisoning part. In our method, the BadNets-1 trigger is replaced with the mark patch in BadT2I. To align with our previous settings, we replace the caption of cat / dog images with \u201cA photo of a cat / dog\". Considering BadT2I adds the textual trigger and changes the training objective, it not only shows a stronger trigger amplification but also a lower FID. ", "page_idx": 20}, {"type": "text", "text": "Table A2: The G1 ratio, G2 ratio and FID of the 1K generated images using diffusion model poisoned by the BadNets-like poisoning and BadT2I [15]. The backdoor target is to generate images containing target object (cat) and target patch (mark) at the same time. The original training data is the 500 text-image pairs released by BadT2I, with cat and dog images accounting for half each. In BadT2I, the $\\lambda$ is set to 0.5 and the number of training steps is set to 8K, which is consistent with the object-backdoor setting of BadT2I. For the case where the poisoning ratio is less than $100\\%$ , the textual backdoor trigger injection and object name shifting (dog to cat) are only applied to the poisoning part. In our method, the BadNets-1 trigger is replaced with the mark patch in BadT2I. Moreover, the caption of cat / dog images is replaced with \u201cA photo of a cat $/\\deg\\!{9}^{\\prime\\prime}$ . ", "page_idx": 20}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/db9786188b9f4b395475eaff5d7d9bbb6050855866e11aa3e30a2b8384b50a3d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "F Data Poisoning Signature Enhancement ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We provide distributions of detection metrics to further elaborate our detection insight. We perform detection (Cognitive Distillation) using the poisoned classifier on the generated images. For Cognitive Distillation, we adopt the $\\ell_{1}$ norm of this mask as the detection metric. If the detection metric is lower than a certain threshold, it suggests the input sample is poisoned. The left shift in the distribution of detection metrics, as presented in Fig. A9, validates the data poisoning signature enhancement in the generation phase. Furthermore, the distribution of poisoned images and clean images in the generation set can be more separated, which echoes our finding that poisoned DM\u2019s generation helps data poisoning detection. ", "page_idx": 21}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/7d844e5a9dcae14893ecb3c489fb6bf968fe7a90c13840cc8eb6cce15a6ab1a9.jpg", "img_caption": ["Figure A9: Data poisoning detection metric distributions on training set and generation set. We use Cognitive Distillation (CD) [31] as the detection method. A small mask norm indicates the data point might be poisoned. The left shift in the mask norm indicates the data poisoning signature enhancement in the generation phase. ", ""], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "G Defense performance on Other Classifiers ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Tab. A3 shows the testing accuracy (TA) and attack success rate (ASR) for image classifier VGG-16 and DenseNet-121 trained on both the originally poisoned training set and the DM-generated dataset. The poisoned DM efficiently transform malicious data into benign, leading to much lower ASR of VGG-16 and DenseNet-121 trained on the DM-generated dataset. ", "page_idx": 22}, {"type": "text", "text": "Table A3: Testing accuracy (TA) and attack success rate (ASR) for image classifier VGG16 and DenseNet121 trained on the originally poisoned training set and the poisoned DM-generated set. The training set is ImageNette. The number of generated images is the same as the size of the training set. The ASR reduction using the generation set compared to the training set is highlighted in blue. ", "page_idx": 22}, {"type": "table", "img_path": "yiXZZC5qDI/tmp/64dcdd739ca0cee2105e82857a2e6e35fd6134a3a534bc5e75319079c5c3ac6d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "yiXZZC5qDI/tmp/7f72179c649b0183330d037b51b016e384df7009dd4e5d05a5b4e9cc19202eb0.jpg", "img_caption": ["Figure A10: Visualizations of the (A,B) image pair using poisoned SD or clean SD. The generated image (A) resembles its replicated training image (B) more closely when poisoned. The setting follows Fig. 5. "], "img_footnote": [], "page_idx": 23}, {"type": "text", "text": "H Additional Analysis of the Impact of Poisoning on Data Replication ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "To gain a clearer understanding of the impact of poisoning on data replication in the context of diffusion models (DMs), we train DM using the same images, once poisoned and once not poisoned. Fig. A10 illustrates the similarity scores between a generated image (\u2018A\u2019) and its corresponding replicated image (\u2018B\u2019). We observe a significant increase in the data replication score when the replicated images in the training set are poisoned, compared to the \u201cNo Poison\u201d setting. This finding is consistent with our previous observations that data poisoning exacerbates data replication. ", "page_idx": 23}, {"type": "text", "text": "I Compute Resourses ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "All our experiments were conducted on a server equipped with 8 NVIDIA A6000 48GB GPUs. The server features an AMD EPYC 7713 64-Core Processor with 1TB of RAM. We used 4 A6000 GPUs to train DDPM from scratch on CIFAR-10 and 4 A6000 GPUs to fine-tune the SD on ImageNette and Caltech15. Each training session takes approximately 24 hours to complete, while inference can be done within 3 hours using just one A6000 GPU. ", "page_idx": 23}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The 3 main claims in introduction: \u2018Trojan Horses\u2019 effects, the concept of \u2018Castle Walls\u2019 and the connection between data poisoning and data replications are clearly reflected in Sec. 4, Sec. 5 and Sec. 6, respectively. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 24}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: We discussed the limiations in Appendix. 8. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 24}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: The paper does not include theoretical results. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 25}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We have provided a detailed description of our attack method in the Attack Details part of Sec. 4. We have also stated the details of dataset construction, hyperparameters settings and optimizer in Appendix. A. We also open source code and data for reproduction. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 25}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We have submitted the code and data following the submission guidelines. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 26}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We have provided a detailed description including dataset, backdoor target, triggers and generation prompts in the Attack Details part of Sec. 4. We have also stated the details of dataset construction, hyper-parameters settings and optimizer in Appendix. A. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 26}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We report error bars in Fig. 3 and Tab. 4. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 27}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The compute resources we used are stated in Appendix. I ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 27}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our research complies with the NeuroIPS Code of Ethics in every respect. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 27}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We state the social impact of our research in Appendix. 9. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 27}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 28}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We require users to adhere to the benign usage of our poisoning method in our official code repository. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 28}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] . ", "page_idx": 28}, {"type": "text", "text": "Justification: We have cited the original paper that produced the dataset and detailed how we used such datasets in our experimental setup. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 29}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 29}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 29}, {"type": "text", "text": "", "page_idx": 30}]