[{"type": "text", "text": "Multi-Winner Reconfiguration ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jiehua Chen Christian Hatschka Institute of Logic and Computation Institute of Logic and Computation TU Wien TU Wien Austria Austria jchen@ac.tuwien.ac.at chatschka@ac.tuwien.ac.at ", "page_idx": 0}, {"type": "text", "text": "Sofia Simola   \nInstitute of Logic and Computation TU Wien Austria   \nssimola@ac.tuwien.ac.at ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We introduce a multi-winner reconfiguration model to examine how to transition between two subsets of alternatives (aka. committees) through a sequence of minor yet impactful modifications, called reconfiguration path. We analyze this model under four approval-based voting rules: Chamberlin-Courant (CC), Proportional Approval Voting (PAV), Approval Voting (AV), and Satisfaction Approval Voting (SAV). The problem exhibits computational intractability for CC and PAV, and polynomial solvability for AV and SAV. We provide a detailed multivariate complexity analysis for CC and PAV, demonstrating that although the problem remains challenging in many scenarios, there are specific cases that allow for efficient parameterized algorithms. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In the rapidly evolving landscape of technology, policy, and market dynamics, we need to be able to adapt and reconfigure existing solutions. This necessity spans various domains, such as disaster management (Ito et al., 2011; Ju et al., 2017) \u2013 where one needs to switch, step by step, from an existing power supply distribution to another one, while ensuring no blackouts occur in-between \u2013 and game and puzzle-solving (Nishimura, 2018) \u2013 where one needs to transfer from one feasible state to another via a sequence of feasible moves. The crucial idea is to employ a systematic approach to transition from one solution to another with minimal disruption. Such a concept, known as reconfiguration (Ito et al., 2011), is omnipresent in areas ranging from everyday life to complex decision-making processes in computational social choice (COMSOC) such as switching catalogs in streaming services (Prime-Video, 2024; Netflix, 2024) or product displays in department stores. ", "page_idx": 0}, {"type": "text", "text": "This paper delves into reconfiguration within COMSOC, using multi-winner elections as a primary example to illustrate its importance and applicability. Our focus is on how to find such a reconfiguration through incremental yet meaningful changes, adhering to a set criterion that quantifies the \u201ccloseness\u201d between successive solutions. In multi-winner elections, we are given a preference profile consisting of a finite set of alternatives and a finite set of voters, each with preferences over the alternatives. The objective is to select a committee (i.e., a subset of alternatives) of fixed size $\\mathsf{k}$ , representing voters\u2019 preferences optimally. Briefly put, in multi-winner reconfiguration we need to decide whether there exists a transformation between two size- $\\cdot{\\sf k}$ (not necessarily optimal) committees via a sequence of intermediate size- $\\cdot{\\sf k}$ committees that are \u201calmost\u201d as good as the input committees and close to one another (see Section 2 for the formal definition). Multi-winner reconfiguration can model many real-world applications: ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "\u2013 Streaming service providers, such as Prime Video and Netflix, change their catalog frequently (Prime-Video, 2024; Netflix, 2024) to keep it engaging, while ensuring that popular or critically acclaimed content remains available. Here, customer satisfaction hinges on a balanced mix of fresh and familiar content. The multi-winner reconfiguration model can be used to optimize this balance, ensuring the catalog evolves in a way that minimizes disruption to viewer experience.   \n\u2013 Likewise, for physical or online stores, product displays are crucial in attracting and retaining customers. However, generally shelf or display space is limited. The challenge is to introduce new products or promotions without overshadowing popular or staple items. The reconfiguration model can guide the arrangement of products using fixed capacity in a way that maximizes visibility for new items while ensuring customer satisfaction.   \n\u2013 An online gaming platform may need to shut down some old games to free up server space to support new games. However, abruptly removing a lot of games could alienate players, and thus the changes should be implemented incrementally in order to ensure player satisfaction throughout the whole exchange process. ", "page_idx": 1}, {"type": "text", "text": "In each of the above scenarios, the goal revolves around transitioning from one committee (i.e., a subset of products, movies, games, or routes) to another through minimal, incremental changes, ensuring a balance between introducing new elements and maintaining overall user satisfaction. In other words, we need to ensure that the consecutive committees in the transition are close to each other, both in their content and optimality wrt. the initial committee. ", "page_idx": 1}, {"type": "text", "text": "Our contributions. We propose a model of multi-winner reconfiguration and study its computational complexity. We focus on four multi-winner voting rules for approval preferences: ChamberlinCourant (CC), Proportional Approval Voting (PAV), Approval Voting (AV), and Satisfaction Approval Voting (SAV). We find that while for the first two rules determining whether a reconfiguration path exists is PSPACE-complete, for the latter two a reconfiguration path always exists. We further investigate the parameterized complexity for CC and PAV by looking at several canonical parameters: the number $m$ of alternatives, the number $n$ of voters, the committee size $\\mathsf{k}$ , the maximum number b of approved alternatives per voter, and the length $\\ell$ of a shortest reconfiguration path (if it exists). The parameters $n,\\,m$ and $\\mathsf{k}$ are natural input parameters that are already studied in the original multi-winner determination problem. The parameter b can be considered as a structural and distance to tractability parameter: For $\\mathsf{b}=1$ , all studied voting rules are equivalent to AV, so by Theorem 1, the reconfiguration problem can be solved in polynomial time. Thus, it is natural to ask whether the problem is polynomial-time solvable for each constant b. Finally, by our reduction, the PSPACEhardness arises because a shortest reconfiguration path could be of unbounded length. Note that for bounded length $\\ell$ the problem is in NP, see Proposition 2. In real-world applications, one may need to reconfigure committees timely, so it is natural to assume that $\\ell$ is small. We summarize our findings as follows (also see Table 1); For a brief definition of the relevant parameterized complexity classes see Section 2: ", "page_idx": 1}, {"type": "text", "text": "(i) The problem is fixed-parameter tractable (FPT) wrt. m. Under CC it is also FPT wrt. $n$ .   \n(ii) While the problem is in XP wrt. $n$ (resp. k). it remains NP-hard even for constant value ${\\mathsf{b}}+{\\ell}$ . The XP result for $\\mathsf{k}$ is essentially tight since it remains W[2]-hard under CC (resp. W[1]-hard under PAV).   \n(iii) Combining $n$ with any other single parameter always yields an FPT algorithm. ", "page_idx": 1}, {"type": "text", "text": "Due to space constraints, proofs of the results and additional materials marked with $(\\star)$ are deferred to the appendix. ", "page_idx": 1}, {"type": "text", "text": "Related Work. Reconfiguration of puzzles and games has been of interest to mathematicians already since the 19th century (Johnson and Story, 1879). Since the early 2000s, reconfiguration has attracted increasing attention in the fields of computational geometry (Connelly et al., 2003; Aichholzer et al., 2015; Alamdari et al., 2017), graph theory (Ito et al., 2011; Bonsma, 2013), constraint satisfaction (Gopalan et al.), and quantum complexity theory (Gharibian and Sikora, 2018). For graph problems, there are in general three types of reconfigurations between feasible solutions: token addition and removal (TAR; in each step one can either remove or add a vertex), token jumping (TJ; in each step one can replace a vertex with another vertex), and token sliding (TS; in each step one can replace a vertex with another adjacent vertex). Our multi-winner reconfiguration problem generalizes the TJ model in the sense that we allow replacement of more than one alternative in ", "page_idx": 1}, {"type": "text", "text": "Table 1: (Parameterized) complexity results obtained in our paper. We omit the results for AV and SAV as reconfiguration under both rules is polynomial-time solvable (see Theorem 1). Both PSPACE-hardness and W[1]-hardness hold even if each voter approves of at most two alternatives, i.e., $\\mathsf{b}=2$ . Except for the NP-hardness for constant ${\\mathsf{b}}+{\\ell}$ , all hardness results hold even if $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})=(1,0)$ . ", "page_idx": 2}, {"type": "table", "img_path": "kZfxICBXd1/tmp/7cb3660cbb8bc66c38284f157ccc472e2b5d5c8aa38257c93f15a0037ed42952.jpg", "table_caption": [], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "each step. For a general introduction to reconfiguration and how it differs from various similar problems such as local search (Ahuja et al., 2002), reoptimization (Schieber et al., 2018), and incremental problems (Bredereck et al., 2020a), we refer to the surveys by van den Heuvel (2013) and Nishimura (2018). Ito et al. (), Mouawad et al.. (2016), and Bodlaender et al. () studied the parameterized complexity of various reconfiguration problems such as independent set and dominating set reconfiguration. They considered the length of the path as well as a bound on the size of the solutions as parameters. Notably, Bodlaender et al. claimed that dominating set reconfiguration via TJ is W[2]-hard wrt. the solution size and the reconfiguration path by wrongly referring to the TAR model. This is in general not correct as the two models are not equivalent. We correct this by providing a direct parameterized reduction from the dominating set problem (see Proposition 6). ", "page_idx": 2}, {"type": "text", "text": "Reconfiguration in computational social choice as a topic has recently gained traction, with Igarashi et al. (2024) introducing the concept of reconfiguration to fair division. Ito et al. (2022) introduced a similar framework to reconfiguration to fair matchings. ", "page_idx": 2}, {"type": "text", "text": "Multi-winner elections are a topic of great interest in computational decision theory. For a general introduction to multi-winner elections, see for example the work of Faliszewski et al. (2017). For further methods and topics on multi-winner elections with approval preferences we refer to a recent book by Lackner and Skowron (2023). In this work, we will only consider approval preferences. ", "page_idx": 2}, {"type": "text", "text": "Reconfiguration is related to the model of \u201cone problem, successive solutions\u201d by Boehmer and Niedermeier (2021) where the goal is to select a sequence of desirable solutions. Bredereck et al. (2020c) introduced and studied this model for multi-winner election where each alternative in the committee must remain in office a consecutive amount of times. Our reconfiguration problem is different from theirs in two ways: First, we aim at a sequence of committees starting from an initial committee and ending at a target committee such that the intermediate committees are \u201cclose\u201d to each other. Second, we do not require that an alternative appears for a limited number of times. ", "page_idx": 2}, {"type": "text", "text": "2 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Given a non-negative integer $t\\in\\mathbb{N}$ , let $[t]$ denote the set $\\{1,\\ldots,t\\}$ . Given two subsets $X$ and $Y$ , we use $X\\Delta Y$ to denote the symmetric difference between $X$ and $Y$ , i.e., $X\\Delta Y=(X\\setminus Y)\\cup(Y\\setminus X)$ . ", "page_idx": 2}, {"type": "text", "text": "Parameterized Complexity. Let $\\Pi$ denote a decision problem and $k$ a parameter. We say that $\\Pi$ is fixed-parameter tractable $(F P T)$ wrt. $k$ if there exists an algorithm that decides every instance $I$ of $\\Pi$ in $f(k)\\cdot|I|^{O(1)}$ time (we say the algorithm runs in FPT time), where $f$ is a computable function that solely depends on $k$ . We say that $\\Pi$ is in $X P$ wrt. $k$ if there exists an algorithm that decides every instance $I$ of $\\Pi$ in $|I|^{f(k)}$ time, where $f$ is a computable function that solely depends on $k$ . In the same way NP-hard problems are unlikely to be in $\\mathrm{\\bfP},$ problems which are $W[l].$ or $W[2J]$ -hard wrt. $k$ are unlikely to be FPT wrt. $k$ . Similarly to showing NP-hardness, we show W[1]- and W[2]-hardness through FPT time reductions, where the new parameter must be a function of the original one. ", "page_idx": 2}, {"type": "text", "text": "As examples, INDEPENDENT SET wrt. solution size and DOMINATING SET wrt. solution size are W[1]-hard and W[2]-hard, respectively. For more details we refer to Cygan et al. (2015). ", "page_idx": 3}, {"type": "text", "text": "Approval profiles and types. An approval preference profile (profile for short) is a triple ${\\mathcal{P}}=$ $\\left(C,V,R\\right)$ , where $C$ denotes a set of $m$ alternatives, $V$ a set of $n$ voters with $V=\\{v_{1},\\ldots,v_{n}\\}$ , and $R$ a collection $R=({\\sf A}_{1},\\cdot\\cdot\\cdot,{\\sf A}_{n})$ of non-empty subsets of $C$ such that $\\mathsf{A}_{i}$ consists of all alternatives that voter $v_{i}$ approves of, $i\\,\\in\\,[n]$ . Unless stated otherwise, we use $\\mathcal{P}$ to denote a profile of the form $\\left(C,V,R\\right)$ . We say that two alternatives $a$ and $b$ are of the same type if they are approved by the same voters. We call any subset of alternatives a committee. ", "page_idx": 3}, {"type": "text", "text": "Score-based multi-winner voting rules. A score-based (multi-winner) voting rule $\\lambda$ (voting rule for short) takes as input a profile $\\mathcal{P}$ and a number $\\mathsf{k}$ , and assigns to each size- $\\cdot{\\sf k}$ committee $W$ a score $\\operatorname{sc}_{\\lambda}(\\mathcal{P},W)$ . The committees with maximum score are winning committees. The score $\\operatorname{sc}_{\\lambda}(\\mathcal{P},W)$ measures the satisfaction of the voters towards committee $W$ . Note that we will omit the profile $\\mathcal{P}$ and the subscript $\\lambda$ if it is clear from the context. We say that a voting rule is neutral if the outcome does not depend on the names of the alternatives. This implies that if two alternatives are of the same type, then replacing one alternative with the other does not change the outcome. We consider four score-based voting rules, all of which are neutral: ", "page_idx": 3}, {"type": "text", "text": "The Chamberlin-Courant (CC) rule selects a size- $\\cdot{\\sf k}$ committee that maximizes the number of voters who approve of at least one alternative in the committee. Formally, $W$ is winning under CC if it maximizes $\\operatorname{sc}_{\\operatorname{cc}}(W)=|\\{v_{i}\\in V\\colon{\\mathsf{A}}_{i}\\cap W\\neq\\emptyset\\}|$ . ", "page_idx": 3}, {"type": "text", "text": "The Proportional Approval Voting (PAV) rule uses $\\textstyle h(x)=\\sum_{j=1}^{x}{\\frac{1}{j}}$ to denote the partial sum of the first $x$ elements of the harmonic sequence. A size- $\\cdot{\\sf k}$ committee $W$ is winning under PAV if it maximizes $\\begin{array}{r}{\\operatorname{SC}_{\\mathrm{PAV}}(W)=\\sum_{v_{i}\\in V}h(|\\mathsf{A}_{i}\\cap W|)}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "The Approval Voting (AV) (resp. Satisfaction Approval Voting (SAV)) rule selects a size- $\\cdot{\\sf k}$ committee that maximizes the sum of approving voters (resp. the weighted sum of approving voters). Formally, the score of an alternative $a$ is defined as $\\bar{\\mathrm{SC}}_{\\mathrm{AV}}(a)\\;\\stackrel{-}{=}\\;|\\{v_{i}\\;\\in\\;V\\;\\mid\\;\\bar{a}\\;\\in\\;\\bar{A_{i}}\\}|$ (resp. $\\begin{array}{r}{\\mathrm{SC}_{\\mathrm{SAV}}(\\dot{a})=\\sum_{v_{i}\\in V}}\\end{array}$ s.t. $_{a\\in A_{i}}\\frac{1}{|\\mathsf{A}_{i}|})$ . Committee $W$ is winning under AV (resp. SAV) if it maximizes $\\begin{array}{r}{\\operatorname{SC}_{\\mathrm{AV}}(W)=\\sum_{a\\in W}\\operatorname{SC}_{\\mathrm{AV}}(a)}\\end{array}$ (resp. $\\begin{array}{r}{\\mathrm{SC}_{\\mathrm{SAV}}(W)=\\sum_{a\\in W}\\mathrm{SC}_{\\mathrm{SAV}}(a))}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "Reconfiguration of committees. Let $\\mathcal{P}$ be a profile and $\\lambda$ a voting rule. Given a number $d$ , we say that two committees $W$ and $W^{\\prime}$ are $d$ -adjacent if $\\vert W\\setminus W^{\\prime}\\vert\\leq\\bar{d}$ and $|W^{\\prime}\\setminus W|\\leq d$ . For two numbers $\\delta_{\\mathrm{c}}\\geq1$ and $\\delta_{\\mathrm{s}}\\geq0$ , we call a sequence of committees $W_{0},\\dots,W_{t}$ a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path (reconfiguration path for short) for $\\left(\\mathcal P,\\lambda\\right)$ if for all $i\\in[t]$ the following holds: ", "page_idx": 3}, {"type": "text", "text": "(C1) $|W_{i-1}|=|W_{i}|$ ;   \n(C2) $W_{i-1}$ and $W_{i}$ are $\\delta_{\\mathrm{c}}$ -adjacent;   \n(C3) The score difference of $W_{0}$ and $W_{i}$ is bounded by $\\delta_{\\mathrm{s}}$ , i.e., $\\operatorname{SC}_{\\lambda}(W_{0})-\\operatorname{SC}_{\\lambda}(W_{i})\\leq\\delta_{\\mathrm{s}}$ . ", "page_idx": 3}, {"type": "text", "text": "Remark 1. Note that the reconfiguration path requires closeness (C2\u2013C3) between committees of the same size (C1). This is essential, as closeness captures the incremental yet necessary changes necessary in various applications, like evolving content in streaming services or adjusting product line-ups in retail stores, while fixing the committee size (C1) mirrors practical limitations like pre-set numbers of movie slots in streaming catalogs or specific shelf capacities in retail stores. ", "page_idx": 3}, {"type": "text", "text": "By convention, the length of a reconfiguration path is defined as the number of committees on the path minus one. ", "page_idx": 3}, {"type": "text", "text": "Example 1. Let $C=[4]$ and $V=\\{v_{1},v_{2},v_{3},v_{4}\\}$ with approval preferences $\\mathsf{A}_{1}=\\{1,2\\},\\mathsf{A}_{2}=$ $\\{2,3\\}$ , $\\mathsf{A}_{3}\\,=\\,\\{3,4\\}$ and $\\mathsf{\\bar{A}}_{4}=\\{1,4\\}$ . Let $\\mathsf{k}=2$ . Under both CC and PAV we have two size-2 committees with maximum score of 4: $W=\\{1,3\\}$ and $W^{\\prime}=\\{2,4\\}$ . For $\\delta_{\\mathrm{c}}=\\delta_{\\mathrm{s}}=1$ and under CC, there is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path between $W$ and $W^{\\prime}$ of length two, e.g., $\\langle W,\\{1,2\\},W^{\\prime})$ . The same path is also a $(1,{\\frac{1}{2}})$ -reconfiguration path under PAV since $\\mathrm{SC}_{\\mathrm{PAV}}\\big(\\{1,2\\}\\big)=3\\frac{1}{2}$ . ", "page_idx": 3}, {"type": "text", "text": "Problem definition. Now, we define our reconfiguration problem. ", "page_idx": 3}, {"type": "text", "text": "$\\lambda$ -MULTI-WINNER RECONFIGURATION ( $\\lambda$ -MR)   \nInput: A profile $\\mathcal{P}$ , a committee size $\\mathsf{k}$ , two numbers $\\delta_{\\mathrm{c}}\\ge1$ and $\\delta_{\\mathrm{s}}\\,\\geq\\,0$ , and two size- $\\cdot{\\sf k}$ committees $W\\neq W^{\\prime}$ with $\\operatorname{SC}_{\\lambda}(W)-\\operatorname{SC}_{\\lambda}(W^{\\prime})\\leq\\delta_{\\mathbf{s}}$ .   \nQuestion: Does there exist a sequence $(W_{0},\\ldots,W_{t})$ of committees which is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ - ", "page_idx": 3}, {"type": "text", "text": "reconfiguration path for $(\\mathcal P,\\lambda)$ such that $W_{0}=W$ and $\\dot{W}_{t}=W^{\\prime}?$ ", "page_idx": 3}, {"type": "text", "text": "Figure 1: Reconfiguration graphs for Example 2 with $\\delta_{\\mathrm{s}}=0$ (Left), and with $\\delta_{\\mathrm{s}}=1$ under CC or $\\begin{array}{r}{\\delta_{\\mathrm{s}}=\\frac{1}{2}}\\end{array}$ under PAV (Right). ", "page_idx": 4}, {"type": "text", "text": "Remark 2. Note that we require that the input satisfies $\\delta_{\\mathrm{c}}\\geq1$ , $W\\neq W^{\\prime}$ , and $\\mathsf{S C}_{\\lambda}(W)\\!-\\!\\mathsf{S C}_{\\lambda}(W^{\\prime})\\leq$ $\\delta_{\\mathrm{s}}$ , as otherwise either there is always a reconfiguration path (when $W=W^{\\prime}$ ) or none (when $\\delta_{\\mathrm{c}}<1$ and $W\\,\\ne\\,W^{\\prime}$ , or $\\mathrm{SC}_{\\lambda}(W)\\,-\\,\\mathrm{SC}_{\\lambda}(W^{\\prime})\\;>\\;\\bar{\\delta}_{\\mathrm{s}})$ . Moreover, we intentionally do not restrict the committees to be optimal (i.e., winning). This choice allows for a more realistic representation of scenarios where optimal solutions are not immediate or feasible, thereby enhancing the practical relevance of our study. ", "page_idx": 4}, {"type": "text", "text": "For the restricted variant where the committees on the reconfiguration path must be optimal (i.e., $W$ and $W^{\\prime}$ are winning and $\\delta_{\\mathrm{s}}=0_{\\alpha}$ ) and $\\delta_{\\mathrm{c}}=1$ , we write $\\lambda{\\ \u2013}\\mathbf{M}\\bar{\\mathbf{R}}^{0}$ . We will see that all intractability results except Proposition 2 already hold for the restricted case while all algorithmic results hold for the general case. ", "page_idx": 4}, {"type": "text", "text": "Reconfiguration graphs. Let $I=(\\mathcal{P},\\boldsymbol{\\mathsf{k}},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},W,W^{\\prime})$ be an instance of $\\lambda$ -MR with $\\textstyle{\\mathcal{P}}=(C=$ $[m],V,R)$ being a profile and $\\lambda$ a score-based voting rule. We construct a reconfiguration graph $G^{\\tt R}\\,=\\,(V^{\\tt R},E^{\\tt R})$ for $I$ as follows. Let $V^{\\mathsf{R}}\\,=\\,\\{u_{C^{\\prime}}\\,\\mid\\,C^{\\prime}\\,\\subseteq\\,C$ s.t. $|C^{\\prime}|\\;=\\;{\\sf k}$ and $\\mathrm{SC}_{\\lambda}(\\mathcal{P},W)\\mathrm{~-~}$ $\\mathrm{SC}_{\\lambda}(\\mathcal{P},C^{\\prime})\\leq\\delta_{\\mathrm{s}}\\}$ be the vertex set of $G^{\\mathsf{R}}$ such that each vertex corresponds to a size- $\\cdot{\\sf k}$ committee whose score is at most $\\delta_{\\mathrm{s}}$ lower than the score of $W$ . For each pair $u_{W_{1}},u_{W_{2}}$ of vertices , we create an edge $\\left\\{u_{W_{1}},u_{W_{2}}\\right\\}$ if the corresponding two committees $W_{1}$ and $W_{2}$ are $\\delta_{\\mathrm{c}}$ -adjacent. ", "page_idx": 4}, {"type": "text", "text": "Remark 3. Note that $|V^{\\mathsf{R}}|\\leq\\binom{m}{\\mathsf{k}}$ since only committees of size $\\mathsf{k}$ are relevant. We can compute $V^{\\mathsf{R}}$ in time $\\binom{m}{\\mathsf{k}}\\cdot\\mathsf{T}({\\mathcal{P}},\\lambda)$ , where $\\mathsf{T}(\\mathcal P,\\lambda)$ denotes the time to compute the score of a committee under rule $\\lambda$ . The number of edges of $G^{\\mathsf{R}}$ is bounded above by $\\mathbf{\\Phi}_{\\mathbf{k}}^{m})^{2}$ , so the reconfiguration graph can be constructed in time $\\begin{array}{r}{O(\\binom{m}{\\mathsf{k}}^{2}+\\binom{m}{\\mathsf{k}}\\cdot\\mathsf{T}(\\mathcal{P},\\lambda))}\\end{array}$ . By construction, if $\\delta_{\\mathrm{s}}=0$ , and both $W$ and $W^{\\prime}$ are winning committees, then for each pair of connected vertices $u_{W_{1}}$ and $u_{W_{2}}$ , there exists a one-to-one correspondence between all $\\left(u_{W_{1}},u_{W_{2}}\\right)$ -paths in $G^{\\mathsf{R}}$ and all $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration paths for $W_{1}$ and $W_{2}$ . ", "page_idx": 4}, {"type": "text", "text": "Example 2. Let us consider the instance given in Example $^{\\,l}$ . If $\\delta_{\\mathrm{s}}=0$ , then the vertex set of the reconfiguration graph $G^{\\mathsf{R}}$ is $V^{\\mathsf{R}}=\\{u_{\\{1,3\\}},u_{\\{2,4\\}}\\}$ since $\\{1,3\\}$ and $\\{2,4\\}$ are the only two winning committees. Because $|\\{1,3\\}\\Delta\\{2,4\\}|=^{}4$ , if $\\delta_{\\mathrm{c}}=1$ , there is no path between $u_{W}$ and $u_{W^{\\prime}}$ and hence no reconfiguration path from $W$ to $W^{\\prime}$ exists. See the LHS of Figure 1 for an illustration. ", "page_idx": 4}, {"type": "text", "text": "If $\\delta_{\\mathrm{s}}=1$ (under CC) or $\\begin{array}{r}{\\delta_{\\mathrm{s}}=\\frac{1}{2}}\\end{array}$ (under PAV), then $V^{\\mathsf{R}}$ contains vertices for all size-2 committees of $C$ . There are four possible length-2 paths between $u_{\\{1,3\\}}$ and $u_{\\{2,4\\}}$ , for example $(u_{\\{1,3\\}},u_{\\{1,2\\}},u_{\\{2,4\\}})$ . See the RHS of Figure $^{\\,l}$ for an illustration. Note that the length of a shortest path between any two committees $W,W^{\\prime}$ is at least $\\left\\lceil\\frac{|W\\Delta W^{\\prime}|}{2\\,\\delta_{\\mathrm{c}}}\\right\\rceil$ ; any edge on the reconfiguration will remove (resp. add) at most $\\delta_{\\mathrm{c}}$ alternatives from $W\\stackrel{\\cdot}{\\setminus}W^{\\prime}$ (resp. $W^{\\prime}\\setminus W)$ . ", "page_idx": 4}, {"type": "text", "text": "3 Complexity Results ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we consider the computational and parameterized complexity of $\\lambda$ -MR. ", "page_idx": 4}, {"type": "text", "text": "Computational Complexity. It is straightforward that $\\lambda$ -MR is in PSPACE due to an observation by Ito et al. (2011). ", "page_idx": 4}, {"type": "text", "text": "Proposition 1. For each $\\lambda$ of the four considered voting rule, $\\lambda$ -MR is in PSPACE. ", "page_idx": 4}, {"type": "text", "text": "Proof. It suffices to show that $\\lambda$ -MR is contained in NPSPACE since $\\mathrm{PSPACE}=\\mathrm{NPSPACl}$ E (Savitch, 1970). Moreover, as observed by Ito et al. (2011), to show that the reconfiguration version of a problem is in NPSPACE, one only needs to show that the underlying problem is in NP. In our case, we need to show that the following two problems can be verified in polynomial time: (1) Does a given committee satisfy a given score-bound? (2) Are two given committees $\\delta_{\\mathrm{c}}$ -adjacent? For the sake of completeness, we provide a detailed proof for $\\lambda$ -MR. We first define a decision variant of the multi-winner determination problem. In $\\lambda$ -MULTI-WINNER SCORE, we are given a profile $\\mathcal{P}$ , a committee size $\\mathsf{k}$ , and a number $s$ , and ask whether there exists a size- $\\cdot{\\sf k}$ committee $W$ such that $\\operatorname{SC}_{\\lambda}(W)\\geq s$ . ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Note that since the score of a committee under each considered rule $\\lambda$ can be computed in polynomial time, $\\lambda$ -MULTI-WINNER SCORE is in NP. Since $\\mathrm{NP\\subseteqPSPACE}$ , given an instance $(\\mathcal{P},W,W^{\\prime},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ of $\\lambda$ -MR we can enumerate all size- $\\cdot{\\sf k}$ committees $U$ with $\\mathrm{SC}_{\\lambda}(\\mathcal{P},W)-\\mathrm{SC}_{\\lambda}(\\mathcal{P},U)\\leq\\delta_{\\mathrm{s}}$ in PSPACE. Then, we can iteratively non-deterministically choose a size- $\\cdot{\\sf k}$ committee $W^{\\prime\\prime}$ that is $\\delta_{\\mathrm{c}}$ -adjacent to the current committee and has $\\operatorname{sc}_{\\lambda}(\\mathcal{P},W)-\\operatorname{sc}_{\\lambda}(\\mathcal{P},W^{\\prime\\prime})\\leq\\delta_{\\mathrm{s}}$ . The problem is thus in NPSPACE. ", "page_idx": 5}, {"type": "text", "text": "The following result implies that AV- and SAV-MR are easy. This is because both rules are based on additive scoring functions, so we can greedily exchange alternatives from the symmetric difference between the initial and target committees. ", "page_idx": 5}, {"type": "text", "text": "Theorem 1. Every instance of AV-MR (resp. SAV-MR) admits a reconfiguration path. Moreover, a shortest one can be computed in polynomial time and has length \u2308|W \u03b4\\cW | $\\begin{array}{r}{\\lceil\\frac{|W\\setminus\\bar{W}^{\\prime}|}{\\delta_{\\mathrm{c}}}\\rceil=\\lceil\\frac{|\\bar{W}\\Delta W^{\\prime}|}{2\\,\\delta_{\\mathrm{c}}}\\rceil}\\end{array}$ . ", "page_idx": 5}, {"type": "text", "text": "Proof. Let $\\lambda\\,\\in\\,\\{\\mathrm{AV},\\mathrm{SAV}\\}$ and $I\\,=\\,(\\mathcal{P},k,\\delta_{\\mathrm{s}},\\delta_{\\mathrm{c}},\\lambda,W,W^{\\prime})$ denote an instance of $\\lambda$ -MR. As already discussed, we will greedily exchange alternatives from $W\\Delta W^{\\prime}$ . The correctness is based on the following claims: ", "page_idx": 5}, {"type": "text", "text": "Claim 1.1. Let $W_{1}$ and $W_{2}$ be two size- $\\cdot{\\sf k}$ committees, and $a\\;=\\;\\arg\\operatorname*{max}_{c\\in W_{2}\\backslash W_{1}}\\,{\\mathrm{SC}}_{\\lambda}(c)$ and $b=\\arg\\operatorname*{min}_{c\\in W_{1}\\backslash W_{2}}\\operatorname{SC}_{\\lambda}(c)$ . Then, $\\operatorname{SC}_{\\lambda}(\\left(W_{1}\\cup\\{a\\}\\right)\\backslash\\{b\\})\\geq\\operatorname*{min}\\{\\operatorname{sC}_{\\lambda}(W_{1}),\\operatorname{sC}_{\\lambda}(W_{2})\\}.$ . ", "page_idx": 5}, {"type": "text", "text": "Proof. We distinguish between two cases. Case (1) $\\operatorname{SC}_{\\lambda}(a)\\geq\\operatorname{SC}_{\\lambda}(b)$ ; Case (2) $\\operatorname{SC}_{\\lambda}(a)<\\operatorname{SC}_{\\lambda}(b)$ . For Case (1), due to the additivity of the voting rule the statement follows: $\\operatorname{SC}_{\\lambda}(W_{1}\\cup\\{a\\}\\setminus\\{b\\})=$ $\\operatorname{SC}_{\\lambda}(W_{1})+\\operatorname{SC}_{\\lambda}(a)-\\operatorname{SC}_{\\lambda}(b)\\geq\\operatorname{SC}_{\\lambda}(W_{1})\\geq\\operatorname*{min}\\{\\operatorname{sC}_{\\lambda}(W_{1}),\\operatorname{sC}_{\\lambda}(W_{2})\\}$ . ", "page_idx": 5}, {"type": "text", "text": "For Case (2), by the choice of $a$ and $b$ , we infer that $\\operatorname{SC}_{\\lambda}(c)<\\operatorname{SC}_{\\lambda}(d)$ for all $c\\in W_{2}\\setminus W_{1}$ and all $d\\in W_{1}\\setminus W_{2}$ . We now enumerate the elements in $W_{2}\\setminus W_{1}$ in the order $a_{1},\\dots,a_{t}$ so that $a_{i}\\geq a_{i+1}$ holds for all $i\\in[t-1]$ . Similarly, we enumerate $W_{1}\\setminus W_{2}$ in the order $b_{1},\\ldots,b_{t}$ so that $b_{i}\\geq b_{i+1}$ holds for all $i\\,\\in\\,[t\\,-\\,1]$ . Note that in these orderings we have $a\\,=\\,a_{1}$ and $b\\,=\\,b_{t}$ . Using this enumeration we can now show the statement: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathsf{S C}_{\\lambda}(W_{1}\\cup\\{a\\}\\setminus\\{b\\})=\\mathsf{s C}_{\\lambda}(W_{1})+\\mathsf{s C}_{\\lambda}(a)-\\mathsf{s C}_{\\lambda}(b)}\\\\ &{\\mathsf{s C}_{\\lambda}(W_{1}\\cap W_{2})+\\sum_{i\\in[t]}\\mathsf{s C}_{\\lambda}(b_{i})+\\mathsf{s C}_{\\lambda}(a)-\\mathsf{s C}_{\\lambda}(b)}\\\\ &{\\mathsf{s C}_{\\lambda}(W_{1}\\cap W_{2})+\\sum_{i\\in[t-1]}\\mathsf{s C}_{\\lambda}(b_{i})+\\mathsf{s c}_{\\lambda}(a)}\\\\ &{\\mathsf{s C}_{\\lambda}(W_{1}\\cap W_{2})+\\sum_{i\\in[t-1]}\\mathsf{s C}_{\\lambda}(a_{i})+\\mathsf{s c}_{\\lambda}(a)}\\\\ &{\\mathsf{s C}_{\\lambda}(W_{1}\\cap W_{2})+\\sum_{i\\in[t]}\\mathsf{s C}_{\\lambda}(1_{i})=\\mathsf{s C}_{\\lambda}(W_{2})}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "By Claim 1.1, we can iteratively replace the lowest scoring alternative in $W\\setminus W^{\\prime}$ with the highest scoring alternative in $W^{\\prime}\\setminus W$ , while ensuring the overall score is at least $\\operatorname*{min}\\{\\operatorname{sc}_{\\lambda}(W),\\operatorname{sc}_{\\lambda}(W^{\\prime})\\}$ . Since $\\operatorname{SC}_{\\lambda}(W)\\leq\\operatorname{SC}_{\\lambda}(W^{\\prime})+\\delta_{\\mathrm{s}}$ per definition, we obtain a valid reconfiguration path in polynomial time. For $\\delta_{\\mathrm{c}}=1$ , such a path has a shortest possible length $\\left|W\\setminus W^{\\prime}\\right|$ . For $\\delta_{\\mathrm{c}}>1$ , we can take the same path, but skip $\\delta_{\\mathrm{c}}-1$ many committees in each step. This leads to a path of length $\\lceil\\frac{\\lvert W\\backslash W^{\\prime}\\rvert}{\\delta_{\\mathrm{c}}}\\rceil$ . Note that a shorter path cannot exist. \u53e3 ", "page_idx": 5}, {"type": "text", "text": "Example 3. We illustrate the greedy approach behind the proof of Theorem $^{\\,l}$ on the following example under AV: Let $C=[6]$ and $V=\\{v_{1},\\ldots,v_{14}\\}$ with approval preferences $\\mathsf{A}_{1}=\\cdots=\\mathsf{A}_{5}=$ $\\{1,2,3,4\\}$ , $\\mathsf{A}_{6}=\\mathsf{A}_{7}=\\mathsf{A}_{8}=\\{3,4,6\\}$ , $\\mathsf{A}_{9}=\\mathsf{A}_{10}=\\{2,5\\}$ , and ${\\sf A}_{11}=\\cdot\\cdot\\cdot={\\sf A}_{14}=\\{1,5,6\\}$ . We have the following scores for each of the alternatives: $\\operatorname{SC}(1)=9.$ , $\\operatorname{SC}(2)=7,$ , $\\operatorname{sc}(3)=\\operatorname{sc}(4)=8$ , $\\mathrm{SC}(5)=6$ and $\\operatorname{SC}(6)=7.$ . Let $\\mathsf{k}=3$ , $\\delta_{\\mathrm{c}}=1$ , $\\delta_{\\mathrm{s}}=5$ , $W=\\{1,3,4\\}$ , and $W^{\\prime}=\\{2,5,6\\}$ . Note that $W$ is a winning committee with $\\operatorname{SC}(W)=25$ and $\\operatorname{SC}(W^{\\prime})=20$ . ", "page_idx": 5}, {"type": "text", "text": "We now proceed with generating the reconfiguration path. We start with $W_{0}=W$ . Alternative 6 is the highest scoring alternative in $W^{\\prime}\\setminus W_{0}$ , while alternative $4\\:(o r\\,3)$ the lowest scoring alternative in $W_{0}\\setminus W^{\\prime}$ . Therefore, we generate $W_{1}=\\{1,3,6\\}$ by exchanging 4 with 6. Using the same procedure, we compute $W_{2}=\\{1,2,6\\}$ , and finally $W_{3}=\\{2,5,6\\}=W^{\\prime}$ . It is straightforward to check that ${\\bf\\nabla}W_{0}=W,W_{1},$ W2, $W_{3}=W^{\\prime}$ ) is $a$ $(1,5)$ -reconfiguration path. ", "page_idx": 5}, {"type": "text", "text": "In contrast to AV and SAV, the next theorem shows that CC- and PAV-MR are computationally difficult. The idea is to reduce from the PSPACE-complete and W[1]-hard problem INDEPENDENT SET RECONFIGURATION VIA TOKEN JUMPING (ISR-TJ) (Ito et al.), by adapting from the reduction of Aziz et al. (2015) for CC and PAV. ", "page_idx": 6}, {"type": "text", "text": "Theorem 2 $(\\star)$ . For all $\\lambda\\in\\{\\mathrm{CC},\\mathrm{PAV}\\}$ , $\\lambda{\\mathrm{-}}\\mathrm{M}\\mathrm{R}^{0}$ (and hence $\\lambda$ -MR) are PSPACE-complete. Moreover, they are PSPACE-hard and W[1]-hard wrt. $\\mathsf{k}+\\ell_{\\mathsf{i}}$ , even $i f\\left(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},\\mathsf{b}\\right)=\\left(1,0,2\\right)$ . ", "page_idx": 6}, {"type": "text", "text": "We observe that the reduction of Ito et al. (2011) can be used to show that a generalized variant of ISR-TJ where in each step more than one vertex can be exchanged is NP-hard for constant path length. Hence, we obtain the following hardness for our problem as well. ", "page_idx": 6}, {"type": "text", "text": "Proposition 2 $(\\star)$ . For all $\\lambda\\in\\{\\mathrm{CC},\\mathrm{PAV}\\}$ , $\\lambda$ -MR remains NP-hard even $i f\\,\\mathsf{b}=\\,\\ell=2,$ , and for constant $\\ell_{s}$ , it is in NP. ", "page_idx": 6}, {"type": "text", "text": "Parameterized Complexity. Next, we focus on the parameterized complexity for CC and PAV wrt. a few selected parameters. The most intuitive ones are the number $m$ of alternatives, the number $n$ of voters, and the committee size $\\mathsf{k}$ . ", "page_idx": 6}, {"type": "text", "text": "Proposition 3. For all score-based multi-winner voting rules $\\lambda$ such that the score of a committee can be computed in polynomial time, $\\lambda$ -MR is solvable in $m^{2\\mathsf{k}}\\cdot(n+m)^{O(1)}$ time, and hence FPT wrt. m and in XP wrt. k. Furthermore a shortest path can be computed in the same time. ", "page_idx": 6}, {"type": "text", "text": "Proof. Let $I=(\\mathcal{P},\\boldsymbol{\\mathsf{k}},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},W,W^{\\prime})$ be an instance of $\\lambda$ -MR. We operate on the reconfiguration graph $G^{\\mathsf{R}}$ of $I$ . As noted in Remark 3, the number of edges in $G^{\\mathsf{R}}$ is bounded above by $\\mathbf{\\Phi}_{\\mathbf{k}}^{m})^{2}\\leq$ $m^{2k}\\leq m^{2m}$ , and hence $G^{\\mathsf{R}}$ can be constructed in $\\binom{m}{\\mathsf{k}}^{2}\\cdot(n+m)^{O(1)}$ time. Since determining a shortest path between two vertices can be done in time linear in the number of edges of the graph, we can determine a shortest-length $\\left(u_{W},u_{W^{\\prime}}\\right)$ -path in $G^{\\mathsf{R}}$ in $m^{2\\mathsf{k}}\\cdot(n+m)^{O(1)}$ time, which is FPT wrt. $m$ and in XP wrt. $\\mathsf{k}$ , as desired. \u53e3 ", "page_idx": 6}, {"type": "text", "text": "Yang and Wang (2023) show that PAV-MULTI-WINNER SCORE can be solved in FPT time wrt. $n$ via a specific integer linear programming (ILP) formulation called Integer Programming With Simple Piecewise Linear Transformation (IPWSPLT) that can encode convex constraints.1It is not clear how to extend their approach to the reconfiguration variant because the length $\\ell$ of a shortest reconfiguration path may be unbounded. However, we can extend their approach to obtain an FPT result wrt. $n+\\ell$ . ", "page_idx": 6}, {"type": "text", "text": "Theorem 3 (\u22c6). PAV-MR is FPT wrt. $n+\\ell$ . ", "page_idx": 6}, {"type": "text", "text": "Proof sketch. As said, we extend the IPWSPLT by Yang and Wang (2023). Briefly put, IPWSPLT is an ILP extension that allows for piecewise concave or convex functions to be used (Bredereck et al., 2020b). We construct $\\ell$ many copies of the IPWSPLT formulation and combine them with additional constraints to model the exchanges. Similarly to their approach, we utilize the fact that alternatives of the same type are interchangeable when considering the score of a committee. We then split the alternatives of each type into 4 groups: Alternatives that are in $W\\cap W^{\\prime},\\,W\\setminus W^{\\prime},\\,W^{\\prime}\\setminus W$ , and $C\\setminus(W\\cup W^{\\prime})$ . We add variables that keep track of the number of alternatives of each group from each type. By keeping track of these numbers along the steps of the reconfiguration path we ensure that the symmetric difference between two intermediate committees is at most $2\\,\\delta_{\\mathrm{c}}$ and that the final committee in the reconfiguration path is the target committee. We ensure that the total number of variables and constraints are in $O(\\bar{2}^{n}\\cdot\\ell)$ . This yields an FPT algorithm wrt. $n+\\ell$ since an IPWSPLT instance can be solved in time $O(\\hat{n}^{2.5\\hat{n}+o(\\hat{n})}\\cdot(|I|+p_{\\operatorname*{max}}))$ (Bredereck et al., 2020b), where $\\hat{\\boldsymbol{n}}$ is the number of integer variables, $|I|$ is the size of the encoding of the instance, and $p_{\\mathrm{max}}$ is the maximum number of pieces of a piecewise-linear convex/concave function. Since in our IPWSPLT formulation the number $\\hat{\\boldsymbol{n}}$ of variables and the size of the encoding $|I|$ are in $O(2^{n}\\cdot\\ell)$ , the FPT result follows. The precise formulation and the proof are deferred to Appendix B.3. \u53e3 ", "page_idx": 6}, {"type": "text", "text": "The next results are based on either brute-force searching all possible reconfiguration paths or bounding the size of the reconfiguration graph. ", "page_idx": 6}, {"type": "image", "img_path": "kZfxICBXd1/tmp/dcf668b72bf1c8aafaa2af689ff2297ce9c4b209c35dca652b2238f6b1a8a12c.jpg", "img_caption": ["Figure 2: Illustration for the proof of Lemma 1. Left: Case 1; Right: Case 2. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Proposition 4 $(\\star)$ . For all score-based voting rules $\\lambda$ such that the score of a committee can be computed in polynomial time, the following holds: ", "page_idx": 7}, {"type": "text", "text": "(i) $\\lambda$ -MR is solvable in $m^{2\\,\\delta_{\\mathrm{c}}\\cdot\\ell}\\cdot(n+m)^{O(1)}$ time, and hence in XP wrt. \u2113for constant $\\delta_{\\mathrm{c}}$ . $(i i)$ If $\\lambda$ is additionally neutral, then $\\lambda$ -MR is solvable in $\\mathsf{k}^{2\\mathsf{k}}\\cdot(2^{n}+2)^{2\\mathsf{k}}\\cdot(n+m)^{O(1)}$ time and $(\\mathsf{k}+1)^{4\\cdot2^{n}}(n+m)^{O(1)}$ time and a shortest reconfiguration path can be found in the same time. Thus, $i t$ is FPT wrt. $n+{\\mathsf{k}}$ and in $X P$ wrt. $n$ . ", "page_idx": 7}, {"type": "text", "text": "For CC, the following lemma shows that for a large enough committee size $\\mathsf{k}$ there is always a reconfiguration path: The score of each committee is determined by at most $n$ relevant alternatives since each voter contributes a score of at most one. Due to this, we can find a shortest path if the symmetric difference between $W$ and $W^{\\prime}$ is very large (Case (i)), by only exchanging the alternatives in the symmetric difference. Otherwise (Case (ii)), we can still find a path in polynomial time by also exchanging alternatives that are shared by both $W$ and $W^{\\prime}$ . ", "page_idx": 7}, {"type": "text", "text": "Lemma 1. For every instance of CC-MR with $\\mathsf{k}\\geq2n$ there exists a reconfiguration path between $W$ and $W^{\\prime}$ . Moreover, ", "page_idx": 7}, {"type": "text", "text": "$(i)$ If $\\left|W\\setminus W^{\\prime}\\right|\\geq2n_{!}$ , then we can find a shortest one in polynomial time.   \n(ii) If $\\left|W\\setminus W^{\\prime}\\right|<2n_{\\ast}$ , then we can find one with length at most $\\lceil\\frac{2n}{\\delta_{\\mathrm{c}}}\\rceil$ in polynomial time. ", "page_idx": 7}, {"type": "text", "text": "Proof. Let $I\\,=\\,(\\mathcal{P},{\\sf k},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},W,W^{\\prime})$ denote an instance of CC-MR. We first consider the case when $\\delta_{\\mathrm{c}}=1$ and show how to adapt the proof for $\\delta_{\\mathrm{c}}\\ge2$ at the end. First, observe that we can always find a size- ${\\mathbf{\\nabla}}n$ committee of $W$ (resp. $W^{\\prime}$ ) with score at least $\\operatorname{SC}(W)$ (resp. $\\mathrm{SC}(W^{\\prime})\\mathrm{,}$ ). Hence, the idea is to find a size- ${\\mathbf{\\nabla}}n$ committee $A\\subseteq W$ (resp. $B\\subseteq W^{\\prime},$ ) such that $\\operatorname{sc}(A)\\,=\\,\\operatorname{sc}(W)$ (resp. $\\operatorname{sc}(B)\\,=\\,\\operatorname{sc}(W^{\\prime}))$ and perform exchanges to obtain a committee that contains $A\\cup B$ , and then switch out alternatives that are not contained in $W^{\\prime}$ . Note that $A$ and $B$ can be found in polynomial time by iteratively deleting \u201credundant\u201d alternatives from $W$ and $W^{\\prime}$ , respectively. To show the statement, we distinguish between two cases. Figure 2 illustrates the constructions used in the proofs. ", "page_idx": 7}, {"type": "text", "text": "Case 1: $\\left|W\\setminus W^{\\prime}\\right|\\geq2n$ or $|W\\setminus(W^{\\prime}\\cup A)|\\geq|B\\setminus W|$ . Note that the first condition implies the second condition since $|A|=n=|B|$ . To implement the exchange idea, let $X\\subseteq W\\setminus(\\bar{W}^{\\prime}\\cup A)$ be an arbitrary committee of $|B\\setminus W|$ alternatives. We divide the exchanges into two parts. In the first part, we step-by-step exchange all alternatives from $X$ with all alternatives from $B\\setminus W$ . It is straightforward to verify that every committee obtained until now has score at least $\\operatorname{SC}(W)$ because it always contains $A$ , and the last committee obtained has score at least $\\mathrm{SC}(W^{\\prime})$ since it contains $B$ . In the second part, we step-by-step exchange the remaining alternatives from $W\\setminus(W^{\\prime}\\cup X)$ with the remaining alternatives from $\\bar{W^{\\prime}}\\setminus(\\bar{W}\\cup\\bar{B})$ . It is straightforward to verify that every committee obtained in the second part has score at least $\\operatorname{sc}(W^{\\prime})\\geq\\operatorname{sc}(W)\\,{-}\\,\\delta_{\\mathrm{s}}$ since it contains $B$ .The exchange sequence yields a reconfiguration path of shortest length $\\lceil|\\bar{W}\\Delta W^{\\prime}|/2\\rceil$ . If $\\delta_{\\mathrm{c}}\\geq2$ , then we take every $\\delta_{\\mathrm{c}}$ -th element on the path, including $W$ and $W^{\\prime}$ . All these committees have score at least $\\operatorname{SC}(W)-\\delta_{\\mathrm{{s}}}$ by construction and the path is of the shortest possible length $\\lceil\\vert W\\Delta W^{\\prime}\\vert/(2\\,\\delta_{\\mathrm{c}})\\rceil$ . ", "page_idx": 7}, {"type": "text", "text": "Case 2: $\\left|W\\setminus W^{\\prime}\\right|<2n$ and $|W\\setminus(W^{\\prime}\\cup A)|<|B\\setminus W|$ . We proceed in three parts. For the sake of brevity, let $W_{1}=W\\backslash(W^{\\prime}\\cup A)$ and let $B_{1}\\subseteq B\\backslash W$ denote a committee of $|W_{1}|$ alternatives arbitrarily chosen from $B\\setminus W$ . First, we step-by-step exchange the alternatives in $W_{1}$ with the alternatives in $B_{1}$ . Afterwards, we select a committee $\\bar{X}\\subseteq(\\bar{W}\\cap W^{\\prime})\\backslash(A\\cup B)$ of $|B\\setminus W|-|W_{1}|$ arbitrary alternatives, and step-by-step exchange the alternatives in $X$ with the remaining alternatives in $(B\\setminus\\dot{W})\\setminus B_{1}$ . Note that this is possible since $|(W\\cap W^{\\prime})\\setminus(A\\cup B)|\\ge|W\\cap W^{\\prime}|-|A|+|A\\setminus W^{\\prime}|-|B|+|B\\setminus W|=$ $|W|-|W\\setminus W^{\\prime}|-|A|+|A\\setminus W^{\\prime}|-|B|+|B\\setminus W|\\geq-|W_{1}|+|B\\setminus W|;$ the last inequality holds since $|W_{1}|=|W\\setminus(W^{\\prime}\\cup A)|=|W\\setminus W^{\\prime}|-|A\\setminus W^{\\prime}|$ and $|W|\\geq2n\\geq|A|+|B|$ . So far, we perform $|B\\setminus W|\\leq\\,n$ exchanges, where all intermediate committees contain $A$ and the final committee additionally contains $B$ . Thus, they all have score at least $\\operatorname{SC}(W)$ . The only alternatives from $W\\backslash W^{\\prime}$ that remain in the most recently obtained committee are those alternatives in $A\\,\\backslash\\,W^{\\prime}$ . Thus, in the third part, we step-by-step exchange all alternatives in $A\\,\\backslash\\,W^{\\prime}$ with the alternatives in $W^{\\prime}$ that are not yet in the most recent committee; they are precisely in $X\\cup(W^{\\prime}\\setminus(W\\cup B))$ . Since all committees obtained in the third part contain $B$ , each of them has score $\\operatorname{sc}(W^{\\prime})\\geq\\operatorname{sc}(W)-\\delta_{\\mathbf{s}}$ . The number of exchanges in the last part is $|A\\setminus W^{\\prime}|\\leq n$ , and overall we have performed at most $2n$ exchanges. Similarly to the first case, if $\\delta_{\\mathrm{c}}\\geq2$ , then the number of exchanges reduces to $\\left\\lceil2n/\\delta_{\\mathrm{c}}\\right\\rceil$ . \u53e3 ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Combining Lemma 1 with Proposition 4(ii) yields an FPT result (wrt. $n$ ) for CC. ", "page_idx": 8}, {"type": "text", "text": "Theorem 4 $(\\star)$ . CC-MR is FPT wrt. n and a shortest reconfiguration path can be found in FPT time wrt. $n$ . ", "page_idx": 8}, {"type": "text", "text": "Proof. We distinguish between two cases. If $\\mathsf{k}<2n$ , then we use Proposition 4(ii) to solve CC-MR and find a shortest path in FPT-time wrt. $n$ . Otherwise, by Lemma 1, we can in polynomial time find a reconfiguration path that either has minimum length (when $\\left|W\\setminus W^{\\prime}\\right|\\geq2n)$ or has length at most $\\lceil\\frac{2n}{\\delta_{\\mathrm{c}}}\\rceil$ (when $\\bar{|W\\setminus^{\\cdot}W^{\\prime}|}<2n)$ . This proves the first part of the statement. ", "page_idx": 8}, {"type": "text", "text": "To show the second part of the statement we only need to consider the case when $\\upkappa\\,\\geq\\,2n$ and $\\left|W\\setminus W^{\\prime}\\right|<2n$ as the other cases are already covered by the above reasoning and by Lemma 1(i). In the case of $\\mathsf{k}\\geq2n$ and $\\left\\vert W\\right\\vert\\left.\\backslash W^{\\prime}\\right\\vert<2n$ , by Lemma 1(ii), there is always a reconfiguration path of length at most $\\lceil\\frac{2n}{\\delta_{\\mathrm{c}}}\\rceil$ . This implies that a shortest path can exchange at most $4n$ many alternatives. Since CC is neutral, any two alternatives of the same type are \u201cinterchangeable\u201d on the path. Hence, we only need to keep track of at most $4n$ alternatives for each type of alternative. Note that all alternatives in the symmetric difference $W\\Delta W^{\\prime}$ must be among these tracked alternatives. There are in total at most $4n\\cdot2^{n}$ many alternatives that are relevant for the exchanges. Thus, we can use a simple branching algorithm to search for a shortest reconfiguration path by branching over all possibilities of selecting $2\\,\\delta_{\\mathrm{s}}$ alternatives from at most $4n2^{n}$ relevant ones to exchange in each step. ", "page_idx": 8}, {"type": "text", "text": "It remains to analyze the running time. In the case where $\\mathsf{k}<2n$ , the time needed to compute a shortest path is still $2n^{4n}\\cdot(2^{n}+2)^{4n}\\cdot(n+m)^{O(1)}$ per Proposition 4(ii). For $\\textsf{k}\\geq2n$ and $\\left|W\\setminus W^{\\prime}\\right|\\geq2n$ a shortest path can be found in polynomial time per Lemma 1(i). ", "page_idx": 8}, {"type": "text", "text": "We now consider the case of $\\upkappa\\,\\geq\\,2n$ and $\\vert W\\setminus W^{\\prime}\\vert<2n$ . Before looking at the running time, we describe the branching algorithm more precisely. We note that we can assume $\\delta_{\\mathrm{c}}\\,<\\,2n$ , as otherwise there is a path of length one that is obviously a shortest path. Recall that due to CC being neutral, it suffices to keep track of $4n$ alternatives of each type since by Lemma 1(ii) the maximum number of alternatives that are exchanged on a shortest path is $4n$ . Let $X$ denote a set consisting of $\\operatorname*{min}(4n,|\\mathsf C_{t}|)$ alternatives of each type $t\\in\\mathcal T$ , including all alternatives from $W\\Delta W^{\\prime}$ . This implies that $|X|\\leq4n2^{n}$ . As we know that the reconfiguration path has length at most $\\ell\\leq\\left\\lceil2n\\right\\slash\\delta_{\\mathrm{c}}\\rceil$ , we can solve this problem by branching over all possible exchanges using alternatives in $X$ with depth $\\ell$ . For each step $\\bar{i}\\in[\\ell]$ , we branch over all pairs of two sets $\\breve{X_{i}}^{1}$ , $X_{i}^{2}\\subseteq X$ with $|X_{i}^{1}|\\le\\delta_{\\mathrm{c}}$ and $|\\dot{X}_{i}^{2}|\\le\\delta_{\\mathrm{c}}$ that shall correspond to the set of alternatives in $W_{i-1}\\setminus W_{i}$ and $W_{i}\\setminus W_{i-1}$ , respectively. Then, using these exchanges, we can compute all committees on each branch and check whether they yield a desired reconfiguration path. By checking all branches we can then find a shortest path. ", "page_idx": 8}, {"type": "text", "text": "Finally, we compute the running time of the branching algorithm. A single step has $|X|^{\\delta_{\\mathrm{c}}}\\cdot|X|^{\\delta_{\\mathrm{c}}}=$ $|X|^{2\\,\\delta_{\\mathrm{c}}}$ many branches and there are at most $\\lceil\\frac{2n}{\\delta_{\\mathrm{c}}}\\rceil$ steps. That means the branching algorithm has a running time of $|X|^{2\\,\\delta_{\\mathrm{c}}\\,\\ell}\\leq|X|^{2\\,\\delta_{\\mathrm{c}}\\lceil\\frac{2n}{\\delta_{\\mathrm{c}}}\\rceil}\\leq|X|^{4n+2\\,\\delta_{\\mathrm{c}}}\\leq(4n\\cdot2^{n})^{8n}.$ . \u53e3 ", "page_idx": 8}, {"type": "text", "text": "By observing that there are not too many different alternatives (wrt. $n+{\\mathfrak{b}}$ ), we obtain the following FPT result. ", "page_idx": 8}, {"type": "text", "text": "Proposition $\\mathsf{5\\;(\\star)}$ . For all neutral and score-based multi-winner voting rules $\\lambda$ such that the score of a committee can be computed in polynomial time, $\\lambda$ -MR is solvable in $2^{2{\\mathsf{b}}n}(n+m)^{O(1)}$ time, and hence FPT wrt. $n+{\\mathfrak{b}}$ . ", "page_idx": 8}, {"type": "text", "text": "Finally, we prove that the committee size $\\mathsf{k}$ combined with the path length $\\ell$ is unlikely to yield FPT-algorithms by showing W[2]-hardness. We reduce from the problem of DOMINATING SET ", "page_idx": 8}, {"type": "text", "text": "RECONFIGURATION VIA TOKEN JUMPING (DSR-TJ). In DSR-TJ, we are given a graph $G=$ $(V,E)$ , two non-negative integers $h$ and $\\hat{\\ell}$ , and two size- $h$ dominating sets $V_{s}$ and $V_{t}$ of $G$ , and we ask whether there exists a sequence $V_{0},\\dots,V_{\\hat{\\ell}}$ of size- $h$ dominating set such that $V_{0}=V_{s}$ , $V_{\\hat{\\ell}}=V_{t}$ and $|V_{i}\\Delta V_{i+1}|\\leq2$ for all $0\\leq i\\leq\\hat{\\ell}-1$ . Recall that a dominating set of a graph is a subset $V^{\\prime}$ of vertices whose neighborhood covers the whole vertex set of the graph, i.e., each vertex not from $V^{\\prime}$ is adjacent to at least one vertex in $V^{\\prime}$ . Bodlaender et al. () claimed that Mouawad et al. (2016) showed that DSR-TJ is W[2]-hard wrt. $(h,\\hat{\\ell})$ , where $h$ denotes the size of any dominating set (DS for short) on the path and \u2113\u02c6the length of a shortest DS reconfiguration path (if it exists). The reduction given by Mouawad et al., however, only works for the TAR but not the TJ variant. The reason is that in their created instance, the size $h^{\\prime}$ of the initial DS is smaller than $h$ , so the size of any intermediate dominating set could be larger than $h^{\\prime}$ while this is not possible for the TJ variant. Below, we modify their reduction and show hardness for the TJ variant. ", "page_idx": 9}, {"type": "text", "text": "Proposition 6 $(\\star)$ . DSR-TJ is W[2]-hard wrt. $h+\\hat{\\ell}$ . ", "page_idx": 9}, {"type": "text", "text": "We obtain the same hardness for the CC rule by adapting the reduction by Betzler et al. (2013). ", "page_idx": 9}, {"type": "text", "text": "Theorem 5. ${\\mathrm{CC-MR}}^{O}$ (and hence CC-MR) are W[2]-hard wrt. $\\mathsf{k}+\\ell.$ . ", "page_idx": 9}, {"type": "text", "text": "Proof. It suffices to show W[2]-hardness for ${\\mathrm{CC-MR}}^{0}$ . To achieve this, we provide a parameterized reduction from the W[2]-hard DSR-TJ problem (see Proposition 6) to ${\\mathrm{CC}}{-}{\\bar{\\bf M}}{\\bf R}^{0}$ , i.e., CC-MR where $\\delta_{\\mathrm{s}}=0$ and $\\delta_{\\mathrm{c}}=1$ . ", "page_idx": 9}, {"type": "text", "text": "Let $(G,h,\\hat{\\ell},V_{s},V_{t})$ be an instance of DSR-TJ, where $G$ is an undirected graph, $V_{s}$ and $V_{t}$ are the initial and target dominating sets, respectively, $h=|V_{s}|=|V_{t}|$ , and $\\hat{\\ell}$ denotes the length bound on the reconfiguration path (if it exists). ", "page_idx": 9}, {"type": "text", "text": "We define $\\mathsf{k}=h$ and create a preference profile as follows. For each vertex $v_{i}\\in V(G)$ , create \u2013 one vertex-alternative $c_{i}$ , and \u2013 one vertex-voter $u_{i}$ that approves of $c_{i}$ and the alternatives corresponding to the neighbors of $v_{i}$ in $G$ . Formally, the approval set of voter $u_{i}$ is $\\mathsf{A}_{i}=\\{c_{i}\\}\\cup\\{c_{j}\\mid\\{\\bar{v_{i}},v_{j}\\}\\in E(G)\\}$ . ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Let $\\mathcal{P}=(C,V,R)$ denote the created profile. The total number of voters in this instance is $|V(G)|$ . To complete the construction, let the initial and target committees be $W\\,=\\,\\{c_{i}\\,\\mid\\,v_{i}\\,\\in\\,{\\dot{V}}_{s}\\}$ and $W^{\\prime}\\,=\\,\\{c_{i}\\,\\mid\\,v_{i}\\,\\in\\,V_{t}\\}$ . Note that the score of $W$ (resp. $W^{\\prime}$ ) is $|V(G)|$ since $V_{s}$ (resp. $V_{t}$ ) is a dominating set. It is straightforward to see that every size- $h$ dominating set of $G$ corresponds to a size$\\mathsf{k}$ committee with score at least $|V(G)|$ . The correctness of the construction follows immediately. ", "page_idx": 9}, {"type": "text", "text": "4 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We introduced a framework for reconfiguring committees in multi-winner elections for four prominent committee election rules: CC, PAV, AV, and SAV, and systematically studied the (parameterized) complexity of the problem. We left open whether our reconfiguration problem under PAV is FPT wrt. the number $n$ of voters. ", "page_idx": 9}, {"type": "text", "text": "Our framework can be directly applied to other score-based rules, such as the Monroe rule (Monroe, 1995), even for linear preferences. For non-score-based rules, we may adapt by either restricting the reconfiguration path to winning committees or introducing a measure that captures closeness to optimality. ", "page_idx": 9}, {"type": "text", "text": "Our preliminary experimental investigations (see Appendix C) indicate that for most randomly generated committees, a reconfiguration path not only exists but can also be efficiently determined using a straightforward heuristic. This finding opens a promising avenue for future research: determining the specific structures within the data that ensure the existence of a reconfiguration path, and whether it is possible to develop FPT algorithms leveraging these structures. ", "page_idx": 9}, {"type": "text", "text": "The concept of reconfiguration extends beyond the multi-winner election settings explored here or the fair division setting explored by Igarashi et al. (2024). Many other social choice frameworks remain unexplored in this context, such as stable matching (Gale and Shapley, 1962) or coalition formation (Dr\u00e8ze and Greenberg, 1980). Investigating these could provide useful insights into the algorithmic principles of varied decision-making processes. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "The authors are supported by the Vienna Science and Technology Fund (WWTF) [10.47379/ VRG18012]. We would like to thank the reviewers for their helpful comments. We acknowledge the support of the NeurIPS 2024 Financial Assistance grant, which helped the authors attend the conference. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "Ravindra K. Ahuja, \u00d6zlem Ergun, James B. Orlin, and Abraham P. Punnen. A survey of very large-scale neighborhood search techniques. Discrete Applied Mathematics, 123(1-3):75\u2013102, 2002.   \nOswin Aichholzer, Wolfgang Mulzer, and Alexander Pilz. Flip distance between triangulations of a simple polygon is np-complete. Discrete and Computational Geometry, 54(2):368\u2013389, 2015.   \nSoroush Alamdari, Patrizio Angelini, Fidel Barrera-Cruz, Timothy M. Chan, Giordano Da Lozzo, Giuseppe Di Battista, Fabrizio Frati, Penny Haxell, Anna Lubiw, Maurizio Patrignani, Vincenzo Roselli, Sahil Singla, and Bryan T. Wilkinson. How to morph planar graph drawings. SIAM Journal on Computing, 46(2):824\u2013852, 2017.   \nHaris Aziz, Serge Gaspers, Joachim Gudmundsson, Simon Mackenzie, Nicholas Mattei, and Toby Walsh. Computational aspects of multi-winner approval voting. In Proceedings of the 14th International Conference on Autonomous Agents and Multiagent Systems, (AAMAS 2015), pages 107\u2013115, 2015.   \nNadja Betzler, Arkadii Slinko, and Johannes Uhlmann. On the computation of fully proportional representation. Journal of Artificial Intelligence Research, 47:475\u2013519, 2013.   \nHans L. Bodlaender, Carla Groenland, and C\u00e9line M. F. Swennenhuis. Parameterized complexities of dominating and independent set reconfiguration. In Proceedings of the 16th International Symposium on Parameterized and Exact Computation, (IPEC 2021).   \nNiclas Boehmer and Rolf Niedermeier. Broadening the research agenda for computational social choice: Multiple preference proflies and multiple solutions. In Proceedings of the 20th International Conference on Autonomous Agents and Multiagent Systems, (AAMAS 2021), pages 1\u20135, 2021.   \nPaul Bonsma. The complexity of rerouting shortest paths. Theoretical Computer Science, 510:1\u201312, 2013.   \nRobert Bredereck, Jiehua Chen, Du\u0161an Knop, Junjie Luo, and Rolf Niedermeier. Adapting stable matchings to evolving preferences. In Proceedings of the 34th AAAI Conference on Artificial Intelligence (AAAI 2020), pages 1830\u20131837, 2020.   \nRobert Bredereck, Piotr Faliszewski, Rolf Niedermeier, Piotr Skowron, and Nimrod Talmon. Mixed integer programming with convex/concave constraints: Fixed-parameter tractability and applications to multicovering and voting. Theoretical Computer Science, 814:86\u2013105, 2020.   \nRobert Bredereck, Andrzej Kaczmarczyk, and Rolf Niedermeier. Electing successive committees: Complexity and algorithms. In Proceedings of the 34th AAAI Conference on Artificial Intelligence (AAAI 2020), pages 1846\u20131853, 2020.   \nRobert Connelly, Erik D. Demaine, and G\u00fcnter Rote. Blowing up polygonal linkages. Discrete & Computational Geometry, 30(2):205\u2013239, 2003.   \nMarek Cygan, Fedor V. Fomin, Lukasz Kowalik, Daniel Lokshtanov, D\u00e1niel Marx, Marcin Pilipczuk, Michal Pilipczuk, and Saket Saurabh. Parameterized Algorithms. Springer, 2015.   \nRodney G. Downey and Michael R. Fellows. Fundamentals of Parameterized Complexity. Springer, 2013.   \nJ. H. Dr\u00e8ze and J. Greenberg. Hedonic coalitions: Optimality and stability. Econometrica, 48(4):987\u2013 1003, 1980.   \nPiotr Faliszewski, Piotr Skowron, Arkadii Slinko, and Nimrod Talmon. Multiwinner voting: A new challenge for social choice theory. Trends in computational social choice, 74:27\u201347, 2017.   \nDavid Gale and Lloyd S. Shapley. College admissions and the stability of marriage. The American Mathematical Monthly, 120(5):386\u2013391, 1962.   \nSevag Gharibian and Jamie Sikora. Ground state connectivity of local hamiltonians. ACM Transaction on Computation Theory, 10(2):8:1\u20138:28, 2018.   \nParikshit Gopalan, Phokion G. Kolaitis, Elitza N. Maneva, and Christos H. Papadimitriou. The connectivity of boolean satisfiability: Computational and structural dichotomies. In Proceedings of the 33rd International Colloquium on Automata, Languages and Programming (ICALP 2006).   \nMartin Gr\u00f6tschel, L\u00e1szl\u00f3 Lov\u00e1sz, and Alexander Schrijver. Geometric Algorithms and Combinatorial Optimization, volume 2 of Algorithms and Combinatorics. Springer, 1988.   \nAyumi Igarashi, Naoyuki Kamiyama, Warut Suksompong, and Sheung Man Yuen. Reachability of fair allocations via sequential exchanges. In Proceedings of the 38th AAAI Conference on Artificial Intelligence (AAAI 2024), pages 9773\u20139780, 2024.   \nTakehiro Ito, Marcin Kaminski, Hirotaka Ono, Akira Suzuki, Ryuhei Uehara, and Katsuhisa Yamanaka. On the parameterized complexity for token jumping on graphs. In 11th International Conference on Theory and Applications of Models of Computation (TAMC 2022).   \nTakehiro Ito, Erik D. Demaine, Nicholas J. A. Harvey, Christos H. Papadimitriou, Martha Sideri, Ryuhei Uehara, and Yushi Uno. On the complexity of reconfiguration problems. Theoretical Computer Science, 412(12-14):1054\u20131065, 2011.   \nTakehiro Ito, Yuni Iwamasa, Naonori Kakimura, Naoyuki Kamiyama, Yusuke Kobayashi, Yuta Nozaki, Yoshio Okamoto, and Kenta Ozeki. Reforming an envy-free matching. In Proceedings of the 36th AAAI Conference on Artificial Intelligence (AAAI 2022), pages 5084\u20135091, 2022.   \nWilliam W. Johnson and William E. Story. Notes on the \u201c15\u201d puzzle. American Journal of Mathematics, 2(4):397\u2013404, 1879.   \nChengquan Ju, Shuhan Yao, and Peng Wang. Resilient post-disaster system reconfiguration for multiple energy service restoration. In Proceedings of the 1st IEEE Conference on Energy Internet and Energy System Integration $^{\\prime}E I^{2}\\;2O I7\\rangle$ , pages 1\u20136, 2017.   \nMartin Lackner and Piotr Skowron. Multi-Winner Voting with Approval Preferences\u2013Artificial Intelligence, Multiagent Systems, and Cognitive Robotics. Springer Briefs in Intelligent Systems. Springer, 2023.   \nMartin Lackner, Peter Regner, and Benjamin Krenn. abcvoting: A Python package for approval-based multi-winner voting rules. Journal of Open Source Software, 8(81):4880, 2023.   \nBurt L Monroe. Fully proportional representation. American Political Science Review, 89(4):925\u2013940, 1995.   \nAmer E. Mouawad, Naomi Nishimura, Venkatesh Raman, Narges Simjour, and Akira Suzuki. On the parameterized complexity of reconfiguration problems. Algorithmica, 78(1):274\u2013297, may 2016.   \nNetflix. Netflix prize. https://www.kaggle.com/datasets/netflix-inc/ netflix-prize-data, 2006. Accessed 2023-7-7, Version 2.   \nNetflix. Don\u2019t Miss Your Chance to Watch These Movies and Shows Leaving in December. https://www.netflix.com/tudum/articles/whats-leaving-netflix, 2024. [Accessed 17-01-2024].   \nNaomi Nishimura. Introduction to reconfiguration. Algorithms, 11(4):52, 2018.   \nPrime-Video. Prime video: leaving soon. https://www.amazon.co.uk/ Expiring-Prime-Next-30-Days-Videos/s?rh $\\equiv$ n%3A9791716031%2Cp_n_ ways_to_watch%3A7448660031, 2024. [Accessed 17-01-2024].   \nWalter J. Savitch. Relationships between nondeterministic and deterministic tape complexities. Journal of Computer System Science, 4(2):177\u2013192, 1970.   \nBaruch Schieber, Hadas Shachnai, Gal Tamir, and Tami Tamir. A theory and algorithms for combinatorial reoptimization. Algorithmica, 80(2):576\u2013607, 2018.   \nStanis\u0142aw Szufa, Piotr Faliszewski, \u0141ukasz Janeczko, Martin Lackner, Arkadii Slinko, Krzysztof Sornat, and Nimrod Talmon. How to sample approval elections? In Proceedings of the 31st International Joint Conference on Artificial Intelligence (IJCAI 2022), pages 496\u2013502, 2022.   \nJan van den Heuvel. The complexity of change. In Simon R. Blackburn, Stefanie Gerke, and Mark Wildon, editors, Surveys in Combinatorics 2013, volume 409 of London Mathematical Society Lecture Note Series, pages 127\u2013160. Cambridge University Press, 2013. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Yongjie Yang and Jianxin Wang. Parameterized complexity of multiwinner determination: more effort towards fixed-parameter tractability. Autonomous Agents and Multi-Agent Systems, 37(2):28, 2023. ", "page_idx": 12}, {"type": "text", "text": "Supplementary Material for the Paper \u201cMulti-Winner Reconfiguration\u201d ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A Additional Material for Section 2 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Parameters. In this work we additionally look at the problems through the lens of parameterized complexity using the following parameters: the number $m$ of alternatives, the number $n$ of voters, the committee size $k$ , the maximum number $b$ of approved alternatives per voter and the length $\\ell$ of a shortest reconfiguration path (if it exists). ", "page_idx": 13}, {"type": "text", "text": "B Additional Material for Section 3 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Independent Set Reconfiguration Definition ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Ito et al. () show that the following reconfiguration is W[1]-hard wrt. the number of tokens (i.e., the size of any independent set on the path). ", "page_idx": 13}, {"type": "text", "text": "INDEPENDENT SET RECONFIGURATION VIA TOKEN JUMPING (ISR-TJ) ", "page_idx": 13}, {"type": "text", "text": "Input: A graph $G$ , two non-negative integers $h$ and $\\hat{\\ell}$ , and two independent sets $I_{s},I_{t}$ of size $h$ . Question: Does there exist a sequence $I_{0},\\ldots,I_{\\hat{\\ell}}$ of size- $h$ independent sets of $G$ such that ", "page_idx": 13}, {"type": "text", "text": "$I_{0}=I_{s}$ , $I_{\\hat{\\ell}}=I_{t}$ , and $|I_{i}\\Delta I_{i+1}|\\leq2$ holds for all $0\\leq i\\leq\\hat{\\ell}-1?$ ", "page_idx": 13}, {"type": "text", "text": "An independent set of a graph is a subset of vertices such that no two of them are adjacent. ", "page_idx": 13}, {"type": "text", "text": "B.1 Proof of Theorem 2 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Theorem 2 $(\\star)$ . For all $\\lambda\\in\\{\\mathrm{CC},\\mathrm{PAV}\\}$ , $\\lambda{\\mathrm{-}}\\mathrm{M}\\mathrm{R}^{0}$ (and hence $\\lambda$ -MR) are PSPACE-complete. Moreover, they are PSPACE-hard and W[1]-hard wrt. $\\mathsf{k}+\\ell$ , even $i f\\left(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},\\mathsf{b}\\right)=\\left(1,0,2\\right)$ . ", "page_idx": 13}, {"type": "text", "text": "Proof. Since PSPACE-membership follows from Proposition 1, we only need to focus on the hardness results. We show W[1]-hardness and PSPACE-hardness by reducing from ISR-TJ (see above for the definition). Ito et al. () show that ISR-TJ is both PSPACE-complete and W[1]-hard wrt. to $h$ . We observe that the reduction is simultaneously a polynomial and W[1]-hardness reduction wrt. $h+\\hat{\\ell}$ because a shortest reconfiguration path has length $2h$ in their construction. Hence, if we can provide a polynomial-time reduction for ${\\dot{\\mathrm{CC}}}{-}{\\bf M}{\\bf R}^{0}$ and PAV- $\\mathbf{\\nabla}\\mathbf{M}\\mathbf{R}^{0}$ such that the committee size and the path length are $h$ and $\\hat{\\ell}$ , respectively, then we obtain W[1]-hardness in the statement. ", "page_idx": 13}, {"type": "text", "text": "Let $(G,h,I_{s},I_{t})$ be an instance of ISR-TJ. We create an instance of ${\\mathrm{CC}}{\\mathrm{-}}{\\mathrm{MR}}^{0}$ and PAV- $\\mathbf{\\nabla}\\cdot\\mathbf{M}\\mathbf{R}^{0}$ with committee size $\\mathsf{k}=h$ . For each vertex $v_{i}\\in V(G)$ , let $\\deg(v_{i})$ denote the degree of vertex $v_{i}$ in $G$ . Further let $\\deg(G):=\\operatorname*{max}_{v_{i}\\in V(G)}\\deg(v_{i})$ denote the maximum degree of graph $G$ . ", "page_idx": 13}, {"type": "text", "text": "\u2013 For each vertex $v_{i}\\in V(G)$ , we create a vertex-alternative $c_{i}$ and $(\\deg(G)-\\deg(v_{i}))$ -many private dummy voters , dideg(G)\u2212deg(vi)} that only approve ci. \u2013 For each edge $\\{v_{i},v_{j}\\}\\in\\operatorname{\\dot{E}}(G)$ , we create one edge-voter $u_{\\{i,j\\}}$ that approves only $c_{i}$ and $c_{j}$ . ", "page_idx": 13}, {"type": "text", "text": "Let $\\mathcal{P}$ denote the created profile with $C\\,=\\,\\{c_{i}\\ |\\ v_{i}\\,\\in\\,V(G)\\}$ and $V\\,=\\,\\{d_{i}^{z}\\;\\mid\\;v_{i}\\;\\in\\;V(G),z\\;\\in$ $[\\deg(G)-\\deg(v_{i})]\\}\\cup\\{\\Bar{u_{i,j}}\\ |\\ \\{v_{i},v_{j}\\}\\in\\dot{E(G)}\\}$ }. The total number of voters created is $\\vert V\\vert=$ $\\deg(G)\\cdot|V(G)|$ . To complete the construction, let the initial and target committees be $W=\\{c_{i}~|$ ${v_{i}}\\,\\in\\,{I_{s}}\\}$ and $\\dot{W}^{\\prime}\\,=\\,\\{c_{i}\\;\\mid\\,v_{i}\\,\\in\\,I_{t}\\}$ , the size of the independent set $h\\,=\\,k$ , and the length of a reconfiguration path $\\ell=2h=2k$ . ", "page_idx": 13}, {"type": "text", "text": "For the sake of brevity, define a bijection $f\\colon2^{V(G)}\\rightarrow2^{C}$ with $f(V^{\\prime})=\\{c_{i}\\mid v_{i}\\in V^{\\prime}\\}$ between the vertex subsets and the committees. We present a one-to-one correspondence between the size- $h$ independent sets in $G$ and size- $\\cdot h$ committees with score of at least ${\\mathrm{deg}}({\\bar{G}})\\cdot\\mathbf{k}$ in the created PAV-MR0- and ${\\bf\\dot{C}C-M R^{0}}$ -instance. ", "page_idx": 13}, {"type": "text", "text": "Claim 5.1. $V^{\\prime}$ is a size- $h$ independent set if and only if $f(V^{\\prime})$ is a size- $h$ committee of score at least $\\deg(G)\\cdot\\mathsf{k}$ under CC as well as PAV. ", "page_idx": 13}, {"type": "text", "text": "Proof. The \u201conly if\u201d part is straightforward: For each size- $h$ independent set $V^{\\prime}$ we have that the alternatives in $f(V^{\\prime})$ are approved by $\\deg(G)\\cdot\\mathsf{k}$ voters. Among them $\\deg(G)\\cdot k-\\sum_{v_{i}\\in f(V^{\\prime})}\\deg(v_{i})$ voters are private voters and $\\sum_{v_{i}\\in f(V^{\\prime})}\\deg(v_{i})$ voters are the edge-voters of the edges incident to $V^{\\prime}$ . Each of these $\\deg(G)\\cdot\\mathsf{k}$ edge-voters approves exactly one alternative in $f(V^{\\prime})$ since $V^{\\prime}$ is an independent set. Thus $\\operatorname{SC}_{\\operatorname{PAV}}(W)=\\operatorname{SC}_{\\operatorname{CC}}(W)=\\deg(G)\\cdot{\\mathsf{k}}.$ ", "page_idx": 14}, {"type": "text", "text": "For the \u201cif\u201d part, let $W^{\\prime\\prime}$ denote a size- $h$ committee with score $\\geq\\deg(G)\\cdot\\mathsf{k}$ . We claim that $f^{-1}(W^{\\prime\\prime})$ is a size- $\\cdot h$ independent set. Clearly $\\left|f^{-1}(W^{\\prime\\prime})\\right|=h$ , so we only need to show that no edge is incident to more than one vertex in $f^{-1}(W^{\\prime\\prime})$ . Let $\\dot{E_{1}}=\\{\\{v_{i},v_{j}\\}\\ \\dot{\\in}\\ E(G)\\colon|\\{v_{i},v_{j}\\}\\cap f^{-1}\\bar{(}W^{\\prime\\prime})|=1\\}$ and $E_{2}=\\{\\{v_{i},v_{j}\\}\\in E(G)\\colon|\\{v_{i},v_{j}\\}\\cap f^{-1}(W^{\\prime\\prime})|=2\\}$ denote the set of edges that are incident to exactly one vertex in $f^{-1}(W^{\\prime\\prime})$ and the set of edges that are incident to two vertices in $f^{-1}(W^{\\prime\\prime})$ , respectively. Then, by the handshaking lemma, we have that ", "page_idx": 14}, {"type": "equation", "text": "$$\n|E_{1}|+2|E_{2}|=\\sum_{c_{i}\\in W^{\\prime\\prime}}\\deg(v_{i}).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "For CC, we have that $\\begin{array}{r}{\\deg(G)\\cdot k=\\operatorname{sc}_{\\operatorname{CC}}(W^{\\prime\\prime})=\\sum_{c_{\\ i}\\in W^{\\prime\\prime}}}\\end{array}$ deg(G) \u2212deg(vi) + |E1| + |E2|, which implies that $\\begin{array}{r}{|E_{1}|+|E_{2}|=\\sum_{c_{i}\\in W^{\\prime\\prime}}\\deg(v)}\\end{array}$ since $k=h$ . Together with (1), we obtain that $|E_{2}|=0$ , meaning that no edge is incident to more than one vertex in $f^{-1}(W^{\\prime\\prime})$ , as desired. ", "page_idx": 14}, {"type": "text", "text": "As for PAV, since $\\begin{array}{r}{\\deg(G){\\cdot}k=\\operatorname{sc}_{\\operatorname{PAV}}(W^{\\prime\\prime})=\\sum_{c_{i}\\in W^{\\prime\\prime}}}\\end{array}$ $\\left(\\deg(G)\\!-\\!\\deg(v_{i})\\right)\\!+\\!|E_{1}|\\!+\\!(1\\!+\\!1/2)|E_{2}|$ , we infer that $\\begin{array}{r}{|E_{1}|+(1+1/2)|E_{2}|=\\sum_{c_{i}\\in W^{\\prime\\prime}}\\deg(v)}\\end{array}$ . Similarly to the previous case, by (1), we obtain that $|E_{2}|\\,=\\,0$ , meaning that no edge is incident to more than one vertex in $f^{-1}(W^{\\prime\\prime})$ , as desired. (of Claim 5.1) $\\diamond$ ", "page_idx": 14}, {"type": "text", "text": "By Claim 5.1, it is straightforward to verify that a sequence $\\left(I_{s},\\ldots,I_{t}\\right)$ of vertex subsets is a size- $\\cdot h$ independent set reconfiguration path if and only if $(W=f(I_{s}),\\ldots,W^{\\prime}=f(I_{t}))$ is a $(1,0)$ - reconfiguration for CC-MR and PAV-MR. This concludes the proof for the PSPACE-hardness since the reduction is a polynomial time reduction. ", "page_idx": 14}, {"type": "text", "text": "Note that in our construction each voter approved of at most 2 alternatives. This means the PSPACEhardness remains even if the ballot size is bounded by 2. ", "page_idx": 14}, {"type": "text", "text": "It remains to show the W[1]-hardness wrt. the committee size $k$ and the path length $\\ell$ . As the committee size $\\mathsf{k}$ is equal to the size $h$ of the independent set, each committee on the reconfiguration path directly corresponds to an independent set on the reconfiguration path of the independent sets of size $h$ and the shortest path is of length at most $2h$ (Ito et al.), it follows that both PAV-MR0 and ${\\mathrm{CC}}{\\mathrm{-}}{\\mathrm{MR}}^{0}$ are W[1]-hard wrt. the path length $\\ell$ and the committee size $\\mathsf{k}$ . This concludes the proof. \u53e3 ", "page_idx": 14}, {"type": "text", "text": "B.2 Proof of Proposition 2 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Proposition 2 $(\\star)$ . For all $\\lambda\\in\\{\\mathrm{CC},\\mathrm{PAV}\\}$ , $\\lambda$ -MR remains NP-hard even $i f\\,\\mathsf{b}=\\,\\ell=2,$ , and for constant $\\ell$ , it is in NP. ", "page_idx": 14}, {"type": "text", "text": "Proof. As already mentioned, the reduction of Ito et al. (2011) can be used to show NP-hardness for the case when we may allow for more than one token to be moved at once. In other words, it is NP-hard to decide whether one can reconfigure from one independent set $I_{s}$ of size $h$ to another independent set $I_{t}$ of $h$ via an intermediate step. Hence, by using the same reduction as for Theorem 2, we obtain the result from the statement. ", "page_idx": 14}, {"type": "text", "text": "As for constant path length $\\ell$ , we can guess a sequence of constantly many committees which in total has polynomial size and check in polynomial time whether it is a valid reconfiguration path. This proves containment in NP. \u53e3 ", "page_idx": 14}, {"type": "text", "text": "B.3 Continuation of the proof of Theorem 3 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Theorem $\\mathbf{3}\\left(\\star\\right)$ . PAV-MR is FPT wrt. $n+\\ell$ . ", "page_idx": 14}, {"type": "text", "text": "We first introduce some notations and concepts that are useful for the IPWSPLT formulation. For each type $t$ of alternative, let $\\mathsf{C}_{t}$ denote the set consisting of all alternatives with type $t$ . Let $\\tau$ denote the set of types of alternatives that exist in a given preference proflie $\\mathcal{P}$ . Further, let $A(t)$ denote the set of voters that approve of alternatives of type $t$ . We say that two committees $C_{1}$ and $C_{2}$ are in the same equivalence class (class for short) if for each type $t$ , the number of alternatives with type $t$ in $C_{1}$ is the same as that in $C_{2}$ . We partition the set $\\mathsf{C}_{t}$ of alternatives of type $t$ into four subsets as follows: $X_{t}^{1}=\\mathsf{C}_{t}\\cap(W\\setminus W^{\\prime})_{\\mathsf{\\Omega}}$ , $X_{t}^{2}=\\mathsf C_{t}^{\\star}\\cap(W\\cap W^{\\prime})$ , $X_{t}^{3}=\\mathsf{C}_{t}\\cap(W^{\\prime}\\setminus W)$ , and $X_{t}^{4}=\\mathsf{C}_{t}\\cap\\left(C\\setminus\\left(W^{\\prime}\\cup W\\right)\\right)$ . In other words, $X_{t}^{1}$ , $X_{t}^{2}$ , $X_{t}^{3}$ , and $X_{t}^{4}$ denote the set consisting of all alternatives of type $t$ that are from the set $W\\cdot\\vert W^{\\prime}$ , the intersection $\\dot{W}\\cap W^{\\prime}$ , the other set $W^{\\bar{\\prime}}\\setminus W$ , and not in $W\\cup W^{\\prime}$ , respectively. We now describe the variables and constraints used in the IPWSPLT. We use IPWSPLT rather than a regular ILP because it is not clear how to compute the scores under PAV with just ILP. ", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "Variables. The following variables will be used: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "\u2013 An integer variable $x_{t,j}^{1}$ for each $t\\in\\mathcal T$ and each $j\\in\\{0,\\ldots,\\ell\\}$ . This variable stores the number of alternatives in $X_{t}^{1}$ in the $j$ -th committee of the reconfiguration graph.   \n\u2013 An integer variable $\\boldsymbol{x}_{t,j}^{2}$ for each $t\\in\\mathcal T$ and each $j\\in\\{0,\\ldots,\\ell\\}$ . This variable stores the number   \n\u2013 oAfn a iltnetrengaetri vveasr iianb $X_{t}^{2}$ tfhoer $j$ -atch h ttaened  oefa tchhe .n  Tgrhaisp hv.ariable stores the number $\\lambda_{t,j}^{3}$ $t\\in\\mathcal T$ $j\\in\\{0,\\ldots,\\ell\\}$ of alternatives in $X_{t}^{3}$ in the $j$ -th committee of the reconfiguration graph.   \n\u2013 An integer variable $\\overline{{x_{t,j}^{4}}}$ for each $t\\in\\mathcal T$ and each $j\\in\\{0,\\bar{\\ldots},\\ell\\}$ . This variable stores the number of alternatives in $X_{t}^{4}$ in the $j$ -th committee of the reconfiguration graph.   \n\u2013 An integer variable $y_{(t,j-1),(t^{\\prime},j)}^{z,z^{\\prime}}$ for each $z,z^{\\prime}\\in$ [4], $j\\in[\\ell]$ and $t,t^{\\prime}\\in\\mathcal{T}$ . This variable stores the number of alternatives that were part of the group represented by $x_{t,j-1}^{z}$ that were replaced by alternatives in the group $x_{t^{\\prime},j}^{z^{\\prime}}$ in the step from $W_{j-1}$ to $W_{j}$ .   \n\u2013 An integer variable $x_{v,j}$ for each voter $v\\in V$ and each step $j\\in\\{0,\\ldots,\\ell\\}$ . This variable stores how many alternatives voter $v$ approves of in committee $W_{j}$ .   \nWe use the same piecewise linear concave function $f\\colon\\mathbb{R}_{\\geq0}\\rightarrow\\mathbb{R}_{\\geq0}$ as Yang and Wang. We set   \n$f(0)\\,=\\,0$ and for every positive integer $x$ we set $\\textstyle f(x)\\,=\\,\\sum_{i=1}^{x}{\\frac{1}{i}}$ . Then for each real positive ", "page_idx": 15}, {"type": "text", "text": "Constraints. We add the following constraints: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "(1) For each $z\\in$ [4], we fix $\\boldsymbol{x}_{t,0}^{z}$ and $x_{t,\\ell}^{z}$ to be the correct values for $W$ and $W^{\\prime}$ , i.e., $x_{t,0}^{1}=|X_{t}^{1}|$ , $x_{t,0}^{2}=x_{t,\\ell}^{2}=|X_{t}^{2}|$ , $x_{t,0}^{3}=x_{t,0}^{4}=x_{t,\\ell}^{1}=x_{t,\\ell}^{4}=0$ , and $x_{t,\\ell}^{3}=|X_{t}^{3}|$ .   \n(2) For each $j\\in[\\ell]$ , we add constraint $\\begin{array}{r}{\\sum_{z,z^{\\prime}\\in[4]}y_{(t,j-1),(t^{\\prime},j)}^{z,z^{\\prime}}\\leq\\delta_{\\mathrm{c}}}\\\\ {t,t^{\\prime}\\!\\in\\!\\mathcal T^{}\\qquad\\qquad\\qquad\\qquad\\qquad\\quad}\\end{array}$ . These constraints ensure that the symmetric difference between concurrent committees in the reconfiguration path observes the bound.   \n(3) For each $(j,t,z)\\in\\{0,\\ldots,\\ell\\}\\times{\\mathcal{T}}\\times[4],$ , we add constraint $x_{t,j}^{z}\\leq|X_{t}^{z}|$ . These constraints ensure that the class of committee used in an intermediary result exists, i.e., we do not use more alternatives of a type in a committee than possible.   \n(4) For each $(j,t,z)\\in[\\ell]\\times\\mathcal{T}\\times[4]$ , we add a constraint $\\begin{array}{r}{x_{t,j-1}^{z}\\geq\\sum_{\\stackrel{t^{\\prime}\\in\\mathcal{T}}{z^{\\prime}\\in[4]}}y_{(t,j-1),(t^{\\prime},j)}^{z,z^{\\prime}}}\\\\ {.}\\end{array}$ . Theses constraints are added so that it is not possible to switch out alternatives that are not in the committee.   \n(5) For each (j, t, z) \u2208[\u2113]\u00d7T \u00d7[4], we add a constraint xtz,j = xtz,j\u22121+ z\u2032\u2208[4],t\u2032\u2208T y(zt\u2032,,zj\u22121),(t\u2032,j)\u2212 $\\begin{array}{r}{\\sum_{z^{\\prime}\\in[4],t^{\\prime}\\in{\\mathcal T}}y_{(t,j-1),(t^{\\prime},j)}^{z,z^{\\prime}}}\\end{array}$ . These constraints ensure that the number of alternatives in each group is as described after the exchanges.   \n(6) For each $j\\in\\{0,\\ldots,\\ell\\}$ , we add constraint $\\begin{array}{r}{\\sum_{t\\in\\mathcal{T},z\\in[4]}x_{t,j}^{z}=\\mathsf{k}}\\end{array}$ . This constraint ensures that each committees of the reconfiguration path has size $\\mathsf{k}$ .   \n(7) For each $v\\in V$ and $i\\in[\\ell]$ we add a constraint $x_{v,i}=\\sum_{t}$ : $v\\!\\in\\!A(t),z\\!\\in\\![4]^{}\\,\\mathcal{x}_{t,j}^{z}$ . These constraints link the number of alternatives of each type with the number of alternatives each voter approves of.   \n(8) For every $j\\in[\\ell]$ we add a constraint $\\begin{array}{r}{\\sum_{v\\in V}f(x_{v,j})\\ge\\mathrm{SC}_{\\mathrm{PAV}}(\\mathcal{P},W)-\\delta_{\\mathrm{s}}}\\end{array}$ . These constraints ensure that each committee in the reco nfiguration has a high enough score.   \nThe number of variables and constraints are both $O(2^{n}\\cdot\\ell)$ and the function $f$ consists of at $\\mathsf{k}$ linear ", "page_idx": 15}, {"type": "text", "text": "are the constraints used by Yang and Wang for the $\\ell$ committees on the reconfiguration graph. ", "page_idx": 16}, {"type": "text", "text": "We now show that the constructed IPWSPLT feasibility instance is a yes-instance if and only if there exists a reconfiguration path of at most length $\\ell$ between the given committees $W$ and $W^{\\prime}$ . ", "page_idx": 16}, {"type": "text", "text": "The if part is straightforward: Let $W_{0},\\dots,W_{\\ell}$ be a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path for $(\\mathcal P,\\lambda)$ . For every $t\\in\\mathcal{T},j\\in\\left\\lbrace0,\\ldots,\\ell\\right\\rbrace$ , we set the variable $x_{t,j}^{z}$ to be the number of alternatives in $W_{i}$ that are also in the set represented by $X_{t}^{z}$ , i.e., $\\lvert W_{i}\\cap X_{t}^{z}\\rvert$ . We additionally set for every $z,z^{\\prime}\\in[4]$ the variable y(zt,,zj\u22121),(t\u2032,j) to be the number of alternatives of type t that were replaced by alternatives of type t\u2032 between the committees $W_{j-1}$ and $W_{j}$ . Constraint (5) is thus satisfied by construction. As these variables describe a valid committee, the constraints (6)-(8) are satisfied, as shown by Wang and Yang. Constraint (1) is satisfied, as $W_{0}=W$ and $W_{\\ell}=W^{\\prime}$ . Constraint (2) is satisfied because the symmetric difference is upper bounded by $2\\,\\delta_{\\mathrm{c}}$ . Constraint (3) must be satisfied, as it is not possible to have more alternatives of any type in the solution then there are in total. Similarly constraint (4) must be satisfied, as we can only switch out alternatives from groups that were previously in the solution. ", "page_idx": 16}, {"type": "text", "text": "The only-if part follows similarly: We iteratively create the committees $W_{j}$ for every $j\\in[\\ell]$ . Note that $W_{0}\\,=\\,W$ and $W_{\\ell}\\,=\\,W^{\\prime}$ are already fixed. Suppose the committees $W_{1},\\dots,W_{j}$ have been created and fulflil our conditions. We then create $W_{j+1}$ . For each variable $y_{(t,j),(t^{\\prime},j+1)}^{z,z^{\\prime}}$ , we replace that many alternatives that are in $W_{j}$ and belong to the group $|X_{t}^{z}|$ with alternatives that are not in $W_{j}$ and belong to $|X_{t^{\\prime}}^{z^{\\prime}}|$ . After this process, we have replaced at most $\\delta_{\\mathrm{c}}$ many alternatives with $\\delta_{\\mathrm{c}}$ many other alternatives due to Constraint (2), and therefore the symmetric difference is upper bounded by $2\\,\\delta_{\\mathrm{c}}$ . The resulting committee must exist because Constraint (3) ensures that each group in each type of alternatives does not appear more often in a committee then possible and Constraint (4) ensures that only existing alternatives were switched out. Constraint (6) ensures that the committee has size $\\mathsf{k}$ . Constraint (7) counts the number of alternatives voters approve and with Constraint (8) ensures that the score is sufficiently high. As this reasoning holds for every $j\\in[\\ell]$ , the generated $W_{0},\\dots,W_{\\ell}$ is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path from $W$ to $W^{\\bar{\\prime}}$ , as required. ", "page_idx": 16}, {"type": "text", "text": "Therefore it is possible to find a path between two committees using the IPWSPLT feasibility formulation. ", "page_idx": 16}, {"type": "text", "text": "B.4 Proof of Proposition 4 ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Proposition 4 $(\\star)$ . For all score-based voting rules $\\lambda$ such that the score of a committee can be computed in polynomial time, the following holds: ", "page_idx": 16}, {"type": "text", "text": "(i) $\\lambda$ -MR is solvable in $m^{2\\,\\delta_{\\mathrm{c}}\\cdot\\ell}\\cdot(n+m)^{O(1)}$ time, and hence in $X P$ wrt. $\\ell$ for constant $\\delta_{\\mathrm{c}}$ . $(i i)$ If $\\lambda$ is additionally neutral, then $\\lambda$ -MR is solvable in $\\mathsf{k}^{2\\mathsf{k}}\\cdot(2^{n}+2)^{2\\mathsf{k}}\\cdot(n+m)^{O(1)}$ time and $(\\mathsf{k}+1)^{4\\cdot2^{n}}(n+m)^{O(1)}$ time and a shortest reconfiguration path can be found in the same time. Thus, $i t$ is FPT wrt. $n+{\\mathsf{k}}$ and in $X P$ wrt. $n$ . ", "page_idx": 16}, {"type": "text", "text": "Proof. For Statement (i), we observe that in each reconfiguration step we exchange at most $\\delta_{\\mathrm{c}}$ alternatives with at most $\\delta_{\\mathrm{c}}$ other alternatives. This gives us $\\bar{\\binom{m}{\\delta_{\\mathrm{c}}}}^{2}$ possible different exchanges. Since for a yes-instance we have at most \u2113steps in the reconfiguration path, we have ( \u03b4mc 2)\u2113= m2 \u03b4c \u00b7\u2113 possible different reconfiguration sequences. Since the score of a committee can be computed in polynomial time, we can check for every sequence whether it is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path from $W$ to $W^{\\prime}$ in $m^{2\\,\\delta_{\\mathrm{c}}\\cdot\\ell}\\cdot(n+m)^{O(1)}$ time. ", "page_idx": 16}, {"type": "text", "text": "The proof idea for Statement (ii) is to group alternatives of the same type, keep only a bounded number of alternatives for each type and then generate a reconfiguration graph of bounded size. To this end, we enumerate the types as $1,\\ldots,2^{n}$ . Let $\\tau$ denote the set of types of alternatives that exist in a given preference proflie $\\mathcal{P}$ . We define $\\mathsf{C}_{t}$ to be the set consisting of all alternatives with type $t$ for $t\\in\\mathcal T$ . We will analyze the running times one by one: Generally, let $\\mathcal{P}=(C,V,R)$ be a preference profile and $I=(\\mathcal{P},\\dot{\\mathbf{k}},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},W,\\dot{W^{\\prime}})$ an instance of $\\lambda$ -MR. ", "page_idx": 16}, {"type": "text", "text": "For the first part of Statement (ii), we observe that every committee on a reconfiguration path contains at most $\\mathsf{k}$ alternatives of each type. Therefore, apart from the alternatives that appear in $W\\cup W^{\\prime}$ , we may remove all but $\\mathsf{k}$ many alternatives of each type from the instance. Let us call the set of kept alternatives $\\hat{V}$ . This means that we only need to keep at most $2\\mathsf{k}+\\mathsf{k}\\cdot2^{n}=\\mathsf{k}(2^{n}+2)$ alternatives. We can construct a restricted reconfiguration graph of the remaining alternatives and determine a shortest path between $u_{W}$ and $u_{W^{\\prime}}$ in time $((^{\\tt k}{(2^{n^{*}}+2\\bar{)}}))^{2}\\cdot(n+m)^{O(1)}=({\\tt k}(2^{n}+2))^{2{\\tt k}}\\cdot(n+m)^{O(1)}$ . ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "A $u_{W}{-}u_{W^{\\prime}}$ path of length $\\ell^{\\prime}$ in the restricted reconfiguration graph corresponds to a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ - reconfiguration path of length $\\ell^{\\prime}$ , as the committees corresponding to the vertices on the path form a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path in $I$ . Next assume we have a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path $\\left(W_{0},\\ldots,W_{\\ell^{\\prime}}\\right)$ , where $W=W_{0}$ and $W^{\\bar{\\prime}}=W_{\\ell^{\\prime}}$ , of length $\\ell^{\\prime}$ in $I$ . We will show that there is a $u_{W}{-}u_{W^{\\prime}}$ path of length at most \u2113\u2032 in the restricted reconfiguration graph. Let us iteratively construct the path u W\u02c61, . . . , u W\u02c6 \u2032 . We show that in each step the following two conditions hold for $j\\in\\{0,\\ldots,\\ell^{\\prime}\\}$ : ", "page_idx": 17}, {"type": "text", "text": "(C1) $W_{\\ell^{\\prime}}\\cap(W\\cup W^{\\prime})=\\hat{W}_{\\ell^{\\prime}}\\cap(W\\cup W^{\\prime})$ , i.e., an alternative from $W\\cup W^{\\prime}$ is in $W_{\\ell^{\\prime}}$ if and only if it is in $\\hat{W}_{\\ell^{\\prime}}$ , and   \n(C2) for every alternative type $t\\in\\mathcal T$ , it holds that $|(W_{j}\\cap\\mathsf C_{t})\\backslash(W\\cup W^{\\prime})|=|(\\hat{W}_{j}\\cap\\mathsf C_{t})\\backslash(W\\cup W^{\\prime})|,$ , i.e, for every type, the number of alternatives of that type is the same in both $W$ and $W^{\\prime}$ , discounting the alternatives in the initial and goal committees. ", "page_idx": 17}, {"type": "text", "text": "From these two conditions it follows clearly that $\\operatorname{SC}(\\hat{W}_{j})=\\operatorname{SC}(W_{j})$ for every $j\\in\\{0,\\ldots,t\\}$ . Since all alternatives in $W\\cup W^{\\prime}$ are retained, the first vertex in the path is $u_{W}$ and the last $u_{W^{\\prime}}$ . Assume we have created vertices $u_{\\hat{W}_{0}},\\ldots,u_{\\hat{W}_{j}}$ so that $\\hat{W}_{0},\\dotsc,\\hat{W}_{j}$ satisfy the conditions. We construct the committee $\\hat{W}_{j+1}$ from $\\hat{W}_{j}$ as follows: ", "page_idx": 17}, {"type": "text", "text": "(i) We remove the alternatives in $(W_{j}\\setminus W_{j+1})\\cap(W\\cup W^{\\prime}).$ .   \n(ii) We add the alternatives in $(W_{j+1}\\setminus W_{j})\\cap(W\\cup W^{\\prime})$ .   \n(iii) For every type $t\\in\\mathcal T$ such that $d:=|\\bar{W}_{j}\\setminus(W\\cup W^{\\prime})|-|W_{j+1}\\setminus(W\\cup W^{\\prime})|>0,$ we remove arbitrary $d$ alternatives of type $t$ from $\\hat{W}_{j}\\setminus(W\\cup W^{\\prime})$ .   \n(iv) For every type $t\\in\\tau$ such that $d:=|\\check{W}_{j+1}\\cdot\\backslash\\left(W\\cup W^{\\prime})|-|W_{j}\\setminus(W\\cup W^{\\prime})|>0$ 0, we add arbitrary $d$ alternatives of type $t$ from $(\\hat{V}\\cap\\mathsf C_{t}\\setminus\\hat{W}_{j})\\setminus(W\\cup W^{\\prime})$ . ", "page_idx": 17}, {"type": "text", "text": "We show that these exchanges, if possible to perform, enforce that $\\hat{W}_{j+1}$ satisfies the two conditions (C1) and (C2) we set to prove. The first two exchanges guarantee (C1), as they remove and add the corresponding alternatives to $\\hat{W}_{j+1}$ . The last two guarantee (C2), as they remove and add alternatives of the same type as are removed and from $W_{j}$ to $W_{j+1}$ . It is obvious that Exchanges (i) and (ii) can be performed. Similarly, Exchange (iii) is clearly possible as we remove alternatives that are necessarily in the committee. To see that we can always perform Exchange (iv), recall that V\u02c6 contains $\\hat{d}_{t}:=\\operatorname*{min}(\\mathsf{k},|\\mathsf{C}_{t}\\cap C\\setminus(W\\cup W^{\\prime})|)$ alternatives of type $t$ . No committee may contain more than $\\hat{d}_{t}$ many alternatives of $\\mathsf{C}_{t}\\setminus(W\\cup W^{\\prime})$ , so this exchange is also safe. It is also clear we will always add at most $|W_{j}\\setminus W_{j+1}|$ alternatives and remove at most $|W_{j+1}\\setminus W_{j}|$ alternatives, so $\\hat{W}_{j}$ and $\\hat{W}_{j+1}$ are $\\delta_{\\mathrm{c}}$ -adjacent, and thus $\\boldsymbol{u}_{\\hat{W}_{j}}$ and $u_{\\hat{W}_{j+1}}$ are adjacent. This concludes the proof of the first part of Statement (ii). ", "page_idx": 17}, {"type": "text", "text": "For the second part of Statement (ii), we observe that there can be at most $\\mathsf{k}$ alternatives of each type in a committee, so we can upper-bound the number of committees we need to track to $(\\mathsf{k}+1)^{2\\cdot2^{n}}$ : We associate each size- $\\cdot{\\sf k}$ committee $U\\subseteq C$ , with two length $2^{2n}$ vectors with non-negative entries such that for all $U\\subseteq C,t\\in\\mathcal{T}$ , ", "page_idx": 17}, {"type": "equation", "text": "$$\nf(U)[t]:=|(\\mathsf C_{t}\\cap U)\\setminus W^{\\prime}|\\ \\mathrm{and}\\ g(U)[t]:=|(\\mathsf C_{t}\\cap U)\\cap W^{\\prime}|.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "The vector $f(U)[t]$ is the number of alternatives of type $t$ in the committee without $W^{\\prime}$ , and $g(U)[t]$ is the number of alternatives of type $t$ in the committee that are also in $W^{\\prime}$ . For these pairs of vectors we define $\\delta_{\\mathrm{c}}$ -adjacency in the following way: Let $(f(W_{1}),g(W_{1}))$ and $(f(W_{2}),g(\\bar{W}_{2}))$ be the pairs of vectors representing two committees $\\dot{W}^{1}$ and $W^{2}$ . We say that $(f(W_{1}),g(W_{1}))$ and ${(f(W_{2}),g(W_{2}))}$ are $\\delta_{\\mathrm{c}}$ -adjacent if $\\begin{array}{r}{\\sum_{t\\in\\mathcal{T}}|f(W_{1})[t]-f(W_{2})[t]|+|g(W_{1})[t]-g(W_{2})[t]|\\le\\,2\\,\\delta_{\\mathrm{c}}}\\end{array}$ . ", "page_idx": 17}, {"type": "text", "text": "It is clear there are at most $(k+1)^{2\\cdot2^{n}}$ possible ordered pairs of vectors $f$ and $g$ . For each such ordered pair of vectors we consider it relevant if there is a corresponding size- $\\cdot{\\sf k}$ committee, i.e., there are enough alternatives of each type in both $W^{\\prime}$ and $C\\cdot W^{\\prime}$ and the score of such a committee is at least $\\operatorname{SC}(W)-\\delta_{\\mathrm{{s}}}$ . Note that the scores of any two committees with the same corresponding ordered pairs of vectors must be equal because we are considering a neutral voting rule. Let $\\hat{V}:=\\{(f(U),g(U))\\mid U\\subseteq C,\\operatorname{sc}(W)-\\delta_{\\mathrm{s}}\\geq\\operatorname{sc}(U),|U|=\\mathsf{k}\\}$ be the set of ordered pairs of vectors that are relevant. We construct a restricted reconfiguration graph $\\hat{G}$ whose vertices are $\\hat{V}$ , where there is an edge between two pairs of vectors if and only if they are $\\delta_{\\mathrm{c}}$ -adjacent. Such a graph takes $(k+1)^{4\\cdot2^{n}}(\\bar{n_{+}}{m})^{{O}(1)}$ time to construct. ", "page_idx": 17}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "We proceed to show that there is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path of length $\\ell^{\\prime}$ between $W$ and $W^{\\prime}$ if and only if there is a path in $\\hat{G}$ between $(f(W),g(W))$ and ${\\left(f(W^{\\prime}),g(W^{\\prime})\\right)}$ of length at most $\\ell^{\\prime}$ . Assume there is a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path $\\left(W_{0},\\dots,W_{\\ell^{\\prime}}\\right)$ , where $W_{0}\\,=\\,W$ and $W_{\\ell^{\\prime}}\\,=\\,W^{\\prime}$ , of length $\\ell^{\\prime}$ . For every $W_{j},j\\in\\{0,\\ldots,\\ell^{\\prime}\\}$ , we construct $(f(\\dot{W}_{j}),g(W_{j}))$ as previously described. We know that $(f(W_{j}),g(W_{j}))$ must be contained in $\\hat{V}$ by construction. It is easy to observe that if $|W_{j}\\Delta W_{j+1}|\\le2\\,\\bar{\\delta}_{\\mathrm{c}}$ , then $\\begin{array}{r}{\\sum_{t\\in\\mathcal{T}}|f(W_{j})[t]-f(W_{j+1})[t]|+|g(W_{j})[t]-g(W_{j+1})[t]|\\leq2\\,\\delta_{\\mathrm{c}}}\\end{array}$ and the two vectors are $\\delta_{\\mathrm{c}}$ -adjacent. ", "page_idx": 18}, {"type": "text", "text": "Assume there is a path in $\\hat{G}$ between $(f(W),g(W))$ and $(f(W^{\\prime}),g(W^{\\prime}))$ of length at most $\\ell^{\\prime}$ . We   \nconstruct a reconfiguration path $(W_{0},\\dots,W_{\\ell^{\\prime}})$ such that $W_{0}~=~W$ , $\\dot{W}_{\\ell^{\\prime}}\\,=\\,W^{\\prime}$ and for every   \n$j\\in\\{0,\\ldots,\\ell^{\\prime}\\},t\\in\\mathcal{T}$ , it holds that $f(W_{j})[t]=|(\\mathsf{C}_{t}\\cap W_{j})\\setminus W^{\\prime}|$ and $g(W_{j})[t]=|(\\mathsf C_{t}\\cap W_{j})\\cap W^{\\prime}|$ .   \nWe set $W_{0}:=W$ . Assuming we have constructed committees $W_{0},\\dots,W_{j}$ for some $j\\in\\{0,\\ldots,\\ell^{\\prime}-$   \n$1\\}$ so that the above conditions are satisfied, we construct the next committee $W_{j+1}$ as follows: (i) For every type $t\\in\\tau$ , if $f(W_{j+1})[t]-f(W_{j})[t]>\\ 0$ , then we add arbitrary $f(W_{j+1})[t]\\mathrm{~-~}$ $f(W_{j})[t]$ many alternatives from $(\\mathsf{C}_{t}\\setminus W_{j})\\setminus W^{\\prime}$ to $W_{j}$ .   \n(ii) For every type $t\\in\\mathcal T$ , if $f(W_{j})[t]-f(\\bar{W_{j+1}})[t]>\\ 0$ , then we remove arbitrary $f(W_{j})[t]\\mathrm{~-~}$ $f(W_{j+1})[t]$ many alternatives from $(W_{j}\\cap\\mathsf{C}_{t})\\setminus W^{\\prime}$ from $W_{j}$ .   \n(iii) For every type $t\\,\\in\\,\\tau$ , if $g(W_{j+1})[t]-g(W_{j})[t]>\\ 0$ , then we add arbitrary $g(W_{j+1})[t]\\,-$ $g(W_{j})[t]$ many alternatives from $(\\mathsf{C}_{t}\\setminus W_{j})\\cap W^{\\prime}$ to $W_{j}$ .   \n(iv) For every type $t\\in\\mathcal T$ , if $g(W_{j})[t]-g(\\bar{W}_{j+1})[t]>\\ 0$ , then we remove arbitrary $g(W_{j})[t]-$ $g(W_{j+1})[t]$ many alternatives from $(W_{j}\\cap\\mathsf{\\bar{C}}_{t})\\cap W^{\\prime}$ from $W_{j}$ . ", "page_idx": 18}, {"type": "text", "text": "It is easy to see that if these exchanges can be performed, then $f(W_{j+1})[t]=|(\\mathsf{C}_{t}\\cap W_{j+1})\\setminus W^{\\prime}|$ and $g(\\dot{W}_{j+1})[t]\\,=\\,|(\\mathsf{C}_{t}\\cap W_{j+1})\\cap\\dot{W}^{\\prime}|$ must hold. We can perform Exchanges (i) and (iii), as per construction, there must be enough alternatives of the selected type $t$ in $(W_{j}\\cap\\mathsf{C}_{t})\\setminus W^{\\prime}$ and $(W_{j}\\cap\\mathsf C_{t})\\cap W^{\\prime}$ . Similarly Exchanges (ii) and (iv) can be performed, because there must be sufficiently many alternatives in $(\\mathsf{C}_{t}\\)\\{W^{\\prime})\\setminus\\bar{W}_{j}$ and $(\\mathsf{C}_{t}\\cap W^{\\prime})\\setminus W_{j}$ , because otherwise $W_{j+1}$ could not exist in the reconfiguration path. Additionally, because $\\vec{W}_{j}$ and $\\vec{W}_{j+1}$ are $\\delta_{\\mathrm{c}}$ -adjacent, the committees $W_{j}$ and $W_{j+1}$ must also be $\\delta_{\\mathrm{c}}$ -adjacent, as the number of additions and removals in (i)\u2013(iv) is upper-bounded by $\\begin{array}{r}{\\sum_{t\\in\\mathcal{T}}|f(W_{j})[t]-f(W_{j+1})[t]|+|g(W_{j})[t]-g(W_{j+1})[t]|\\leq2\\,\\delta_{\\mathrm{c}}}\\end{array}$ . The score of $W_{j+1}$ must be sufficient because otherwise $(f(W_{j+1}),g(W_{j+1}))$ would not be on the path. ", "page_idx": 18}, {"type": "text", "text": "To see that $W_{\\ell^{\\prime}}\\,=\\,W^{\\prime}$ , it is enough to observe that $W^{\\prime}$ is the only committee $U\\subseteq C$ such that $f(U)[t]=|(\\mathsf C_{t}\\cap W^{\\prime})\\setminus W^{\\prime}|=0$ and $g(U)[t]=|(\\mathsf C_{t}\\cap W^{\\prime})\\cap W^{\\prime}|=|\\mathsf C_{t}\\cap W^{\\prime}|$ for every $t\\in\\mathcal T$ . Thus we have that $W_{\\ell^{\\prime}}=W^{\\prime}$ . ", "page_idx": 18}, {"type": "text", "text": "The FPT (resp. XP) statement follows directly from the time of constructing $\\hat{G}$ and searching for a shortest path. ", "page_idx": 18}, {"type": "text", "text": "B.5 Proof of Proposition 5 ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Proposition $\\mathsf{5\\;(\\star)}$ . For all neutral and score-based multi-winner voting rules $\\lambda$ such that the score of a committee can be computed in polynomial time, $\\lambda$ -MR is solvable in $2^{2{\\mathsf{b}}n}(n+m)^{O(1)}$ time, and hence FPT wrt. $n+{\\mathfrak{b}}$ . ", "page_idx": 18}, {"type": "text", "text": "Proof. Let $\\mathcal{P}=(C=[m],V,R)$ be a preference profile and $I=(\\mathcal{P},\\boldsymbol{\\mathsf{k}},\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}},W,W^{\\prime})$ an instance of $\\lambda$ -MR. As every voter approves at most b alternatives, the number of alternatives that are approved by at least one voter is at most bn. Let $\\hat{C}=\\cup_{i\\in V}\\mathsf{A}_{i}$ denote the set of alternatives that are approved by at least one voter. Then $|\\hat{C}|\\le\\mathsf{b}n$ We call these alternatives relevant and the rest of the alternatives irrelevant. ", "page_idx": 18}, {"type": "text", "text": "For every two size- $\\cdot{\\sf k}$ committees $W_{1},W_{2}$ such that $W_{1}\\cap\\hat{C}=W_{2}\\cap\\hat{C}$ , there is a reconfiguration path from $W_{1}$ to $W_{2}$ by swapping the irrelevant alternatives one by one. This is true because the irrelevant alternatives are not approved by any voter and $\\lambda$ is neutral, so their identity does not affect the score of the committee. We can use this observation to create a modified reconfiguration graph where we disregard the information concerning the identity of irrelevant alternatives. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "We create a modified reconfiguration graph G\u02c6R. The vertices are all at most size- $\\cdot{\\sf k}$ committees of $\\hat{C}$ such that, possibly together with some irrelevant alternatives, they could be committees on a reconfiguration path. Formally, the set of vertices of G\u02c6R is ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{V(\\hat{G}^{\\mathrm{R}})=\\lbrace u_{C^{\\prime}}\\mid C^{\\prime}\\subseteq\\hat{C}\\mathrm{~s.t.~}|C^{\\prime}|\\leq k\\wedge\\operatorname{sc}_{\\lambda}(W)-\\operatorname{sc}_{\\lambda}(C^{\\prime}\\cup\\hat{W})\\leq\\delta_{\\mathrm{s}}}}\\\\ {{\\mathrm{~for~some~}\\hat{W}\\subseteq C\\setminus\\hat{C}\\mathrm{~with~}|\\hat{W}|=k-|C|\\rbrace.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Since $|{\\hat{C}}|\\leq\\mathsf{b}n$ , we have that $|V(\\hat{G}^{\\mathsf{R}})|\\leq2^{\\mathsf{b}n}$ . There is an edge between two vertices $u_{W_{1}}$ and $u_{W_{2}}$ if there are two committees containing $W_{1}$ and $W_{2}$ as their relevant alternatives, which are $\\delta_{\\mathrm{c}}$ -adjacent. Formally $u_{W_{1}}$ and $u_{W_{2}}$ are adjacent if $|W_{1}\\setminus W_{2}|\\le\\delta_{\\mathrm{c}}$ and $|W_{2}\\setminus W_{1}|\\le\\delta_{\\mathrm{c}}$ . The number of edges of $G^{\\mathsf{R}}$ , i.e., $|V(G^{\\mathsf{R}})|^{2}$ is bounded above by $(2^{\\flat n})^{2}$ . Similarly to the proof of Proposition 3, we can search for a path from $u_{W\\cap\\hat{C}}$ to $u_{W^{\\prime}\\cap\\hat{C}}$ in $2^{2{\\mathsf{b}}n}\\cdot(n+m)^{O(1)}$ time. ", "page_idx": 19}, {"type": "text", "text": "Finally, we show that there exists a path from $u_{W\\cap\\hat{C}}$ to $u_{W^{\\prime}\\cap\\hat{C}}$ in the modified reconfiguration graph if and only if there exists a $(\\delta_{\\mathrm{c}},\\delta_{\\mathrm{s}})$ -reconfiguration path for $I$ . ", "page_idx": 19}, {"type": "text", "text": "For the if direction, let $W_{0},\\dots,W_{t}$ with $W_{0}\\,=\\,W$ and $W_{t}\\,=\\,W^{\\prime}$ be a reconfiguration path. For each committee $W_{i}$ on the path there must exist a vertex $u_{W_{i}\\cap\\hat{C}}$ . Since $|W_{i}\\setminus W_{i+1}|\\stackrel{\\_}{\\le}\\delta_{\\mathrm{c}}$ and $|W_{i+1}\\setminus W_{i}|\\leq\\delta_{\\mathrm{c}}$ it follows that $|(W_{i+1}\\cap\\hat{C})\\setminus(W_{i}\\cap\\hat{C})|\\le\\delta_{\\mathrm{c}}$ and $|(W_{i}\\cap\\hat{C})\\setminus(W_{i+1}\\cap\\hat{C})|\\le\\delta_{\\mathrm{c}}$ . Therefore it follows that $u_{W_{1}\\cap\\hat{C}},\\dots,u_{W_{t}\\cap\\hat{C}}$ is a path in the modified reconfiguration graph. ", "page_idx": 19}, {"type": "text", "text": "For the only-if direction, we first note that irrelevant alternatives can be exchanged with other irrelevant alternatives without changing the score. We order the irrelevant alternatives in an arbitrary but fixed way such that the irrelevant alternatives in $W$ are before all other irrelevant alternatives. Let $u_{V_{0}},\\ldots,u_{V_{t}}$ be a path in the reconfiguration graph such that $V_{0}=W\\cap\\hat{C}$ and $V_{t}=W^{\\prime}\\cap\\hat{C}$ . We will now iteratively build a reconfiguration path. We set $W_{0}=W$ . Let $W_{0},\\dots,W_{i}$ be the committees corresponding to the first $i$ vertices on the path. We create $W_{i+1}$ in the following way: ", "page_idx": 19}, {"type": "text", "text": "If $|V_{i}|=|V_{i+1}|$ , then we set $W_{i+1}=W_{i}\\setminus(V_{i}\\setminus V_{i+1})\\cup(V_{i+1}\\setminus V_{i})$ . In this case $|W_{i+1}|=|W_{i}|$ , $|W_{i+1}\\setminus W_{i}|=|V_{i+1}\\setminus V_{i}|\\le\\delta_{\\mathrm{c}}$ , and $|W_{i}\\setminus W_{i+1}|=|V_{i}\\setminus V_{i+1}|\\le\\delta_{\\mathrm{c}}$ . Therefore this is a valid reconfiguration step. ", "page_idx": 19}, {"type": "text", "text": "If $|V_{i}|>|V_{i+1}|$ , then let $I$ be the $|V_{i}|-|V_{i+1}|$ many irrelevant alternatives with the lowest index which are not in $W_{i}$ . We then set $W_{i+1}=W_{i}\\setminus(V_{i}\\setminus V_{i+1})\\cup(V_{i+1}\\setminus V_{i})\\cup I.$ . In this case $|W_{i+1}|=|W_{i}|$ and due to this $|W_{i+1}\\setminus W_{i}|=|W_{i}\\setminus W_{i+1}|$ . As $|W_{i}\\setminus W_{i+1}|=|V_{i}\\setminus V_{i+1}|\\le\\delta_{\\mathrm{c}}$ , this is also a valid reconfiguration step. ", "page_idx": 19}, {"type": "text", "text": "In the last case that $|V_{i}|<|V_{i+1}|$ , let $I$ be the $|V_{i+1}|-|V_{i}|$ many irrelevant alternatives with the highest index which are in $W_{i}$ . We then set $W_{i+1}\\overset{\\cdot}{=}\\overset{\\cdot}{(W_{i}\\setminus I)}\\,\\backslash\\,(V_{i}\\,\\backslash\\,V_{i+1})\\cup(V_{i+1}\\,\\backslash\\,V_{i})$ . In this case $|\\bar{W}_{i+1}|=|W_{i}|$ and due to this $|W_{i+1}\\setminus W_{i}|=|W_{i}\\setminus W_{i+1}|$ . As $|W_{i}\\setminus W_{i+1}|=|V_{i+1}\\setminus V_{i}|\\leq\\delta_{\\mathrm{c}}$ , this is also a valid reconfiguration step. ", "page_idx": 19}, {"type": "text", "text": "It is easy to see that the obtained $u_{V_{i+1}}$ is in the reconfiguration graph, as $\\operatorname{SC}(V_{i+1}\\cup(W_{i+1}\\backslash\\hat{C}))=$ $\\operatorname{SC}(W_{i+1})\\geq\\operatorname{SC}(W)-\\delta_{\\mathrm{s}}$ . ", "page_idx": 19}, {"type": "text", "text": "By repeating this process, we get a reconfiguration path from $W$ to a committee $W_{t}$ which satisfies $\\dot{W_{t}}\\cap\\dot{C}=\\dot{W^{\\prime}}\\cap\\dot{C}$ . Therefore the alternatives in $W_{t}\\Delta W^{\\prime}$ are only irrelevant alternatives. We can greedily exchange these alternatives to obtain a reconfiguration path from $W_{t}$ to $W^{\\prime}$ , thereby completing our proof. \u53e3 ", "page_idx": 19}, {"type": "text", "text": "B.6 Proof of Proposition 6 ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Proposition 6 $(\\star)$ . DSR-TJ is W[2]-hard wrt. $h+{\\hat{\\ell}}.$ . ", "page_idx": 19}, {"type": "text", "text": "Proof. We provide a parameterized reduction from the W[2]-complete DOMINATING SET problem (Downey and Fellows, 2013) which is adapted from the one of Mouawad et al. (2016). We will point out the differences in the reduction. ", "page_idx": 19}, {"type": "text", "text": "DOMINATING SET (DS) Input: A graph $\\hat{G}$ and a non-negative integer $h$ . ", "page_idx": 20}, {"type": "text", "text": "Question: Does $\\hat{G}$ admit a dominating set of size $h$ ? ", "page_idx": 20}, {"type": "text", "text": "We first show the construction and then the correctness. Note that in our construction, the size of the dominating set as well as the length of a shortest reconfiguration path in the reduced instance will be linearly bounded by $h$ . ", "page_idx": 20}, {"type": "text", "text": "Construction. Let $(\\hat{G},h)$ be a DS instance with $\\hat{V}=\\{u_{1},\\ldots,u_{\\hat{n}}\\}$ being the vertex set of $G$ . The graph $G$ of the created instance of DSR-TJ consists of two independent graphs $H_{1}$ and $H_{2}$ . ", "page_idx": 20}, {"type": "text", "text": "The first graph $H_{1}$ consists of $h+4$ cliques (i.e., complete subgraphs), each of size $h+3$ (rather than $h+2$ -cliques consisting of $h+1$ vertices as in the original reduction of Mouawad et al.). We refer to these cliques as $C_{0},\\ldots,C_{h+3}$ . We furthermore label the vertices in each clique $C_{i}$ as $v_{i,1},\\ldots,v_{i,h+3}$ . Finally, we add to $H_{1}$ the following edges $E^{\\prime}=\\{\\{v_{0,i},v_{z,i}\\}\\mid\\forall\\:i,z\\in[\\bar{h}+3]\\}$ . In other words, we make each vertex in $C_{0}$ adjacent to the vertex in each other clique $C_{z}$ $\\mathit{z}\\in[h+3])$ that have the same second index. Therefore, each vertex in each of the cliques $C_{1},\\ldots,C_{h+3}$ is adjacent to a vertex in $C_{0}$ , with no two vertices from the same clique $C_{z}$ being adjacent to the same vertex in $C_{0}$ . ", "page_idx": 20}, {"type": "text", "text": "The second graph $H_{2}$ is the same as the one in the original reduction. It consists of $h+2$ copies of the original graph $\\hat{G}$ which we label as $G_{0}=(V_{1},E_{1}),\\ldots,G_{h+1}=(V_{h+1},E_{h+1})$ . For each $z\\in$ $\\{0,\\ldots,h{+}1\\}$ , let $w_{z,1},\\ldots,w_{z,|V|}$ denote the vertices in $G_{i}$ . We add to $H_{2}$ the following edges $E^{\\prime\\prime}=$ $\\{\\{w_{0,i},w_{z,j}\\}\\mid i,j\\in[n],z\\in[h+1]$ s.t. $\\{u_{i},u_{j}\\}\\in E(\\hat{G})\\vee i\\,=\\,j\\}$ . In other words, we make each vertex $w_{0,i}\\in G_{0}$ adjacent to the copies of its neighbors in $G_{0}$ and to its copies $w_{1,i},\\ldots,w_{h+1,i}$ in $G_{1},\\dotsc,G_{h+1}$ . ", "page_idx": 20}, {"type": "text", "text": "Finally, we add to $H_{2}$ a set $D$ of $h+2$ dummy vertices $d_{0},\\ldots,d_{h+1}$ and edges that connect the copied graphs, one for each copy. For every $z\\in\\{0,\\dots,h+1\\}$ , we make $d_{z}$ adjacent to all vertices in $G_{z}$ and all vertices in $G_{0}$ . ", "page_idx": 20}, {"type": "text", "text": "We define the initial and target dominating sets as $V_{s}\\;=\\;V(C_{0})\\cup D\\cup\\{w_{1,1},\\ldots,w_{1,h}\\}$ and $V_{t}=\\{v_{i,i}\\mid i\\in[h+3]\\}\\cup D\\cup\\{w_{1,1},\\ldots,\\bar{w_{1,h}}\\}$ , respectively. Note that the set $\\{w_{1,1},\\ldots,w_{1,h}\\}$ is not necessary to dominate the vertices in the created graph, but is needed to maintain the size bound; it can be replaced with an arbitrary but fixed vertex subset of $V(G_{0})$ of size $h$ . We use this subset for ease of reasoning. ", "page_idx": 20}, {"type": "text", "text": "To complete the construction, we define the size bound $\\hat{h}=3h+5$ and $\\ell=4h+5$ . Clearly, the construction can be done in polynomial time and $|V_{s}|=|V_{t}|=\\hat{h}$ . ", "page_idx": 20}, {"type": "text", "text": "Correctness. We show that $(G,h)$ admits a size- $h$ dominating set if and only if the constructed instance has a length- $\\ell$ reconfiguration path between $V_{s}$ and $V_{t}$ . For the \u201conly if\u201d part, let $U^{\\prime}$ denote a size- $h$ dominating set of $\\hat{G}$ . We first exchange the $h$ vertices $w_{1,z}$ , $z\\in[h]$ , one-by-one with the vertices from the copies corresponding to $V^{\\prime}$ , i.e., $\\{w_{1,i}\\;\\mid\\;u_{i}\\;\\in\\;U^{\\prime}\\}$ . Afterwards, we exchange each dummy vertex from $D$ with a distinct vertex $v_{z,z}$ , $z\\in[h+2]$ . Next, we exchange one vertex from $V(C_{0})$ with vertex $v_{h+3,h+3}$ . Note that now the remaining vertices from the clique $C_{0}$ are not necessary to dominate the vertices in the created graph anymore. Thus, we can exchange the remaining $h+2$ vertices from the clique $C_{0}$ with the $h+2$ dummies from $D$ , one-by-one, reaching the target dominating set. The length of the reconfiguration path is $h+h+2+h+3=3h+5=\\ell$ . ", "page_idx": 20}, {"type": "text", "text": "For the \u201cif\u201d part, assume that the constructed instance admits a length- $\\ell$ reconfiguration path between $V_{s}$ and $V_{t}$ . We aim to show that on the reconfiguration path there must be a dominating set of $H_{1}\\cup H_{2}$ containing a size- $h$ subset which corresponds to a dominating set of $\\hat{G}$ . We recall an observation by Mouawad et al. that for $h+4$ cliques, each of size $h+3$ , and connected as described in their construction, they need $h+3$ additional vertices on that graph in order to be able to switch from the dominating set consisting of $V(C_{0})$ to the dominating set $\\left\\{v_{i,i}\\mid i\\in[h+2]\\right\\}$ via TAR, as one needs to dominate all vertices from $C_{z}$ , $z\\in[h+3]$ , before removing any vertex from $C_{0}$ . ", "page_idx": 20}, {"type": "text", "text": "We show similarly that for the TJ variant we can only afford to have $h$ vertices to dominate all vertices from $H_{2}$ in order to \u201csave up\u201d $h\\!+\\!2$ to exchange for the vertices from $\\{v_{z,z}\\mid z\\in[h\\!+\\!2]\\}$ . To achieve this, we claim that for each dominating set $X$ on the reconfiguration path which does not contain all vertices from the clique $C_{0}$ , i.e., $|X\\cap V(C_{0})|\\neq|V(C_{0})|$ , it must hold that $|V(C_{z})\\in X|\\geq1$ for every $z\\in[h+2]$ . Let $v_{0,i}$ be a vertex that is not included in $X$ . Then, in order to dominate all vertices from $\\{v_{z,i}\\mid z\\in[h+3]\\}$ , we need a vertex from each clique $C_{z}$ , as claimed. Since no vertex in $C_{0}$ is contained in $V_{t}$ , in order to reconfigure from $V_{s}$ to $V_{t}$ , there must be an intermediate dominating set $X^{\\prime}$ where one vertex from $V(C_{0})$ is missing and at least one vertex from each clique $C_{z}$ is present. This means that $X^{\\prime}$ contains $h+3+h+2=2h+5$ vertices from the first graph $H_{1}$ . By the size bound $\\hat{h}=3h+5$ , we need $h$ vertices to dominate the second graph $H_{2}$ . By construction, this is possible only if it corresponds to a size- $\\cdot h$ dominating set of the input graph $\\hat{G}$ . This concludes the \u201cif\u201d part and the correctness proof. \u53e3 ", "page_idx": 20}, {"type": "image", "img_path": "kZfxICBXd1/tmp/278cd8c9164bfcf6d73a2327be70cbe2c3c89937c2574b5fd1312df95a04689c.jpg", "img_caption": ["Figure 3: Left: The dependency of the median time to find a reconfiguration path to the number of voters $_n$ on Netfilx data. Right: The dependency of the median time to find a reconfiguration path to the radius of Manhattan data. "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "kZfxICBXd1/tmp/7eada17d8522a02a07d7a1d840e03320b04f6651af14e6775b817f27995ec9e8.jpg", "img_caption": ["Figure 4: Left: CC, Right: PAV. The dependency of a median time to find a reconfiguration path to $p$ under $(p{-}\\phi)$ -Resampling data, measured in seconds. "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "C Experimental Research ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In this section, we present some preliminary research on how easy reconfiguration paths are to find in practice. We discover that reconfiguration paths almost always exist and can be found quite efficiently. We use both real-life (Netflix Prize data (Netflix, 2006)) and synthetic data (geometric and $(p{-}\\phi)$ -resampling). ", "page_idx": 21}, {"type": "text", "text": "C.1 Setup and Heuristic ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We perform the experiments for both CC and PAV and committee sizes $\\mathsf{k}\\in\\{3,4,5\\}$ . ", "page_idx": 21}, {"type": "text", "text": "For each instance-rule- $\\cdot{\\sf k}$ -combination, we create 100 random committees. We order them by score, then pick and pair the 20 best ones. This way we obtain random but still reasonably well-scoring ", "page_idx": 21}, {"type": "text", "text": "Table 2: Netflix data: Median, average, and variance of the running time, and the number of committee pairs.   \nThe data is only taken on the committee pairs that did not time out, except the total number of committee pairs.   \nThe proportion of timeouts is in Table 3. Timeout 60s. ", "page_idx": 22}, {"type": "table", "img_path": "kZfxICBXd1/tmp/c82da8a744cf33b60a6f61d15cea1901f0d58ccc342be9d868da5d4b12bc094f.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "committees. If the number of alternatives is too small to obtain 100 random committees, we skip the instance. For each pair, we choose the lower scoring committee as the starting committee $W$ , the higher scoring as the goal committee $W^{\\prime}$ , and set $\\delta_{\\mathrm{s}}=0$ and $\\delta_{\\mathrm{c}}=1$ . ", "page_idx": 22}, {"type": "text", "text": "To find a reconfiguration path, we create an initial set $S:=W\\cup W^{\\prime}$ . We create the reconfiguration graph that only uses the alternatives in $S$ . We use Python and our modification of the abcvoting library (Lackner et al., 2023) to find all the committees that use alternatives in $S$ and whose score is at least $\\operatorname{SC}(W)$ . If there is no $W{\\cdot}W^{\\prime}$ path in this graph, we add the alternative with the highest number of approvals outside of $S$ to $S$ , and add the sufficiently high-scoring committees within $S$ that contain this alternative to the reconfiguration graph. We repeat this until we either find a reconfiguration path, show there is no path, or time out. ", "page_idx": 22}, {"type": "text", "text": "The experiments are run on Python 3.10.12. Additionally we use for example the following Python libraries: abcvoting version 2.8.0, Gurobipy version 10.0.2 and Networkx version 3.1. A complete list of all the dependencies is in the supplementary material. We modify the abcvoting library to be able to compute all committees whose score is at least some percentage of the optimal score. The experiments are run on Ubuntu 22.04.2 with $3.8\\ \\mathrm{GB}$ of RAM, CPU of the virtual machine \u201cIntel Xeon (Cascadelake), 2x 1-Core\u201d, on a host with \u201cIntel Xeon Gold 5215, 2x 10-Core\u201d. ", "page_idx": 22}, {"type": "text", "text": "We set the timeout for finding the reconfiguration path to 60 seconds. ", "page_idx": 22}, {"type": "table", "img_path": "kZfxICBXd1/tmp/7a310af3b28354187a407ab82f6fafad830c23208ad4faa3ec64c0d5cb748d94.jpg", "table_caption": ["Table 3: Netflix data: The proportion of timeout pairs. Timeout 60s. "], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "kZfxICBXd1/tmp/6a303201f1867b3d60cae680c30e988f3e61afc63bc4fab8999a3211790cb443.jpg", "table_caption": ["Table 4: Manhattan data: Median, average, and variance of the running time. The data is only taken on the committee pairs that did not time out. The proportion of timeouts is in Table 5. Timeout 60s. There are 100 instances for each radius. "], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "kZfxICBXd1/tmp/d44cf6e7a9bf757c4f1b50498cc3a75a8631a58f6a9c83cfa977c02629069eae.jpg", "table_caption": ["Table 5: Manhattan data: The proportion of timeout pairs. Timeout 60s. "], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "kZfxICBXd1/tmp/f9398fd11501385081803e35c97fbaae1795876bb21095fa6b26fcf822158374.jpg", "table_caption": ["Table 6: Resampling data: Median, average, and variance of the running time. The data is only taken on the committee pairs that did not time out. The proportion of timeouts is in Table 7. Timeout 60s. There are 100 instances for each $\\left(p\\mathrm{-}\\phi\\right)$ -pair. "], "table_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "kZfxICBXd1/tmp/87bc5e851a7ac255952f5cadb12f9230ce7e733d8decfa3f33929ba8ccad6836.jpg", "table_caption": ["Table 7: Resampling data: The proportion of timeout pairs. Timeout 60s. "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "C.1.1 Data Preprocessing ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Netfilx data. Netfilx data contains ratings for 17770 movies from 480189 users.The ratings contain the date of the rating and an integer score from the range [1, 5]. To create approval preferences, we interpret a rating lower than 2 or a lack of a rating as disapproval, and a rating of at least 3 as approval. To make multiple elections, we divide the ratings by date. There are in total 2180 days. ", "page_idx": 25}, {"type": "text", "text": "We turn the ratings into approval votes and divide them by dates. To make the instances smaller, for each day, we remove all the movies that got fewer than $5\\%$ of the number of approvals of the most popular movie of the day. We also ignore each day with fewer than 10 voters (i.e., users) or 5 alternatives (i.e., movies). In the end 2162 instances remain. ", "page_idx": 25}, {"type": "text", "text": "Synthetic data. In all synthetic instances, we have $n=100$ voters and $m\\,=\\,100$ alternatives. However, if either a voter does not approve of any alternatives or an alternative is approved by no voter, then it is removed from the instance. As a result, some instances have fewer voters or alternatives. We create two different types of data sets. ", "page_idx": 25}, {"type": "text", "text": "The first type uses geometric (Manhattan) preferences: We choose the locations of both voters and alternatives uniformly at random in $[0,1]\\times[0,1]$ . We fix a radius $r$ , and each voter approves the alternatives that are within distance $r$ from him according to the metric given by the $\\ell_{1}$ -norm. We use the values $\\{0.1,0.2,\\ldots,0.7\\}$ for $r$ and create 100 instances for every value of $r$ . ", "page_idx": 25}, {"type": "text", "text": "The second type uses $(p{-}\\phi)$ -resampling model (Szufa et al., 2022). In this model the variable $p$ is the probability that a voter approves of an alternative, and $\\phi\\,\\in\\,[0,1]$ controls how dissimilar the voters are to each other; the higher $\\phi$ , the less similar the voters are. We use values $(p,\\phi)\\in$ $\\{0.05,0.25,0.5,0.75\\}\\times\\{0.25,0.5,0.75,1\\}$ , and create 100 instances for every combination. ", "page_idx": 25}, {"type": "text", "text": "More formally, we first create a central vote that consists of $\\lfloor p\\cdot m\\rfloor$ randomly selected alternatives. The central vote disapproves all other alternatives. For every voter-alternative pair $(v_{i},c_{i})$ , the voter $v_{i}$ takes his opinion on $c_{i}$ from the central vote with probability $1-\\phi$ and with probability $\\phi$ \u201cresamples\u201d his opinion on $c_{i}$ : He approves $c_{i}$ with probability $p$ . ", "page_idx": 25}, {"type": "text", "text": "C.2 Evaluation ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "The median running times of the instances that did not time out are presented in Figure 3 and Figure 4.   \nMore detailed data is presented in Tables 2 to 7. ", "page_idx": 25}, {"type": "text", "text": "Overall we discover that finding a reconfiguration path is relatively fast in practice, and CC is noticeably faster than PAV. Despite our timeout being only 60 seconds, less than $0.03\\%$ of the committee pairs time out. More detailed breakdown of timeouts can be found in Tables 3, 5 and 7. ", "page_idx": 25}, {"type": "text", "text": "Of the pairs that did not time out, all but three pairs of committees admit a reconfiguration path. The three pairs in question were all from Manhattan data with radius 0.6 and $\\mathsf{k}=3$ . We must however note that it is rather difficult to show non-existence of reconfiguration path, because it requires in theory creating the whole reconfiguration graph, whose size is in $O(m^{\\mathsf{k}})$ . ", "page_idx": 25}, {"type": "text", "text": "Median running times for Netfilx data, divided by the number of voters, are presented in Figure 3[Left]. More detailed information is available in Tables 2 and 3. The effect of the number of voters is surprisingly small. ", "page_idx": 25}, {"type": "text", "text": "Median running times of Manhattan data, divided by different values of $p$ and $\\phi$ , are presented in Figure 3[Right], and more detailed information in Tables 4 and 5. The larger the radius, i.e., the more alternatives the voters approve, the harder PAV appears to be. ", "page_idx": 25}, {"type": "text", "text": "Median running times of $(p{-}\\phi)$ -resampling data, divided by different values of $p$ and $\\phi$ , are presented in Figure 4, and more detailed information in Tables 6 and 7. The effect of $\\phi$ to the running time appear to be rather moderate, although we can see from Table 7 that the timeouts are most frequent when $\\phi$ is high, i.e., the votes are dissimilar. We see from Figure 4[Right] that under PAV the approval probability $p$ has a clear effect on the running time: $p=0.5$ has the highest running time, with the times decreasing further away. The problem appears easier when the alternatives either approve a few or almost all alternatives. ", "page_idx": 25}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: All computational complexity claims made in the abstract and introduction are backed up by the main body of the paper. To the best of our knowledge we are the first to introduce the framework presented in the paper. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 26}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: We make it clear that our experimental research is only preliminary, and should be only used as a suggestion of interesting future research directions. Otherwise, our work is only theoretical. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 26}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: All of our results have complete proofs either in the main paper or the appendix.   \nThe guidelines are followed. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 27}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The setup is described in detail in Appendix C. The dependencies are described. All the code is included in the code appendix. The datasets are either provided by us, or in the case of Netflix data, can be derived from publicly available data using our code or description. The appendix contains also a description of the hardware we use. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). ", "page_idx": 27}, {"type": "text", "text": "(d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 28}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The code and the synthetic data are included in the supplementary material. The raw Netfilx data, which is not ours, is available at Netfilx (2006). Code and description of the preprocessing are included in the supplementary material and Appendix C. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 28}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: The parameters for the creation of the synthetic data are described, as are the parameters of the reconfiguration path we are looking for (committee size, $\\delta_{\\mathrm{s}},\\,\\delta_{\\mathrm{c}})$ . This information is not included in the main paper, because the experiments are only preliminary, and we do not make wide claims based on them. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 28}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We do not make claims of the significance of our results, as the research is only expressed as preliminary observation that requires further research. However, we do report the variance in Appendix C. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 29}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: The resources are provided in Appendix C. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 29}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: Our research has no societal or human impact. All datasets and code are credited and their licenses described. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 29}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 30}, {"type": "text", "text": "Justification: There is no societal impact. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 30}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Justification: There is no such risk. All data is either synthetic or derived from a public dataset. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 30}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: abcvoting library and the Netfilx data are cited, and their licenses are available there. abcvoting library uses MIT license and Netfilx data its own license, which is described in its references Netflix (2006). ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 31}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We include a documentation of the synthetic instances we created in the supplementary material. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 31}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: There is no crowdsourcing or human experiments. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 31}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: There is no crowdsourcing or research on human subjects. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 32}]