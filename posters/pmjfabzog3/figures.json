[{"figure_path": "pMJFaBzoG3/figures/figures_1_1.jpg", "caption": "Figure 1: Illustration of OT4P with colored dots to help visualize the transformation. In the limit of temperature, the orthogonal matrices obtained from OT4P converge near the permutation matrices.", "description": "This figure illustrates the two-step process of the OT4P transformation.  Step I shows how an unconstrained vector from R<sup>n(n-1)/2</sup> is mapped to an orthogonal matrix in SO(n) using the Lie exponential map. Step II demonstrates the temperature-controlled geodesic movement from the orthogonal matrix towards the closest permutation matrix in the manifold Mp.  The colored dots visualize the transformation process, emphasizing the convergence of orthogonal matrices to permutation matrices as the temperature approaches its limit.", "section": "3 Relaxing permutation on orthogonal group"}, {"figure_path": "pMJFaBzoG3/figures/figures_4_1.jpg", "caption": "Figure 2: Illustration of the mappings logmp and expmp. The left translation Lp establishes an isometry between the neighborhoods of I and P, and its derivative (dLp)e provides an isomorphism between so(n) and TpSO(n).", "description": "This figure illustrates the two mappings used in Step II of OT4P, which is the process of moving an orthogonal matrix O towards the closest permutation matrix P along a geodesic. The left translation Lp creates an isometry between the neighborhoods of the identity matrix I and P.  Its derivative (dLp)e provides an isomorphism between the Lie algebra so(n) and the tangent space TpSO(n) at P. This isomorphism allows for efficient movement towards P in the tangent space, which is then mapped back to SO(n) using expmp. The entire process is designed to efficiently and accurately move O towards P using geodesic interpolation.", "section": "3.1 The proposed OT4P transformation"}, {"figure_path": "pMJFaBzoG3/figures/figures_9_1.jpg", "caption": "Figure 3: F-scores (%) for different algorithms on the WILLOW-ObjectClass dataset, where the size of permutation synchronization problem instances varies along the horizontal axis.", "description": "This figure compares the performance of different algorithms for solving permutation synchronization problems on the WILLOW-ObjectClass dataset.  The x-axis represents the size of the problem instances, and the y-axis represents the F-score, a measure of the accuracy of the algorithms.  The different lines represent different algorithms: Reg, OrthReg, RiemanBirk, Sinkhorn, and OT4P (with three different temperature parameters). The figure shows that OT4P generally outperforms the other algorithms, particularly as the problem size increases.", "section": "4.3 Solving permutation synchronization"}, {"figure_path": "pMJFaBzoG3/figures/figures_17_1.jpg", "caption": "Figure 4: Eigenvalues corresponding to cycles of different lengths, where eigenvalues from the same cycle are connected to illustrate repeated values at -1.", "description": "This figure visualizes the eigenvalues of permutation matrices corresponding to cycles of different lengths (2, 3, 4, and 5).  It demonstrates that cycles of even length consistently have an eigenvalue of -1. Since the eigenvalues of a permutation matrix are composed of those from the submatrices corresponding to its contained cycles, this illustrates that many permutation matrices possess an eigenvalue of -1.", "section": "3.1 The proposed OT4P transformation"}, {"figure_path": "pMJFaBzoG3/figures/figures_19_1.jpg", "caption": "Figure 5: Visualization of the results of Equation (11) as the parameter \u03c4 varies. At \u03c4 = 1.0, the matrices are original orthogonal matrices; at \u03c4 = 0.0, they are the permutation matrices closest to original orthogonal matrices.", "description": "This figure visualizes how the transformation in Equation (11) affects orthogonal matrices as the temperature parameter \u03c4 changes.  The top row shows the transformation for even permutations, while the bottom row shows it for odd permutations.  As \u03c4 decreases from 1.0 to 0.0, the orthogonal matrices gradually approach their nearest permutation matrices.  This demonstrates the temperature control mechanism of OT4P in mapping unconstrained vector spaces to orthogonal matrices, concentrating them near permutation matrices as temperature approaches 0.", "section": "3.1 The proposed OT4P transformation"}, {"figure_path": "pMJFaBzoG3/figures/figures_22_1.jpg", "caption": "Figure 3: F-scores (%) for different algorithms on the WILLOW-ObjectClass dataset, where the size of permutation synchronization problem instances varies along the horizontal axis.", "description": "This figure compares the performance of different algorithms (Reg, OrthReg, RiemanBirk, Sinkhorn, and OT4P with different temperature parameters) on the WILLOW-ObjectClass dataset for the permutation synchronization problem.  The x-axis represents the size of the problem instance (number of points to match), and the y-axis represents the F-score, a measure of the accuracy of the matching.  The figure shows that OT4P consistently achieves higher F-scores than the other methods, particularly as the problem size increases. This demonstrates the effectiveness of OT4P for large-scale permutation synchronization problems.", "section": "4.3 Solving permutation synchronization"}, {"figure_path": "pMJFaBzoG3/figures/figures_23_1.jpg", "caption": "Figure 7: Matching between the first and last images of the CMU House for k = 110, where the obtained matchings are connected (green: correct, red: incorrect).", "description": "This figure visualizes the results of applying OT4P to the CMU House dataset with k=110.  It shows the matching between the first and last images of the sequence. Green lines represent correctly matched points, while red lines indicate incorrect matches.  Different subfigures show the results for different values of the temperature parameter \u03c4, demonstrating how the accuracy of the matching changes with different \u03c4 values.", "section": "4.3 Solving permutation synchronization"}]