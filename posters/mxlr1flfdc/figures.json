[{"figure_path": "mXlR1FLFDc/figures/figures_1_1.jpg", "caption": "Figure 1: Example applications of our compositional inference framework for (Left) MMAP and (Right) Success Probability in Prob. Logic Programing under the Stable Model semantics (MaxEnt).", "description": "This figure illustrates two example applications of the compositional inference framework presented in the paper.  The left side shows how Marginal MAP (MMAP) query can be broken down into a composition of basic operators.  MMAP finds the most likely assignment of a subset of variables given some evidence in a probabilistic circuit. The right side illustrates how success probability inference in probabilistic logic programming can also be represented compositionally. This query calculates the probability of a query under a logic program's semantics (here, MaxEnt), represented as a circuit.", "section": "Introduction"}, {"figure_path": "mXlR1FLFDc/figures/figures_3_1.jpg", "caption": "Figure 2: Examples of Algebraic Circuits.", "description": "The figure contains two examples of algebraic circuits. The first is a Boolean circuit that is smooth, decomposable, and deterministic, but not X-deterministic. The second is a probabilistic circuit that is smooth, decomposable, and X-deterministic.  These examples illustrate the concept of algebraic circuits and how different circuit properties can lead to different levels of tractability for various inference tasks. The properties shown are important for the tractability conditions discussed in the paper.", "section": "3 Compositional Inference: A Unifying Approach"}, {"figure_path": "mXlR1FLFDc/figures/figures_8_1.jpg", "caption": "Figure 3: Failure case of 2AMC algorithm on smooth, decomposable, X-first circuit.", "description": "The figure shows a counter-example to demonstrate that even if a Boolean circuit is smooth, decomposable, X-first, and deterministic, the 2AMC algorithm may still return an incorrect result.  The example highlights the limitations of relying solely on the X-first property for tractability in 2AMC.", "section": "4.1 Algebraic Model Counting"}, {"figure_path": "mXlR1FLFDc/figures/figures_24_1.jpg", "caption": "Figure 4: Illustration of PC computing hidden Markov model (HMM)", "description": "The figure demonstrates how a probabilistic circuit (PC) can represent a hidden Markov model (HMM).  Panel (a) shows the graphical model of the HMM, illustrating the dependencies between hidden variables (X) and observed variables (Y). Panel (b) shows the corresponding PC, where nodes represent computations based on the HMM structure. Panel (c) depicts the vtree (variable tree) used to organize the PC construction, indicating how variables are grouped and processed. Panel (d) shows a single component of the PC, outlining the computations performed to calculate a conditional probability.  The figure visualizes how the structure of the PC mirrors the HMM's dependencies, leading to efficient inference. ", "section": "4.1 Algebraic Model Counting"}]