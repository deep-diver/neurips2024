[{"type": "text", "text": "CONTRAST: Continual Multi-source Adaptation to Dynamic Distributions ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Sk Miraj Ahmed2,\u2217\u2020 , Fahim Faisal Niloy1,\u2217, Xiangyu Chang1, Dripta S. Raychaudhuri3,\u2021 , Samet Oymak4, Amit K. Roy-Chowdhury1 ", "page_idx": 0}, {"type": "text", "text": "1University of California, Riverside, 2Brookhaven National Laboratory, 3AWS AI Labs, 4University of Michigan, Ann Arbor {sahme $047\\,\\@$ , fnilo001 $@$ , cxian ${008}@$ , drayc $:\\!001\\,\\@$ , amitrc $@$ ece.}ucr.edu, oymak@umich.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Adapting to dynamic data distributions is a practical yet challenging task. One effective strategy is to use a model ensemble, which leverages the diverse expertise of different models to transfer knowledge to evolving data distributions. However, this approach faces difficulties when the dynamic test distribution is available only in small batches and without access to the original source data. To address the challenge of adapting to dynamic distributions in such practical settings, we propose CONtinual mulTi-souRce Adaptation to dynamic diStribuTions (CONTRAST), a novel method that optimally combines multiple source models to adapt to the dynamic test data. CONTRAST has two distinguishing features. First, it efficiently computes the optimal combination weights to combine the source models to adapt to the test data distribution continuously as a function of time. Second, it identifies which of the source model parameters to update so that only the model which is most correlated to the target data is adapted, leaving the less correlated ones untouched; this mitigates the issue of \u201cforgetting\" the source model parameters by focusing only on the source model that exhibits the strongest correlation with the test batch distribution. Through theoretical analysis we show that the proposed method is able to optimally combine the source models and prioritize updates to the model least prone to forgetting. Experimental analysis on diverse datasets demonstrates that the combination of multiple source models does at least as well as the best source (with hindsight knowledge), and performance does not degrade as the test data distribution changes over time (robust to forgetting). ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Deep neural networks have shown impressive performance on test inputs that closely resemble the training distribution. However, their performance degrades significantly when they encounter test inputs from a different data distribution. Unsupervised domain adaptation (UDA) techniques [1, 2] aim to mitigate this performance drop. Addressing the distribution shift in case of dynamic data distributions is even more challenging and practically relevant - in many real-world applications like autonomous navigation, models often encounter dynamically evolving distributions. Furthermore, test data is often accessed in streaming batches rather than all at once, and source data may not always be available due to privacy and storage concerns. ", "page_idx": 0}, {"type": "text", "text": "For domain adaptation to dynamically evolving environments, employing a model ensemble can be beneficial, as it allows leveraging the learned knowledge of different models to more effectively mitigate dynamic distribution shifts. Additionally, situations may arise wherein the user has access to a diverse set of pre-trained models across distinct source domains, and no access to source domain data corresponding to each model due to privacy, storage or other constraints. Consequently, training a unified model using the combined source data becomes unfeasible. In those scenarios, it is both reasonable and effective to employ and adapt the entire available array of source models during testing, thereby enhancing performance beyond the scope of single source model adaptation. Moreover, employing a model ensemble provides the flexibility to effortlessly incorporate or exclude models post-deployment, aligning with the user\u2019s preferences and the needs of the given task. This flexibility is not achievable with a single domain-generalized model trained on combined source data. ", "page_idx": 0}, {"type": "image", "img_path": "mpDbWjLzfT/tmp/bb6293f2ed750bc8e7cc0014835e6d3f3830beb0522289c35112e27bf67cbf0f.jpg", "img_caption": ["Figure 1: Problem setup. Consider several source models trained using data from different weather conditions. During the deployment of these models, they may encounter varying weather conditions that could be a combination of multiple conditions in varying proportions (represented by the pie charts on top). Our goal is to infer on the test data using the ensemble of models by automatically figuring out proper combination weights and adapting the appropriate models on the fly. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "As an example, consider a scenario where a recognition model, initially trained on clear weather conditions, faces data from mixed weather scenarios, like sunshine interspersed with rain (see Figure 1). In such cases, employing multiple models - specifically those trained on clear weather and rain \u2014 with appropriate weighting can potentially reduce the test error as opposed to relying on a single source model. In this context, the models for clear weather and rain would be assigned higher weights, while models for other weather conditions would receive relatively lesser weightage. ", "page_idx": 1}, {"type": "text", "text": "The main challenge of developing such a model ensembling method is to learn appropriate combination weights to optimally combine the source model ensemble during the test phase as data is streaming in, such that it results in a test error equal or lower than that of the best source model. To solve this, we propose CONtinual mulTi-souRce Adaptation to dynamic diStribuTions (CONTRAST) that handles multiple source models and optimally combines them to adapt to the test data. ", "page_idx": 1}, {"type": "text", "text": "The efficacy of using multiple source models also extends to preventing catastrophic forgetting that may arise when adapting to dynamic distributions for a prolonged time. Consider again the scenario of multiple source models, each trained on a different weather condition. During inference, only the parameters of the models most closely related to the weather encountered during test time will get updates, and the unrelated ones will be left untouched. This ensures that the model parameters do not drift too far from the initial state, since only those related to the test data are being updated. This mechanism mitigates forgetting when the test data distribution varies over a long time scale, as is likely to happen in most realistic conditions. Even if an entirely unrelated distribution appears during testing and there is no one source model to handle it, the presence of multiple sources can significantly reduce the rate at which the forgetting occurs. This is again because only the most closely related models (clear and rainy weather in the example above) are updated, while others (e.g., snow) are left untouched. Our setting is closely related to Test Time Adaptation methods (TTA) [3], and ours is the first to address adaptation of multiple sources for dynamically shifting distributions during test time. ", "page_idx": 1}, {"type": "text", "text": "Main Contributions. Our proposed approach, CONTRAST, makes the following contributions. ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose a framework for multi-source adaptation to dynamic distribution shifts from streaming test data and without access to the source data. Our approach has the ability to merge the source models using appropriate combination weights during test time, enabling it to perform just as well as the best-performing source or even surpass it.   \n\u2022 Our framework achieves performance on par with the best-performing source and also effectively mitigates catastrophic forgetting when faced with long-term, fluctuating test distributions.   \n\u2022 We provide theoretical insights on CONTRAST, illustrating how it addresses domain shift by optimally combining source models and prioritizing updates to the model least prone to forgetting.   \n\u2022 To demonstrate the real-world advantages of our methodology, we perform experiments on a diverse range of benchmark datasets. ", "page_idx": 2}, {"type": "text", "text": "2 Related Works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Unsupervised Domain Adaptation. UDA methods have been applied to many machine learning tasks, including image classification [1], semantic segmentation [2], object detection [4] and reinforcement learning [5], in an effort to address the data distribution shift. Most approaches try to align the source and target data distributions, using techniques such as maximum mean discrepancy [6], adversarial learning [7, 1, 5] and image translation [8, 9]. Recently, there has been a growing interest in adaptation using only a pre-trained source model due to privacy and memory storage concerns related to the source data [10\u201316]. These approaches include techniques such as information maximization [17\u201319], pseudo labeling [20, 21], and self-supervision [22]. ", "page_idx": 2}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/44276b31f5fbbadf0b0c1ac59d2a7da10959502e4bef1418ad29d9441677e233.jpg", "table_caption": ["Table 1: Comparison of our setting to the existing adaptation settings. Our proposed setting meets all the criteria that are expected in a comprehensive adaptation framework. "], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "Multi-Source Domain Adaptation (MSDA). Both UDA and source-free UDA have been extended to multi-source setting by incorporating knowledge from multiple source models [18, 23]. Notable techniques include discrepancy-based MSDA [24], higher-order moments [25], adversarial methods [26], and Wasserstein distance-based methods [27]. However, these methods are specifically tailored to UDA scenarios, where the whole target data is assumed to be available during adaptation. Whereas, in our setting we consider access to a batch of target data at an instance. Another related field is Domain Generalization (DG) [28, 29] , which refers to training a single model on a combined set of data from different source domains. Hence, DG requires data from all distinct domains to be available altogether during training, which may not be always feasible. Additionally, Model Soups [30] is a popular approach to ensemble models fine-tuned on same data distribution, where the weights of multiple models are averaged for inference. On the other hand, we use a weighting approach for model predictions, where models are pre-trained on different source data distributions. In our problem, inspired by MSDA, users are only provided with pre-trained source models. ", "page_idx": 2}, {"type": "text", "text": "Adaptation to Dynamic Data. Few works [31\u201333] have addressed the adaptation to dynamic data distributions. However, these works either require source data or the entire target domain data to be available during adaptation. When additional constraints such as streaming target data batches and no access to source data are considered, the setting closely aligns with Test Time Adaptation (TTA). While UDA methods typically require a substantial volume of target domain data for model adaptation, which is performed offline and prior to deployment, TTA adjusts a model post-deployment, during inference or testing. One of the early works [34] use test-batch statistics for batch normalization adaptation. Tent [3] updates a pre-trained source model by minimizing entropy and updating batchnorm parameters. DUA [35] updates batch-norm stats with incoming test batches. TTA methods have also been applied to segmentation problems [36\u201339]. When these TTA methods are used to adapt to changing target distribution, they usually suffer from \u2018forgetting\u2019 and \u2018error accumulation\u2019 [40]. In order to solve this, CoTTA [40] restores source knowledge stochastically to avoid drifting of source knowledge. EATA [41] adds a regularization loss to preserve important weights for less forgetting. While motivated by TTA, our method considers multi-source adaptation in a dynamic setting and has an inherent capability to mitigate forgetting. In Table 1, we illustrate a comparison between our setting and existing settings. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3 CONTRAST Framework ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Problem Setting ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this problem setting, we propose to combine multiple pre-trained models during test time through the application of suitable combination weights, determined based on a limited number of test samples. Specifically, we will focus on the classification task that involves $K$ categories. Consider the scenario where we have a collection of $N$ source models, denoted as $\\{\\mathrm{f}_{S}^{j}\\}_{j=1}^{N}$ , that we aim to deploy during test time. In this situation, we assume that a sequence of test data $\\{x_{i}^{(1)}\\}_{i=1}^{B}\\rightarrow$ $\\{x_{i}^{(2)}\\}_{i=1}^{B}\\to...\\,\\{x_{i}^{(t)}\\}_{i=1}^{B}\\to..\\,.$ are coming batch by batch in an online fashion, where $t$ is the index of time-stamp and $B$ is the number of samples in the test batch. We also denote the test distribution at time-stamp $t$ as $\\mathcal{D}_{T}^{(t)}$ , which implies $\\{x_{i}^{(t)}\\}_{i=1}^{B}\\sim\\mathcal{D}_{T}^{(t)}$ . Motivated by [18], we model the test distribution in each time-stamp $t$ as a linear combination of source distributions where the combination weights are denoted by $\\{\\mathrm{w}_{j}^{(t)}\\}_{j=1}^{N}$ . Thus, our inference model on test batch $t$ can be written as f(t)= N $\\begin{array}{r}{\\mathrm{f}_{T}^{(t)}=\\sum_{j=1}^{N}\\mathrm{w}_{j}^{(t)}\\mathrm{f}_{S}^{j(t)}}\\end{array}$ wj(t )fjS(t)where fjS(t)is the adapted j-th source in time stamp t. Based on this setup our objective is twofold: ", "page_idx": 3}, {"type": "text", "text": "1. We want to determine the optimal combination weights $\\{\\mathrm{w}_{j}^{(t)}\\}_{j=1}^{N}$ for the current test batch such that the test error for the optimal inference model is lesser than or equal to the test error of best source model. Mathematically we can write this as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon_{t e s t}^{(t)}(\\mathrm{f}_{T}^{(t)})\\leq\\operatorname*{min}_{1\\leq j\\leq N}\\epsilon_{t e s t}^{(t)}(\\mathrm{f}_{S}^{j}),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\epsilon_{t e s t}^{(t)}(\\cdot)$ evaluates the test error on $t$ -th batch. ", "page_idx": 3}, {"type": "text", "text": "2. We also aim for the model to maintain consistent performance on source domains, as it progressively adapts to the changing test conditions. This is necessary to ensure that the model has not catastrophically forgotten the original training distribution of the source domain and maintains its original performance if the source data is re-encountered in the future We would ideally want to have: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon_{s r c}(\\mathrm{f}_{S}^{j(t)})\\approx\\epsilon_{s r c}(\\mathrm{f}_{S}^{j})\\quad\\forall j,t,\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where, $\\epsilon_{s r c}(\\mathrm{f}_{S}^{j})$ denote the test error of $j$ -th source on its corresponding test data when using the original source model $\\mathrm{f}_{S}^{j}$ , whereas $\\epsilon_{s r c}(\\mathrm{f}_{S}^{j(t)})$ represents the test error on the same test data using the j-th source model adapted up to time step t, denoted as fjS(t). ", "page_idx": 3}, {"type": "text", "text": "3.2 Overall Framework ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Our framework undertakes two operations on each test batch. First, we learn the combination weights for the current batch at time step $t$ by freezing the model parameters. Then, we update the model corresponding to the largest weight with existing state-of-the-art TTA methods, which allows us to fine-tune the model and improve its performance. This implies that the model parameters of source $j$ might get updated up to $p$ times at time-step $t$ , where $0\\leq p\\leq(t-1)$ . ", "page_idx": 3}, {"type": "text", "text": "In other words, the states of the source models evolve over time depending on the characteristics of the test batches up to the previous time step. To formalize this concept, we define the state of the source model $j$ at time-step $t$ as $\\mathrm{f}_{S}^{j(t)}$ . In the next section, we will provide a detailed explanation of both aspects of our framework: (i) learning the combination weights, and (ii) updating the model parameters. By doing so, we aim to provide a comprehensive understanding of how our approach works in practice. ", "page_idx": 3}, {"type": "text", "text": "3.3 Learning the combination weights ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "For an unlabeled target sample $\\boldsymbol{x}_{i}^{(t)}$ that arrives at time-stamp $t$ , we denote its pseudo-label, as predicted by source j, as y\u02c6i(jt) $\\hat{y}_{i j}^{(t)}=\\mathrm{f}_{S}^{j(t)}(x_{i}^{(t)})$ , where $\\mathrm{f}_{S}^{j(t)}$ is the state of source $j$ at time-stamp $t$ . Now ", "page_idx": 3}, {"type": "image", "img_path": "mpDbWjLzfT/tmp/ea211995734804bf38dd32854f1d3869bb8b084ded613d64edefcb054190dfdd.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 2: Overall Framework. During test time, we aim to adapt multiple source models in a manner such that it optimally blends the sources with suitable weights based on the current test distribution. Additionally, we update the parameters of only one model that exhibits the strongest correlation with the test distribution. ", "page_idx": 4}, {"type": "text", "text": "we linearly combine these pseudo-labels by source combination weights $\\mathbf{w}=[\\mathrm{w}_{1}\\,\\mathrm{w}_{2}\\,.\\,.\\,.\\,\\mathrm{w}_{N}]^{\\top}\\in\\mathbb{R}^{N}$ to get weighted pseudo-label $\\begin{array}{r}{\\hat{y}_{i}^{(t)}=\\sum_{j=1}^{N}\\mathrm{w}_{j}\\hat{y}_{i j}^{(t)}}\\end{array}$ . Using these weighted pseudo-labels for all the samples in the $t$ -th batch we calculate the expected Shannon entropy as, ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{w}^{(t)}(\\mathbf{w})=-\\mathbb{E}_{\\mathcal{D}_{T}^{(t)}}\\sum_{c=1}^{K}\\hat{y}_{i c}^{(t)}\\log(\\hat{y}_{i c}^{(t)})\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Based on this loss we solve the following optimization: ", "page_idx": 4}, {"type": "equation", "text": "$$\n{\\begin{array}{r l}{{\\underset{\\mathbf{w}}{\\operatorname{minimize}}}}&{{\\mathcal{L}}_{w}^{(t)}(\\mathbf{w})}\\\\ {{\\mathrm{subject~to}}}&{\\mathbf{w}_{j}\\geq0,\\forall j\\in\\{1,2,\\ldots,N\\},}\\\\ &{\\displaystyle\\sum_{j=1}^{n}\\mathbf{w}_{j}=1}\\end{array}}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Suppose we get $\\mathbf{w}^{\\star(t)}$ to be the optimal combination weight vector by performing the optimization in (4). In such case, the optimal inference model for test batch $t$ can be expressed as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathrm{f}_{T}^{(t)}=\\sum_{j=1}^{N}\\mathrm{w}_{j}^{\\star(t)}\\mathrm{f}_{S}^{j(t)}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Thus, by learning w in this step, we satisfy Eqn. (1). ", "page_idx": 4}, {"type": "text", "text": "Model parameter update. After obtaining $\\mathbf{w}^{\\star}(t)$ , next we select the most relevant source model $k$ given by $k\\,=\\,\\mathrm{arg}\\,\\underset{1\\leq j\\leq N}{\\mathrm{max}}\\,\\,\\mathrm{w}_{j}^{\\star(t)}$ . This indicates that the distribution of the current test batch is most correlated with the source model $k$ . We then adapt model $k$ to the test batch $t$ using any state-of-the-art single source method that adapts to dynamic target distributions. Specifically, we employ three distinct adaptation approaches: (i) TENT [3], (ii) CoTTA [40], and (iii) EaTA [41]. ", "page_idx": 4}, {"type": "text", "text": "Optimization strategy for (4). Solving the optimization problem in Eq. 4 is a prerequisite for inferring the current test batch. As inference speed is critical for test-time adaptation, it is desirable to learn the weights quickly. To achieve this, we design two strategies: (i) selecting an appropriate initialization for $\\mathbf{w}$ , and (ii) determining an optimal learning rate. ", "page_idx": 4}, {"type": "text", "text": "(i) Initialization: Pre-trained models contain information about expected batch mean and variance in their Batch Norm (BN) layers based on the data they were trained on. To leverage this information, we extract these stored values from each source model prior to adaptation. Specifically, we denote the expected batch mean and standard deviation for the $l$ -th layer of the $j$ -th source model as $\\mu_{l}^{j}$ and $\\sigma_{l}^{j}$ , respectively. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "During testing on the current batch $t$ , we pass the data through each model and extract its mean and standard deviation from each BN layer. We denote these values as $\\mu_{l}^{T(t)}$ and \u03c3l , respectively. One useful metric for evaluating the degree of alignment between the test data and each source is the distance between their respective batch statistics. A smaller distance implies a stronger correlation between the test data and the corresponding source. Assuming that the batch-mean statistic per node of the BN layers to be a univariate Gaussian, we calculate the distance (KL divergence) between the $j$ -th source (approximated as $\\mathcal{N}(\\mu_{l}^{j},(\\sigma_{l}^{j})^{2}))$ and the $t^{\\th}$ -th test batch (approximated as $\\mathcal{N}(\\mu_{l}^{T(t)},(\\sigma_{l}^{T(t)})^{2}))$ as follows (derivation in Appendix Section H): ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\theta_{j}^{t}=\\displaystyle\\sum_{l=1}^{r}\\mathcal{D}_{K L}\\left[\\!N\\left(\\mu_{l}^{T(t)},(\\sigma_{l}^{T(t)})^{2}\\right),\\mathcal{N}\\left(\\mu_{l}^{j},(\\sigma_{l}^{j})^{2}\\right)\\right]=}\\\\ {\\displaystyle\\sum_{l=1}^{n_{j}}\\sum_{m=1}^{d_{j}^{l}}\\log\\left(\\frac{\\sigma_{l m}^{j}}{\\sigma_{l m}^{T(t)}}\\right)+\\frac{\\left(\\sigma_{l m}^{T(t)}\\right)^{2}+\\left(\\mu_{l m}^{j}-\\mu_{l m}^{T(t)}\\right)^{2}}{2\\left(\\sigma_{l m}^{j}\\right)^{2}}-\\frac{1}{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where subscript $l m$ denotes the $m$ -th node of $l_{\\cdot}$ -th layer. After obtaining the distances, we use a softmax function denoted by $\\delta(\\cdot)$ to normalize their negative values. The softmax function is defined as $\\begin{array}{r}{\\delta_{j}(a)=\\frac{\\exp(a_{j})}{\\sum_{i=1}^{N}\\exp(a_{i})}}\\end{array}$ , where $a\\in\\mathbb{R}^{N}$ , and $j\\in{1,2,\\dots,N}$ . If $\\theta^{t}=\\left[\\theta_{1}^{t},\\theta_{2}^{t}\\cdot...\\,\\theta_{N}^{t}\\right]^{\\top}\\in\\mathbb{R}^{N}$ is the vectorized form of the distances from all the sources, we set ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbf{w}_{i n i t}^{(t)}=\\delta(-\\theta^{t})\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "bwohoesrte $\\mathbf{w}_{i n i t}^{(t)}$ a irse dt hteo  irnaitnidaloizma tiinointi afloirz awti.o nA.s we shall see, this choice leads to a substantial performance (ii) Optimal step size: Since we would like to ensure rapid convergence of optimization in Eqn. 4 , we select the optimal step size for gradient descent in the initial stage. Given an initialization $\\mathbf{w}_{i n i t}^{(t)}$ and a step size $\\alpha^{(t)}$ , we compute the second-order Taylor series approximation of the function $\\mathcal{L}_{w}^{(t)}$ at the updated point after one gradient step. Next, we determine the best step size \u03b1(bte)st by minimizing the approximation with respect to $\\alpha^{(t)}$ . This is essentially an approximate Newton\u2019s method (details in Appendix section I) and has a closed-form solution given by ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "equation", "text": "$$\n\\boldsymbol{\\alpha}_{b e s t}^{(t)}=\\left[\\left(\\nabla_{\\mathbf{w}}\\boldsymbol{\\mathcal{L}}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}}\\boldsymbol{\\mathcal{L}}_{w}^{(t)}\\right)/\\left(\\nabla_{\\mathbf{w}}\\boldsymbol{\\mathcal{L}}_{w}^{(t)}\\right)^{\\top}\\boldsymbol{\\mathcal{H}}_{w}\\left(\\nabla_{\\mathbf{w}}\\boldsymbol{\\mathcal{L}}_{w}^{(t)}\\right)\\right]\\bigg\\vert_{\\mathbf{w}^{i n i t}}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here $\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}$ and $\\mathcal{H}_{w}$ are the gradient and Hessian of $\\mathcal{L}_{w}^{(t)}$ with respect to w. Together with $\\mathbf{w}_{i n i t}^{(t)}$ nodf $\\alpha_{b e s t}^{(t)}$ , nodpitxi).m izPlaetiaosne  onfo (t e4 )t hcaot,n vweer gceas lvceurlya tqe utihcek lHy easss idaenm foonrs tornaltye dn i ns cthalea er xppaerriammeenttesr s(,i nw Titahb $^ \u1e0a 6 \u1e0c$ $n$ representing the number of source models. Typically, in common application domains, addressing distribution shifts requires only a small number of source models, making the computational overhead of calculating hessian negligible. ", "page_idx": 5}, {"type": "text", "text": "Please refer to Algorithm 1 for a complete overview of CONTRAST. ", "page_idx": 5}, {"type": "text", "text": "3.4 Theoretical insights regarding combination weights ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Theorem 1 (Convergence of Optimization 4.). The Optimization $^{4}$ converges according to the rule as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\frac{1}{(k+1)}\\sum_{j=0}^{k}\\|\\nabla_{\\aleph}\\mathcal{L}_{w}(\\mathbf{w}^{(\\mathbf{j})})\\|_{2}^{2}\\leq\\frac{2(\\mathcal{L}_{w}(w^{(0)})-\\mathcal{L}_{w}(w^{\\star}))}{\\alpha_{b e s t}^{(t)}(k+1)}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where, $\\nabla_{\\aleph}$ represents the gradient of the objective function over the set of $\\dot{n}$ -simplex $\\aleph$ and $j$ represents the iteration number. ", "page_idx": 5}, {"type": "text", "text": "Proof. Please refer to the Appendix (Section A) for the proof. ", "page_idx": 5}, {"type": "text", "text": "Implication of Theorem 1. The theorem tells us that to make the optimization converge faster with fewer iterations (small $k$ ), it is crucial to start with a good initialization close to the best solution $((\\mathcal{L}(w^{(0)})-\\mathcal{L}(w^{\\star}))$ should be small). By using Eqn. (6), we ensure this condition for quicker convergence. Also, please note that in Theorem 1, $j$ denotes the iteration number in the optimization process, and for simplicity, the batch number $t$ has been intentionally omitted from the notation. ", "page_idx": 6}, {"type": "text", "text": "Algorithm 1: Overview of CONTRAST ", "text_level": 1, "page_idx": 6}, {"type": "image", "img_path": "mpDbWjLzfT/tmp/df4f8ee25eef066799b5043e3929823e4f0185bd18e27c8564271623f0f1f52f.jpg", "img_caption": [], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "3.5 Theoretical insights regarding model update ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We now provide theoretical justification on how CONTRAST selects the best source model by   \nompotidemlasl ldye tfrinaeddi nags . d CdOoNmTaiRn AmSiTs maaitmcsh .t oA lte tairmn ea $t$ , olemt $\\mathrm{f}_{S}^{(t)}$ tbioe nt hoef  tshete soef  msooudrecles $\\left[\\mathrm{f}_{S}^{1(t)}\\mathrm{~f}_{S}^{2(t)}~...\\mathrm{~f}_{S}^{N(t)}\\right].$   \nby optimizing weights $w$ on the target domain. For simplicity of exposition, we consider convex   \ncombinations $w\\in\\Delta$ where $\\Delta$ is the $N$ -dimensional simplex. ", "page_idx": 6}, {"type": "text", "text": "To learn $\\textbf{w}\\in\\ \\Delta$ , CONTRAST runs empirical risk minimization on the target task using a loss function $\\ell(\\cdot)$ with pseudo-labels generated by w-weighted source models. Let $\\bar{\\mathcal{L}}(f)$ denote the target population/test risk of a model $f$ (with respect to ground-truth labels) and $\\boldsymbol{\\mathcal{L}}_{T}^{\\star(t)}$ represent the optimal population risk obtained by choosing the best possible $w\\in\\Delta$ (i.e. oracle risk). We introduce the functions: (1) $\\Psi$ which returns the distance between two data distributions and (2) $\\varphi$ which returns the distance between two label distributions. We note that, rather than problem-agnostic metrics like Wasserstein, our $\\Psi,\\varphi$ definitions are in terms of the loss landscape and source models $\\mathrm{f}_{S}^{(t)}$ , hence tighter. We have the following generalization bound at time step $t$ (precise details in Appendix Section A). ", "page_idx": 6}, {"type": "text", "text": "Theorem 2. Consider the model $\\mathrm{f}_{T}^{(t)}$ with combination weights $\\mathrm{w}^{\\star(t)}$ obtained via CONTRAST by minimizing the empirical risk over $B$ IID target examples per Eqn. 5. Let $\\hat{y}_{\\mathrm{w}}^{(t)}$ denote the pseudolabel variable of w-weighted source models and $\\begin{array}{r}{\\bar{D_{\\mathrm{w}}^{(t)}}=\\bar{\\sum_{i=1}^{N}\\bar{\\mathrm{w}_{i}^{(t)}}}\\bar{D_{S_{i}}^{(t)}}}\\end{array}$ denote weighted source distribution. Under Lipschitz $\\ell$ and bounded $\\mathrm{f}_{S}^{(t)}$ , with probability at least $1-3e^{-\\tau}$ over the target batch, test risk obeys ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\underbrace{\\mathcal{L}(\\mathbf{f}_{T}^{(t)})}_{C O N T R A S T}-\\underbrace{\\mathcal{L}_{T}^{\\star(t)}}_{O p i i m a l}\\leq\\underbrace{m i n\\left\\{\\Psi(\\mathcal{D}_{T}^{(t)},\\mathcal{D}_{w}^{(t)})+\\varphi(\\hat{y}_{w}^{(t)},y_{w}^{(t)})\\right\\}}_{s h i f t}+\\sqrt{\\tilde{O}((N+\\tau)/B)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Discussion. In a nutshell, this result shows how CONTRAST strikes a balance between: (1) choosing the domain that has the smallest shift from target, and (2) choosing a source model that has high-quality pseudo-labels on its own distribution (i.e. $\\hat{y}_{\\mathrm{w}}^{(t)}$ matches $y_{\\mathrm{w}}^{(t)}\\bar{.}$ ). From our analysis, it is evident that, rather than adapting the source models to the target distribution, if we simply optimize the combination weights to optimize pseudo-labels for inference, the left side excess risk term $(\\mathcal{L}(\\mathrm{f}_{T}^{(t)})-\\mathcal{L}_{T}^{\\star(t)})$ becomes upper bounded by a relatively modest value. This is because the shift and quality terms on the right-hand side are optimized with respect to w. We note that $\\sqrt{N/B}$ is the generalization risk due to finite samples $B$ and search dimension $N$ . ", "page_idx": 7}, {"type": "text", "text": "To further refine this, our immediate objective is to tighten the upper bound. This can be achieved by individually adapting each source model to the current test data, all the while maintaining the optimized w constant. Yet, such an approach is not ideal since our second goal is to preserve knowledge from the source during continual adaptation. To attain our desired goal, we must relax the upper bound, reducing our search over w $\\in\\hat{\\Delta}$ . Here, $\\hat{\\Delta}$ is the discrete counterpart of the simplex $\\Delta$ . The elements of $\\bar{\\hat{\\Delta}}$ are one-hot vectors that have all but one entry zero. The elements of $\\hat{\\Delta}$ essentially represent discrete model selection. Examining the main terms on the right reveals that: (i) source-target distribution shift and (ii) divergence between ground-truth and pseudo-labels are all minimized when we select the source model with the highest correlation to target. This model, denoted by $\\mathrm{f}_{S}^{\\star(t)}$ , essentially corresponds to the largest entry of $\\mathrm{w}^{\\star(t)}$ and presents the most stringent upper bound within the $\\hat{\\Delta}$ search space. Thus, to further minimize the right hand side, the second stage of CONTRAST adapts $\\operatorname{f}_{S}^{\\star(t)}$ with the current test data. Crucially, besides minimizing the target risk, this step helps avoids forgetting the source because fS\u22c6( already does a good job at the target task. Thus, during optimization on target data, $\\mathrm{f}_{S}^{\\star(t)}$ will have small gradient and will not move much, resulting in smaller forgetting. Please refer to the Appendix (Section A) for more detailed discussion along with the proof of this theorem. ", "page_idx": 7}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Datasets. We demonstrate the efficacy of our approach using both static target distribution and dynamic target data distributions. For static case, we employ the Digits and Office-Home datasets [42]. For the dynamic case, we utilize CIFAR-100C and CIFAR-10C [43]. Detailed descriptions of these datasets along with results on segmentation task can be found in the Appendix. ", "page_idx": 7}, {"type": "text", "text": "Baseline Methods. As our problem setting is most closely related to test time adaptation, our baselines are some widely used state-of-the-art (SOTA) single source test time adaptation methods: we specifically compare our algorithm with Tent [3], CoTTA [40] and EaTA [41]. These methods deal with adaptation from small batches of streaming data and without the source data, which is our setting, and hence we compare against these as our baselines. To evaluate the adaptation performance, we follow the protocol similar to [18], where we apply each source model to the test data from a particular test domain individually, which yields X-Best and X-Worst where \u201cX\" is the name of the single source adaptation method, representing the highest and lowest performances among the source models adapted using method \u201cX\", respectively. For our algorithm, we extend all of the methods \u201cX\" in the multi source setting and call the multi-source counterpart of \u201cX\" as \u201cX+CONTRAST\". ", "page_idx": 7}, {"type": "text", "text": "Implementation Details. We use ResNet-18 [44] model for all our experiments. For solving the optimization of Eq. (4), we first initialize the combination weights using Eq. (6) and calculate the optimal learning rate using Eq. (7). After that, we use 5 iterations to update the combination weights using SGD optimizer and the optimal learning rate. For all the experiments we use a batch size of 128, as used by Tent [3]. For more details on implementation and experimental setting see Appendix. ", "page_idx": 7}, {"type": "text", "text": "Experiment on CIFAR-100C. We conduct a thorough experiment on this dataset to investigate the performance of our model under dynamic test distribution. We consider 3 corruption noises out of 15 noises from CIFAR-100C, which are adversarial weather conditions namely Snow, Fog and Frost. We add these noises for severity level 5 to the original CIFAR-100C training set and train three source models, one for each noise. Along with these models, we also add the model trained on clean training set of CIFAR-100. During testing, we sequentially adapt the models across the 15 noisy domains, each with a severity of 5, from the CIFAR-100C dataset [40, 41]. We report the results for the experiment in Table 2. Moreover, we also conduct an experiment on CIFAR10-C with the exact same experimental settings as with CIFAR100-C. CIFAR-10C results are in Table 5 of Appendix. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Table 2: Results on CIFAR-100C. We take four source models trained on Clear, Snow, Fog, and Frost. We employ these models for adaptation on 15 sequential test domains. This table illustrates that even in the dynamic environment $\\mathrm{X+}$ CONTRAST performs better than X-Best, which is the direct consequence of optimal aggregation of source models as well as better preservation of source knowledge. (Results in error rate $\\downarrow(\\mathrm{in}\\,\\%)$ ) ", "page_idx": 8}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/686443148bcce2c7f55fd47a6fc111782eca42b56be1d0b9591f3a02e04403b6.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "From the table, we can draw two key observations:   \n(i) As anticipated, $\\mathrm{X+C}.$ ONTRAST consistently outperforms X-Best across each test distribution, underscoring the validity of our algorithmic proposition. ", "page_idx": 8}, {"type": "text", "text": "Table 3: Results on Office-Home. We train three source models using three domains in this dataset and use them for testing on the remaining domain under the TTA setting. Our results demonstrate that $\\mathrm{X}{+}C$ ONTRAST consistently outperforms all of the baselines (X) $\\%$ error). ", "page_idx": 8}, {"type": "text", "text": "(ii) Given that the CoTTA and EaTA methods are tailored to mitigate forgetting, the average error postadaptation across the 15 noises using these methods is significantly lower than that of Tent, which is not designed for this specific challenge. For instance, in Table 2, Tent-Best error is approximately $68.2\\%$ , while CoTTA and EaTA-Best are around $39.9\\%$ and $38.5\\%$ , respectively. However, when these adaptation methods are incorporated into our framework, the final errors are remarkably close: $37.1\\%$ for Tent, $34.2\\%$ for EaTA, and $36.9\\%$ for CoTTA. This suggests that even though Tent is more lightweight and faster compared to the other methods ", "page_idx": 8}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/e38b53ee30cb61409ac4b80ab57049059534d6a9017eca3daf1e47ebd59142fd.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "and is not inherently designed to handle forgetting, its performance within our framework is on par with the results obtained when incorporating the other two methods designed to prevent forgetting. This shows the generalizability of our approach to various single-source methods. Note that identical to the experiment on CIFAR100-C, the results on CIFAR10-C in Table 5 follow the same trend where $\\mathrm{X+C}.$ ONTRAST outperforms the X-Best. ", "page_idx": 8}, {"type": "text", "text": "Experiment on Office-Home. We report the results of the experiment on static distribution using the Office-Home dataset in Table 3. Each column in the table represents a target domain from Office-Home dataset. We train three source models on the remaining Office-Home datasets. For instance, in case of \u2018Ar\u2019 column, \u2018Ar\u2019 is the target domain where three source models trained on \u2018Cl\u2019, \u2018Pr\u2019 and \u2018Rw\u2019 are adapted in test time. We calculate the test error of each incoming test batch and then report the numbers by averaging the error values over all the batches. The table shows that CONTRAST provides a significant reduction of test error compared to the best single source model. This demonstrates that when presented with an incoming test batch, CONTRAST has the capability to effectively blend all available sources using optimal weights, resulting in superior performance compared to the best single source model. It is important to note that each test batch in this experiment is drawn from the same stationary distribution, which represents the distribution of the target domain. We conduct a similar experiment with the same experimental settings on Digits dataset that can be found in Table 4 of Appendix. ", "page_idx": 8}, {"type": "text", "text": "Analysis of Forgetting. Here, we demonstrate the robustness of our method against catastrophic forgetting by evaluating the classification accuracy on the source test set after completing adaptation to each domain [41, 45, 46]. For CONTRAST, we use our ensembling method to adapt to the incoming domain. After adaptation, we infer each of the adapted source models on its corresponding source test set. For the baseline single-source methods, every model is adapted individually to the incoming domain, followed by inference on its corresponding source test set. The reported accuracy represents the average accuracy obtained from each of these single-source adapted models. ", "page_idx": 9}, {"type": "text", "text": "From Figure 3, we note that our method consistently maintains its source accuracy during the adaptation process across the 15 sequential noises. In contrast, the accuracy for each individual singlesource method (X) declines on the source test set as the adaptation process progresses. Specifically, Tent, not being crafted to alleviate forgetting, experiences a sharp decline in accuracy. While CoTTA and EaTA exhibit forgetting, it occurs at a more gradual pace. Contrary to all of these single-source methods, our algorithm exhibits virtually no forgetting throughout the process. ", "page_idx": 9}, {"type": "text", "text": "Ablation Study. We conduct an ablation study in Tables 6, 7 in the Appendix to evaluate the impact of various initialization and learning rate strategies on the optimization process described in (4). Our findings demonstrate that the initialization and learning rate configurations generated by our method outperform other alternatives. ", "page_idx": 9}, {"type": "text", "text": "Additionally, our experiments in Tables 8, 9 and 10 in the Appendix reveal that selectively updating the most correlated model parameters enhances performance compared to updating all model parameters, the least correlated ones, a selected subset of correlated models or even updating the models according to their combination weights. We report the comparison with MSDA in Table 11 and Model-Soups in Table 12. We also report the values of the combination weights learned by our method. See Section D of the Appendix for detailed observations. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusions ", "text_level": 1, "page_idx": 9}, {"type": "image", "img_path": "mpDbWjLzfT/tmp/47f8af16236704c2f71c35f09b65199601c2fc897f3898fc584a1f72f521840d.jpg", "img_caption": ["Figure 3: Comparison with baselines in terms of source knowledge forgetting. Maintaining the same setting as in Table 2, we demonstrate that by integrating single-source methods with CONTRAST, the source knowledge is better preserved during dynamic adaptation. Unlike all these singlesource methods, our algorithm demonstrates virtually no forgetting throughout the entire adaptation process. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "We propose a novel framework called CONTRAST, that effectively combines multiple source models during test time with small batches of streaming data and without access to the source data. It achieves a test accuracy that is at least as good as the best individual source model. In addition, the design of CONTRAST offers the added benefit of naturally preventing the issue of catastrophic forgetting. To validate the effectiveness of our algorithm, we conduct experiments on a diverse range of benchmark datasets for classification and semantic segmen", "page_idx": 9}, {"type": "text", "text": "tation tasks. We also demonstrate that CONTRAST can be integrated with a variety of single-source methods. Theoretical analysis of the performance of CONTRAST is also provided. ", "page_idx": 9}, {"type": "text", "text": "6 Broader Impact and Limitations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Implementing multiple models for adaptation on dynamic distribution can yield broad impacts. For instance, this approach could find applications in robot navigation, autonomous vehicles or decision making in dynamically evolving scenarios. In all these cases, the algorithm can intelligently select the optimal combination of models during inference, ensuring sustained performance over extended periods. Our method currently assumes that data sampled within a batch comes from the same distribution. In the future, we aim to explore using mixed data samples from different target domains within a batch. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "The work was partially supported under NSF grant CCF-2008020. Additionally, research was sponsored by the OUSD (R&E)/RT&L and was accomplished under Cooperative Agreement Number W911NF-20-2-0267. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the ARL and OUSD(R&E)/RT&L or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation herein. This work was also partially supported by the Laboratory Directed Research and Development (LDRD) Program (25-006) of Brookhaven National Laboratory under U.S. Department of Energy Contract No. DE-SC0012704. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Eric Tzeng, Judy Hoffman, Kate Saenko, and Trevor Darrell. Adversarial discriminative domain adaptation. In CVPR, 2017.   \n[2] Yi-Hsuan Tsai, Wei-Chih Hung, Samuel Schulter, Kihyuk Sohn, Ming-Hsuan Yang, and Manmohan Chandraker. Learning to adapt structured output space for semantic segmentation. In CVPR, 2018.   \n[3] Dequan Wang, Evan Shelhamer, Shaoteng Liu, Bruno Olshausen, and Trevor Darrell. Tent: Fully test-time adaptation by entropy minimization. In International Conference on Learning Representations, 2021. URL https://openreview.net/forum?id $\\equiv$ uXl3bZLkr3c.   \n[4] Han-Kai Hsu, Chun-Han Yao, Yi-Hsuan Tsai, Wei-Chih Hung, Hung-Yu Tseng, Maneesh Singh, and Ming-Hsuan Yang. Progressive domain adaptation for object detection. In WACV, 2020.   \n[5] Dripta S Raychaudhuri, Sujoy Paul, Jeroen Vanbaar, and Amit K Roy-Chowdhury. Crossdomain imitation from observations. In ICML, 2021.   \n[6] Mingsheng Long, Yue Cao, Jianmin Wang, and Michael Jordan. Learning transferable features with deep adaptation networks. In ICML, 2015.   \n[7] Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Fran\u00e7ois Laviolette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks. In JMLR, 2016.   \n[8] Judy Hoffman, Eric Tzeng, Taesung Park, Jun-Yan Zhu, Phillip Isola, Kate Saenko, Alexei A. Efros, and Trevor Darrell. Cycada: Cycle-consistent adversarial domain adaptation. In ICML, 2018.   \n[9] Luan Tran, Kihyuk Sohn, Xiang Yu, Xiaoming Liu, and Manmohan Chandraker. Gotta adapt \u2019em all: Joint pixel and feature-level domain adaptation for recognition in the wild. In CVPR, 2019.   \n[10] Shiqi Yang, Yaxing Wang, Joost Van De Weijer, Luis Herranz, and Shangling Jui. Generalized source-free domain adaptation. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 8978\u20138987, 2021.   \n[11] Jogendra Nath Kundu, Naveen Venkat, R Venkatesh Babu, et al. Universal source-free domain adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4544\u20134553, 2020.   \n[12] Fan Wang, Zhongyi Han, Yongshun Gong, and Yilong Yin. Exploring domain-invariant parameters for source free domain adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 7151\u20137160, 2022.   \n[13] Shiqi Yang, Yaxing Wang, Joost Van De Weijer, Luis Herranz, and Shangling Jui. Unsupervised domain adaptation without source data by casting a bait. arXiv preprint arXiv:2010.12427, 1 (2):5, 2020.   \n[14] Rui Li, Qianfen Jiao, Wenming Cao, Hau-San Wong, and Si Wu. Model adaptation: Unsupervised domain adaptation without source data. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 9641\u20139650, 2020.   \n[15] Ning Ding, Yixing Xu, Yehui Tang, Chao Xu, Yunhe Wang, and Dacheng Tao. Source-free domain adaptation via distribution estimation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 7212\u20137222, 2022.   \n[16] Dian Chen, Dequan Wang, Trevor Darrell, and Sayna Ebrahimi. Contrastive test-time adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 295\u2013305, 2022.   \n[17] Jian Liang, Dapeng Hu, and Jiashi Feng. Do we really need to access the source data? source hypothesis transfer for unsupervised domain adaptation. In ICML, 2020.   \n[18] Sk Miraj Ahmed, Dripta S Raychaudhuri, Sujoy Paul, Samet Oymak, and Amit K RoyChowdhury. Unsupervised multi-source domain adaptation without access to source data. In CVPR, 2021.   \n[19] Sk Miraj Ahmed, Suhas Lohit, Kuan-Chuan Peng, Michael J Jones, and Amit K Roy-Chowdhury. Cross-modal knowledge transfer without task-relevant source data. In Computer Vision\u2013ECCV 2022: 17th European Conference, Tel Aviv, Israel, October 23\u201327, 2022, Proceedings, Part XXXIV, pages 111\u2013127. Springer, 2022.   \n[20] Hao-Wei Yeh, Baoyao Yang, Pong C Yuen, and Tatsuya Harada. Sofa: Source-data-free feature alignment for unsupervised domain adaptation. In WACV, 2021.   \n[21] Vikash Kumar, Rohit Lal, Himanshu Patil, and Anirban Chakraborty. Conmix for source-free single and multi-target domain adaptation. In WACV, 2023.   \n[22] Haifeng Xia, Handong Zhao, and Zhengming Ding. Adaptive adversarial network for sourcefree domain adaptation. In ICCV, 2021.   \n[23] Sicheng Zhao, Bo Li, Pengfei Xu, and Kurt Keutzer. Multi-source domain adaptation in the deep learning era: A systematic survey. arXiv preprint arXiv:2002.12169, 2020.   \n[24] Jiang Guo, Darsh J Shah, and Regina Barzilay. Multi-source domain adaptation with mixture of experts. arXiv preprint arXiv:1809.02256, 2018.   \n[25] Xingchao Peng, Qinxun Bai, Xide Xia, Zijun Huang, Kate Saenko, and Bo Wang. Moment matching for multi-source domain adaptation. In Proceedings of the IEEE/CVF international conference on computer vision, pages 1406\u20131415, 2019.   \n[26] Ruijia Xu, Ziliang Chen, Wangmeng Zuo, Junjie Yan, and Liang Lin. Deep cocktail network: Multi-source unsupervised domain adaptation with category shift. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3964\u20133973, 2018.   \n[27] Yitong Li, David E Carlson, et al. Extracting relationships by multi-domain matching. Advances in Neural Information Processing Systems, 31, 2018.   \n[28] Abhimanyu Dubey, Vignesh Ramanathan, Alex Pentland, and Dhruv Mahajan. Adaptive methods for real-world domain generalization. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14340\u201314349, 2021.   \n[29] Zehao Xiao, Xiantong Zhen, Ling Shao, and Cees GM Snoek. Learning to generalize across domains on single test samples. arXiv preprint arXiv:2202.08045, 2022.   \n[30] Mitchell Wortsman, Gabriel Ilharco, Samir Ya Gadre, Rebecca Roelofs, Raphael Gontijo-Lopes, Ari S Morcos, Hongseok Namkoong, Ali Farhadi, Yair Carmon, Simon Kornblith, et al. Model soups: averaging weights of multiple fine-tuned models improves accuracy without increasing inference time. In International conference on machine learning, pages 23965\u201323998. PMLR, 2022.   \n[31] Zuxuan Wu, Xin Wang, Joseph E. Gonzalez, Tom Goldstein, and Larry S. Davis. Ace: Adapting to changing environments for semantic segmentation. In Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV), October 2019.   \n[32] Mohammad Rostami. Lifelong domain adaptation via consolidated internal distribution. Advances in neural information processing systems, 34:11172\u201311183, 2021.   \n[33] Theodoros Panagiotakopoulos, Pier Luigi Dovesi, Linus H\u00e4renstam-Nielsen, and Matteo Poggi. Online domain adaptation for semantic segmentation in ever-changing conditions. In European Conference on Computer Vision, pages 128\u2013146. Springer, 2022.   \n[34] Yanghao Li, Naiyan Wang, Jianping Shi, Jiaying Liu, and Xiaodi Hou. Revisiting batch normalization for practical domain adaptation. arXiv preprint arXiv:1603.04779, 2016.   \n[35] M Jehanzeb Mirza, Jakub Micorek, Horst Possegger, and Horst Bischof. The norm must go on: dynamic unsupervised domain adaptation by normalization. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14765\u201314775, 2022.   \n[36] Jeya Maria Jose Valanarasu, Pengfei Guo, Vibashan VS, and Vishal M Patel. On-the-fly test-time adaptation for medical image segmentation. arXiv preprint arXiv:2203.05574, 2022.   \n[37] Inkyu Shin, Yi-Hsuan Tsai, Bingbing Zhuang, Samuel Schulter, Buyu Liu, Sparsh Garg, In So Kweon, and Kuk-Jin Yoon. Mm-tta: multi-modal test-time adaptation for 3d semantic segmentation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 16928\u201316937, 2022.   \n[38] Yuang Liu, Wei Zhang, and Jun Wang. Source-free domain adaptation for semantic segmentation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 1215\u20131224, 2021.   \n[39] Minhao Hu, Tao Song, Yujun Gu, Xiangde Luo, Jieneng Chen, Yinan Chen, Ya Zhang, and Shaoting Zhang. Fully test-time adaptation for image segmentation. In Medical Image Computing and Computer Assisted Intervention\u2013MICCAI 2021: 24th International Conference, Strasbourg, France, September 27\u2013October 1, 2021, Proceedings, Part III 24, pages 251\u2013260. Springer, 2021.   \n[40] Qin Wang, Olga Fink, Luc Van Gool, and Dengxin Dai. Continual test-time domain adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 7201\u20137211, 2022.   \n[41] Shuaicheng Niu, Jiaxiang Wu, Yifan Zhang, Yaofo Chen, Shijian Zheng, Peilin Zhao, and Mingkui Tan. Efficient test-time model adaptation without forgetting. In International conference on machine learning, pages 16888\u201316905. PMLR, 2022.   \n[42] Hemanth Venkateswara, Jose Eusebio, Shayok Chakraborty, and Sethuraman Panchanathan. Deep hashing network for unsupervised domain adaptation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 5018\u20135027, 2017.   \n[43] Dan Hendrycks and Thomas Dietterich. Benchmarking neural network robustness to common corruptions and perturbations. arXiv preprint arXiv:1903.12261, 2019.   \n[44] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770\u2013778, 2016.   \n[45] Junha Song, Jungsoo Lee, In So Kweon, and Sungha Choi. Ecotta: Memory-efficient continual test-time adaptation via self-distilled regularization. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11920\u201311929, 2023.   \n[46] Goirik Chakrabarty, Manogna Sreenivas, and Soma Biswas. Sata: Source anchoring and target alignment network for continual test time adaptation. arXiv preprint arXiv:2304.10113, 2023.   \n[47] Koulik Khamaru and Martin Wainwright. Convergence guarantees for a class of non-convex and non-smooth optimization problems. In International Conference on Machine Learning, pages 2601\u20132610. PMLR, 2018.   \n[48] Samet Oymak, Mingchen Li, and Mahdi Soltanolkotabi. Generalization guarantees for neural architecture search with train-validation split. In International Conference on Machine Learning, pages 8291\u20138301. PMLR, 2021.   \n[49] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe Franke, Stefan Roth, and Bernt Schiele. The cityscapes dataset for semantic urban scene understanding. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3213\u20133223, 2016.   \n[50] Christos Sakaridis, Dengxin Dai, Simon Hecker, and Luc Van Gool. Model adaptation with synthetic and real data for semantic dense foggy scene understanding. In Proceedings of the european conference on computer vision (ECCV), pages 687\u2013704, 2018.   \n[51] Xiaowei Hu, Chi-Wing Fu, Lei Zhu, and Pheng-Ann Heng. Depth-attentional features for single-image rain removal. In Proceedings of the IEEE/CVF Conference on computer vision and pattern recognition, pages 8022\u20138031, 2019.   \n[52] Christos Sakaridis, Dengxin Dai, and Luc Van Gool. Acdc: The adverse conditions dataset with correspondences for semantic driving scene understanding. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10765\u201310775, 2021.   \n[53] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian Schroff, and Hartwig Adam. Encoder-decoder with atrous separable convolution for semantic image segmentation. In Proceedings of the European conference on computer vision (ECCV), pages 801\u2013818, 2018. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "Appendix Overview: ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "A Proof and discussion of Theorems 1 and 2 16 ", "page_idx": 14}, {"type": "text", "text": "B Results on Digits 16 ", "page_idx": 14}, {"type": "text", "text": "C Results on CIFAR-10C 17", "page_idx": 14}, {"type": "text", "text": "D Ablation Study 18 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "D.1 Initialization and Learning Rate 18   \nD.2 Model Update Policy . . 18   \nD.2.1 Subset of Model Update 18   \nD.2.2 Model Update According to Weight 19   \nD.3 Combination Weight Visualization 20   \nD.4 Comparison with MSDA 20   \nD.5 Comparison with Model Soups . . 20   \nE Implementation Details 21   \nE.1 Stationary Target 21   \nE.1.1 Digit Classification 21   \nE.1.2 Object Recognition 21   \nE.2 Dynamic Target . . 21   \nE.2.1 CIFAR-10/100-C 21   \nF Semantic Segmentation 21   \nF.1 Datasets 22   \nF.2 Experimental setup . 22   \nF.3 Visualization 22 ", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "G Additional discussion 23 ", "page_idx": 14}, {"type": "text", "text": "A Proof and discussion of Theorems 1 and 2 ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Proof of Theroem 1. The optimization (4) has a structure similar to a class of non convex problems as follows: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{minimize}_{x\\in\\chi}\\quad g(x)-h(x))\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\chi$ is a closed convex set, $g(x)$ is $M_{g}$ smooth and $h(x)$ is a continuous convex function. In such cases, the optimization converges as follows [47]: ", "page_idx": 15}, {"type": "equation", "text": "$$\n{\\frac{1}{(k+1)}}\\sum_{j=0}^{k}\\left(\\nabla_{\\chi}\\|f(x^{k})\\|_{2}^{2}\\right)\\leq{\\frac{2(f(x^{0})-f^{\\star}))}{\\alpha(k+1)}}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where, $f(x)=(g(x)-h(x))$ . ", "page_idx": 15}, {"type": "text", "text": "In our case $g(x)\\,=\\,c.$ , where $c$ is a constant (smooth and continous) and $h(x)$ is negative of the Shannon entropy, which is continous and convex. Also, $\\chi$ is the $\\mathbf{n}$ -simplex $\\aleph$ , which is a closed convex set. So, according to the proof derived in [47], we can conclude the bound in Theroem 1. ", "page_idx": 15}, {"type": "text", "text": "Proof of Theorem 2. We adapt the theorem from a corollary (corollary 1) in [48]. In this corollary the following result was derived: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\mathcal{L}(\\mathrm{f}_{\\hat{\\alpha}}^{\\tau})\\leq\\operatorname*{min}_{\\alpha\\in\\Delta}(l_{\\star}^{\\alpha}(\\mathcal{D})\\!+\\!\\mathrm{D}\\mathbf{M}_{\\mathcal{D}^{\\prime}}^{\\mathcal{D}}(\\alpha)+4\\Gamma\\mathcal{R}_{n_{\\tau}}(\\mathcal{F}_{\\alpha}))}}\\\\ &{}&\\\\ &{}&{{+\\,\\sqrt{\\tilde{\\mathcal{O}}((h_{e f f}+t)/n_{\\nu})}+\\delta}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Here $\\mathrm{f}^{\\tau}$ in the $\\mathrm{f}_{\\hat{\\alpha}}^{\\tau}$ is the trained model on the training $(\\tau)$ distribution $\\mathcal{D}^{\\prime}$ and $\\hat{\\alpha}$ is a hyper-parameter that has been empirically optimized by fine tuning on the validation $(\\nu)$ distribution $\\mathcal{D}$ . $\\mathcal{L}$ is the expected risk over the distribution $\\mathcal{D}$ . DM measures the distribution mismatch via difference of sub-optimality gap using the training and validation distribution. $\\mathcal{R}_{n_{\\tau}}(\\mathcal{F}_{\\alpha}))$ is the Rademacher complexity of the function class $\\mathcal{F}$ with $\\alpha$ as the hyper-parameter. The corollary holds for probability of at least $1-3e^{-t}$ and $h_{e f f}$ is the effective dimension of the hyper-parameter space. Also $n_{\\nu}$ is the number of samples under the validation. The bound can be first of all easily extended to the source/target scenario instead of train/validation. In our scenario the source models jointly construct the function class ${\\mathcal F}_{\\alpha}$ where, the hyper-parameter $\\alpha$ is the combination weight w. Effective dimension for our case is exactly the number of source model $N$ and instead of $t$ we took $\\tau$ as the probability variable. For the sake of simplicity we omitted $\\delta>0$ which is a positive constant along with the Rademacher complexity. Also $n_{\\nu}=B$ in our setting since we have $B$ number of samples for the target/validation. Now there is a new term in our bound which is $\\varphi$ which was not in the original corollary. This term is used to account for the mismatch between actual and pseudo-labels generated by the source. This is done due to the fact that we do empirical minimization of the entropy of the target pseudo-label since the problem is unsupervised and actual labels are not available. The left side of the inequality is derived using the test/target pseudo-label. Consequently, we can introduce an added distribution mismatch term. This term can be broken down into three components: mismatch from target pseudo to target ground truth (gt), from target gt to source gt, and from source gt to source pseudo label. Of these components, the first two can be readily integrated into the $\\Psi(.)$ function , given that it measures the discrepancy between the weighted source and the target. The remaining third component is denoted by the $\\varphi(.)$ function. This completes the proof. \u53e3 ", "page_idx": 15}, {"type": "text", "text": "B Results on Digits ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We report here the results of digit classification in Table 4. Similar to the experiment on Office-Home dataset, each column of the table represents a target domain dataset. We train four source models on the rest of the digit datasets. For instance, in case of \u2018MM\u2019 column \u2018MM\u2019 is the target domain which is adapted using four source models trained on \u2018MT\u2019, \u2018UP\u2019, \u2018SV\u2019 and \u2018SY\u2019 respectively. ", "page_idx": 15}, {"type": "text", "text": "We once again calculate the test error for each incoming test batch and report the results by averaging the errors across all batches. The table demonstrates that CONTRAST achieves a significant reduction ", "page_idx": 15}, {"type": "text", "text": "Table 4: Results on Digits dataset. We train the source models using four digit datasets to perform inference on the remaining dataset. The column abbreviations correspond to the datasets as follows: \u2018MM\u2019 for MNIST-M, \u2018MT\u2019 for MNIST, \u2018UP\u2019 for USPS, \u2018SV\u2019 for SVHN, and \u2018SY\u2019 for Synthetic Digits.. The table (reporting $\\%$ error rate $\\left(\\downarrow\\right)$ ) shows that $\\mathrm{X+C}.$ ONTRAST outperforms all of the baselines (X-Best) consistently . ", "page_idx": 16}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/e6dfee39076460259be3563266abc3367813b5e696e04042f387e72fadeadb1d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "in test error compared to the best single source (on average $3\\%$ error reduction than the best source). Another baseline exists that simply uses a naive ensemble of the source models, without any weight optimization. In situations where there\u2019s a significant performance gap between the best and worst source models adapted using single-source methods, a uniform ensemble of these models produces a predictor that trails considerably behind the best-adapted source, as noted by [18]. Referring to Table 4, when testing on the SVHN dataset, the error disparity between the best and worst adapted source models is approximately $70.7\\%$ \u2014a substantial margin. Consequently, using a uniform ensemble in such a scenario results in an error rate of roughly $45.5\\%$ (experimentally found, not reported in the table). This is strikingly higher than our method\u2019s error rate of around $14.2\\%$ . Given these findings, we deduce that uniform ensembling is not a reliable approach for model fusion. Thus, we exclude it from our experiment section\u2019s baseline. ", "page_idx": 16}, {"type": "text", "text": "C Results on CIFAR-10C ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Here, we report the results on dynamic target distribution using CIFAR-10C dataset. Note that identical to the experiment on CIFAR100-C in the main paper the results on CIFAR10-C in Table 5 follow the same trend where X+CONTRAST outperforms the X-Best. ", "page_idx": 16}, {"type": "text", "text": "Table 5: Results on CIFAR-10C. We take four source models trained on Clear, Snow, Fog and Frost. We employ these models for adaptation on 15 sequential test domains. This table illustrates that even in the dynamic environment X+CONTRAST performs better than X, which is the direct consequence of better retaining source knowledge. (Results in error rate $\\downarrow(\\sin\\%)$ ) ", "page_idx": 16}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/9e9adc3b1fa52a8344607914d7a81b81842280ad8d7542970938e27377e1473a.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "In the single-source scenario, one among the four source models achieves the X-Best (for example CoTTA-Best) accuracy for a specific domain. The determination of which individual model (from the four) will attain the best accuracy for that domain remains uncertain beforehand. Furthermore, the individual source model yielding the X-Best accuracy varies across different domains within CIFAR10-C. However, in our X+CONTRAST approach, the need to deliberate over the selection of one out of the four source models is eliminated. $X+$ CONTRAST reliably outperforms any single source $\\Chi$ -model that might achieve the X-Best accuracy. ", "page_idx": 16}, {"type": "text", "text": "Individual TTA methods may have distinct advantages. For example, Tent offers several distinct advantages over CoTTA, including its lightweight nature and faster performance. Conversely, CoTTA presents certain beneftis over Tent, such as increased resilience against forgetting. Consequently, the choice between TTA methods is dependent on the user\u2019s preferences, aligning with the specific task at hand. In this experiment, we have demonstrated that CONTRAST can be integrated with any TTA method of the user\u2019s choosing. ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "D Ablation Study ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "D.1 Initialization and Learning Rate ", "text_level": 1, "page_idx": 17}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/9e02668e1ad291e6134f21ba5c04e639cf7898569eceac2924f1204f72c0b69c.jpg", "table_caption": ["Table 6: Effect of initialization and step size choice. Error rate on Office-Home under different choices of initialization and step sizes. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "Table 6 presents the error rate results on the Office-Home dataset under the same experimental setting as Table 3 (Appendix) with Tent as the adaptation method, but with different initialization and learning rate choices for solving the optimization in (4). It is evident from the table that our chosen initialization and adaptive learning rate result in the highest accuracy gain. ", "page_idx": 17}, {"type": "text", "text": "We additionally show another ablation study in Table 7, where we initialize the combination weights based on the probability of source model predictions. More precisely, we set the initial weights inversely proportional to the entropy of the source model predictions. In simpler terms, a source model with low entropy receives a higher weight, while one with high entropy receives a lower weight. ", "page_idx": 17}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/50327751a69da8809e210b1e0ba7e4686819ef70e2f7d732e24132bef3f33204.jpg", "table_caption": ["Table 7: Initialization based on Entropy. The table shows the results of entropy based initialization. (Results in error-rate $\\%\\downarrow$ ) "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "In the presented table for CIFAR-100C, we note a $16.5\\%$ reduction in error resulting from our initialization method. We found that initializing the combination weights using the entropy of the test batch for various sources leads to somewhat uniform initialization. However, when we initialize the combination weights using KL divergence, we achieve a highly effective and peaky prior, favoring the most correlated source model with relatively higher weightage. This clarifies why initializing with entropies fails to converge quickly to the optimum, resulting in significantly poorer outcomes compared to our method. ", "page_idx": 17}, {"type": "text", "text": "D.2 Model Update Policy ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In Table 8 and 9, we demonstrate that by updating only the model with the highest correlation to the target domain, our method produces the lowest test accuracy. This is in comparison to scenarios where we either update all models or solely the least correlated one. This empirical observation directly supports our theoretical assertion from the theorem: updating the most correlated model is most effective in preventing forgetting, thereby resulting in the smallest test error during gradual adaptation. We also experiment with another model update policy where a subset of model is updated. ", "page_idx": 17}, {"type": "text", "text": "D.2.1 Subset of Model Update ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In this approach, rather than focusing solely on the most correlated source model, we identify and update a subset of source models that exhibit higher correlation than the rest of the models. Specifically, we select models for updating based on their combination weights, choosing only those whose weights exceed $1/n$ , with $n$ representing the total number of models. The intuition behind selecting this threshold $1/n$ for subset selection is grounded in the distance of the combination weight distribution with respect to the uniform distribution. A uniform combination weight implies that all ", "page_idx": 17}, {"type": "text", "text": "Table 8: Choice of model update (CONTRAST $^{\\ast}+$ CoTTA). In our experiments using CoTTA as the model update method on CIFAR100-C, we tested four scenarios: updating all models, updating only the least correlated model, updating subset of model, and updating only the most correlated model. Our results indicate that our model selection approach produces the most favorable outcome. (Results in error rate $\\downarrow$ (in $\\%$ )) ", "page_idx": 18}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/46335bb4662981fe5de5e680372365da836f5aa916374a76ea72795299eea109.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "Table 9: Choice of model update (CONTRAST $^+$ Tent). In our experiments using Tent as the model update method on CIFAR100-C, we tested four scenarios: updating all models, updating only the least correlated model, updating subset of model, and updating only the most correlated model. Our results indicate that our model selection approach produces the most favorable outcome. (Results in error rate $\\downarrow(\\mathrm{in}\\,\\%)$ ) ", "page_idx": 18}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/ff1805a01f1e644efa83b78a12bb9dc05ccbeea8b676487f9cfbfbdb2e2d3e2e.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "models are equidistant w.r.t the test distribution and should be updated. However, if only one model weight surpasses $1/n$ , it signifies that only one model exhibits a high correlation with the overall model. ", "page_idx": 18}, {"type": "text", "text": "Results are shown in Table 8 and 9. Several key observations can be extracted from here. Notably, when utilizing the Tent adaptation algorithm, updating a subset of models results in significantly poorer performance compared to updating only the most correlated model. Conversely, with the CoTTA adaptation algorithm, the performance decrement from updating a subset of models is relatively minor compared to updating the most correlated model. This discrepancy can be attributed to the varying degrees of resistance to forgetting exhibited by these adaptation algorithms. Updating multiple models tends to induce forgetting, leading to a decline in overall performance, especially when the adaptation algorithm is not highly resistant to forgetting. Despite the adaptation method\u2019s robustness to forgetting, it has been consistently observed that updating the most correlated model not only delivers superior performance but also offers computational advantages over updating a subset of models. This approach simplifies the update process and ensures more efficient use of computational resources. ", "page_idx": 18}, {"type": "text", "text": "D.2.2 Model Update According to Weight ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Here, we update the model $j$ weighted by $w_{j}$ . To do so, we need to properly devise an approach that updates models in measures according to their correlation with the test data. Drawing inspiration from recent studies that employ variable learning rates for single-source TTA, we devise a strategy to adjust the learning rate $\\eta_{j}$ used in updating model $j$ based on their respective combination weights $w_{j}$ . Specifically, we assigned the highest learning rate $\\eta_{m a x}=0.001$ (0.001 is the learning rate used for both Tent and CoTTA in our experiments) to the model with the greatest combination weight, while the lowest learning rate $\\eta_{m i n}\\,=\\,0.0001$ , (a tenfold reduction) was allocated to the model with the lowest combination weight. For the remaining models, we interpolated their learning rates proportionally between the highest and lowest rates, based on their respective combination weights following the formula: \u03b7j = [ wwmjax\u2212\u2212wwmimnin $\\begin{array}{r}{\\eta_{j}=[\\left(\\frac{w_{j}-w_{m i n}}{w_{m a x}-w_{m i n}}\\right)\\times(\\eta_{\\mathrm{max}}-\\eta_{\\mathrm{min}})]+\\eta_{\\mathrm{min}}.}\\end{array}$ . In the Table 10, we present the resulting error rates for CIFAR-100C dataset using both Tent and CoTTA. ", "page_idx": 18}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/cb1627295a440ad0022ea8f95d2faae805eb81c66d08131ab71428f584e0a273.jpg", "table_caption": ["Table 10: Model Update according to Weight. The table shows results of updating model according to their respective weights. (Results in error-rate $\\%\\downarrow,$ ) "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "Our investigation reveals that, in scenarios where the update algorithm exhibits limited robustness against forgetting, such as Tent, updating only the model with the highest combination weight proves more advantageous. This is because even marginal updates to uncorrelated models can lead to detrimental forgetting, resulting in poor performance. Conversely, when the update algorithm demonstrates resilience against forgetting (CoTTA), updating the most correlated model impacts performance the most. While updating uncorrelated models does not substantially enhance performance, it significantly increases computational costs. It should also be noted that we have found exactly same finding with our ablation study focused on updating subsets of models. Consequently, we assert that updating the single model with the highest combination weight yields optimal performance across all scenarios. ", "page_idx": 19}, {"type": "text", "text": "D.3 Combination Weight Visualization ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "To provide insight into the combination weight distribution, let\u2019s consider an example where the source models are trained on the clean, snow, frost, and fog domains using the training data. We then select one of these domains to collect the average weights over all the test data. When the test data is from the fog domain, the weight distribution appears as follows: [0.05, 0.08, 0.09, 0.78]. On the other hand, when the test domain is frost, we observe the following weight distribution: [0.07, 0.14, 0.69, 0.11]. These results clearly illustrate that the weight distribution accurately reflects the correlation between the source models and target domains. ", "page_idx": 19}, {"type": "text", "text": "D.4 Comparison with MSDA ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Existing multi-source source-free methods are designed for offline settings where all the target data are available during adaptation. However, in our setting, data is received batch by batch during adaptation. Therefore, theoretically, these methods are expected to perform worse in our setup. Nevertheless, we compared CONTRAST with the seminal paper [18] on source-free multi-source Unsupervised Domain Adaptation (UDA), specifically the DECISION method, to demonstrate its effectiveness in an online adaptation setting. We keep the hyperparameters exactly the same as described in the DECISION and perform adaptation on each incoming batch of test data with the number of epochs specified in DECISION. ", "page_idx": 19}, {"type": "text", "text": "Table 11: Comparison with MSDA. The table compares the performance of our method with MSDA approach DECISION. (Results in error-rate $\\%\\downarrow$ ) ", "page_idx": 19}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/0c1aeb70e1bdf23dfbbf8996b143972d4b3de69bb99d28937eb34f4c559d41b6.jpg", "table_caption": [], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "It is evident from Table 11 that DECISION performs notably poorly in the online setting, with an error rate almost $56\\%$ higher than CONTRAST. DECISION utilizes clustering of the entire offline dataset based on the number of classes, a method not feasible to accurately implement in our setting with very small batch sizes. This highlights the necessity of a multi-source method specifically tailored for our setting. ", "page_idx": 19}, {"type": "text", "text": "D.5 Comparison with Model Soups ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Model Soups [30] is a popular approach for utilizing a set of models by averaging their parameters to create a single model for inference on test data. For completeness, we compare our method against Model Soups. ", "page_idx": 19}, {"type": "text", "text": "Table 12: Comparison with Model Soups. The table compares the performance our method against model soups. (Results in error-rate $\\%\\downarrow,$ ) ", "page_idx": 19}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/fb12e83e4e64ba656217baf2f0f0cb0106d001c24c62615740bc181cc23a4e24.jpg", "table_caption": [], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "As shown in Table 12, the performance of Model Soups is significantly worse compared to our method. Model Soups averages the parameters of models fine-tuned on the same data distribution. However, in our setting, we have models trained on different source domains, making the averaging of model parameters suboptimal. ", "page_idx": 19}, {"type": "text", "text": "E Implementation Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this section, we provide a comprehensive overview of our experimental setup. We conducted two sets of experiments: one on a stationary target distribution, and the other on a dynamic target distribution that changes continuously. The reported results in the main paper are average of three runs with different seeds. ", "page_idx": 20}, {"type": "text", "text": "E.1 Stationary Target ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "E.1.1 Digit Classification ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "The digit classification task consists of five distinct domains from which we construct five different adaptation scenarios. Each scenario involves four source models, with the remaining domain treated as the target distribution. In total, we construct five adaptation scenarios for our study. ", "page_idx": 20}, {"type": "text", "text": "The ResNet-18 architecture was used for all models, with an image size of $64\\times64$ and a batch size of 128 during testing. Mean accuracy over the entire test set is reported in Table 2 of the main paper. For Tent we use a learning rate of 0.01 and for rest of the adaptation method a learning rate of 0.001 is used. We use Adam optimizer for all the adaptation methods. Model parameter update is performed using a single step of gradient descent. ", "page_idx": 20}, {"type": "text", "text": "E.1.2 Object Recognition ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "The object recognition task on the Office-Home dataset comprises of four distinct domains from which we construct four different adaptation scenarios, similar to the digit classification setup. We use the same experimental settings and hyperparameters as the digit classification experiment, with the exception of the image size, which is set to $224\\times224$ in this experiment. The results of this evaluation are reported in Table 3 of the main paper. ", "page_idx": 20}, {"type": "text", "text": "E.2 Dynamic Target ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "E.2.1 CIFAR-10/100-C ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this experiment, we use four ResNet-18 source models trained on different variants of the CIFAR10/100 dataset: 1) vanilla train set, 2) train set with added fog (severity $=5$ ), 3) train set with added snow (severity $=5$ ), and 4) train set with added frost (severity $=5$ ). To evaluate the models, we use the test set of CIFAR-10/100C (severity $=5$ ) and adapt to each of the domains in a continual manner. The images are resized to $224\\times224$ . For all the adaptation methods, a learning rate of 0.001 with Adam optimizer is used. ", "page_idx": 20}, {"type": "text", "text": "F Semantic Segmentation ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Table 13: Result on Cityscape to ACDC: In this experiment, we test our method on the test data from individual weather conditions (static test distribution) of ACDC. The source models are trained on the train set of Cityscape and its noisy variants. Our method clearly outperforms baseline adaptation method. (Results in $\\%$ mIoU) ", "page_idx": 20}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/cc83423d6ce01f3c929bbcb56588ad383d5c9726f0c579abcf29719a77f9a342.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "Our method is not just limited to image classification tasks and can be easily extended to other tasks like semantic segmentation (sem-seg). We assume access to a set of sem-seg source models $\\{\\mathrm{f}_{S}^{j}\\}_{j=1}^{N}$ , where each model classifies every pixel of an input image to some class. Specifically, $\\mathrm{f}_{S}^{j}:\\mathbb{R}^{H\\times W}\\rightarrow\\mathbb{R}^{H\\times W\\times K}$ , where $K$ is the number of classes. In this case, the entropy in Eqn. 3 of the main paper will be modified as follows: ", "page_idx": 20}, {"type": "text", "text": "Table 14: Result on Cityscapes to ACDC for dynamic test distribution: This table illustrates that over a prolonged cycle of repetitive test distributions, our model can retain performance better than baseline Tent. ((Results in $\\%$ mIoU)) ", "page_idx": 21}, {"type": "table", "img_path": "mpDbWjLzfT/tmp/24bca3c671d81376dfe17ebf7693c6aee2d02f0159f8228bd94cfda2b6e94c66.jpg", "table_caption": [], "table_footnote": [], "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathcal{L}_{w}^{(t)}(\\mathbf{w})=-\\mathbb{E}_{\\mathcal{D}_{T}^{(t)}}\\sum_{h=1}^{H}\\sum_{w=1}^{W}\\sum_{c=1}^{K}\\hat{y}_{i h w c}^{(t)}\\log(\\hat{y}_{i h w c}^{(t)})\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Where, $\\hat{y}_{i h w c}^{(t)}$ is the weighted probability output corresponding to class $c$ for the pixel at location at time-stamp . We modify Eqn. 3 in the main paper, while keeping the rest of the framework the same. ", "page_idx": 21}, {"type": "text", "text": "F.1 Datasets ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We use the following datasets in our experiments: ", "page_idx": 21}, {"type": "text", "text": "\u2022 Cityscapes: Cityscapes [49] is a large-scale dataset that has dense pixel-level annotations for 30 classes grouped into 8 categories (flat surfaces, humans, vehicles, constructions, objects, nature, sky, and void). There are also fog and rain variants [50, 51] of the Cityscapes dataset, where the clean images of Cityscapes have been simulated to add fog and rainy weather conditions. ", "page_idx": 21}, {"type": "text", "text": "\u2022 ACDC: The Adverse Conditions Dataset [52] has images corresponding to fog, night-time, rain, and snow weather conditions. Also, the corresponding pixel-level annotations are available. The number of classes is the same as the evaluation classes of the Cityscapes dataset. ", "page_idx": 21}, {"type": "text", "text": "F.2 Experimental setup ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We use Deeplab $\\mathrm{v}3+\\$ [53] with a ResNet-18 encoder as the segmentation model for all the experiments. We resize the input images to a size of $512\\times512$ . Following the conventional evaluation protocol [49], we evaluate our model on 19 semantic labels without considering the void label. ", "page_idx": 21}, {"type": "text", "text": "We first experiment in a static target distribution setting. Specifically, we train three source models on clean, fog, and rain train splits of Cityscapes. We then evaluate the models on the test set of each of the weather conditions of ACDC dataset using CONTRAST and baseline Tent models. We use a batch size of 16 and report the mean accuracy over all the test batches. Again, we have updated the combination weights of CONTRAST with SGD optimizer using 5 iterations. For updating the source model in CONTRAST that has the most correlation with the incoming test batch, we use the Adam optimizer with a learning rate of 0.001 and updated the batch-norm parameters with one iteration. The baseline Tent models are also updated with the same optimizer and learning rate. The results in Table. 13 clearly demonstrate that CONTRAST outperforms all the baselines on test data from each of the adverse weather conditions. ", "page_idx": 21}, {"type": "text", "text": "We also evaluate our method in a dynamic test distribution setting, where we have sequentially incoming test batches from the four weather condition test sets of ACDC dataset. The test sequence includes 5 batches of Rain, followed by 5 batches of Snow, 5 batches of Fog, and finally 5 batches of Night. This sequence is repeated (with the same test images) for a total of 5 rounds. We report the mean accuracy over the 5 batches and include the results for the 1st, 3rd, and 5th rounds in Table 14. We use the same hyperparameters as in the dynamic setting of previous experiments with the exception that the batch-size is 16. ", "page_idx": 21}, {"type": "text", "text": "F.3 Visualization ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In Fig. 4, we present the input images along with the corresponding predicted masks of the baseline models and CONTRAST from the last round. The figure contains rows of input image samples from ", "page_idx": 21}, {"type": "text", "text": "the four different weather conditions of the ACDC dataset, in the order of rain, snow, fog, and night. CONTRAST is compared with baseline adaptation method Tent, and as shown in Fig. 4, it is evident that CONTRAST provides better segmentation results compared to the baselines visually. ", "page_idx": 22}, {"type": "image", "img_path": "mpDbWjLzfT/tmp/c0ea089e2d470d16963443814f03697a55d6fd3b1df7d984f5e07ce832255034.jpg", "img_caption": ["Figure 4: Visual Comparison of CONTRAST with Baselines for Semantic Segmentation Task. Each row in the figure corresponds to a different weather condition (rain, snow, fog, and night from top to bottom). It is evident that CONTRAST outperforms the baselines in terms of segmentation results. "], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "G Additional discussion ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "The $\\varphi(.)$ function implies that trained sources should produce high-quality pseudo-labels within their own distribution. Essentially, this function evaluates the effectiveness of the model\u2019s training. For instance, even if the shift between the source and target is minimal, a poorly trained source model might still under-perform on the target. Observe that both the shift and the quality terms are minimized when we broaden our search space over $\\hat{\\Delta}$ . This allows us to select a model that exhibits the highest correlation with the test domain, thereby providing us with the most strict bound within the discrete simplex. ", "page_idx": 22}, {"type": "text", "text": "Examining the issue through the lens of the gradient provides another perspective. By updating the source model that is most correlated with the test data, its gradient will be smaller than those of other models. Over time, this ensures that the model\u2019s parameters remain closer to the original source parameters, thereby preventing catastrophic forgetting. let\u2019s examine a toy case mathematically of the most correlated source can give us least gradient. ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "Let us assume a binary classification task with linear regression where the final activation is sigmoid $\\sigma(.)$ function. Now let\u2019s take the pseudo-label for a sample $x$ be $\\hat{y}$ , where $\\hat{y}=\\sigma(w^{\\top}x)$ . Then the entropy $h$ of $\\hat{y}$ will be $h=-\\hat{y}\\log(\\hat{y})$ . Then we take the derivative of the objective $h$ w.r.t $w$ weight as follows: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{h=-\\hat{y}\\log(\\hat{y})}\\\\ &{\\Rightarrow\\cfrac{\\partial h}{\\partial w}=(1+\\log(\\hat{y}))\\hat{y}(\\hat{y}-1)x}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Now we can easily verify that if the source model is closest to the test domain, then the pseudo-label generated by the model has very small entropy which also means $\\hat{y}$ is either close to 0 or close to 1. For both of the cases the derivative expression above goes close to zero which validate the claim of having smallest gradient for highest correlated source. ", "page_idx": 23}, {"type": "text", "text": "H KL divergence between two univariate Gaussians ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "During the discussion of initialization of the combination weights in Section 3.5, we come up with $\\theta_{j}^{t}$ which is calculated using the formula for KL divergence between two univariate Gaussians $\\mathcal{N}(\\mu_{1},\\sigma_{1}^{2})$ and $\\mathcal{N}(\\mu_{2},\\sigma_{2}^{2})$ . In this section, we provide the detailed derivation of this below: From the definition of KL divergence, we know the distance between two distributions $p$ and $q$ is given by, ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\mathcal{D}_{K L}(p,q)=\\int_{-\\infty}^{+\\infty}p(x)\\log\\left(\\frac{p(x)}{q(x)}\\right)\\,d x}}\\\\ {{\\displaystyle=\\int_{-\\infty}^{+\\infty}p(x)\\log\\left(p(x)\\right)\\,d x-\\int_{-\\infty}^{+\\infty}p(x)\\log\\left(q(x)\\right)\\,d x}}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Here in this problem $p$ and $q$ are univariate Gaussians and can be expressed as follows: ", "page_idx": 23}, {"type": "equation", "text": "$$\np(x)={\\frac{1}{(2\\pi\\sigma_{1}^{2})^{\\frac{1}{2}}}}\\exp\\bigg({-{\\frac{(x-\\mu_{1})^{2}}{2\\sigma_{1}^{2}}}}\\bigg),\\qquad\\quad q(x)={\\frac{1}{(2\\pi\\sigma_{2}^{2})^{\\frac{1}{2}}}}\\exp\\bigg({-{\\frac{(x-\\mu_{2})^{2}}{2\\sigma_{2}^{2}}}}\\bigg).\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Now we compute the second term in Eqn. (12) as follows: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\int_{-\\infty}^{+\\infty}p(x)\\log\\left(q(x)\\right)\\,d x=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\int_{-\\infty}^{+\\infty}p(x)\\frac{(x-\\mu_{2})^{2}}{2{\\sigma_{2}^{2}}}\\,d x}&{}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\frac{\\int_{-\\infty}^{+\\infty}x^{2}p(x)\\,d x-2\\mu_{2}\\int_{-\\infty}^{+\\infty}x p(x)\\,d x+\\mu_{2}^{2}}{2{\\sigma_{2}^{2}}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\frac{\\mathbb{E}\\left[X^{2}\\right]-2\\mu_{2}\\mathbb{E}\\left[X\\right]+\\mu_{2}^{2}}{2{\\sigma_{2}^{2}}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\frac{\\mathbb{V}\\pi\\left\\{X\\right\\}+\\left(\\mathbb{E}\\left[X\\right]\\right)^{2}-2\\mu_{2}\\mathbb{E}\\left[X\\right]+\\mu_{2}^{2}}{2{\\sigma_{2}^{2}}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\frac{\\sigma_{1}^{2}+\\mu_{1}^{2}-2\\mu_{2}\\mu_{1}+\\mu_{2}^{2}}{2\\sigma_{2}^{2}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi{\\sigma_{2}}^{2})^{\\frac{1}{4}}}\\right)-\\frac{\\sigma_{1}^{2}+(\\mu_{1}-\\mu_{2})^{2}}{2\\sigma_{2}^{2}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "In a similar manner we calculate the first term in Eqn. (12) as follows: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\int_{-\\infty}^{+\\infty}p(x)\\log(p(x))\\,d x=\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2}\\frac{1}{1}\\right)^{3}}\\right)-\\int_{-\\infty}^{+\\infty}p(x)\\frac{(x-\\mu_{1})^{2}}{2\\sigma_{1}^{2}}d x}&{}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2}\\frac{1}{1})^{\\frac{1}{3}}}\\right)-\\frac{\\int_{-\\infty}^{+\\infty}x^{2}p(x)\\,d x-2\\mu_{1}\\int_{-\\infty}^{+\\infty}x p(x)\\,d x+\\mu_{1}^{2}}{2\\sigma_{1}^{2}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2}\\frac{1}{1})^{\\frac{1}{3}}}\\right)-\\frac{\\mathbb{E}\\left[X^{2}\\right]-2\\mu_{1}\\mathbb{E}\\left[X\\right]+\\mu_{1}^{2}}{2\\sigma_{2}^{2}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi\\sigma_{2}^{2}\\frac{1}{1})^{\\frac{1}{3}}}\\right)-\\frac{\\mathbb{V}\\pi\\left[X\\right]+(\\mathbb{E}[X])^{2}-2\\mu_{1}\\mathbb{E}\\left[X\\right]+\\mu_{1}^{2}}{2\\sigma_{1}^{2}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2}\\frac{1}{1})^{\\frac{1}{3}}}\\right)-\\frac{\\sigma_{1}^{2}+\\mu_{1}^{2}-2\\mu_{1}^{2}+\\mu_{1}^{2}}{2\\sigma_{1}^{2}}}\\\\ &{=\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2}\\frac{1}{1})^{\\frac{1}{3}}}\\right)-\\frac{1}{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Now combining Eqn. (14) and Eqn. (13), we get the final KL divergence as follows: ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\mathcal{D}_{K L}(p,q)=\\displaystyle\\log\\left(\\frac{1}{(2\\pi\\sigma_{1}^{2})^{\\frac{1}{2}}}\\right)-\\frac{1}{2}-\\log\\left(\\frac{1}{(2\\pi\\sigma_{2}^{2})^{\\frac{1}{2}}}\\right)+\\frac{\\sigma_{1}^{2}+\\left(\\mu_{1}-\\mu_{2}\\right)^{2}}{2\\sigma_{2}^{2}}}}\\\\ {{=\\log\\left(\\frac{\\sigma_{2}}{\\sigma_{1}}\\right)+\\frac{\\sigma_{1}^{2}+\\left(\\mu_{1}-\\mu_{2}\\right)^{2}}{2\\sigma_{2}^{2}}-\\frac{1}{2}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "I Optimal step size in approximate Newton\u2019s method ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "In the main paper, we compute the optimal combination weights by solving the optimization below: ", "page_idx": 24}, {"type": "equation", "text": "$$\n{\\begin{array}{r l}{{\\underset{\\mathbf{w}}{\\operatorname{minimize}}}}&{{\\mathcal{L}}_{w}^{(t)}(\\mathbf{w})}\\\\ {{\\mathrm{subject~to}}}&{\\mathbf{w}_{j}\\geq0,\\forall j\\in\\{1,2,\\ldots,N\\},}\\\\ &{\\displaystyle\\sum_{j=1}^{n}\\mathbf{w}_{j}=1}\\end{array}}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "To solve this problem, we begin by initializing $\\mathbf{w}_{i n i t}^{(t)}$ as $\\delta(-\\theta^{t})$ . Next, we determine the optimal step size based on the initial combination weights to minimize the loss $\\mathcal{L}_{w}^{(t)}$ as much as possible. Specifically, we use a second-order Taylor expansion to approximate the loss at the updated point after taking a single step with a step size of $\\alpha^{(t)}$ . Thus, after one step of gradient descent, the updated point becomes: ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\mathbf{w}_{i n i t}^{(t)\\left(1\\right)}=\\mathbf{w}_{i n i t}^{(t)}-\\alpha^{(t)}\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)\\left|\\mathbf{w}^{i n i t}\\right.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "For notational simplicity let us first denote $\\mathbf{w}_{i n i t}^{(t)(1)}=\\mathbf{w}^{(1)}$ , $\\mathbf{w}_{i n i t}^{(t)}=\\mathbf{w}^{(0)}$ and $\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)\\bigg|{\\mathbf{w}^{i n i t}}=$ $\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}$ . We also denote the hessian of $\\mathcal{L}_{w}^{(t)}$ at $\\mathbf{w}^{(0)}$ as $\\mathcal{H}_{\\mathbf{w}^{(0)}}$ . Now, we can write the taylor series ", "page_idx": 24}, {"type": "text", "text": "expansion of $\\mathcal{L}_{w}^{(t)}$ at $\\mathbf{w}^{(1)}$ as follows: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{\\ast\\left(t\\right)}{\\omega}\\left(\\mathbf{w}^{(1)}\\right)=\\mathcal{L}_{w}^{(t)}\\left(\\mathbf{w}^{(0)}-\\alpha^{(t)}\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)}\\\\ &{\\phantom{\\leq\\;\\;\\left(\\omega^{(t)}\\right)}=\\mathcal{L}_{w}^{(t)}\\left(\\mathbf{w}^{(0)}\\right)-\\alpha^{(t)}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)+\\frac{\\left(\\alpha^{(t)}\\right)^{2}}{2}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\mathcal{H}_{\\mathbf{w}^{(0)}}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\right)}\\\\ &{\\phantom{\\leq\\;\\;\\left(\\omega^{(t)}\\right)}\\approx\\mathcal{L}_{w}^{(t)}\\left(\\mathbf{w}^{(0)}\\right)-\\alpha^{(t)}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)+\\frac{\\left(\\alpha^{(t)}\\right)^{2}}{2}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\mathcal{H}_{\\mathbf{w}^{(0)}}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "In order to minimize $\\mathcal{L}_{w}^{(t)}(\\mathbf{w}^{(1)})$ we differentiate Eqn. (18) with respect to $\\alpha^{(t)}$ and set it zero to get \u03b1best $\\alpha_{b e s t}^{(t)}$ . Specifically, ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\quad\\frac{\\partial\\mathcal{L}_{w}^{(t)}\\left(\\mathbf{w}^{(1)}\\right)}{\\partial\\alpha^{(t)}}\\bigg\\rvert_{\\alpha^{(t)}=\\alpha_{b e s t}^{(t)}}=0}\\\\ &{\\implies-\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)+\\alpha_{b e s t}^{(t)}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\mathcal{H}_{\\mathbf{w}^{(0)}}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)=0}\\\\ &{\\implies\\alpha_{b e s t}^{(t)}=\\frac{\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)}{\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\mathcal{H}_{\\mathbf{w}^{(0)}}\\left(\\nabla_{\\mathbf{w}^{(0)}}\\mathcal{L}_{w}^{(t)}\\right)}=\\frac{\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)}{\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)^{\\top}\\mathcal{H}_{w}\\left(\\nabla_{\\mathbf{w}}\\mathcal{L}_{w}^{(t)}\\right)\\left|_{\\mathbf{w}^{i n+t}}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "This is the desired expression of $\\alpha_{b e s t}^{(t)}$ in Eqn. 10 in the main paper. ", "page_idx": 25}, {"type": "text", "text": "Note that $\\mathbf{w}^{(1)}$ does not lie within the simplex. To ensure that the updated w remains within the simplex, we project it onto the simplex after each gradient step. This can be done by applying the softmax operator $(\\delta(.)$ in the main paper), which will ensure that the updated weights are normalized and satisfy the constraints of the simplex. Moreover, in an ideal scenario, one would calculate the optimal step size $\\alpha_{b e s t}^{(t)}$ after each gradient step, taking into account the updated point. However, for the purpose of our experiment, we calculate $\\alpha_{b e s t}^{(t)}$ only for the first step and use this value as the learning rate for the remaining steps in order to avoid hessian calculation repeatedly. In our experiment, we limit the number of steps to 5 in order to ensure quicker inference. Empirically, we have observed that using the obtained step size as fixed throughout the optimization process works reasonably well. ", "page_idx": 25}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "The checklist is designed to encourage best practices for responsible machine learning research, addressing issues of reproducibility, transparency, research ethics, and societal impact. Do not remove the checklist: The papers not including the checklist will be desk rejected. The checklist should follow the references and follow the (optional) supplemental material. The checklist does NOT count towards the page limit. ", "page_idx": 26}, {"type": "text", "text": "Please read the checklist guidelines carefully for information on how to answer these questions. For each question in the checklist: ", "page_idx": 26}, {"type": "text", "text": "\u2022 You should answer [Yes] , [No] , or [NA] . ", "page_idx": 26}, {"type": "text", "text": "\u2022 [NA] means either that the question is Not Applicable for that particular paper or the relevant information is Not Available. \u2022 Please provide a short (1\u20132 sentence) justification right after your answer (even for NA). ", "page_idx": 26}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: Main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 26}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper discusses limitations of the work performed. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The paper provides full set of assumtions and complete proof. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 27}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The paper fully discloses all the information needed to reproduce the main experimental results. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example   \n(a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm.   \n(b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully.   \n(c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).   \n(d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 28}, {"type": "text", "text": "Answer: [No] ", "page_idx": 28}, {"type": "text", "text": "Justification: The paper fully discloses all the information needed to reproduce the main experimental results. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 28}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: Training details is included in the supplementary material. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 28}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper provides information about the statistical significance of the experiments. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 29}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper provides sufficient information on the computer resources. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 29}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: Yes, we confirm. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 29}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: Included in the paper. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 30}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 30}, {"type": "text", "text": "Justification: The paper does not pose such risks. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 30}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: The data and models used are properly cited. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 31}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 31}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 31}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 32}]