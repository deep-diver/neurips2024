[{"type": "text", "text": "FIFO-Diffusion: Generating Infinite Videos from Text without Training ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jihwan $\\mathbf{Kim}^{*1}$ Junoh Kang\u22171 Jinyoung Choi1 Bohyung Han1,2 Computer Vision Laboratory, 1ECE & 2IPAI, Seoul National University {kjh26720,junoh.kang, jin0.choi, bhhan}@snu.ac.kr ", "page_idx": 0}, {"type": "image", "img_path": "uikhNa4wam/tmp/84a1e3f8def43dbff763d46d6560b09697f3160d6991b6ab819afea9d1175e51.jpg", "img_caption": ["(c) \"A colony of penguins waddling on an Antarctic ice sheet, 4K, ultra HD.\" "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "Figure 1: Illustration of 10K-frame long videos generated by FIFO-Diffusion based on a pretrained text-conditional video generation model, VideoCrafter2 [3]. The number at the top-left corner of each image indicates the frame index. The results clearly show that FIFO-Diffusion can generate extremely long videos effectively based on the model trained on short clips (16 frames) without quality degradation while preserving the dynamics and semantics of scenes. ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We propose a novel inference technique based on a pretrained diffusion model for text-conditional video generation. Our approach, called FIFO-Diffusion, is conceptually capable of generating infinitely long videos without additional training. This is achieved by iteratively performing diagonal denoising, which simultaneously processes a series of consecutive frames with increasing noise levels in a queue; our method dequeues a fully denoised frame at the head while enqueuing a new random noise frame at the tail. However, diagonal denoising is a double-edged sword as the frames near the tail can take advantage of cleaner frames by forward reference but such a strategy induces the discrepancy between training and inference. Hence, we introduce latent partitioning to reduce the training-inference gap and lookahead denoising to leverage the benefti of forward referencing. Practically, FIFO-Diffusion consumes a constant amount of memory regardless of the target video length given a baseline model, while well-suited for parallel inference on multiple GPUs. We have demonstrated the promising results and effectiveness of the proposed methods on existing text-to-video generation baselines. Generated video examples and source codes are available at our project page1. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Diffusion probabilistic models have achieved remarkable success in generating high-quality images [8, 25, 5, 18]. On top of the success in the image domain, there has been rapid progress in the generation of videos [9, 22, 37, 31]. Despite the progress, long video generation still lags behind compared to image generation. One reason is that video diffusion models (VDMs) often consider a video as a single 4D tensor with an additional axis corresponding to time, which prevents the models from generating videos at scale. An intuitive approach to generating a long video is autoregressive generation, which iteratively predicts a future frame given the previous ones. However, in contrast to the transformerbased models [10, 28], diffusion-based models cannot directly adopt the autoregressive generation strategy due to the heavy computational costs incurred by iterative denoising steps for a single frame generation. Instead, several recent works [9, 7, 29, 12, 4, 1] adopt a chunked autoregressive generation strategy, which predicts several frames in parallel conditioned on few preceding ones, consequently reducing computational burden. While these approaches are computationally tractable, they often leads to temporal inconsistency and discontinuous motion, especially between the chunks predicted separately, because the model captures a limited temporal context available in the last few\u2014only one or two in practice\u2014frames. ", "page_idx": 1}, {"type": "text", "text": "To address the limitation, we propose a novel inference technique, FIFO-Diffusion, which realizes arbitrarily long video generation without training based on a pretrained video generation model for short clips. Our approach effectively alleviates the limitations of the chunked autoregressive method by enabling every frame to refer to a sufficient number of preceding frames. Our approach generates frames through diagonal denoising (Section 3.1) in a first-in-first-out manner using a queue, which contains a sequence of frames with different\u2014monotonically increasing\u2014noise levels over time. At each step, a completely denoised frame at the head is popped out from the queue while a new random noise image is pushed back at the tail. Diagonal denoising offers both advantage and disadvantage; noisier frames benefti from referring to cleaner ones while the model may suffer from training-inference gap because video models are generally trained to denoise frames with the same noise level. To overcome this trade-off and embrace the advantage of diagonal denoising, we propose latent partitioning (Section 3.2) and lookahead denoising (Section 3.3). Latent partitioning reduces training-inference gap by narrowing the range of noise levels in to-be-denoised frames and enables inference with finer steps. Lookahead denoising allows to-be-denoised frames to reference cleaner frames, thereby performing more accurate noise prediction. Furthermore, both latent partitioning and lookahead denoising offer parallelizability on multiple GPUs. ", "page_idx": 1}, {"type": "text", "text": "Our main contributions are summarized below. ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose FIFO-Diffusion through diagonal denoising, which is a training-free video generation technique for VDMs pretrained on short clips. Our approach denoises images with different noise levels for seamless video generation, enabling us to generate arbitrarily long videos.   \n\u2022 We introduce latent partitioning and lookahead denoising, which respectively reduce the training-inference gap incurred by diagonal denoising and allow the reference to less noisy frames for denoising, improving generation quality.   \n\u2022 FIFO-Diffusion requires a constant amount of memory regardless of the length of the generated videos given a baseline model. It is straightforward to run FIFO-Diffusion in parallel on multiple GPUs.   \n\u2022 Our experiments on four strong baselines, based on the U-Net [19] or DiT [16] architectures, show that FIFO-Diffusion generates extremely long videos including natural motion without degradation on quality over time. ", "page_idx": 1}, {"type": "text", "text": "2 Text-to-Video Diffusion Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We summarize the basic idea of text-conditional video generation techniques based on diffusion models. They consist of a few key components: an encoder $\\operatorname{Enc}(\\cdot)$ , a decoder ${\\mathrm{Dec}}(\\cdot)$ , and a noise prediction network $\\epsilon_{\\theta}(\\cdot)$ . They learn the distribution of videos corresponding to text conditions, and the video is denoted by $\\pmb{v}\\in\\mathbb{R}^{f\\times H\\times W\\times3}$ , where $f$ is the number of frames and $H\\times W$ indicates the image resolution. The encoder projects each frame onto the latent image space and the decoder reconstructs the frame from the latent. A video latent ${\\bf z}_{0}\\,=\\,\\mathrm{Enc}(v)\\,=\\,[z_{0}^{1};\\ldots;z_{0}^{f}]\\,\\in\\,\\mathbb{R}^{f\\times h\\times w\\times c}$ is obtained by concatenating projected frames and the latent diffusion model is trained to denoise its perturbed version, $\\mathbf{z}_{t}$ . For noise $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , a diffusion time step $t\\sim\\mathcal{U}([1,...,T])$ , and a text ", "page_idx": 1}, {"type": "image", "img_path": "uikhNa4wam/tmp/f444be243510f43297714f254e31b99aeba31791c0d7eaa07e38ecb3c51995d1.jpg", "img_caption": [], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "Figure 2: Illustration of diagonal denoising with $f=4$ . The frames surrounded by solid lines are model inputs while frames surrounded by dotted line are their denoised version. After denoising, the fully denoised instance at the top-right corner is dequeued while random noise is enqueued. ", "page_idx": 2}, {"type": "text", "text": "condition $^c$ , the model is trained to minimize the following loss: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\boldsymbol{v},\\epsilon,t}\\left[||\\boldsymbol{\\epsilon}_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t};c,t)-\\boldsymbol{\\epsilon}||\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the perturbed latent, ${\\bf z}_{t}=s_{t}{\\bf z}_{0}+\\sigma_{t}{\\bf\\epsilon}$ , is obtained using predefined constants $\\{s_{t}\\}_{t=0}^{T}$ and $\\{\\sigma_{t}\\}_{t=0}^{T}$ n, gw iat thi tmhee  sctoenps tsrcahinetdsu $s_{0}=1$ , $\\sigma_{0}=0$ and $\\sigma_{T}/s_{T}\\gg1$ . , initialized by a diffusion scheduler, $0=\\tau_{0}<\\tau_{1}<...<\\tau_{S}=T,$ the model generates a video by iteratively denoising $[z_{\\tau_{S}}^{1};...;z_{\\tau_{S}}^{f}]\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{\\dot{I}})$ over $S$ steps using a sampler $\\Phi(\\cdot)$ such as the DDIM sampler. Each denoising step is expressed as ", "page_idx": 2}, {"type": "equation", "text": "$$\n[z_{\\tau_{t-1}}^{1};...;z_{\\tau_{t-1}}^{f}]=\\Phi([z_{\\tau_{t}}^{1};...;z_{\\tau_{t}}^{f}],[\\tau_{t};...;\\tau_{t}],c;\\epsilon_{\\theta}),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $z_{\\tau_{t}}^{i}$ denotes the latent of the $i^{\\mathrm{th}}$ frame at time step $\\tau_{t}$ . ", "page_idx": 2}, {"type": "text", "text": "3 FIFO-Diffusion ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "This section discusses how FIFO-Diffusion generates long videos consisting of $N$ frames using a pretrained model only for $f$ frames $(f\\ll N)$ . The proposed approach iteratively employs diagonal denoising (Section 3.1) over a predefined number of frames with different levels of noise. Our method also incorporates latent partitioning (Section 3.2) and lookahead denoising (Section 3.3) to improve the output quality of FIFO-Diffusion based on diagonal denoising. ", "page_idx": 2}, {"type": "text", "text": "3.1 Diagonal denoising ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Diagonal denoising processes a series of consecutive frames with increasing noise levels as depicted in Figure 2. To be specific, for a time step schedule $0=\\tau_{0}<\\tau_{1}<...<\\tau_{f}=T$ , each denoising step is defined as ", "page_idx": 2}, {"type": "equation", "text": "$$\n[z_{\\tau_{0}}^{1};...;z_{\\tau_{f-1}}^{f}]=\\Phi([z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}],[\\tau_{1};...;\\tau_{f}],c;\\epsilon_{\\theta}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Note that the latents along the diagonal, $[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ , are stored in a queue, $Q$ , and diagonal denoising jointly considers the latents with different noise levels of $\\left[\\tau_{1};...;\\tau_{f}\\right]$ , in contrast to the standard method specified in Equation (2). Algorithm 1 in Appendix $\\mathbf{C}$ illustrates how diagonal denoising in FIFODiffusion works. After each denoising step with $[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ , the foremost frame is dequeued as it arrives at the noise level $\\tau_{0}=0$ , and the new latent at noise level $\\tau_{f}$ is enqueued. As a result, the model generates frames in a first-in-first-out manner. ", "page_idx": 2}, {"type": "text", "text": "Additionally, the initial diagonal latents $[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ to initiate the diagonal denoising can be generated from $f$ random noises at time step $\\tau_{f}$ , similar to the the process described above. Notably, our approach does not require pregenerated videos or additional training for the initial latent construction. The detailed algorithm is presented in Algorithm 2 in Appendix $\\mathbf{C}$ . ", "page_idx": 2}, {"type": "image", "img_path": "uikhNa4wam/tmp/d884d9b3ed1a31ceac9f61241818b872a15ae819ed41788dee64045417fe7110.jpg", "img_caption": ["Figure 3: Comparison between the chunked autoregressive methods and FIFO-Diffusion proposed for long video generation. The random noises (black) are iteratively denoised to image latents (white) by the models. The red boxes indicate the denoising network in the pretrained base model while the green boxes denote the prediction network obtained by additional training. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "FIFO-Diffusion takes $f$ frames as input, regardless of the target video length, and generates an arbitrary number of frames by producing one frame per iteration using a sliding window approach. Note that generating $N\\left(\\gg f\\right)$ frames for a video requires $O(f)$ memory in each step (see Table 2), which is independent of $N$ . ", "page_idx": 3}, {"type": "text", "text": "Diagonal denoising allows us to generate consistent videos by sequentially propagating context to later frames. Figure 3 illustrates the conceptual difference between chunked autoregressive methods [9, 7, 29, 12, 4, 1] and FIFO-Diffusion. The former often struggles to maintain long-term context across chunks since their conditioning\u2014only the last generated frame\u2014lacks contextual information propagated from previous frames. In contrast, diagonal denoising progresses through the frame sequence with a stride of 1, allowing each frame to reference a sufficient number of preceding frames during generation. This approach enables the model to naturally extend the local consistency of a few frames to longer sequences. Additionally, FIFO-Diffusion requires no subnetworks or extra training, depending solely on a base model. This distinguishes it from existing autoregressive methods, which often require an additional prediction model or fine-tuning for masked frame outpainting. ", "page_idx": 3}, {"type": "text", "text": "3.2 Latent partitioning ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Although diagonal denoising enables infinitely long video generation, it introduces a traininginference gap, as the model is trained to denoise all frames at uniform noise levels. To address this, we aim to reduce noise level differences in the input latents by extending the queue length $n$ times (from $f$ to $n f$ with $n>1$ ), partitioning it into $n$ blocks, and processing each block independently. Note that the extended queue length increases the number of inference steps. ", "page_idx": 3}, {"type": "text", "text": "Algorithm 3 in Appendix C provides the procedure of FIFO-Diffusion with latent partitioning. Let a queue $Q$ has diagonal latents $[z_{\\tau_{1}}^{1};...;z_{\\tau_{n f}}^{n^{\\star}\\!}]$ . We partition $Q$ into $n$ blocks, $[Q_{0};...;Q_{n-1}]$ , of equal size $f$ , then each block $Q_{k}$ contains the latents at time steps $\\pmb{\\tau}_{k}\\,=\\,[\\tau_{k f+1};...;\\tau_{(k+1)f}]$ . Next, we apply diagonal denoising to each block in a divide-and-conquer manner (See Figure 4 (a)). At $k=0,...,n-1$ , each denoising step updates the queue as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\nQ_{k}\\leftarrow\\Phi(Q_{k},\\tau_{k},c;\\epsilon_{\\theta}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Latent partitioning offers three key advantages for diagonal denoising. First, it significantly reduces the maximum noise level difference between the latents from $|\\sigma_{\\tau_{n f}}\\!-\\!\\sigma_{\\tau_{1}}|$ to $\\mathrm{max}_{k}\\left|\\sigma_{\\tau_{(k+1)f}}-\\sigma_{\\tau_{k f+1}}\\right|$ The effectiveness of latent partitioning is supported theoretically and empirically by Theorem 3.3 and Table 3, respectively. Second, latent partitioning improves throughput of inference by processing partitioned blocks in parallel on multiple GPUs (see Table 2). Last, it allows the diffusion process to leverage a large number of inference steps, $n f$ $(n\\geq2)$ ), reducing discretization error during inference. We now show in Theorem 3.3 that the gap incurred by diagonal denoising is bounded by the maximum noise level difference, which implies that the error can be reduced by narrowing the noise level differences of model inputs. ", "page_idx": 3}, {"type": "text", "text": "Definition 3.1. We define $\\mathbf{z}_{t}^{\\mathrm{vdm}}:=[z_{t}^{1};\\ldots;z_{t}^{f}]$ , where $\\boldsymbol{z}_{t}^{i}$ is the latent of the $i^{\\mathrm{th}}$ frame at time step $t$ (noise level of $\\sigma_{t}=c t$ for a constant $c$ ). $\\mathbf{z}_{t}^{\\mathrm{vdm}}$ satisfies the following ODE from [11]: ", "page_idx": 3}, {"type": "equation", "text": "$$\nd\\mathbf{z}_{t}^{\\mathrm{vdm}}=c\\cdot\\epsilon(\\mathbf{z}_{t}^{\\mathrm{vdm}},t\\cdot\\mathbf{1})d t,\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "for $\\mathbf{1}=[1;\\ldots;1]$ and $\\epsilon(\\cdot)$ is the scaled score function $-\\sigma\\nabla_{\\mathbf{z}}\\log p(\\cdot)$ . ", "page_idx": 3}, {"type": "image", "img_path": "uikhNa4wam/tmp/ed733040b0d02fea7ef668e492072ae1f66b0c62a94fc953a1aced0ad467e6fa.jpg", "img_caption": ["(b) Lookahead denoising "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 4: Illustration of latent partitioning and lookahead denoising where $f=4$ and $n=2$ . (a) Latent partitioning divides the diffusion process into $n$ parts to reduce the maximum noise level difference. (b) Lookahead denoising on (a) enables all frames to be denoised with an adequate number of former frames at the expense of two times more computation than (a). ", "page_idx": 4}, {"type": "text", "text": "Lemma 3.2. If $\\epsilon(\\cdot)$ is bounded, then ", "page_idx": 4}, {"type": "equation", "text": "$$\n||z_{t}^{i}-z_{s}^{i}||=O(|t-s|)\\,\\,f o r\\,\\,\\forall i.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Proof. Refer to Appendix A.1. ", "page_idx": 4}, {"type": "text", "text": "Theorem 3.3. Assume the system satisfies the following two hypotheses: ", "page_idx": 4}, {"type": "text", "text": "Then, for diagonal latents $\\mathbf{z}^{d i a g}=[z_{\\tau_{1}}^{1};\\ldots;z_{\\tau_{f}}^{f}]$ and corresponding time steps $\\tau^{d i a g}=[\\tau_{1};\\dots;\\tau_{f}]$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n||\\epsilon_{\\theta}(\\mathbf{z}^{d i a g},\\tau^{d i a g})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{v d m},\\tau_{i}\\cdot\\mathbf{1})^{i}||=||\\epsilon_{\\theta}(\\mathbf{z}_{\\tau_{i}}^{v d m},\\tau_{i}\\cdot\\mathbf{1})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{v d m},\\tau_{i}\\cdot\\mathbf{1})^{i}||+O(|\\sigma_{\\tau_{f}}-\\sigma_{\\tau_{1}}|),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where the $\\epsilon_{\\theta}(\\cdot)^{i}$ and $\\epsilon(\\cdot)^{i}$ are $i^{t h}$ element of $\\epsilon_{\\theta}(\\cdot)$ and $\\epsilon(\\cdot)$ , and $\\tau_{1}<...<\\tau_{f}$ . In other words, the error introduced by diagonal denoising is bounded by the noise level difference. ", "page_idx": 4}, {"type": "text", "text": "Proof. The left-hand side of Equation (6) is bounded as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{||\\epsilon_{\\theta}(\\mathbf{z}^{\\mathrm{diag}},\\tau^{\\mathrm{diag}})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}||}\\\\ &{\\qquad\\qquad\\qquad\\leq||\\epsilon_{\\theta}(\\mathbf{z}^{\\mathrm{diag}},\\tau^{\\mathrm{diag}})^{i}-\\epsilon_{\\theta}(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}||+||\\epsilon_{\\theta}(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}||,}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "by triangle inequality. Then, the first term of the right-hand side satisfies the following inequality: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{||\\epsilon_{\\theta}({\\bf z}^{\\mathrm{diag}},\\tau^{\\mathrm{diag}})^{i}-\\epsilon_{\\theta}({\\bf z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot{\\bf1})^{i}||\\leq K||({\\bf z}^{\\mathrm{diag}},\\tau^{\\mathrm{diag}})-({\\bf z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot{\\bf1})||}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\leq K\\displaystyle\\sum_{j=1}^{f}(||z_{\\tau_{j}}^{j}-z_{\\tau_{i}}^{j}||+|\\tau_{j}-\\tau_{i}|)=O(|\\sigma_{\\tau_{f}}-\\sigma_{\\tau_{1}}|),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "which is from the Lipshitz continuity and Lemma 3.2. Furthermore, we provide justification for (Hypothesis 2) in Appendix A.2. ", "page_idx": 4}, {"type": "text", "text": "3.3 Lookahead denoising ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Although our diagonal denoising introduces training-inference gap, it is advantageous in another respect because noisier frames benefti from observing cleaner ones, leading to more accurate denoising. As empirical evidence, Figure 5 shows the relative MSE losses in noise prediction of diagonal denoising with respect to the original denoising strategy. The formal definition of the relative MSE is given by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\frac{||\\boldsymbol{\\epsilon}_{\\boldsymbol{\\theta}}(\\mathbf{z}^{\\mathrm{diag}},\\tau^{\\mathrm{diag}})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}||_{2}}{||\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}-\\epsilon(\\mathbf{z}_{\\tau_{i}}^{\\mathrm{vdm}},\\tau_{i}\\cdot\\mathbf{1})^{i}||_{2}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As depicted in Figure 4 (b), we estimate noise only for the benefited later half of the frames. In other words, we perform diagonal denoising with a stride of $\\begin{array}{r}{\\bar{f}^{\\prime}=\\left\\lfloor\\frac{f}{2}\\right\\rfloor}\\end{array}$ , updating only the last $f^{\\prime}$ frames to ensure that each frame is denoised with reference to a sufficient number\u2014 at least $f^{\\prime}$ \u2014of clearer frames. Precisely, for $k=0,...,2n-1$ , each denoising step updates the queue as ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\boldsymbol{Q}_{k}^{f^{\\prime}+1:f}\\gets\\Phi(\\boldsymbol{Q}_{k},\\tau_{k},\\boldsymbol{c};\\epsilon_{\\theta})^{f^{\\prime}+1:f}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Algorithm 4 in Appendix C outlines the detailed procedure of FIFO-Diffusion with lookahead denoising. We illustrate the effectiveness of lookahead denoising with the red line in Figure 5. Except for a few early time steps, lookahead denoising enhances the baseline models noise prediction performance, nearly eliminating the ", "page_idx": 5}, {"type": "image", "img_path": "uikhNa4wam/tmp/e05934fce55022ca5072129d6da5a4626df3929211601c7c066c39ac0c51c6f9.jpg", "img_caption": ["Figure 5: The relative MSE losses of the noise prediction of $z_{\\tau_{i}}^{i}$ (see Equation (7)) when $n=4$ . \u2018VDM\u2019 indicates the original denoising strategy as a reference line. \u2018LP\u2019 and \u2018LD\u2019 denote latent partitioning and lookahead denoising, respectively. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "training-inference gap described in Section 3.2. Note that, this approach requires twice the computation of the original diagonal denoising since we only update the half of the queue each step. However, the concerns about the additional computational overhead are easily addressed via parallelization in the same manner as latent partitioning (see Table 2). ", "page_idx": 5}, {"type": "text", "text": "4 Experiment ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "This section presents the examples generated by existing long video generation methods including FIFO-Diffusion, and evaluates their performance qualitatively and quantitatively. We also perform the ablation study to verify the benefit of latent partitioning and lookahead denoising introduced in FIFO-Diffusion. ", "page_idx": 5}, {"type": "text", "text": "4.1 Implementation details ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We implement FIFO-Diffusion based on existing open-source text-to-video diffusion models trained on short video clips, including three U-Net-based models, VideoCrafter1 [2], VideoCrafter2 [3], and zeroscope2, as well as a DiT-based model, Open-Sora $\\mathrm{Plan}^{3}$ . We employ the DDIM sampling [24] with $\\eta\\in\\{0.5,1\\}$ . Appendix B provides more details about our implementations. ", "page_idx": 5}, {"type": "text", "text": "For quantitative evaluation, we measure $\\mathrm{FVD_{128}}$ [27] and IS [21] scores using Latte [13] as a base model, which is a DiT-based video model trained on UCF-101 [26]. We generate 2,048 videos with 128 frames each to calculate $\\mathrm{FVD}_{128}$ , and randomly sample a 16-frame clip from each video to measure IS score, following evaluation guidelines in [23]. To calculate computational cost, we adopt VideoCrafter2 as the baseline model, using a DDPM scheduler with 64 inference steps on A6000 GPUs. ", "page_idx": 5}, {"type": "text", "text": "4.2 Qualitative results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We first evaluate the performance of the proposed approach qualitatively. Figure 1 illustrates examples of long videos (longer than 10K frames) generated by FIFO-Diffusion based on VideoCrafter2. It demonstrates the ability of FIFO-Diffusion to generate significantly longer videos than the target length of pretrained baseline models\u201416 frames in this case. The individual frames exhibit outstanding visual quality with no perceptual quality degradation even in the later part of the videos while preserving semantic information across all frames. Figure 6 (a) and (b) present the generated videos with natural motion of scenes and cameras; the consistency of motion is effectively maintained by referencing earlier frames through the generation process. ", "page_idx": 5}, {"type": "text", "text": "Furthermore, Figure 6 (c) illustrates that FIFO-Diffusion can generate videos with extensive motion driven by a sequence of changing prompts. The capability to generate multiple motions and seamless transitions between scenes highlight the practicality of our method. Please refer to Appendices D and E for more examples and our project page1 for video demos, in comparisons with the videos from other baselines. ", "page_idx": 5}, {"type": "image", "img_path": "uikhNa4wam/tmp/516509940db56f940fc0a733003ce434f4c4e4dc19bcd3006284878b7ae6bc24.jpg", "img_caption": ["(c) \"A tiger walking $\\rightarrow$ standing $\\rightarrow$ resting on the grassland, photorealistic, 4k, high definition\" "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Figure 6: Illustrations of long videos generated by FIFO-Diffusion based on (a) Open-Sora Plan and (b) VideoCrafter2, as well as (c) multiple prompts based on VideoCrafter2. The number on the top-left corner of each frame indicates the frame index. ", "page_idx": 6}, {"type": "image", "img_path": "uikhNa4wam/tmp/8b35303d6459c0ac2af66acaa9fa8688d7d5108bd6a562f775aaca8751ad45ba.jpg", "img_caption": ["\"An astronaut floating in space, high quality, 4K resolution.\" "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Figure 7: Sample videos generated by (first) FIFO-DIffusion on VideoCrafter2, (second) FreeNoise on VideoCrafter2, (third) Gen-L-Video on VideoCrafter2, and (last) LaVie $^+$ SEINE. The number on the top-left corner of each frame indicates the frame index. ", "page_idx": 6}, {"type": "text", "text": "Table 1: Comparisons of $\\mathrm{FVD_{128}}$ and IS scores on UCF-101. FIFO-Diffusion with latent partitioning and lookahead denoising utilizes Latte [13] as its baseline, where the number of partitions is four $[n=4,$ . The FVD and IS scores of the other algorithms are obtained from their respective papers, and PVDM [35] denotes PVDM-L (400-400s). ", "page_idx": 7}, {"type": "table", "img_path": "uikhNa4wam/tmp/bb4294a7008b455133e4d514183e77e12276c6efe58887c83ac1fce30e037308.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "uikhNa4wam/tmp/5608ab340a8f3fa2f0de1055288ab8c0c5374739fdbcf0198f0265ef14d7f329.jpg", "table_caption": ["Table 2: Memory usages and inference times of long video generation methods. FIFO-Diffusion utilizes latent partitioning with $n=4$ and lookahead denoising. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 7 compares the results from FIFODiffusion with two training-free techniques, FreeNoise [17] and Gen-L-Video [30] based on VideoCrafter2, as well as a training-based chunked autoregressive method, LaVie $[32]+$ SEINE [4]. Note that the chunked autoregressive method requires two models: LaVie for T2V and SEINE for I2V. We observe that our method significantly outperforms the others in terms of motion smoothness, frame quality, and scene diversity. ", "page_idx": 7}, {"type": "text", "text": "Among the training-free methods, Gen-L-Video often produces videos with blurred background while FreeNoise struggles to generate dynamic scenes.4 The videos from LaVie $^+$ SEINE grad", "page_idx": 7}, {"type": "image", "img_path": "uikhNa4wam/tmp/22e3741fb251e7d0a71a2a9c7635e88f5b66bb3c8e842fdf6eca92446bd45b3d.jpg", "img_caption": ["Figure 8: The results of user study between FIFODiffusion and FreeNoise for five criteria. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "ually degrade and diverge from text prompts due to error accumulation in their autoregressive generation processes. Additionally, they often exhibit discontinuities between adjacent chunks, as only the last frame of each chunk is employed to transfer contextual information to the next. Figures 18 and 19 in Appendix F provide further examples comparing these methods. ", "page_idx": 7}, {"type": "text", "text": "We also conduct a user study to evaluate the long video generation performance of FIFO-Diffusion compared to an existing approach, FreeNoise. As shown in Figure 8, users expressed a strong preference for FIFO-Diffusion across all criteria, particularly those related to motion. Given that motion is one of the most defining characteristics of videos as opposed to images, the strong performance of FIFO-Diffusion in these criteria is promising and highlights its potential to generate more natural, dynamic videos. Details about the user study are provided in Appendix B.1. ", "page_idx": 7}, {"type": "text", "text": "4.3 Quantitative results ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We compare FIFO-Diffusion with the baselines trained for long video generation [23, 14, 35] in terms of the $\\mathrm{FVD_{128}}$ and IS scores. As shown in Table 1, our approach outperforms all the compared methods including PVDM-L (400-400s) [35], which employs a chunked autoregressive generation strategy. Note that PVDM-L (400-400s) iteratively generates 16 frames conditioned on the previous outputs over 400 diffusion steps while our approach only requires 64 inference steps (with lookahead denoising) without need for additional training. ", "page_idx": 7}, {"type": "image", "img_path": "uikhNa4wam/tmp/498d2022e9c9f1b8e705c9063cce6e7c566ba9d9bb372cc7146d6edf6e9fa9da.jpg", "img_caption": ["Figure 9: Ablation study. DD, LP, and LD signifies diagonal denoising, latent partitioning, and lookahead denoising, respectively. The number on the top-left corner of each frame indicates the frame index. ", "\"A scenic cruise ship journey at sunset, ultra HD.\" "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Table 3: Relative MSE losses of ablations. \u2018LP\u2019 and \u2018LD\u2019 denote latent partitioning and lookahead denosing, respectively. ", "page_idx": 8}, {"type": "table", "img_path": "uikhNa4wam/tmp/1d7acc34bc1826131a32ed5fcf06c651991703711ac255d1f4cefabd4f4a7e28.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.4 Computational cost ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To evaluate computational efficiency, we assess memory usage and inference time per frame for training-free, long video generation methods. As shown in Table 2, FIFO-Diffusion generates videos of arbitrary lengths with a constant memory allocation, while FreeNoise requires memory proportional to the target video length. Although Gen-L-Video maintains nearly constant memory usage, it exhibits the slowest inference speed due to redundant computations. Notably, FIFO-Diffusion leverages parallel computation; while incorporating lookahead denoising increases computational demand, utilizing multiple GPUs for parallel processing significantly reduces sampling time. ", "page_idx": 8}, {"type": "text", "text": "4.5 Ablation study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We conduct ablation study to analyze the effect of latent partitioning and lookahead denoising on the performance of FIFO-Diffusion. Figure 9 shows that latent partitioning significantly improves both visual quality and temporal consistency of the generated videos. Moreover, lookahead denoising further refines the quality of generated videos by facilitating temporal coherency and reducing filckering effects. The videos on our project page5 clearly demonstrate the benefti of FIFO-Diffusion. Additionally, Table 3 compares the relative MSE loss (see Equation (7)) averaged over all time steps across different ablation settings. The results show that latent partitioning effectively reduces the training-inference gap caused by diagonal denoising as the number of partitions increases. Furthermore, lookahead denoising enhances the model\u2019s noise prediction accuracy, achieving low relative MSE losses (below 1.0) when used in conjunction with latent partitioning. ", "page_idx": 8}, {"type": "text", "text": "5 Related work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "This section discusses existing diffusion-based generative models for videos including long video generation techniques. ", "page_idx": 8}, {"type": "text", "text": "5.1 Video diffusion models ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Diffusion models, originally developed for high-quality image synthesis, have become a prominent approach in video generation [2, 9, 22, 37, 31]. VDM [9] modifies the structure of U-Net [19] and proposes a 3D U-Net architecture to incorporate temporal information for denoising. On the other hand, Make-A-Video [22] employs a 1D temporal convolution layer following a 2D spatial convolutional layer to approximate 3D convolution. This design enables the model to capture visual-textual relationships by training spatial layers with image-text pairs before incorporating temporal context through 1D temporal layers. Recently, [16] introduce a transformer architecture, known as DiT, for diffusion models. Additionally, several open-sourced text-to-video models have emerged [31, 2, 32, 3], trained on large-scale text-image and text-video datasets. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "5.2 Long video generation ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Long video generation approaches typically involve training models to predict future frames sequentially [29, 6, 1, 4]. or generate a set of frames in a hierarchical manner [7, 34]. For instance, Video LDM [1] and MCVD [29] employ autoregressive techniques to sequentially predict frames given several preceding ones, while FDM [6] and SEINE [4] generalize masked learning strategies for both prediction and interpolation. Autoregressive methods are capable of producing indefinitely long videos in theory, but they often suffer from quality degradation due to error accumulation and limited temporal consistency across frames. Alternatively, NUWA-XL [34] adopts a hierarchical approach, where a global diffusion model generates sparse key frames with local diffusion models filling in frames using the key frames as references. However, this hierarchical setup requires batch processing, making it unsuitable for generating infinitely long videos. ", "page_idx": 9}, {"type": "text", "text": "There are a few training-free long video generation techniques. Gen-L-Video [30] treats a video as overlapped short clips and introduces temporal co-denoising, which averages multiple predictions for one frame. FreeNoise [17] employs window-based attention fusion to sidestep the limited attention scope issue and proposes local noise shuffle units for the initialization of long video. FreeNoise requires memory proportional to the video length for the computation of cross, limiting its scalability for generating infinitely long videos. ", "page_idx": 9}, {"type": "text", "text": "5.3 Diffusion models with latents of different noise levels ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Recent studies have adopted diffusion models for sequence generation by leveraging a sliding window approach with temporally varying noise levels [36, 20]. These methods train diffusion models from scratch to accommodate latents with different noise levels, addressing tasks such as motion generation [36] and video prediction [20]. However, training diffusion models from scratch introduces significant computational costs, especially for text-to-video generation tasks. In contrast, our approach is a training-free inference technique based on the standard diffusion models, trained on latents with uniform noise, for sequence generation within the sliding window framework. While [20] is implemented with a nested loop to deal with two different axes corresponding to video frame index and diffusion time step, FIFO-Diffusion combines these two dimensions using a 1D queue, improving efficiency with a single loop. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We introduced FIFO-Diffusion, a novel inference algorithm that enables the generation of infinitely long videos from text without tuning video diffusion models pretrained on short clips. Our approach achieves this by introducing diagonal denoising, which processes latents with increasing noise levels using a queue in a first-in-first-out fashion. While diagonal denoising presents a trade-off, we addressed its limitations with latent partitioning and leveraged its strengths with lookahead denoising. Together, these techniques allow FIFO-Diffusion to generate high-quality, long videos that maintain strong scene consistency and expressive dynamic motion. Although latent partitioning reduces the training-inference gap of diagonal denoising, the gap persists due to changes in the model\u2019s input distribution. However, we believe that this gap could be addressed by integrating the diagonal denoising paradigm into the training phase, and the benefits of FIFO-Diffusion remains for training as well. We leave this integration as future work; aligning the training and inference environments can significantly enhance FIFO-Diffusion\u2019s performance. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was partly supported by LG AI Research, and the Institute of Information & communications Technology Planning & Evaluation (IITP) grant funded by the Korea government (MSIT) [RS-2022-II220959 (No.2022-0-00959), (Part 2) Few-Shot Learning of Causal Inference in Vision and Language for Decision Making); NO.RS-2021- II211343, Artificial Intelligence Graduate School Program (Seoul National University)]. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Andreas Blattmann, Robin Rombach, Huan Ling, Tim Dockhorn, Seung Wook Kim, Sanja Fidler, and Karsten Kreis. Align your latents: High-resolution video synthesis with latent diffusion models. In CVPR, 2023.   \n[2] Haoxin Chen, Menghan Xia, Yingqing He, Yong Zhang, Xiaodong Cun, Shaoshu Yang, Jinbo Xing, Yaofang Liu, Qifeng Chen, Xintao Wang, Chao Weng, and Ying Shan. VideoCrafter1: Open diffusion models for high-quality video generation. arXiv preprint arXiv:2310.19512, 2023.   \n[3] Haoxin Chen, Yong Zhang, Xiaodong Cun, Menghan Xia, Xintao Wang, Chao Weng, and Ying Shan. VideoCrafter2: Overcoming data limitations for high-quality video diffusion models. arXiv preprint arXiv:2401.09047, 2024.   \n[4] Xinyuan Chen, Yaohui Wang, Lingjun Zhang, Shaobin Zhuang, Xin Ma, Jiashuo Yu, Yali Wang, Dahua Lin, Yu Qiao, and Ziwei Liu. Seine: Short-to-long video diffusion model for generative transition and prediction. arXiv preprint arXiv:2310.20700, 2023.   \n[5] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat GANs on image synthesis. In NeurIPS, 2021.   \n[6] William Harvey, Saeid Naderiparizi, Vaden Masrani, Christian Weilbach, and Frank Wood. Flexible diffusion modeling of long videos. In NeurIPS, 2022.   \n[7] Yingqing He, Tianyu Yang, Yong Zhang, Ying Shan, and Qifeng Chen. Latent video diffusion models for high-fidelity long video generation. arXiv preprint arXiv:2211.13221, 2022.   \n[8] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In NeurIPS, 2020.   \n[9] Jonathan Ho, Tim Salimans, Alexey Gritsenko, William Chan, Mohammad Norouzi, and David J. Fleet. Video diffusion models. In NeurIPS, 2022.   \n[10] Wenyi Hong, Ming Ding, Wendi Zheng, Xinghan Liu, and Jie Tang. CogVideo: Large-scale pretraining for text-to-video generation via transformers. In ICLR, 2023.   \n[11] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. In NeurIPS, 2022.   \n[12] Zhengxiong Luo, Dayou Chen, Yingya Zhang, Yan Huang, Liang Wang, Yujun Shen, Deli Zhao, Jingren Zhou, and Tieniu Tan. Videofusion: Decomposed diffusion models for high-quality video generation. In CVPR, 2023.   \n[13] Xin Ma, Yaohui Wang, Gengyun Jia, Xinyuan Chen, Ziwei Liu, Yuan-Fang Li, Cunjian Chen, and Yu Qiao. Latte: Latent diffusion transformer for video generation. arXiv preprint arXiv:2401.03048, 2024.   \n[14] Kangfu Mei and Vishal M. Patel. Vidm: Video implicit diffusion models. In AAAI, 2023.   \n[15] OpenAI. GPT-4 technical report. arXiv preprint arXiv:2303.08774, 2023.   \n[16] William Peebles and Saining Xie. Scalable diffusion models with transformers. In ICCV, 2023.   \n[17] Haonan Qiu, Menghan Xia, Yong Zhang, Yingqing He, Xintao Wang, Ying Shan, and Ziwei Liu. FreeNoise: Tuning-free longer video diffusion via noise rescheduling. arXiv preprint arXiv:2310.15169, 2023.   \n[18] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. High-resolution image synthesis with latent diffusion models. In CVPR, 2022.   \n[19] Olaf Ronneberger, Philipp Fischer, and Thomas Brox. U-Net: Convolutional networks for biomedical image segmentation. In MICCAI, 2015.   \n[20] David Ruhe, Jonathan Heek, Tim Salimans, and Emiel Hoogeboom. Rolling diffusion models. In ICML, 2024.   \n[21] Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. Improved techniques for training gans. In NeurIPS, 2016.   \n[22] Uriel Singer, Adam Polyak, Thomas Hayes, Xi Yin, Jie An, Songyang Zhang, Qiyuan Hu, Harry Yang, Oron Ashual, Oran Gafni, Devi Parikh, Sonal Gupta, and Yaniv Taigman. Make-A-Video: Text-to-video generation without text-video data. In ICLR, 2022.   \n[23] Ivan Skorokhodov, Sergey Tulyakov, and Mohamed Elhoseiny. Stylegan-v: A continuous video generator with the price, image quality and perks of stylegan2. In CVPR, 2022.   \n[24] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In ICLR, 2021.   \n[25] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In ICLR, 2021.   \n[26] Khurram Soomro, Amir Roshan Zamir, and Mubarak Shah. Ucf101: A dataset of 101 human actions classes from videos in the wild. arXiv preprint arXiv:1212.0402, 2012.   \n[27] Thomas Unterthiner, Sjoerd van Steenkiste, Karol Kurach, Raphael Marinier, Marcin Michalski, and Sylvain Gelly. Towards accurate generative models of video: A new metric & challenges. arXiv preprint arXiv:1812.0171, 2018.   \n[28] Ruben Villegas, Mohammad Babaeizadeh, Pieter-Jan Kindermans, Hernan Moraldo, Han Zhang, Mohammad Taghi Saffar, Santiago Castro, Julius Kunze, and Dumitru Erhan. Phenaki: Variable length video generation from open domain textual description. In ICLR, 2023.   \n[29] Vikram Voleti, Alexia Jolicoeur-Martineau, and Christopher Pal. MCVD: Masked conditional video diffusion for prediction, generation, and interpolation. In NeurIPS, 2022.   \n[30] Fu-Yun Wang, Wenshuo Chen, Guanglu Song, Han-Jia Ye, Yu Liu, and Hongsheng Li. GenL-Video: Multi-text to long video generation via temporal co-denoising. arXiv preprint arXiv:2305.18264, 2023.   \n[31] Jiuniu Wang, Hangjie Yuan, Dayou Chen, Yingya Zhang, Xiang Wang, and Shiwei Zhang. ModelScope text-to-video technical report. arXiv preprint arXiv:2308.06571, 2023.   \n[32] Yaohui Wang, Xinyuan Chen, Xin Ma, Shangchen Zhou, Ziqi Huang, Yi Wang, Ceyuan Yang, Yinan He, Jiashuo Yu, Peiqing Yang, Yuwei Guo, Tianxing Wu, Chenyang Si, Yuming Jiang, Cunjian Chen, Chen Change Loy, Bo Dai, Dahua Lin, Yu Qiao, and Ziwei Liu. LaVie: High-quality video generation with cascaded latent diffusion models. arXiv preprint arXiv:2309.15103, 2023.   \n[33] Jun Xu, Tao Mei, Ting Yao, and Yong Rui. MSR-VTT: A large video description dataset for bridging video and language. In CVPR, 2016.   \n[34] Shengming Yin, Chenfei Wu, Huan Yang, Jianfeng Wang, Xiaodong Wang, Minheng Ni, Zhengyuan Yang, Linjie Li, Shuguang Liu, Fan Yang, Jianlong Fu, Gong Ming, Lijuan Wang, Zicheng Liu, Houqiang Li, and Nan Duan. NUWA-XL: Diffusion over diffusion for extremely long video generation. arXiv preprint arXiv:2303.12346, 2023.   \n[35] Sihyun Yu, Kihyuk Sohn, Subin Kim, and Jinwoo Shin. Video probabilistic diffusion models in projected latent space. In CVPR, 2023.   \n[36] Zihan Zhang, Richard Liu, Kfir Aberman, and Rana Hanocka. Tedi: Temporally-entangled diffusion for long-term motion synthesis. In SIGGRAPH, 2024.   \n[37] Daquan Zhou, Weimin Wang, Hanshu Yan, Weiwei Lv, Yizhe Zhu, and Jiashi Feng. MagicVideo: Efficient video generation with latent diffusion models. arXiv preprint arXiv:2211.11018, 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A Details for Lemma 3.2 and Theorem 3.3 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Proof of Lemma 3.2 ", "page_idx": 12}, {"type": "text", "text": "Lemma 3.2. If $\\epsilon(\\cdot)$ is bounded, then ", "page_idx": 12}, {"type": "equation", "text": "$$\n||z_{t}^{i}-z_{s}^{i}||=O(|t-s|)\\;\\;\\mathrm{for}\\;\\mathrm{any}\\;\\;i.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Proof. Since $\\epsilon(\\cdot)$ is bounded, there exists some $M>0$ satisfying $||\\epsilon(\\cdot)||\\leq M$ . ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{\\|z_{t}^{i}-z_{s}^{i}\\|\\leq\\|\\mathbf{z}_{t}^{\\mathrm{vdm}}-\\mathbf{z}_{s}^{\\mathrm{vdm}}\\|}}\\\\ &{=\\|\\int_{s}^{t}c\\cdot\\epsilon(\\mathbf{z}_{u}^{\\mathrm{vdm}},u\\cdot\\mathbf{1})d u\\|}\\\\ &{\\leq|\\int_{s}^{t}c\\cdot||\\epsilon(\\mathbf{z}_{u}^{\\mathrm{vdm}},u\\cdot\\mathbf{1})||d u|}\\\\ &{\\leq c\\cdot M\\cdot|t-s|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "A.2 Justification on (Hypothesis 2) of Theorem 3.3 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "We provide justification for the hypothesis, which the diffusion model is K-Lipschitz continuous. At inference, we can consider $z\\in[\\dot{0},\\^{\\prime}B]^{f\\times c\\times h\\times w}$ and $\\sigma\\in[\\sigma_{\\operatorname*{min}},\\sigma_{\\operatorname*{max}}]$ , where $\\sigma_{\\mathrm{min}}>0$ since $z$ is pixel values and we inference for such $\\sigma$ . In appendix B.3 of [11], $\\epsilon(z,\\sigma)$ is given as the following: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\epsilon(z,\\sigma)=-\\sigma\\frac{\\nabla_{z}\\sum_{i}\\mathcal{N}(z;y_{i},\\sigma^{2}\\mathbf{I})}{\\sum_{i}\\mathcal{N}(z;y_{i},\\sigma^{2}\\mathbf{I})},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $y_{1},y_{2},\\dotsc,y_{n}$ are data points. Note that $\\mathcal{N}(z;y_{i},\\sigma^{2}\\mathbf{I})$ is twice differentiable and continuous, and $\\begin{array}{r}{\\sum_{i}\\mathcal{N}(z;y_{i},\\sigma^{2}\\mathbf{I})\\geq c}\\end{array}$ for $\\exists c>0$ . Therefore, the differential function of $\\epsilon(z,\\sigma)$ is bounded and is Lipschitz continuous. Since $\\epsilon_{\\theta}(\\cdot)$ estimates $\\epsilon(\\cdot)$ , assuming Lipschitz continuity can be justified. ", "page_idx": 12}, {"type": "text", "text": "B Implementation details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We provide the implementation details of the experiments in Table 4. We use VideoCrafter1 [2], VideoCrafter2 [3], zeroscope6, Open-Sora Plan7, LaVie [32], and SEINE [4] as pre-trained models. zeroscope, VideoCrafter, and Open-Sora Plan are under CC BY-NC 4.0, Apache License 2.0, and MIT License, respectively. Except for automated results, all prompts used in experiments are randomly generated by ChatGPT-4 [15]. We empirically choose $n=4$ for the number of partitions in latent partitioning and lookahead denoising. Also, stochasticity $\\eta$ , introduced by DDIM [24], is chosen to achieve good results from the baseline video generation models. ", "page_idx": 13}, {"type": "table", "img_path": "uikhNa4wam/tmp/754814d74ba5a26eaf04e0c4384a57a31d560ef2a4762ac82940376c0595c87e.jpg", "table_caption": ["Table 4: Implementation details regarding experiments "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "B.1 Details for user study ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We randomly generated 30 prompts from ChatGPT-4 without cherry-picking, and generated a video for each prompt with 100 frames using each method. The evaluators were asked to choose their preference (A is better, draw, or B is better) between the two videos generated by FIFO-Diffusion and FreeNoise with the same prompts, on five criteria: overall preference, plausibility of motion, magnitude of motion, fidelity to text, and aesthetic quality. A total of 70 users submitted 111 sets of ratings, where each set consists of 20 videos from 10 prompts. We used LaVie as the baseline for FreeNoise, since it was the latest model officially implemented at that time. ", "page_idx": 13}, {"type": "text", "text": "C Algorithms of FIFO-Diffusion ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "This section illustrates pseudo-code for FIFO-Diffusion with and without latent partitioning and lookahead denoising. ", "page_idx": 14}, {"type": "text", "text": "Algorithm 1 FIFO-Diffusion with diagonal denoising (Section 3.1)   \nRequire: N, f, \u03f5\u03b8(\u00b7), Dec(\u00b7), \u03a6(\u00b7) Input: $[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ , $[\\tau_{1};...;\\tau_{f}]$ , c Output: $\\pmb{v}$ $v\\leftarrow[]$ $\\tau\\gets[\\tau_{1};\\dots;\\tau_{f}]$ $Q\\leftarrow[z_{\\tau_{1}}^{1};\\ldots;z_{\\tau_{f}}^{f}]$ for $i=1$ to $N$ do $\\begin{array}{r l}&{Q\\leftarrow\\Phi(Q,\\tau,c;\\epsilon_{\\theta})}\\\\ &{z_{\\tau_{0}}^{i}\\leftarrow Q.\\mathrm{dequeue}()}\\\\ &{v.\\mathrm{append}(\\mathrm{Dec}(z_{\\tau_{0}}^{i}))}\\\\ &{z_{\\tau_{f}}^{i+f}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\\\ &{Q.\\mathrm{enqueue}(z_{\\tau_{f}}^{i+f})}\\end{array}$ # Equation (3) # Fully denoised frame # New random noise end for return $\\pmb{v}$ ", "page_idx": 14}, {"type": "text", "text": "Algorithm 2 Initial latent construction (Section 3.1) ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Require: N, f, \u03f5\u03b8(\u00b7), Dec(\u00b7), \u03a6(\u00b7) Input: $z_{\\tau_{f}}^{1:f}\\sim\\mathcal{N}(0,I),\\{\\tau_{i}\\}_{i=0}^{f},c$ Output: $[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ $\\tau\\gets[\\tau_{f};\\dots;\\tau_{f}]$ $Q\\leftarrow[z_{\\tau_{f}}^{1};\\ldots;z_{\\tau_{f}}^{f}]$ for $i=1$ to $f$ do Q \u2190\u03a6(Q, \u03c4, c; \u03f5\u03b8) Q.dequeue() zi\u03c4 \u223cN(0, I) # New random noise Q.enqueue(zi\u03c4f ) f\u2212i \u03c4 \u2190[\u03c4 f\u2212i;. .. ; \u03c4f\u2212 i;\u03c4 f\u2212i+ 1 ...; \u03c4f ] # Varying timestep end for return $Q=[z_{\\tau_{1}}^{1};...;z_{\\tau_{f}}^{f}]$ ", "page_idx": 14}, {"type": "text", "text": "Algorithm 3 FIFO-Diffusion with latent partitioning (Section 3.2) ", "page_idx": 15}, {"type": "text", "text": "Require: $N,\\,f,\\epsilon_{\\theta}(\\cdot),\\mathrm{Dec}(\\cdot),\\Phi(\\cdot),n$ # $n\\geq2$ if latent partitioning   \nInput: $[z_{\\tau_{1}}^{1};...;z_{\\tau_{n f}}^{n f}],[\\tau_{1};...;\\tau_{n f}],c$ Output: $\\pmb{v}$ $v\\leftarrow[\\,]$ \u03c4 \u2190[\u03c41;...; \u03c4nf] $Q\\gets[z_{\\tau_{1}}^{1};\\ldots;z_{\\tau_{n f}}^{n f}]$ for $i=1$ to $N$ do for $k=0$ to $n-1$ do # Parallelizable $\\begin{array}{l}{{\\tau_{k}\\leftarrow\\tau^{k f+1:(k+1)f}}}\\\\ {{Q_{k}\\leftarrow Q^{k f+1:(k+1)f}}}\\end{array}$ $Q_{k}\\gets\\Phi(Q_{k},\\tau_{k},c;\\epsilon_{\\theta})$ # Equation (4) end for Q \u2190[Q0;...; Qn\u22121] zi\u03c40 \u2190Q.dequeue() v.append(Dec(zi\u03c40)) zi+nf\u223cN(0, I) Q.fenqueue(zi\u03c4n+fnf) return v ", "page_idx": 15}, {"type": "text", "text": "Algorithm 4 FIFO-Diffusion with lookahead denoising (Section 3.3) ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "# $n\\geq2$ if latent partitioning ", "page_idx": 15}, {"type": "text", "text": "Require: $N,\\epsilon_{\\theta}(\\cdot),\\mathrm{Dec}(\\cdot),\\Phi(\\cdot),n$ Input: $[z_{\\tau_{1}}^{1};...;z_{\\tau_{n f}}^{n f}]$ , $[\\tau_{1};...;\\tau_{n f}]$ , c Output: $\\pmb{v}$ $v\\leftarrow[\\,]$ \u03c4 \u2190[\u03c4 1;. .. ; \u03c41 ; \u03c41;...; \u03c4nf] f \u2032 Q \u2190[z1 znf \u03c4nf for $i=1$ to $N$ do $z_{\\tau_{1}}^{i}\\leftarrow Q^{f^{\\prime}+1}$ $\\begin{array}{r l}&{\\mathbf{Ior}\\ k=0\\tan\\beta_{2}\\!\\!\\!\\phantom{\\frac{1}{\\beta}}\\mathbf{I}\\mathbf{a}\\mathbf{J}\\!\\!\\!\\phantom{\\frac{1}{\\beta}}}\\\\ &{\\begin{array}{r l}{\\gamma_{k}+\\tau^{k}f^{-1}\\!\\!\\!\\!\\!\\!+\\!\\!\\mathbf{I}(k\\mathbf{Z})^{2}\\!\\!\\!\\!\\phantom{\\frac{1}{\\beta}}}&{}\\\\ {Q_{k}+\\sigma^{\\xi}f^{\\eta+1}\\!\\!\\!\\!\\!+\\!\\!(k\\!\\!\\!+\\!\\!\\!2)f^{\\eta}\\phantom{\\frac{1}{\\beta}}}&{}\\end{array}}\\\\ &{\\begin{array}{r l}{\\rho R_{k}^{-1}end for return v ", "page_idx": 15}, {"type": "text", "text": "# dummy latents are required # Parallelizable # Equation (8) ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "D Qualitative results of FIFO-Diffusion ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In Figures 10 to 15, we provide more qualitative results with 4 baselines, VideoCrafter2 [3], VideoCrafter1 [2], zeroscope8, and Open-Sora $\\mathrm{Plan^{9}}$ . ", "page_idx": 16}, {"type": "text", "text": "D.1 VideoCrafter2 ", "text_level": 1, "page_idx": 16}, {"type": "image", "img_path": "uikhNa4wam/tmp/675e6171fbb1e3a4c45f7f448b85d0e1787717f4fc269acbe97ce9437651a1c8.jpg", "img_caption": ["Figure 10: Videos generated by FIFO-Diffusion with VideoCrafter2. The number on the top left of each frame indicates the frame index. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "uikhNa4wam/tmp/b3cf7bdece479d30e9792d486081d648ef915f79c666a3c240b42405ce6096fc.jpg", "img_caption": ["Figure 11: Videos generated by FIFO-Diffusion with VideoCrafter2. The number on the top left of each frame indicates the frame index. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "uikhNa4wam/tmp/a14a98da824094201aec7b0f8adf7736519874835e588fff8b263f2d21eb1453.jpg", "img_caption": [""], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "Figure 12: Videos generated by FIFO-Diffusion with VideoCrafter2. The number on the top left of each frame indicates the frame index. ", "page_idx": 18}, {"type": "image", "img_path": "uikhNa4wam/tmp/17034b5c3e1bd040b7e2c9db0a8c33352eaf9c09d10d06555e9b0cc5b175ee6b.jpg", "img_caption": ["D.2 VideoCrafter1 ", "Figure 13: Videos generated by FIFO-Diffusion with VideoCrafter1. The number on the top left of each frame indicates the frame index. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "D.3 zeroscope ", "text_level": 1, "page_idx": 20}, {"type": "image", "img_path": "uikhNa4wam/tmp/1bc660e9c471411b69bbc8c47f7547778027ac4eedc17469e9f09472f0fb8863.jpg", "img_caption": [""], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "Figure 14: Videos generated by FIFO-Diffusion with zeroscope. The number on the top left of each frame indicates the frame index. ", "page_idx": 20}, {"type": "image", "img_path": "uikhNa4wam/tmp/3ef8e1bcabd241f86e49276d27a43e1fa77a94fd72edfe1859fc0e83865594f5.jpg", "img_caption": ["D.4 Open-Sora Plan ", "Figure 15: Videos generated by FIFO-Diffusion with Open-Sora Plan. The number on the top left of each frame indicates the frame index. ", ""], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "E Multi-prompts generation for FIFO-Diffusion ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "E.1 Method ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "For multi-prompts generation, we simply change prompts sequentially during the inference. To be specific, let $c_{1},\\ldots,c_{k}$ be $k$ prompts, and $0\\,=\\,n_{0}\\,<\\,n_{1}\\,<\\,.\\,.\\,<\\,n_{k}$ are increasing sequence of integers. Then, we use prompt condition $c_{i}$ for $(n_{i-1}+1)^{\\mathrm{th}}\\sim n_{i}^{\\mathrm{th}}$ iterations. ", "page_idx": 22}, {"type": "text", "text": "E.2 Qualitative results ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "In Figures 16 and 17, we provide more qualitative results based on VideoCrafter2. ", "page_idx": 22}, {"type": "image", "img_path": "uikhNa4wam/tmp/abd45d47ca36becf1429e069bf674a6b50e8c82eca82a3e66e680e8b972173d4.jpg", "img_caption": ["Figure 16: Videos generated by FIFO-Diffusion with three prompts. The number on the top left of each frame indicates the frame index. "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "uikhNa4wam/tmp/c854c6382969adcfef53c681b2f0be5161871a2af92d54bf4a028c7365485a00.jpg", "img_caption": ["(a) \"A tiger resting $\\rightarrow$ walking on the grassland, photorealistic, 4k, high definition\" "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "uikhNa4wam/tmp/f2af54a07a76362b7105ccbbc3414944ca1c67b56a2a34e2dd3b53adb2f42609.jpg", "img_caption": ["(b) \"A whale swimming on the surface of the ocean $\\rightarrow$ jumps out of water, 4K, high resolution.\" "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "uikhNa4wam/tmp/caf137b42b1d5bd70fddbab6b14ad5ffdb37553af9d75f59d80e297515824879.jpg", "img_caption": ["(c) \"Titanic sailing through the sunny calm ocean $\\rightarrow$ a stormy ocean with lightning, 4K, high resolution.\" "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "uikhNa4wam/tmp/b664fc995d056aa13839d6c8dcaefa850386404675720a8f388eea48f631a24c.jpg", "img_caption": ["(d) \"A pair of tango dancers performing $\\rightarrow$ kissing in Buenos Aires, 4K, high resolution.\" "], "img_footnote": [], "page_idx": 23}, {"type": "text", "text": "Figure 17: Videos generated by FIFO-Diffusion with two prompts. The number on the top left of each frame indicates the frame index. ", "page_idx": 23}, {"type": "text", "text": "F Qualitative comparisons with other long video generation methods ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "In Figures 18 and 19, we provide more qualitative comparisons with other longer video generation methods, FreeNoise [17], Gen-L-Video [30], and LaVie [32] $^+$ SEINE [4]. ", "page_idx": 24}, {"type": "image", "img_path": "uikhNa4wam/tmp/bd8aa44b5a8cc5d847d491cbb4a683adc7e14723f84639b3f6cebf1d81085990.jpg", "img_caption": ["Figure 18: Qualitative comparisons with other long video generation techniques, Gen-L-Video, FreeNoise, and LaVie $^+$ SEINE. The number in the top-left corner of each frame indicates the frame index. ", ""], "img_footnote": [], "page_idx": 24}, {"type": "image", "img_path": "uikhNa4wam/tmp/6acfd1639c63a2988e6db4eb0773bbadd5477575027fae54ce3a5c4da873de5c.jpg", "img_caption": ["(a) \"A pair of tango dancers performing in Buenos Aires, 4K, high resolution.\" "], "img_footnote": [], "page_idx": 25}, {"type": "image", "img_path": "uikhNa4wam/tmp/c493d50a6c33b678b8fa6a161ddb00a9175d9e077033437c989db1d3ea8e900a.jpg", "img_caption": ["(b) \"A spooky haunted house, foggy night, high definition.\" "], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "Figure 19: Qualitative comparisons with other long video generation techniques, Gen-L-Video, FreeNoise, and LaVie $^+$ SEINE. The number in the top-left corner of each frame indicates the frame index. ", "page_idx": 25}, {"type": "text", "text": "G Motion evaluation ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "We measure optical flow magnitudes (i.e. average of optical flow magnitudes) to compare the amount of motion between FIFO-Diffusion and FreeNoise, for the videos generated with randomly sampled prompts from the MSR-VTT [33] test set. Figure 20 illustrates that over $65\\%$ of videos generated by FreeNoise are located in the first bin, indicating significantly less motion compared to FIFO-Diffusion. In contrast, our method generates videos with a broader range of motion. ", "page_idx": 26}, {"type": "image", "img_path": "uikhNa4wam/tmp/e35bdd03dee8ff9ca6cf16dd2c44634140873331503ef3ad00efea8453045264.jpg", "img_caption": ["Figure 20: Comparison of optical flow magnitudes between FIFO-Diffusion and FreeNoise. "], "img_footnote": [], "page_idx": 26}, {"type": "text", "text": "H Ablation study ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "In Figures 21 and 22, we conduct an ablation study to investigate the effectiveness of each component in FIFO-Diffusion. We compare the results of FIFO-Diffusion only with diagonal denoising (DD), with the addition of latent partitioning with $\\scriptstyle{\\mathtt{n}=4}$ $\\mathrm{(DD+LP)}$ , and lookahead denoising $\\mathrm{(DD+LP+}$ LD). ", "page_idx": 27}, {"type": "image", "img_path": "uikhNa4wam/tmp/81a4347f6d9ef3943200327a70145f84aa91da68bcddcc94bb11a77b0a4e0ff0.jpg", "img_caption": ["(a) \"A panoramic view of the Milky Way, ultra HD.\" "], "img_footnote": [], "page_idx": 27}, {"type": "image", "img_path": "uikhNa4wam/tmp/37ec4f36c4eb4f77861f084448b831b0c2eccee0a3568720fb964db551a36e62.jpg", "img_caption": ["(b) \"A scenic cruise ship journey at sunset, ultra HD.\" "], "img_footnote": [], "page_idx": 27}, {"type": "image", "img_path": "uikhNa4wam/tmp/13584d7859870639a725eca43c9baaa0b6514315032028d7eeb6769ece9a32c2.jpg", "img_caption": ["(c) \"A beautiful cherry blossom festival, time-lapse, high quality.\" "], "img_footnote": [], "page_idx": 27}, {"type": "text", "text": "Figure 21: Ablation study. DD, LP, and LD signifies diagonal denoising, latent partitioning, and lookahead denoising, respectively. The number on the top-left corner of each frame indicates the frame index. ", "page_idx": 27}, {"type": "image", "img_path": "uikhNa4wam/tmp/ad6e8004912e98c07d164c76860527654d756a0dcb221636fe14e21bf58421c2.jpg", "img_caption": ["(a) \"A detailed macro shot of a blooming rose, 4K.\" "], "img_footnote": [], "page_idx": 28}, {"type": "image", "img_path": "uikhNa4wam/tmp/5cdc4da22f115804a25b38cd5fcaab7f543e051d7fa758708be9688280834e42.jpg", "img_caption": ["(b) \"A close-up of a tarantula walking, high definition.\" "], "img_footnote": [], "page_idx": 28}, {"type": "text", "text": "Figure 22: Ablation study. DD, LP, and LD signifies diagonal denoising, latent partitioning, and lookahead denoising, respectively. The number on the top-left corner of each frame indicates the frame index. ", "page_idx": 28}, {"type": "text", "text": "I Potential Broader Impact ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "This paper leverages pretrained video diffusion models to generate high quality videos. The proposed method can potentially be used to synthesize videos with unexpectedly inappropriate content since it is based on pretrained models and involves no training. However, we believe that our method could mildly address ethical concerns associated with the training data of generative models. ", "page_idx": 28}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper\u2019s contributions and scope are accurately represented in the abstract and introduction. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 29}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: We discuss the limitations in Section 6. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 29}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We provide the full set of assumptions and a complete proof for Lemma 3.2 and Theorem 3.3. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 30}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We provide detailed information to reproduce the results in Sections 3 and 4. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 30}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We provide the source codes in supplementary files to reproduce the experimental results. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 31}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We provide all the detailed information for implementations in Table 4. Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 31}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 31}, {"type": "text", "text": "Answer: [No] ", "page_idx": 31}, {"type": "text", "text": "Justification: Error bars are not reported because it would be too computationally expensive. Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 31}, {"type": "text", "text": "", "page_idx": 32}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: We provide the computational cost and type of GPUs for each experiment in Section 4.4. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 32}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: Our research conforms to the NeurIPS Code of Ethics. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 32}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: We discuss the potential broader impacts in Appendix I. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 32}, {"type": "text", "text": "", "page_idx": 33}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: Since we do not release of data or models, our paper poses no such risks. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 33}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Justification: We properly credit the original owners and the licenses of the used assets in Appendix B. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 33}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 34}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: We provide a README.md to explain the usage of the released code. Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 34}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: We provide detailed information for user study in Appendix B.1 ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 34}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 34}, {"type": "text", "text": "Answer: [No] ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Justification: Our survey does not incur any potential risks. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 34}]