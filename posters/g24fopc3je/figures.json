[{"figure_path": "G24fOpC3JE/figures/figures_1_1.jpg", "caption": "Figure 1: An example of continuous temporal domain generalization. Consider training classification models for public opinion prediction via tweets, where the training domains are only available at specific political events (e.g., presidential debates), we wish to generalize the model to any future based on the underlying data distribution drift within the time-irregularly distributed training domains.", "description": "This figure illustrates the concept of Continuous Temporal Domain Generalization (CTDG) using the example of public opinion prediction from tweets.  Training data is only available during specific political events, resulting in irregularly spaced data points across continuous time. The goal is to train a model that generalizes to future time points and accurately predicts public opinion even with data distribution shifts.", "section": "1 Introduction"}, {"figure_path": "G24fOpC3JE/figures/figures_3_1.jpg", "caption": "Figure 2: Macro-flows and micro-constraints in the proposed model framework.", "description": "This figure illustrates the three dynamic flows within the Koodos framework: Data Flow, Model Flow, and Koopman Representation Flow.  The Data Flow shows how data changes continuously over time. The Model Flow demonstrates how model parameters change accordingly in response to these data dynamics. The Koopman Representation Flow maps the high-dimensional, nonlinear model dynamics into a low-dimensional, linearized space using the Koopman operator for easier analysis and control. The figure also highlights the micro-constraints (losses) that ensure consistency between the three flows and incorporate prior knowledge.", "section": "4 Methodology"}, {"figure_path": "G24fOpC3JE/figures/figures_8_1.jpg", "caption": "Figure 3: Visualization of decision boundary of the 2-Moons dataset (purple and yellow show data regions, red line shows the decision boundary). Top to bottom compares two baseline methods with ours; left to right shows partial test domains (all test domains are marked with red points on the timeline). All models are learned using data before the last train domain.", "description": "This figure compares the decision boundaries learned by three different models (DRAIN-\u0394t, DeepODE, and Koodos) on the 2-Moons dataset across multiple test domains.  Each row represents a different model, showcasing its performance in generalizing to unseen domains over time. The red line depicts the learned decision boundary for each domain, while the purple and yellow points show the data points in each domain. The figure visually demonstrates the superior generalization capability of the proposed Koodos model compared to the baselines, especially in maintaining consistent and accurate decision boundaries in unseen domains.", "section": "5.2 Qualitative analysis: data dynamics and the learned model dynamics"}, {"figure_path": "G24fOpC3JE/figures/figures_8_2.jpg", "caption": "Figure 4: Interpolated and extrapolated predictive model trajectories. Left: Koodos captures the essence of generalization through the harmonious synchronization of model and data dynamics; Middle: DRAIN, as a probabilistic model, fails to capture continuous dynamics, which is presented as jumps from one random state to another. Right: DeepODE demonstrates a certain degree of continuity, but the dynamics are incorrect.", "description": "This figure compares the performance of Koodos, DRAIN, and DeepODE in terms of model trajectory prediction. Koodos shows smooth and accurate interpolation and extrapolation of model trajectories, aligning well with the data dynamics. DRAIN exhibits discontinuous jumps, failing to capture the continuous nature of the data dynamics. DeepODE shows some degree of continuity but inaccuracies in the predicted dynamics.", "section": "5.2 Qualitative analysis: data dynamics and the learned model dynamics"}, {"figure_path": "G24fOpC3JE/figures/figures_9_1.jpg", "caption": "Figure 5: Eigenvalue distribution of the Koopman operator. Left: K as learnable; Right: K = B-BT with B as learnable.", "description": "This figure visualizes the eigenvalue distribution of the Koopman operator, a key component in the Koodos framework.  The left panel shows the distribution when the Koopman operator K is learned directly as a parameter of the model. The right panel demonstrates the distribution when K is constrained to be of the form B - B\u1d40, where B is a learnable matrix.  This constraint introduces an inductive bias, forcing the eigenvalues to be purely imaginary, promoting stability and periodic behavior in the system's dynamics. The different distributions illustrate the impact of this inductive bias on the model's stability and predictive performance.", "section": "Analysis and Control of the Temporal Domain Generalization"}, {"figure_path": "G24fOpC3JE/figures/figures_9_2.jpg", "caption": "Figure 4: Interpolated and extrapolated predictive model trajectories. Left: Koodos captures the essence of generalization through the harmonious synchronization of model and data dynamics; Middle: DRAIN, as a probabilistic model, fails to capture continuous dynamics, which is presented as jumps from one random state to another. Right: DeepODE demonstrates a certain degree of continuity, but the dynamics are incorrect.", "description": "This figure compares the model trajectories of Koodos, DRAIN, and DeepODE on a continuous temporal domain generalization task. It visualizes how well each model captures and extrapolates the underlying data dynamics. Koodos shows smooth and accurate trajectories that align with the true data dynamics, while DRAIN and DeepODE exhibit limitations in capturing continuous changes.", "section": "5.2 Qualitative analysis: data dynamics and the learned model dynamics"}, {"figure_path": "G24fOpC3JE/figures/figures_15_1.jpg", "caption": "Figure 2: Macro-flows and micro-constraints in the proposed model framework.", "description": "This figure illustrates the three dynamic flows in the proposed Koodos framework: Data Flow, Model Flow, and Koopman Representation Flow.  It shows how the model parameters evolve continuously over time, aligning with the evolving data distributions.  The Koopman operator is used to transform the high-dimensional model parameters into a low-dimensional Koopman space where the dynamics are simpler to model. The figure also highlights the use of constraints to ensure consistency between the different flows and to incorporate prior knowledge about the dynamics.", "section": "4 Methodology"}, {"figure_path": "G24fOpC3JE/figures/figures_17_1.jpg", "caption": "Figure 2: Macro-flows and micro-constraints in the proposed model framework.", "description": "This figure illustrates the three dynamic flows in the proposed Koodos framework: Data Flow, Model Flow, and Koopman Representation Flow.  It shows how the model's parameters evolve continuously over time, guided by the data dynamics.  The Koopman operator is used to simplify the high-dimensional model dynamics into a low-dimensional space for better understanding and optimization.  The figure also highlights the micro-constraints used to ensure consistency between the different representations and flows.  It visualizes the interaction between the data space, model space, and Koopman space, emphasizing how the framework synchronizes data and model dynamics for robust continuous temporal domain generalization.", "section": "4 Methodology"}, {"figure_path": "G24fOpC3JE/figures/figures_18_1.jpg", "caption": "Figure 3: Visualization of decision boundary of the 2-Moons dataset (purple and yellow show data regions, red line shows the decision boundary). Top to bottom compares two baseline methods with ours; left to right shows partial test domains (all test domains are marked with red points on the timeline). All models are learned using data before the last train domain.", "description": "This figure compares the decision boundaries learned by three different models (DRAIN-\u0394t, DeepODE, and Koodos) on the 2-Moons dataset across multiple test domains.  The visualization shows how well each model generalizes to unseen domains and their decision boundaries' evolution over time. It highlights Koodos's superior performance in maintaining consistent and accurate boundaries even as the data distribution shifts across continuous time.", "section": "5.2 Qualitative analysis: data dynamics and the learned model dynamics"}]