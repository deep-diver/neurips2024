[{"type": "text", "text": "Learning Complete Protein Representation by Dynamically Coupling of Sequence and Structure ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Bozhen ${\\mathbf{H}}{\\mathbf{u}}^{1,2*}$ , Cheng $\\mathbf{Tan^{2*}}$ , $\\mathbf{J}\\mathbf{u}\\mathbf{n}\\,\\mathbf{X}\\mathbf{i}\\mathbf{a}^{2}$ , Yue $\\mathbf{Liu^{3}}$ , Lirong $\\mathbf{W}\\mathbf{u}^{2}$ , Jiangbin Zheng2, Yongjie $\\mathbf{X}\\mathbf{u}^{2}$ , Yufei Huang2, Stan Z. $\\mathbf{L}\\mathbf{i}^{2\\dagger}$ 1Zhejiang University 2Westlake University 3National University of Singapore {hubozhen, tancheng, stan.zq.li}@westlake.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Learning effective representations is imperative for comprehending proteins and deciphering their biological functions. Recent strides in language models and graph neural networks have empowered protein models to harness primary or tertiary structure information for representation learning. Nevertheless, the absence of practical methodologies to appropriately model intricate inter-dependencies between protein sequences and structures has resulted in embeddings that exhibit low performance on tasks such as protein function prediction. In this study, we introduce CoupleNet, a novel framework designed to interlink protein sequences and structures to derive informative protein representations. CoupleNet integrates multiple levels and scales of features in proteins, encompassing residue identities and positions for sequences, as well as geometric representations for tertiary structures from both local and global perspectives. A two-type dynamic graph is constructed to capture adjacent and distant sequential features and structural geometries, achieving completeness at the amino acid and backbone levels. Additionally, convolutions are executed on nodes and edges simultaneously to generate comprehensive protein embeddings. Experimental results on benchmark datasets showcase that CoupleNet outperforms state-of-the-art methods, exhibiting particularly superior performance in low-sequence similarities scenarios, adeptly identifying infrequently encountered functions and effectively capturing remote homology relationships in proteins. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Proteins, the fundamental building blocks of life, serve crucial roles across a diverse array of applications, ranging from therapeutics to materials. Comprising 20 distinct amino acids linked by peptide bonds, proteins form intricate sequences that dictate their one-dimensional (1D) structure, ultimately determining their biochemical functions [1]. Due to recent progress in protein sequencing [2], massive numbers of protein sequences are now available. For example, the UniProt database, housing over 200 million protein sequences, has become a valuable resource for research [3]. Notably, the development of large-scale language models (LMs) in natural language processing has substantially benefited protein research owing to similarities between human languages and protein sequences [4\u20136]. For instance, models like ProtTrans [7] and ESM-series [8, 9] have proven the successful utility of protein LMs to process protein sequences. ", "page_idx": 0}, {"type": "text", "text": "Thanks to the recent significant progress made by AlphaFold2 [10] in three-dimensional (3D) structure prediction, a large number of protein structures from their sequence data are now made available. The latest release of AlphaFold protein structure database [11] provides broad coverage of UniProt [3]. Recently proposed structure-based protein encoders become to utilize geometric features [12\u201314], e.g., ProNet [15] learns representations of proteins with 3D structures at different levels, like the amino acid, backbone or all-atom levels. Concurrently, methods employing graph neural networks (GNNs) and LMs (LSTMs or attention models) [14, 16, 17], such as GearNet [14], have been developed to process both sequence and structure information. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "The 1D sequence and 3D structure of a protein provide different types of information, the discrete sequential orders, residue types, and coordinates, as shown in Figure 5 and Figure 6 in Appendix A. Models can learn coevolutionary and geometric information from sequences and structures, for example, whether residues contact or not. Although a protein\u2019s sequence determines its structure, various works have demonstrated the effectiveness of learning from either sequences or structures [9, 12, 18]. However, directly fusing representations from sequence encoder and structure encoder cannot explore their relationships, and current protein GNN methods have drawbacks in integrating such sequential and structural information. In detail, the information propagation is difficult for long-range dependencies in large protein graphs, and messages attenuate over many rounds of passing in GNNs, although there are several works aiming to tackle such a problem [19, 20]. Besides, message passing typically assumes localized neighborhood relationships, but amino acid interactions can be complex and long-range. We need to consider the structural and chemical properties of a residue that are highly dependent on surrounding neighbors, and capturing different conformers requires modeling the entire protein structure holistically, as the conformation of an amino acid is constrained by steric and hydrogen bonding with nearby residues, and the conformers correspond to the same protein, adopting slightly different 3D structures. Therefore, a proper protein sequence-structure modeling method is necessary and important to recognize these challenges and factors to obtain comprehensive and effective representations. ", "page_idx": 1}, {"type": "text", "text": "In this work, we model the relative positions of residues in the sequence and the spatial arrangement of atoms in Euclidean space simultaneously. We propose CoupleNet to construct two categories of graphs dynamically to cover the multiple scales of sequential features and structural geometries, which achieve completeness at the residue and backbone levels. Such global completeness is theoretically guaranteed to incorporate 3D information completely without information loss, while the local view would miss the long-range effects of subtle conformational changes happening distantly. For instance, the open and closed conformers of an enzyme may have similar local binding pockets but differ in global clamshell arrangement [21]. In order to better capture the local and global relationships and relieve the problems that exist in deep GNNs, we dynamically build new protein graphs in different conditions based on the depth of the network. For feature fusing, we take advantage of graph convolutions, performing node and edge convolutions simultaneously rather than passing messages separately on nodes and edges. Thus, the contributions of this paper are threefold: (1) A novel two-graph-based approach for modeling sequential and 3D geometric features, ensuring global completeness in protein representation. (2) The proposal of CoupleNet, which performs concurrent convolutions on nodes and edges, effectively integrating protein sequence and structure. The dynamically changed graphs can better model the node-edge relationships and utilize the intrinsic associations between sequences and structures. (3) Empirical validation showcases the superior performance of the proposed model compared to current mainstream protein representation learning methods across diverse tasks, including protein fold classification, enzyme reaction classification, Gene Ontology (GO) term prediction, and Enzyme Commission (EC) number prediction. Our experiments reveal that this method excels in predicting functions that rarely appear, effectively captures protein remote homology relationships. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Protein Representation Learning. Protein representation learning has emerged as a dynamic and promising field within biology, playing a crucial role in diverse downstream applications in protein science. Given the multifaceted nature of protein structures, current methodologies predominantly fall into three categories: protein LMs tailored for sequences, structure models emphasizing geometry, and hybrid approaches seamlessly integrating both aspects. Considering proteins as sequences of amino acids, akin to the structure of human languages, TAPE [22] establishes a benchmark for a variety of protein models, including 1D CNN, LSTM, and Transformer architectures. Elnaggar et al. have successfully trained six transformer variants, such as ProtBert and ProtT5, on extensive amino acid sequences. Similarly, the ESM-series [8, 9, 23] adopt a transformer architecture and a masked language modeling strategy, achieving robust representations through training on large-scale databases. Besides, several methods aim to encode the spatial information of protein structures using techniques such as convolutional neural networks (CNNs) [24], or GNNs [17, 25, 26]. For instance, SPROF [27] employs distance maps to predict protein sequence proflies, while IEConv [12] introduces a convolution operator to capture relevant structural levels. GVP-GNN [26] designs the geometric vector perceptrons (GVP) to learn both scalar and vector features in an equivariant and invariant manner. ProNet [15] learns hierarchical protein representations at multiple tertiary structure levels of granularity. Additionally, CDConv [28] introduces continuous-discrete convolution, utilizing irregular and regular approaches to model both geometry and sequence structures. A protein clustering method [29] is proposed by applying an iterative clustering strategy to group the nodes into clusters based on their 1D and 3D positions and assigned scores to obtain hierarchical protein representations. Moreover, some protein learning methods concurrently model multiple levels of structures [14, 28, 30], and PromtProtein [31] adopts a prompt-guided multi-task learning strategy for incorporating various protein structures. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Complete Message Passing. While SphereNet [32] introduces a spherical message passing scheme for precise 3D molecular learning, ensuring completeness within the edge-based 1-hop local neighborhood, this completeness does not extend to the entire 3D graph. Building upon this limitation, ComENet [33] innovatively incorporates rotation angles and spherical coordinates to achieve global completeness in 3D information on molecular graphs. By integrating these meticulously designed geometric representations into the established message passing scheme [34], the complete representation for a whole 3D graph is ultimately achieved [15]. ", "page_idx": 2}, {"type": "text", "text": "Unlike these methods, we couple sequence and structure via dynamically changed graphs and different geometric representations to attain complete representations throughout the entire protein 3D graph. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Notations. A 3D graph is represented as $G\\,=\\,(\\nu,\\mathcal{E},\\mathcal{P})$ , where $\\nu\\,=\\,\\{v_{i}\\}_{i=1,\\ldots,n}$ and $\\mathcal{E}\\,=$ $\\{\\varepsilon_{i j}\\}_{i,j=1,\\ldots,n}$ denote the vertex and edge sets with $n$ nodes, respectively, and $\\mathcal{P}=\\{P_{i}\\}_{i=1,\\ldots,n}$ is the set of position matrices, where $P_{i}\\in\\mathbb{R}^{k_{i}\\times3}$ represents the position matrix for node $v_{i}$ . We treat each amino acid as a graph node for a protein, then $k_{i}$ depends on the number of atoms in the $i$ -th amino acid. The node feature matrix is $X=[{\\pmb x}_{i}]_{i=1,\\dots,n}$ , where $\\pmb{x}_{i}\\in\\mathbb{R}^{d_{v}}$ is the feature vector of node $v_{i}$ . The edge feature matrix is $E=[e_{i j}]_{i,j=1,\\dots,n}.$ , where $e_{i j}\\in\\mathbb{R}^{d_{\\varepsilon}}$ is the feature vector of edge $\\varepsilon_{i j}$ . $d_{v}$ is the dimension of feature vector $\\pmb{x}_{i}$ , and $d_{\\varepsilon}$ denotes the dimension of $e_{i j}$ . ", "page_idx": 2}, {"type": "text", "text": "Invariance and Equivariance. We consider affine transformations that preserve the distance between any two points, i.e., the isometric group SE(3) (refer to Appendix B) in the Euclidean space. This is called the symmetry group, and it turns out that SE(3) is the special Euclidean group that includes 3D translations and the 3D rotation group SO(3) [35, 36]. ", "page_idx": 2}, {"type": "text", "text": "Given the function $f:\\mathbb{R}^{m}\\rightarrow\\mathbb{R}^{m^{\\prime}}$ \u2032, assuming the given symmetry group G acts on Rm and Rm\u2032, then $f$ is $\\mathrm{G}$ -equivariant if, ", "page_idx": 2}, {"type": "equation", "text": "$$\nf(T_{g}\\pmb{x})=S_{g}f(\\pmb{x}),\\,\\forall\\pmb{x}\\in\\mathbb{R}^{m},g\\in G\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $T_{g}$ and $S_{g}$ are the transformations. For the SE(3) group, when m = 1, the output of $f$ is a scalar, we have ", "page_idx": 2}, {"type": "equation", "text": "$$\nf(T_{g}\\pmb{x})=f(\\pmb{x}),\\,\\forall\\pmb{x}\\in\\mathbb{R}^{m},g\\in G\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "thus $f$ is SE(3)-invariant. ", "page_idx": 2}, {"type": "text", "text": "Complete Geometric Representations. A geometric transformation $\\mathcal F(\\cdot)$ is complete if for two 3D graphs $G^{1}=(\\mathcal{V},\\mathcal{E},\\mathcal{P}^{1})$ and $G^{2}=(\\mathcal{V},\\mathcal{E},\\mathcal{P}^{2})$ , there exists $T_{g}\\in\\mathrm{SE}(3)$ such that the representations ", "page_idx": 2}, {"type": "equation", "text": "$$\n{\\mathcal{F}}(G^{1})={\\mathcal{F}}(G^{2})\\Longleftrightarrow P_{i}^{1}=T_{g}(P_{i}^{2}),\\;\\mathrm{for}\\;i=1,\\ldots n\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The operation $T_{g}$ would not change the 3D conformation of a 3D graph [15, 32, 33]. And $\\mathcal{F}(G)\\Longleftrightarrow$ $\\mathcal{P}$ , positions can generate geometric representations, which can also be recovered from them. ", "page_idx": 2}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/9a47da0ff49110e1a6df14caf33e53889a3dad54c6e47724ecdcd5f27c6d8fbb.jpg", "img_caption": ["Figure 1: The polypeptide chain depicting the characteristic backbone bond lengths, angles, and torsion angles $(\\Psi_{i},\\Phi_{i},\\Omega_{i})$ . The planar peptide groups are denoted as shaded gray regions, indicating that the peptide plane differs from the geometric plane calculated from 3D positions. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Message Passing Paradigm. Message passing mechanism is mainly applied in graph convolutional networks (GCNs) [37], which follows an iterative scheme of updating node representations based on the feature aggregation from nearby nodes. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pmb{h}_{i}^{(0)}=\\mathrm{BN}\\left(\\mathrm{FC}\\left(\\pmb{x}_{i}\\right)\\right),}\\\\ &{\\pmb{u}_{i}^{(l)}=f_{\\mathrm{Agg}}^{(l)}(\\pmb{h}_{j}^{(l-1)}|v_{j}\\in\\mathcal{N}(v_{i})),}\\\\ &{\\pmb{h}_{i}^{(l)}=f_{\\mathrm{Update}}^{(l)}(\\pmb{h}_{j}^{(l-1)},\\pmb{u}_{i}^{(l)})}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\operatorname{FC}(\\cdot)$ and $\\mathrm{BN}(\\cdot)$ mean the linear transformation and batch normalization respectively. ${\\mathcal{N}}(v_{i})$ denotes the neighbours of node vi. f (Alg)g and f (Ulp)date are aggregation and transformation functions at the $l$ -th layer, which are permutation invariant and equivariant of node representations. ", "page_idx": 3}, {"type": "text", "text": "3.2 Sequence-Structure Graph Construction ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Specifically, we represent each amino acid as a node, considering the residue types and their positions $i\\;=\\;1,2,\\cdots\\;,n$ in the sequence, we define the sequential graph primarily on the sequence, if $\\|i-j\\|<l$ , the edge $\\varepsilon_{i j}$ exists, where $l$ is a hyper-parameter, and $\\left\\Vert\\cdot\\right\\Vert$ denotes the $l^{2}$ -norm. Besides, we predefine a radius $r$ , and build the radius graph. There exists a radius edge between node $v_{i}$ and $v_{j}$ if $\\|d_{i j,\\mathrm{C}\\alpha}\\|<r$ , where $d_{i j,\\mathrm{C}\\alpha}=P_{i,\\mathrm{C}\\alpha}-P_{j,\\mathrm{C}\\alpha}$ , and $P_{i,\\mathrm{C}\\alpha}$ denotes the 3D position of $\\mathrm{C}_{\\alpha}$ in the $i$ -th residue. We dynamically change the predefined thresholds with the depth of the network to cover nodes from the local to the global. ", "page_idx": 3}, {"type": "text", "text": "Firstly, we design a base approach at the amino acid level (aa) called $\\mathrm{{CoupleNet}_{\\mathrm{{aa}}}}$ that only uses the $\\mathrm{C}_{\\alpha}$ positions of the structures. Inspired by Ingraham et al., we construct a local coordinate system (LCS) for each residue (Figure 7(a) in the appendix). ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\pmb{Q}_{i}=\\left[\\pmb{b}_{i}\\quad\\pmb{n}_{i}\\quad\\pmb{b}_{i}\\times\\pmb{n}_{i}\\right]\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where ui =\u2225Pi,C\u03b1\u2212Pi\u22121,C\u03b1\u2225, $\\begin{array}{r}{\\pmb{u}_{i}=\\frac{P_{i,\\mathrm{C}\\alpha}-P_{i-1,\\mathrm{C}\\alpha}}{\\left\\|P_{i,\\mathrm{C}\\alpha}-P_{i-1,\\mathrm{C}\\alpha}\\right\\|},\\pmb{b}_{i}=\\frac{\\pmb{u}_{i}-\\pmb{u}_{i+1}}{\\left\\|\\pmb{u}_{i}-\\pmb{u}_{i+1}\\right\\|},\\pmb{n}_{i}=\\frac{\\pmb{u}_{i}\\times\\pmb{u}_{i+1}}{\\left\\|\\pmb{u}_{i}\\times\\pmb{u}_{i+1}\\right\\|},\\times\\mathrm{denot}}\\end{array}$ es the vector outer product. Then, we can get the geometric representations at the amino acid level of a protein 3D graph, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{F}(G)_{i j,a a}=(\\|d_{i j,\\mathrm{C}\\alpha}\\|\\,,Q_{i}^{T}\\cdot\\frac{d_{i j,\\mathrm{C}\\alpha}}{\\|d_{i j,\\mathrm{C}\\alpha}\\|},Q_{i}^{T}\\cdot Q_{j})}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\cdot$ is the matrix multiplication. This implementation is SE(3)-equivariant and obtains complete representations at this level; as if we have $Q_{i}$ , the LCS $Q_{j}$ can be easily obtained from $\\mathcal{F}(G)_{i j,a a}$ . ", "page_idx": 3}, {"type": "text", "text": "For a node $v_{i}$ , the node features $\\mathbf{\\boldsymbol{x}}_{i,a a}$ at the amino acid level is the concatenation of the one-hot embeddings of amino acid types and the physicochemical properties of each residue, namely, a steric parameter, hydrophobicity, volume, polarizability, isoelectric point, helix probability and sheet probability [39, 40], which provide quantitative insights into the biochemical nature of residues. ", "page_idx": 3}, {"type": "text", "text": "Secondly, as illustrated in Figure 1, CoupleNet considers all backbone atoms $\\mathrm{C}\\alpha,\\mathrm{C},\\mathrm{N},\\mathrm{O}$ (as depicted in Figure 2). In detail, the peptide bond displays partial double-bond character due to resonance [41], indicating that the three non-hydrogen atoms comprising the bond are coplanar, with limited free rotation about the bond due to this coplanar property. The $\\mathrm{N}_{i}-\\mathrm{C}_{\\alpha i}$ and $\\mathrm{C}_{\\alpha i}-\\mathrm{C}_{i}$ bonds constitute the two bonds in the basic repeating unit of the polypeptide backbone. These single bonds allow unrestricted rotation until sterically restricted by side chains [42, 43]. Since the coordinates of $\\mathrm{C}_{\\alpha}$ can be obtained as we have the complete representations at the amino acid level, the coordinates of other backbone atoms based on these rigid bond lengths and angles are able to be determined with the remaining degree of the backbone torsion angles $\\Phi_{i},\\Psi_{i},\\Omega_{i}$ . The omega torsion angle around the $\\mathrm{C}-\\mathrm{N}$ peptide bond is typically restricted to nearly $180^{\\circ}$ (trans) but can approach $0^{\\circ}$ (cis) in rare instances. Other than the bond lengths and angles presented in Figure 1, all the $_\\mathrm{H}$ bond lengths measure approximately 1 \u00c5. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "For the sequential graph, we compute the sine and cosine values of $\\Phi_{i},\\Psi_{i},\\Omega_{i}$ for each amino acid $i$ , and also use them as node features for node $v_{i}$ . ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\pmb{x}_{i}=\\pmb{x}_{i,a a}\\|((\\sin\\wedge\\cos)(\\Phi_{i},\\Psi_{i},\\Omega_{i}))\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\parallel$ denotes concatenation. There is no isolated node for the designed graph, which means the backbone atoms can be determined one by one along the polypeptide chain based on the positions of $\\mathrm{C}_{\\alpha}$ and these three backbone dihedral angles. Therefore, the existing presentations $[{\\mathcal{F}}(G)_{i j,a a}]_{i,j=1,\\dots,n}$ and $[{\\pmb x}_{i}]_{i=1,...,n}$ are complete at the backbone level for the sequential graph. ", "page_idx": 4}, {"type": "text", "text": "For the radius graph, we want to get the positions of backbone atoms in any two amino acids $i$ and $j$ . Inspired by trRosetta [44], the relative rotations and distances are computed, including the distance $(d_{i j,\\mathrm{C}_{\\beta}})$ , three dihedral angles $(\\omega_{i j},\\theta_{i j},\\theta_{j i})$ and two planar angles $(\\varphi_{i j},\\varphi_{j i})$ , as shown in Figure 7(b) in the appendix. These interresidue geometries define the relative locations of the backbone atoms of two residues in their details [44]. Therefore, these six geometries are complete for amino acids at the backbone (bb) level for the radius graph. The graph edges contain the relative spatial information between any two neighboring amino acids $e_{i j}\\overset{=}{=}\\bar{\\mathcal{F}}(G)_{i j,a a}^{\\bar{-}}\\|\\mathcal{F}(G)_{i j,b b}$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{F}(G)_{i j,b b}=(d_{i j,\\mathrm{C}_{\\beta}},(\\sin\\wedge\\cos)(\\omega_{i j},\\theta_{i j},\\varphi_{i j}))\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Protein structures that are SE(3) equivalents have the same 3D conformation, differing in orientation/positioning. Graph representations must encode these structures equivalently since the underlying molecular properties are identical. Constructing the relationships between sequence and structure can help the model learn more comprehensive protein representations, which ensures the model focuses on meaningful aspects of protein structures. ", "page_idx": 4}, {"type": "text", "text": "3.3 Sequence-Structure Graph Convolution ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We employ graph convolution to embed sequences and structures simultaneously, exploring their relationships to generate effective embeddings. Different from previous works [14, 28], we innovatively construct two categories of graphs for sequence and structure and design comprehensive sequential and structural representations to achieve completeness at the amino acid and backbone levels. We then convolve node and edge features aided by the message passing mechanism. ", "page_idx": 4}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/4d5c232919d8dc3c267a8373fd6eaedd315cb2d5124c39843da2dea720be66f3.jpg", "img_caption": ["Figure 2: An illustration of CoupleNet. This framework processes protein sequences and structures to get complete geometries and properties used as graph node and edge features, where the sequential and structural graph is dynamically changed depending on their distance relationships and the network depth. Convolutions happen on the nodes and edges simultaneously to capture the relationships from the local to the global. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "In order to implement convolution on nodes and edges simultaneously between sequence and structure, we set $\\varepsilon_{i j}$ to exist if the following conditions are satisfied: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\left\\|i-j\\right\\|<l\\quad{\\mathrm{and}}\\quad\\left\\|d_{i j,\\mathrm{C}\\alpha}\\right\\|<r\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The existing node and edge feature matrices $(X,E)$ are complete representations of a protein 3D graph to reconstruct its backbone atom positions. When the thresholds $r,l$ are small, Eq. 9 defines the local environment [45] of an amino acid, and the structural and chemical properties of a residue are highly dependent on surrounding residues. ", "page_idx": 5}, {"type": "text", "text": "Compared with the equation Eq. 4, the proposed CoupleNet first applies a $\\operatorname{FC}(\\cdot)$ layer and a $\\mathrm{BN}(\\cdot)$ layer to the node features to obtain the initial encoded representation. Then the aggregation function $f_{\\mathrm{Agg}}^{(l)}$ is applied to gather neighboring features of nodes and edges by convolution, where $\\sigma(\\cdot)$ is the activation function, LeakyReLU. $W$ is the learnable convolutional kernel matrix whose learnable parameters have no concern with the number of nodes or edges. We use the dropout and $\\operatorname{FC}(\\cdot)$ layer and add a residual connection from the previous layer for update function f (Ulp)date: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle h_{i}^{(0)}=\\mathrm{BN}\\left(\\mathrm{FC}\\left(\\pmb{x}_{i}\\right)\\right),}\\\\ &{\\displaystyle\\pmb{u}_{i}^{(l)}=\\sigma\\big(\\mathrm{BN}\\big(\\sum_{\\upsilon_{j}\\in\\mathcal{N}(\\upsilon_{i})}W e_{i j}\\pmb{h}_{j}^{(l-1)}\\big),}\\\\ &{\\displaystyle\\pmb{h}_{i}^{(l)}=\\pmb{h}_{i}^{(l)}+\\mathrm{Dropout}\\big(\\mathrm{FC}(\\pmb{u}_{i}^{(l)})\\big)}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "By incorporating complete geometric representations to the commonly used message passing framework (Eq. 10), a complete message passing scheme can be achieved [15, 32, 33], which can capture small changes due to such rigid transformations in coordinate positions. Complete representations allow for powerful equivariance and invariance properties to be encoded, which makes the learned models robust. By incorporating complete geometries, the convolution and pooling operations on irregular and non-Euclidean data like graphs are defined and conducted, enabling more expressive modeling for protein data. ", "page_idx": 5}, {"type": "text", "text": "3.4 Model Architecture ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The overall framework of CoupleNet is shown in Figure 2. The inputs to the graph are the calculated sequential and structural representations $(X,E)$ . We employ complete message passing and sequence pooling layers to obtain the deeply encoded graph-level representations. After one average pooling layer, the number of residues reduces by half. Thus, we expand the radius $r$ to $2r$ after once pooling, which makes neighbors of center nodes gradually cover more distant and rare nodes, also reducing the computational complexity. ", "page_idx": 5}, {"type": "text", "text": "Differences with Existing Protein Modeling Methods. The proposed approach representing the sequence and the 3D geometric structure of a protein differs from several existing protein models [12, 14]. Specifically, GearNet [14] has $2l+1$ types of edges; there are only two different types of graphs in the proposed CoupleNet: radius graph and sequential graph. Importantly, the threshold in the radius graph in GearNet is set to be constant, but we change the threshold of radius dynamically to learn different distance relationships. The message passing mechanism only executes on nodes in CoupleNet instead of on nodes and edges alternately used in GearNet. Moreover, CoupleNet performs convolutions on nodes and edges simultaneously with several pooling layers to reduce the sequence length, which is also largely different from ComENet [33] and GearNet. ", "page_idx": 5}, {"type": "text", "text": "Complexity Analysis. Considering the computational complexity of one message passing layer in this framework, it is $\\mathcal{O}(n d_{n})$ , where $d_{n}$ is the average node degree, and $d_{n}\\ll n$ . The time complexity is related to the computational complexity of the message passing layer; as we conduct the graph convolution on nodes and edges simultaneously, the time complexity is also $\\mathcal{O}(n d_{n})$ . Assuming there are $m_{\\varepsilon}$ edges in the graph, $d_{1}$ and $d_{2}$ mean the feature dimensions of nodes and edges, the space complexity is $O(n d_{1}+m_{\\varepsilon}d_{2})$ for every message passing layer. Using $B_{s}$ to denote the size of the batch, the final computational complexity is only $\\mathcal{O}(B_{s}n d_{n})$ . ", "page_idx": 5}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/ffb315506ec12dd6721e50c09806b0196ab408b1a2b03abddd2f0bea5df0b74e.jpg", "table_caption": ["Table 1: Accuracy $(\\%)$ on fold classification and enzyme reaction classification. [\u2217] denotes the results are taken from [28]. The best and suboptimal results are shown in bold and underline. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "4.1 Datasets, Settings and Baselines ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Following the tasks in IEconv [12] and GearNet [14], we evaluate CoupleNet on four protein tasks: protein fold classification, enzyme reaction classification, GO term prediction, and EC number prediction. For the task of fold and reaction classification, the performance is measured by mean accuracy. For GO Term and EC Prediction, $\\mathrm{F_{max}}$ is used as the evaluation metric. The performance is measured with mean values of five different initializations. As stated before, we increase the predefined radius $r$ to $2r$ after one pooling layer, from 4 to 16, and $l$ is set to be a constant number 11, and the number of feature channels is also doubled. In this condition, when the number of nodes decreases, $l$ is constant, $r$ increases and neighbors of center nodes gradually cover distant nodes. We design the sequential and radius graph instead of the $k$ -nearest neighbor graph because a constant $k$ makes some neighboring nodes far away from the center node. Distances of a group of neighbor nodes are larger than $20\\,\\mathring\\mathrm{A}$ , which cannot be seen as contacts [46]. ", "page_idx": 6}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/5e7819511d1ac0e5a6fbda51d80dfbed459ae38419d05c671ae2fc652dfe6670.jpg", "img_caption": ["Figure 3: The violin plot of the relationships of distances between sequence and structure on the GO term prediction dataset, the sequential distance $\\lVert i-j\\rVert$ is from 1 to n-1, and the $\\mathbf{X}$ -axis means sequential distance subtract one, the yaxis means $d_{i j,\\mathrm{C}\\alpha}$ . The dashed red line connects the median values. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "We present the dataset statistics Table 4 and conduct experiments to analyze these datasets. Figure 3 shows the distance relationships between sequence and structure on the GO term training dataset with 29898 proteins. We can see that when the sequential distance is large, there still exist nodes spatially adjacent. According to the trend of the medians, when the sequence is long, atoms may need more space to arrange in the 3D space. The violin plot distance relationships on the other three datasets are presented in Figure 8. ", "page_idx": 6}, {"type": "text", "text": "We compare our proposed method with existing protein representation learning methods, which are classified into three categories based on their inputs: a sequence (amino acid sequence), 3D structure, or both sequence and structure. 1) Sequence-based encoders, including CNN [47], ", "page_idx": 6}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/3237438d0cffe24a18cf81733dd8aef48747412bce99f4883dcee15c058d3b03.jpg", "table_caption": ["Table 2: $\\mathrm{F_{max}}$ on GO term and EC number prediction. $\\left[{*}\\right]$ means the results are taken from [28]. The best and suboptimal results are shown in bold and underline. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "ResNet [22], LSTM [22] and Transformer [22]. 2) Structure-based methods (GCN [37], GAT [48], 3DCNN_MQA [24], IEConv (atom level) [12]). 3) Sequence-structure based models, e.g., GVP [26], ProNet [15], GearNet [14], CDConv [28], etc. ", "page_idx": 7}, {"type": "text", "text": "4.2 Results of Fold and Reaction Classification, EC and GO term Prediction. ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Table 1 provides the comparisons on the fold and enzyme reaction classification. From this table, we can see that the proposed model CoupleNet achieves the best performance across all four test sets on the fold and enzyme reaction classification compared with recent state-of-the-art methods. Especially on the Fold and SuperFamily test sets, CoupleNet improves the results by about $4\\%$ , showing that CoupleNet is proficient at learning the mappings between protein sequences, structures, and functions. Moreover, CDConv [28] ranks second among these methods. Both CDConv and our method are implemented by sequence-structure convolution. This phenomenon illustrates that coupling sequences and structures of proteins are conducive to learning better protein embeddings. Our proposed model utilizes complete geometric representations and specially designed dynamically changed graphs, achieving state-of-the-art results. ", "page_idx": 7}, {"type": "text", "text": "We follow the split method in [14, 17] to guarantee that the test set only comprises PDB chains with sequence identity no higher than $95\\%$ to the training set for GO term and EC number prediction. Proteins are organized into three ontologies: molecular function (MF), biological process (BP), and cellular component (CC) for the task of GO term prediction. Table 2 compares different protein modeling methods on GO term prediction and EC number prediction. The proposed model, CoupleNet yields the highest $\\mathrm{F_{max}}$ across these four test sets of two tasks, outperforming other prevalent models. This indicates that CoupleNet can effectively predict the functions, locations, and enzymatic activities of proteins. ", "page_idx": 7}, {"type": "text", "text": "We learn protein representations in terms of protein sequences and structures, which is essential as building hierarchical dependencies gets universal representations when there is a low similarity between the training and test sets. We compare the protein graph methods, GearNet, and the proposed CoupleNet by different cutoff splits. Proteins in the test set are categorized into four groups based on their similarity to the training set $30\\%$ , $40\\%$ , $50\\%$ , $70\\%$ ), not by the default split rate $(95\\%)$ . The results are shown in Figure 9 in the appendix, which indicate that even when there is a low similarity between the training and test sets, our model also has the highest scores, which demonstrates the superiority and robustness of the proposed model. ", "page_idx": 7}, {"type": "text", "text": "4.3 Analysis of Experiments on Protein Length ", "text_level": 1, "page_idx": 7}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/726b39b191159308c9b3ecbb1f983daf27a2879bd925257515759f0a8eb6ad5f.jpg", "table_caption": ["Table 3: Ablation of CoupleNet, we compare it with the base model, $\\mathrm{{CoupleNet}_{\\mathrm{{aa}}}}$ , and the models removing the sequence (w/o sequence), structure, or related geometries. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "To assess the model\u2019s proficiency in handling proteins of varying lengths, we conducted a categorization based on the sequence length of proteins using the mean length of the unseen test set as a threshold. This allowed us to distinguish between small and large proteins. For instance, proteins were grouped into two categories based on the mean length: 149.4 for Fold, 186.7 for SuperFamily, and 162.4 for Family, 299.8 for the GO dataset. ", "page_idx": 8}, {"type": "text", "text": "The protein Fold classification task involves identifying remote homology relationships (i.e., determining if proteins belong to the same family or superfamily), CoupleNet demonstrates its capability to capture such relationships. No", "page_idx": 8}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/38692df1aacf593244df928464bba81921f86aa8645753ef7b735a1a5ad8e47c.jpg", "img_caption": ["Figure 4: Percentage accumulation chart of results on large and small proteins. The vertical axis shows the percentage, where the red line indicates $50\\%$ . "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "tably, higher accuracies are observed for relatively large proteins with sequence lengths surpassing the mean length, as indicated in Figure 4. On the other hand, the GO term prediction task exhibits less correlation with protein sequence length, which relies more on the local environment of residues [49]. ", "page_idx": 8}, {"type": "text", "text": "4.4 Ablation Study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We examined the impact of removing the sequence information, which means removing the encoding of amino acid types for each node; removing the structure information, which means removing features related to protein geometry $(\\mathcal{F}(G)_{a a},\\Phi,\\Psi,\\Omega,d_{\\mathrm{C}_{\\beta}},\\omega,\\theta,\\varphi$ , subscripts are omitted for brevity); removing the backbone torsion angles $(\\mathrm{w}/\\mathrm{o}\\;\\Phi,\\Psi,\\Omega)$ and removing the interresidue geometric structure representations (w/o $d_{\\mathrm{C}_{\\beta}},\\omega,\\theta,\\varphi)$ . As shown in Table 3, removing either sequence or structure causes a performance drop on all tasks, demonstrating that both types of information are critical for the proposed method. When removing the structure, the performance decreases more significantly, suggesting that structural information provides more important and comprehensive clues compared with sequence information alone. From these tables, we can also find that these complete geometries $(\\Phi,\\Psi,\\Omega$ and $d_{\\mathrm{C}_{\\beta}},\\omega,\\theta,\\varphi)$ provide similar information, with one of their removals leading to minor performance drops for the reason that they both provide complete geometries, but from different perspectives. Compared with $\\mathrm{{CoupleNet}_{\\mathrm{{aa}}}}$ , CoupleNet achieves significant improvements on the four tasks, demonstrating the importance of complete representations at the backbone level in learning protein embeddings. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion and Limitation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this work, we propose CoupleNet, a novel protein representation learning method that dynamically fuses protein sequences and multi-level structures by conducting convolution on graph nodes and edges. We design the sequential and radius graphs, achieving completeness on them at different protein structure levels. Our approach achieves state-of-the-art results on the protein tasks, demonstrating the superiority of our proposed method. A limitation is that this framework needs protein sequences and structures to be available, which may not be suitable for the sequence-only data as the input. A future direction is to develop a large-scale model based on the multi-modal protein data types to enhance performance. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by the National Science and Technology Major Project (No. 2022ZD0115101), the National Natural Science Foundation of China Project (No. U21A20427 and No. 623B2086), Project (No. WU2022A009) from the Center of Synthetic Biology and Integrated Bioengineering of Westlake University and Project (No. WU2023C019) from the Westlake University Industries of the Future Research Funding. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Andrew W Senior, Richard Evans, John Jumper, James Kirkpatrick, Laurent Sifre, Tim Green, Chongli Qin, Augustin \u017d\u00eddek, Alexander WR Nelson, Alex Bridgland, et al. Improved protein structure prediction using potentials from deep learning. Nature, 577(7792):706\u2013710, 2020.   \n[2] Bin Ma. Novor: real-time peptide de novo sequencing software. Journal of the American Society for Mass Spectrometry, 26(11):1885\u20131894, 2015.   \n[3] UniProt Consortium. Uniprot: a worldwide hub of protein knowledge. Nucleic acids research, 47(D1):D506\u2013D515, 2019.   \n[4] Noelia Ferruz and Birte H\u00f6cker. Controllable protein design with language models. Nature Machine Intelligence, 4(6):521\u2013532, 2022.   \n[5] Bozhen Hu, Jun Xia, Jiangbin Zheng, Cheng Tan, Yufei Huang, Yongjie Xu, and Stan Z Li. Protein language models and structure prediction: Connection and progression. arXiv preprint arXiv:2211.16742, 2022.   \n[6] Yue Liu, Xiaoxin He, Miao Xiong, Jinlan Fu, Shumin Deng, and Bryan Hooi. Flipattack: Jailbreak llms via flipping. arXiv preprint arXiv:2410.02832, 2024.   \n[7] Ahmed Elnaggar, Michael Heinzinger, Christian Dallago, Ghalia Rehawi, Yu Wang, Llion Jones, Tom Gibbs, Tamas Feher, Christoph Angerer, Martin Steinegger, et al. Prottrans: Toward understanding the language of life through self-supervised learning. IEEE transactions on pattern analysis and machine intelligence, 44(10):7112\u20137127, 2021.   \n[8] Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C Lawrence Zitnick, Jerry Ma, et al. Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences. Proceedings of the National Academy of Sciences, 118(15):e2016239118, 2021.   \n[9] Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Allan dos Santos Costa, Maryam Fazel-Zarandi, Tom Sercu, Sal Candido, et al. Language models of protein sequences at the scale of evolution enable accurate structure prediction. BioRxiv, 2022: 500902, 2022.   \n[10] John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, Russ Bates, Augustin \u017d\u00eddek, Anna Potapenko, et al. Highly accurate protein structure prediction with alphafold. Nature, 596(7873):583\u2013589, 2021.   \n[11] Mihaly Varadi, Stephen Anyango, Mandar Deshpande, Sreenath Nair, Cindy Natassia, Galabina Yordanova, David Yuan, Oana Stroe, Gemma Wood, Agata Laydon, et al. Alphafold protein structure database: massively expanding the structural coverage of protein-sequence space with high-accuracy models. Nucleic acids research, 50(D1):D439\u2013D444, 2022.   \n[12] Pedro Hermosilla, Marco Sch\u00e4fer, Mate\u02c7j Lang, Gloria Fackelmann, Pere Pau V\u00e1zquez, Barbora Kozl\u00edkov\u00e1, Michael Krone, Tobias Ritschel, and Timo Ropinski. Intrinsic-extrinsic convolution and pooling for learning on 3d protein structures. arXiv preprint arXiv:2007.06252, 2020.   \n[13] Pedro Hermosilla and Timo Ropinski. Contrastive representation learning for 3d protein structures. arXiv preprint arXiv:2205.15675, 2022.   \n[14] Zuobai Zhang, Minghao Xu, Arian Jamasb, Vijil Chenthamarakshan, Aurelie Lozano, Payel Das, and Jian Tang. Protein representation learning by geometric structure pretraining. In The Eleventh International Conference on Learning Representations, 2023.   \n[15] Limei Wang, Haoran Liu, Yi Liu, Jerry Kurtin, and Shuiwang Ji. Learning hierarchical protein representations via complete 3d graph networks. In The Eleventh International Conference on Learning Representations, 2023.   \n[16] Fang Wu, Dragomir Radev, and Jinbo Xu. When geometric deep learning meets pretrained protein language models. bioRxiv, pages 2023\u201301, 2023.   \n[17] Vladimir Gligorijevi\u00b4c, P Douglas Renfrew, Tomasz Kosciolek, Julia Koehler Leman, Daniel Berenberg, Tommi Vatanen, Chris Chandler, Bryn C Taylor, Ian M Fisk, Hera Vlamakis, et al. Structure-based protein function prediction using graph convolutional networks. Nature communications, 12(1):3168, 2021.   \n[18] Cheng Tan, Zhangyang Gao, Jun Xia, Bozhen Hu, and Stan Z Li. Generative de novo protein design with global context. arXiv preprint arXiv:2204.10673, 2022.   \n[19] Meng Liu, Zhengyang Wang, and Shuiwang Ji. Non-local graph neural networks. IEEE transactions on pattern analysis and machine intelligence, 44(12):10270\u201310276, 2021.   \n[20] Kaixiong Zhou, Xiao Huang, Yuening Li, Daochen Zha, Rui Chen, and Xia Hu. Towards deeper graph neural networks with differentiable group normalization. Advances in neural information processing systems, 33:4917\u20134928, 2020.   \n[21] Du\u0161an Petrovi\u00b4c, Valeria A Risso, Shina Caroline Lynn Kamerlin, and Jose M Sanchez-Ruiz. Conformational dynamics and enzyme evolution. Journal of the Royal Society Interface, 15 (144):20180330, 2018.   \n[22] Roshan Rao, Nicholas Bhattacharya, Neil Thomas, Yan Duan, Peter Chen, John Canny, Pieter Abbeel, and Yun Song. Evaluating protein transfer learning with tape. Advances in neural information processing systems, 32, 2019.   \n[23] Roshan M Rao, Jason Liu, Robert Verkuil, Joshua Meier, John Canny, Pieter Abbeel, Tom Sercu, and Alexander Rives. Msa transformer. In International Conference on Machine Learning, pages 8844\u20138856. PMLR, 2021.   \n[24] Georgy Derevyanko, Sergei Grudinin, Yoshua Bengio, and Guillaume Lamoureux. Deep convolutional networks for quality assessment of protein folds. Bioinformatics, 34(23):4046\u2013 4053, 2018.   \n[25] Federico Baldassarre, David Men\u00e9ndez Hurtado, Arne Elofsson, and Hossein Azizpour. Graphqa: protein model quality assessment using graph convolutional networks. Bioinformatics, 37(3):360\u2013366, 2021.   \n[26] Bowen Jing, Stephan Eismann, Patricia Suriana, Raphael JL Townshend, and Ron Dror. Learning from protein structure with geometric vector perceptrons. arXiv preprint arXiv:2009.01411, 2020.   \n[27] Sheng Chen, Zhe Sun, Lihua Lin, Zifeng Liu, Xun Liu, Yutian Chong, Yutong Lu, Huiying Zhao, and Yuedong Yang. To improve protein sequence profile prediction through image captioning on pairwise residue distance map. Journal of chemical information and modeling, 60(1):391\u2013399, 2019.   \n[28] Hehe Fan, Zhangyang Wang, Yi Yang, and Mohan Kankanhalli. Continuous-discrete convolution for geometry-sequence modeling in proteins. In The Eleventh International Conference on Learning Representations, 2023.   \n[29] Ruijie Quan, Wenguan Wang, Fan Ma, Hehe Fan, and Yi Yang. Clustering for protein representation learning. arXiv preprint arXiv:2404.00254, 2024.   \n[30] Can Chen, Jingbo Zhou, Fan Wang, Xue Liu, and Dejing Dou. Structure-aware protein selfsupervised learning. Bioinformatics, 39(4):btad189, 2023.   \n[31] Zeyuan Wang, Qiang Zhang, Hu Shuangwei, Haoran Yu, Xurui Jin, Zhichen Gong, and Huajun Chen. Multi-level protein structure pre-training via prompt learning. In The Eleventh International Conference on Learning Representations, 2023.   \n[32] Yi Liu, Limei Wang, Meng Liu, Yuchao Lin, Xuan Zhang, Bora Oztekin, and Shuiwang Ji. Spherical message passing for 3d molecular graphs. In International Conference on Learning Representations, 2021.   \n[33] Limei Wang, Yi Liu, Yuchao Lin, Haoran Liu, and Shuiwang Ji. Comenet: Towards complete and efficient message passing for 3d molecular graphs. arXiv preprint arXiv:2206.08515, 2022.   \n[34] Justin Gilmer, Samuel S Schoenholz, Patrick F Riley, Oriol Vinyals, and George E Dahl. Neural message passing for quantum chemistry. In International conference on machine learning, pages 1263\u20131272. PMLR, 2017.   \n[35] Fabian Fuchs, Daniel Worrall, Volker Fischer, and Max Welling. Se (3)-transformers: 3d roto-translation equivariant attention networks. Advances in Neural Information Processing Systems, 33:1970\u20131981, 2020.   \n[36] Weitao Du, He Zhang, Yuanqi Du, Qi Meng, Wei Chen, Nanning Zheng, Bin Shao, and Tie-Yan Liu. Se (3) equivariant graph neural networks with complete local frames. In International Conference on Machine Learning, pages 5583\u20135608. PMLR, 2022.   \n[37] Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. arXiv preprint arXiv:1609.02907, 2016.   \n[38] John Ingraham, Vikas Garg, Regina Barzilay, and Tommi Jaakkola. Generative models for graph-based protein design. Advances in neural information processing systems, 32, 2019.   \n[39] Gang Xu, Qinghua Wang, and Jianpeng Ma. Opus-rota4: a gradient-based protein side-chain modeling framework assisted by deep learning-based predictors. Briefings in Bioinformatics, 23(1):bbab529, 2022.   \n[40] Jack Hanson, Kuldip Paliwal, Thomas Litfin, Yuedong Yang, and Yaoqi Zhou. Improving prediction of protein secondary structure, backbone angles, solvent accessibility and contact numbers by using predicted contact maps and an ensemble of recurrent and residual convolutional neural networks. Bioinformatics, 35(14):2403\u20132410, 2019.   \n[41] Manfred S Weiss, Andreas Jabs, and Rolf Hilgenfeld. Peptide bonds revisited. Nature structural biology, 5(8):676\u2013676, 1998.   \n[42] David L Nelson, Albert L Lehninger, and Michael M Cox. Lehninger principles of biochemistry. Macmillan, 2008.   \n[43] K Peter C Vollhardt and Neil E Schore. Organic chemistry: structure and function. Macmillan, 2003.   \n[44] Jianyi Yang, Ivan Anishchenko, Hahnbeom Park, Zhenling Peng, Sergey Ovchinnikov, and David Baker. Improved protein structure prediction using predicted interresidue orientations. Proceedings of the National Academy of Sciences, 117(3):1496\u20131503, 2020.   \n[45] Bin Huang, Tingwen Fan, Kaiyue Wang, Haicang Zhang, Chungong Yu, Shuyu Nie, Yangshuo Qi, Wei-Mou Zheng, Jian Han, Zheng Fan, Shiwei Sun, Sheng Ye, Huaiyi Yang, and Dongbo Bu. Accurate and efficient protein sequence design through learning concise local environment of residues. Bioinformatics, 39(3):btad122, 03 2023.   \n[46] G Marius Clore and Angela M Gronenborn. Nmr structure determination of proteins and protein complexes larger than 20 kda. Current opinion in chemical biology, 2(5):564\u2013570, 1998.   \n[47] Amir Shanehsazzadeh, David Belanger, and David Dohan. Is transfer learning necessary for protein landscape prediction? arXiv preprint arXiv:2011.03443, 2020.   \n[48] Petar Velic\u02c7kovic\u00b4, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017.   \n[49] Ilya Levental and Ed Lyman. Regulation of membrane protein structure and function by their lipid nano-environment. Nature Reviews Molecular Cell Biology, 24(2):107\u2013122, 2023.   \n[50] Jie Hou, Badri Adhikari, and Jianlin Cheng. Deepsf: deep convolutional neural network for mapping protein sequences to folds. Bioinformatics, 34(8):1295\u20131303, 2018.   \n[51] Edwin C Webb et al. Enzyme nomenclature 1992. Recommendations of the Nomenclature Committee of the International Union of Biochemistry and Molecular Biology on the Nomenclature and Classification of Enzymes. Number Ed. 6. Academic Press, 1992.   \n[52] Marina V Omelchenko, Michael Y Galperin, Yuri I Wolf, and Eugene V Koonin. Nonhomologous isofunctional enzymes: a systematic analysis of alternative solutions in enzyme evolution. Biology direct, 5:1\u201320, 2010.   \n[53] Helen M Berman, John Westbrook, Zukang Feng, Gary Gilliland, Talapady N Bhat, Helge Weissig, Ilya N Shindyalov, and Philip E Bourne. The protein data bank. Nucleic acids research, 28(1):235\u2013242, 2000.   \n[54] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Protein Sequence and Structure ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "There exist relationships between sequence and structure, as shown in Figure 5; the contact maps can be inferred from sequences to obtain 3D coordinates, while the distant contacts provide constraints for a multiple sequence alignment (MSA). Besides, protein sequence and structure provide different types of information (Figure 6), like residue types and 3D arrangements. ", "page_idx": 13}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/aecaa42cf1263d85cda169a664ad3621df368be8b6c2f334849bc7e32af53e6f.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 5: Relationship between protein sequences and the structure of one protein in the alignment. The positions that coevolved are highlighted in red and light blue. Residues within these positions where changes occurred are shown in blue. Given such a MSA, one can infer correlations statistically found between two residues that these sequence positions are spatially adjacent, i.e., they are contacts [5]. The protein tertiary structure can be inferred from such contacts. ", "page_idx": 13}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/d8a4803351df07b2de8e331742a706263f5dba96ebb9f3f25380e5602164cea6.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 6: Illustration of protein sequence and structure. 1) The primary structure comprises $n$ amino acids. 2) The tertiary structure with atom arrangement in Euclidean space is presented, where each atom has a specific 3D coordinate. Amino acids have fixed backbone atoms $\\displaystyle(\\mathrm{C}_{\\alpha},\\mathrm{C},\\mathrm{N},\\mathrm{O})$ and side-chain atoms that vary depending on the residue types. ", "page_idx": 13}, {"type": "text", "text": "B SE(3)", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "The collection of $4\\times4$ real matrices of the SE(3) is shown as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\left[\\begin{array}{c c}{R}&{\\mathbf{t}}\\\\ {0}&{1}\\end{array}\\right]=\\left[\\begin{array}{c c c c}{r_{11}}&{r_{12}}&{r_{13}}&{t_{1}}\\\\ {r_{21}}&{r_{22}}&{r_{23}}&{t_{2}}\\\\ {r_{31}}&{r_{32}}&{r_{33}}&{t_{3}}\\\\ {0}&{0}&{0}&{1}\\end{array}\\right],\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $R\\,\\in\\,\\mathrm{SO(3)}$ and t $\\in\\mathbb{R}^{3}$ , SO(3) is the 3D rotation group. $R$ satisfying $R^{T}R\\,=\\,I$ and $\\operatorname*{det}(R)=1$ . ", "page_idx": 13}, {"type": "text", "text": "C Geometric Features ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Firstly, we present the local coordinate system, which is shown in Figure 7(a), $b_{i}$ is the negative bisector of the angle between the rays $(P_{i-1,\\mathrm{C}_{\\alpha}}-P_{i,\\mathrm{C}_{\\alpha}})$ and $(P_{i+1,\\mathrm{C}_{\\alpha}}-P_{i,\\mathrm{C}_{\\alpha}})$ . ", "page_idx": 13}, {"type": "text", "text": "Secondly, we introduce the relative rotations and distances in trRosetta [44], including the distance $(d_{i j,\\mathrm{C}_{\\beta}})$ , three dihedral angles $(\\omega_{i j},\\theta_{i j},\\theta_{j i})$ and two planar angles $(\\varphi_{i j},\\varphi_{j i})$ , as shown in Figure 7(b). ", "page_idx": 13}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/34865be173eb55bb1383066876111fe30069444656ab500515e7165514b9f9d9.jpg", "img_caption": ["Figure 7: Protein geometries. (a) The local coordinate system. $P_{i,\\mathrm{C}_{\\alpha}}$ is the coordinate of $\\mathrm{C}_{\\alpha}$ in residue $i$ . (b) Interresidue geometries including angles and distances, including the distance $(d_{i j,\\mathrm{C}_{\\beta}})$ ), three dihedral angles $(\\omega_{i j},\\theta_{i j},\\theta_{j i})$ and two planar angles $(\\varphi_{i j},\\varphi_{j i})$ . "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "D Social Impact ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "The development of CoupleNet marks a significant advancement in the realm of protein research with profound potential for societal impact. By effectively bridging the gap between protein sequences and structures, CoupleNet offers unprecedented insights into the intricate world of proteins and their biological functions. This breakthrough has far-reaching implications for various fields, including medicine and biotechnology. With the ability to accurately predict protein functions, CoupleNet can expedite drug discovery processes, enabling the development of novel therapeutics for combating diseases more efficiently. Furthermore, its capability to identify infrequently encountered functions and capture remote homology relationships promises to revolutionize our understanding of protein evolution and diversity, paving the way for innovative solutions in fields such as personalized medicine and bioprocessing. Ultimately, the deployment of CoupleNet has the potential to drive transformative advancements in healthcare and biotechnology, ultimately leading to improved human health, enhanced crop yields, and sustainable industrial practices. ", "page_idx": 14}, {"type": "text", "text": "E Tasks ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Fold Classification. Protein fold is to predict the fold class label given a protein, which is crucial for understanding how protein structure and protein evolution interact [50]. In total, this dataset contains 16, 712 proteins with 1, 195 fold classes. There are three test sets available. Fold: Training excludes proteins from the same superfamily. Superfamily: Training does not include proteins from the same family. Family: Proteins from the same family are included in the training. ", "page_idx": 14}, {"type": "text", "text": "Enzyme Reaction Classification. Reaction categorization aims to predict a protein\u2019s class of enzyme-catalyzed reactions, according to all four levels of the EC number [51, 52]. Following the setting in [12], this dataset has 37, 248 proteins from 384 four-level EC numbers [53]. ", "page_idx": 14}, {"type": "text", "text": "GO Term Prediction. The goal of GO term prediction is to foretell whether a protein is related to a certain GO term. Following [17], The three ontologies, MF, BP, and CC, are hierarchically connected, functional classes. MF describes activities that occur at the molecular level, BP represents the larger processes, and CC describes the parts of a cell or its extracellular environment [3]. ", "page_idx": 14}, {"type": "text", "text": "EC Number Prediction. This task seeks to predict the 538 EC numbers from the third level and fourth levels of different proteins [17], which describe their catalysis of biochemical reactions. ", "page_idx": 14}, {"type": "text", "text": "F Details of Datasets and Training Setup ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "For all datasets, we use a data augmentation strategy by adding noise to the training set to increase the variability of data. For example, we update the position of $\\mathrm{C}_{\\alpha i}$ , ", "page_idx": 15}, {"type": "equation", "text": "$$\nP_{i,\\mathrm{C}_{\\alpha}}\\gets P_{i,\\mathrm{C}_{\\alpha}}+N(\\mu_{N},\\sigma_{N}^{2})\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\mu_{N},\\sigma_{N}^{2}$ are the mean (expectation) and variance of the normal distribution, which are set to 0 and 0.1 in experiments. Dataset statistics of our four downstream tasks are summarized in Table 4. ", "page_idx": 15}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/2f6a449a7051ee9ccfbaacd38b9bff1f912b0f3afa72f41a7dc99a89813dec35.jpg", "table_caption": ["Table 4: Dataset statistics. $\\#\\Chi$ means the number of X. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "Settings. The proposed models are trained with the Adam optimizer [54], which are conducted on a single NVIDIA-SMI A100 GPU through PyTorch $1.13\\mathrm{+cul}\\,17$ and PyTorch Geometric 2.3.1 with CUDA 11.2. The number of the initial feature channels is 256. The learning rate is set to 0.001. The radius threshold increases from 4 to 16, and $l$ is set to 11. For the number of pooling layers that are related to the depth of the network, we employ the grid search trick to search suitable hyperparameters for them. There are four pooling layers that are sufficient to achieve satisfactory results; every two message-passing layers are followed by an average pooling layer. Thus, there are eight message-passing layers. In detail, the sequence average pooling functions perform customized average pooling operations on the input tensors based on the calculated indices (dividing the length of the sequence by 2 and flooring the result). It aggregates and summarizes information from the input tensors using scatter operations to produce the output tensors. As for the batch size and training epochs, etc., which influence the convergence speed of deep learning models, we also adopt the grid search method to get a group of values; the details are shown in Table 5. ", "page_idx": 15}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/c4e84dd7a4f788bad3d1ee45a3c47ee49b0ca92ae11dc3514561205643ca4123.jpg", "table_caption": ["Table 5: More details of training setup "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "G Evaluation Metric ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "$\\mathrm{F_{max}}$ is calculated by first determining the precision and recall for each protein, then averaging these results over all proteins [14, 17, 28]. $p_{i}^{j}$ is the prediction probability for the $j$ -th class of the $i$ -th protein, given the decision threshold $t\\in[0,1]$ , the precision and call are give as: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathrm{precision}_{i}(t)=\\frac{\\sum_{j}\\mathbb{I}[\\left(\\left(p_{i}^{j}\\geq t\\right)\\cap b_{i}^{j}\\right)]}{\\sum_{j}\\mathbb{I}[\\left(p_{i}^{j}\\geq t\\right)]}}\\\\ &{}&{\\mathrm{recall}_{i}(t)=\\frac{\\sum_{j}\\mathbb{I}[\\left(\\left(p_{i}^{j}\\geq t\\right)\\cap b_{i}^{j}\\right)]}{\\sum_{j}b_{i}^{j}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/a7ed7bfcd64b5d19cce6333a3ac2da3a12f30c1700c734dce738749e8e8fd5ce.jpg", "img_caption": ["Figure 8: The violin plot of the relationships of distances between sequence and structure on the fold and enzyme reaction classification and EC number prediction datasets. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "where $b_{i}^{j}\\in\\{0,1\\}$ is the corresponding binary class label, and $\\mathbb{I}\\in\\{0,1\\}$ is an indicator function. If there are $N$ proteins in total, then the average precision and recall are defined as: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{precision}(t)=\\frac{\\sum_{i}^{N}\\mathrm{precision}_{i}(t)}{\\sum_{i}^{N}\\left(\\left(\\sum_{j}\\left(p_{i}^{j}\\geq t\\right)\\right)\\geq1\\right)}}\\\\ &{\\quad\\mathrm{recall}(t)=\\frac{\\sum_{i}^{N}\\mathrm{recall}_{i}(t)}{N}}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Finally, $\\mathrm{F_{max}}$ is defined as the maximum value of $\\mathrm{F}\\cdot$ -score over all thresholds, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{F}_{\\mathrm{max}}=\\operatorname*{max}_{t}\\left\\{{\\frac{2\\cdot\\operatorname{precision}(t)\\cdot\\operatorname{recall}(t)}{\\operatorname{precision}(t)+\\operatorname{recall}(t)}}\\right\\}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "H Completeness Analysis ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Given a protein 3D graph $G=(\\nu,\\varepsilon,\\mathcal{P})$ , we capture the geometric representations based on the atoms\u2019 3D positions and use sequential and structural representations as the node and edge features. For a 3D structure, based on the definition of completeness and the rigorously demonstrated method to show the calculated geometries can achieve completeness for structures [15], we guarantee the completeness of the selected geometric representations at the amino acid and backbone levels of structures. ", "page_idx": 17}, {"type": "text", "text": "The geometric representations are SE(3) invariant (distances, angles) and SE(3) equivariant (directions, orientations). Therefore, it is natural for Eq. 3 to hold from right to left. To demonstrate Eq. 3 holding from left to right, we need to show ${\\mathcal{F}}(G)\\Rightarrow T_{g}({\\mathcal{P}})$ , where $T_{g}$ does not change the 3D conformation of a 3D graph. Thus, we need to show positions can be determined by ${\\mathcal{F}}(G)$ . ", "page_idx": 17}, {"type": "text", "text": "The base approach $\\mathrm{{CoupleNet}_{\\mathrm{{aa}}}}$ only considers the $\\mathrm{C}_{\\alpha}$ coordinates and constructs LCS for each residue. ${\\mathcal{F}}(G)_{a a}$ provides complete representations. First, when $n=1$ , it holds. Assume the case $n=k$ holds such that ${\\mathcal{F}}(G)_{a a}$ is complete. Then, we need to prove the case $n=k+1$ still holds. This is obvious because if $v_{j}$ is the $(k+1)$ -th node connected to node $v_{i}$ among the existing $k$ nodes, the LCS $Q_{j}$ can be easily obtained from $Q_{i}$ and ${\\mathcal{F}}(G)_{a a}$ . ", "page_idx": 17}, {"type": "text", "text": "When considering the backbone atoms $\\mathrm{C}_{\\alpha}$ , C, N, O, ${\\mathcal{F}}(G)_{a a}$ is complete. As shown in Figure 1, the remaining degree of freedom at the backbone level is the rotation angles $\\Phi_{i},\\Psi_{i},\\Omega_{i}$ based on the rigid bond lengths and angles. Such backbone torsion angles are calculated and concatenated with $\\mathbf{\\boldsymbol{x}}_{i,a a}$ into $\\pmb{x}_{i}$ . Besides, for any residues $i$ and $j$ , the calculated six inter-residue geometries fully define the relative locations of backbone atoms. Therefore, there are no other remaining degrees of freedom. Consequently, the obtained geometric representations at the backbone level are complete. ", "page_idx": 17}, {"type": "text", "text": "I Analysis of Imbalanced Class Experiments ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "The classes in the protein fold classification task tend to be imbalanced. This dataset contains 16,712 proteins with 1,195 fold classes, including three categories: Fold, SuperFamily, and Family. We provide the top 10 most frequent classes and the mean prediction accuracies on Fold, SuperFamily, and Family test sets. The results are presented in Table 6, where $\\#$ Class means the total number of samples of this class. From the table, we can find that the proposed model, CoupleNet, is not heavily affected by the category unbalance problem. For example, there are 1,254 proteins with 1,187 classes in the SuperFamily dataset. A large number of classes have only one protein sample, but we got a mean accuracy of 82.1 percent on SuperFamily. ", "page_idx": 17}, {"type": "image", "img_path": "0e5uOaJxo1/tmp/f2828322a1742377f8bcec8960f61300831d77ce0634ba5134e4ea33a8126a21.jpg", "img_caption": ["Figure 9: $\\mathrm{F_{max}}$ on GO term and EC number prediction under different cutoffs. "], "img_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "0e5uOaJxo1/tmp/0f5cd8819e2bf19beb86e3d519d0472ada0d2f278ab268ba4adb778583ff73d9.jpg", "table_caption": ["Table 6: Accuracy $(\\%)$ on fold classification, the top 10 most frequent classes, and the mean prediction accuracies are listed. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The abstract and introduction mentioned protein representation leaning, our design, results and findings. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 19}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: Limitations have been mentioned these in Section 5. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 19}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We provide complete protein representations, which is demonstrated in Section H. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 20}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: Dataset, models and settings are introduced in this paper. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 20}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Codes are in the supplementary material. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 21}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Experimental settings are introduced in Appendix F. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 21}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: Mean values of five different initializations are reported. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Computer resources are reported in Appendix F. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 22}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: we make sure to preserve anonymity. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 22}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: Potential Social impact is presented in Appendix D. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to ", "page_idx": 22}, {"type": "text", "text": "generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. ", "page_idx": 23}, {"type": "text", "text": "\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. \u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 23}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: the paper does not have such risks. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 23}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: The rightful owners of the assets utilized in this paper, including code, data, and models, are duly acknowledged and credited in accordance with ethical and academic standards. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 23}, {"type": "text", "text": "13. New Assets ", "page_idx": 23}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: This paper does not release new assets. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 24}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 24}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not involve such content. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 24}]