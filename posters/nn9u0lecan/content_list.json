[{"type": "text", "text": "ActFusion: a Unified Diffusion Model for Action Segmentation and Anticipation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Dayoung Gong Suha Kwak Minsu Cho ", "page_idx": 0}, {"type": "text", "text": "Pohang University of Science and Technology (POSTECH) {dayoung.gong, suha.kwak, mscho}@postech.ac.kr http://cvlab.postech.ac.kr/research/ActFusion ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Temporal action segmentation and long-term action anticipation are two popular vision tasks for the temporal analysis of actions in videos. Despite apparent relevance and potential complementarity, these two problems have been investigated as separate and distinct tasks. In this work, we tackle these two problems, action segmentation, and action anticipation, jointly using a unified diffusion model dubbed ActFusion. The key idea to unification is to train the model to effectively handle both visible and invisible parts of the sequence in an integrated manner; the visible part is for temporal segmentation, and the invisible part is for future anticipation. To this end, we introduce a new anticipative masking strategy during training in which a late part of the video frames is masked as invisible, and learnable tokens replace these frames to learn to predict the invisible future. Experimental results demonstrate the bi-directional benefits between action segmentation and anticipation. ActFusion achieves the state-of-the-art performance across the standard benchmarks of 50 Salads, Breakfast, and GTEA, outperforming task-specific models in both of the two tasks with a single unified model through joint learning. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In everyday life, when interacting with people, we anticipate their future actions while recognizing their actions observed in the present and the past. Similarly, for effective human-robot interaction, robotic agents must recognize ongoing actions while anticipating future behaviors. Two essential tasks in computer vision for such a temporal understanding of human actions are temporal action segmentation (TAS) [38, 19, 32, 61, 12, 65, 3, 43, 63, 8] and long-term action anticipation (LTA) [2, 34, 25, 45]. The task of TAS aims at translating observed video frames into a sequence of action segments, while the goal of LTA is to predict a plausible sequence of actions in the future based on the observed video frames. These tasks are closely related in terms of understanding the relations between actions; recognizing actions in the present and the past may improve anticipating action in the future, and the ability to anticipate the future may also enhance recognizing observable actions when facing visual ambiguities. ", "page_idx": 0}, {"type": "text", "text": "Despite the apparent relevance and potential complementarity, these two problems have been investigated as separate and distinct tasks. While a growing body of work has shown remarkable progress on both TAS and LTA, these methods are primarily designed for one task (see Fig. 1a) and show poor generalization when applied to the other (e.g., see FUTR [25] and DiffAct [43] in Fig. 1c). Some prior methods tackle both tasks simultaneously, but they rely on task-specific architectures and require separate training for each individual task (e.g., see TempAgg [52] in Fig. 1c). ", "page_idx": 0}, {"type": "text", "text": "In this paper, we introduce ActFusion, a unified diffusion model that addresses TAS and LTA through a single architecture and training process, as illustrated in Fig. 1b. The core idea of our unified approach is to train the model to effectively handle two different parts of the sequence: visible parts for action segmentation and invisible parts for action anticipation. Accordingly, we propose a new anticipative masking strategy in which a late part of the video frames is masked as invisible, and learnable tokens replace it. We also introduce a random masking strategy to help the model accurately identify actions when some parts of the video are ambiguous [59], drawing inspiration from previous methods [15, 6, 28, 59]. ActFusion generates action sequences from Gaussian noise through iterative denoising, conditioned on both visual features and mask tokens. Through this process, the model jointly learns to classify action labels of visual features and predict future actions of mask tokens. As shown in Fig. 1c, ActFusion achieves superior performance in both action segmentation and anticipation, demonstrating stronger cross-task generalization compared to previous methods [43, 25, 52]. ", "page_idx": 0}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/3af28469765b79627b3284665f7ac49f7985a4b6f38d375504c965082612d9aa.jpg", "img_caption": [], "img_footnote": [], "page_idx": 1}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/bbbc4394d4abdad0229bd2f5f299a36c0f59993618fed50968550abc0bc7edcb.jpg", "img_caption": ["Figure 1: Task-specific models vs. ActFusion (ours). (a) Conventional task-specific models for TAS and LTA. (b) Our unified model ActFusion to address both tasks. (c) Performance comparison across tasks. Tasks-specific models such as DiffAct [43] for TAS and FUTR [25] for LTA exhibits poor performance on cross-task evaluations. ActFusion outperforms task-specific models on both TAS and LTA, including TempAgg [52], which trains separate models for each task. Note that the performance of ActFusion is evaluation result of a single model through a single training process. The reported performance represents the average of each task in the original paper or evaluated with the official checkpoint (See Sec. F for details). ", "(c) evaluation on TAS & LTA "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Furthermore, we find that the benchmark evaluation of some prior LTA methods [2, 20, 25] has exploited the ground-truth length of input videos in testing time, which makes the evaluation unrealistic and problematic since the duration of future actions is supposed to be unknown in advance. To address this issue, we conduct comprehensive experiments both with and without ground-truth length information, providing insights into more realistic deployment scenarios. ", "page_idx": 1}, {"type": "text", "text": "Our contribution can be summarized as follows: 1) We introduce ActFusion, a unified diffusion model that jointly addresses TAS and LTA through a single training process. 2) We present anticipative masking for effective task unification, along with random masking to enhance robustness against visual ambiguities. 3) Comprehensive experimental results show that jointly learning both tasks provides bi-directional benefits. ActFusion achieves state-of-the-art performance on TAS and LTA across benchmark datasets - 50 Salads and Breakfast, and GTEA - demonstrating the effectiveness of the proposed method. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Temporal action segmentation (TAS). The goal of TAS [19, 65, 43, 63, 12, 23, 5, 8, 32, 3, 16] is to classify frame-wise action labels in a video. Earlier approaches employ temporal sliding windows [50, 33] for action segment detection, grammar-based methods [37, 36] have been introduced to incorporate a temporal hierarchy of actions during segmentation. Temporal convolution networks [38, 19] and Transformer-based models [65, 8] are introduced based on deep learning methods. Since learning long-term relations of actions from activity videos is challenging, a series of work has been proposed to develop refinement strategies [30, 32, 23, 12, 57, 63, 3, 24] that can be applied to the TAS models [19, 65]. Recently, DiffAct [43] is proposed to iteratively denoising action predictions conditioned on the input video features adopting the diffusion process. In a similar spirit, the proposed ActFusion is based on the diffusion process, focusing on unifying TAS and LTA through anticipative masking. We demonstrate the bidirectional beneftis between the two tasks, showing that learning segmentation along with anticipation is effective. ", "page_idx": 1}, {"type": "text", "text": "Long-term action anticipation (LTA). LTA [2, 1, 34, 20, 52, 25, 44, 26] has recently emerged as a crucial task for predicting a sequence of future actions in long-term videos. Initial models use RNNs and CNNs [2], while time-conditioned anticipation [34] introduces one-shot anticipation of specific future timestamps. A GRU-based model [20] used cycle-consistent relations of past and future actions. Sener et al. [52] proposed TempAgg, a multi-granular temporal aggregation method for action anticipation and recognition, utilizing different model architectures and task-specific losses for the two tasks. Gong et al. [25] propose a transformer model for parallel anticipation, dubbed FUTR, empirically showing that learning action segmentation as an auxiliary task is helpful for anticipation. Nawhal et al. [44] propose a two-stage learning approach for LTA and Zhang et al. [66] present object-centric representations using visual-language pre-trained models for LTA. While previous work [52, 20, 25, 44] adopts TAS as an auxiliary task to help learn LTA, a unified model evaluated on both tasks is rarely explored, often showing poor cross-task generalization performance (Fig. 1c). The exception is TempAgg, which requires separate training and model architecture for the two tasks. In this work, we present a unified model that tackles both TAS and LTA in a single training process. ", "page_idx": 2}, {"type": "text", "text": "Diffusion models. Recent success in denoising diffusion models [55, 29, 56] opens a new era of computer vision research. The diffusion models learn the original data distribution through the iterative denoising process. Diffusion models have recently shown notable success in various domains, such as image generation [51, 14], video generation [42, 27, 64], object detection [13], semantic segmentation [7], temporal action segmentation [43], self-supervised learning [62], and etc [18]. Recently, DiffMAE [62] integrates masked autoencoders with the diffusion models, where the model learns to denoise masked input while learning data distributions through generative pre-training of visual representations. In this work, we present a unified diffusion model that effectively integrates TAS and LTA through masking, where the model learns to denoise action labels conditioned on both visual and mask tokens. In this way, the model can effectively learn temporal relations between actions by classifying visual tokens and inferring missing actions of the mask tokens. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminary ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we give a brief overview of diffusion models [29, 54]. The diffusion models learn a data distribution by mapping and denoising noises from the original data distribution. The training process of diffusion models involves forward and reverse processes from random noise. During the forward process, Gaussian noise is added to the original data, while in the reverse process, a neural network learns to reconstruct the original data by iteratively removing noise. ", "page_idx": 2}, {"type": "text", "text": "The forward process, also known as the diffusion process, transforms the original data $x^{0}$ into noisy data $x^{s}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\nx^{s}=\\sqrt{\\gamma(s)}x^{0}+\\sqrt{1-\\gamma(s)}\\epsilon.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Here, a noise $\\epsilon\\,\\sim\\,N(0,{\\bf I})$ is added to the original data distribution $x^{0}$ following the decreasing function $\\gamma(s)$ of time step $s\\in\\{1,2,...,S\\}$ , where $S$ represents the entire forward time-step. Note that the function $\\gamma(s)$ determines the intensity of the noise added to the original data following the pre-defined variance schedule [29]. ", "page_idx": 2}, {"type": "text", "text": "In the reverse process, a neural network $f(x^{s},s)$ is trained to recover the original data $x^{0}$ from noisy data $x^{s}$ using $l_{2}$ regression loss: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\frac{1}{2}||f(x^{s},s)-x^{0}||^{2}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "During inference, the model $f$ iteratively denoises pure noise $x^{S}$ to reconstruct the original data $x^{0}$ , i.e., $x^{\\check{S}}\\to x^{S-\\Delta}\\to\\ldots\\to x^{\\check{0}}$ , following the updating rule [29, 54]. We refer the reader to [29, 54] and Sec. A for more details. ", "page_idx": 2}, {"type": "text", "text": "In our context, the neural network learns to generate action sequences from Gaussian noise, conditioned on visible features for action segmentation and mask tokens for action anticipation. ", "page_idx": 2}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/833f254a61f69863a2301554596b755183259d8edb4a68b44b2a739123744a83.jpg", "img_caption": ["Figure 2: Overall pipeline of ActFusion. During training, we randomly select one of five masking strategies and apply it to input video frames $\\pmb{F}$ , replacing masked regions with learnable tokens to obtain masked features $F^{\\prime}$ . These features are processed by the encoder $g$ to produce visual embeddings $\\pmb{E}$ , which condition the decoder $h$ to denoise action labels from $A^{s}$ to $\\hat{A}^{0}$ at time-step $s$ . For inference, we use different masking strategies depending on the task: no masking for TAS and anticipative masking for LTA. The decoder then iteratively denoises action labels following A\u02c6S \u2192A\u02c6S\u2212\u2206\u2192... \u2192A\u02c60 using the DDIM update rule [54]. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "4 Proposed approach ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this section, we present ActFusion, our unified diffusion model for action segmentation and anticipation. We first describe the problem setup in Sec. 4.1, followed by the model architecture in Sec. 4.2. We then introduce our masking strategies in Sec. 4.3 and training objectives in Sec. 4.4. ", "page_idx": 3}, {"type": "text", "text": "4.1 Problem setup ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Temporal action segmentation (TAS) aims to classify input video frames into a sequence of predefined action classes, while long-term action anticipation (LTA) predicts future actions based on partially observed video sequences. Formally, given a video sequence $\\pmb{F}=[F_{1},F_{2},\\cdots,F_{T}]$ of length $T$ , TAS predicts frame-wise action labels $\\mathbf{\\bar{A}}=[A_{1},A_{2},\\cdot\\cdot\\cdot,A_{T}]$ , where each $A_{i}$ is a one-hot vector representing the action class. In LTA, given the first $N^{\\mathrm{O}}\\,=\\,\\lceil\\alpha T\\rceil$ observed frames, the goal is to anticipate action labels for the subsequent $N^{\\mathrm{A}}=\\lceil\\beta T\\rceil$ frames, where $\\alpha\\in[0,1]$ and $\\beta\\in[0,1-\\alpha]$ represent the observation and anticipation ratios, respectively. Here, $\\lceil\\cdot\\rceil$ denotes the ceiling function. ", "page_idx": 3}, {"type": "text", "text": "4.2 ActFusion ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "ActFusion aims to unify TAS and LTA by leveraging an encoder-decoder architecture with adaptive masking strategies. Figure 2 illustrates the overall pipeline, where ActFusion consists of a masked encoder $g$ and a denoising decoder $h$ . The encoder obtains visual features and mask tokens as input and generates embedded tokens as output. The decoder then progressively reduces noises through an iterative denoising process conditioned on the embedded tokens. ", "page_idx": 3}, {"type": "text", "text": "During training, we randomly sample a time step $s\\in\\{1,2,...,S\\}$ for each iteration and add noise $\\epsilon\\sim\\bar{N}(0,{\\bf I})$ to the ground-truth action labels $A^{0}$ following Eq. 1, resulting in noisy action labels $A^{s}$ . The decoder then aims to denoise $A^{s}$ to reconstruct the original action labels $\\hat{A}^{0}$ . During inference, the decoder starts with Gaussian noise $\\hat{A}^{S}$ and progressively denoises it following the DDIM [54] update rule to generate final predictions $\\hat{A}^{0}$ , i.e., $\\hat{\\pmb{A}^{S}}\\rightarrow\\hat{\\pmb{A}^{S-\\Delta}}\\rightarrow...\\rightarrow\\hat{\\pmb{A}^{0}}$ . ", "page_idx": 3}, {"type": "text", "text": "The key to our unified approach lies in training the model to effectively process both visible and invisible parts of the sequence, where the visible part corresponds to observed video frames and the invisible part represents future frames to be anticipated. To this end, we introduce anticipative masking that replaces unobserved frames with learnable mask tokens, enabling the model to learn future predictions. We apply this masking strategy consistently during both training and inference to achieve joint learning of action segmentation and anticipation. We further incorporate random ", "page_idx": 3}, {"type": "text", "text": "masking, where video frames are randomly masked to enhance robustness against visual ambiguities.   \nBoth masking strategies are detailed in Sec. 4.3. ", "page_idx": 4}, {"type": "text", "text": "Input structuring. Given input video features $\\b{F}\\in\\mathbb{R}^{T\\times C}$ with $T$ frames of $C$ feature dimensions, we start by defining a binary mask matrix $M\\in\\{0,1\\}^{T\\times1}$ . This mask serves as a frame selector, where a value of 0 indicates a frame to be masked and replaced by mask tokens, while a value of 1 indicates an unmasked frame. The learnable mask token, denoted as $m\\in\\mathbb{R}^{1\\times C}$ , replaces the visual features in frames selected for masking, producing the input features $F^{\\prime}$ for the encoder: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\pmb{F}^{\\prime}=\\pmb{F}\\odot\\pmb{M}+(\\mathbf{1}_{T\\times C}-\\pmb{M})\\odot\\pmb{m},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\odot$ denotes element-wise multiplication, and $\\mathbf{1}_{i\\times j}$ represents a matrix of ones with dimensions $i\\times j$ . Here, $_M$ is broadcasted along the channel dimension and $\\mathbf{\\nabla}m$ is broadcasted along the temporal dimension to match the size of $\\pmb{F}$ . ", "page_idx": 4}, {"type": "text", "text": "For our model architecture, we use a modified version of ASFormer [65] as used in DiffAct [43], which employs dilated attention to capture both local and global relations in the input sequence (See Fig. S2 for the detailed model architecture). ", "page_idx": 4}, {"type": "text", "text": "Encoder. The encoder consists of the $N^{\\mathrm{E}}$ layers, each consisting of a dilated 1-d convolution followed by instance normalization, dilated attention, and a feed-forward network [65]. In the dilated attention mechanism, the receptive field is limited to a local window size $w=2^{i}$ for the $i$ -th layer, where the increasing dilation captures progressively broader temporal relations. The output of each layer is combined with its input via a residual connection before proceeding to the subsequent layer. Given the input features $F^{\\prime}$ , the encoder $g$ produces embedded tokens $E\\in\\mathbb{R}^{T\\times D}$ as: ", "page_idx": 4}, {"type": "equation", "text": "$$\nE=g(F^{\\prime}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $D$ represents the dimensions of embedded tokens. A fully-connected (FC) layer $W^{\\mathrm{enc}}\\in$ $\\mathbb{R}^{D\\times K}$ is applied to $\\boldsymbol{E}$ to obtain frame-wise classification logits from the encoder followed by a softmax: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{A}^{\\mathrm{enc}}=\\sigma(E W^{\\mathrm{enc}}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $K$ is the number of action classes and $\\sigma$ is the softmax. ", "page_idx": 4}, {"type": "text", "text": "Decoder. The decoder is composed of $N^{\\mathrm{D}}$ sequential layers. Each layer consists of dilated 1-d convolution, dilated attention, instance normalization, and feed-forward networks. As in the encoder, the dilation ratio for the $i$ -th layer is set to $w=2^{i}$ . The output of each layer is combined with its input through a residual connection before being passed into the subsequent layer. ", "page_idx": 4}, {"type": "text", "text": "Given a time step $s$ , noisy action labels $A^{s}$ at time step $s$ , and encoder embeddings $\\pmb{E}$ , the decoder $h$ produces output embeddings $\\mathbf{\\deltaY}$ according to: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\pmb{Y}=h(\\pmb{A}^{s},s,\\pmb{E}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The final action label predictions $\\hat{A}^{0}$ are obtained by projecting $\\mathbf{Y}$ through a fully-connected layer $W^{\\mathrm{dec}}\\in\\mathbb{R}^{D\\times K}$ followed by softmax: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{\\pmb{A}}^{0}=\\sigma(\\pmb{Y}\\pmb{W}^{\\mathrm{dec}}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "4.3 Masking strategy ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We introduce two distinct masking strategies: anticipative masking and random masking. ", "page_idx": 4}, {"type": "text", "text": "Anticipative masking. Anticipative masking enables joint learning of TAS and LTA by separating visible and invisible parts of the input sequence. This strategy masks the latter portion of video frames, requiring the model to predict future actions based on observed frames. Given a video length $T$ , we define a binary anticipation mask $M^{\\tt A}\\in\\{0,1\\}^{T}$ that sets visible frames to 1 and invisible frames to $\\u)\\colon M_{i}^{\\tt A}=\\mathbb{1}\\left(i\\leq N^{\\mathrm{O}}\\right)$ , where $\\mathbb{1}$ is an indicator function and $N^{\\mathrm{{o}}}$ represents the number of observed frames. Unlike causal masking [60] that prevents attending to future tokens, our anticipative masking allows interactions among visible tokens while maintaining a clear boundary for anticipation. ", "page_idx": 4}, {"type": "text", "text": "Random masking. Random masking aims to provide robustness in prediction when parts of video frames are missing or ambiguous [59]. A video is first divided into pre-defined clips of size $Q$ , resulting in $N^{\\mathrm{P}}=\\left\\lceil\\frac{T}{Q}\\right\\rceil$ total clips. Then, $N^{\\tt R}$ clips are randomly selected to be masked. A binary random mask is defined by $M_{i}^{\\tt R}=\\mathbb{1}(\\exists j\\in\\mathbb{P}$ , $(j-1)Q<i\\leq j Q)$ , where $\\mathbb{P}$ is a randomly selected subset of $\\{1,\\cdot\\cdot\\cdot,N^{\\mathrm{P}}\\}$ with $|\\mathbb{P}|=N^{\\tt R}$ . ", "page_idx": 4}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/8dd197b65e261002170028827ad810115bff5162066e2687767814f46b542ae1.jpg", "table_caption": ["Table 1: Comparison with state of the art on TAS. The overall results demonstrate the efficacy of ActFusion on TAS, achieving state-of-the-art performance across benchmark datasets. Bold values represent the highest accuracy, while underlined values indicate the second-highest accuracy. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "For fully observable scenarios, we adopt a no mask strategy $M^{\\mathbb{N}}$ where all frames remain visible. Additionally, we adopt two masking strategies [43], the relation mask $M^{\\mathrm{s}}$ and the boundary mask $M^{\\tt B}$ , as illustrated in Fig. 2. The relation mask $M^{\\mathrm{s}}$ randomly masks segments associated with an action class to learn inter-action dependencies. The boundary mask ${\\bar{M}}^{\\tt B}$ masks frames at action transitions to enhance boundary detection. See Sec. C for the detailed formulations of the masks. ", "page_idx": 5}, {"type": "text", "text": "During training, one of five masking strategies is randomly selected: no mask $M^{\\mathbb{N}}$ , anticipative mask $M^{\\tt A}$ , random mask $M^{\\tt R}$ , relation mask $M^{\\breve{\\mathtt{S}}}$ , and boundary mask $M^{\\tt B}$ . For inference, no mask $M^{\\mathbb{N}}$ is used for TAS and anticipative mask $M^{\\tt A}$ for LTA. ", "page_idx": 5}, {"type": "text", "text": "4.4 Training objective ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The model is trained with three types of losses: cross-entropy loss $\\mathcal{L}^{\\mathrm{ce}}$ for frame-wise classification, boundary smoothing loss $\\mathcal{L}^{\\mathrm{smo}}$ [19], and boundary alignment loss $\\mathcal{L}^{\\mathrm{bd}}$ [43]. These losses are applied to both encoder and decoder, where the encoder serves as an auxiliary task to enhance discrimination ability. Given the ground-truth action label $A^{0}\\in\\mathbb{R}^{T\\times K}$ and the predictions $\\hat{A}\\in\\mathbb{R}^{T\\times K}$ , the cross entropy loss is defined by: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{ce}}(A^{0},\\hat{\\mathbf{A}})=-\\sum_{i=1}^{T}\\sum_{j=1}^{K}\\mathbf{A}_{i,j}^{0}\\log\\hat{A}_{i,j}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "To prevent over-segmentation errors, a temporal smooth loss [19] between adjacent frames based on a truncated mean squared error over the frame-wise log probabilities are defined by: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{smo}}(\\hat{A})=\\frac{1}{(T-1)K}\\sum_{i=1}^{T-1}\\sum_{j=1}^{K}(\\log\\hat{A}_{i,j}-\\log\\hat{A}_{i+1,j})^{2},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where the difference of the log probabilities of two adjacent frames is truncated with a threshold value. For precise boundary detection, the boundary alignment loss [43] is employed based on the binary cross-entropy loss: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal L_{\\mathrm{bd}}(\\bar{\\boldsymbol{B}},\\hat{\\boldsymbol{A}})=\\frac{1}{T-1}\\sum_{i=1}^{T-1}\\{-\\bar{B}_{i}\\log(1-\\hat{A}_{i}\\cdot\\hat{A}_{i+1})-(1-\\bar{B}_{i})\\log(\\hat{A}_{i}\\cdot\\hat{A}_{i+1})\\},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/235ae3e906a19e45617352cf8874408abd4519fd0ea3f01d0ae7a91662086781.jpg", "table_caption": ["Table 2: Comparison with the state of the art on LTA. The overall results demonstrate the effectiveness of ActFusion, achieving new SOTA performance in LTA. Bold values represent the highest accuracy, while underlined values indicate the second-highest accuracy. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "where $\\bar{\\boldsymbol{B}}=\\kappa(\\boldsymbol{B})$ represents a softened version of the ground-truth action boundary $B_{i}=\\mathbb{1}(A_{i}^{0}\\neq$ $A_{i+1}^{0}$ ), achieved through a Gaussian kernel $\\kappa$ . The encoder and decoder losses are defined by ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}^{\\mathrm{enc}}=\\lambda_{\\mathrm{ce}}^{\\mathrm{enc}}\\mathcal{L}_{\\mathrm{ce}}^{\\mathrm{enc}}(A^{0},\\hat{A}^{\\mathrm{enc}})+\\lambda_{\\mathrm{smo}}^{\\mathrm{enc}}\\mathcal{L}_{\\mathrm{smo}}^{\\mathrm{enc}}(\\hat{A}^{\\mathrm{enc}})+\\lambda_{\\mathrm{bd}}^{\\mathrm{enc}}\\mathcal{L}_{\\mathrm{bd}}^{\\mathrm{enc}}(\\bar{B},\\hat{A}^{\\mathrm{enc}}),}\\\\ {\\mathcal{L}^{\\mathrm{dec}}=\\lambda_{\\mathrm{ce}}^{\\mathrm{dec}}\\mathcal{L}_{\\mathrm{ce}}^{\\mathrm{dec}}(A^{0},\\hat{A}^{\\mathrm{dec}})+\\lambda_{\\mathrm{smo}}^{\\mathrm{dec}}\\mathcal{L}_{\\mathrm{smo}}^{\\mathrm{dec}}(\\hat{A}^{\\mathrm{dec}})+\\lambda_{\\mathrm{bd}}^{\\mathrm{dec}}\\mathcal{L}_{\\mathrm{bd}}^{\\mathrm{dec}}(\\bar{B},\\hat{A}^{\\mathrm{dec}}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\lambda$ denotes a scaling factor. The total loss is defined as $\\mathcal{L}^{\\mathrm{total}}=\\mathcal{L}^{\\mathrm{enc}}+\\mathcal{L}^{\\mathrm{dec}}$ . ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we conduct experiments to demonstrate the effectiveness of our model. All reported experimental results are obtained from inference using a single unified model. We evaluate our method on three widely-used benchmark datasets: 50 Salads [58], Breakfast [36], and GTEA [21] (see Sec. F for details). All three datasets are used to evaluate on TAS, while 50 Salads and Breakfast are used for evaluating LTA, following the protocols of the previous work [19, 65, 43, 20, 52, 25]. ", "page_idx": 6}, {"type": "text", "text": "Evaluation metrics. For evaluation metrics for TAS, we report ${\\mathrm{F}}1@\\{10,25,50\\}$ scores, the edit score, and frame-wise accuracy [19, 65, 43]. The F1 scores and the edit score are segment-wise metrics, and accuracy is a frame-wise metric. Mean over classes accuracy (MoC) is adopted as an evaluation metric for LTA [2, 34, 52, 25]. ", "page_idx": 6}, {"type": "text", "text": "Implementation details For input video features, we utilize the pre-trained I3D features [9] for all datasets provided by [19]. We set a sampling stride of frames to 8, 1, and 1 for 50 Salads, Breakfast, and GTEA, respectively. For the diffusion process, we set the entire time step $S$ as 1000 [29, 54], with a skipped time step for inference set to 25 [54]. For the anticipation mask $M^{\\tt A}$ , we set the observation ratio $\\alpha\\in\\{0.2,0.3,0.4,0.5,0.6,0.7,0.8\\}$ . For the random mask $M^{\\tt R}$ , we fix the size of patch $w$ to 10 for both tasks and randomly select the number of masked patches $N^{\\tt R}$ to 25, 10, and 20 for 50 Salads, Breakfast, and GTEA. For the encoder and decoder, we adopt a modified version of ASFormer [65] with using relative positional bias where the maximum number of neighbor is set to 100. During inference, we set $\\alpha$ to 1 and $\\beta$ to 0 for TAS [65, 19, 43]. For LTA, we set $\\bar{\\alpha}\\in\\{0.2,0.3\\}$ and $\\beta\\in\\{0.1,0.2,0.3,0.5\\}.$ , following the evaluation protocols [2, 20, 52, 25]. See Sec. F for more details. ", "page_idx": 6}, {"type": "text", "text": "5.1 Comparison with the state of the art on TAS and LTA ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Table 1 and 2 present comparisons of the proposed method with state-of-the-art models on TAS and LTA across benchmark datasets, respectively. We report the performance of a single unified model on both tasks for each dataset. In Table 1, ActFusion achieves state-of-the-art performance across benchmark datasets, where the average scores of the performance outperform all the other task-specific models. Compared to DiffAct, which mainly focuses on learning TAS, ActFusion demonstrates better performance, showing the effectiveness of joint learning TAS with LTA. ", "page_idx": 6}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/63f16842e84d677b6a73b76c0bae929a1e099bfca0781f71dcc171ae8f6268f7.jpg", "table_caption": ["Table 3: Segmentation helps anticipation "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/24b61de8e4b1b7474f57dd6c79ed285770d1d0a9ffb2296554140eab68bf87e5.jpg", "table_caption": ["Table 4: Ablation studies on masking ", "(b) Results on LTA "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Table 2 shows the result for LTA, with the table divided into two sections based on the dataset, and each section further divided into two subsections based on the input type. The first subsection shows the results using prediction results of the visual features [2] from [49], while the second subsection compares the model using pre-trained I3D features [9] as input. Overall, ActFusion achieves stateof-the-art performance on two benchmark datasets, demonstrating the efficacy of joint learning for TAS and LTA based on the diffusion process. Note that we do not include the performance of ANTICIPATR [44] due to differences in evaluation ranges, as reported in [67], where they employ different prediction ranges for evaluation. Tables 1 and 2 show that our single unified model outperforms task-specific approaches on both TAS and LTA tasks. ", "page_idx": 7}, {"type": "text", "text": "5.2 Analysis ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We conduct comprehensive analyses to validate the effectiveness of the proposed method. In the following experiments, we evaluate our approach on the 50 Salads dataset. All experimental settings are the same as explained in Sec. 5 unless otherwise specified. ", "page_idx": 7}, {"type": "text", "text": "Segmentation helps anticipation. To validate the impact of learning TAS on LTA, we conduct loss ablation experiments by removing the action segmentation loss on the observed $\\alpha T$ frames. Table 3 shows the results. Specifically, we exclude the encoder loss $\\mathcal{L}^{\\mathrm{enc}}$ in Eq. 11, while omitting the decoder loss $\\mathcal{L}^{\\mathrm{dec}}$ in Eq. 12 on the observed frames. For simplicity, we denote the decoder loss for the observed frames and unobserved frames as $\\mathcal{L}_{\\mathrm{o}}^{\\mathrm{dec}}$ and $\\mathcal{L}_{\\mathrm{u}}^{\\mathrm{dec}}$ , respectively. Note that $\\mathcal{L}_{\\mathrm{u}}^{\\mathrm{dec}}$ are utilized for effective anticipation learning. By comparing (1) and (3) in Table 3, we observe a significant performance drop when removing the loss on the observed frames. We observe that applying segmentation loss on the observed frames in the decoder improves performance when comparing (1) and (3). The overall results show that learning action segmentation plays a crucial role in improving action anticipation. ", "page_idx": 7}, {"type": "text", "text": "Anticipation helps segmentation. To validate the effect of jointly learning anticipation along with segmentation, we conduct ablation studies on anticipative masking $M^{\\tt A}$ in Table 4. Comparing (1) and (2) in Table 4a, we find that using anticipation masking helps improve the performance of TAS. In comparison to the results in Table 4, where segmentation greatly enhances anticipation, the performance improvement without using anticipation masking is slightly lower. Nevertheless, we find that anticipation does contribute positively to the overall metrics of segmentation. ", "page_idx": 7}, {"type": "text", "text": "Ablation studies on masking types. To evaluate the effects of different types of masking on TAS and LTA, we conduct ablation studies in Table 4. The performance on TAS and LTA are presented in Table 4a and 4b, respectively. We observe that anticipative masking $M^{\\tt A}$ plays a significant role in the joint learning of TAS and LTA, as evidenced by the substantial performance drop in LTA when comparing row (2) with the other rows in Table 4b. Random masking $M^{\\tt R}$ significantly reduces performance in both TAS and LTA, as shown in row (3) of Table 4. Furthermore, the use of boundary masking $M^{\\tt B}$ and relation masking $M^{\\mathrm{s}}$ is also essential for both tasks. Due to the limited space, we only report the performance on LTA when the observation ratio $\\alpha$ is set to 0.3. ", "page_idx": 7}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/3d66c09f7f205f7bf28eece05081b037436f75ea0bd7403aefa211f927820a47.jpg", "img_caption": ["Figure 3: The number of masked clips ", "Figure 4: Inference steps of diffusion process "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Effects of learnable mask tokens. To verify the effects of learnable mask tokens $\\mathbf{\\nabla}m$ , we replace $\\mathbf{\\nabla}m$ with zeros that are not learnable. Table 5 shows the overall results. Comparing rows (1) and (2) in Table 5, we find that using learnable mask tokens is more effective for both TAS and LTA. We conjecture that this is due to the mask tokens being embedded with the visual tokens within the encoder, which aids in effectively anticipating the invisible parts. ", "page_idx": 8}, {"type": "text", "text": "Position of mask tokens. Instead of providing mask tokens as input to the encoder, we conduct experiments on providing mask tokens as input to the decoder, as shown in row (3) in Table 5. In this experiment, only the visible frames are given as input to the encoder, and mask tokens $m\\in\\mathbb{R}^{1\\times D}$ are broadcasted to be concatenated to the embedded features $\\boldsymbol{E}$ and reorganized to the original masked positions, similar to masked auto-encoder [28]. Comparing rows (2) and (3) in Table 5, we find that using mask tokens in the encoder is more effective than using them in the decoder. We conjecture that embedding the mask token with the visual tokens via the encoder is beneficial for joint learning of TAS and LTA. Additionally, if mask tokens are provided as input to the decoder, they cannot receive the encoder loss $\\mathcal{L}^{\\mathrm{enc}}$ at all, which may degrade performance. ", "page_idx": 8}, {"type": "text", "text": "The number of masked clips in random masking. To determine the number of masked clips $N^{\\tt R}$ in random masking, we conduct experiments by adjusting $N^{\\tt R}$ from 10 to 100 while fixing the window size $Q$ of each masked clip $N^{\\mathrm{P}}$ to 10. Figure 3 illustrates the result, suggesting that employing an appropriate amount of masking is crucial. ", "page_idx": 8}, {"type": "text", "text": "The number of inference steps in the diffusion process. We compare performance according to the number of inference steps of the diffusion process in Fig. 4. We observe consistent performance increases as the number of inference steps increases. As the increasing step requires more computation, we choose to use 25 steps for inference in all of our experiments. ", "page_idx": 8}, {"type": "text", "text": "5.3 Qualitative results ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Figure 5 presents qualitative results from ActFusion, evaluated on both TAS and LTA using a single model. The figure includes video frames, ground-truth action sequences, and predicted results for TAS and LTA. For LTA, only the visible parts (observed frames) are used as input. The results show that ActFusion effectively handles both visible and future segments, accurately classifying current actions and anticipating future ones. Additional results are provided in FiguresS3 and S4. ", "page_idx": 8}, {"type": "text", "text": "5.4 Evaluation without using ground truth prediction length on LTA ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Benchmark evaluations in previous work, including those of [20, 25] and our results presented above, have been typically conducted following the evaluation protocol of [2] where prediction length $N^{\\mathrm{A}}$ is set to $\\beta T$ in testing; $\\beta$ and $T$ are the prediction ratio and the ground-truth video length, respectively. This can be seen as a leakage of ground-truth information in testing because the exact length of future actions is supposed to be inherently unknown during inference in real-world scenarios. In this subsection, we thus rectify the evaluation setting by determining the prediction length as $r N^{\\mathrm{O}}$ based solely on the number of observed frames $N^{\\mathrm{O}}$ , where $r$ is a hyperparameter that adjusts the relative length of future predictions. We then train our method with this modified anticipation masking strategy, denoted as ActFusion\u2020. In this experiment, $r$ is set to 4. ", "page_idx": 8}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/2c7677a609656464e2655f9aa05b3835af86aa2d26261159bec30038c074e23b.jpg", "img_caption": ["Figure 5: Qualitative results "], "img_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/e4bc0ef5a30fb6dc288965bd38f415541436b1829e2984ace549f9fd5ca910e4.jpg", "table_caption": ["Table 6: Evaluation without using ground truth prediction length on LTA "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Using the rectified evaluation protocol, we compare ours with Cycle Cons. [20] and FUTR [25], whose codes are available1. For a fair comparison, we modify both models to use the same prediction length $r N^{\\mathrm{O}}$ , denoted as Cycle Cons.\u2020 and $\\mathrm{FUTR}^{\\dagger}$ . The results are summarized in Table 6 where the numbers in parentheses indicate relative performance changes compared to those in Table 2. Table 6 shows that all the methods exhibit overall performance degradation when ground-truth length information is not used. These observations reveal that previous results have benefited from the use of ground-truth length $T$ , leading to information leakage in testing. Therefore, we suggest that future research avoid relying on this information for a more realistic and fair comparison. On the other hand, the results also show that our approach consistently outperforms the methods across benchmark datasets, demonstrating its effectiveness even without ground-truth prediction length information. Please refer to Sec. F for further details of the experimental setup. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We have presented ActFusion, a unified diffusion model that jointly addresses temporal action segmentation and long-term action anticipation in videos. The key to our method is anticipative masking, where learnable mask tokens replace unobserved frames, enabling simultaneous action segmentation of visible parts and anticipation of invisible parts. Our comprehensive experiments demonstrate that this unified approach not only outperforms existing task-specific models on both tasks but also reveals the mutual beneftis of joint learning. Additionally, by evaluating our method both with and without ground-truth length information during LTA inference, we hope to motivate future research toward not using this information during testing. We believe that ActFusion demonstrates the potential of unifying complementary tasks in temporal action understanding, opening new directions for future research. ", "page_idx": 9}, {"type": "text", "text": "7 Acknowledgement ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This work was supported by Samsung Electronics (IO201208-07822-01) and IITP grants (RS-2022- II220959: Few-Shot Learning of Causal Inference in Vision and Language for Decision Making $(50\\%)$ , RS-2022-II220264: Comprehensive Video Understanding and Generation with Knowledgebased Deep Logic Neural Network $(45\\%)$ , RS-2019-II191906: AI Graduate School Program at POSTECH $(5\\%)$ ) funded by Ministry of Science and ICT, Korea. We thank reviewers for pointing out the issue of the evaluation protocol and providing insightful discussions. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Y. Abu Farha and J. Gall. Uncertainty-aware anticipation of activities. In Proceedings of the IEEE/CVF International Conference on Computer Vision Workshops, pages 0\u20130, 2019.   \n[2] Y. Abu Farha, A. Richard, and J. Gall. When will you do what?-anticipating temporal occurrences of activities. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 5343\u20135352, 2018.   \n[3] H. Ahn and D. Lee. Refining action segmentation with hierarchical video representations. In Proc. IEEE International Conference on Computer Vision (ICCV), pages 16302\u201316310, 2021.   \n[4] N. Aziere and S. Todorovic. Multistage temporal convolution transformer for action segmentation. Image and Vision Computing, 128:104567, 2022.   \n[5] E. Bahrami, G. Francesca, and J. Gall. How much temporal long-term context is needed for action segmentation? In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10351\u201310361, 2023.   \n[6] H. Bao, L. Dong, S. Piao, and F. Wei. Beit: Bert pre-training of image transformers. arXiv preprint arXiv:2106.08254, 2021.   \n[7] D. Baranchuk, A. Voynov, I. Rubachev, V. Khrulkov, and A. Babenko. Label-efficient semantic segmentation with diffusion models. In International Conference on Learning Representations, 2021. [8] N. Behrmann, S. A. Golestaneh, Z. Kolter, J. Gall, and M. Noroozi. Unified fully and timestamp supervised temporal action segmentation via sequence to sequence translation. In Proc. European Conference on Computer Vision (ECCV), pages 52\u201368. Springer, 2022.   \n[9] J. Carreira and A. Zisserman. Quo vadis, action recognition? a new model and the kinetics dataset. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 6299\u20136308, 2017.   \n[10] L. Chen, M. Li, Y. Duan, J. Zhou, and J. Lu. Uncertainty-aware representation learning for action segmentation. In IJCAI, volume 2, page 6, 2022.   \n[11] M.-H. Chen, B. Li, Y. Bao, and G. AlRegib. Action segmentation with mixed temporal domain adaptation. In Proc. IEEE Winter Conference on Applications of Computer Vision (WACV), pages 605\u2013614, 2020.   \n[12] M.-H. Chen, B. Li, Y. Bao, G. AlRegib, and Z. Kira. Action segmentation with joint selfsupervised temporal domain adaptation. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 9454\u20139463, 2020.   \n[13] S. Chen, P. Sun, Y. Song, and P. Luo. Diffusiondet: Diffusion model for object detection. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 19830\u2013 19843, 2023.   \n[14] T. Chen, R. ZHANG, and G. Hinton. Analog bits: Generating discrete data using diffusion models with self-conditioning. In The Eleventh International Conference on Learning Representations, 2022.   \n[15] J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. In NAACL-HLT (1), 2019.   \n[16] G. Ding, F. Sener, and A. Yao. Temporal action segmentation: An analysis of modern techniques. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2023.   \n[17] Z. Du and Q. Wang. Dilated transformer with feature aggregation module for action segmentation. Neural Processing Letters, pages 1\u201317, 2022.   \n[18] W.-C. Fan, Y.-C. Chen, D. Chen, Y. Cheng, L. Yuan, and Y.-C. F. Wang. Frido: Feature pyramid diffusion for complex scene image synthesis. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 37, pages 579\u2013587, 2023.   \n[19] Y. A. Farha and J. Gall. Ms-tcn: Multi-stage temporal convolutional network for action segmentation. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 3575\u20133584, 2019.   \n[20] Y. A. Farha, Q. Ke, B. Schiele, and J. Gall. Long-Term Anticipation of Activities with Cycle Consistency. In Proc. German Conference on Pattern Recognition (GCPR). Springer, 2020.   \n[21] A. Fathi, X. Ren, and J. M. Rehg. Learning to recognize objects in egocentric activities. In CVPR 2011, pages 3281\u20133288. IEEE, 2011.   \n[22] C. Feichtenhofer, Y. Li, K. He, et al. Masked autoencoders as spatiotemporal learners. Advances in neural information processing systems, 35:35946\u201335958, 2022.   \n[23] S.-H. Gao, Q. Han, Z.-Y. Li, P. Peng, L. Wang, and M.-M. Cheng. Global2local: Efficient structure search for video action segmentation. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 16805\u201316814, 2021.   \n[24] D. Gong, J. Lee, D. Jung, S. Kwak, and M. Cho. Activity grammars for temporal action segmentation. Advances in Neural Information Processing Systems, 36, 2024.   \n[25] D. Gong, J. Lee, M. Kim, S. J. Ha, and M. Cho. Future transformer for long-term action anticipation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 3052\u20133061, 2022.   \n[26] A. Gupta, J. Liu, L. Bo, A. K. Roy-Chowdhury, and T. Mei. A-act: Action anticipation through cycle transformations. arXiv preprint arXiv:2204.00942, 2022.   \n[27] W. Harvey, S. Naderiparizi, V. Masrani, C. Weilbach, and F. Wood. Flexible diffusion modeling of long videos. Advances in Neural Information Processing Systems, 35:27953\u201327965, 2022.   \n[28] K. He, X. Chen, S. Xie, Y. Li, P. Doll\u00e1r, and R. Girshick. Masked autoencoders are scalable vision learners. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 16000\u201316009, 2022.   \n[29] J. Ho, A. Jain, and P. Abbeel. Denoising diffusion probabilistic models. In Proceedings of the 34th International Conference on Neural Information Processing Systems, pages 6840\u20136851, 2020.   \n[30] Y. Huang, Y. Sugano, and Y. Sato. Improving action segmentation via graph-based temporal reasoning. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 14024\u201314034, 2020.   \n[31] K. Ishihara, G. Nakano, and T. Inoshita. Mcfm: Mutual cross fusion module for intermediate fusion-based action segmentation. In 2022 IEEE International Conference on Image Processing (ICIP), pages 1701\u20131705. IEEE, 2022.   \n[32] Y. Ishikawa, S. Kasai, Y. Aoki, and H. Kataoka. Alleviating over-segmentation errors by detecting action boundaries. In Proc. IEEE Winter Conference on Applications of Computer Vision (WACV), pages 2322\u20132331, 2021.   \n[33] S. Karaman, L. Seidenari, and A. Del Bimbo. Fast saliency based pooling of fisher encoded dense trajectories. In ECCV THUMOS Workshop, volume 1, page 5, 2014.   \n[34] Q. Ke, M. Fritz, and B. Schiele. Time-conditioned action anticipation in one shot. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 9925\u20139934, 2019.   \n[35] G.-h. Kim and E. Kim. Stacked encoder\u2013decoder transformer with boundary smoothing for action segmentation. Electronics Letters, 58(25):972\u2013974, 2022.   \n[36] H. Kuehne, A. Arslan, and T. Serre. The language of actions: Recovering the syntax and semantics of goal-directed human activities. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 780\u2013787, 2014.   \n[37] H. Kuehne, A. Richard, and J. Gall. Weakly supervised learning of actions from transcripts. Computer Vision and Image Understanding, 163:78\u201389, 2017.   \n[38] C. Lea, M. D. Flynn, R. Vidal, A. Reiter, and G. D. Hager. Temporal convolutional networks for action segmentation and detection. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 156\u2013165, 2017.   \n[39] J. Li, P. Lei, and S. Todorovic. Weakly supervised energy-based learning for action segmentation. In Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV), October 2019.   \n[40] M. Li, L. Chen, Y. Duan, Z. Hu, J. Feng, J. Zhou, and J. Lu. Bridge-prompt: Towards ordinal action understanding in instructional videos. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 19880\u201319889, 2022.   \n[41] S.-J. Li, Y. AbuFarha, Y. Liu, M.-M. Cheng, and J. Gall. Ms-tcn $^{++}$ : Multi-stage temporal convolutional network for action segmentation. IEEE transactions on pattern analysis and machine intelligence, 2020.   \n[42] X. Li, W. Chu, Y. Wu, W. Yuan, F. Liu, Q. Zhang, F. Li, H. Feng, E. Ding, and J. Wang. Videogen: A reference-guided latent diffusion approach for high definition text-to-video generation. arXiv preprint arXiv:2309.00398, 2023.   \n[43] D. Liu, Q. Li, A.-D. Dinh, T. Jiang, M. Shah, and C. Xu. Diffusion action segmentation. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10139\u2013 10149, 2023.   \n[44] M. Nawhal, A. A. Jyothi, and G. Mori. Rethinking learning approaches for long-term action anticipation. In European Conference on Computer Vision, pages 558\u2013576. Springer, 2022.   \n[45] M. Nawhal and G. Mori. Activity graph transformer for temporal action localization. arXiv preprint arXiv:2101.08540, 2021.   \n[46] J. Park, D. Kim, S. Huh, and S. Jo. Maximization and restoration: Action segmentation through dilation passing and temporal reconstruction. Pattern Recognition, 129:108764, 2022.   \n[47] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, T. Killeen, Z. Lin, N. Gimelshein, L. Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information processing systems, 32, 2019.   \n[48] C. Raffel, N. Shazeer, A. Roberts, K. Lee, S. Narang, M. Matena, Y. Zhou, W. Li, and P. J. Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. Journal of machine learning research, 21(140):1\u201367, 2020.   \n[49] A. Richard, H. Kuehne, and J. Gall. Weakly supervised action learning with rnn based fineto-coarse modeling. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 754\u2013763, 2017.   \n[50] M. Rohrbach, S. Amin, M. Andriluka, and B. Schiele. A database for fine grained activity detection of cooking activities. In Proc. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 1194\u20131201. IEEE, 2012.   \n[51] R. Rombach, A. Blattmann, D. Lorenz, P. Esser, and B. Ommer. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[52] F. Sener, D. Singhania, and A. Yao. Temporal aggregate representations for long-range video understanding. In Proc. European Conference on Computer Vision (ECCV), pages 154\u2013171. Springer, 2020.   \n[53] P. Shaw, J. Uszkoreit, and A. Vaswani. Self-attention with relative position representations. arXiv preprint arXiv:1803.02155, 2018.   \n[54] J. Song, C. Meng, and S. Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2020.   \n[55] Y. Song and S. Ermon. Generative modeling by estimating gradients of the data distribution. Advances in Neural Information Processing Systems, 32, 2019.   \n[56] Y. Song, J. Sohl-Dickstein, D. P. Kingma, A. Kumar, S. Ermon, and B. Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2020.   \n[57] Y. Souri, Y. A. Farha, F. Despinoy, G. Francesca, and J. Gall. Fifa: Fast inference approximation for action segmentation. In Pattern Recognition: 43rd DAGM German Conference, DAGM GCPR 2021, Bonn, Germany, September 28\u2013October 1, 2021, Proceedings, pages 282\u2013296. Springer, 2022.   \n[58] S. Stein and S. J. McKenna. Combining embedded accelerometers with computer vision for recognizing food preparation activities. In Proceedings of the 2013 ACM international joint conference on Pervasive and ubiquitous computing, pages 729\u2013738, 2013.   \n[59] Z. Tong, Y. Song, J. Wang, and L. Wang. Videomae: Masked autoencoders are data-efficient learners for self-supervised video pre-training. Advances in neural information processing systems, 35:10078\u201310093, 2022.   \n[60] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, \u0141. Kaiser, and I. Polosukhin. Attention is all you need. Proc. Neural Information Processing Systems (NeurIPS), 30, 2017.   \n[61] Z. Wang, Z. Gao, L. Wang, Z. Li, and G. Wu. Boundary-aware cascade networks for temporal action segmentation. In Proc. European Conference on Computer Vision (ECCV), pages 34\u201351. Springer, 2020.   \n[62] C. Wei, K. Mangalam, P.-Y. Huang, Y. Li, H. Fan, H. Xu, H. Wang, C. Xie, A. Yuille, and C. Feichtenhofer. Diffusion models as masked autoencoders. arXiv preprint arXiv:2304.03283, 2023.   \n[63] Z. Xu, Y. S. Rawat, Y. Wong, M. Kankanhalli, and M. Shah. Don\u2019t pour cereal into coffee: Differentiable temporal logic for temporal action segmentation. In Advances in Neural Information Processing Systems (NeurIPS).   \n[64] R. Yang, P. Srivastava, and S. Mandt. Diffusion probabilistic modeling for video generation. Entropy, 25(10):1469, 2023.   \n[65] F. Yi, H. Wen, and T. Jiang. Asformer: Transformer for action segmentation. In Proc. British Machine Vision Conference (BMVC), 2021.   \n[66] C. Zhang, C. Fu, S. Wang, N. Agarwal, K. Lee, C. Choi, and C. Sun. Object-centric video representation for long-term action anticipation. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 6751\u20136761, 2024.   \n[67] Z. Zhong, M. Martin, M. Voit, J. Gall, and J. Beyerer. A survey on deep learning techniques for action anticipation. arXiv preprint arXiv:2309.17257, 2023. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this appendix, we offer detailed descriptions and additional results, which are omitted in the main paper due to the lack of space. We provide a detailed explanation of diffusion models in Sec. A, training and inference algorithms in Sec. B, more details of masking types in Sec. C, encoder and decoder layers in Sec. D, additional experimental results in Sec. E, datasets and implementation details in Sec. F, different evaluation setup of ANTICIPATR [44] in Sec. ??, codes in Sec. ??, more qualitative results in Sec. G, and discussions of limitations and broader impacts in Sec. H. ", "page_idx": 14}, {"type": "text", "text": "A Diffusion models ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we give an in-depth explanation of the diffusion models [29, 54] described in Sec. 3. The forward process adds noise to a data distribution $x^{0}\\sim q(x^{0})$ , following the noise distribution $q$ based on the Markov property. Specifically, the forward process is defined by adding noise at an arbitrary time step $s$ with a variance $\\gamma(s)$ as follows: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{q(x^{1},...,x^{S}|x^{0}):=\\displaystyle\\prod_{s=1}^{S}q(x^{s}|x^{s-1}),}}\\\\ {{q(x^{s}|x^{s-1}):=N(x^{s};\\sqrt{1-\\gamma(s)}x^{s-1},\\gamma(s){\\bf I}),}}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $S$ represents the entire time step. We can directly obtain the noisy data distribution $x^{s}$ at time step $s$ without iteratively applying $q$ due to the Markov property: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{q(x^{s}|x^{0}):=N(x^{s};\\sqrt{\\bar{\\delta}(s)}x^{0},(1-\\bar{\\delta}(s))\\mathbf{I}),}\\\\ &{\\quad\\quad\\quad x^{s}:=\\sqrt{\\bar{\\delta}(s)}x^{0}+\\sqrt{1-\\bar{\\delta}(s)}\\epsilon,}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\delta(s):=1-\\gamma(s)$ , $\\begin{array}{r}{\\bar{\\delta}(s):=\\prod_{i=1}^{s}\\delta(i)}\\end{array}$ , and $\\epsilon\\sim N(0,{\\bf I})$ . Instead of using $\\gamma(s),1-\\delta(s)$ is utilized [29]. The posterior $q(x^{s-1}|x^{s},x^{0})$ conforms to a Gaussian distribution and is expressed in terms of mean $\\tilde{m}^{s}\\bar{(}x^{s},x^{0})$ and variance $\\tilde{\\gamma}(s)$ using Bayes Theorem: ", "page_idx": 14}, {"type": "equation", "text": "$$\nq(x^{s-1}|x^{s},x^{0})=N(x^{s-1};\\tilde{m}(x^{s},x^{0}),\\tilde{\\gamma}(s)\\mathbf{I}),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\tilde{m}^{s}(x^{s},x^{0}):=\\displaystyle\\frac{\\sqrt{\\bar{\\delta}(s-1)}\\gamma(s)}{1-\\bar{\\delta}(s)}x^{0}+\\displaystyle\\frac{\\sqrt{\\delta(s)}(1-\\bar{\\delta}(s-1))}{1-\\bar{\\delta}(s)}x^{s},}}\\\\ {{\\tilde{\\gamma}(s):=\\displaystyle\\frac{1-\\bar{\\delta}(s-1)}{1-\\bar{\\delta}(s)}\\gamma(s).}}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "With a sufficiently large $S$ and an appropriate variance schedule $\\gamma(s)$ , the noisy data $x^{S}$ follows an isotropic Gaussian distribution. Consequently, if we know the reverse distribution $q(x^{s-1}|x^{s})$ , we can sample $x^{S}\\sim{\\cal N}(0,{\\bf I})$ and reverse the process to obtain a sample from $q(x^{0})$ . However, since $q(x^{s-\\bar{1}}|x^{s})$ relies on the entire data distribution, we employ a neural network to approximate $q(x^{s-1}|x^{s})$ as follows: ", "page_idx": 14}, {"type": "equation", "text": "$$\np_{\\theta}\\big(x^{s-1}|x^{s}\\big):=N\\big(x^{s-1};m_{\\theta}(x^{s},s),\\Sigma_{\\theta}(x^{s},s)\\big),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $m_{\\theta}$ and $\\Sigma_{\\theta}$ represent the predicted mean and co-variance, respectively, derived from the neural network. Predicting $\\epsilon$ or $x^{0}$ in Eq. 16 is found to be effective [29]. In this work, we choose to predict $x^{0}$ using the neural network. ", "page_idx": 14}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/177d0e1db582bee7dd3c9749775fcde93c71d9d3c750c04ddef1d6373f007553.jpg", "table_caption": [], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "B Algorithms ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We provide training algorithms of ActFusion in Alg. 1 and inference algorithms for TAS and LTA in Alg. 2 and Alg. 3, respectively. ", "page_idx": 15}, {"type": "text", "text": "Algorithm 2 ActFusion TAS Inference ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Algorithm 3 ActFusion LTA Inference ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "def inference(f, steps, S): 1I 1I 1I1 f: [B, T, C] steps: number of inference steps S: number of time steps 11 1111 # masking f_prime $=$ mask(f, \u2018none\u2019) # Encode video features e = encoder(f_prime) # sample noisy action label a_s $=$ normal(mean=0, std=1) # uniform sampling step size times $=$ reversed(linspace(-1, S, steps)) # [(S-1, S-2), (S-2, S-3), (1,0), (0,-1)] time_pairs $=$ list(zip(times[:-1],times[1:])) for t_now, t_next in zip(time_pairs): # predict a_0 from a_s a_hat $=$ decoder(a_s, e, t_now) # estimate a_s at t_next a_s $=$ ddim_step(a_s, a_hat, t_now, t_next) return a_hat ", "page_idx": 15}, {"type": "text", "text": "def inference(f, steps, S): f: [B, alpha\\*T, C] steps: number of inference steps S: number of time steps \"\"\" # masking f_prime $=$ mask(f, \u2018ant\u2019) # Encode video features e $=$ encoder(f_prime) # sample noisy action label a_s $=$ normal(mean=0, std=1) # uniform sampling step size times $=$ reversed(linspace(-1, S, steps)) # [(S-1, S-2), (S-2, S-3), ..., (1,0), (0,-1)] time_pairs $=$ list(zip(times[:-1],times[1:])) for t_now, t_next in zip(time_pairs): # predict a_0 from a_s a_hat $=$ decoder(a_s, e, t_now) # estimate a_s at t_next a_s $=$ ddim_step(a_s, a_hat, t_now, t_next) return a_hat ", "page_idx": 15}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/52c35b1e9deaf890775ece2bfd566c5a9f138a44d7d37618946dde517bb94133.jpg", "img_caption": ["Figure S1: Masking types "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/27320c5a31ed6a2d3f0156baa20404517a707f508049485bf3d8fbcf45b72c72.jpg", "img_caption": ["Figure S2: Encoder & decoder layer "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Figure S1 illustrates five types of masking. In Sec. 5.3, we introduced two types of masking: anticipative masking and random masking. The anticipation mask $M^{\\tt A}$ and the random mask $M^{\\breve{\\mathrm{R}}}$ are defined for each masking, respectively. Additionally, we adopt the relation mask $M^{\\mathrm{s}}$ and the boundary mask $M^{\\tt B}$ introduced in DiffAct [43]. The relation mask $\\bar{M}^{\\mathrm{s}}$ is proposed to help the model learn relational dependencies between actions. It is defined by $M^{\\mathrm{s}}=\\mathbb{1}(\\dot{A}_{i,a}^{0}\\stackrel{\\cdot}{\\neq}1),i\\in\\{1,2,...,T\\}$ and $a\\,\\in\\,\\{1,2,...,K\\}$ , with $T$ representing the number of frames and $K$ denoting the number of action classes. Here, a specific action class $a$ is randomly selected for the mask. The boundary mask $M^{\\tt B}$ hides visual features near the boundaries based on the soft ground truth $\\bar{B}$ to manage the uncertainty associated with action transitions. Specifically, it is defined by $M_{i}^{8}=1(\\bar{B}<0.\\bar{5})$ , where $i\\in\\{1,2,...,T\\}$ . ", "page_idx": 16}, {"type": "text", "text": "During training, a masking type is randomly selected among five: no mask $M^{\\mathbb{N}}$ , anticipative mask $M^{\\tt A}$ , random mask $M^{\\tt R}$ , relation mask $M^{\\mathrm{s}}$ , and boundary mask $M^{\\tt B}$ , for each iteration as detailed in Sec. 4.4. During inference, the no mask $M^{\\mathbb{N}}$ and the anticipative mask $M^{\\tt A}$ are utilized following the evaluation protocol [19, 65, 43, 20, 52, 25]. ", "page_idx": 16}, {"type": "text", "text": "D Model architecture ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We employ a modified version of ASFormer [65] utilized in DiffAct [43] as the baseline model. An encoder $g$ consists of $N^{\\mathrm{E}}$ number of layers and a decoder $h$ consists of $N^{\\mathrm{D}}$ number of layers as described in Sec.4.2. Figure S2 illustrates detailed operations of the encoder and the decoder layers. An encoder layer consists of dilated convolution followed by dilated attention, layer normalization, and a feed-forward network. Additionally, we add relative position bias $_B$ to attention scores to consider relative position relations among actions [48]. Similarly, a decoder layer comprises dilated convolution followed by dilated attention, layer normalization, and a feed-forward network. The output embedding $\\pmb{E}$ from the encoder is concatenated to the input of the decoder after dilated convolutions. Subsequently, they are embedded as queries and keys in the dilated attention operation. We refer the reader to [65, 43] for more details. ", "page_idx": 16}, {"type": "text", "text": "E Additional experiments ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We provide additional experimental results, maintaining the same experimental settings as described in Sec.5.2 unless otherwise specified. The evaluation is conducted on the 50 Salads dataset. ", "page_idx": 17}, {"type": "text", "text": "Conditioning features. We investigate different types of conditioning features: masked features $F^{\\prime}$ , output embeddings $\\boldsymbol{E}$ from the encoder, and the encoder prediction $A^{\\prime}$ . Table S1 shows overall results, where using $\\boldsymbol{E}$ is more effective than using other features. The effectiveness of utilizing the encoder in our approach becomes apparent when comparing the first and second rows, where a significant performance drop is observed in the absence of the encoder. Since mask tokens replace visual tokens before going into the encoder, it is crucial for them to learn action relations through the encoder. Comparing the second and third rows, we also observe that utilizing features from intermediate layers yields slightly better results than using encoder predictions for both TAS and LTA. ", "page_idx": 17}, {"type": "text", "text": "Position embedding. In Table S2, we explore different types of position embeddings: relative position bias [48], relative position embedding [53], and absolute position embedding [15]. Comparing the first and second rows, we find that employing relative position bias enhances the overall performance in TAS and LTA. From the second and third rows, we observe that relative position bias is also more effective than using learnable relative position embedding. Using absolute position embedding leads to decreased performance in both TAS and LTA. We find that learnable embeddings often cause overfitting problems during training. As a result, we adopt relative position bias in our model. ", "page_idx": 17}, {"type": "text", "text": "Loss ablations. We conduct ablation studies on the loss functions: boundary loss, smoothing loss, and cross-entropy loss. Table R4 presents the results, demonstrating that the combination of bounding loss and smoothing loss is effective for both TAS and LTA. While the effectiveness of these losses in TAS is well-documented in previous research [18, 64, 42], their impact on LTA has been less explored. Notably, the smoothing loss leads to significant performance gains in both tasks, indicating that smoothed predictions are beneficial. ", "page_idx": 17}, {"type": "text", "text": "Effects of reconstruction loss ${\\mathcal{L}}_{\\mathrm{recon}}$ Masked auto-encoding is a technique used in training NLP models like BERT [15] and has recently been adapted to vision models [22, 28]. Inspired by this approach, we train our model to reconstruct input video features from the masked tokens as an auxiliary task. Specifically, we employ MLP layers on the encoder embeddings to reconstruct the input video features and apply mean squared error (MSE) loss ${\\mathcal{L}}_{\\mathrm{recon}}$ during training. ", "page_idx": 17}, {"type": "text", "text": "Table S4 shows the overall results on both TAS and LTA tasks. In TAS, overall performance increases. We conjecture that reconstruction helps the model gain a deeper understanding of the underlying data structure and temporal dynamics by predicting the missing parts of the input. In LTA, we find that reconstruction is more effective on relatively short-term anticipation. Since short-term predictions are often based on more immediate context, there is less uncertainty. As a result, reconstructing masked features helps the model capture immediate patterns and transitions more accurately. However, for long-term predictions, as the model attempts to predict further into the future, the uncertainty increases significantly. Long-term predictions involve more variables and potential changes, making them inherently less predictable. This increased uncertainty might cause performance degradation, making reconstruction less effective for action anticipation. ", "page_idx": 17}, {"type": "text", "text": "F Datasets & Experimental details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Datasets. The 50 Salads [58] dataset consists of 50 videos depicting 25 individuals preparing a salad. With over 4 hours of RGB-D video data, the annotations include 17 fine-grained action labels and 3 high-level activities. Notably, 50 Salads videos are longer than those in the Breakfast dataset, averaging 20 actions per video. The dataset is partitioned into 5 splits for cross-validations, and we report the average performance across all splits. The Breakfast dataset is under the license of Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. The Breakfast [36] dataset consists of 1,712 videos featuring 52 individuals preparing breakfast in 18 different kitchens. Each video is assigned to one of the 10 activities associated with breakfast preparation, utilizing 48 fine-grained action labels to define these activities. The average video duration is approximately 2.3 minutes, encompassing around 6 actions per video. The dataset is divided into 4 splits for cross-validations, and we report the average performance across all splits. The Breakfast dataset is under the license of Creative Commons Attribution 4.0 International License. The GTEA dataset [21] comprises 28 videos capturing 11 action classes related to cooking activities. Each video includes 20 actions on average, and an average video duration is about a minute. The dataset is divided into 4 splits for cross-validations, and we report average performance across all splits. The GTEA dataset is under the license of Creative Commons Attribution 4.0 International License. ", "page_idx": 17}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/259ea40ca9c1959c44e2e5d37cc5ad24fd20fa3aaebe12292ee3b147fcaffd28.jpg", "table_caption": ["Table S1: Conditioning features ", "(a) Results on TAS "], "table_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/458e796c7db41e7c5f5fc6b25cd10d7a525b67d47293dd6dcdd3c47872929892.jpg", "table_caption": ["(b) Results on LTA "], "table_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/b5a29ea03c63a824b61f278038f514c6817970c45f98433c2af65d9a13287deb.jpg", "table_caption": ["Table S2: Position embedding ", "(a) Results on TAS "], "table_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/c7eb204c88a025f292375113f9c54c01a5e98bbf5f1c8512f668f953314e74a5.jpg", "table_caption": ["(b) Results on LTA "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "Cross-task generalization experiments. In Fig.1-(c), we conduct experiments on cross-task evaluations with DiffAct [43], FUTR [25], and TempAgg [52]. To evaluate DiffAct on LTA, we limit the input video frames to $F_{1:\\alpha T}$ , with zero masks appended to future frame lengths concatenated to the encoder output embeddings, adhering to DiffAct\u2019s masking strategies. Subsequently, the decoder predicts future actions based on the observed video frames. To evaluate FUTR on TAS, we utilize the encoder of FUTR as an action segmentation model. Note that we report the performance of TempAgg on both TAS and LTA as provided in the original paper [52]. ", "page_idx": 18}, {"type": "text", "text": "Evaluation without using ground-truth prediction length on LTA. Baseline models of Cycle Cons. [20] and FUTR [25] anticipate future actions and their corresponding durations. Then, the predicted durations are multiplied by the ground-truth prediction length $\\beta T$ to generate final predictions. In Table 6, we adopt the modified prediction length $r\\alpha T$ . Please note that we reproduce Cycle Cons. and utilize the official checkpoints of FUTR. ", "page_idx": 18}, {"type": "text", "text": "Implementation details. We provide additional implementation details to complement those described in Sec. 5.2. Table S5 presents the specific hyperparameters used in our experiments for ", "page_idx": 18}, {"type": "text", "text": "Table S3: Loss ablations ", "text_level": 1, "page_idx": 19}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/d88ecf7a43a6cda8cb74f1a86bc37aa7e0db5a0ad75768fb2220fdc223784db7.jpg", "table_caption": ["(a) Results on TAS "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/49338b06bcc54c2bda49dd6bb67d875fcbfae8813dbba3ab479f8e407e751b62.jpg", "table_caption": ["(b) Results on LTA "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/15715b3945f243f4b62b3593122840e0538de2afbe1d596c2e4cc71fb4c9b921.jpg", "table_caption": ["Table S4: Effects of reconstruction loss ${\\mathcal{L}}_{\\mathrm{recon}}$ ", "(a) Results on TAS "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "each dataset. All experiments are conducted on a single NVIDIA RTX-3080 GPU. We implement ActFusion using Pytorch [47] and some of the official code-base for DiffAct $[43]^{2}$ licensed under a MIT License. ", "page_idx": 19}, {"type": "text", "text": "G Qualitative results ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "We provide additional qualitative results for both successful and failure cases in Fig. S3 and Fig. S4, respectively. Figure S3 demonstrates the promising results on both TAS and LTA, showing the efficacy of joint learning these two tasks. Particularly, ActFusion successfully anticipates all the necessary actions to make a salad even in a longer sequence in Fig. S3d. In the failure cases, figure S4a highlights the importance of accurate segmentation on anticipation, where inaccurate action segmentation of the observed frames leads to wrong future anticipation. In Fig. S4b, ActFusion fails to detect the \u2018take knife\u2019 action class in action segmentation. However, the model anticipates missing action classes that are not observed in the observed frames. This implies that the model can infer missing actions based on the action relations of the observed and unobserved actions. ", "page_idx": 19}, {"type": "text", "text": "H Discussion ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "In this paper, we have proposed a unified diffusion model for action segmentation and anticipation, dubbed ActFusion. We have demonstrated the effectiveness of the proposed method through comprehensive experimental results, showing the bi-directional benefits of joint learning the two tasks. In this section, we will discuss the limitations, future work, and broader impact of the proposed method. ", "page_idx": 19}, {"type": "table", "img_path": "NN9U0lEcAn/tmp/ff3c32f044b5bee33590a291fc8d9339d8c404c5150637534c64a038b71b475f.jpg", "table_caption": ["Table S5: Hyperparameters. We provide the hyperparameters used during training for each dataset. "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "Limitations and future work. The proposed method shows the state-of-the-art results on TAS across three benchmark datasets. However, the frame-wise accuracy is slightly below compared to DiffAct [43]. We hypothesize that this discrepancy arises from the different masking strategies employed. In DiffAct, masking is applied to the output embeddings of the encoder, ensuring that the encoder always fully observes the visual features from the entire video. However, in our approach, masking is applied before the encoders, allowing for handling both visible and invisible tokens to unify the two tasks effectively. Consequently, the encoder may not always observe the entire visual features, potentially leading to slightly lower accuracy. This issue could potentially be addressed by employing reconstruction methods for masked features, similar to masked autoencoders [28, 22]. By further training the model to reconstruct the original features from the masked features, the encoder could be empowered to handle the masked features better. We leave this as our future work. ", "page_idx": 20}, {"type": "text", "text": "In future work, additional activity information could be integrated, particularly focusing on segmentwise action relations [8]. Moreover, exploring weakly-supervised learning approaches [39, 49, 37] could be beneficial for further enhancing the capabilities of our method. ", "page_idx": 20}, {"type": "text", "text": "Broader impact. To the best of our knowledge, we are the first to integrate action segmentation and anticipation within a unified model. We believe that our work lays the foundation for integrating these two tasks, offering substantial potential for real-world applications such as robots. ", "page_idx": 20}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/8cceda9cf895d818ad0621739a7982c1ab4fc8a7fa7229a351f4b49ecd01fe72.jpg", "img_caption": ["(a) Results on Breakfast "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/c8590e59316a933f936bc29a2f3e92d1323a3dc92682144f44b8dc7e993ea26b.jpg", "img_caption": [], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "(d) Results on 50 Salads ", "page_idx": 21}, {"type": "text", "text": "Figure S3: Qualitative results on successful cases ", "page_idx": 21}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/8d9154736fb1fa5339b9dbf2d691e6f51af355ee7c2dd0979a3cffe230720ca9.jpg", "img_caption": ["(a) Results on Breakfast "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "NN9U0lEcAn/tmp/9de7ad9e13acfa18a8260dc8770de006c14b921f01535eeee03b2564172f4eed.jpg", "img_caption": ["Figure S4: Qualitative results on failure cases ", "(b) Results on Breakfast "], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "The checklist is designed to encourage best practices for responsible machine learning research, addressing issues of reproducibility, transparency, research ethics, and societal impact. Do not remove the checklist: The papers not including the checklist will be desk rejected. The checklist should follow the references and follow the (optional) supplemental material. The checklist does NOT count towards the page limit. ", "page_idx": 23}, {"type": "text", "text": "Please read the checklist guidelines carefully for information on how to answer these questions. For each question in the checklist: ", "page_idx": 23}, {"type": "text", "text": "\u2022 You should answer [Yes] , [No] , or [NA] .   \n\u2022 [NA] means either that the question is Not Applicable for that particular paper or the relevant information is Not Available.   \n\u2022 Please provide a short (1\u20132 sentence) justification right after your answer (even for NA). ", "page_idx": 23}, {"type": "text", "text": "The checklist answers are an integral part of your paper submission. They are visible to the reviewers, area chairs, senior area chairs, and ethics reviewers. You will be asked to also include it (after eventual revisions) with the final version of your paper, and its final version will be published with the paper. ", "page_idx": 23}, {"type": "text", "text": "The reviewers of your paper will be asked to use the checklist as one of the factors in their evaluation. While \"[Yes] \" is generally preferable to \"[No] \", it is perfectly acceptable to answer \"[No] \" provided a proper justification is given (e.g., \"error bars are not reported because it would be too computationally expensive\" or \"we were unable to find the license for the dataset we used\"). In general, answering \"[No] \" or \"[NA] \" is not grounds for rejection. While the questions are phrased in a binary way, we acknowledge that the true answer is often more nuanced, so please just use your best judgment and write a justification to elaborate. All supporting evidence can appear either in the main paper or the supplemental material, provided in appendix. If you answer [Yes] to a question, in the justification please point to the section(s) where related material for the question can be found. ", "page_idx": 23}, {"type": "text", "text": "IMPORTANT, please: ", "page_idx": 23}, {"type": "text", "text": "\u2022 Delete this instruction block, but keep the section heading \u201cNeurIPS paper checklist\", \u2022 Keep the checklist subsection headings, questions/answers and guidelines below. \u2022 Do not modify the questions and only use the provided macros for your answers. ", "page_idx": 23}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: Our main claims presented in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 23}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: See Sec. H. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 24}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: We provide theoretical explanation of diffusion models on Sec. 3 and A. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 24}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We provide experimental details in Sec. 5 and Sec. F. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. ", "page_idx": 24}, {"type": "text", "text": "\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 25}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Justification: We include the code and instructions for reproduction in the supplementary.   \nThe training and validation data is available online. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). ", "page_idx": 25}, {"type": "text", "text": "\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 26}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We specify all the training details in the main and supplementary. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 26}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [No] ", "page_idx": 26}, {"type": "text", "text": "Justification: We do not report error bars due to the limited computational resources. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 26}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We include the amount and type of resources used for training in Sec. F. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 27}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We follow the NeurIPS Code of Ethics. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 27}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We provide the broader impact in Sec. H. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: We do not release data or models that can be highly misused. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks. ", "page_idx": 27}, {"type": "text", "text": "\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 28}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We cite all the papers that are relevant to the code, models, and datasets. We include the license of each asset in Sec. F. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We include trained models in the supplementary for reproduction of our main results. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 28}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: We did not croudsource any information for this research. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 29}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: We did not croudsource any information for this research. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 29}]