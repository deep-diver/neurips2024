[{"figure_path": "974ojuN0jU/tables/tables_7_1.jpg", "caption": "Table 1: Empirical scalability and speed-up analysis for viscous Burgers' equation", "description": "This table compares the performance of four different algorithms (Fine, Parareal, nnGParareal, and RandNet-Parareal) for solving the viscous Burgers' equation.  It shows the number of iterations (K) required for each algorithm to converge, the runtime of the coarse solver (NTG), the runtime of the fine solver (TF), the model training time (Tmodel), the total algorithm runtime (Talg), and the speedup (Salg) achieved compared to the fine solver run serially. Two different problem sizes (d = 128 and d = 1128) are considered, with N = 128 in both cases.  The speedup (Salg) is calculated as the ratio of the serial runtime of the fine solver to the total runtime of the algorithm.", "section": "5 Numerical Experiments"}, {"figure_path": "974ojuN0jU/tables/tables_8_1.jpg", "caption": "Table 1: Empirical scalability and speed-up analysis for viscous Burgers' equation", "description": "This table compares the performance of four different algorithms (Fine, Parareal, nnGParareal, and RandNet-Parareal) for solving the viscous Burgers' equation.  It shows the number of iterations (K) required for convergence, the runtimes of the coarse (T<sub>G</sub>) and fine (T<sub>F</sub>) solvers, the model training time (T<sub>model</sub>), the total algorithm runtime (T<sub>alg</sub>), and the speedup (S<sub>alg</sub>) achieved by each algorithm.  Two different problem sizes (d = 128 and d = 1128) are considered, demonstrating the scalability of each method.", "section": "5 Numerical Experiments"}, {"figure_path": "974ojuN0jU/tables/tables_9_1.jpg", "caption": "Table 2: Speed-up analysis for the shallow water PDE as a d-dimensional ODE system, N = 235", "description": "The table presents a speed-up analysis for solving the shallow water PDE using three different parallel-in-time algorithms: Parareal, RandNet-Parareal, and nnGParareal.  The analysis considers varying spatial dimensions (d) of the system. For each dimension, it shows the number of iterations to convergence (K) for each algorithm, the runtime of the fine solver (Tg), the runtime of Parareal (Tpara), the runtime of RandNet-Parareal (TrandNet-Para), the speed-up of Parareal relative to the fine solver (SPara), and the speed-up of RandNet-Parareal relative to the fine solver (SRandNet-Para).  The number of processors (N) is fixed at 235 for all experiments. This allows comparison of the scalability and performance of each algorithm in solving progressively larger PDE systems. nnGParareal fails to converge within the given time budget for the higher dimensional problems.", "section": "5.3 Shallow water equation"}, {"figure_path": "974ojuN0jU/tables/tables_21_1.jpg", "caption": "Table 3: Simulation setup for the 2D and 3D Brusselator", "description": "This table details the simulation parameters used for the 2D and 3D Brusselator experiments.  It specifies the spatial domain, the number of discretization points for u and v (Nu and Nv), the resulting dimensionality (d) of the ODE system, the coarse and fine solvers used (G and F), their respective time steps (G\u0394t and F\u0394t), and the number of intervals (N).  The table helps clarify the computational setup and parameters used in the experiments comparing RandNet-Parareal's performance against Parareal and nnGParareal.", "section": "Numerical Experiments"}, {"figure_path": "974ojuN0jU/tables/tables_22_1.jpg", "caption": "Table 4: Accuracy and computational cost of the three considered algorithms", "description": "This table compares the accuracy and computational cost (runtime) of RandNet-Parareal, Parareal, and nnGParareal across six different partial differential equation (PDE) systems.  Accuracy is measured as the maximum absolute error (mean across intervals) compared to the true solution from a sequential run of the fine solver.  The table shows that RandNet-Parareal achieves significantly better accuracy and lower runtimes compared to the other two methods, especially for larger-scale problems where nnGParareal fails to converge.", "section": "F Accuracy and runtimes across models and algorithms"}, {"figure_path": "974ojuN0jU/tables/tables_22_2.jpg", "caption": "Table 1: Empirical scalability and speed-up analysis for viscous Burgers' equation", "description": "This table presents a comparison of the performance of three algorithms (Fine, Parareal, nnGParareal, and RandNet-Parareal) for solving the viscous Burgers' equation.  The comparison is done for two different spatial dimensions (d = 128 and d = 1128) keeping the number of intervals fixed at N=128. For each algorithm and dimension, the table shows the number of iterations (K) required for convergence, the runtime of the fine solver (TF), runtime of the coarse solver (TG), model training time (Tmodel), total algorithm runtime (Talg), and speedup (Salg) relative to the serial runtime of the fine solver.  The speedup highlights the performance gains achieved by the parallel-in-time methods compared to solving the problem sequentially using the fine solver. The model training times emphasize the computational cost difference in building the correction function among the algorithms.", "section": "5 Numerical Experiments"}, {"figure_path": "974ojuN0jU/tables/tables_23_1.jpg", "caption": "Table 6: Simulation setup for the Diffusion-Reaction equation", "description": "This table details the simulation setup used for the Diffusion-Reaction equation experiments.  It specifies the spatial domain, the number of spatial discretization points along each axis (Nx and Ny), the resulting dimensionality of the ODE system (d), the coarse and fine solvers (G and F), the number of timesteps per interval (Ng and NF), and the total number of intervals (N).  The specific solvers used are Runge-Kutta methods of order 1 (RK1), 4 (RK4), and 8 (RK8). The number of nearest neighbors (nnGP and RandNet-Parareal) used in nnGParareal and RandNet-Parareal are not explicitly included but are mentioned in the text.", "section": "G Simulation setups"}, {"figure_path": "974ojuN0jU/tables/tables_23_2.jpg", "caption": "Table 7: Simulation setup for the SWEs", "description": "This table details the simulation setup for the Shallow Water Equations (SWEs) experiments.  It shows the spatial domain, the number of spatial discretization points in the x and y directions (Nx and Ny), resulting in a total of d dimensions for the ordinary differential equation (ODE) system that represents the SWE.  The table also specifies the coarse and fine numerical solvers (G and F), the corresponding number of time steps per interval (Ng and NF), and the total number of intervals (N) used in the simulations.  The number of nearest neighbors used for nnGParareal and RandNet-Parareal are also provided (mnnGP and mRandNet).", "section": "5.3 Shallow water equation"}, {"figure_path": "974ojuN0jU/tables/tables_25_1.jpg", "caption": "Table 1: Empirical scalability and speed-up analysis for viscous Burgers' equation", "description": "This table presents a comparison of the performance of three parallel-in-time (PinT) algorithms: Parareal, nnGParareal, and RandNet-Parareal, on the one-dimensional viscous Burgers' equation.  The table shows the number of iterations (K) required for convergence, the runtimes of the coarse and fine solvers (NTG, TF), the model training time (Tmodel), the total algorithm runtime (Talg), and the speed-up achieved compared to the serial runtime of the fine solver (Salg). The table includes results for two different problem sizes: d = 128 and d = 1128, demonstrating the scalability of the algorithms as the problem size increases.", "section": "5 Numerical Experiments"}]