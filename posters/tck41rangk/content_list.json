[{"type": "text", "text": "MICROADAM: Accurate Adaptive Optimization with Low Space Overhead and Provable Convergence ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Ionut-Vlad Modoranu1\u2217 Mher Safaryan1 Grigory Malinovsky2 Eldar Kurtic1 Thomas Robert1 Peter Richt\u00e1rik2 Dan Alistarh1 ", "page_idx": 0}, {"type": "text", "text": "1Institute of Science and Technology Austria (ISTA) 2King Abdullah University of Science and Technology (KAUST) ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We propose a new variant of the Adam optimizer [Kingma and Ba, 2014] called MICROADAM that specifically minimizes memory overheads, while maintaining theoretical convergence guarantees. We achieve this by compressing the gradient information before it is fed into the optimizer state, thereby reducing its memory footprint significantly. We control the resulting compression error via a novel instance of the classical error feedback mechanism from distributed optimization [Seide et al., 2014, Alistarh et al., 2018, Karimireddy et al., 2019] in which the error correction information is itself compressed to allow for practical memory gains. We prove that the resulting approach maintains theoretical convergence guarantees competitive to those of AMSGrad, while providing good practical performance. Specifically, we show that MICROADAM can be implemented efficiently on GPUs: on both million-scale (BERT) and billion-scale (LLaMA) models, MICROADAM provides practical convergence competitive to that of the uncompressed Adam baseline, with lower memory usage and similar running time. Our code is available at https://github.com/IST-DASLab/MicroAdam. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The Adam [Kingma and Ba, 2014] adaptive optimizer and its variants [Reddi et al., 2019, Loshchilov and Hutter, 2019] has emerged as a dominant choice for training deep neural networks (DNNs), especially in the case of large language models (LLMs) with billions of parameters. Yet, its versatility comes with the drawback of substantial memory overheads: relative to naive SGD-based optimization, the Adam optimizer states doubles the memory overhead, as it requires storing two additional parameters for each variable. For large-scale models, these memory demands pose a significant challenge. In turn, this has spurred research into memory-efficient adaptive optimizers, such as AdaFactor [Shazeer and Stern, 2018], 8-bit Adam [Dettmers et al., 2021], or the very recent GaLore [Zhao et al., 2024] low-rank projection approach. Despite their popularity and practical utility, the above methods lack rigorous convergence guarantees, and often trade off memory reductions with decreased convergence in practice. This raises the question of whether it is possible to design adaptive optimizers that are not only memory-efficient, but also maintain strong theoretical and practical performance metrics. ", "page_idx": 0}, {"type": "text", "text": "Contributions. In this paper, we address this gap by introducing MICROADAM, an adaptive optimizer which guarantees low memory usage but also ensures provable convergence. We develop our approach to improve the performance of finetuning LLMs and mainly focus on the research question \u201care all gradient entries important for optimization?\u201d To answer this question, we start from the idea that we can allow the (lossy) sparse projection of gradient information before it enters the optimizer states; crucially, different from prior work, we ensure convergence by correcting for the inherent error due to compression by employing a novel variant of error correction, a mechanism introduced for distributed optimization [Seide et al., 2014]. However, simply using error feedback would not lead to memory savings, since the size of the error correction buffer is comparable to the that of the original optimizer state. Instead, our main algorithmic innovation is in showing that the error feedback can itself be compressed in the context of adaptive optimization. This renders the memory overhead of error feedback negligible, while preserving convergence guarantees. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Specifically, on the theoretical side, we provide a new analysis showing that, under reasonable assumptions on the loss function being optimized and on the degree of compression, MICROADAM provably guarantees convergence, at asymptotically the same rate as AMSGrad [Zhou et al., 2024a], i.e. a version of Adam with general convergence guarantees, that fixes a fundamental technical issue in the Adam optimizer\u2019s proof [Reddi et al., 2019]. The key finding is that our approach allows for the overhead of compression to be shifted to the higher-order terms, where it should not impact practical convergence in common cases. This claim holds both for general smooth non-convex functions, and for non-convex functions under the Polyak-Lojasiewicz (PL) assumption, highlighting a trade-off between the degree of compression of the gradients, and that of the error feedback. ", "page_idx": 1}, {"type": "text", "text": "We complement our algorithmic and analytic results with an efficient GPU implementation of MICROADAM, which we validate for fine-tuning language models from the BERT [Devlin et al., 2018], OPT [Zhang et al., 2022] and LLaMA [Touvron et al., 2023] families, with hundreds of millions to billions of parameters. We show that, in practice, gradients can be projected to very high sparsity $(99\\%)$ , while the error correction can be stored at 4 bits per component, without loss of convergence. Concretely, our method can significantly improve upon the memory footprint of the extremely popular 8bit Adam [Dettmers et al., 2021] when fine-tuning models such as LLaMA2- 7B/13B [Touvron et al., 2023], at similar or better accuracy. At the same time, MICROADAM provides better accuracy relative to high-compression heuristics such as GaLore [Zhao et al., 2024]. ", "page_idx": 1}, {"type": "text", "text": "In summary, we provide a new theoretically-grounded approach to memory-efficient adaptive optimization, which has the advantage of providing both theoretical guarantees and good practical convergence, while being scalable to billion-parameter models. MICROADAM could therefore serve as a useful new tool for accurate and memory-efficient optimization of large models. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We mainly focus on related work reducing the cost of optimizer states. Dettmers et al. [2021] considers this problem, specifically by performing fine-grained quantization of the optimizer states. Their work does not alter the Adam algorithm; instead, it deals with the challenge of accurately compressing the dynamically-changing meta-data sequence. As the name suggests, the space savings correspond to roughly halving the memory required by the optimizer states, relative to FP16. In the same vein, AdaFactor [Shazeer and Stern, 2018] and CAME [Luo et al., 2023] reduce memory cost by factorizing the second-order statistics, while the recent GaLore [Zhao et al., 2024] factorizes the gradients themselves before they enter the optimizer state (but does not use error correction). Importantly, these methods are heuristics: they do not provide theoretical guarantees under standard assumptions,2 and in practice require careful tuning to preserve convergence [Luo et al., 2023]. By contrast, our method is theoretically justified, and provides good practical convergence. Earlier work by Anil et al. [2019] provides convergence guarantees for a compressed variant of Adagrad [Duchi et al., 2010] called SM3, improving upon earlier work by Spring et al. [2019]. However, it is not clear how to extend their approach to the popular Adam optimizer, and heuristic methods appear to provide superior performance [Luo et al., 2023]. ", "page_idx": 1}, {"type": "text", "text": "Conceptually, our work is related to error feedback mechanisms studied in distributed optimization, e.g. [Seide et al., 2014, Alistarh et al., 2018, Karimireddy et al., 2019, Richt\u00e1rik et al., 2021]. Specifically, Li et al. [2022] proved convergence of AdaGrad-like algorithms in conjunction with error feedback, in a distributed environment. Our focus is different: minimizing memory costs in the single-node setting: for this, we show that the error correction buffer can itself be compressed. We provide an analysis for the resulting new algorithm, and efficient CUDA implementations. ", "page_idx": 1}, {"type": "text", "text": "More broadly, scaling adaptive or second-order optimizers to large models is a very active area. Works such as GGT [Agarwal et al., 2019], Shampoo [Gupta et al., 2018] and M-FAC [Frantar et al., ", "page_idx": 1}, {"type": "text", "text": "2021] provided quadratic-space algorithms that are still feasible to execute for moderate-sized DNNs, but will not scale for billion-parameter models. Follow-up work such as AdaHessian [Yao et al., 2020], Sophia [Liu et al., 2023], Sketchy [Feinberg et al., 2023] and EFCP [Modoranu et al., 2023], scaled these approaches via additional approximations. Of these, the closest work to ours is EFCP, which uses sparsification plus standard error feedback to compress the gradient window employed in the Fisher approximation of the Hessian. However, EFCP does not compress the error accumulator, assumes a different optimization algorithm (Natural Gradient [Amari, 2016]), lacks convergence guarantees, and does not scale to billion-parameter models. ", "page_idx": 2}, {"type": "text", "text": "3 The MICROADAM Algorithm ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Notation. We consider a standard Adam-type algorithm, which we will augment for memory savings. We will use $f$ for the loss function, $d$ for the model size, $k$ for the gradient density (sparsity $d-k)$ , $\\theta_{t}$ and $g_{t}$ for the model parameters and gradient at step $t$ respectively, $\\eta_{t}$ for the learning rate, $\\lambda$ for the weight decay parameter, $m_{t}$ and $v_{t}$ for the first and second moment of the gradient, $\\epsilon$ for the numerical stability constant, $\\beta_{1}$ and $\\beta_{2}$ for the momentum coefficients for $m_{t}$ and $v_{t}$ respectively. Furthermore, we use $e_{t}$ for the error feedback (EF) vector, $b$ the number of bits for EF quantization, $m$ for the sliding window size, $\\mathcal{G}=(\\mathcal{Z},\\mathcal{V})$ for the sliding window of size $m\\times k$ that stores indices $\\mathcal{T}$ and values $\\nu$ selected by the Top-K operator. ", "page_idx": 2}, {"type": "text", "text": "Algorithm Description. We provide pseudocode in Algorithm 1 and highlight the parts related to error feedback quantization in blue. The main idea is to compress the gradients via TopK sparsification before they enter the optimizer state, and to correct for the inherent error by applying error feedback $\\boldsymbol{e}_{t}\\in\\mathbb{R}^{d}$ . Instead of storing the optimizer state directly, we maintain a \u201csliding window\u201d of highlysparse past gradients and dynamically re-compute the Adam statistics at each step based on this window. Yet, this alone does not improve space, as the error buffer partially negates the benefits of gradient compression. Instead, we prove that the error feedback accumulator can itself be compressed via quantization. ", "page_idx": 2}, {"type": "text", "text": "In detail, at step $t=1$ , the error feedback $e_{1}$ is completely zero, as initialized in line 2, and thus, at line 5 the accumulator $a_{1}$ will only contain the stochastic gradient $g_{1}$ . At line 6, we perform the Top-K compression and only keep the top- $1\\%$ of values $\\protect\\nu_{1}$ and their corresponding indices $\\mathcal{T}_{1}$ . The compression is equivalent to choosing the top- $1\\%$ values in the left and right tails (outliers) due to the absolute value we apply on top of accumulator $a$ . At line 7, we remove the outliers from the accumulator because they will be transferred to the buffer matrix $\\mathcal{G}$ . This step is equivalent to $e\\gets a-T_{k}(a)$ found in theoretical results. After line 7, what is left in $a$ is called the error feedback (e.g. the weights which were not chosen by Top-k). At line 8, we compute the statistics $\\delta$ and $\\Delta$ needed for quantization, and at line 9, we effectively quantize the accumulator (e.g. error feedback after line 7). At line 10 we update the buffer $\\mathcal{G}$ , in lines 11, 12 and 13 we compute the statistics $\\hat{m},\\hat{v}$ (computed by squaring the entries of $\\mathcal{G}$ element-wise) and update the model parameters. ", "page_idx": 2}, {"type": "text", "text": "For steps $t\\geq2$ , the only change compared to $t=1$ is that error feedback $e$ is not zero anymore. Since the error is compressed, we need to decompress it and add it to the gradient. This process happens at line 5 and it is the point where we feed back the error: the accumulator will store the gradient whose direction is corrected by the error (e.g. the cumulative history of weights not chosen by Top- $\\cdot\\mathbf{k}$ at the previous steps). ", "page_idx": 2}, {"type": "text", "text": "Properties and Limitations. We would like to point out that the resulting update $u_{t}=m_{t}/(\\epsilon+\\sqrt{v_{t}})$ will always be highly sparse when the window size $m$ is small. For illustration, if we use density $k=d/100$ (e.g. $1\\%$ density equivalent to $99\\%$ sparsity) with $m=10$ and suppose that all rows in the indices matrix $\\mathcal{T}$ are disjoint, then the overall density in the update $u_{t}$ will be $\\bar{9}0\\%$ . The sparsity of $u_{t}$ increases if rows in $\\mathcal{T}$ have common values. MICROADAM yields good results for LLM finetuning and pre-training computer vision models, as the experimental section shows. However, we noticed the update $u_{t}$ of MICROADAM is too sparse to be able to provide good enough updates for LLM pre-training. We believe this happens because the attention layers must receive dense updates to be able to learn the correlations between words. ", "page_idx": 2}, {"type": "text", "text": "aofn dm owme eanltsuo mp $z_{t}\\leftarrow\\beta z_{t-1}\\!+\\!(1\\!-\\!\\beta)g_{t}$ ifoonr  ithn et lhaes te $m$ .s pBarescea gursae diween tcs oasm $\\begin{array}{r}{z_{t}\\leftarrow(1\\!-\\!\\beta)\\sum_{i=t-m}^{t}\\beta^{t-i}g_{i}}\\end{array}$ $\\hat{m}_{t}$ $\\hat{v}_{t}$ $m$ sparse gradients in the window, in line 4 we dynamically determine the exponent $r$ for the decay factor $\\beta^{r}$ based on the current optimization step $t$ , $\\mathbf{\\bar{\\rho}}_{i}\\mathbf{\\bar{\\rho}}_{h}$ row of the circular buffer $\\mathcal{G}$ and the window size $m$ . The last gradient added to $\\mathcal{G}$ will have $r=0$ , while the oldest gradient in $\\mathcal{G}$ will have $r=m-1$ . In the end, we will add the values $\\beta^{r}\\nu_{i}$ to the buffer $z$ at the corresponding indices ${\\mathcal{Z}}_{i}$ , which is a fast operation because we only manipulate $1\\%$ of values at a time. We discuss the efficient CUDA implementation in the Appendix. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Algorithm Intuition. To gain intuition, we illustrate the impact of compressing gradients via TopK before they are incorporated into the optimizer state for Adam, both with and without error feedback (EF). Figure 1 shows how EF fixes AdamW with Top-K compression. The plot on the left shows the optimization trajectory of the original Adam optimizer. The center plot illustrates the convergence of Top-K Adam when we only choose the largest coordinate from the accumulator (equivalent to $50\\%$ sparsity since the problem is 2D). In the end, on the right side we show that adding EF to Top-K Adam recovers the same optimization trajectory as the original Adam optimizer. Extrapolating to higher dimensional problems, our MICROADAM approach helps recover the trajectory of the original Adam optimizer, while using less memory. The results clearly show that EF is essential for fast convergence. Besides, TopK with EF, which is a surrogate of MICROADAM, allows for competitive convergence relative to the uncompressed baseline. In Appendix F, we discuss the implications of Error Feedback applied to GaLore. ", "page_idx": 3}, {"type": "image", "img_path": "Tck41RANGK/tmp/ff34d14e120a98745a6ade203c6d9241aa3e15de38ce87e806f31b6e01684a27.jpg", "img_caption": ["Algorithm 1 Pseudocode for MICROADAM with quantized EF "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Algorithm 2 Adam Statistics, Quantization and Inverse Quantization ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "1: procedure ADAMSTATS(\u03b2, G, t, m, d)   \n2: $z\\leftarrow0_{d}$   \n3: for $i\\in\\{1,2,...,\\operatorname*{min}(t,m)\\}$ do   \n4: r \u2190(t \u2212i \u22121)%m   \n5: z[Ii] \u2190z[Ii] + \u03b2rVi   \n6: end for   \n7: return $\\frac{(1\\!-\\!\\beta)z}{1\\!-\\!\\beta^{t}}$   \n8: end procedure   \n1: procedure Q(x, \u03b4, \u2206, b = 4)   \n2: $u\\gets\\frac{\\Delta-\\bar{\\delta}}{2^{b}-1}$   \n3: xQ \u2190\u230axu\u2212\u03b4 1\u230b   \n4: return xQ   \n5: end procedure   \n1: procedure $Q^{-1}(x_{Q},\\delta,\\Delta,b)$   \n2: u \u21902\u2206b\u2212\u2212\u03b41   \n3: x \u2190xQ \u00b7 u + \u03b4   \n4: return x   \n5: end procedure ", "page_idx": 3}, {"type": "text", "text": "Figure 1: Optimization trajectories of Adam, TopK-Adam and TopK-Adam with EF applied on the Rosenbrock function $f(x,\\overrightharpoon{y})=(1-x)^{2}+100(\\dot{y}-x^{2})^{2}$ starting from $(x_{0},y_{0})=(-{\\textstyle{\\frac{1}{2}}},1)$ . Notice the extremely \u201cjagged\u201d profile of TopK-Adam without EF, and the recovered convergence when EF is added. ", "page_idx": 3}, {"type": "image", "img_path": "Tck41RANGK/tmp/39c47a9054c7a59ad32061386cabe3e9d36dbe7a1bf20c335793218ff63f55b0.jpg", "img_caption": [], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3.1 Efficient Implementation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "A direct implementation (e.g., in Pytorch) of the previous algorithm would not bring significant beneftis, and would in fact might slow down optimization in terms of wall-clock time. To realize the theoretical gains, we detail a GPU-aware implementation below. ", "page_idx": 3}, {"type": "text", "text": "Accumulator $a_{t}$ . First, we do not use an additional accumulator tensor $a_{t}$ ; instead, we use a CUDA kernel to dequantize the error buffer, and store the result in the grad attribute of the model parameters. This allows us to accumulate the error feedback into the gradients, without allocating a full or half precision $d$ -dimensional array. Each component of the EF has 4 bits and the entire EF is stored in an array of size $d/2$ of uint8 values. ", "page_idx": 4}, {"type": "text", "text": "Top- $\\mathbf{K}$ . Since we run on LLMs with billions of parameters, naive storage of the sparse indices would require using an int64 type for the indices matrix $\\mathcal{T}$ , assuming that the Top-K operator is applied globally to all the parameters in $a_{t}$ . To avoid this cost, we apply Top-K in blocks of fixed size $\\tilde{B}_{d}<\\dot{2}^{15}-1=3\\dot{2}767$ and store block-relative indices in int16 format (during the development of MICROADAM, PyTorch did not have support for uint16). Applying Top- $\\mathbf{\\nabla}\\cdot\\mathbf{K}$ per row to $a_{t}$ reshaped to 2D is not only faster, but provides the block-relative indices directly. ", "page_idx": 4}, {"type": "text", "text": "Computing Top-K in blocks also allows us to allocate and efficiently use CUDA shared memory blocks to dynamically compute the statistics $\\hat{m}_{t}$ and $\\hat{v}_{t}$ for Adam, as described in the ADAMSTATS procedure in Algorithm 2. We allocate the maximum possible shared memory for each thread block and store $\\hat{m}_{t}$ (first half) and $\\hat{v}_{t}$ (second half) at consecutive locations in the shared memory. Once these statistics are computed, it is easy to update the model parameters. Note that the block-relative indices returned by Top-K will be directly used as indices in the shared memory array of CUDA thread blocks to retrieve values from $\\mathcal{T}$ and $\\mathcal{V}$ . ", "page_idx": 4}, {"type": "text", "text": "Quantization metadata. Our approach also stores two additional vectors $\\delta$ and $\\Delta$ used for quantization. Since the quantization block size $B_{q}$ is set to a very large value (e.g. $100K,$ ), the space required for these two arrays becomes negligible in comparison to the buffer $\\mathcal{G}$ and error feedback $e$ . ", "page_idx": 4}, {"type": "text", "text": "Practical memory usage. We note that we apply MICROADAM per layer, and that the size of quantization statistics $\\delta$ and $\\Delta$ are allocated based on the layer size. Having many such small tensors may result in slightly sub-optimal memory allocation from Pytorch. This is why our reported memory usage can be higher than the theoretical usage for small models, in the $100\\mathrm{M}$ parameter range; these effects disappear for billion-parameter models, where the savings are significant. ", "page_idx": 4}, {"type": "text", "text": "3.2 Memory footprint analysis for the optimizer states and comparison with other methods ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We now compare the theoretical memory footprint of MICROADAM with AdamW [Loshchilov and Hutter, 2019], AdamW-8 bits [Dettmers et al., 2021], and GaLore [Zhao et al., 2024], focusing on memory usage of the optimizer states $m_{t}$ and $v_{t}$ , each of size $d$ , expressed in bytes (B). For concreteness, we report the practical memory usage for the optimizer state for a Llama-2 7B model for each optimizer. ", "page_idx": 4}, {"type": "text", "text": "\u2022 AdamW stores states in float32 format ( $^{4\\,\\mathrm{B}}$ per component), resulting in a total memory footprint of $4d+4d=8d$ (B), while using bfloat16 would result in $4d$ (B) memory. We will refer to these memory footprints as $M_{A W32}=8d\\left(\\mathbf{B}\\right)=50.21$ (GB) and $M_{A W16}=4d\\left(\\mathbf{B}\\right)=25.10$ (GB). \u2022 AdamW-8 bit stores states in 8-bit format ( $_{\\mathrm{~1~B~}}$ per component), both with $d$ components, with memory footprint of $M_{A W8}=d+d=2d\\left(\\mathbf{B}\\right)=12.55$ (GB). \u2022 MICROADAM stores the error feedback $e$ in 4-bit format $\\mathrm{[0.5\\,B}$ per component) and the sliding window $\\mathcal{G}$ that stores the indices $\\mathcal{T}$ in int1 $^{\\prime}\\delta$ and $\\mathcal{V}$ in bfloat1 $^{\\,^{\\prime}}\\!\\,^{\\,}\\!\\,^{\\!}\\!\\,\\delta$ format. Both have $m\\times k$ components, each requiring $^{2\\textrm{B}}$ per component. In the end, for $m=10$ and $k=d/100$ , the memory footprint is $M_{\\mu A}(m)=0.5d+4m k\\left(\\mathbf{B}\\right)=0.9d\\left(\\mathbf{B}\\right)=5.65$ (GB), that is, half of AdamW-8bit. \u2022 GaLore. Given a neural network with $L$ layers, where each layer has weight matrix $W_{i}\\in\\mathbb{R}^{A_{i}\\times B_{i}}$ (shaped as a 2D matrix), the model size $\\begin{array}{r}{d=\\sum_{i=1}^{L}A_{i}B_{i}}\\end{array}$ . GaLore uses a rank- $^r$ compression via the SVD composition as $W_{i}=U S V^{T}$ , wh ere $\\overr{U}\\in\\mathbb{R}^{A_{i}\\times A_{i}}$ and we choose the first $r$ columns of $U$ as $R_{i}\\in\\bar{\\mathbb{R}}^{A_{i}\\times r}$ to project the gradient of $W_{i}$ to the $r$ -dimensional space. As a consequence, the dimension $d$ shrinks to $\\begin{array}{r}{d_{r}=\\sum_{i=1}^{L}A_{i}r=r\\sum_{i=1}^{L}A_{i}}\\end{array}$ , which represents the total number of components to be stored in the G PU memory on ly for the projection matrices . If we suppose they are stored in bfloat16 $^2\\mathrm{~B~}$ per component), then the entire memory usage for low-rank projection would be $2d_{r}$ . Note that some layers in the model are rank-1 and they do not need compression, but will still have associated states in Adam, which means they must be tan into consideration when computing the theoretical memory (we will use $\\epsilon_{1}$ for memory of rank-1 layers). In addition, we have to store the states $m_{t}$ and $v_{t}$ for AdamW in bfloat16 format, which adds another $4d_{r}$ bytes. In sum, the total memory footprint of GaLore is $M_{G L A W16}(r)=6d_{r}+2\\epsilon_{1}$ (B), while for the 8-bit version we get $M_{G L A W8}(\\bar{r})\\;=\\;4d_{r}\\,+\\,2\\epsilon_{1}$ (B). In the end, the practical memory usage for Llama-2 7B is $M_{G L A W8}(256)=1.36$ (GB), $M_{G L A W8}(1024)=5.43$ (GB), $M_{G L A W16}(\\bar{2}56)=2.04$ (GB) and $M_{G L A W8}(1024)=8.15$ (GB). ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Discussion. Assume our goal is to obtain a lower memory footprint compared to AdamW-8 bit. We fix the gradient density to $k=d/100$ and we have to determine the number of gradients (window size) $m$ for MICROADAM in order to be competitive with AdamW-8 bit. ", "page_idx": 5}, {"type": "text", "text": "For this, we have to solve the equation $M_{\\mu A}(m)\\,=\\,M_{A W8}$ for $m$ , resulting in $m_{\\mathrm{max}}\\,=\\,37.5$ . Specifically, if we use a gradient history of $m\\,<\\,m_{\\mathrm{max}}$ gradients in $\\mathcal{G}$ , MICROADAM will have theoretical memory savings. We will see that, in practice, this history size $m=10$ is more than enough for good practical results. As entries in the window past this range are dampened extremely significantly, their influence is negligible. In Appendix D, we provide Python code to compute the theoretical memory usage for the three optimizers for Llama-2 7B. ", "page_idx": 5}, {"type": "text", "text": "4 Convergence Guarantees for MICROADAM ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we present our theoretical framework. We begin by introducing and discussing the analytical assumptions used in our theory, providing an analytical view of the proposed MICROADAM algorithm, along with two theoretical convergence results. ", "page_idx": 5}, {"type": "text", "text": "4.1 Gradient and Error Compression ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We now define two classes of compression operators widely used in the literature. ", "page_idx": 5}, {"type": "text", "text": "Assumption 1. The gradient compressor $\\mathcal{C}:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{d}$ is $q$ -contractive with $0\\leq q<1$ , i.e., ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\left\\|\\mathcal{C}(x)-x\\right\\|\\leq q\\left\\|x\\right\\|,\\ \\ \\,f o r\\,a n y\\;x\\in\\mathbb{R}^{d}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The compression we use in Algorithm 1 is the TopK compressor $T_{k}$ selecting top $k$ coordinates in absolute value. This is known to be contractive with $q=\\sqrt{1-{k}/{d}}$ . Another popular contractive compressor is the optimal low-rank projection of gradient shaped as a $d\\times d$ matrix, in which case $q=\\bar{\\sqrt{1-R/d}}$ where $R$ is the projection rank. ", "page_idx": 5}, {"type": "text", "text": "The second class of compressors, which we use for the error feedback, requires unbiasedness and relaxes the constant in the uniform bound. ", "page_idx": 5}, {"type": "text", "text": "Assumption 2. The error compressor $\\mathcal{Q}:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{d}$ is unbiased and $\\omega$ -bounded with $\\omega\\ge0$ , namely, ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[\\mathcal{Q}(\\boldsymbol{x})]=\\boldsymbol{x},\\quad\\|\\mathcal{Q}(\\boldsymbol{x})-\\boldsymbol{x}\\|\\le\\omega\\left\\|\\boldsymbol{x}\\right\\|,\\quad f o r\\,a n y\\,\\boldsymbol{x}\\in\\mathbb{R}^{d}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "One example of $\\omega$ -bounded compressor, a version of which is used in Algorithm 2, is the randomized rounding quantizer we employ, whose properties we provide below. ", "page_idx": 5}, {"type": "text", "text": "Lemma 1. Consider Algorithm 2 with randomized rounding, i.e., for a vector $x\\in\\mathbb{R}^{d}$ with $\\delta=$ ${\\mathrm{min}}_{i}\\,x_{i}$ and $\\Delta=\\operatorname*{max}_{i}x_{i},$ , let $\\begin{array}{r}{\\hat{x}_{i}:=\\lfloor\\frac{x_{i}-\\delta}{u}+\\xi\\rfloor u+\\delta}\\end{array}$ be the $i$ -th coordinate of the quantized vector $\\hat{x}$ , where $\\xi\\sim U[0,1]$ is the uniform random variable and $\\begin{array}{r}{u=\\frac{\\Delta-\\delta}{2^{b}-1}}\\end{array}$ is the quantization level. Then ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[\\hat{x}]=x,\\quad\\|\\hat{x}-x\\|\\leq\\frac{\\sqrt{d-2}}{2^{b}-1}\\frac{\\Delta-\\delta}{\\sqrt{\\Delta^{2}+\\delta^{2}}}\\|x\\|,\\quad f o r\\,a l l\\,x\\in\\mathbb{R}^{d}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Next, we provide an \u201canalytical\u201d view of our method in Algorithm 3. Essentially, we use the contractive compressor $\\mathcal{C}$ for compressing the error corrected gradient information $g_{t}+e_{t}$ , and the unbiased compressor $\\mathcal{Q}$ to compress the remaining compression error $g_{t}+e_{t}-\\mathcal{C}(g_{t}+e_{t})$ . ", "page_idx": 5}, {"type": "text", "text": "Algorithm 3 MICROADAM: Analytical View ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "1: Input: parameters $\\beta_{1}$ , $\\beta_{2}\\in(0,1)$ , $\\epsilon>0$ , step-size $\\eta>0$ , $\\theta_{1}\\in\\mathbb{R}^{d}$ , $e_{1}=m_{0}=v_{0}=\\hat{v}_{0}=0_{d}$   \n2: for $t=\\{1,2,...,T\\}$ do   \n3: $g_{t}=\\widetilde{\\nabla}_{\\theta}f(\\theta_{t})$   \n4: $\\tilde{g}_{t}=\\mathcal{C}(g_{t}+e_{t})$   \n5: $e_{t+1}=\\mathcal{Q}(e_{t}+g_{t}-\\tilde{g}_{t})$   \n6: $m_{t}=\\beta_{1}m_{t-1}+(1-\\beta_{1})\\tilde{g}_{t}$   \n7: $v_{t}=\\beta_{2}v_{t-1}+(1-\\beta_{2})\\tilde{g}_{t}^{2}$   \n8: v\u02c6t = max(vt, v\u02c6t\u22121)   \n9: \u03b8t+1 = \u03b8t \u2212\u03b7\u221av\u02c6mtt+\u03f5 ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "$\\diamond$ Compute unbiased stochastic gradient $\\diamond$ Add accumulated error $e_{t}$ and compress $\\diamond$ Update and compress the error $\\diamond$ Update first-order gradient moment $\\diamond$ Update second-order gradient moment $\\diamond$ Apply AMSGrad normalization $\\diamond$ Update the model parameters ", "page_idx": 5}, {"type": "text", "text": "It is clear from this description that our objective with these two compressors, $\\mathcal{C}$ and $\\mathcal{Q}$ , is to approximate the dense gradient information $g_{t}+e_{t}$ using two compressed vectors: $\\tilde{g}_{t}=\\mathcal{C}(g_{t}+e_{t})$ and $\\mathcal{Q}(g_{t}+e_{t}-\\tilde{g}_{t})$ . However, in doing so, we inevitably lose some information about $g_{t}+e_{t}$ depending on the degree of compression applied to each term. Thus, the condition $(1+\\omega)q<1$ required by our analysis can be seen as preventing excessive loss of information due to compression. ", "page_idx": 6}, {"type": "text", "text": "4.2 Convergence Guarantees for General Smooth Non-convex Functions ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Next, we state our algorithm\u2019s convergence guarantees under standard assumptions, stated below: ", "page_idx": 6}, {"type": "text", "text": "Assumption 3 (Lower bound and smoothness). The loss function $f\\colon\\ensuremath{\\mathbb{R}^{d}}\\to\\ensuremath{\\mathbb{R}}$ is lower bounded by some $f^{*}\\in\\mathbb{R}$ and $L$ -smooth, i.e., $\\lVert\\nabla f(\\theta)-\\nabla f(\\theta^{\\prime})\\rVert\\le\\dot{L}\\,\\lVert\\theta-\\theta^{\\prime}\\rVert,$ , for any $\\theta,\\theta^{\\prime}\\in\\mathbb{R}^{d}$ . ", "page_idx": 6}, {"type": "text", "text": "Assumption 4 (Unbiased and bounded stochastic gradient). For all iterates $t\\geq1$ , the stochastic gradient $g_{t}$ is unbiased and uniformly bounded by a constant $G\\geq0$ , i.e., $\\mathbb{E}[g_{t}]=\\nabla f(\\theta_{t})$ , $\\|g_{t}\\|\\leq G$ . ", "page_idx": 6}, {"type": "text", "text": "Assumption 5 (Bounded variance). For all iterates $t\\geq1$ , the variance of the stochastic gradient $g_{t}$ is uniformly bounded by some constant $\\sigma^{2}\\geq0,$ , i.e., $\\mathbb{E}[\\|g_{t}-\\nabla f(\\theta_{t})\\|^{2}]\\leq\\sigma^{2}$ . ", "page_idx": 6}, {"type": "text", "text": "Main Result. The above assumptions are standard in the literature, e.g. [D\u00e9fossez et al., 2022, Li et al., 2022, Xie et al., 2023, Zhou et al., 2024a]. Under these conditions, if the two compressors satisfy the basic condition $(1+\\omega)q<1$ , we show: ", "page_idx": 6}, {"type": "text", "text": "Theorem 1. (Non-convex convergence rate) Let Assumptions 1, 2, 3, 4, 5 hold and $q_{\\omega}:=(1\\!+\\!\\omega)q<$ 1. Then, choosing $\\begin{array}{r}{\\eta=\\operatorname*{min}\\lbrace\\frac{\\epsilon}{4L C_{0}},\\frac{1}{\\sqrt{T}}\\rbrace}\\end{array}$ , MICROADAM (Algorithm 3) satisfies ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{1}{T}\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]\\leq2C_{0}\\left(\\frac{f(\\theta_{1})-f^{\\ast}}{\\sqrt{T}}+\\frac{L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon\\sqrt{T}}\\right)+\\mathcal{O}\\left(\\frac{G^{3}(G+d)}{T}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "with constants $\\begin{array}{r}{C_{0}:=\\sqrt{\\frac{4(1+q_{\\omega}^{2})^{3}}{(1-q_{\\omega}^{2})^{2}}G^{2}+\\epsilon}}\\end{array}$ 4((11\u2212+qq22\u03c9))23 G2 + \u03f5 and C2 := \u03c9q(1 +12\u2212qq\u03c92). ", "page_idx": 6}, {"type": "text", "text": "Discussion. First, notice that the leading term $\\textstyle{\\frac{1}{\\sqrt{T}}}$ of the rate is the optimal convergence speed for non-convex stochastic gradient methods [Ghadimi and Lan, 2016]. Furthermore, the obtained convergence rate $\\begin{array}{r}{\\mathcal{O}(\\frac{1}{\\sqrt{T}}+\\frac{d}{T})}\\end{array}$ asymptotically matches the rate of uncompressed AMSGrad in the stochastic non-convex setup [Zhou et al., 2024a]. Hence, the added compression framework of the MICROADAM together with error feedback mechanism can slow down the convergence speed only up to some constants including the dimension. Evidently, the additional constants $C_{0}$ and $C_{2}$ affected by compression and appearing in the leading terms can be easily estimated once the compressors are fixed. Besides, if we store the full error information without applying $\\mathcal{Q}$ compressor (i.e., $\\omega=0$ , $q_{\\omega}=q$ ), then MICROADAM reduces to the single-node Comp-AMS method by Li et al. [2022] recovering the same convergence rate. The full proof is provided in the Appendix. ", "page_idx": 6}, {"type": "text", "text": "4.3 Convergence Rate for Non-Convex Functions under the PL Condition ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Next, we show that we can obtain even stronger bounds when the objective satisfies the PL condition: Assumption 6 (PL-condition). For some $\\mu>0$ the loss $f$ satisfies Polyak-Lojasiewicz $(P L)$ inequality ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\|\\nabla f(\\theta)\\|^{2}\\geq2\\mu(f(\\theta)-f^{*}),\\;\\;\\;f o r\\,a n y\\;\\theta\\in\\mathbb{R}^{d}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "In this case, we can show: ", "page_idx": 6}, {"type": "text", "text": "Theorem 2. (PL convergence rate) Let Assumptions 1, 2, 3, 4, 5 and $^{6}$ hold, and $q_{\\omega}<1$ . Then, choosing \u03b7 = min{4L\u03f5C 0 , 2C0\u00b5 lTog T}, MICROADAM (Algorithm 3) satisfies ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[f(\\theta_{T+1})]-f^{*}\\leq\\frac{2\\log T}{T}\\left(\\frac{L C_{0}^{2}}{\\mu}\\frac{\\sigma^{2}+(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{C_{0}(1+C_{1})(1+d)G^{2}}{\\mu\\sqrt{\\epsilon}}\\right)+\\widetilde{\\mathcal{O}}\\left(\\frac{G^{4}(G+d)}{T^{2}}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "with constant C1 :=1\u2212\u03b21\u03b21 (1 + C2) + ", "page_idx": 6}, {"type": "text", "text": "Discussion. In contrast to the general non-convex setup, the study of non-convex analysis under the PL condition for AMSGrad or Adam-type methods is much less extensive. The only work we found analyzing the $\\mathrm{PL}$ condition, which claims to be the first in this direction, focuses on Adam when $\\beta_{2}\\to1$ , achieving a convergence rate of $\\mathcal{O}(\\frac{1}{T})$ [He et al., 2023]. However, our MICROADAM is based on AMSGrad normalization, and no constraint on $\\beta_{2}$ is imposed in the analysis. Therefore, similar to the general non-convex case, we are able to achieve the best-known convergence rate in the leading term, up to a logarithmic factor. The third, higher-order term has higher constant dependencies, but they should be negligible as the term is dampened by $T^{2}$ . Hence, in this case as well, the theory predicts that the convergence rate of the algorithm should be similar to the uncompressed version, modulo a constant that can be controlled using the compression parameters. ", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We now validate our optimizer experimentally. We focus on comparing MICROADAM with Adam, Adam-8bit, GaLore and CAME in the context of LLM finetuning on different tasks and with SGD, Adam and AdamW-8bit in the context of ResNets on ImageNet. Concretely, we test our optimizer in full finetuning (FFT) scenario on BERT-Base/Large [Devlin et al., 2018] and OPT-1.3B [Zhang et al., 2022] on GLUE/MNLI and Llama2-7B/13B [Touvron et al., 2023] on the GSM8k math reasoning dataset and on the Open-Platypus instruction tuning dataset, as well as pre-training ResNet models on ImageNet. We provide full details regarding training settings hyper-parameters in Appendix B. ", "page_idx": 7}, {"type": "text", "text": "Finetuning results on GLUE/MNLI. We first test our integration of MICROADAM in HuggingFace Transformers [Wolf et al., 2020] on moderate-sized language models such as BERT-Base/Large (110M and 335M parameters) and OPT-1.3B, comparing with Adam, Adam-8bit, CAME and GaLore. The results are shown in Table 1. Certain optimizers, notably CAME and GaLore, had numerical stability issues across runs; for a fair comparison, we report the numbers for the run with maximum accuracy. We emphasize that all methods were tuned using the same protocol. ", "page_idx": 7}, {"type": "text", "text": "The results show that MICROADAM achieves comparable memory usage to the state-of-the-art heuristics Adam-8bit and GaLore, while being surprisingly lower than CAME on all tasks. The memory savings for GaLore are more visible when the model size increases, which follows our analysis of theoretical memory usage. However, we see that these gains come at a significant accuracy cost for GaLore: across all tasks, it drops at least $1\\%$ accuracy relative to MICROADAM. For BERTBase we ran GaLore with a higher SVD re-computation frequency $T=20$ ( $10\\times$ lower) and the results did not improve, but its running time was much higher. Relative to 8bit Adam, MICROADAM uses essentially the same memory, but achieves slightly better accuracy. ", "page_idx": 7}, {"type": "text", "text": "From these results, we conclude that MICROADAM can provide better accuracy relative to other memory-efficient methods on moderate-sized models, at similar space costs. We show training loss curves in Appendix C. ", "page_idx": 7}, {"type": "table", "img_path": "Tck41RANGK/tmp/37017d7197fb4685f9ce0863f3bad2c8d55a679f8ff88af7d587da57966c4675.jpg", "table_caption": ["Table 1: Finetuning results on GLUE/MNLI. We report the entire memory usage read from the GPU during training, that includes the optimizer state, activations and gradients. The asterisk flags the runs for which one or two seeds did not converge (we report the run with maximum performance). "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Finetuning results for LLaMA2 on GSM-8k. Next, we perform finetuning on Llama-2 7B/13B on GSM-8k, a challenging grade-school-level mathematical reasoning dataset. The baseline model obtains extremely low zero-shot accuracy on this task and therefore fine-tuning is necessary. In this setup, we compare MICROADAM with Adam and Adam-8bit in terms of evaluation accuracy and memory usage. In Table 2 we show our results for 3 training epochs, global batch size 32 with micro-batch (per-device) size 1, max sequence length 512 on a single GPU, which are the standard parameters for this task. We integrated our optimizer with the llm-foundry repository of MosaicML and tested via lm-evaluation-harness. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "For the 7B model, out results show that MICROADAM can allow accurate full fine-tuning of a 7B model on this task using a single 40GB GPU. Moreover, MICROADAM preserves accuracy relative to Adam, with lower memory usage than the well-optimized implementation of 8bit AdamW, and marginally lower running time for the shorter gradient window $m=10$ . Increasing the window size $m$ to 20 gradients leads to slightly better accuracy, at the cost of higher runtime and space, but still in the 40GB limit. Running GaLore in this setup was infeasible since using SVD decomposition for all layers in the model was too slow. Preliminary experiments (with high runtimes) did not yield competitive accuracy. We show training loss curves in Appendix C. ", "page_idx": 8}, {"type": "text", "text": "The results show that MICROADAM allows for full accuracy recovery on this task as well relative to Adam, despite using $50\\%$ less memory. (The memory usage and runtime are very similar to those in Table 2 and are therefore omitted from Table 3.) Moreover, MICROADAM obtains consistently better accuracy relative to Adam-8b, especially on the more challenging ARC-c task. ", "page_idx": 8}, {"type": "table", "img_path": "Tck41RANGK/tmp/cef971c73b7594a338741165b1bd47fec267abb466d3aa038cc5c349de3864db.jpg", "table_caption": ["Table 2: FFT results for Llama-2 7B/13B on GSM-8k "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Finetuning results for LLaMA2-7B on Open-Platypus. Finally, in Table 3 we present FFT results with various optimizers on the popular instruction-tuning Open-Platypus dataset [Lee et al., 2023]. To ensure fair comparisons, we perform the same grid search for each optimizer to find the best performing learning-rate, while keeping all other hyperparameters at their default values. We use $m=10$ gradients for the sliding window and gradient density $k=1\\%$ . Evaluations are conducted following the standard few-shot setup of the Open LLM Leaderboard [Beeching et al., 2023] on the following datasets: ARC-c [Clark et al., 2018], HellaSwag [Zellers et al., 2019], MMLU [Hendrycks et al., 2021], and Winogrande [Sakaguchi et al., 2019]. ", "page_idx": 8}, {"type": "table", "img_path": "Tck41RANGK/tmp/a4bdf16689e0547d18f1be3c18b242a6a8be85833bff44bf76228aeeb0378f35.jpg", "table_caption": ["Table 3: FFT results on instruction-following Open-Platypus [Lee et al., 2023] dataset. The results show that MICROADAM fully recovers accuracy relative to baseline Adam, and outperforms the 8bit variant, despite using less memory. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Pre-training results for ResNets on ImageNet. In Table 4 we present our results for pre-training (from scratch, randomly initialized weights) for ResNet-18/50 on ImageNet (see Figure 6 and Figure 7 in Appendix C). We compare our MICROADAM with SGD, Adam and AdamW and report the training loss, validation accuracy and only the optimizer state memory because the total memory usage is not an issue for ResNets on ImageNet (here we focus on the results to emphasize the pre-training performance). For ResNet-18, AdamW reaches the lowest training loss, followed by AdamW-8bit, MICROADAM and in the end MICROADAM. However, despite slightly larger loss, MICROADAM yields the best result among all optimizers, with $2\\%$ more than the highly tuned SGD, while having the lowest memory footprint for the optimizer states. For ResNet-50, AdamW-8bit reaches the lowest training loss, followed by AdamW, MICROADAM and SGD. The validation accuracy for AdamW and AdamW-8bit is surprisingly small compared to SGD and MICROADAM. As it is widely known in the community, Adam variants have lower performance than SGD for Computer Vision tasks and MICROADAM fixes this issue (see the Discussion section for an intuitive explanation for this phenomenon). ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "table", "img_path": "Tck41RANGK/tmp/7539826381cefa025c4cad78531f1ddb20e36ef1fb26a051173e4709aff4012b.jpg", "table_caption": ["Table 4: Pre-training results for ResNet-18 and ResNet-50 on ImageNet. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "Pre-training LLMs. In this section we explain why we do not include LLM pre-training results. Our motivation is twofold. First, MICROADAM is mainly designed for low-memory finetuning, and the experimental section shows that MICROADAM achieved this goal. Surprisingly, updating only $10\\%$ of the weights at each step yields to significantly better performance compared to SGD for ResNets on ImageNet. Secondly, our experiments on LLM pre-training showed difficulties in achieving the same performance compared to AdamW-8bit. Our explanation is that projection matrices from the attention layers must receive dense updates to learn the correlations between words. In contrast to the convolutional fliters for CV models, the weights in attention are much larger and try to capture global correlations (features) between words, while the convolutional filters are smaller and capture local features. ", "page_idx": 9}, {"type": "text", "text": "Discussion. In Appendix A we provide information about the optimization set, intuitive explanations for the implicit regularization effect of MICROADAM, as well as an overview of our results. ", "page_idx": 9}, {"type": "text", "text": "6 Limitations and Broader Impact ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The MICROADAM algorithm we propose is designed and tested with fine-tuning workloads in mind, where the user aims to minimize the memory cost of optimizing over a powerful pre-trained model. Additional work is needed to adapt our approach to the case of LLM pre-training, which presents a different set of challenges, both in terms of implementation and optimization trajectory. We plan to undertake this study in future work as the current implementation works for ResNets. ", "page_idx": 9}, {"type": "text", "text": "Another limitation we aim to address in future work is that we have only focused on sparsity as a form of gradient projection. However, our theoretical analysis also applies to low-rank projection of gradients. We believe that our practical implementation can be extended to this case as well, although providing a general, accurate, and efficient implementation will require non-trivial efforts. ", "page_idx": 9}, {"type": "text", "text": "Our work introduces a new, accurate, and memory-efficient optimizer for fine-tuning LLMs. The major positive impact of our approach is its ability to maintain performance while reducing memory requirements, thereby lowering the cost of running experiments due to the reduced hardware expenses. It is important to note that while our optimizer can enhance performance and reduce costs, we do not have control over the neural network applications trained with it. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The authors thank Razvan Pascanu, Mahdi Nikdan and Soroush Tabesh for their valuable feedback, the IT department from Institute of Science and Technology Austria for the hardware support and Weights and Biases for the infrastructure to track all our experiments. Mher Safaryan has received funding from the European Union\u2019s Horizon 2020 research and innovation program under the Marie Sklodowska-Curie grant agreement No 101034413. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "N. Agarwal, B. Bullins, X. Chen, E. Hazan, K. Singh, C. Zhang, and Y. Zhang. Efficient full-matrix adaptive regularization. In International Conference on Machine Learning, pages 102\u2013110. PMLR, 2019. ", "page_idx": 9}, {"type": "text", "text": "D. Alistarh, T. Hoefler, M. Johansson, N. Konstantinov, S. Khirirat, and C. Renggli. The convergence of sparsified gradient methods. In Advances in Neural Information Processing Systems, pages 5973\u20135983, 2018.   \nS.-i. Amari. Information geometry and its applications, volume 194. Springer, 2016.   \nR. Anil, V. Gupta, T. Koren, and Y. Singer. Memory efficient adaptive optimization. Advances in Neural Information Processing Systems, 32, 2019.   \nE. Beeching, C. Fourrier, N. Habib, S. Han, N. Lambert, N. Rajani, O. Sanseviero, L. Tunstall, and T. Wolf. Open llm leaderboard. https://huggingface.co/spaces/HuggingFaceH4/open_ llm_leaderboard, 2023.   \nP. Clark, I. Cowhey, O. Etzioni, T. Khot, A. Sabharwal, C. Schoenick, and O. Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge, 2018.   \nA. D\u00e9fossez, L. Bottou, F. Bach, and N. Usunier. A simple convergence proof of adam and adagrad. Transactions on Machine Learning Research, 2022. ISSN 2835-8856. URL https://openreview.net/forum?id $\\equiv$ ZPQhzTSWA7.   \nT. Dettmers, M. Lewis, S. Shleifer, and L. Zettlemoyer. 8-bit optimizers via block-wise quantization. arXiv preprint arXiv:2110.02861, 2021.   \nJ. Devlin, M.-W. Chang, K. Lee, and K. Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding, 2018.   \nJ. C. Duchi, E. Hazan, and Y. Singer. Adaptive subgradient methods for online learning and stochastic optimization. J. Mach. Learn. Res., 12:2121\u20132159, 2010.   \nV. Feinberg, X. Chen, Y. J. Sun, R. Anil, and E. Hazan. Sketchy: Memory-efficient adaptive regularization with frequent directions, 2023.   \nE. Frantar, E. Kurtic, and D. Alistarh. M-fac: Efficient matrix-free approximations of second-order information, 2021.   \nS. Ghadimi and G. Lan. Accelerated gradient methods for nonconvex nonlinear and stochastic programming. Mathematical Programming, 2016. ISSN 156(1-2):59\u201399.   \nV. Gupta, T. Koren, and Y. Singer. Shampoo: Preconditioned stochastic tensor optimization. In International Conference on Machine Learning, pages 1842\u20131850. PMLR, 2018.   \nM. He, Y. Liang, J. Liu, and D. Xu. Convergence of adam for non-convex objectives: Relaxed hyperparameters and non-ergodic case. Journal of Machine Learning Research, 2023.   \nD. Hendrycks, C. Burns, S. Basart, A. Zou, M. Mazeika, D. Song, and J. Steinhardt. Measuring massive multitask language understanding, 2021.   \nS. P. Karimireddy, Q. Rebjock, S. U. Stich, and M. Jaggi. Error feedback fixes SignSGD and other gradient compression schemes. In Proceedings of the Thirty-sixth International Conference on Machine Learning, pages 3252\u20133261, 2019.   \nD. P. Kingma and J. Ba. Adam: A method for stochastic optimization, 2014.   \nA. N. Lee, C. J. Hunter, and N. Ruiz. Platypus: Quick, cheap, and powerful refinement of llms. arXiv preprint arXiv:2308.07317, 2023.   \nX. Li, B. Karimi, and P. Li. On distributed adaptive optimization with gradient compression. arXiv preprint arXiv:2205.05632, 2022.   \nH. Liu, Z. Li, D. Hall, P. Liang, and T. Ma. Sophia: A scalable stochastic second-order optimizer for language model pre-training. arXiv preprint arXiv:2305.14342, 2023.   \nI. Loshchilov and F. Hutter. Decoupled weight decay regularization. In Proceedings of the Seventh International Conference on Learning Representations, 2019.   \nY. Luo, X. Ren, Z. Zheng, Z. Jiang, X. Jiang, and Y. You. Came: Confidence-guided adaptive memory efficient optimization. arXiv preprint arXiv:2307.02047, 2023.   \nI.-V. Modoranu, A. Kalinov, E. Kurtic, and D. Alistarh. Error feedback can accurately compress preconditioners. arXiv preprint arXiv:2306.06098, 2023.   \nS. J. Reddi, S. Kale, and S. Kumar. On the convergence of adam and beyond. arXiv preprint arXiv:1904.09237, 2019.   \nP. Richt\u00e1rik, I. Sokolov, and I. Fatkhullin. Ef21: A new, simpler, theoretically better, and practically faster error feedback. Advances in Neural Information Processing Systems, 34:4384\u20134396, 2021.   \nK. Sakaguchi, R. L. Bras, C. Bhagavatula, and Y. Choi. WINOGRANDE: an adversarial winograd schema challenge at scale, 2019.   \nF. Seide, H. Fu, J. Droppo, G. Li, and D. Yu. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech DNNs. In Fifteenth Annual Conference of the International Speech Communication Association, 2014.   \nN. Shazeer and M. Stern. Adafactor: Adaptive learning rates with sublinear memory cost. In International Conference on Machine Learning, pages 4596\u20134604. PMLR, 2018.   \nR. Spring, A. Kyrillidis, V. Mohan, and A. Shrivastava. Compressing gradient optimizers via count-sketches. In International Conference on Machine Learning, pages 5946\u20135955. PMLR, 2019.   \nH. Touvron, T. Lavril, G. Izacard, X. Martinet, M.-A. Lachaux, T. Lacroix, B. Rozi\u00e8re, N. Goyal, E. Hambro, F. Azhar, A. Rodriguez, A. Joulin, E. Grave, and G. Lample. Llama: Open and efficient foundation language models, 2023.   \nT. Wolf, L. Debut, V. Sanh, J. Chaumond, C. Delangue, A. Moi, P. Cistac, T. Rault, R. Louf, M. Funtowicz, J. Davison, S. Shleifer, P. von Platen, C. Ma, Y. Jernite, J. Plu, C. Xu, T. L. Scao, S. Gugger, M. Drame, Q. Lhoest, and A. M. Rush. Transformers: State-of-the-art natural language processing. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pages 38\u201345, Online, Oct. 2020. Association for Computational Linguistics. URL https://www.aclweb.org/anthology/2020.emnlp-demos.6.   \nX. Xie, P. Zhou, H. Li, Z. Lin, and S. Yan. Adan: Adaptive nesterov momentum algorithm for faster optimizing deep models, 2023.   \nZ. Yao, A. Gholami, S. Shen, K. Keutzer, and M. W. Mahoney. Adahessian: An adaptive second order optimizer for machine learning. arXiv preprint arXiv:2006.00719, 2020.   \nR. Zellers, A. Holtzman, Y. Bisk, A. Farhadi, and Y. Choi. Hellaswag: Can a machine really finish your sentence?, 2019.   \nS. Zhang, S. Roller, N. Goyal, M. Artetxe, M. Chen, S. Chen, C. Dewan, M. Diab, X. Li, X. V. Lin, T. Mihaylov, M. Ott, S. Shleifer, K. Shuster, D. Simig, P. S. Koura, A. Sridhar, T. Wang, and L. Zettlemoyer. Opt: Open pre-trained transformer language models, 2022.   \nJ. Zhao, Z. Zhang, B. Chen, Z. Wang, A. Anandkumar, and Y. Tian. Galore: Memory-efficient llm training by gradient low-rank projection. arXiv preprint arXiv:2403.03507, 2024.   \nD. Zhou, J. Chen, Y. Cao, Z. Yang, and Q. Gu. On the convergence of adaptive gradient methods for nonconvex optimization. Transactions on Machine Learning Research, 2024a. ISSN 2835-8856. URL https://openreview.net/forum?id $\\cdot=$ Gh0cxhbz3c. Featured Certification.   \nP. Zhou, X. Xie, Z. Lin, and S. Yan. Towards understanding convergence and generalization of adamw. IEEE Transactions on Pattern Analysis and Machine Intelligence, pages 1\u20138, 2024b. doi: 10.1109/TPAMI.2024.3382294. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Contents ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "1 Introduction ", "page_idx": 12}, {"type": "text", "text": "2 Related Work ", "page_idx": 12}, {"type": "text", "text": "The MICROADAM Algorithm 3   \n3.1 Efficient Implementation 4   \n3.2 Memory footprint analysis for the optimizer states and comparison with other methods 5   \n4.1 Gradient and Error Compression 6   \n4.2 Convergence Guarantees for General Smooth Non-convex Functions 7   \n4.3 Convergence Rate for Non-Convex Functions under the PL Condition 7 ", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "5 Experiments 8 ", "page_idx": 12}, {"type": "text", "text": "6 Limitations and Broader Impact 10 ", "page_idx": 12}, {"type": "text", "text": "A Additional Explanations and Experimental Details 14 ", "page_idx": 12}, {"type": "text", "text": "B.1 GLUE/MNLI 14  \nB.2 GSM-8k. 15  \nB.3 ImageNet 15", "page_idx": 12}, {"type": "text", "text": "C Training Graphs 15 ", "page_idx": 12}, {"type": "text", "text": "D Memory footprint for the optimizer state 16 ", "page_idx": 12}, {"type": "text", "text": "E Deferred Proofs 18 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "E.1 Intermediate Lemmas 18   \nE.2 Non-convex Analysis 21   \nE.3 Analysis Under PL Condition 26   \nE.4 Non-convex Analysis with Weight Decay 30   \nF Error Feedback applied to GaLore 34   \nF.1 Behaviour of the Error Feedback Mechanism 34   \nF.2 Consequences on Training 35 ", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Additional Explanations and Experimental Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Optimization set. The parameters included in the optimization set usually vary depending on the model and optimizer type. For GLUE, we do not include the embeddings in the optimization set for any of the optimizers because our experiments showed no significant difference when optimizing the embeddings. Moreover, it is more fair for GaLore which would have an increased memory usage due to the projection matrix for the embeddings. For LLaMa2 and ResNet models, we include all layers in the optimization set, regardless of their type. This means that MICROADAM updates at most $1\\dot{0}\\%$ of the weights in each layer. In the original work, GaLore was applied only to a subset of layers, such as Q-, K-, V-, O-, up-, down- and gate-projection layers. Applying GaLore to all layers in the same way as we do with MICROADAM would result in much larger memory usage because of the projection matrices for the embeddings. Moreover, computing SVD for the embedding layer would be infeasible. As a result, we omit the GaLore for LLaMa2 and ResNet experiments. ", "page_idx": 13}, {"type": "text", "text": "Implicit regularization. In our results so far, we observed MICROADAM having better performance for a few LLM finetuning tasks, but especially for the ResNet/ImageNet results, where the difference was statistically significant (around $1\\%$ ). Our intuition for this behavior mainly comes from the accuracy curves in Figure 6 and Figure 7. The trajectories of MICROADAM and SGD are typical for regularized training. We hypothesize that MICROADAM has an implicit regularization mechanism because the model update $u_{t}$ is $90\\%$ sparse, which leads to only updating $10\\%$ of the model parameters at each step in each layer. In contrast to a $100\\%$ dense update $u_{t}$ , a sparse update would not change the model parameters as much as a dense one. In the ResNet experiments, all optimizers used the same regularization parameter $\\lambda=1e-4$ , but the accuracy graph shows that MICROADAM is more regularized than SGD, while the graphs for AdamW and AdamW-8bit look like the regularization does not have any effect. ", "page_idx": 13}, {"type": "text", "text": "Discussion. In summary, the experimental results have shown that MICROADAM can recover the state-of-the-art accuracy of the the uncompressed Adam baseline, while providing significant memory gains and matching wall-clock speed on billion-parameter models. Specifically, our approach matches and outperforms Adam-8b and CAME both in terms of memory use and in terms of final accuracy. Relative to the high-compression GaLore method, MICROADAM provides consistently higher accuracy, as well as more stable practical convergence. We conclude that MICROADAM should be a good alternative to Adam-8bit in memory-constrained settings, and that the empirical results appear to validate our theoretical predictions. ", "page_idx": 13}, {"type": "text", "text": "B Training Settings and Hyper-parameters ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this section we provide details about the hyper-parameters that we used for each model and dataset. We train all our models in bfloat16 format, tune the learning rates on a grid and report the best accuracy among 3 seeds (7, 42 and 1234) and report the results for the best configuration that converged. ", "page_idx": 13}, {"type": "text", "text": "All Adam variants use default parameters $\\beta_{1}=0.9,\\beta_{2}=0.999$ , $\\epsilon=10^{-8}$ and the regularization parameter $\\lambda$ is 0 for finetuning and $3e-4$ for ImageNet pre-training. MICROADAM uses a window size of $m=10$ gradients with $k=1\\%$ density (equivalent to $99\\%$ sparsity and quantization bucket size is set to 64 for the error feedback. ", "page_idx": 13}, {"type": "text", "text": "For GaLore we use rank $r=256$ and the SVD update interval is set to $T=200$ , as suggested by the original paper. We run our experiments on NVidia GPUs A100-SXM4-80GB, H100-80GB and on RTX 3090 with 24GB RAM in single GPU setup. ", "page_idx": 13}, {"type": "text", "text": "B.1 GLUE/MNLI ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "For GLUE/MNLI, we used the learning rate grid $1e-6,3e-6,5e-6,7e-6,1e-5,3e-5,5e-$ $5,7e-5\\}$ for all optimizers and models. Certain optimizers diverge for specific seeds. Next, we provide some details about hyper-parameters for each optimizer individually. ", "page_idx": 13}, {"type": "text", "text": "MICROADAM. We use $m=10$ gradients in the sliding window, $k=1\\%$ density (e.g. $99\\%$ sparsity) and quantization bucket size 64 (we also tried 100 000, but this didn\u2019t affect performance or memory usage in a meaningful way). ", "page_idx": 13}, {"type": "text", "text": "Adam and Adam-8bit. All hyper-parameters mentioned above apply for these two main baseline optimizers. ", "page_idx": 14}, {"type": "text", "text": "GaLore. We use rank $r\\,=\\,256$ and SVD update interval $T\\,\\in\\,\\{20,200\\}$ . In the original GaLore paper, the authors tune both learning rate and in our experiments we keep scale fixed to value 1 and augment the learning rate grid with the values $\\left\\{1e-4,3e-4,5e-4,7e-4\\right\\}$ . ", "page_idx": 14}, {"type": "text", "text": "CAME. This optimizer has some additional parameters that we keep to default values, such as $\\beta_{3}=0.9999$ . Instead of $\\epsilon$ , it uses $\\epsilon_{1}=1e-30$ and $\\epsilon_{2}=1e\\mathrm{~-~}16$ . The authors mention that the learning rate should be much smaller than Adam\u2019s and because of that we augment the learning rate grid with the values $\\{1e-7,3e-7,5e-7,7e-7\\}$ . ", "page_idx": 14}, {"type": "text", "text": "B.2 GSM-8k. ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For GSM- $\\mathbf{\\nabla}\\cdot\\mathbf{8k}$ , we used the learning rate grid $\\{1e-5,2e-5,3e-5,4e-5,5e-5,6e-5,7$ e \u2212 $5,8e-5,9e-5\\}$ and reported the model with the best evaluation accuracy. We found that different versions for PyTorch, lm-eval-harness and llm-foundry have large variance in the results. ", "page_idx": 14}, {"type": "text", "text": "MICROADAM. We use similar settings as for GLUE/MNLI above in terms of other hyper-parameters. ", "page_idx": 14}, {"type": "text", "text": "B.3 ImageNet ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For ImageNet, we integrate our MICROADAM in the FFCV repository, which is highly tuned for ResNets and SGD. We use $E=100$ epochs, batch size 1024, cosine learning rate schedule with warmup and image resolution $224\\times224$ and precision bfloat16. We started from the initial learning rate $\\eta=1.024$ tuned in the repository which scored highest accuracy for SGD. This learning rate also worked well for MICROADAM, but it didn\u2019t work for AdamW and AdamW-8bit. For these two Adam variants we divided the learning rate by 2 until the models converged. ", "page_idx": 14}, {"type": "text", "text": "ResNet-18. For AdamW, the learning rate is $\\eta=0.016$ and for AdamW-8bit is $\\eta=0.032$ . ", "page_idx": 14}, {"type": "text", "text": "ResNet-50. For AdamW, the learning rate is $\\eta=0.008$ and for AdamW-8bit is $\\eta=0.008$ . ", "page_idx": 14}, {"type": "text", "text": "C Training Graphs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section we show training loss curves for BERT-Base, BERT-Large and OPT-1.3b on GLUE/MNLI and Llama-2 7B/13B on GSM-8k and ResNet-18/50 on ImageNet. ", "page_idx": 14}, {"type": "image", "img_path": "Tck41RANGK/tmp/1b91b363aced4ed60fbe70b6bfca5ed864540ec784d15d64d324096c51d5c6a5.jpg", "img_caption": ["Figure 2: Training curves for BERT-Base on GLUE/MNLI "], "img_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "Tck41RANGK/tmp/d95dbcd41bcfcca3c58e5c999260124230853404082e55ba11ceba9b34d74d29.jpg", "img_caption": ["Figure 3: Training curves for BERT-Large on GLUE/MNLI ", "Figure 4: Training curves for OPT-1.3B on GLUE/MNLI "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "Tck41RANGK/tmp/ae00b8041b5d9c2870461ddfd2110de1c1335d588a6d1d50940808c4b6a1bea4.jpg", "img_caption": [], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "D Memory footprint for the optimizer state ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this section we provide a python script to simulate the memory usage for our optimizer\u2019s state for Llama2-7b model. Note that the theoretical memory usage will always be slightly lower than the actual allocated memory on the GPU because PyTorch usually allocates more. To run this script, run the following commands: ", "page_idx": 15}, {"type": "text", "text": "import math", "page_idx": 15}, {"type": "text", "text": "d = 6_738_415_616 # a c t u a l number of parameters f o r Llama\u22122 7b   \n$\\mathrm{~k~}=$ math . c e i l ( d / 100)   \n$\\mathrm{~m~}=\\mathrm{~10~}$   \n$\\mathrm{M\\_AW32\\=\\8\\\\ast\\\\d\\\\/\\\\(\\,2\\\\\\ast\\3\\,0\\,)}$   \n$\\mathrm{M\\_AW16}\\;=\\;4\\;\\;*\\;\\textrm{d}\\;\\;/\\;\\;\\;(\\;2\\;\\;**\\;\\;30\\,)$   \n$\\mathrm{\\boldmath~\\cal~M~}\\mathrm{\\boldmath~AW8~}=\\mathrm{\\boldmath~2~}\\ast\\mathrm{\\boldmath~d~}\\mathrm{\\boldmath~/~}\\mathrm{\\boldmath~(2~}\\ast\\ast\\mathrm{\\boldmath~30)~}$   \n$\\mathrm{M\\_muA~=~(0\\,.5~\\,~*~\\,~d~+~4~\\,~*~m~*~k~)~\\,~/~\\,~(2~}$ \\*\\* 30) # B to GB ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "image", "img_path": "Tck41RANGK/tmp/e86f1bc30c9f8e33fee5fb3f08a05ed89a7a88025943f656fb47f6bb64871ef3.jpg", "img_caption": ["Figure 5: Training curves for Llama-2 7B on GSM-8k ", "Figure 6: Pre-training for ResNet-18 on ImageNet "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "Tck41RANGK/tmp/c7686ca7af9d29701a1acfed038015417de7a3643e0f170cc491d1ff09603528.jpg", "img_caption": ["Figure 7: Pre-training for ResNet-50 on ImageNet "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "Tck41RANGK/tmp/827eafdc0febc498f7f5add2d3af8665963fa323b75ff45c56053349c099f269.jpg", "img_caption": [], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "print ( f ' $\\{{\\bf M}\\_{\\sf A W32}=:.2$ f } GB ' ) print ( f ' {M_AW16= : . 2 f } GB ' ) print ( f ' {M_AW8= : . 2 f } GB ' ) print ( f ' {M_muA= : . 2 f } GB ' ) ", "page_idx": 16}, {"type": "text", "text": "GL_sumA = 1_423_872 # sum_Ai from Llama\u22122 7B e p s i l o n $=~266\\_240$ # sum of s i z e s f o r rank \u22121 l a y e r s for b i t s , const in [ ( 8 , 4) , (16 , 6 ) ] : for rank in [256 , 1024]: dr $=$ rank $^*$ GL_sumA M_GLAW_rank $=$ ( const \\* dr + 2 \\* e p s i l o n ) / (2 \\*\\* 30) print ( f 'M_GLAW{ b i t s } _rank { rank } $=$ {M_GLAW_rank : . 2 f } GB ' ) ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "E Deferred Proofs ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "At time step $t$ , let the uncompressed stochastic gradient be $g_{t}=\\widetilde{\\nabla}_{\\theta}f(\\theta_{t})$ , the error accumulator be $e_{t}$ , and the compressed gradient after the error correction be $\\tilde{g}_{t}\\,=\\,\\dot{\\mathcal{C}}(g_{t}+e_{t})$ . The second moment computed by the compressed gradients is denoted as $v_{t}\\ ^{\\'}=\\ \\beta_{2}v_{t-1}^{\\\"}+(1-\\beta_{2})\\tilde{g}_{t}^{2}$ , and $\\hat{v}_{t}=\\operatorname*{max}\\{\\hat{v}_{t-1},v_{t}\\}$ is the AMSGrad normalization for the second-order momentum. Besides the first-order gradient momentum $m_{t}$ used in the algorithm description, we define similar running average sequence $m_{t}^{\\prime}$ based on the uncompressed gradients $g_{t}$ . ", "page_idx": 17}, {"type": "equation", "text": "$$\nm_{t}=\\beta_{1}m_{t-1}+(1-\\beta_{1})\\tilde{g}_{t}\\quad\\mathrm{and}\\quad m_{t}^{\\prime}=\\beta_{1}m_{t-1}^{\\prime}+(1-\\beta_{1})g_{t},\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Note that $m_{t}^{\\prime}$ is used only in the analysis, we do not need to store or compute it. By construction we have ", "page_idx": 17}, {"type": "equation", "text": "$$\nm_{t}=(1-\\beta_{1})\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\tilde{g}_{\\tau},\\quad m_{t}^{\\prime}=(1-\\beta_{1})\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}g_{\\tau}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Denote by $\\zeta_{t}=e_{t+1}-(e_{t}+g_{t}-\\tilde{g}_{t})=\\mathcal{Q}\\big(e_{t}+g_{t}-\\tilde{g}_{t}\\big)-\\big(e_{t}+g_{t}-\\tilde{g}_{t}\\big)$ the compression noise from $\\mathcal{Q}$ . Due to unbiasedness of the compressor $\\mathcal{Q}$ (see Assumption 2), we have $\\mathbb{E}[\\zeta_{t}\\;|\\;\\theta_{t},g_{t},\\tilde{g}_{t},e_{t}]=0$ . Also, from the update rule of $e_{t+1}$ we get $e_{t+1}=e_{t}+g_{t}-\\tilde{g}_{t}+\\zeta_{t}$ . Moreover, we use the following auxiliary sequences, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{E}_{t+1}:=\\beta_{1}\\mathcal{E}_{t}+(1-\\beta_{1})e_{t+1}=(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t+1}\\beta_{1}^{t+1-\\tau}e_{\\tau}.}\\\\ {\\mathcal{Z}_{t+1}:=\\beta_{1}\\mathcal{Z}_{t}+(1-\\beta_{1})\\zeta_{t+1}=(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t+1}\\beta_{1}^{t+1-\\tau}\\zeta_{\\tau}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "E.1 Intermediate Lemmas ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Lemma 1. Consider Algorithm 2 with randomized rounding, i.e., for a vector $x\\in\\mathbb{R}^{d}$ with $\\delta=$ ${\\mathrm{min}}_{i}\\,x_{i}$ and $\\Delta=\\operatorname*{max}_{i}x_{i},$ , let $\\begin{array}{r}{\\hat{x}_{i}:=\\lfloor\\frac{x_{i}-\\delta}{u}+\\xi\\rfloor u+\\delta}\\end{array}$ be the i-th coordinate of the quantized vector $\\hat{x}$ , where $\\xi\\sim U[0,1]$ is the uniform random variable and $\\begin{array}{r}{u=\\frac{\\Delta-\\delta}{2^{b}-1}}\\end{array}$ is the quantization level. Then ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[\\hat{x}]=x,\\quad\\|\\hat{x}-x\\|\\leq\\frac{\\sqrt{d-2}}{2^{b}-1}\\frac{\\Delta-\\delta}{\\sqrt{\\Delta^{2}+\\delta^{2}}}\\|x\\|,\\quad f o r\\,a l l\\,x\\in\\mathbb{R}^{d}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. The unbiasedness can be verified directly from the definition for each coordinate. Without loss of generality assume that $\\delta\\,=\\,x_{1}\\,\\le\\,x_{2}\\,\\le\\,\\cdots\\,\\le\\,x_{d-1}\\,\\le\\,x_{d}\\,=\\,\\Delta$ . By construction of the quantization, we have $|{\\hat{x}}_{1}-x_{1}|=|{\\hat{x}}_{d}-x_{d}|=0$ and $|\\hat{x}_{i}-x_{i}|\\leq u$ for the remaining coordinates $2\\leq i\\leq d-1$ . Then ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\|{\\hat{x}}-x\\|^{2}=\\sum_{i=1}^{d}|{\\hat{x}}_{i}-x_{i}|^{2}\\leq(d-2)u^{2}\\leq{\\frac{(d-2)u^{2}}{\\Delta^{2}+\\delta^{2}}}\\|x\\|^{2},\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "which completes the proof. ", "page_idx": 17}, {"type": "text", "text": "Lemma 2. Under Assumptions 1-5, for all iterates $t$ and $T$ we have ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\|m_{t}^{\\prime}\\|\\leq G,\\quad a n d\\quad\\sum_{t=1}^{T}\\mathbb{E}[\\|m_{t}^{\\prime}\\|^{2}]\\leq T\\sigma^{2}+\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}].\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. The first part follows from triangle inequality and the Assumption 4 on bounded stochastic gradient: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\|m_{t}^{\\prime}\\|=(1-\\beta_{1})\\left\\|\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}g_{\\tau}\\right\\|\\leq(1-\\beta_{1})\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\|g_{\\tau}\\|\\leq G.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "For the second claim, the expected squared norm of average stochastic gradient can be bounded by ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}\\left[\\|g_{t}\\|^{2}\\right]=\\mathbb{E}\\left[\\|g_{t}-\\nabla f(\\theta_{t}))\\|^{2}\\right]+\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]\\leq\\sigma^{2}+\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where we use Assumption 5 that $g_{t}$ is unbiased with bounded variance. Let $g_{t,j}$ denote the $j$ -th coordinate of $g_{t}$ . Applying Jensen\u2019s inequality for the squared norm, we get ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r c l}{\\mathbb{E}[\\|m_{t}^{\\prime}\\|^{2}]}&{=}&{\\mathbb{E}\\left[\\left\\|(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}g_{\\tau}\\right\\|^{2}\\right]}\\\\ &{\\leq}&{(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\mathbb{E}[\\|g_{\\tau}\\|^{2}]}\\\\ &{\\leq}&{\\sigma^{2}+(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\mathbb{E}[\\|\\nabla f(\\theta_{\\tau})\\|^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Summing over $t=1,\\dots,T$ , we obtain ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\mathbb{E}[\\Vert m_{t}^{\\prime}\\Vert^{2}]\\leq T\\sigma^{2}+(1-\\beta_{1})\\sum_{t=1}^{T}\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\mathbb{E}[\\Vert\\nabla f(\\theta_{\\tau})\\Vert^{2}]\\leq T\\sigma^{2}+\\sum_{t=1}^{T}\\mathbb{E}[\\Vert\\nabla f(\\theta_{t})\\Vert^{2}],\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "which completes the proof. ", "page_idx": 18}, {"type": "text", "text": "Lemma 3. Let $q_{\\omega}=(1+\\omega)q<1$ . Under Assumptions 1-5, for all iterates $t$ we have ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\|e_{t}\\|^{2}\\leq\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}G^{2}},}\\\\ {{\\displaystyle\\mathbb{E}[\\|e_{t+1}\\|^{2}]\\leq\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sigma^{2}+\\frac{2q_{\\omega}^{2}}{1-q_{\\omega}^{2}}\\sum_{\\tau=1}^{t}\\left(\\frac{1+q_{\\omega}^{2}}{2}\\right)^{t-\\tau}\\mathbb{E}[\\|\\nabla f(\\theta_{\\tau})\\|^{2}]}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Proof. We start by using Assumption 1, 2 on compression and Young\u2019s inequality to get ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\|e_{t+1}\\|^{2}=\\|\\mathcal{Q}(g_{t}+e_{t}-\\mathcal{C}(g_{t}+e_{t}))\\|^{2}}\\\\ &{\\qquad\\qquad\\leq(1+\\omega)^{2}q^{2}\\|g_{t}+e_{t}\\|^{2}}\\\\ &{\\qquad\\leq q_{\\omega}^{2}(1+\\rho)\\|e_{t}\\|^{2}+q_{\\omega}^{2}\\left(1+\\displaystyle\\frac{1}{\\rho}\\right)\\|g_{t}\\|^{2}}\\\\ &{\\qquad\\qquad\\leq\\displaystyle\\frac{1+q_{\\omega}^{2}}{2}\\|e_{t}\\|^{2}+\\displaystyle\\frac{2q_{\\omega}^{2}}{1-q_{\\omega}^{2}}\\|g_{t}\\|^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where (2) is derived by choosing $\\begin{array}{r}{\\rho\\ =\\ \\frac{1-q_{\\omega}^{2}}{2q_{\\omega}^{2}}}\\end{array}$ and the fact that $q_{\\omega}\\ <\\ 1$ . For the first claim we recursively apply the obtained inequality and use bounded gradient Assumption 4. For the second claim, initialization $e_{1}=0$ and the obtained recursion imply ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r c l}{\\mathbb{E}[\\|e_{t+1}\\|^{2}]}&{\\le}&{\\displaystyle\\frac{2q_{\\omega}^{2}}{1-q_{\\omega}^{2}}\\sum_{\\tau=1}^{t}\\left(\\frac{1+q_{\\omega}^{2}}{2}\\right)^{t-\\tau}\\mathbb{E}[\\|g_{\\tau}\\|^{2}]}\\\\ &{\\overset{(1)}{\\le}}&{\\displaystyle\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sigma^{2}+\\frac{2q_{\\omega}^{2}}{1-q_{\\omega}^{2}}\\sum_{\\tau=1}^{t}\\left(\\frac{1+q_{\\omega}^{2}}{2}\\right)^{t-\\tau}\\mathbb{E}[\\|\\nabla f(\\theta_{\\tau})\\|^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "which concludes the lemma. ", "page_idx": 18}, {"type": "text", "text": "Lemma 4. Let $q_{\\omega}=(1+\\omega)q<1.$ . Under Assumptions 1-5, for all iterates $t$ we have ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\left\\Vert\\zeta_{t}\\right\\Vert\\leq\\omega q\\left(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)G,\\quad a n d\\quad\\left\\Vert\\mathcal{Z}_{t}\\right\\Vert\\leq\\omega q\\left(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)G.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Proof. Using the bounds defining compressors and Lemma 3, we get ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\|\\zeta_{t}\\|=\\|\\mathcal{Q}(e_{t}+g_{t}-\\tilde{g}_{t})-\\left(e_{t}+g_{t}-\\tilde{g}_{t}\\right)\\|}\\\\ &{\\qquad\\le\\omega\\|e_{t}+g_{t}-\\tilde{g}_{t}\\|=\\omega\\|e_{t}+g_{t}-\\mathcal{C}(e_{t}+g_{t})\\|}\\\\ &{\\qquad\\le\\omega q\\|e_{t}+g_{t}\\|}\\\\ &{\\qquad\\le\\omega q\\|e_{t}\\|+\\omega q\\|g_{t}\\|}\\\\ &{\\qquad\\le\\omega q\\left(1+\\displaystyle\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)G.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "For the second claim, recall the definition of $\\mathcal{Z}_{t}$ and apply triangle inequality: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\Vert\\mathcal{Z}_{t}\\Vert\\leq\\left(1-\\beta_{1}\\right)\\sum_{\\tau=1}^{t}\\beta^{t-\\tau}\\Vert\\zeta_{\\tau}\\Vert\\leq\\omega q\\left(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)G.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Lemma 5. For the moving average error sequence $\\mathcal{E}_{t}$ , it holds that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\mathbb{E}[\\|\\mathcal{E}_{t}\\|^{2}]\\leq\\frac{4T q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sigma^{2}+\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}].\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Proof. Let $e_{t,j}$ be the $j$ -th coordinate of $e_{t}$ and denote ", "page_idx": 19}, {"type": "equation", "text": "$$\nK_{t}:=\\sum_{\\tau=1}^{t}\\left(\\frac{1+q_{\\omega}^{2}}{2}\\right)^{t-\\tau}\\mathbb{E}[\\|\\nabla f(\\theta_{\\tau})\\|^{2}].\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Applying Jensen\u2019s inequality and Lemma 3, we get ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\mathbb{E}[\\|\\mathcal{E}_{t}\\|^{2}]=\\mathbb{E}\\left[\\left\\|(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}e_{\\tau}\\right\\|^{2}\\right]}\\\\ {\\displaystyle\\leq(1-\\beta_{1})\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\mathbb{E}[\\|e_{\\tau}\\|^{2}]}\\\\ {\\displaystyle\\leq\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sigma^{2}+\\frac{2q_{\\omega}^{2}(1-\\beta_{1})}{(1-q_{\\omega}^{2})}\\displaystyle\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}K_{\\tau},}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Summing over $t=1,\\dots,T$ and using the technique of geometric series summation leads to ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|\\boldsymbol{\\xi}_{t}\\|^{2}]\\leq\\frac{4T q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}{\\sigma^{2}}+\\frac{2q_{\\omega}^{2}(1-\\beta_{1})}{(1-q_{\\omega}^{2})}\\sum_{t=1}^{T}\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}K_{\\tau}}\\\\ &{\\leq\\frac{4T q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}{\\sigma^{2}}+\\frac{2q_{\\omega}^{2}}{(1-q_{\\omega}^{2})}\\sum_{t=1}^{T}K_{t}}\\\\ &{=\\displaystyle\\frac{4T q_{\\omega}^{2}}{(1-q_{\\omega}^{2})}{\\sigma^{2}}+\\frac{2q_{\\omega}^{2}}{(1-q_{\\omega}^{2})}\\sum_{t=1}^{T}\\sum_{\\tau=1}^{t}\\left(\\frac{1+q_{\\omega}^{2}}{2}\\right)^{t-\\tau}\\mathbb{E}[\\|\\nabla f(\\boldsymbol{\\theta}_{\\tau})\\|^{2}]}\\\\ &{\\leq\\frac{4T q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}{\\sigma^{2}}+\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\boldsymbol{\\theta}_{t})\\|^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "The desired result is obtained. ", "page_idx": 19}, {"type": "text", "text": "Lemma 6. Let $q_{\\omega}=(1+\\omega)q<1$ . Under Assumptions 1-5, for all iterates $t\\in[T]$ and coordinates $i\\in[d]$ , the following bound holds ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\hat{v}_{t,i}\\leq\\frac{4(1+q_{\\omega}^{2})^{3}}{(1-q_{\\omega}^{2})^{2}}G^{2}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Proof. Lemma 3 and Assumption 4 imply ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\|\\tilde{g}_{t}\\|^{2}=\\|\\mathcal{C}(g_{t}+e_{t})\\|^{2}}\\\\ &{\\qquad\\quad\\le\\|\\mathcal{C}(g_{t}+e_{t})-(g_{t}+e_{t})+(g_{t}+e_{t})\\|^{2}}\\\\ &{\\qquad\\quad\\le2(q^{2}+1)\\|g_{t}+e_{t}\\|^{2}}\\\\ &{\\qquad\\quad\\le4(q^{2}+1)\\left(G^{2}+\\frac{4q_{\\omega}^{2}}{(1-q_{\\omega}^{2})^{2}}G^{2}\\right)}\\\\ &{\\qquad\\quad=\\frac{4(1+q^{2})(1+q_{\\omega}^{2})^{2}}{(1-q_{\\omega}^{2})^{2}}G^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "It\u2019s then easy to show by the updating rule of $\\hat{v}_{t}$ , there exists a $j\\in[t]$ such that $\\hat{v}_{t,i}=v_{j,i}$ . Then ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\hat{v}_{t,i}=(1-\\beta_{2})\\sum_{\\tau=1}^{j}\\beta_{2}^{j-\\tau}\\tilde{g}_{\\tau,i}^{2}\\leq\\frac{4(1+q^{2})(1+q_{\\omega}^{2})^{2}}{(1-q_{\\omega}^{2})^{2}}G^{2},\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "which concludes the claim. ", "page_idx": 20}, {"type": "text", "text": "Lemma 7. For $\\begin{array}{r}{D_{t}:=\\frac{1}{\\sqrt{\\hat{v}_{t-1}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t}+\\epsilon}}}\\end{array}$ we have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\|D_{t}\\|_{1}\\leq\\frac{d}{\\sqrt{\\epsilon}},\\quad\\sum_{t=1}^{T}\\|D_{t}\\|^{2}\\leq\\frac{d}{\\epsilon}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Proof. By the update rule, we have $\\hat{v}_{t-1,i}\\leq\\hat{v}_{t,i}$ for any iterate $t$ and coordinate $i\\in[d]$ . Therefore, by the initialization $\\hat{v}_{0}=0$ , we get ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\|D_{t}\\|_{1}=\\sum_{t=1}^{T}\\sum_{i=1}^{d}\\left(\\frac{1}{\\sqrt{\\hat{v}_{t-1,i}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t,i}+\\epsilon}}\\right)\\,=\\sum_{i=1}^{d}\\left(\\frac{1}{\\sqrt{\\hat{v}_{0,i}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{T,i}+\\epsilon}}\\right)\\,\\le\\frac{d}{\\sqrt{\\epsilon}}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "For the sum of squared $l_{2}$ norms, note the fact that for $a\\ge b>0$ , it holds that ", "page_idx": 20}, {"type": "equation", "text": "$$\n(a-b)^{2}\\leq(a-b)(a+b)=a^{2}-b^{2}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Thus, ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\|D_{t}\\|^{2}=\\sum_{t=1}^{T}\\sum_{i=1}^{d}\\left(\\frac{1}{\\sqrt{\\hat{v}_{t-1,i}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t,i}+\\epsilon}}\\right)^{2}\\leq\\sum_{t=1}^{T}\\sum_{i=1}^{d}\\left(\\frac{1}{\\hat{v}_{t-1,i}+\\epsilon}-\\frac{1}{\\hat{v}_{t,i}+\\epsilon}\\right)\\leq\\frac{d}{\\epsilon},\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "which gives the desired result. ", "page_idx": 20}, {"type": "text", "text": "E.2 Non-convex Analysis ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Here we derive the convergence rate with fixed step-size $\\eta$ . The rate shown in the main part can be obtained by plugging the expression of $\\eta$ shown after the proof. ", "page_idx": 20}, {"type": "text", "text": "Theorem 3. (Non-convex convergence rate) Let Assumptions 1, 2, 3, 4, 5 hold and $q_{\\omega}:=(1\\!+\\!\\omega)q<$ 1. Then, choosing any step-size $\\begin{array}{r}{\\eta\\le\\frac{\\epsilon}{4L C_{0}}}\\end{array}$ , MICROADAM (Algorithm 3) satisfies ", "page_idx": 20}, {"type": "text", "text": "$\\begin{array}{r l}&{\\frac{1}{T}\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]\\leq2C_{0}\\left(\\frac{f(\\theta_{1})-f^{*}}{T\\eta}+\\frac{\\eta L\\sigma^{2}}{\\epsilon}+\\frac{\\eta L C_{2}^{2}G^{2}}{\\epsilon}\\right.}\\\\ &{\\phantom{\\frac{1}{T}\\sum_{t=1}^{T}}\\left.+\\frac{\\eta^{2}L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}}+\\frac{(1+C_{1})G^{2}d}{T\\sqrt{\\epsilon}}+\\frac{\\eta(1+2C_{1})C_{1}L G^{2}d}{T\\epsilon}\\right),}\\end{array}$ with constants C0 := 4((11\u2212+qq2\u03c9))2 $\\begin{array}{r}{C_{0}:=\\sqrt{\\frac{4(1+q_{\\omega}^{2})^{3}}{(1-q_{\\omega}^{2})^{2}}\\bar{G}^{2}+\\epsilon},\\,C_{1}:=\\frac{\\beta_{1}}{1-\\beta_{1}}(1+C_{2})+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}},\\,C_{2}:=\\omega q(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}).}\\end{array}$ ", "page_idx": 20}, {"type": "text", "text": "Proof. Similar to the proof of Comp-AMS [Li et al., 2022], we define two virtual iterates $\\theta_{t}^{\\prime}$ and $x_{t}$ . ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\theta_{t+1}^{\\prime}:=\\theta_{t+1}-\\eta\\frac{\\xi_{t+1}}{\\sqrt{\\hat{v}_{t}+\\epsilon}}}\\\\ {\\displaystyle x_{t+1}:=\\theta_{t+1}^{\\prime}-\\eta\\frac{\\beta_{1}}{1-\\beta_{1}}\\frac{m_{t}^{\\prime}+\\mathcal{Z}_{t}}{\\sqrt{\\hat{v}_{t}+\\epsilon}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Then, we derive the recurrence relation for each sequence as follows: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\psi_{i+1}=\\psi_{i+1}-\\eta\\frac{\\hat{\\psi}_{i+1}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{(1-\\delta_{i})\\sum_{t=1}^{K-\\epsilon}(1-\\delta_{i})^{t-\\epsilon}}{\\sqrt{\\eta}+\\epsilon}+(1-\\beta_{i})\\frac{\\sum_{t=1}^{K-1}|\\tilde{\\psi}_{i}|^{1-\\epsilon}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{(1-\\delta_{i})\\sum_{t=1}^{K-\\epsilon}(1-\\delta_{i})^{t-\\epsilon}(\\hat{\\eta}_{t}+\\epsilon_{t+1})+(1-\\delta_{i})\\beta_{i}\\epsilon_{1}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{(1-\\delta_{i})\\sum_{t=1}^{K-\\epsilon}(\\hat{\\eta}_{t}+\\epsilon_{t}+\\epsilon_{t})}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{(1-\\delta_{i})\\sum_{t=1}^{K-\\epsilon}(\\hat{\\eta}_{t}-\\eta)}{\\sqrt{\\eta}+\\epsilon}-\\eta\\frac{m_{i}^{t}}{\\sqrt{\\eta}+\\epsilon}-\\eta\\frac{Z_{i}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{\\epsilon}{\\sqrt{\\eta}+\\epsilon}-\\frac{q^{2}}{\\sqrt{\\eta}+\\epsilon}+\\eta\\left(\\frac{m_{i}^{t}}{\\sqrt{\\eta}+\\epsilon}+\\frac{1}{\\sqrt{\\eta}+\\epsilon}\\right)\\epsilon_{i}-\\eta\\frac{Z_{i}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{m_{i}^{t}}{\\sqrt{\\eta}+\\epsilon}+\\eta\\left(\\frac{1}{\\sqrt{\\eta}-1+\\epsilon}-\\frac{1}{\\sqrt{\\eta}+\\epsilon}\\right)\\epsilon_{i}-\\eta\\frac{Z_{i}}{\\sqrt{\\eta}+\\epsilon}}\\\\ &{\\quad=\\theta_{i}-\\eta\\frac{m_{i}^{t}+Z_{i}}{\\sqrt{\\eta}+\\epsilon}+\\eta\\rho_{i}\\delta_{i},}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "where we used the fact that $\\tilde{g}_{t}+e_{t+1}=g_{t}+e_{t}+\\zeta_{t}$ with quantization noise $\\zeta_{t}$ , and $e_{0}\\,=\\,0$ at initialization. Next, for the $x_{t}$ iterates we have ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{x_{t+1}=\\theta_{t+1}^{\\prime}-\\eta\\frac{\\beta_{1}}{1-\\beta_{1}}\\frac{m_{t}^{\\prime}+Z_{t}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}}\\\\ &{\\quad\\quad=\\theta_{t}^{\\prime}-\\eta\\frac{m_{t}^{\\prime}+Z_{t}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}-\\eta\\frac{\\beta_{1}}{1-\\beta_{1}}\\frac{m_{t}^{\\prime}+Z_{t}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}+\\eta D_{t}\\xi_{t}}\\\\ &{\\quad\\quad=\\theta_{t}^{\\prime}-\\eta\\frac{\\beta_{1}(m_{t-1}^{\\prime}+Z_{t-1})+(1-\\beta_{1})(g_{t}+\\zeta_{t})+\\frac{\\beta_{1}^{2}}{1-\\beta_{1}}(m_{t-1}^{\\prime}+Z_{t-1})+\\beta_{1}(g_{t}+\\zeta_{t})}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}}\\\\ &{\\quad\\quad\\quad+\\eta D_{t}\\xi_{t}}\\\\ &{\\quad\\quad=\\theta_{t}^{\\prime}-\\eta\\frac{\\beta_{1}}{1-\\beta_{1}}\\frac{m_{t-1}^{\\prime}+Z_{t-1}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}-\\eta\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}+\\eta D_{t}\\xi_{t}}\\\\ &{\\quad\\quad\\quad=x_{t}-\\eta\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\dot{\\pi}_{t}+\\epsilon}}+\\eta\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+\\eta D_{t}\\xi_{t}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Next we apply smoothness (Assumption 3) of the loss function $f$ over the iterates $x_{t}$ . From the gradient Lipschitzness we have ", "page_idx": 21}, {"type": "equation", "text": "$$\nf(x_{t+1})\\leq f(x_{t})+\\langle\\nabla f(x_{t}),x_{t+1}-x_{t}\\rangle+{\\frac{L}{2}}\\|x_{t+1}-x_{t}\\|^{2}.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Due to unbiasedness of the compressor $\\mathcal{Q}$ (see Assumption 2), we have $\\mathbb{E}\\big[\\zeta_{t}|g_{t},\\tilde{g}_{t},e_{t},\\hat{v}_{t}\\big]\\,=\\,0$ . Taking expectation, we obtain ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{E}[f(x_{1})]-\\mathbb{E}[f(x_{1})]\\leq}&{\\leq-\\eta\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1})\\frac{\\eta}{\\sqrt{1+\\eta}}+\\mathbb{E}\\left[\\right]\\bigg)}\\\\ &{\\quad+\\eta\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1})\\frac{\\eta}{\\sqrt{1+\\eta}}+\\hat{\\Pi}_{}f(m_{\\hat{i}}^{t}+2\\!\\dots)+D_{t}\\xi\\bigg)\\bigg]}\\\\ &{\\quad+\\frac{\\eta^{2}\\mathbb{E}}{2}\\mathbb{E}\\bigg[\\bigg\\|\\frac{\\eta}{\\sqrt{1+\\eta}}+\\frac{\\mathbb{E}}{\\eta}-\\frac{\\mathbb{D}_{\\theta}}{\\sqrt{1+\\eta}}D_{t}(m_{t-1}^{t}+2\\!\\dots)-D_{t}\\xi\\bigg\\|^{2}\\bigg]}\\\\ {=}&{\\underbrace{-\\eta\\mathbb{E}\\bigg[\\bigg(\\nabla f(\\theta),\\frac{\\eta}{\\sqrt{1+\\eta}}-\\frac{\\mathbb{D}_{\\theta}}{\\sqrt{1+\\eta}}\\bigg)\\bigg]}_{\\Phi=\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1}),\\frac{\\eta}{\\sqrt{1+\\eta}}\\bigg)(m_{t-1}^{t}+2\\!\\dots)+D_{t}\\xi\\bigg]}}\\\\ &{\\quad+\\underbrace{\\eta\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1})\\frac{\\eta}{\\sqrt{1+\\eta}}-\\frac{\\mathbb{D}_{\\theta}}{\\sqrt{1+\\eta}}D_{t}(m_{t-1}^{t}+2\\!\\dots)+D_{t}\\xi\\bigg)\\bigg]}_{\\Phi=\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1})-\\nabla f(x_{1}),\\frac{\\eta}{\\sqrt{1+\\eta}}+\\frac{\\mathbb{D}_{\\theta}}{\\sqrt{1+\\eta}}\\bigg)-D_{t}\\xi\\bigg]}}\\\\ &{\\quad+\\underbrace{\\eta\\mathbb{E}\\bigg[\\bigg(\\frac{\\eta}{\\sqrt{1+\\eta}}+\\frac{\\mathbb{D}_{\\theta}}{\\sqrt{1+\\eta}}\\bigg)(m_{t-1}^{t}+2\\!\\dots)-D_{t}\\xi\\bigg]}_{\\Phi=\\mathbb{E}\\bigg[\\bigg(\\nabla f(x_{1})-\\nabla f(x_{1}),\\frac{\\eta}{\\sqrt{1+\\eta}}\\bigg)\\bigg]}}\\\\ &{\\quad+\\underbrace{\\eta\\mathbb{E}\\bigg[\\bigg(\\nabla f(\\theta),-\\nabla f(x_{1})-\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "In the following, we bound all the four terms highlighted above. ", "page_idx": 22}, {"type": "text", "text": "Bounding term I. We have ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{I}&{=\\;-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{t}),\\frac{g_{t}}{\\sqrt{\\hat{v}_{t-1}+\\epsilon}}\\right\\rangle\\right]-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{t}),\\left(\\frac{1}{\\sqrt{\\hat{v}_{t}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t-1}+\\epsilon}}\\right)g_{t}\\right\\rangle\\right]}\\\\ {\\leq}&{-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{t}),\\frac{\\nabla f(\\theta_{t})}{\\sqrt{\\hat{v}_{t-1}+\\epsilon}}\\right\\rangle\\right]+\\eta G^{2}\\mathbb{E}[\\|D_{t}\\|].}\\\\ {\\leq}&{-\\frac{\\eta}{\\sqrt{\\frac{4(1+q_{\\omega}^{2})^{3}}{(1-q_{\\omega}^{2})^{2}}G^{2}+\\epsilon}}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\eta G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where we use Assumption 4, Lemma 6 and the fact that $l_{2}$ norm is no larger than $l_{1}$ norm. ", "page_idx": 22}, {"type": "text", "text": "Bounding term II. By the definition of $\\mathcal{E}_{t}$ and $\\mathcal{Z}_{t}$ , we know that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{l l l}{\\displaystyle\\|\\mathcal E_{t}\\|}&{\\leq}&{\\displaystyle(1-\\beta_{1})\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\|e_{t}\\|\\leq\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}G,}\\\\ {\\displaystyle\\|\\mathcal Z_{t}\\|}&{\\leq}&{\\displaystyle(1-\\beta_{1})\\sum_{\\tau=1}^{t}\\beta_{1}^{t-\\tau}\\|\\zeta_{t}\\|\\leq\\omega q\\left(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)G.}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Then we have ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I I\\leq\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{t}),\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\right\\rangle\\right]}\\\\ &{\\quad\\quad+\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t})-\\nabla f(\\theta_{t}),\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\right\\rangle\\right]}\\\\ &{\\quad\\le\\eta\\mathbb{E}\\left[\\left\\|\\nabla f(\\theta_{t})\\right\\|\\left\\|\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\right\\|\\right]}\\\\ &{\\quad\\quad+\\eta^{2}L\\mathbb{E}\\left[\\left\\|\\frac{\\frac{\\beta_{1}}{1-\\beta_{1}}m_{t-1}^{\\prime}+\\frac{\\beta_{1}}{1-\\beta_{1}}\\mathcal{Z}_{t-1}+\\mathcal{E}_{t}}{\\sqrt{\\hat{\\tau}_{t-1}+\\epsilon}\\epsilon}\\right\\|\\left\\|\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\right\\|\\right]}\\\\ &{\\quad\\le\\eta C_{1}G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}]+\\frac{\\eta^{2}C_{1}^{2}L G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}[\\|D_{t}\\|_{1}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "$\\begin{array}{r}{C_{1}=\\frac{\\beta_{1}}{1-\\beta_{1}}\\left(1+\\omega q\\left(1+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}\\right)\\right)+\\frac{2q_{\\omega}}{1-q_{\\omega}^{2}}}\\end{array}$ 12\u2212qq\u03c92. The second inequality is because of smoothness of $f(\\theta)$ , and the last inequality is due to Lemma 3, Assumption 4 and the property of norms. ", "page_idx": 23}, {"type": "text", "text": "Bounding term III. This term can be bounded as follows: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I I I\\leq\\eta^{2}L\\mathbb{E}\\left[\\left\\Vert\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\hat{w}_{t}+\\epsilon}}\\right\\Vert^{2}\\right]+\\eta^{2}L\\mathbb{E}\\left[\\left\\Vert\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})-D_{t}\\mathcal{E}_{t}\\right\\Vert^{2}\\right]}\\\\ &{\\leq\\frac{2\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\Vert g_{t}-\\nabla f(\\theta_{t})+\\nabla f(\\theta_{t})\\Vert^{2}]+\\frac{2\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\Vert\\zeta_{t}\\Vert^{2}]}\\\\ &{\\phantom{f}\\quad+\\eta^{2}L\\mathbb{E}\\left[\\left\\Vert D_{t}\\left(\\frac{\\beta_{1}}{1-\\beta_{1}}m_{t-1}^{\\prime}+\\frac{\\beta_{1}}{1-\\beta_{1}}Z_{t-1}-\\mathcal{E}_{t}\\right)\\right\\Vert^{2}\\right]}\\\\ &{\\leq\\frac{2\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\Vert\\nabla f(\\theta_{t})\\Vert^{2}]+\\frac{2\\eta^{2}L\\sigma^{2}}{\\epsilon}+\\frac{2\\eta^{2}L}{\\epsilon}\\omega^{2}q^{2}\\left(1+\\frac{2q}{1-q^{2}}\\right)^{2}G^{2}+\\eta^{2}C_{1}^{2}L G^{2}\\mathbb{E}[\\Vert D_{t}\\Vert^{2}]}\\\\ &{\\leq\\frac{2\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\Vert\\nabla f(\\theta_{t})\\Vert^{2}]+\\frac{2\\eta^{2}L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon}+\\eta^{2}C_{1}^{2}L G^{2}\\mathbb{E}[\\Vert\\mathcal{D}_{t}\\Vert^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where $\\begin{array}{r}{C_{2}=\\omega q(1+\\frac{2q}{1-q^{2}})}\\end{array}$ and we used Assumption 5 that $g_{t}$ is unbiased with bounded variance $\\sigma^{2}$ . Bounding term IV. We have ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I V=\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{l})-\\nabla f(x_{l}),\\frac{\\theta_{l}}{\\sqrt{\\theta_{l-1}}+\\epsilon}\\right\\rangle\\right]}\\\\ &{\\quad\\quad+\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{l})-\\nabla f(x_{l}),\\left(\\frac{1}{\\sqrt{\\theta_{l}}+\\epsilon}-\\frac{1}{\\sqrt{\\theta_{l-1}}+\\epsilon}\\right)\\theta_{l}\\right\\rangle\\right]}\\\\ &{\\quad\\quad\\leq\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(\\theta_{l})-\\nabla f(x_{l}),\\frac{\\nabla f(\\theta_{l})}{\\sqrt{\\theta_{l-1}}+\\epsilon}\\right\\rangle\\right]}\\\\ &{\\quad\\quad+\\eta^{2}\\mathbb{E}\\left[\\left\\|\\frac{\\frac{\\eta\\hat{h}_{x}\\eta}{\\sqrt{\\theta_{l-1}}}-\\frac{1}{\\sqrt{\\theta_{l-1}}+\\epsilon}}{\\sqrt{\\theta_{l-1}}+\\epsilon}\\right\\|\\|D_{\\theta,\\theta}\\right\\|}\\\\ &{\\quad\\quad\\stackrel{(a)}{\\leq}\\frac{\\eta}{2\\sigma}\\mathbb{E}\\|\\nabla f(\\theta_{l})\\|^{2}+\\frac{\\eta}{2\\sigma}\\mathbb{E}\\|\\nabla f(\\theta_{l})-\\nabla f(x_{l})\\|^{2}+\\frac{\\eta^{2}C_{l}L\\mathcal{L}^{2}}{\\sqrt{\\theta_{l}}}\\mathbb{E}\\|D_{\\theta,\\theta}\\|}\\\\ &{\\quad\\quad\\stackrel{(b)}{\\leq}\\frac{\\eta}{2\\sigma}\\mathbb{E}\\|\\nabla f(\\theta_{l})\\|^{2}+\\frac{\\eta^{2}L^{2}}{2\\sigma}\\mathbb{E}\\left\\|\\frac{\\mathbb{E}\\lambda_{x}\\eta}{\\sqrt{\\theta_{l-1}}+\\epsilon}+\\frac{\\mathbb{E}\\lambda_{x}^{2}\\tilde{L}_{2}\\hat{L}_{2}+1\\epsilon}{\\sqrt{\\theta_{l-1}}+\\epsilon}\\right\\|\\Bigg]+\\frac{\\eta^{2}C_{l}L\\mathcal{L}^{2}}{\\sqrt{\\theta_{l}}}\\mathbb{E}\\|D_{\\theta,\\theta}\\|}\\\\ &{\\quad\\quad\\leq\\frac{\\eta^{2}L\\eta}{2\\sigma}\\mathbb{E}\\|\\nabla f(\\theta_{l})\\|^{2}+\\frac{\\eta^{2}L^{2}C_{l}^{2}\\zeta_{1}^{2}\\sigma^{2}}{4\\sigma}+\\frac{\\eta^{2}L\\zeta C_{l}^{\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where (a) is due to Young\u2019s inequality and (b) is based on Assumption 3. Now integrating (5), (6), (8), (11) into (4), ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r c l}{I}&{\\leq}&{-\\frac{\\eta}{C_{0}}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\eta G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ {I I}&{\\leq}&{\\eta C_{1}G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}]+\\frac{\\eta^{2}C_{1}^{2}L G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ {I I I}&{\\leq}&{\\frac{\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\frac{\\eta^{2}L\\left(\\sigma^{2}+C_{2}^{2}G^{2}\\right)}{\\epsilon}+\\eta^{2}C_{1}^{2}L G^{2}\\mathbb{E}[\\|D_{t}\\|^{2}]}\\\\ {I V}&{\\leq}&{\\frac{\\eta\\rho}{2\\epsilon}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\frac{\\eta^{3}L^{2}}{2\\rho}\\frac{C_{1}^{2}G^{2}}{\\epsilon}+\\frac{\\eta^{2}L C_{1}G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}[\\|D_{t}\\|_{1}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "and taking the telescoping summation over $t=1,\\dots,T$ , we obtain ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[f(x_{T+1})-f(x_{1})]}\\\\ &{\\le\\left(-\\displaystyle\\frac{\\eta}{C_{0}}+\\frac{\\eta^{2}L}{\\epsilon}+\\frac{\\eta\\rho}{2\\epsilon}\\right)\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\frac{T\\eta^{2}L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon}+\\frac{T\\eta^{3}L^{2}C_{1}^{2}G^{2}}{2\\rho\\epsilon}}\\\\ &{\\quad+\\left(\\eta(1+C_{1})G^{2}+\\frac{\\eta^{2}(1+C_{1})C_{1}L G^{2}}{\\sqrt{\\epsilon}}\\right)\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|D_{t}\\|_{1}]+\\eta^{2}C_{1}^{2}L G^{2}\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|D_{t}\\|^{2}].}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Setting $\\begin{array}{r}{\\eta\\le\\frac{\\epsilon}{4L C_{0}}}\\end{array}$ and choosing $\\begin{array}{r}{\\rho=\\frac{\\epsilon}{2C_{0}}}\\end{array}$ , we further arrive at ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[f(x_{T+1})-f(x_{1})]\\leq-\\displaystyle\\frac{\\eta}{2C_{0}}\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\displaystyle\\frac{T\\eta^{2}L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\displaystyle\\frac{T\\eta^{3}L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}}+\\displaystyle\\frac{\\eta(1+C_{1})G^{2}d}{\\sqrt{\\epsilon}}+\\displaystyle\\frac{\\eta^{2}(1+2C_{1})C_{1}L G^{2}d}{\\epsilon}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "where the inequality follows from Lemma 7. Re-arranging terms, we get that ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{1}{T}\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]}\\\\ &{\\le2C_{0}\\left(\\frac{\\mathbb{E}[f(x_{1})-f(x_{T+1})]}{T\\eta}+\\frac{\\eta L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon}+\\frac{\\eta^{2}L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}}\\right)}\\\\ &{\\quad+\\,2C_{0}\\left(\\frac{(1+C_{1})G^{2}d}{T\\sqrt{\\epsilon}}+\\frac{\\eta(1+2C_{1})C_{1}L G^{2}d}{T\\epsilon}\\right)}\\\\ &{\\le2C_{0}\\left(\\frac{f(\\theta_{1})-f^{*}}{T\\eta}+\\frac{\\eta L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon}+\\frac{\\eta^{2}L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}}\\right)}\\\\ &{\\quad+\\,2C_{0}\\left(\\frac{(1+C_{1})G^{2}d}{T\\sqrt{\\epsilon}}+\\frac{\\eta(1+2C_{1})C_{1}L G^{2}d}{T\\epsilon}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "where in the last inequality we used $x_{1}=\\theta_{1}$ and the lower bound $f^{*}\\leq f(\\theta)$ for all $\\theta\\in\\ensuremath{\\mathbb{R}}^{d}$ . \u53e3 ", "page_idx": 24}, {"type": "text", "text": "To get the rate mentioned in the main part, choose $\\begin{array}{r}{\\eta=\\operatorname*{min}\\lbrace\\frac{\\epsilon}{4L C_{0}},\\frac{1}{\\sqrt{T}}\\rbrace}\\end{array}$ and continue ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{1}{T}\\frac{T}{t-1}\\mathbb{E}\\|\\nabla f(\\theta_{t})\\|^{2}\\|}\\\\ &{\\leq2C_{0}\\left(\\operatorname*{max}\\left\\{1,\\frac{4L C_{0}}{\\epsilon\\sqrt{T}}\\right\\}\\frac{f(\\theta_{1})-f^{*}}{\\sqrt{T}}+\\frac{L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon\\sqrt{T}}+\\frac{L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}T}\\right)}\\\\ &{\\quad+2C_{0}\\left(\\frac{(1+C_{1})G^{2}d}{T\\sqrt{\\epsilon}}+\\frac{(1+2C_{1})C_{1}L G^{2}d}{\\epsilon\\sqrt{T}^{3/2}}\\right)}\\\\ &{\\leq2C_{0}\\left(\\frac{f(\\theta_{1})-f^{*}}{\\sqrt{T}}+\\frac{L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon\\sqrt{T}}\\right)}\\\\ &{\\quad+2C_{0}\\left(\\frac{4L C_{0}}{\\epsilon}\\frac{f(\\theta_{1})-f^{*}}{T}+\\frac{L^{2}C_{0}C_{1}^{2}G^{2}}{\\epsilon^{2}T}+\\frac{(1+C_{1})G^{2}d}{T\\sqrt{\\epsilon}}+\\frac{(1+2C_{1})C_{1}L G^{2}d}{\\epsilon\\sqrt{T}^{3/2}}\\right)}\\\\ &{=2C_{0}\\left(\\frac{f(\\theta_{1})-f^{*}}{\\sqrt{T}}+\\frac{L(\\sigma^{2}+C_{2}^{2}G^{2})}{\\epsilon\\sqrt{T}}\\right)+\\mathcal{O}\\left(\\frac{G^{3}(G+d)}{T}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "where in the second part of the rate we suppressed all the problem and compression dependent constants. ", "page_idx": 25}, {"type": "text", "text": "E.3 Analysis Under PL Condition ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "As in the non-convex analysis, here we derive the convergence rate with fixed step-size $\\eta$ . The rate shown in the main part can be obtained by plugging the expression of $\\eta$ . ", "page_idx": 25}, {"type": "text", "text": "Theorem 4. (Convergence rate under PL) Let Assumptions 1, 2, 3, 4, 5 and 6 hold, and $q_{\\omega}<1$ . Then, choosing any step-size $\\begin{array}{r}{\\eta\\le\\frac{\\epsilon}{4L C_{0}}}\\end{array}$ , MICROADAM (Algorithm 3) satisfies ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[f(\\theta_{T+1})]-f^{*}\\leq\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{T}\\!\\left(f(\\theta_{1})-f^{*}\\right)+\\eta\\left(\\frac{L C_{0}\\sigma^{2}+L C_{0}(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{(1+C_{1})G^{2}d+C_{1}G^{2}}{\\sqrt{\\epsilon}}\\right)}\\\\ {+\\,\\eta^{2}\\left(\\frac{3L^{2}C_{0}C_{1}^{2}G^{2}}{2\\mu\\epsilon^{3/2}}+\\frac{(1+2C_{1})C_{1}L G^{2}d}{\\epsilon}+\\frac{L C_{1}^{2}G^{2}}{2\\epsilon}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Proof. We start from descent lemma ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbb{E}[f(x_{t+1})]-f(x_{t})}\\\\ &{}&{\\quad\\le-\\eta\\mathbb{E}\\left[\\bigg\\langle\\nabla f(x_{t}),\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\tilde{\\nu}_{t}+\\epsilon}}\\bigg\\rangle\\right]+\\eta\\mathbb{E}\\left[\\bigg\\langle\\nabla f(x_{t}),\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\bigg\\rangle\\right]}\\\\ &{}&{\\quad\\quad\\quad\\quad+\\frac{\\eta^{2}L}{2}\\mathbb{E}\\left[\\bigg\\|\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\tilde{\\nu}_{t}+\\epsilon}}-\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})-D_{t}\\mathcal{E}_{t}\\bigg\\|^{2}\\right]}\\\\ &{}&{\\quad=\\underbrace{-\\eta\\mathbb{E}\\left[\\bigg\\langle\\nabla f(x_{t}),\\frac{g_{t}}{\\sqrt{\\tilde{\\nu}_{t}+\\epsilon}}\\bigg\\rangle\\right]}_{I^{\\prime}}+\\underbrace{\\eta\\mathbb{E}\\left[\\bigg\\langle\\nabla f(x_{t}),\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})+D_{t}\\mathcal{E}_{t}\\bigg\\rangle\\right]}_{I I}}\\\\ &{}&{\\quad\\quad\\quad\\quad\\quad+\\underbrace{\\frac{\\eta^{2}L}{2}\\mathbb{E}\\left[\\bigg\\|\\frac{g_{t}+\\zeta_{t}}{\\sqrt{\\tilde{\\nu}_{t}+\\epsilon}}-\\frac{\\beta_{1}}{1-\\beta_{1}}D_{t}(m_{t-1}^{\\prime}+\\mathcal{Z}_{t-1})-D_{t}\\mathcal{E}_{t}\\bigg\\|^{2}\\right]}_{J^{\\prime}\\left[\\bigg\\|\\sqrt{\\tilde{\\nu}_{t}+\\epsilon}\\epsilon^{\\prime}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "We bound part $I I$ and part $I I I$ in the same way as it was done in the non-convex analysis. We now provide a bound for part $I^{\\prime}$ : ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I^{\\prime}=-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),\\frac{g_{t}}{\\sqrt{\\hat{v}_{t}+\\epsilon}}\\right\\rangle\\right]}\\\\ &{\\quad=-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),\\frac{g_{t}}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right\\rangle\\right]-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),g_{t}\\left(\\frac{1}{\\sqrt{\\hat{v}_{t}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right)\\right\\rangle\\right]}\\\\ &{\\quad=-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),\\frac{g_{t}-\\nabla f(x_{t})+\\nabla f(x_{t})}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right\\rangle\\right]}\\\\ &{\\quad\\quad-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),g_{t}\\left(\\frac{1}{\\sqrt{\\hat{v}_{t}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right)\\right\\rangle\\right]}\\\\ &{\\quad\\quad=-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),\\frac{\\nabla f(x_{t})}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right\\rangle\\right]-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),\\frac{g_{t}-\\nabla f(x_{t})}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right\\rangle\\right]}\\\\ &{\\quad\\quad\\quad-\\eta\\mathbb{E}\\left[\\left\\langle\\nabla f(x_{t}),g_{t}\\left(\\frac{1}{\\sqrt{\\hat{v}_{t}+\\epsilon}}-\\frac{1}{\\sqrt{\\hat{v}_{t}-1+\\epsilon}}\\right)\\right\\rangle\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "We further expand and bound this equation as follows: ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{P:\\mathcal{S}_{n}}&{\\mathbb{E}_{n}^{\\mathbb{I}}\\times\\frac{\\hat{\\mathbb{I}}_{n}^{\\mathbb{I}}}{n!}\\mathbb{E}_{n}^{\\mathbb{I}}\\times\\bigg[\\mathbb{I}_{\\mathcal{F}_{n}}[\\sigma(x_{n})]^{\\mathbb{I}}\\bigg.}\\\\ &{\\quad-\\eta\\Bigg]\\Bigg[\\bigg(\\nabla f_{n}(\\hat{T}_{n})-\\nabla f(\\hat{\\mu}_{n})+\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}+\\nabla f(\\hat{\\mu}_{n})-\\nabla f(x_{n})\\bigg)\\Bigg.}\\\\ &{\\quad-\\eta\\Bigg]\\Bigg[\\bigg(\\nabla f(\\hat{\\mu}_{n})-\\nabla f(\\hat{\\mu}_{n})+\\nabla f(\\hat{\\mu}_{n})\\bigg)\\Bigg.\\Bigg.\\Bigg.}\\\\ &{\\quad\\quad\\quad-\\frac{\\eta}{\\sqrt{n!}}\\Bigg[\\bigg(\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}\\nabla f(\\hat{\\mu}_{n})\\bigg)^{\\!\\!\\!-\\!\\!1}\\Bigg.\\Bigg.}\\\\ &{\\quad\\quad\\quad\\bigg.\\bigg.\\bigg.\\times\\bigg.\\bigg.\\bigg.\\bigg.\\bigg]\\Bigg[\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}\\nabla f(\\hat{\\mu}_{n})-\\nabla f(\\hat{\\mu}_{n})\\bigg)\\Bigg]}\\\\ &{\\quad\\quad-\\frac{\\eta}{\\sqrt{n!}}\\Bigg[\\bigg(\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}\\nabla f(\\hat{\\mu}_{n})-\\nabla f(\\hat{\\mu}_{n})\\bigg)\\Bigg]\\Bigg.}\\\\ &{\\quad\\quad\\quad-\\eta\\Bigg]\\Bigg[\\bigg(\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}\\nabla f(\\hat{\\mu}_{n})\\bigg)\\Bigg.\\Bigg.\\Bigg.\\Bigg.}\\\\ &{\\quad\\quad\\quad\\quad-\\eta\\Bigg]\\Bigg[\\nabla f(\\hat{\\mu}_{n})-\\nabla f(\\hat{\\mu}_{n})\\bigg.\\bigg.\\bigg.\\bigg.\\frac{1}{n!}\\Bigg]}\\\\ &{\\quad\\quad\\quad\\quad-\\eta\\Bigg]\\Bigg[\\nabla f(\\hat{\\mu}_{n})\\frac{1}{\\sqrt{n!}+1}\\nabla f(\\hat{\\mu}_{n})-\\nabla f_{n}(\\hat{\\mu}_{n})\\Bigg]}\\\\ &{\\quad\\quad\\quad\\quad\\times\\bigg.\\bigg.\\bigg.\\bigg[\\nabla f \n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Next, we use the Cauchy\u2013Schwartz inequality to bound inner products above, $L$ -smoothness inequality to bound $\\begin{array}{r}{\\|\\nabla f(x_{t})-\\dot{\\nabla}f(\\theta_{t})\\|\\,\\le\\,L\\|\\dot{x}_{t}-\\dot{\\theta}_{t}\\|\\,\\le\\,\\frac{\\eta L C_{1}G}{\\sqrt{\\epsilon}}}\\end{array}$ L\u221aC\u03f51G, and the inequality \u2212\u2225a\u22252 \u2264\u221212\u2225b\u22252 + ", "page_idx": 26}, {"type": "text", "text": "$\\|a-b\\|^{2}$ for the first term: ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I^{\\prime}\\leq-\\frac{\\eta}{C_{0}}\\mathbb{E}\\left[\\|\\nabla f(x_{t})\\|^{2}\\right]+\\frac{\\eta}{\\sqrt{\\epsilon}}\\mathbb{E}\\left[\\|\\nabla f(x_{t})-f(\\theta_{t})\\|^{2}\\right]+\\frac{\\eta^{2}C_{0}}{\\sqrt{\\epsilon}}\\mathbb{E}\\|\\nabla f(\\theta_{t})-\\nabla f(x_{t})\\|}\\\\ &{\\quad+\\eta C_{0}^{2}\\|\\nabla f(x_{t})-\\nabla f(\\theta_{t})\\|\\|D_{t}\\|+\\eta^{2}G_{0}^{2}\\mathbb{E}\\|D_{t}\\|}\\\\ &{\\leq-\\frac{\\eta}{2\\sqrt{\\epsilon}}\\mathbb{E}\\left[\\|\\nabla f(x_{t})\\|^{2}\\right]-\\frac{\\eta}{2C_{0}}\\mathbb{E}\\left[\\|\\nabla f(x_{t})\\|^{2}\\right]+\\frac{\\eta}{\\sqrt{\\epsilon}}\\frac{\\eta^{2}L^{2}C_{0}^{2}\\zeta^{2}}{\\epsilon}+\\frac{\\eta^{2}L C_{1}G^{2}}{\\epsilon}}\\\\ &{\\quad+\\eta G\\frac{\\|L\\|\\nabla f(x_{t})}{\\sqrt{\\epsilon}}\\mathbb{E}\\|D_{t}\\|_{1}+\\eta G^{2}\\mathbb{E}\\|D_{t}\\|}\\\\ &{\\leq-\\frac{\\eta}{2C_{0}}\\mathbb{E}\\left[\\|\\nabla f(x_{t})\\|^{2}\\right]-\\frac{\\eta}{4C_{0}}\\mathbb{E}\\|\\nabla f(\\theta_{t})\\|^{2}+\\frac{\\eta}{2C_{0}}\\mathbb{E}\\|\\nabla f(x_{t})-\\nabla f(\\theta_{t})\\|^{2}}\\\\ &{\\quad+\\frac{\\eta^{3}L^{2}C_{0}^{2}\\zeta^{2}}{\\epsilon^{3}2}+\\frac{\\eta^{2}L C_{1}G^{2}}{\\epsilon}+\\frac{\\eta^{2}L C_{1}G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}\\|D_{t}\\|_{1}+\\eta G^{2}\\mathbb{E}\\|D_{t}\\|_{1}}\\\\ &{\\leq-\\frac{\\eta}{2}\\mathbb{E}\\left[\\|\\nabla f(x_{t})\\|^{2}\\right]-\\frac{\\eta}{2}\\mathbb{E}\\|\\nabla f(\\theta_{t})\\|^{2}}\\\\ &{\\quad+\\frac{3\\eta^{2}L^{2}C_{0}^{2}\\zeta^{2\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Plugging the obtained bound for $I^{\\prime}$ with previously obtained bounds for $I I$ and $I I I$ ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r c l}{I I}&{\\leq}&{\\eta C_{1}G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}]+\\frac{\\eta^{2}C_{1}^{2}L G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ {I I I}&{\\leq}&{\\frac{\\eta^{2}L}{\\epsilon}\\mathbb{E}[\\|\\nabla f(\\theta_{t})\\|^{2}]+\\frac{\\eta^{2}L\\left(\\sigma^{2}+C_{2}^{2}G^{2}\\right)}{\\epsilon}+\\eta^{2}C_{1}^{2}L G^{2}\\mathbb{E}[\\|D_{t}\\|^{2}]}\\end{array}\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "into (12) and using the step-size bound \u03b7 \u22644L\u03f5C0 we get ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{E}f(z_{t+1})-\\mathbb{E}\\|(z_{t})\\|\\leq-\\frac{\\alpha}{2\\alpha}\\mathbb{E}\\left\\|(\\nabla f_{t}(z_{t})\\right\\|^{2}-\\frac{\\alpha}{\\alpha}\\mathbb{E}\\|\\nabla f_{t}(z_{t})\\|^{2}\\right.}\\\\ &{\\quad+\\frac{3\\alpha^{2}L^{2}C^{2}C^{2}}{2\\alpha^{2}\\alpha^{2}}+\\frac{\\alpha^{2}L^{2}C^{2}}{2\\alpha}\\mathbb{E}\\|\\nabla f_{t}(z_{t})\\|}\\\\ &{\\quad+\\eta\\leq2\\alpha^{2}\\|\\mathcal{S}\\|_{L^{2}}}\\\\ &{\\quad+\\eta^{2}\\|\\mathcal{S}\\|_{L^{2}}+\\frac{\\alpha^{2}C^{2}}{\\alpha}\\mathbb{E}\\|(\\nabla f_{t}(z_{t})\\|+\\frac{\\alpha^{2}C^{2}}{\\alpha}\\mathbb{E}\\|J_{t}\\|_{L^{1}}}\\\\ &{\\quad+\\frac{\\alpha^{2}L^{2}}{\\alpha}\\mathbb{E}\\|(\\nabla f_{t}(z_{t})\\|+\\frac{\\alpha^{2}L^{2}(\\alpha^{2}+C^{2})C^{2}}{\\alpha}+\\eta^{2}C^{2}\\|L^{2}\\|\\mathcal{S}\\|_{L^{1}}}\\\\ &{\\quad\\leq-\\frac{\\alpha}{2\\alpha}\\mathbb{E}\\left\\|(\\nabla f_{t}(z_{t})\\right\\|^{2}+\\frac{\\alpha^{2}L^{2}C^{2}}{\\alpha}+\\frac{\\eta^{2}C^{2}L^{2}(\\alpha^{2}+C^{2})C^{2}}{\\alpha}}\\\\ &{\\quad+\\eta(1+C)\\alpha^{2}\\mathbb{E}\\|D_{t}\\|+\\frac{3\\alpha^{2}L^{2}C^{2}}{2\\alpha}}\\\\ &{\\quad+\\frac{\\eta^{2}L^{2}C^{2}}{\\alpha}+\\frac{C^{2}L^{2}C^{2}L^{2}C^{2}}{\\alpha}\\mathbb{E}\\|\\|D_{t}\\|_{L^{1}}+\\eta^{2}C^{2}L^{2}\\|\\mathcal{S}\\|_{L^{2}}\\|}\\\\ &{\\quad-\\frac{\\alpha^{2}L^{2}C^{2}L^{2}}{\\alpha}\\mathbb{E}\\|(\\nabla f_{t}(z_{t})\\|^{2}\\|\\mathcal{S}\\|_{L^\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "where in the last inequality we applied $\\mathrm{PL}$ condition from Assumption 6. After some reshuffling of the terms, we obtain the following recursion: ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[f(x_{t+1})]-f^{*}\\leq\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)(\\mathbb{E}[f(x_{t})]-f^{*})+\\frac{\\eta^{2}L\\sigma^{2}}{\\epsilon}+\\frac{\\eta^{2}L(C_{1}+C_{2}^{2})G^{2}}{\\epsilon}+\\frac{3\\eta^{3}L^{2}C_{1}^{2}G^{2}}{2\\epsilon^{3/2}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\eta(1+C_{1})G^{2}\\mathbb{E}[\\|D_{t}\\|_{1}]+\\frac{\\eta^{2}(1+C_{1})C_{1}L G^{2}}{\\sqrt{\\epsilon}}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ &{\\qquad\\qquad\\qquad+\\eta^{2}C_{1}^{2}L G^{2}\\mathbb{E}[\\|D_{t}\\|^{2}].}\\end{array}\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Notice that $\\begin{array}{r}{\\eta\\,\\le\\,\\frac{\\epsilon}{4L C_{0}}\\,\\le\\,\\frac{C_{0}}{4\\mu}}\\end{array}$ , so that the coefficient $\\textstyle1-{\\frac{\\eta\\mu}{C_{0}}}\\in(0,1)$ . Unrolling the recursion, we arrive ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[f(x_{T+1})]-f^{*}\\leq\\bigg(1-\\frac{\\eta\\mu}{C_{0}}\\bigg)^{T}(\\mathbb{E}[f(x_{1})]-f^{*})}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\left(\\frac{\\eta^{2}L\\sigma^{2}}{\\epsilon}+\\frac{\\eta^{2}L(C_{1}+C_{2}^{2})G^{2}}{\\epsilon}+\\frac{3\\eta^{3}L^{2}C_{1}^{2}G^{2}}{2\\epsilon^{3/2}}\\right)\\underset{t=1}{\\sum_{t=1}^{T}}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}}\\\\ &{\\qquad\\qquad\\qquad+\\eta(1+C_{1})G^{2}\\underset{t=1}{\\overset{T}{\\sum}}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ &{\\qquad\\qquad\\qquad+\\frac{\\eta^{2}(1+C_{1})C_{1}L G^{2}}{\\sqrt{\\epsilon}}\\underset{t=1}{\\overset{T}{\\sum}}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}\\mathbb{E}[\\|D_{t}\\|_{1}]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\eta^{2}C_{1}^{2}L G^{2}\\underset{t=1}{\\overset{T}{\\sum}}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}\\mathbb{E}[\\|D_{t}\\|^{2}].}\\end{array}\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "For the second sum above we upper bound it by its infinite sum as ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\left(1-{\\frac{\\eta\\mu}{C_{0}}}\\right)^{t}\\leq\\sum_{t=0}^{\\infty}\\left(1-{\\frac{\\eta\\mu}{C_{0}}}\\right)^{t}={\\frac{C_{0}}{\\eta\\mu}}.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "For the other three sums we bound $\\begin{array}{r}{1-\\frac{\\eta\\mu}{C_{0}}\\leq1}\\end{array}$ and apply the bounds in Lemma 7: ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{t=1}^{T}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}\\mathbb{E}[\\|D_{t}\\|_{1}]\\leq\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|D_{t}\\|_{1}]\\leq\\frac{d}{\\sqrt{\\epsilon}},}\\\\ &{\\displaystyle\\sum_{t=1}^{T}\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{t}\\mathbb{E}[\\|D_{t}\\|^{2}]\\leq\\displaystyle\\sum_{t=1}^{T}\\mathbb{E}[\\|D_{t}\\|^{2}]\\leq\\frac{d}{\\epsilon}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "Plugging all this bounds into (13) and noticing that $x_{1}=\\theta_{1}$ , we finally get ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{E}[f(x_{T+1})]-f^{*}\\le\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{T}(f(\\theta_{1})-f^{*})}&{}\\\\ &{\\qquad+\\frac{C_{0}}{\\eta\\mu}\\left(\\frac{\\eta^{2}L\\sigma^{2}}{\\epsilon}+\\frac{\\eta^{2}L(C_{1}+C_{2}^{2})G^{2}}{\\epsilon}+\\frac{3\\eta^{3}L^{2}C_{1}^{2}G^{2}}{2\\epsilon^{3/2}}\\right)}\\\\ &{\\qquad+\\frac{\\eta(1+C_{1})G^{2}d}{\\sqrt{\\epsilon}}+\\frac{\\eta^{2}(1+C_{1})C_{1}L G^{2}d}{\\epsilon}+\\frac{\\eta^{2}C_{1}^{2}L G^{2}d}{\\epsilon}}\\\\ &{\\qquad\\le\\left(1-\\frac{\\eta\\mu}{C_{0}}\\right)^{T}(f(\\theta_{1})-f^{*})}\\\\ &{\\qquad+\\eta\\left(\\frac{L C_{0}\\sigma^{2}}{\\mu\\epsilon}+\\frac{L C_{0}(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{(1+C_{1})G^{2}d}{\\sqrt{\\epsilon}}\\right)}\\\\ &{\\qquad+\\eta^{2}\\left(\\frac{3L^{2}C_{0}C_{1}^{2}G^{2}}{2\\mu^{3/2}}+\\frac{(1+C_{1})C_{1}L G^{2}d}{\\epsilon}+\\frac{C_{1}^{2}L G^{2}d}{\\epsilon}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "The obtained rate above is with respect to the virtual iterates $x_{t}$ that we defined for the purposes of analysis. To convert this rate with respect to the iterates $\\theta_{t}$ of the algorithm, we apply $L$ -smoothness to bound the functional difference: ", "page_idx": 29}, {"type": "equation", "text": "$$\n|f(x_{t})-f(\\theta_{t})|\\leq|\\langle\\nabla f(\\theta_{t}),x_{t}-\\theta_{t}\\rangle\\rangle|+\\frac{L}{2}\\|x_{t}-\\theta_{t}\\|^{2}\\leq\\frac{\\eta C_{1}G^{2}}{\\sqrt{\\epsilon}}+\\frac{\\eta^{2}L C_{1}^{2}G^{2}}{2\\epsilon},\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "which implies ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[f(\\theta_{T+1})]-f^{*}\\leq\\left(1-\\displaystyle\\frac{\\eta\\mu}{C_{0}}\\right)^{T}(f(\\theta_{1})-f^{*})}\\\\ &{\\phantom{=}\\quad\\forall\\left(\\frac{L C_{0}\\sigma^{2}}{\\mu\\epsilon}+\\frac{L C_{0}(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{(1+C_{1})G^{2}d}{\\sqrt{\\epsilon}}+\\frac{C_{1}G^{2}}{\\sqrt{\\epsilon}}\\right)}\\\\ &{\\phantom{=}\\quad\\quad+\\eta^{2}\\left(\\frac{3L^{2}C_{0}C_{1}^{2}G^{2}}{2\\mu\\epsilon^{3/2}}+\\frac{(1+C_{1})C_{1}L G^{2}d}{\\epsilon}+\\frac{C_{1}^{2}L G^{2}d}{\\epsilon}+\\frac{L C_{1}^{2}G^{2}}{2\\epsilon}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "and completes the proof. ", "page_idx": 29}, {"type": "text", "text": "To get the rate mentioned in the main part of the paper, we plug in the expression $\\eta\\ =$ $\\begin{array}{r l}{\\operatorname*{min}\\Bigl\\{\\frac{\\epsilon}{4L C_{0}},\\frac{2C_{0}\\log T}{\\mu T}\\Bigr\\}}\\end{array}$ and collect higher order terms. ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathfrak{I}[f(\\theta_{T+1})]-f^{*}\\le\\operatorname*{max}\\left\\{\\frac{1}{T^{2}},\\left(1-\\frac{\\epsilon\\mu}{4L}\\right)^{T}\\right\\}(f(\\theta_{1})-f^{*})}\\\\ &{\\quad\\quad\\quad\\quad+\\frac{\\log{T}}{T}\\frac{2C_{0}}{\\mu}\\left(\\frac{L C_{0}\\sigma^{2}}{\\mu\\epsilon}+\\frac{L C_{0}(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{(1+C_{1})G^{2}d}{\\sqrt{\\epsilon}}+\\frac{C_{1}G^{2}}{\\sqrt{\\epsilon}}\\right)}\\\\ &{\\quad\\quad\\quad\\quad+\\frac{\\log^{2}{T}}{T^{2}}\\frac{4C_{0}^{2}}{\\mu^{2}}\\left(\\frac{3L^{2}C_{0}C_{1}^{2}G^{2}}{2\\mu\\epsilon^{3/2}}+\\frac{(1+C_{1})C_{1}L G^{2}d}{\\epsilon}+\\frac{C_{1}^{2}L G^{2}d}{\\epsilon}+\\frac{L C_{1}^{2}G^{2}}{2\\epsilon}\\right)}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\le\\frac{2\\log{T}}{T}\\left(\\frac{L C_{0}^{2}}{\\mu}\\frac{\\sigma^{2}+(C_{1}+C_{2}^{2})G^{2}}{\\mu\\epsilon}+\\frac{C_{0}(1+C_{1})(1+d)G^{2}}{\\mu\\sqrt{\\epsilon}}\\right)+\\tilde{\\mathcal{O}}\\left(\\frac{G^{4}(G^{2})}{T^{2}}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "E.4 Non-convex Analysis with Weight Decay ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Algorithm 4 MICROADAMW (MICROADAM with Weight Decay) ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "1: Input: parameters $\\beta_{1}$ , $\\beta_{2}\\in(0,1)$ , $\\epsilon>0$ , step-size $\\eta>0$ , $\\theta_{1}\\in\\mathbb{R}^{d}$ , $e_{1}=m_{0}=v_{0}=\\hat{v}_{0}=0_{d}$   \n2: for $t=\\{1,2,...,T\\}$ do   \n3: $g_{t}=\\widetilde{\\nabla}_{\\theta}f(\\theta_{t})$   \n4: $\\tilde{g}_{t}=\\mathcal{C}(g_{t}+e_{t})$   \n5: $e_{t+1}=\\mathcal{Q}(e_{t}+g_{t}-\\tilde{g}_{t})$   \n6: $m_{t}=\\beta_{1}m_{t-1}+(1-\\beta_{1})\\tilde{g}_{t}$   \n7: $v_{t}=\\beta_{2}v_{t-1}+(1-\\beta_{2})\\tilde{g}_{t}^{2}$   \n8: \u03b8t+1 = (1 \u2212\u03b7t\u03bb)\u03b8t \u2212\u03b7\u221avmt+\u03f5 ", "page_idx": 29}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "9: end for ", "page_idx": 29}, {"type": "text", "text": "$\\diamond$ Compute unbiased stochastic gradient $\\diamond$ Add accumulated error $e_{t}$ and compress $\\diamond$ Update and compress the error $\\diamond$ Update first-order gradient moment $\\diamond$ Update second-order gradient moment Update the model parameters with weight decay ", "page_idx": 29}, {"type": "text", "text": "Lemma 8. Under Assumptions 1-5, for all iterates of Algorithm 4 we have ", "page_idx": 29}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\left(1-\\displaystyle\\frac{\\beta_{1}}{2}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]+\\displaystyle\\frac{2}{\\beta_{1}}L^{2}\\mathbb{E}\\left[\\Vert\\theta_{t}-\\theta_{t-1}\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\left.\\beta_{1}\\mathbb{E}\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 29}, {"type": "text", "text": "Proof. We start our proof from ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]=\\mathbb{E}\\left[\\Vert(1-\\beta_{1})m_{t-1}+\\beta_{1}\\tilde{g}_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]}\\\\ &{\\quad-\\mathbb{E}\\left[\\Vert(1-\\beta_{1})m_{t-1}+(1-\\beta_{1})\\nabla f(\\theta_{t-1})\\right.}\\\\ &{\\quad\\left.\\quad\\quad\\quad\\quad-{\\bf\\sigma}(1-\\beta_{1})\\nabla f(\\theta_{t-1})+\\beta_{1}\\tilde{g}_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]}\\\\ &{\\quad=\\mathbb{E}\\left[\\Vert(1-\\beta_{1})m_{t-1}+(1-\\beta_{1})\\nabla f(\\theta_{t-1})-(1-\\beta_{1})\\nabla f(\\theta_{t})\\right.}\\\\ &{\\quad\\left.\\quad\\quad\\quad\\quad-{\\bf\\sigma}(1-\\beta_{1})\\nabla f(\\theta_{t-1})+\\beta_{1}\\tilde{g}_{t}-\\beta_{1}\\nabla f(\\theta_{t})\\Vert^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Using Jensen\u2019s inequality we have ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\|m_{t}-\\nabla f(\\theta_{t})\\|^{2}\\right]\\leq(1-\\beta_{1})\\mathbb{E}\\left[\\|m_{t-1}-\\nabla f(\\theta_{t-1})+\\nabla f(\\theta_{t-1})-\\nabla f(\\theta_{t})\\|^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\beta_{1}\\mathbb{E}\\left[\\|\\tilde{g}_{t}-\\nabla f(\\theta_{t})\\|^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Using Young\u2019s inequality we have ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq(1-\\beta_{1})(1+b)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad+\\left(1-\\beta_{1}\\right)\\left(1+\\displaystyle\\frac{1}{b}\\right)\\mathbb{E}\\Vert\\nabla f(\\theta_{t-1})-f(\\theta_{t})\\Vert^{2}}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad+\\left.\\beta_{1}\\mathbb{E}\\left\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\right\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Setting $\\begin{array}{r}{b=\\frac{\\beta_{1}}{2}}\\end{array}$ we have $\\begin{array}{r}{\\left(1-\\beta_{1}\\right)\\left(1+\\frac{\\beta_{1}}{2}\\right)\\le1-\\frac{\\beta_{1}}{2}}\\end{array}$ and $\\begin{array}{r}{(1-\\beta_{1})\\left(1+\\frac{2}{\\beta_{1}}\\right)\\le\\frac{2}{\\beta_{1}}}\\end{array}$ : ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\left(1-\\displaystyle\\frac{\\beta_{1}}{2}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\displaystyle\\frac{2}{\\beta_{1}}\\mathbb{E}\\Vert\\nabla f(\\theta_{t-1})-f(\\theta_{t})\\Vert^{2}+\\beta_{1}\\mathbb{E}\\left\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\right\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Combining this bound with $L$ -smoothness we obtain ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\left(1-\\frac{\\beta_{1}}{2}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\,\\frac{2}{\\beta_{1}}L^{2}\\mathbb{E}\\Vert\\theta_{t-1}-\\theta_{t}\\Vert^{2}+\\beta_{1}\\mathbb{E}\\left\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\right\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Lemma 9. Under Assumptions 1-5, for all iterates of Algorithm 4 we have ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}\\left[\\|\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\|^{2}\\right]\\leq9\\mathbb{E}\\left[\\|e_{t}\\|^{2}\\right]+6G^{2}+3\\sigma^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Proof. We start from ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\Vert^{2}\\right]=\\mathbb{E}\\left[\\Vert\\mathcal{C}(e_{t}+g_{t})-\\nabla f(\\theta_{t})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad=\\mathbb{E}\\left[\\Vert\\mathcal{C}(e_{t}+g_{t})-(e_{t}+g_{t})+(e_{t}+g_{t})-\\nabla f(\\theta_{t})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\leq3\\mathbb{E}\\left[\\Vert\\mathcal{C}(e_{t}+g_{t})-(e_{t}+g_{t})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\,3\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+3\\mathbb{E}\\left[\\Vert\\nabla f(\\theta_{t})-g_{t}\\Vert^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Using definition of contractive compressor we have ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\|\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\|^{2}\\right]\\leq3q^{2}\\mathbb{E}\\left[\\|e_{t}+g_{t}\\|^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad+\\,3\\mathbb{E}\\left[\\|e_{t}\\|^{2}\\right]+3\\mathbb{E}\\left[\\|\\nabla f(\\theta_{t})-g_{t}\\|^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Using Young\u2019s inequality we have ", "page_idx": 30}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\Vert^{2}\\right]\\leq6q^{2}\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+6q^{2}\\mathbb{E}\\left[\\Vert g_{t}\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad+\\,3\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+3\\mathbb{E}\\left[\\Vert\\nabla f(\\theta_{t})-g_{t}\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\leq9\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+6G^{2}+3\\sigma^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 30}, {"type": "text", "text": "Lemma 10. Under Assumptions 1-5, for all iterates of Algorithm 4 we have ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]\\leq\\frac{(1+\\omega)^{2}q^{2}}{\\left(1-(1+\\omega)q\\right)^{2}}G^{2}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Proof. Using definition of contractive compressor we have ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\|e_{t+1}\\|^{2}\\right]=\\mathbb{E}\\left[\\|\\mathcal{Q}\\left(e_{t}+g_{t}-\\mathcal{C}(e_{t}+g_{t})\\right)\\|^{2}\\right]}\\\\ &{~~~~~~~~~~~~~~~\\leq(1+\\omega)^{2}q^{2}\\mathbb{E}\\left[\\|e_{t}+g_{t}-\\mathcal{C}(e_{t}+g_{t})\\|^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Using Young\u2019s inequality we have ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\Vert e_{t+1}\\Vert^{2}\\right]\\leq(1+\\omega)^{2}q^{2}\\left(1+a\\right)\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+(1+\\omega)^{2}q^{2}\\left(1+\\frac{1}{a}\\right)\\mathbb{E}\\left[\\Vert g_{t}\\Vert^{2}\\right].\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "We need to satisfy the following condition: ", "page_idx": 31}, {"type": "equation", "text": "$$\n(1+\\omega)^{2}q^{2}(1+a)\\leq(1+\\omega)q.\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "It holds for $0\\leq\\omega,0\\leq q<1,(1+\\omega)q<1$ and $\\begin{array}{r}{a=\\frac{1}{(1+\\omega)q}-1}\\end{array}$ . Using this parameters we have ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert e_{t+1}\\Vert^{2}\\right]\\leq(1+\\omega)q\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+(1+\\omega)^{2}q^{2}\\left(\\cfrac{1}{1-(1+\\omega)q}\\right)\\Vert g_{t}\\Vert^{2}}\\\\ &{\\qquad\\qquad\\leq(1+\\omega)q\\mathbb{E}\\left[\\Vert e_{t}\\Vert^{2}\\right]+\\cfrac{(1+\\omega)^{2}q^{2}}{1-(1+\\omega)q}\\mathbb{E}\\left[\\Vert g_{t}\\Vert^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Unrolling this recursion allows us to obtain ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\Vert e_{t+1}\\Vert^{2}\\right]\\leq((1+\\omega)q)^{t}\\mathbb{E}\\left[\\Vert e_{1}\\Vert^{2}\\right]+\\displaystyle\\sum_{t=1}^{T}\\left((1+\\omega)q\\right)^{t}\\frac{(1+\\omega)^{2}q^{2}}{1-(1+\\omega)q}G^{2}}\\\\ &{\\qquad\\qquad\\leq((1+\\omega)q)^{t}\\mathbb{E}\\left[\\Vert e_{1}\\Vert^{2}\\right]+\\displaystyle\\frac{1}{1-(1+\\omega)q}\\frac{(1+\\omega)^{2}q^{2}}{1-(1+\\omega)q}G^{2}}\\\\ &{\\qquad\\qquad\\leq\\displaystyle\\frac{(1+\\omega)^{2}q^{2}}{(1-(1+\\omega)q)^{2}}G^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "last inequality holds because $e_{1}=0$ . ", "page_idx": 31}, {"type": "text", "text": "Lemma 11. Under Assumptions 1-5, for all iterates of Algorithm 4 we have ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\Vert\\tilde{g}_{t}\\Vert^{2}\\right]\\leq4(1+q^{2})\\left(1+\\frac{(1+\\omega)^{2}q^{2}}{(1-(1+\\omega)q)^{2}}\\right)G^{2}.\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Proof. ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}\\left[\\left\\Vert\\tilde{g}_{t}\\right\\Vert^{2}\\right]=\\mathbb{E}\\left[\\left\\Vert\\mathcal{C}\\left(g_{t}+e_{t}\\right)\\right\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad=\\mathbb{E}\\left[\\left\\Vert\\mathcal{C}\\left(g_{t}+e_{t}\\right)-\\left(g_{t}+e_{t}\\right)+\\left(g_{t}+e_{t}\\right)\\right\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\leq2\\mathbb{E}\\left[\\left\\Vert\\mathcal{C}\\left(g_{t}+e_{t}\\right)-\\left(g_{t}+e_{t}\\right)\\right\\Vert^{2}\\right]+2\\mathbb{E}\\left[\\left\\Vert g_{t}+e_{t}\\right\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\leq2(1+q^{2})\\mathbb{E}\\left[\\left\\Vert g_{t}+e_{t}\\right\\Vert^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Using Lemma 10 we obtain ", "page_idx": 31}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\Vert\\tilde{g}_{t}\\Vert^{2}\\right]\\leq4(1+q^{2})\\left(1+\\frac{(1+\\omega)^{2}q^{2}}{(1-(1+\\omega)q)^{2}}\\right)G^{2}.\n$$", "text_format": "latex", "page_idx": 31}, {"type": "text", "text": "Lemma 12 (From paper: Zhou et al. [2024b]). Let us consider the update rule: ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\theta_{t+1}=(1-\\eta\\lambda)\\theta_{t}-\\eta_{t}\\frac{m_{t}}{\\sqrt{v_{t}+\\varepsilon}}.\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "For brevity, we denote ${\\widehat{v}}_{t}={\\sqrt{v_{t}+\\varepsilon}}.$ . Also we define ", "page_idx": 32}, {"type": "equation", "text": "$$\nu_{t}:=m_{t}+\\lambda\\theta_{t}\\otimes\\widehat{v}_{t},\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "where $\\otimes$ denotes element-wise product. Moreover, we also define $\\widetilde f\\left(\\theta_{t}\\right)$ as follows: ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\widetilde{f}\\left(\\theta_{t}\\right)=f(\\theta_{t})+\\lambda_{t}\\Vert\\theta_{t}\\Vert_{\\widehat{v}_{t}}^{2}\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "where $\\begin{array}{r}{\\lambda_{t}=\\frac{\\lambda}{2}\\sum_{i=1}^{t}\\left(\\frac{1-q}{2}\\right)^{i}}\\end{array}$ for $t>0$ , $\\lambda_{0}=0$ with $0<q<1$ and $\\lVert{\\boldsymbol{\\theta}}_{t}\\rVert_{\\hat{v}_{t}}=\\sqrt{\\langle\\theta_{t},\\hat{v}_{t}\\otimes\\theta_{t}\\rangle}$ . Also let $c_{1}\\leq\\|\\widehat{v}_{t}\\|_{\\infty}<c_{2}$ , then iterates of Algorithm 4 satisfy ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\widetilde{f}\\left(\\theta_{t}\\right)\\leq\\widetilde{f}\\left(\\theta_{t-1}\\right)+\\frac{\\eta_{t}}{2c_{1}}\\left\\Vert\\nabla f\\left(\\theta_{t-1}\\right)-m_{t-1}\\right\\Vert^{2}}\\\\ &{\\qquad-\\left.\\frac{\\eta_{t}}{2c_{2}}\\left\\Vert\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}-\\frac{\\eta_{t}}{4c_{2}}\\left\\Vert u_{t-1}\\right\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "Lemma 13 (From paper: Zhou et al. [2024b]). Assume that $c_{s,\\infty}\\leq\\|\\tilde{g}_{t}\\|_{\\infty}\\leq c_{\\infty}$ , then we have ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\|m_{t}\\|_{\\infty}\\leq c_{\\infty},\\quad\\|v_{t}+\\epsilon\\|_{\\infty}c_{\\infty}^{2}+\\epsilon,\\quad\\left\\|\\frac{\\left(v_{t}+\\epsilon\\right)^{p}}{\\left(v_{t+1}+\\epsilon\\right)^{p}}\\right\\|_{\\infty}\\in\\left[1-\\mu,1+\\mu\\right]\\left(\\forall p\\in\\left(0,1\\right)\\right),\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "where \u00b5 = $\\begin{array}{r}{\\mu=\\frac{\\beta_{2}c_{\\infty}^{2}}{c_{s,\\infty}^{2}+\\epsilon}}\\end{array}$ . ", "page_idx": 32}, {"type": "text", "text": "Theorem 5. Let Assumptions $^{\\,l}$ to 5 hold. Define $\\begin{array}{r}{\\Psi_{t}=\\widetilde{f}(\\theta_{t})+\\frac{\\eta_{t}}{2c_{1}\\beta_{1}}\\mathbb{E}\\left[\\|m_{t}-\\nabla f(\\theta_{t})\\|^{2}\\right].}\\end{array}$ With $\\begin{array}{r}{\\eta_{t}=\\eta\\le\\frac{\\beta_{1}c_{1}}{2L}\\sqrt{\\frac{c_{1}}{2c_{2}}},}\\end{array}$ , Algorithm 4 satisfies ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{1}{T}\\displaystyle\\sum_{t=1}^{T}\\left\\Vert\\nabla\\widetilde f\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}\\leq\\frac{2c_{2}}{\\eta T}\\Psi^{0}}\\\\ &{\\phantom{\\frac{1}{T}\\displaystyle\\sum_{t=1}^{T}}+\\frac{c_{2}}{c_{1}}\\left(9\\left(1+\\frac{(1+\\omega)^{2}q^{2}}{\\left(1-(1+\\omega)q\\right)^{2}}\\right)G^{2}+6G^{2}+3\\sigma^{2}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "Proof. We start from main lemma and lemma for momentum, summing inequalities together we obtain ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\widetilde{f}\\left(\\theta_{t}\\right)+V\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\widetilde{f}\\left(\\theta_{t-1}\\right)+\\frac{\\eta_{t}}{2c_{1}}\\left\\Vert\\nabla f\\left(\\theta_{t-1}\\right)-m_{t-1}\\right\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\quad-\\left.\\frac{\\eta_{t}}{2c_{2}}\\left\\Vert\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}-\\frac{\\eta_{t}}{4c_{2}}\\left\\Vert u_{t-1}\\right\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\quad+\\left.V\\left(1-\\frac{\\beta_{1}}{2}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\right\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\quad+\\left.V\\frac{2}{\\beta_{1}}L^{2}\\mathbb{E}\\Vert\\theta_{t-1}-\\theta_{t}\\Vert^{2}+V\\beta_{1}\\mathbb{E}\\left\\Vert\\nabla f(\\theta_{t})-\\tilde{g}_{t}\\right\\Vert^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "Using previous lemmas we have ", "page_idx": 32}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\widetilde{f}\\left(\\theta_{t}\\right)+V\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\widetilde{f}\\left(\\theta_{t-1}\\right)+\\frac{\\eta_{t}}{2c_{1}}\\left\\Vert\\nabla f\\left(\\theta_{t-1}\\right)-m_{t-1}\\right\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\quad-\\frac{\\eta_{t}}{2c_{2}}\\left\\Vert\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}-\\frac{\\eta_{t}}{4c_{2}}\\left\\Vert u_{t-1}\\right\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\quad+V\\left(1-\\frac{\\beta_{1}}{2}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\quad+V\\frac{2}{\\beta_{1}}L^{2}\\mathbb{E}\\Vert\\theta_{t-1}-\\theta_{t}\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\quad+V\\beta_{1}\\left(9\\left(1+\\frac{\\left(1+\\omega\\right)^{2}q^{2}}{\\left(1-\\left(1+\\omega\\right)q\\right)^{2}}\\right)G^{2}+6G^{2}+3\\sigma^{2}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 32}, {"type": "text", "text": "Using \u03b8t \u2212\u03b8t\u22121 = \u2212\u03b7tvt\u22121 we have ", "page_idx": 33}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\widetilde{f}\\left(\\theta_{t}\\right)+V\\mathbb{E}\\left[\\Vert m_{t}-\\nabla f(\\theta_{t})\\Vert^{2}\\right]\\leq\\widetilde{f}\\left(\\theta_{t-1}\\right)-\\left(\\frac{\\eta_{t}}{4c_{2}}-\\frac{2V L^{2}\\eta_{t}^{2}}{\\beta_{1}c_{1}^{2}}\\right)\\Vert u_{t-1}\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\qquad-\\left.\\frac{\\eta_{t}}{2c_{2}}\\left\\Vert\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\left(V\\left(1-\\frac{\\beta_{1}}{2}\\right)+\\frac{\\eta_{t}}{2c_{1}}\\right)\\mathbb{E}\\left[\\Vert m_{t-1}-\\nabla f(\\theta_{t-1})\\Vert^{2}\\right]}\\\\ &{\\qquad\\qquad\\qquad\\qquad+V\\beta_{1}\\left(9\\left(1+\\frac{\\left(1+\\omega\\right)^{2}q^{2}}{\\left(1-\\left(1+\\omega\\right)q\\right)^{2}}\\right)G^{2}+6G^{2}+3\\sigma^{2}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 33}, {"type": "text", "text": "Using $\\begin{array}{r}{V=\\frac{\\eta_{t}}{2c_{1}\\beta_{1}}}\\end{array}$ and $\\begin{array}{r}{\\Psi_{t}=\\widetilde{f}(\\theta_{t})+\\frac{\\eta_{t}}{2c_{1}\\beta_{1}}\\mathbb{E}\\left[\\|m_{t}-\\nabla f(\\theta_{t})\\|^{2}\\right]}\\end{array}$ we have ", "page_idx": 33}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{{\\Psi_{t}}\\leq{\\Psi_{t-1}}-\\frac{{\\eta_{t}}}{{4{c_{2}}}}\\left({1-\\frac{{4{c_{2}}{L^{2}}{\\eta_{t}^{2}}}}{{\\beta_{1}^{2}{c_{1}^{3}}}}}\\right){\\left\\|{{u_{t-1}}}\\right\\|^{2}}}\\\\ &{\\quad-\\,\\frac{{{\\eta_{t}}}}{{2{c_{2}}}}\\left\\|{\\nabla\\widetilde{f}\\left({\\theta_{t-1}}\\right)}\\right\\|^{2}}\\\\ &{\\quad+\\,\\frac{{{\\eta_{t}}}}{{2{c_{1}}}}\\left({9\\left({1+\\frac{{\\left({1+\\omega}\\right)^{2}}{{\\left({1+\\omega}\\right){q}^{2}}}}\\right)G^{2}+6{G^{2}}+3{\\sigma^{2}}}}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 33}, {"type": "text", "text": "Using $\\begin{array}{r}{\\eta_{t}=\\eta\\le\\frac{\\beta_{1}c_{1}}{2L}\\sqrt{\\frac{c_{1}}{2c_{2}}}}\\end{array}$ we have ", "page_idx": 33}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\Psi_{t}\\leq\\Psi_{t-1}-\\frac{\\eta_{t}}{2c_{2}}\\left\\|\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\|^{2}}}\\\\ {\\displaystyle\\qquad+\\,\\frac{\\eta}{2c_{1}}\\left(9\\left(1+\\frac{(1+\\omega)^{2}q^{2}}{\\left(1-(1+\\omega)q\\right)^{2}}\\right)G^{2}+6G^{2}+3\\sigma^{2}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 33}, {"type": "text", "text": "Summing from $t=1$ to $T$ we have ", "page_idx": 33}, {"type": "equation", "text": "$$\n\\frac{1}{T}\\sum_{t=1}^{T}\\left\\Vert\\nabla\\widetilde{f}\\left(\\theta_{t-1}\\right)\\right\\Vert^{2}\\leq\\frac{2c_{2}}{\\eta T}\\Psi^{0}+\\frac{c_{2}}{c_{1}}\\left(9\\left(1+\\frac{(1+\\omega)^{2}q^{2}}{\\left(1-(1+\\omega)q\\right)^{2}}\\right)G^{2}+6G^{2}+3\\sigma^{2}\\right).\n$$", "text_format": "latex", "page_idx": 33}, {"type": "text", "text": "Discussion. This result is similar to the one from Zhou et al. [2024b] in the non-convex case, where the decay rate for the first term is $\\textstyle{\\mathcal{O}}\\left({\\frac{1}{T}}\\right)$ and the second term is a non-vanishing $\\begin{array}{r}{\\mathcal{O}\\left(\\beta_{1}\\frac{c_{2}}{c_{1}}\\sigma^{2}\\right).}\\end{array}$ In our result, the non-vanishing term is proportional to $\\begin{array}{r}{\\mathcal{O}\\left(\\frac{c_{2}}{c_{1}}\\left(\\sigma^{2}+G^{2}\\right)\\right)}\\end{array}$ . ", "page_idx": 33}, {"type": "text", "text": "A key difference is that our term is not proportional to $\\beta_{1}$ . It is important to note that $\\beta_{1}$ typically takes a value close to 1 in practical applications, meaning its influence on the bound is minimal. Therefore, even though our result does not directly involve $\\beta_{1}$ , the impact on the overall bound is not significantly different. ", "page_idx": 33}, {"type": "text", "text": "Moreover, our bound includes an additional term proportional to $G^{2}$ , which represents the gradient norm squared. This makes the bound slightly worse compared to the result in Zhou et al. [2024b]. However, this degradation is only by a constant factor, which means that while the theoretical bound may be worse, the practical implications are often negligible. ", "page_idx": 33}, {"type": "text", "text": "In summary, our result aligns closely with previous findings, with differences primarily in the constant factors and the presence of $G^{2}$ . Despite these differences, the practical performance remains largely unaffected, ensuring that the bound remains robust and applicable in a variety of scenarios. ", "page_idx": 33}, {"type": "text", "text": "F Error Feedback applied to GaLore ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "F.1 Behaviour of the Error Feedback Mechanism ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "The GaLore low-rank updates introduced by [Zhao et al., 2024] enable the compression of optimizer states by performing learning updates on a lower-dimensional subspace. In this approach, the optimizer receives gradients projected on a defined learning subspace. Theoretical convergence guarantees are provided under a \u201cstable rank\u201d assumption, where learning subspace is fixed during training. However, in practice, convergence is attained by occasionally updating the learning subspace and allowing full space learning to better align with the gradient trajectory during training. ", "page_idx": 33}, {"type": "text", "text": "", "page_idx": 34}, {"type": "text", "text": "Here, it is useful to draw an analogy with the TopK method, as the occasional updates of the learning subspace resembles working with a fixed mask for many steps. Using a fixed mask would result in discarding the same coordinates of the gradient at each step. Similarly, in the case of low-rank updates, components orthogonal to the same learning subspace are discarded at each step. ", "page_idx": 34}, {"type": "text", "text": "The systematic nature of the information discarded by compression carries significant implications for error feedback behavior. Over multiple steps, the error accumulates gradient components belonging to the orthogonal space of the same learning subspace. Consequently, by linearity, the error itself resides in the orthogonal space of this learning subspace. As a result, when the error is passed to the accumulator, its projection onto the learning space is effectively disregarded until it is potentially utilized at the specific step when the learning subspace is updated. Therefore, the behavior of error feedback in the case of low-rank updates is non-standard: it accumulates gradient components over numerous steps before unloading them all at once. ", "page_idx": 34}, {"type": "text", "text": "For a better understanding, we derive analytical evidence for the described behaviour by induction. Let $L$ be fixed learning subspace and assume that $e_{t-1}\\in L^{\\perp}$ . Then, gradient passed to the optimizer at step $t$ is: $\\mathcal{C}_{G a L o r e}(a_{t})=p r o j_{L}(a_{t})=p r o j_{L}(e_{t-1}+g_{t})=p r o j_{L}(g_{t})$ where error feedback is discarded. Thus $,e_{t}=a_{t}-\\mathcal{C}_{G a L o r e}(a_{t})=e_{t-1}+g_{t}-p r o j_{L}(g_{t})=e_{t-1}+p r o j_{L^{\\perp}}(g_{t})\\in L^{\\perp}$ which completes the induction. ", "page_idx": 34}, {"type": "text", "text": "Assume now that learning subspace is updated every $T$ steps, and denote $L_{t}$ the learning subspace at step $t$ . Then, a similar induction leads to: ", "page_idx": 34}, {"type": "equation", "text": "$$\ne_{t}=\\sum_{i=1}^{t}\\overset{t}{\\underset{j=i}{\\circ}}p r o j_{L_{j}^{\\perp}}(g_{i})=\\sum_{i=1}^{t}\\overset{\\lfloor\\frac{t}{T}\\rfloor}{\\underset{j=\\lfloor\\frac{i}{T}\\rfloor}{\\circ}}p r o j_{L_{j T}^{\\perp}}(g_{i})\n$$", "text_format": "latex", "page_idx": 34}, {"type": "equation", "text": "$$\na_{k T}=p r o j_{L_{k T}}(g_{k T}+e_{k T-1})=p r o j_{L_{k T}}(g_{k T})+\\sum_{i=1}^{k T-1}p r o j_{L_{k T}}\\circ(\\O_{j=i}^{t}p r o j_{L_{j}^{\\perp}})(g_{i})\n$$", "text_format": "latex", "page_idx": 34}, {"type": "text", "text": "F.2 Consequences on Training ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Such behaviour of the error feedback mechanism results in the dominance of the error norm over the gradient norm. Before learning subspace updates, the error is the sum over past gradient components that belong to the orthogonal of the current learning subspaces. Since these components represent descent directions that were not used, they are not expected to compensate each other on average. Consequently, between learning subspace updates, the error norm is expected to grow linearly. Figure 8 provides evidence of such linear growth of the error norm during fine-tuning of RoBERTabase model on GLUE/MNLI task. ", "page_idx": 34}, {"type": "text", "text": "It implies that known analysis techniques [Alistarh et al., 2018, Karimireddy et al., 2019] of convergence for the error feedback mechanism do not apply to GaLore. Indeed, such proofs rely on the assumption that the compression operator is contractive, as it allows the error to be bounded. Given a fixed vector, low-rank compression based on its singular value decomposition is a contraction operator. However, in our case, the compression is based on a previously-computed singular value decomposition and therefore may not be a contraction operator for newly computed gradients. The extreme case being when the gradient is orthogonal to the learning subspace, in which case the compression operator returns the null vector. Figure 8 shows that during training the error norm is not on the same order of magnitude of the gradient norm. ", "page_idx": 34}, {"type": "text", "text": "The dominance of the error over the gradient also has effects on space exploration, as the learning subspaces are computed from the singular value decomposition of the accumulator (i.e. the sum of the gradient and the error). Since the main components of the accumulator belong to the orthogonal of current learning subspaces, successive learning subspaces will tend to be orthogonal to each other. This allows errors to be effectively passed to the optimizer, but all at once which can introduce irregularities in the learning trajectory. However, it also implies that learning is performed on a learning subspace that is suboptimal in terms of the direction of the gradient, but this may help ", "page_idx": 34}, {"type": "text", "text": "Figure 8: Dynamics of the norm of the error compared to norm of the gradient (of output of the 3rd attention layer) during fine-tuning of RoBERTa-base model on GLUE/MNLI from surrogate GaLore with error feedback optimizer. We used hyperparameters from [Zhao et al., 2024], i.e. batch size 16, learning rate 0.00001, projection update gap 200, rank 4 and GaLore scale 4. ", "page_idx": 35}, {"type": "image", "img_path": "Tck41RANGK/tmp/203f7eb7fbf95504a8f210099c0ef0b0cc3e891b4014e6e4834b6916ceb22d51.jpg", "img_caption": [], "img_footnote": [], "page_idx": 35}, {"type": "text", "text": "convergence by enforcing space exploration. See Figure 9 for examples of how induced orthogonality of successive learning subspaces affects the learning trajectory. ", "page_idx": 35}, {"type": "text", "text": "Figure 9: Optimization trajectory for Adam, GaLore-Adam and GaLore-Adam-EF for ill-conditioned function $\\begin{array}{r}{f(\\dot{x},y)=c o s(\\frac{5\\bar{\\pi}}{4}x)+s i n(\\frac{7\\pi}{4}y)}\\end{array}$ starting from $\\begin{array}{r}{(x_{0},y_{0})=\\left(-{\\frac{1}{4}},{\\frac{1}{4}}\\right)}\\end{array}$ (on first row) and for Rosenbrock function starting from $\\bar{(x_{0},y_{0})}=\\bar{(-\\frac12,1)}$ (on second row). ", "page_idx": 35}, {"type": "image", "img_path": "Tck41RANGK/tmp/ba40e9df854f2363efb54c3e80e0b2e9ee921208576c8f6a3cd9722e1a9578a8.jpg", "img_caption": [], "img_footnote": [], "page_idx": 35}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: In the abstract and introduction we introduce prior work on memory efficient optimization and we claim that our work improves the memory usage while preserving the performance. We provide theoretical and experimental justification for our algorithm that reflect the claims in the abstract and introduction. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 36}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Justification: We discuss the limitations of our work in Section 6. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 36}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 37}, {"type": "text", "text": "Justification: We include brief theoretical justifications for our method in Section 4 and include the complete proofs in the Appendix E. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 37}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 37}, {"type": "text", "text": "Justification: We explain our experiments in Section 5 and provide the complete set of hyper-parameters in Appendix B. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 37}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: We provide a zip file that contains the code for our optimizer. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 38}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: We provide information about the training details in Appendix B. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 38}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 38}, {"type": "text", "text": "Answer: [No] ", "page_idx": 38}, {"type": "text", "text": "Justification: We do not provide error bars, but instead explain how we report the results in Appendix B. Concretely, we run the same experiment with three different seeds and report the one with best performance. ", "page_idx": 38}, {"type": "text", "text": "Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 38}, {"type": "text", "text": "", "page_idx": 39}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: All these information can be found in Section 5. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 39}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: Yes, the research conducted in this paper conforms, in every respect, with the NeurIPS Code of Ethics. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 39}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: We discuss the broader impact of our work in Section 6. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 39}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 40}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 40}, {"type": "text", "text": "Answer: [No] ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Justification: We do not release any models. ", "page_idx": 40}, {"type": "text", "text": "Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 40}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 40}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 40}, {"type": "text", "text": "Justification: We work with open source models that are publicly available and we cited them properly. ", "page_idx": 40}, {"type": "text", "text": "Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 40}, {"type": "text", "text": "", "page_idx": 41}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 41}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 41}, {"type": "text", "text": "Justification: We provide code and instructions on how to run the code in order to reproduce our results. ", "page_idx": 41}, {"type": "text", "text": "Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 41}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 41}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 41}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects/ Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 41}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 41}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 41}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 41}, {"type": "text", "text": "", "page_idx": 42}]