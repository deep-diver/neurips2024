[{"type": "text", "text": "VidMan: Exploiting Implicit Dynamics from Video Diffusion Model for Effective Robot Manipulation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Youpeng $\\mathbf{Wen^{1*}}$ , Junfan $\\mathbf{Lin}^{2*}$ , Yi $\\mathbf{Zhu^{3}}$ , Jianhua $\\mathbf{Han^{3}}$ , Hang $\\mathbf{X}\\mathbf{u}^{3}$ , Shen Zhao1\u2020, Xiaodan Liang12\u2020 1Shenzhen Campus of Sun Yat-Sen University, 2Pengcheng Laboratory, 3Huawei Noah\u2019s Ark Lab ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Recent advancements utilizing large-scale video data for learning video generation models demonstrate significant potential in understanding complex physical dynamics. It suggests the feasibility of leveraging diverse robot trajectory data to develop a unified, dynamics-aware model to enhance robot manipulation. However, given the relatively small amount of available robot data, directly fitting data without considering the relationship between visual observations and actions could lead to suboptimal data utilization. To this end, we propose VidMan (Video Diffusion for Robot Manipulation), a novel framework that employs a two-stage training mechanism inspired by dual-process theory from neuroscience to enhance stability and improve data utilization efficiency. Specifically, in the first stage, VidMan is pre-trained on the Open X-Embodiment dataset (OXE) for predicting future visual trajectories in a video denoising diffusion manner, enabling the model to develop a long horizontal awareness of the environment\u2019s dynamics. In the second stage, a flexible yet effective layer-wise self-attention adapter is introduced to transform VidMan into an efficient inverse dynamics model that predicts action modulated by the implicit dynamics knowledge via parameter sharing. Our VidMan framework outperforms state-of-the-art baseline model GR-1 on the CALVIN benchmark, achieving a $11.7\\%$ relative improvement, and demonstrates over $9\\%$ precision gains on the OXE small-scale dataset. These results provide compelling evidence that world models can significantly enhance the precision of robot action prediction. Codes and models will be public. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In the rapidly advancing field of robotics, accurately predicting and executing precise actions based on sensory inputs is crucial. While traditional approaches [1\u20135] for robot manipulation often rely on labor-intensive hand-engineered features and models prone to errors, data-driven methods [6\u20138] offer promising solutions. However, the challenge lies in the difficulty and cost of acquiring high-quality robotic data. Recent advancements [9\u201312], particularly those utilizing large-scale online video data for learning a video generator, demonstrate significant potential in comprehending complex physical dynamics of the real world. These models, trained on diverse datasets [13, 8], possess a nuanced understanding of the world, suggesting the feasibility of amalgamating and leveraging varied robot visual trajectory data [14\u201316] to develop a unified dynamics-aware model for enhanced robot manipulation. Yet, achieving this unification poses challenges; merely ftiting data without considering the relationship between visual observations and actions could lead to suboptimal utilization of the data. Hence, there is a pressing need to develop efficient training mechanism and model architecture ", "page_idx": 0}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/69683cfa3520e4e2513e170925d113ebc8f66b4a3120ea58a55fb97438e57549.jpg", "img_caption": ["Dual Process Theory "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: VidMan\u2019s two-stage training paradigm mirrors dual process theory: its first stage (like System 2) pre-trains on understanding environment dynamics through video diffusion, forming a foundation for accurate action prediction, while its second stage (like System 1) was adapted from the first stage to leverage the learned dynamics knowledge for rapid, low-level action inference. ", "page_idx": 1}, {"type": "text", "text": "that can effectively leverage existing cross-robot and cross-scene data to enhance action prediction accuracy. ", "page_idx": 1}, {"type": "text", "text": "As shown in Fig. 1, to optimize the utilization of diverse robot data [8], we draw upon insights from neuroscience\u2019s dual process theory [17\u201319], which unveils the complex mechanisms of information processing and decision-making in the human brain. This theory distinguishes between two cognitive processes: System 1, responsible for rapid, intuitive responses based on immediate sensory inputs, and System 2, which involves slower, long-horizon planning grounded in abstract concepts and understanding of world dynamics [20]. Inspired by these insights, we adopt a two-stage paradigm for robot learning, exemplified by our innovative framework, terms as VidMan (Video diffusion for robot Manipulation). VidMan leverages the power of the video diffusion generation method Open-Sora [21] for robot imitation learning, tapping into the awareness of long-horizon dynamics inherent in video diffusion models to achieve more nuanced and dynamics-modulated robot action prediction. By learning different facets of data at distinct stages, VidMan acquires an inductive bias of inverse dynamics of robot control, wherein actions are the outcomes of state sequences, significantly enhancing the method\u2019s generalization performance, especially under scenarios with limited data. ", "page_idx": 1}, {"type": "text", "text": "Specifically, our VidMan employs a two-stage training mechanism, akin to the principles of dual process theory, to enhance stability and significantly improve data utilization: 1) In the first stage, namely the Dynamics-aware Visionary Stage, VidMan undergoes pre-training on the Open X-Embodiment [8] dataset (OXE) using a video diffusion model to predict future trajectories based on historical observations and language instructions. This stage involves the robot learning the dynamics of state transitions from data and accurately perceiving the current environmental state, enabling the model to develop a deep understanding of the environment\u2019s dynamics, forming a robust foundation for accurate action prediction; 2) In the second stage, dubbed the Dynamics-modulated Action Stage, VidMan incorporates a flexible yet powerful layer-wise self-attention adapter [22] to seamlessly integrate the pre-trained knowledge from the first stage into action prediction. Through shared neural architecture and parameters with the dynamics-aware visionary stage, this phase transforms VidMan into an implicit inverse dynamics model that infers dynamics-modulated actions without explicitly generating future visual trajectories, rendering it suitable for real-world robot control scenarios. ", "page_idx": 1}, {"type": "text", "text": "The performance of VidMan has been evaluated against SOTA baselines on the CALVIN [14] benchmark, where it achieves a $11.7\\%$ relative improvement. In addition, VidMan has shown notable effectiveness on the OXE small-scale dataset, achieving over $9\\%$ precision gains. This improvement is particularly evident when the data from the target robot is small, underscoring the effective data utilization of our method. Extensive ablation studies have been conducted to analyze the effects of various design decisions within our method. These experimental results suggest that VidMan represents a meaningful advancement in robotics, providing a valuable tool for developing more capable and responsive robotic systems. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Language-guided Robot Manipulation. Language-guided robot manipulation has emerged as an elastic and straightforward approach to instructing robots to perform various tasks [14, 23]. Some existing methods [24, 25, 10, 26\u201330] leverage large language models (LLMs) to plan over the task domain and pass instructions to low-level action policies to generate robot actions. The hierarchical 2D policies [31\u201333] predict latent features or images of subgoals given a language instruction, which they feed into lower-level subgoal-conditioned policies. 3D policies [34, 35] combine 3D representations with diffusion objectives to learn manipulation from demonstrations using depth maps and camera extrinsics. Some methods [36, 37] also utilize 3D [38\u201340] or 2D [41\u201343] detection to identify objects and use constrained optimization methods to control robot operations Another line of work learns language-conditioned policies from unstructured play data, which contains demonstrations with and without language labels [44, 32]. These methods leverage sequence-to-sequence conditional variational auto-encoders to generate latent plans, which are then used to condition the action policy. ", "page_idx": 2}, {"type": "text", "text": "Pre-training for Robot Manipulation. The field of pre-training for robot learning has garnered significant attention in recent years [9, 26, 11, 45]. Some methods aim to learn useful visual representations through masked image modeling [9] and contrastive learning [11]. Previous research [46, 7, 47, 45, 25, 48] has focused on empowering robots and other agents with the capability to comprehend and execute language instructions, typically by learning policies conditioned on language. GR-1 [9] and RoboFlamingo [26] use a GPT-style framework to model action prediction as a token prediction task in CALVIN dataset [14], and achieve good results. Our approach is most similar to GR-1 in that it utilizes GPT-style framework to predict both video and action, while ours directly uses video\u2019s ability to capture future information to predict long sequences of actions. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Robot Dynamics and Inverse Dynamics. The dynamics of a robot are typically characterized by the forward dynamics and the inverse dynamics. The forward dynamics describe how the current state and action determine the next state. Formally, given a state space $\\boldsymbol{S}$ and an action space $\\boldsymbol{\\mathcal{A}}$ , the forward dynamics can be represented as the conditional probability distribution: $P(s_{t+1}\\mid s_{t},a_{t})$ , where $s_{t},s_{t+1}\\in\\mathcal{S}$ are the robot state at timestep $t$ and $t+1$ , respectively, and $a_{t}\\in\\mathcal A$ is the action taken. Conversely, inverse dynamics describe the probability of an action given a transition from one state to another. The inverse dynamics are particularly important in scenarios where only passive observation data is available, such as data collected from the internet, which often lacks explicit action information. Formally, the inverse dynamics are given by: ", "page_idx": 2}, {"type": "equation", "text": "$$\nP(a\\mid s_{t},s_{t+1}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Observations to States. In many real-world applications, direct access to the state space $\\boldsymbol{S}$ is infeasible, and instead, sequences of image observations are provided. Let $\\scriptscriptstyle\\mathcal{O}$ denote the observation space, e.g., image, proprio. To infer the underlying sequence of states $S=\\{s_{1},s_{2},\\dots,s_{T}\\}$ from a sequence of observations ${\\cal O}=\\{o_{1},o_{2},\\dots,o_{T}\\}$ . This process can be formally described by finding the sequence of states that maximizes the posterior probability given the observations: ", "page_idx": 2}, {"type": "equation", "text": "$$\nS^{*}=\\arg\\operatorname*{max}_{S}P(S\\mid O).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Using Bayes\u2019 theorem, this can be further expressed as: ", "page_idx": 2}, {"type": "equation", "text": "$$\nS^{*}=\\arg\\operatorname*{max}_{S}P(O\\mid S)P(S),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $P(O\\mid S)$ is the likelihood of the observations given the states, and $P(S)$ is the prior probability of the sequence of states. This formulation is essential in various applications, including hidden Markov models (HMMs) and other state estimation techniques. With more observations, the likelihood $P(O\\mid S)$ becomes more peaked around the true state sequence. This is because more data points allow for better discrimination between different state sequences. ", "page_idx": 2}, {"type": "text", "text": "4 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this paper, we aim to enhance the precision of robot action prediction by exploiting the intricate dynamics encoded within robot visual trajectories. We propose VidMan, a novel framework leveraging ", "page_idx": 2}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/93318b4044fc6cd7d459f49bf28f3ae33517b571e7d6d014e15b6d8ec9d84daf.jpg", "img_caption": ["Figure 2: Overview of VidMan. (a) We use Video Tokenizer to tokenize the uniform sampled robot visual trajectory $O_{s}$ to video tokens $V_{s}$ . (b) In the 1st Stage, we concatenate the video tokens processed through the diffusion process with the historical tokens along the channel dimension to form $V_{c}^{k}$ . $V_{c}^{k}$ along with the language tokens and diffusion step $k$ are fed into Open-Sora for video prediction training. In the 2nd Stage, we use a learnable action token through a layer-wise adapter applied to the output of the Open-Sora Block to obtain tokens $V_{\\mathrm{action}}$ that integrate future frame information. $V_{\\mathrm{action}}$ are then fed into the Diffusion Action Head $\\pi_{\\phi_{d e c}}$ for action prediction training. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Video diffusion for robot Manipulation. VidMan employs a dual-stage training strategy: in the first stage, the Dynamics-aware Visionary Stage, we enable the model to forecast and imagine potential future trajectories based on historical observations, leveraging the multi-frame prediction capability of the video diffusion model. Through this stage, the model is optimized to understand the dynamics of the environment. In the second stage, the Dynamics-modulated Action Stage, we introduce a lightweight layer-wise adapter to seamlessly integrate the visionary predictive stage with fast, adaptive action prediction. This approach decouples the knowledge of the world and embodiment into distinct processes while ensuring seamless integration through the training and utilization of shared parameters. Overview of our method is shown in Fig. 2. In the following sections, we will formulate each of these stages. ", "page_idx": 3}, {"type": "text", "text": "4.1 Dynamics-aware Visionary Stage ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To endow the model with the knowledge of world dynamics, we formulate this knowledge acquisition stage as future image trajectory generation, which captures dynamic priors and predicts future state transitions more accurately according to Equ. (3). Specifically in our context, the goal is to predict future frames based on historical frames and language instructions. To achieve this, we leverage the capabilities of a multi-frame generation framework based on the video diffusion transformer model (VDT) Open-Sora [21], which has shown a remarkable ability to generate diverse and physically authentic successive frames aligned with language instructions. For simplicity, we use VDT to represent Open-Sora in the following content. ", "page_idx": 3}, {"type": "text", "text": "To prepare the training data, we utilize a pre-trained video tokenizer [49] to encode successive robot images in a trajectory Os = [Oh, Of] into embeddings Vs = [Vh, Vf], where Vh \u2208Rm\u00d7W \u00d7H\u00d7C and $V_{f}\\,\\in\\,\\mathbb{R}^{n\\times W\\times H\\times C}$ stand for embeddings for $m$ history images $O_{h}$ and $n$ future images $O_{f}$ , respectively. During the forward diffusion process $V_{s}^{k}\\gets\\varepsilon(V_{s},\\epsilon,k)$ , the noise $\\epsilon\\sim\\mathcal{N}(0;1)$ is added to trajectory embeddings $V_{s}$ according to the diffusion step $k\\,\\in\\,[1,K]$ . The diffusion model is optimized to predict the added noise $\\epsilon$ from $V_{s}^{k}$ given the condition hints. As the condition hints, we pad $V_{h}$ with zero-valued embeddings $V^{0}$ to the same shape as $V_{s}^{k}$ , which are concatenated with $V_{s}^{k}$ along the channel dimension to form the condition visual embeddings $V_{c}^{k}\\in\\mathbb{R}^{(m+n)\\times W\\times H\\times2C}$ . And the language instruction $y$ is encoded by an text tokenizer [50] to obtain the language embedding. Mathematically, the denoised diffusion model is optimized according to: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{v}(\\theta)=\\mathbb{E}_{(V_{c}^{k},y,k)}\\left[\\left|\\left|\\epsilon-\\epsilon_{\\theta}(V_{c}^{k},y,k)\\right|\\right|_{2}^{2}\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In this training stage, we use only a third-person camera to predict the representation. This approach has two main advantages: a) most robot datasets include only third-person view data; b) training with a fixed third-person viewpoint can reduce the influence of view changes and help the model focus on predicting the transitions of the robotic arm itself. Additionally, our method can easily be extended to multiple cameras by simply inputting multiple cameras of viewpoint. ", "page_idx": 4}, {"type": "text", "text": "4.2 Dynamics-modulated Action Stage ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "According to Equ. (1), actions can be accurately predicted given the states with the inverse dynamics model. One straightforward approach to combine an inverse dynamics model with the VDT learned in the first stage is to separately construct an inverse dynamics model that maps from image observations to actions. During deployment, this model could predict actions from the generated observations of the dynamics-aware visionary stage. However, by this means, actions are only predictable after the VDT conducts a time-consuming iterative denoising diffusion process, which is not ideal for high-frequency robot control. Moreover, the accuracy of the actions is heavily dependent on the accuracy of the predicted observations. Since not all pixels are important for predicting actions, this method could introduce unnecessary bias and time costs. Additionally, learning a separate inverse dynamics model from scratch does not leverage the pre-trained parameters of the VDT. ", "page_idx": 4}, {"type": "text", "text": "To address these issues, we propose directly adapting the VDT into an inverse dynamics model. In this way, the dynamics knowledge and implicit states learned in VDT can be seamlessly leveraged to facilitate the prediction of actions. Below, we introduce a lightweight adapter module that effectively transforms the VDT into an implicit inverse dynamics model. The output of this adapted model is then decoded into a sequence of actions using a diffusion-based action head. ", "page_idx": 4}, {"type": "text", "text": "Implicit Inverse Dynamics Adapter. To transform the VDT into an inverse dynamics model, we incorporated a layer-wise adapter which is inspired by [22] after each layer in VDT. Each adapter includes a multi-head self-attention and a feed-forward network (FFN) with a gated mechanism. We use $h$ learnable action tokens $Q_{\\mathrm{action}}$ , concatenating them with the features ouput from each layer of the VDT, and input them into the layer-wise adapter. This fuses the knowledge of each layer of the VDT to produce $h$ final action embeddings $V_{\\mathrm{action}}$ . Since we only reuse VDT parameters without its observation generation function, we disable the iterative denoising process by using a fixed diffusion step $k\\leftarrow K$ , which turns $V_{s}^{k}$ into pure Gaussian noise. Formally, the action embeddings are fused with the introduce layer-wise adapter parameterized by $\\phi$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\nV_{\\mathrm{action}}=\\epsilon_{(\\theta,\\phi_{\\mathrm{ada}})}(V_{c}^{K},y,K,Q_{\\mathrm{action}}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\epsilon_{(\\theta,\\phi_{\\mathrm{ada}})}$ represents the VDT parameters incorporated with the layer-wise self-attention adapter with parameters $\\phi_{\\mathrm{ada}}$ . The flexibility of the layer-wise adapter allows for the integration of domainspecific knowledge into the action embedding. For example, if the downstream robotic manipulation task includes proprioceptive information, we can use a proprioception embedder to convert it into tokens, which are then concatenated with the output of each layer of the VDT to serve as the additional keys and values for the layer-wise adapter. Please refer to Appendix A.2 for more details. ", "page_idx": 4}, {"type": "text", "text": "Diffusion-based Action Head. The fused action embeddings, $V_{\\mathrm{action}}$ , are subsequently translated into low-level control signals. To achieve this, we utilize a diffusion-based action head [51], $\\pi_{\\phi_{\\mathrm{dec}}}$ , responsible for decoding action embeddings into executable action signals, such as determining the 7 degrees of freedom (DoF) for the end-effector pose and gripper status. Similar to the dynamics-aware visionary stage, the objective of action prediction is: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{a}(\\theta,\\phi_{\\mathrm{ada}},\\phi_{\\mathrm{dec}})=\\mathbb{E}_{(V_{\\mathrm{action}},l)}\\left[\\left|\\epsilon^{\\prime}-\\pi_{\\phi_{\\mathrm{dec}}}(\\varepsilon(V_{\\mathrm{action}},\\epsilon^{\\prime},l),l)\\right|\\right|_{2}^{2}\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\epsilon^{\\prime}\\sim\\mathcal{N}(0,1),\\,l\\,\\in\\,[1,L]$ stands for the diffusion step and $\\varepsilon$ denotes the forward diffusion process. Note that this diffusion-based action head is relatively small compared to the VDT, making its computational cost and time consumption almost negligible. ", "page_idx": 4}, {"type": "text", "text": "5 Experiment ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we conduct comprehensive experiments to validate the effectiveness of our methods, along with in-depth ablation studies. ", "page_idx": 4}, {"type": "text", "text": "5.1 Experiment Settings ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "5.1.1 2-stage Training Setting ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Settings of dynamics-aware visionary stage. We initialized our model with the weights from Open-Sora\u2019s [21] $16\\mathrm{x}256\\mathrm{x}256$ text-to-video model, which was trained on internet data [52\u201354]. Since we concatenated historical frames along the channel dimension, we append a zero matrix to the parameters of the tokens embedder layer in Open-Sora accordingly. We use Open X-Embodiment Dataset [8] to train our model, which was constructed by pooling 60 existing robot datasets from 34 robotic research labs around the world. We referred to the Octo [7] codebase to selected 25 datasets from it, which are heterogeneous not just in terms of the robot type, but also in the sensors (e.g., including or not including wrist cameras) and labels (e.g., including or not including language instrctions). Unless otherwise specified, we sampled video sequences from trajectories at intervals of 3, resulting in 4-frame video sequences, with 2 historical frames and 2 future frames. At this stage, we only used images from the third-person camera with $256\\times256$ resolution. We use a maximum of $K=1000$ diffusion step. ", "page_idx": 5}, {"type": "text", "text": "Settings of dynamics-modulated action stage. In this training stage, we used data from both the Open X-Embodiment (OXE) and CALVIN [14] datasets for training. We additionally incorporated images from a wrist camera as extra observations. For the data in OXE, we predicted 12 action steps, whereas for the CALVIN data, we predicted 10 steps. For the diffusion policy head, we set the noise addition steps to 100. We used a $224\\times224$ third-person camera and a $224\\times224$ wrist camera. In this stage, we set VDT\u2019s diffusion step to the maximum, i.e., $k=K$ , and used pure noise as $V_{s}^{K}$ . The VDT does not conduct the iterative denoising process. As for the diffusion-based action head, we set the maximum diffusion step as $L=100$ . More details can be found in Appendix A.2 ", "page_idx": 5}, {"type": "text", "text": "5.1.2 Benchmark and Baselines ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Simulation Evaluation: The CALVIN benchmark utilizes the PyBullet[55] simulator and involves a Franka Panda Robot arm interacting with various environments labeled A, B, C, and D. Each environment includes a desk, a sliding door, a drawer, a button controlling an LED, a switch for a lightbulb, and three colored blocks (red, blue, and pink). These environments differ in desk textures and object positions. CALVIN provides 24 hours of unstructured tele-operated play data, with $1\\%$ annotated with language descriptions. Each instruction chain consists of five sequential language instructions for execution. Evaluation follows a zero-shot generalization setup, training models on environments A, B, and C and testing on D. Performance metrics include success rates and average completion of sequential tasks, as per prior studies[26, 9]. Notably, CALVIN lacks a motion planner, requiring all models to predict robot pose trajectories. ", "page_idx": 5}, {"type": "text", "text": "Offline Evaluation: We also report offline metrics, including the average of xyz accuracy and euler angle accuracy (Avg xyz ang) and MSE for end-to-end action prediction on Bridge [56], Taco Play [57], Cable Routing [58] and Autolab UR5 [59], which are presented in OXE [8]. Following Octo [7], we use continuous action space. XYZ accuracy measures the precision of the robot\u2019s predicted 3D position (X, Y, Z coordinates) compared to the ground truth values during evaluation. Euler angle accuracy measures the precision of the robot\u2019s predicted orientation angles (rotations around X, Y, and Z axes) compared to the ground truth values during offilne evaluation. Specifically, XYZ accuracy refers to whether we predicted the XYZ delta within 0.5 radians and $50\\%$ of the norm while in motion. Euler angle accuracy indicates whether we predicted the rotation delta within 0.5 radians during movement. Additionally, we reported the mean squared error (MSE) which reflects how well each model predicts the actions. ", "page_idx": 5}, {"type": "text", "text": "Baselines: On the CALVIN benchmark, we compare our approach to the hierarchical 2D policies of MCIL [31], HULC [32], and SuSIE [33], which predict latent features or subgoal images based on language instructions and feed them into lower-level subgoal-conditioned policies. These methods can train the low-level policy using the full CALVIN dataset, rather than being restricted to the language-annotated subset. We also compare against large-scale 2D transformer-based policies like RT-1 [47], RoboFlamingo [26], and GR-1 [9], which pretrain on extensive interaction or observational (video-only) data. Additionally, to better highlight the performance of our method, we compare with the 3D methods, 3D Diffusion Policy [34] and 3D Diffuser Actor [35]. Both share a similar goal of combining 3D representations with diffusion objectives to learn manipulation from demonstrations using depth maps and camera extrinsics. As for OXE benchmark, we compared our method with ", "page_idx": 5}, {"type": "text", "text": "RT-1-X [8] and Octo [7]. RT-1-X is an openly available generalist robot policy which are trained on OXE using RT-1 [47] framework. Octo is a transformer-based diffusion policy that supports flexible task and observation definitions, pretrained on OXE. These baselines are used to validate the benefti of our two-stage training strategy since both RT-1-x and Octo are optimized with all data in a train-from-scratch manner. To demonstrate the effectiveness of using diffusion models in learning dynamics priors and modeling states in the first stage, we implemented a GPT-style (VidMan-GPT) policy, as a baseline. This baseline autoregressively predicts the next images and actions in the first stage. This allows us to compare, in a fair manner, the benefits of simultaneously predicting multiple frames in a diffusion-like manner versus predicting only the next frame in a GPT-like fashion for modeling dynamics priors and state representations. We only predict a single frame and the corresponding action. We discarded the diffusion scheduler and used random masking [60] to reconstruct images to calculate the video loss. ", "page_idx": 6}, {"type": "text", "text": "5.2 Comparison Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Table 1: Zero-shot long-horizon evaluation on CALVIN. All denotes that the model is trained on the entire dataset, including visual data without language annotations, while Lang refers to training on only the language-labeled data.. Our method outperforms the hierarchical 2D policies (MCIL [31], HULC [32] and SuSIE [33]) and large-scale 2D transformer-based policies (RT-1 [47] RoboFlamingo [26] and GR-1 [9]), while also remaining competitive compared to 3D-based policies (3D Diffusion Policy [34] and 3D Diffuser Actor [35]). ", "page_idx": 6}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/54c087e60a140414112e5e198d23ad3b6146c21d8b1f450d675bdb8db4d2a928.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Multi-Task Performance. We first conducted the initial stage of training on OXE, then utilized CALVIN\u2019s static camera and wrist camera as the two input sources for the second stage of training on CALVIN. Following the setup in GR-1, we used the portion of the CALVIN dataset that includes language instruction labels, while also incorporating CALVIN\u2019s proprioceptive state data as additional input into the layer-wise adapter. Tab. 1 compares the performance of mainstream methods such as SuSIE, RT-1, RoboFlamingo, GR-1, and 3D Diffuser Actor against VidMan. Compared to hierarchical 2D policies like SuSIE, which struggle to effectively leverage language information at the low level despite being able to train on the entire dataset (\"All\"), these methods generally underperform in terms of generalization compared to end-to-end policies like GR-1 and RoboFlamingo. Our method adopts an end-to-end training approach, outperforming the best hierarchical architecture, SuSIE, by 0.73 in Avg. Len., while using less data. When compared to large-scale 2D transformer-based policies such as GR-1 and RoboFlamingo, which also use an end-to-end output approach, our method is highly comparable. Thanks to pretraining on the large-scale robotics dataset OXE and utilizing the Open-Sora architecture, which is more vision-friendly, our method outperforms GR-1 by a clear margin on average length ( $11.7\\%$ relative improvement). In comparison to 3D Diffuser Actor, which leverages depth information to predict actions, our model remains competitive due to the ability to pretrain on large-scale datasets without depth information, which are easier to collect. ", "page_idx": 6}, {"type": "text", "text": "Offline Performance. To evaluate offline performance, in this part, the second stage of our model is optimized with OXE dataset. We evaluate performance on in-distribution tasks. Specifically, we conduct two parts of evaluation: 1) the evaluation on domains that have small-scale sub-datasets in OXE (Taco Play, Cable Routing and AUTOLab UR5), where we would expect pretraining with larger datasets can significantly improve performance; 2) the evaluation on domains with large-scale dataset (Bridge), where we expect further improvement to be more challenging. We compare our results with RT-1-X, Octo-small, Octo-base, and VidMan-GPT on the four sub-datasets. We compared the average ", "page_idx": 6}, {"type": "text", "text": "Table 2: Ablation Studies on Key Factors of VidMan.. We conduct finetune experiments on CALVIN. Average length is used. Best practice settings are marked in gray . ", "page_idx": 7}, {"type": "text", "text": "(a) 2-stage training. Training only the action prediction in the second stage is crucial. ", "page_idx": 7}, {"type": "text", "text": "(b) Pretrain type. Video pretrain- (c) Effect of layer-wise adapter. ing on domain-specific data is im- Layer-wise adapter is important portant. for performance improvements. ", "page_idx": 7}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/46c3d11bbc109ad61a66e7a75cc366ae2205fac1f98e6584f6a9f168d3f14472.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/9242e74c43b1e456a18a412caf44c12c682002f260f08ad9cda6b16cb911f5bc.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/1c74d35fcb814b71d3183ecedee5359fd9cc966417cde86b061b9daabd5bee5b.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "values of xyz accuracy and angular accuracy (Avg xyz ang), the higher the better, as well as the MSE (the lower the better). As shown in Fig. 3, it can be observed that our method outperforms the state-of-the-art open-source method, Octo, in both evaluation settings. Particularly on the small-scale sub-datasets CableRouting and Autolab UR5, our method improves the offline average xyz angle accuracy by $9.9\\%$ and $9.0\\%$ over Octo, respectively. The key difference between Octo and our method is in the optimization approach. Octo employs a co-training strategy, utilizing all data at once. However, our two-stage training strategy demonstrates a significant improvement, especially in domains with limited data. This improvement is attributed to our approach\u2019s ability to utilize the training data more efficiently by implicitly leveraging the inductive bias of inverse dynamics. Regarding Taco Play, the improvement we achieved is less notable. This is likely because the Taco Play scenes are relatively simple, and various methods tend to achieve similar performance levels in such environments. Additionally, our method shows improvements of $5.6\\%$ on the large-scale dataset Bridge which also demonstrates the effectiveness of our method. We have also achieved significant improvements over our own baseline, VidMan-GPT, across all four datasets, demonstrating the superiority of our model architecture. Details can be found in Tab. 7 ", "page_idx": 7}, {"type": "text", "text": "5.3 Extra Ablation Studies ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we conduct ablation studies for VidMan to answer the following questions: 1) Can co-training obtain a similar performance to our two-stage training? 2) Whether pretrained with general video data on the internet help improve the performance? 3) How much performance is gained by using the layer-wise self-attention block? 4) Does increasing the frame sampling interval positively impact action prediction? In the following, we answer each of these questions. ", "page_idx": 7}, {"type": "text", "text": "The importance of two-stage training. In our second stage, we only use action as a supervision signal to learn an implicit inverse dynamics model $P(a_{t}\\mid s_{t},s_{t+1})$ in Equ. (1). In other words, it suggests that we should not co-train with both actions and frames generation at the same time, otherwise a joint distribution $P(a_{t},s_{t+1}\\mid s_{t})$ is learning. To validate this viewpoint, we conducted experiments where the frames generation loss $\\mathcal{L}_{v}$ is also used in the second stage along with $\\mathcal{L}_{a}$ . The result of this variant is presented as \"co-train\" in Tab. 2a. In comparison to using only $\\mathcal{L}_{a}$ in the second stage, namely \"action-only\" in the table, the average score of \"co-train\" degrades severely and approaches the performance of baseline methods in Tab. 2a. This further supports the effectiveness of our two-stage training strategy. ", "page_idx": 7}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/7799a9e2741597df53e249e4503fa04b34fdaa4f88428554bccb93b950604c60.jpg", "table_caption": ["Table 3: Effect of Frame Sampling Interval. Setting the frame sampling interval to 3 is effective. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Pretrained with general video data. To evaluate whether pretraining with general video data (not specific to robotics) from the internet helps improve performance, we conducted two control experiments. \u201cw/o Pre-train\u201d refers to our model without video pretraining, \u201cw/ Ego4d\u201d represents pretraining during the first stage using the general dataset Ego4d [13] for video prediction, and \u201cw/ OXE\u201d refers to pretraining using the robot-specific dataset OXE. For the Ego4d dataset, we followed the same processing pipeline as GR-1. As shown in Tab. 2b, pretraining with robot-specific video data resulted in a 0.53 increase in the average task length on CALVIN compared to \u201cw/o Pre-train\u201d, while pretraining with general data (\u201cw/ Ego4d\u201d) slightly decreased performance by 0.13. This suggests that training on web-based general data can yield marginal improvements, and pretraining in robotics domains significantly boosts performance. ", "page_idx": 8}, {"type": "text", "text": "Effect of layer-wise adapter. To measure the effect of the layer-wise adapter, we removed it (w/o adapter) and directly extracted the observed information into the action policy head by concatenating learnable action token to observation tokens before Open-Sora blocks. We found that this significantly reduced performance, comparing row 1 and row 3 in Tab. 2c. Additionally, we found that training only the layer-wise adapter while keeping the Open-Sora blocks fixed leads to faster convergence, as shown in Fig. 4. The training loss of the \u201cfreeze\" curve converges faster than the \u201cnot freeze\" curve. If both the adapter and Open-Sora blocks are trained, better accuracy can be achieved, by comparing row 2 and row 3 in Tab. 2c. In this sense, we can quickly adapt to a specific robotic scenario with the adapter being trained. In brief, layerwise adapter can provide good performance. If Open-Sora blocks\u2019 parameters are not fixed, better performance can be achieved; if the parameters are fixed, faster convergence can be obtained. ", "page_idx": 8}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/5115e3243cac4219bcffee27975219aae1383d2f6f8ded5814925040a9df871b.jpg", "img_caption": ["Figure 4: Efficiency comparison between two types of training. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Effect of frame sampling interval. We compare the effectiveness of different frame sampling intervals (i.e. 1, 2, 3, and 4) on Bridge Dataset and CALVIN. With a larger frame interval, a longer historical information our model can perceive and a longer future information needed to be predicted. The total length of the four experimental frames is 4, including 2 historical frames and 2 future frames. Results are shown in Tab. 3. It is observed that increasing the intervals from 1 to 3 improves performance on Bridge and CALVIN. The potential reason is that consecutive frames are very similar, and predicting frames that are farther away from the current step helps the robot gain a better understanding of the future. However, when the interval increases from 3 to 4, this improvement saturates quickly. We speculate that predicting frames too far into the future may not offer effective guidance for immediate local action prediction. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we propose VidMan, a novel framework utilizing video diffusion models for robot imitation learning, which addresses the limitations of current GPT-style paradigms in real-time applications. By combining a Dynamics-aware Visionary Stage, which develops a deep understanding of environment dynamics through pre-training on the Open X-Embodiment dataset, with a Dynamicsmodulated Action Stage that efficiently integrates this knowledge into action prediction, VidMan achieves both high precision and computational efficiency. This two-stage approach, ensures robust and rapid action generation, significantly improving performance on benchmarks like CALVIN and the OXE dataset. In the future, we will expand VidMan to be able to perceive more dimensions of information. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgements This work was supported in part by National Science and Technology Major Project (2020AAA0109704), National Science Foundation of China Grant No. 62476293, National Key Research and Development Program (Grant 2022YFE0112500), National Natural Science Foundation of China (Grants 62101607), Guangdong Outstanding Youth Fund (Grant No. 2021B1515020061), Shenzhen Science and Technology Program (Grant No. GJHZ20220913142600001), Nansha Key RD Program under Grant No.2022ZD014, The Major Key Project of PCL (No. PCL2024A04, No. PCL2023AS203). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Andy Zeng, Kuan-Ting Yu, Shuran Song, Daniel Suo, Ed Walker, Alberto Rodriguez, and Jianxiong Xiao. Multi-view self-supervised deep learning for 6d pose estimation in the amazon picking challenge. In 2017 IEEE international conference on robotics and automation (ICRA), pages 1386\u20131383. IEEE, 2017. ", "page_idx": 9}, {"type": "text", "text": "[2] Menglong Zhu, Konstantinos G Derpanis, Yinfei Yang, Samarth Brahmbhatt, Mabel Zhang, Cody Phillips, Matthieu Lecce, and Kostas Daniilidis. Single image 3d object detection and pose estimation for grasping. In 2014 IEEE International Conference on Robotics and Automation (ICRA), pages 3936\u20133943. IEEE, 2014.   \n[3] Ester Martinez-Martin and Angel P Del Pobil. Vision for robust robot manipulation. Sensors, 19(7):1648, 2019.   \n[4] Andy Zeng, Shuran Song, Kuan-Ting Yu, Elliott Donlon, Francois R Hogan, Maria Bauza, Daolin Ma, Orion Taylor, Melody Liu, Eudald Romo, et al. Robotic pick-and-place of novel objects in clutter with multi-affordance grasping and cross-domain image matching. The International Journal of Robotics Research, 41(7):690\u2013705, 2022.   \n[5] Dmitry Kalashnikov, Alex Irpan, Peter Pastor, Julian Ibarz, Alexander Herzog, Eric Jang, Deirdre Quillen, Ethan Holly, Mrinal Kalakrishnan, Vincent Vanhoucke, et al. Scalable deep reinforcement learning for vision-based robotic manipulation. In Conference on robot learning, pages 651\u2013673. PMLR, 2018.   \n[6] Alexander Khazatsky, Karl Pertsch, Suraj Nair, Ashwin Balakrishna, Sudeep Dasari, Siddharth Karamcheti, Soroush Nasiriany, Mohan Kumar Srirama, Lawrence Yunliang Chen, Kirsty Ellis, Peter David Fagan, Joey Hejna, Masha Itkina, Marion Lepert, Yecheng Jason Ma, Patrick Tree Miller, Jimmy Wu, Suneel Belkhale, Shivin Dass, Huy Ha, Arhan Jain, Abraham Lee, Youngwoon Lee, Marius Memmel, Sungjae Park, Ilija Radosavovic, Kaiyuan Wang, Albert Zhan, Kevin Black, Cheng Chi, Kyle Beltran Hatch, Shan Lin, Jingpei Lu, Jean Mercat, Abdul Rehman, Pannag R Sanketi, Archit Sharma, Cody Simpson, Quan Vuong, Homer Rich Walke, Blake Wulfe, Ted Xiao, Jonathan Heewon Yang, Arefeh Yavary, Tony Z. Zhao, Christopher Agia, Rohan Baijal, Mateo Guaman Castro, Daphne Chen, Qiuyu Chen, Trinity Chung, Jaimyn Drake, Ethan Paul Foster, Jensen Gao, David Antonio Herrera, Minho Heo, Kyle Hsu, Jiaheng Hu, Donovon Jackson, Charlotte Le, Yunshuang Li, Kevin Lin, Roy Lin, Zehan Ma, Abhiram Maddukuri, Suvir Mirchandani, Daniel Morton, Tony Nguyen, Abigail O\u2019Neill, Rosario Scalise, Derick Seale, Victor Son, Stephen Tian, Emi Tran, Andrew E. Wang, Yilin Wu, Annie Xie, Jingyun Yang, Patrick Yin, Yunchu Zhang, Osbert Bastani, Glen Berseth, Jeannette Bohg, Ken Goldberg, Abhinav Gupta, Abhishek Gupta, Dinesh Jayaraman, Joseph J Lim, Jitendra Malik, Roberto Mart\u00edn-Mart\u00edn, Subramanian Ramamoorthy, Dorsa Sadigh, Shuran Song, Jiajun Wu, Michael C. Yip, Yuke Zhu, Thomas Kollar, Sergey Levine, and Chelsea Finn. Droid: A large-scale in-the-wild robot manipulation dataset. 2024.   \n[7] Octo Model Team, Dibya Ghosh, Homer Walke, Karl Pertsch, Kevin Black, Oier Mees, Sudeep Dasari, Joey Hejna, Charles Xu, Jianlan Luo, Tobias Kreiman, You Liang Tan, Dorsa Sadigh, Chelsea Finn, and Sergey Levine. Octo: An open-source generalist robot policy. https://octo-models.github.io, 2023.   \n[8] Abhishek Padalkar, Acorn Pooley, Ajinkya Jain, Alex Bewley, Alex Herzog, Alex Irpan, Alexander Khazatsky, Anant Rai, Anikait Singh, Anthony Brohan, et al. Open x-embodiment: Robotic learning datasets and rt-x models. arXiv preprint arXiv:2310.08864, 2023.   \n[9] Hongtao Wu, Ya Jing, Chilam Cheang, Guangzeng Chen, Jiafeng Xu, Xinghang Li, Minghuan Liu, Hang Li, and Tao Kong. Unleashing large-scale video generative pre-training for visual robot manipulation. arXiv preprint arXiv:2312.13139, 2023.   \n[10] Haoran He, Chenjia Bai, Ling Pan, Weinan Zhang, Bin Zhao, and Xuelong Li. Large-scale actionless video pre-training via discrete diffusion for efficient policy learning. arXiv preprint arXiv:2402.14407, 2024.   \n[11] Suraj Nair, Aravind Rajeswaran, Vikash Kumar, Chelsea Finn, and Abhinav Gupta. R3m: A universal visual representation for robot manipulation. arXiv preprint arXiv:2203.12601, 2022.   \n[12] Anthony Hu, Lloyd Russell, Hudson Yeo, Zak Murez, George Fedoseev, Alex Kendall, Jamie Shotton, and Gianluca Corrado. Gaia-1: A generative world model for autonomous driving. arXiv preprint arXiv:2309.17080, 2023.   \n[13] Kristen Grauman, Andrew Westbury, Eugene Byrne, Zachary Chavis, Antonino Furnari, Rohit Girdhar, Jackson Hamburger, Hao Jiang, Miao Liu, Xingyu Liu, et al. Ego4d: Around the world in 3,000 hours of egocentric video. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 18995\u201319012, 2022.   \n[14] Oier Mees, Lukas Hermann, Erick Rosete-Beas, and Wolfram Burgard. Calvin: A benchmark for languageconditioned policy learning for long-horizon robot manipulation tasks. IEEE Robotics and Automation Letters, 7(3):7327\u20137334, 2022.   \n[15] Abhishek Gupta, Vikash Kumar, Corey Lynch, Sergey Levine, and Karol Hausman. Relay policy learning: Solving long-horizon tasks via imitation and reinforcement learning. arXiv preprint arXiv:1910.11956, 2019.   \n[16] Tianhe Yu, Deirdre Quillen, Zhanpeng He, Ryan Julian, Karol Hausman, Chelsea Finn, and Sergey Levine. Meta-world: A benchmark and evaluation for multi-task and meta reinforcement learning. In Conference on robot learning, pages 1094\u20131100. PMLR, 2020.   \n[17] Philip M Groves and Richard F Thompson. Habituation: a dual-process theory. Psychological review, 77 (5):419, 1970.   \n[18] Jonathan St BT Evans. Dual process theory: Perspectives and problems. Dual process theory 2.0, pages 137\u2013155, 2017.   \n[19] Bertram Gawronski and Laura A Creighton. Dual process theories 14. The Oxford handbook of social cognition, page 282, 2013.   \n[20] Keith E Stanovich. Who is rational?: Studies of individual differences in reasoning. Psychology Press, 1999.   \n[21] Zangwei Zheng, Xiangyu Peng, and Yang You. Open-sora: Democratizing efficient video production for all, March 2024. URL https://github.com/hpcaitech/Open-Sora.   \n[22] Jean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana Hasson, Karel Lenc, Arthur Mensch, Katherine Millican, Malcolm Reynolds, et al. Flamingo: a visual language model for few-shot learning. Advances in neural information processing systems, 35:23716\u201323736, 2022.   \n[23] Stephen James, Zicong Ma, David Rovick Arrojo, and Andrew J Davison. Rlbench: The robot learning benchmark & learning environment. IEEE Robotics and Automation Letters, 5(2):3019\u20133026, 2020.   \n[24] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877\u20131901, 2020.   \n[25] Danny Driess, Fei Xia, Mehdi SM Sajjadi, Corey Lynch, Aakanksha Chowdhery, Brian Ichter, Ayzaan Wahid, Jonathan Tompson, Quan Vuong, Tianhe Yu, et al. Palm-e: An embodied multimodal language model. arXiv preprint arXiv:2303.03378, 2023.   \n[26] Xinghang Li, Minghuan Liu, Hanbo Zhang, Cunjun Yu, Jie Xu, Hongtao Wu, Chilam Cheang, Ya Jing, Weinan Zhang, Huaping Liu, et al. Vision-language foundation models as effective robot imitators. arXiv preprint arXiv:2311.01378, 2023.   \n[27] Yilun Du, Sherry Yang, Bo Dai, Hanjun Dai, Ofir Nachum, Josh Tenenbaum, Dale Schuurmans, and Pieter Abbeel. Learning universal policies via text-guided video generation. Advances in Neural Information Processing Systems, 36, 2024.   \n[28] Eric Jang, Alex Irpan, Mohi Khansari, Daniel Kappler, Frederik Ebert, Corey Lynch, Sergey Levine, and Chelsea Finn. Bc-z: Zero-shot task generalization with robotic imitation learning. In Conference on Robot Learning, pages 991\u20131002. PMLR, 2022.   \n[29] Yunfan Jiang, Agrim Gupta, Zichen Zhang, Guanzhi Wang, Yongqiang Dou, Yanjun Chen, Li Fei-Fei, Anima Anandkumar, Yuke Zhu, and Linxi Fan. Vima: General robot manipulation with multimodal prompts. In Fortieth International Conference on Machine Learning, 2023.   \n[30] Zhijian Huang, Tao Tang, Shaoxiang Chen, Sihao Lin, Zequn Jie, Lin Ma, Guangrun Wang, and Xiaodan Liang. Making large language models better planners with reasoning-decision alignment. arXiv preprint arXiv:2408.13890, 2024.   \n[31] Corey Lynch and Pierre Sermanet. Language conditioned imitation learning over unstructured data. arXiv preprint arXiv:2005.07648, 2020.   \n[32] Oier Mees, Lukas Hermann, and Wolfram Burgard. What matters in language conditioned robotic imitation learning over unstructured data. IEEE Robotics and Automation Letters, 7(4):11205\u201311212, 2022.   \n[33] Kevin Black, Mitsuhiko Nakamoto, Pranav Atreya, Homer Walke, Chelsea Finn, Aviral Kumar, and Sergey Levine. Zero-shot robotic manipulation with pretrained image-editing diffusion models. arXiv preprint arXiv:2310.10639, 2023.   \n[34] Yanjie Ze, Gu Zhang, Kangning Zhang, Chenyuan Hu, Muhan Wang, and Huazhe Xu. 3d diffusion policy: Generalizable visuomotor policy learning via simple 3d representations. In ICRA 2024 Workshop on 3D Visual Representations for Robot Manipulation, 2024.   \n[35] Tsung-Wei Ke, Nikolaos Gkanatsios, and Katerina Fragkiadaki. 3d diffuser actor: Policy diffusion with 3d scene representations. arXiv preprint arXiv:2402.10885, 2024.   \n[36] Wenlong Huang, Chen Wang, Yunzhu Li, Ruohan Zhang, and Li Fei-Fei. Rekep: Spatio-temporal reasoning of relational keypoint constraints for robotic manipulation. arXiv preprint arXiv:2409.01652, 2024.   \n[37] Wenlong Huang, Chen Wang, Ruohan Zhang, Yunzhu Li, Jiajun Wu, and Li Fei-Fei. Voxposer: Composable 3d value maps for robotic manipulation with language models. arXiv preprint arXiv:2307.05973, 2023.   \n[38] Hao-Shu Fang, Chenxi Wang, Minghao Gou, and Cewu Lu. Graspnet-1billion: A large-scale benchmark for general object grasping. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 11444\u201311453, 2020.   \n[39] Yang Cao, Yihan Zeng, Hang Xu, and Dan Xu. Coda: Collaborative novel box discovery and cross-modal alignment for open-vocabulary 3d object detection. In NeurIPS, 2023.   \n[40] Yang Cao, Yihan Zeng, Hang Xu, and Dan Xu. Collaborative novel object discovery and box-guided cross-modal alignment for open-vocabulary 3d object detection. arXiv preprint arXiv:2406.00830, 2024.   \n[41] Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C Berg, Wan-Yen Lo, et al. Segment anything. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4015\u20134026, 2023.   \n[42] Shilong Liu, Zhaoyang Zeng, Tianhe Ren, Feng Li, Hao Zhang, Jie Yang, Chunyuan Li, Jianwei Yang, Hang Su, Jun Zhu, et al. Grounding dino: Marrying dino with grounded pre-training for open-set object detection. arXiv preprint arXiv:2303.05499, 2023.   \n[43] Lewei Yao, Jianhua Han, Youpeng Wen, Xiaodan Liang, Dan Xu, Wei Zhang, Zhenguo Li, Chunjing Xu, and Hang Xu. Detclip: Dictionary-enriched visual-concept paralleled pre-training for open-world detection. Advances in Neural Information Processing Systems, 35:9125\u20139138, 2022.   \n[44] Corey Lynch, Ayzaan Wahid, Jonathan Tompson, Tianli Ding, James Betker, Robert Baruch, Travis Armstrong, and Pete Florence. Interactive language: Talking to robots in real time. IEEE Robotics and Automation Letters, 2023.   \n[45] Anthony Brohan, Noah Brown, Justice Carbajal, Yevgen Chebotar, Xi Chen, Krzysztof Choromanski, Tianli Ding, Danny Driess, Avinava Dubey, Chelsea Finn, et al. Rt-2: Vision-language-action models transfer web knowledge to robotic control. arXiv preprint arXiv:2307.15818, 2023.   \n[46] Konstantinos Bousmalis, Giulia Vezzani, Dushyant Rao, Coline Devin, Alex X Lee, Maria Bauza, Todor Davchev, Yuxiang Zhou, Agrim Gupta, Akhil Raju, et al. Robocat: A self-improving foundation agent for robotic manipulation. arXiv preprint arXiv:2306.11706, 2023.   \n[47] Anthony Brohan, Noah Brown, Justice Carbajal, Yevgen Chebotar, Joseph Dabis, Chelsea Finn, Keerthana Gopalakrishnan, Karol Hausman, Alex Herzog, Jasmine Hsu, et al. Rt-1: Robotics transformer for real-world control at scale. arXiv preprint arXiv:2212.06817, 2022.   \n[48] Vikash Kumar, Rutav Shah, Gaoyue Zhou, Vincent Moens, Vittorio Caggiano, Abhishek Gupta, and Aravind Rajeswaran. Robohive: A unified framework for robot learning. Advances in Neural Information Processing Systems, 36, 2024.   \n[49] Andreas Blattmann, Tim Dockhorn, Sumith Kulal, Daniel Mendelevitch, Maciej Kilian, Dominik Lorenz, Yam Levi, Zion English, Vikram Voleti, Adam Letts, et al. Stable video diffusion: Scaling latent video diffusion models to large datasets. arXiv preprint arXiv:2311.15127, 2023.   \n[50] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. Journal of Machine Learning Research, 21(140):1\u201367, 2020. URL http://jmlr.org/papers/v21/ 20-074.html.   \n[51] Cheng Chi, Siyuan Feng, Yilun Du, Zhenjia Xu, Eric Cousineau, Benjamin Burchfiel, and Shuran Song. Diffusion policy: Visuomotor policy learning via action diffusion. arXiv preprint arXiv:2303.04137, 2023.   \n[52] Tsai-Shien Chen, Aliaksandr Siarohin, Willi Menapace, Ekaterina Deyneka, Hsiang-wei Chao, Byung Eun Jeon, Yuwei Fang, Hsin-Ying Lee, Jian Ren, Ming-Hsuan Yang, and Sergey Tulyakov. Panda-70m: Captioning 70m videos with multiple cross-modality teachers. arXiv preprint arXiv:2402.19479, 2024.   \n[53] Alexandros Stergiou and Ronald Poppe. Adapool: Exponential adaptive pooling for information-retaining downsampling. 2021.   \n[54] Wenjing Wang, Huan Yang, Zixi Tuo, Huiguo He, Junchen Zhu, Jianlong Fu, and Jiaying Liu. Videofactory: Swap attention in spatiotemporal diffusions for text-to-video generation. arXiv preprint arXiv:2305.10874, 2023.   \n[55] Erwin Coumans and Yunfei Bai. Pybullet, a python module for physics simulation for games, robotics and machine learning, 2016.   \n[56] Homer Walke, Kevin Black, Abraham Lee, Moo Jin Kim, Max Du, Chongyi Zheng, Tony Zhao, Philippe Hansen-Estruch, Quan Vuong, Andre He, Vivek Myers, Kuan Fang, Chelsea Finn, and Sergey Levine. Bridgedata v2: A dataset for robot learning at scale. In Conference on Robot Learning (CoRL), 2023.   \n[57] Erick Rosete-Beas, Oier Mees, Gabriel Kalweit, Joschka Boedecker, and Wolfram Burgard. Latent plans for task agnostic offline reinforcement learning. 2022.   \n[58] Jianlan Luo, Charles Xu, Xinyang Geng, Gilbert Feng, Kuan Fang, Liam Tan, Stefan Schaal, and Sergey Levine. Multi-stage cable routing through hierarchical imitation learning. arXiv pre-print, 2023. URL https://arxiv.org/abs/2307.08927.   \n[59] Lawrence Yunliang Chen, Simeon Adebola, and Ken Goldberg. Berkeley UR5 demonstration dataset. https://sites.google.com/view/berkeley-ur5/home.   \n[60] Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Doll\u00e1r, and Ross Girshick. Masked autoencoders are scalable vision learners. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 16000\u201316009, 2022.   \n[61] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023.   \n[62] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748\u20138763. PMLR, 2021.   \n[63] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. arXiv preprint arXiv:1711.05101, 2017.   \n[64] Xiaohua Zhai, Alexander Kolesnikov, Neil Houlsby, and Lucas Beyer. Scaling vision transformers. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 12104\u201312113, 2022.   \n[65] Mohit Shridhar, Lucas Manuelli, and Dieter Fox. Perceiver-actor: A multi-task transformer for robotic manipulation. In Conference on Robot Learning, pages 785\u2013799. PMLR, 2023.   \n[66] Ankit Goyal, Jie Xu, Yijie Guo, Valts Blukis, Yu-Wei Chao, and Dieter Fox. Rvt: Robotic view transformer for 3d object manipulation. In Conference on Robot Learning, pages 694\u2013710. PMLR, 2023.   \n[67] Theophile Gervet, Zhou Xian, Nikolaos Gkanatsios, and Katerina Fragkiadaki. Act3d: 3d feature field transformers for multi-task robotic manipulation. In 7th Annual Conference on Robot Learning, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "The outline of the Appendix is as follows: ", "page_idx": 13}, {"type": "text", "text": "\u2022 Negative impacts and limitations.   \n\u2022 Details of the network and training process.   \n\u2022 Description and usage guide for OXE.   \n\u2022 Additional experimental results.   \n\u2022 Visualizations of video prediction and action prediction. ", "page_idx": 13}, {"type": "text", "text": "A.1 Negative Impacts and Limitations ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Potential Negative Social Impact. Our method has no ethical risk on dataset usage and privacy violation since all the benchmarks are publicly available and transparent. ", "page_idx": 13}, {"type": "text", "text": "Limitations and Future Works. Our current model operates solely on 2D vision and does not possess 3D perception capabilities. This limitation affects its performance on tasks that demand accurate 3D spatial understanding. Our future work will prioritize the integration of 3D perception into the model. Our model\u2019s capacity to comprehend complex human instructions is limited. It currently lacks the sophistication of a CLIP\u2019s language encoder. We are considering state-of-the-art Large Language Models (LLMs), such as LLama [61], as a promising avenue for future exploration to enhance these capabilities. The model\u2019s perception is not fine-grained. It processes the entire image as a single input for action prediction. We believe that incorporating fine-grained auxiliary inputs, such as object-bounding boxes or masks, could significantly enhance the model\u2019s performance. We are exploring ways to integrate such detailed inputs to refine the model\u2019s perceptual abilities. ", "page_idx": 13}, {"type": "text", "text": "A.2 Network and Training Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Model details. For the video autoencoder, we utilized Stabilityai\u2019s VideoAutoencoderKL [49] to encode the video into embeddings. For the text encoder, we employed CLIP\u2019s text encoder [62]. For the diffusion model, we used STDiT-XL/2 [21]. ", "page_idx": 13}, {"type": "text", "text": "Training details. The video diffusion transformer of VidMan contains 12 layers (we reduced the original number of layers in Open-Sora to 12) and 16 heads with a hidden size of 1152. While training on OXE for video prediction in stage 1, we used 16 Nvidia V100 32GB GPUs, with a batch size of 24 per GPU resulting in a total batch size of 384. This stage will cost 42 hours. While training on OXE in stage 2, we used 16 Nvidia V100 32GB GPUs, with a batch size of 18 per GPU. We employed gradient accumulation, updating the parameters every 5 steps, resulting in a total batch size of 1440. This process took 32 hours. While training on CALVIN in stage 2, we used 8 Nvidia V100 32GB GPUs with a total batch size of 400. We use the AdamW [63] optimizer with an inverse square root decay learning rate schedule [64], with weight decay of 0.1. Training hyperparameters are shown in Tab. 4 ", "page_idx": 13}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/07e49ff31c134c8d444403f2cc889178ae40c74d18c6e8debd0b4b95f7893e04.jpg", "table_caption": ["Table 4: Training Hyperparameters "], "table_footnote": [], "page_idx": 13}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/872940d24eb37826c594dd1444c73436fe467b069c63d47e9397003aa2cad083.jpg", "img_caption": ["Figure 5: Our model utilizes a layer-wise adapter, which includes a self-attention layer and a feedforward network (FFN). This block uses a gating mechanism to distill the information extracted by the Open-Sora block into the action query. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Layer-wise adapter. As shown in Fig. 5, following [22], our model employs a layer-wise self attention block, which comprises a self-attention layer and a feed-forward network (FFN). This block incorporates a gating mechanism to refine the information extracted by the VDT block into the action query. ", "page_idx": 14}, {"type": "text", "text": "A.3 More Details of Open X-Embodiment Datasets ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We trained VidMan using a curated selection from the Open X-Embodiment Dataset [8], which is a rich repository of robot learning datasets. Our training data encompasses a variety of robot forms, environments, and tasks, reflecting a broad spectrum of robot types, sensor configurations, and labeling styles, including the presence or absence of language instructions. ", "page_idx": 14}, {"type": "text", "text": "Inspired by the approach taken in Octo [7], we began by filtering out datasets that did not include image streams or those that did not utilize delta end-effector control. From the remaining datasets, we carefully selected those with the highest diversity and task relevance, omitting any that were too repetitive, had low-resolution images, or were too specialized. ", "page_idx": 14}, {"type": "text", "text": "We then divided the chosen datasets into two groups: \u201cmore diverse\" and \u201cless diverse\", based on the variety of tasks and environments they represented. To ensure a balanced training, we assigned a higher weight to the \u201cmore diverse\" datasets. Additionally, we adjusted the weight of some large datasets that had an abundance of data points to maintain a balanced mix. ", "page_idx": 14}, {"type": "text", "text": "To streamline the training process, we fliled in any gaps in the camera channels with zero-padding and standardized the gripper action spaces across all datasets. This standardization meant that a gripper command of $+1$ consistently signified \u201cthe gripper is open\", and 0 signified \u201cthe gripper is closed\". ", "page_idx": 14}, {"type": "text", "text": "A.4 Additional Experimental Results ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Why use pure noise in stage 2. In the second stage, a key issue is how to utilize the video prediction model pre-trained in the first stage for action prediction. We replaced the noisy images from the first stage with zero embeddings, pure noise, and images without noise, and then concatenated them with historical frames along the channel dimension as input to the VDT. All experiments were trained and tested for offilne validation on the Bridge dataset. These experiments used a small batch size of 192 and were trained for $100\\mathbf{k}$ iterations with VDT block frozen. The results are shown in Tab. 5. We found that using pure noise during training allows the model to achieve a certain level of performance during evaluation. One possible reason is that using pure noise aligns with the denoising process, effectively distilling the pre-trained model\u2019s future perception capabilities into action prediction. ", "page_idx": 14}, {"type": "text", "text": "Table 5: $V_{c}^{k}$ type in stage 2. Concatenating historical frames with noise in the channel dimension is an effective way. ", "page_idx": 15}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/ac793d79b9b28acbb756fdd5c5dcd0d5bb2d39911f243fed1789f94030123a95.jpg", "table_caption": [], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/52b95545989709aa11cc883aeae3d25e26e2b1bde29c6e505abb0dee202091d4.jpg", "table_caption": ["Table 6: Effect of historical frames v.s. future frames. The length of historical frames is more important than the length of future frames. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "Effect of historical frames v.s. future frames. To explore whether the length of historical frames or future frames has a greater impact on action prediction performance, we conducted analytical experiments with varying lengths of historical and future frames. We experimented with different settings: 1) history frame $\\scriptstyle{\\ n=1}$ , future frame $\\mathrm{m}{=}1$ ; 2) $\\scriptstyle{\\mathtt{n}=2}$ , $\\mathrm{m}{=}1$ ; $\\scriptstyle{\\mathtt{n}=2}$ , $\\scriptstyle{\\mathrm{m}}=2$ . We kept the length of historical and future frames consistent across both the first and second training stages. The frame interval was set to 3. Results are shown in Tab. 6. Comparing row 1 and row 2, if the length of historical frames is shortened, there will be a significant decrease in performance on both Bridge and CALVIN. Comparing row 2 and row 3, shortening the length of future frames also leads to a decrease in performance, but not as significant as with the historical frames. ", "page_idx": 15}, {"type": "text", "text": "Detailed numerical metrics on OXE data. The numerical metrics in Fig. 3 are displayed in Tab. 7. ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Results on RLBench. We also conducted experiments on RLBench [23]. We used 18 tasks from RLBench for multi-task robot learning evaluation. Each task includes 2-60 variations. For example, in the stack blocks task, \u201cstack 2 red blocks\" and \u201cstack 4 purple blocks\" are considered as two variants. During testing, our model has to handle novel object poses, randomly sampled goals, and randomly sampled scenes with different semantic instantiations of object colors, shapes, sizes, and categories. Each multi-task agent is evaluated independently on all of the tasks. Evaluations are scored either 0 for failures or 100 for complete successes. We report average success rates on 25 evaluation episodes per task for agents trained with 100 demonstrations. On the RLBench benchmark, we compared our method with 3 methods: PerAct [65], RVT [66], Act3D [67]. To align with methods like RVT, we also reported the variance of 5 seeds in the evaluation on RLBench. ", "page_idx": 15}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/7750b177f22690d4135da11badbc1ea7904be628e8f7c345e958ec2fe98f88f9.jpg", "table_caption": ["Table 7: Detailed numerical metrics on OXE data. All models were trained on OXE and validated on offilne performance across four datasets. VidMan outperformed Octo-base [7] by $5.6\\%$ on Bridge, $2.6\\%$ on Taco Play, $9.9\\%$ on Cable Routing, and $9.0\\%$ on Autolab UR5. Additionally, Our method also shows improvements over the VidMan-GPT approach. "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "YbhHz0X2j5/tmp/44f03900ccad6f6d4743f84dcea69bd61e16b369051dfb86ac815d610a4b1822.jpg", "table_caption": ["Table 8: Multi-Task Performance on RLBench-100. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "A.5 Visualization ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Visualization of our video prediction. We investigate the video prediction performance of VidMan trained on OXE in stage 1. Qualitative results are shown in Fig. 6. It can be observed that VidMan correctly predicts future frames, although some details (such as occluded objects) are missing. This predictive capability in the second stage can strongly guide action prediction as potential future forecasts. ", "page_idx": 16}, {"type": "text", "text": "Visualization of our offilne action prediction. As shown in Fig. 7, we visualized VidMan\u2019s results on OXE offilne evaluation. It can be observed that our model effectively ftis the ground truth actions across various scenarios, potentially demonstrating its applicability to real robot tasks. ", "page_idx": 16}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/e2ddbb7c35b1521ea2a82167043328f03887438b9583e9d3c8cf86bc287e5b73.jpg", "img_caption": ["\u201cput cup from anywhere into sink\u201d "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/eb79f6cc83b38cd67ecc3725f12d43ce25bbd80dbe3eec9d87184d446e45df2a.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "\u201cmove the silver pot to the top right of the stove\u201d ", "text_level": 1, "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/77447ea806018b2d31e7c86cf841c5d735fe24a52385cdb2efbbae6ca5dfd6d4.jpg", "img_caption": ["\u201cClose the draw\u201d "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/b182cd14e2fba3a8063eafd774619666db645443f0d458f4c0bd3aa254e9c64e.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "\u201cremove the cube from the tower and put it in the middle of the table\u201d ", "text_level": 1, "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/ddbb5b5177edc16c81aa217a94ab5a120e9a5500fa5a7271fd1807d15136e41c.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "\u201cfolding from left bottom to the right side\u201d ", "text_level": 1, "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/4100919559adbe9e56b4bc7927ebbf56b8486980b19448ae87d94fb07662c088.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "\u201cflip pot upright in sink\u201d ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Figure 6: Video prediction results on OXE. The images in yellow boxes are ground-truth images;   \nthe images in blue boxes are predicted images. The language instruction is placed below the image. ", "page_idx": 17}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/46d48eebe98e7934cfc42ba776e8d032592b42822e35ca763f54735b61288c8f.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/4545a53392f5cd7fd1dc5383b4eea9e55409e51038c11881bcd07e53fe656f12.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u201cFlip orange pot upright in sink\u201d ", "page_idx": 18}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/00562014231d4731dcaa4adf4caf1412ff95c5679ed1a6e2983906a51d348bf1.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u201cmove the knife from right side to left side\u201d ", "page_idx": 18}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/52fcf96ce4e8496b54270db935c2945f1db148860980fe83293c8cde17ffe4f1.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u201cmove the pot on left upper side of the orange cloth\u201d ", "page_idx": 18}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/03fd6a7e1a7a5cc36ce7a85c871253acabf636c6bb87382d6a44653addb366da.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u201cpick up violet Allen key\u201d ", "page_idx": 18}, {"type": "image", "img_path": "YbhHz0X2j5/tmp/44e7c9adcc0113a6b8085774671fda1700b0bb02101ed11196fe6c8c691c1765.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u201cput spatula on plate sink\u201d ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Figure 7: Offilne action prediction results on OXE. The upper part of each group of images shows subsampled frames from an episode, while the lower part displays the true and predicted 7D pose results, including x, y, yaw, pitch, roll, and grasp over time. ", "page_idx": 18}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We believe that the main claims reflect the areas we are targeting: robot manipulation and imitation learning. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 19}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: See the Appendix. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 19}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: We do not have theoretical results. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 20}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: See Section 5 and Appendix. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 20}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We already include the data and instructions in Section 5 and Appendix and the code will be released upon acceptance. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 21}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: See Section 5 for more details. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 21}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [No] ", "page_idx": 21}, {"type": "text", "text": "Justification: Our experiments are quite stable with multiple runs. All results are observed via a fixed seed. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: See Appendix for more details. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 22}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: The research is conducted with the NeurIPS code of Ethics in every respect. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 22}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: See Appendix. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 23}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: We have cited the creators of all existing assets. All the used existing assets are open-source. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 23}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 24}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 24}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 24}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 24}]