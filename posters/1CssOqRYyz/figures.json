[{"figure_path": "1CssOqRYyz/figures/figures_1_1.jpg", "caption": "Figure 1: Diff-PCC pipeline. Xt and Xt represents the tth original point cloud and noisy point cloud, respectively; p refers to the forward process and q refers to the reverse process; N(0, I) means the pure noise. Entropy model and arithmetic coding is omitted for a concise explanation.", "description": "This figure illustrates the Diff-PCC pipeline, a diffusion-based point cloud compression method. It shows two main processes: the forward process (p), where noise is added to the original point cloud (Xt) resulting in a noisy point cloud (Xt), and the reverse process (q), where a diffusion model is used to denoise the noisy point cloud and reconstruct the original point cloud.  The compressor extracts latents from the original point cloud, which are then used by the generator to guide the denoising process. The entropy model and arithmetic coding are omitted for simplicity.", "section": "3 Method"}, {"figure_path": "1CssOqRYyz/figures/figures_3_1.jpg", "caption": "Figure 1: Diff-PCC pipeline. Xt and Xt represents the tth original point cloud and noisy point cloud, respectively; p refers to the forward process and q refers to the reverse process; N(0, I) means the pure noise. Entropy model and arithmetic coding is omitted for a concise explanation.", "description": "This figure illustrates the pipeline of the proposed Diff-PCC method. It shows the forward diffusion process (encoding) where the original point cloud (Xt) is gradually corrupted by adding noise until it becomes pure noise (N(0,I)). The compressor extracts the shape latents from the noisy point cloud. The reverse process (decoding) uses the shape latents as guidance to stochastically denoise the noisy point clouds and reconstruct the original point cloud (X0).  The entropy model and arithmetic coding components are omitted for simplicity.", "section": "3 Method"}, {"figure_path": "1CssOqRYyz/figures/figures_6_1.jpg", "caption": "Figure 3: Rate-distortion curves for performance comparison. From left to right: ShapeNet, Model-Net10, and ModelNet40 dataset.", "description": "This figure presents a comparison of the rate-distortion performance of Diff-PCC against other state-of-the-art methods (G-PCCv23, PTU-PCC, and IPDAE) across three different datasets: ShapeNet, ModelNet10, and ModelNet40.  The x-axis represents bits per point (bpp), indicating the compression ratio. The y-axis represents the distortion metric, D1-PSNR (dB), which measures the quality of the reconstructed point cloud.  Each line represents a different compression method, allowing for a direct visual comparison of their performance in terms of achieving a balance between compression and reconstruction quality. The results clearly show Diff-PCC outperforming the other methods across all three datasets.", "section": "4 Experiments"}, {"figure_path": "1CssOqRYyz/figures/figures_7_1.jpg", "caption": "Figure 1: Diff-PCC pipeline. Xt and Xt represents the tth original point cloud and noisy point cloud, respectively; p refers to the forward process and q refers to the reverse process; N(0, I) means the pure noise. Entropy model and arithmetic coding is omitted for a concise explanation.", "description": "This figure illustrates the pipeline of the Diff-PCC method.  It shows the forward diffusion process (adding noise to the original point cloud) and the reverse diffusion process (denoising the noisy point cloud to reconstruct the original). The compressor encodes the point cloud into a latent representation, which is then used by the generator to guide the denoising process.  The entropy model and arithmetic coding are not shown for simplicity.", "section": "3 Method"}]