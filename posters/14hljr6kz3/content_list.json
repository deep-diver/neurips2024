[{"type": "text", "text": "Enhancing Domain Adaptation through Prompt Gradient Alignment ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Hoang Phan\u2217 Lam Tran\u2217 Quyen Tran\u2217 New York University VinAI Research VinAI Research hvp2011@nyu.edu lamtt12@vinai.io quyentt15@vinai.io ", "page_idx": 0}, {"type": "text", "text": "Trung Le Monash University trunglm@monash.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Prior Unsupervised Domain Adaptation (UDA) methods often aim to train a domain-invariant feature extractor, which may hinder the model from learning sufficiently discriminative features. To tackle this, a line of works based on prompt learning leverages the power of large-scale pre-trained vision-language models to learn both domain-invariant and specific features through a set of domain-agnostic and domain-specific learnable prompts. Those studies typically enforce invariant constraints on representation, output, or prompt space to learn such prompts. Differently, we cast UDA as a multiple-objective optimization problem in which each objective is represented by a domain loss. Under this new framework, we propose aligning per-objective gradients to foster consensus between them. Additionally, to prevent potential overfitting when fine-tuning this deep learning architecture, we penalize the norm of these gradients. To achieve these goals, we devise a practical gradient update procedure that can work under both single-source and multi-source UDA. Empirically, our method consistently surpasses other vision language model adaptation methods by a large margin on a wide range of benchmarks. The implementation is available at https://github.com/VietHoang1512/PGA. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Deep learning has significantly advanced the field of computer vision, achieving remarkable performance in tasks such as image classification [1\u20135], object detection [6\u20139], and semantic segmentation [10\u201313]. However, the effectiveness of these deep learning models heavily relies on large amounts of labeled training data, which is often labor-intensive and expensive to collect. Moreover, the discrepancy between training data and real-world testing data can lead to substantial performance drops when models are deployed in practical settings [14\u201316]. ", "page_idx": 0}, {"type": "text", "text": "To address these challenges, Unsupervised Domain Adaptation (UDA) has emerged as a pivotal solution. UDA aims to transfer knowledge from a labeled source domain to an unlabeled target domain in the presence of a domain shift, thereby enabling models to generalize well across different domains without requiring extensive labeled data for the target domain. This is often achieved by optimizing objective function on source domains and other auxiliary terms that encourage learning domaininvariant feature representations [17\u201320] or enhance model robustness [21\u201324], which mitigates the domain shift and improve the performance on unseen data. Nevertheless, aligning representations could potentially hurt the model performance due to the loss of discriminative features [25, 26]. ", "page_idx": 0}, {"type": "text", "text": "Conceptually, our proposed method is orthogonal to these invariant feature learning methods, and they could complement each other. ", "page_idx": 1}, {"type": "text", "text": "Recent works leveraging pre-trained models like CLIP [27] for UDA can significantly bridge domain gaps and improve generalization by utilizing rich semantic information and robust visual representations through extensive pre-training on diverse image-text datasets. Following this vein, DAPL [25] first introduces domain-specific and domain-agnostic prompts to efficiently adapt pre-trained vision-language models without fine-tuning the entire model. Furthermore, MPA [28] aligns multiple prompts from different sources using an auto-encoder. While these methods could obtain superior performance on different benchmarks, we find that the main improvement comes from the strong zero-shot performance and self-training mechanism. In particular, prior works often generate pseudolabel for unlabeled images and then train the model on those samples. Consequently, finetuning a pretrained CLIP model on this dataset alone without leveraging source datasets can help refine model prediction significantly, boosting the performance from $88.1\\%$ to $90.1\\%$ , yielding a competitive result compared against MPA, as presented in Table 1. ", "page_idx": 1}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/9887383c78aa7f229dad0892698307b6ff66e6d69cb18cfe9873cacca5eea579.jpg", "table_caption": [], "table_footnote": [], "page_idx": 1}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/e5bbc6612fa74397f61e059470a138dd1098bcfd559f4d60b451c5eddafbec13.jpg", "img_caption": ["Table 1: Self-training on pseudo-labeled target data Number of trainable parameters is already a strong baseline. Figure 1: Baselines performance on Office-Home "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Motivated by this observation, we directly optimize the main objective function not only on source domains but also on the target data, instead of only using them for auxiliary objectives as in previous work [29, 30]. We thus cast the original UDA problem as a multi-objective optimization (MOO) problem. Specifically, we minimize a vector-valued loss function, which includes the objectives of multiple source domains and the target domain. This formulation allows us to apply existing results from MOO literature for finding Pareto solutions, from which we can not optimize an objective without hurting another [31\u201333] or encourage positive inter-task transfer between objectives [34\u201337]. Note that in the context of UDA, we focus more on learning the target task, thus motivating us to apply prioritized MOO algorithms [38\u201340] or to incorporate predefined preferences [32, 41\u201343]. While those methods allow practitioners to focus more or less on the objectives at hand, they come with the cost of extensive hyperparameter tuning. Besides, recent works [44\u201346] argue that simple loss functions reweighting can match the performance of gradient-based MOO methods [35, 47]. Those findings suggest we focus more on the inherent conflict nature of per-objective gradients instead of attempting to remove the conflict between them [35, 34]. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we propose casting the problem of UDA as a multi-objective optimization by leveraging powerful pre-trained models. However, while obtaining impressive results on various downstream tasks, over-parameterization is still a crucial problem for transformer-based models [48, 49], which potentially causes overfitting [50\u201354] more severely than small-parameter architectures [55], especially in the multi-task learning context. For that reason, we propose to (i) fine-tune pre-trained model via prompt learning, which is known for being more robust [56\u201358] and especially more light-weight than full fine-tuning, (ii) and to leverage the gradient norm penalty to encourage model generalization [59, 24, 60, 61]. Furthermore, we introduce a gradient alignment algorithm to foster inherent consensus between per-objective gradients without modifying the gradient itself. Our proposed method, termed Prompt Gradient Alignment (PGA), and its variant for multi-source UDA, Multi-Prompt Gradient Alignment (MPGA), achieve state-of-the-art performance on different UDA benchmarks. As shown in Figure 1, PGA and MPGA outperform traditional UDA methods like MFSAN [62] and recent prompt-based UDA methods such as MPA [28] and DAMP [63] while requiring fewer trainable parameters. We also provide a generalization bound for UDA and show how theoretical insights motivate the design of our proposed method. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Unsupervised Domain Adaptation. A dominant approach to solving the UDA problem is to reduce the distribution shift between source and target domains. Following the foundational theory outlined in [64], one group of methods seeks to minimize the H-divergence between the marginal distributions of these domains [65\u201367]. Alternatively, other methods aim to align the moments of these distributions, as suggested in [68\u201370]. Additionally, adversarial learning has been employed to learn domain-invariant features. For instance, methods such as those in [19, 71] use a domain discriminator to differentiate between source and target samples, training a feature extractor to deceive this discriminator. However, as [25] highlights, these methods often struggle with a trade-off between domain alignment and classification performance, particularly in multi-source scenarios where only a single model is used. ", "page_idx": 2}, {"type": "text", "text": "Prompt learning-based domain adaptation is a novel approach introduced in [25], leverages the generalization capabilities of CLIP to learn both domain-agnostic and domain-specific prompts. This method effectively addresses the trade-off between domain alignment and classification performance by employing a contrastive loss. This loss aligns the representation of an image with the prompt corresponding to its ground truth class and domain, thereby encouraging the learning of domaininvariant features. Building on this foundation, MPA [28] advances the concept of multi-source UDA. It adapts the prompt learning strategy to each source-target domain pair. The prompts are aligned through a denoising auto-encoder using Euclidean distance. However, prompting is known as a brittle process where a small shift to the prompt can cause large variations in the model predictions [72\u201374]. Therefore, in this work, we propose to intervene in the training on the gradient space as it offers a more interpretable and controllable effect during training. Furthermore, PGA is trained in an end-to-end fashion, avoiding the sequential training for each source-target pair as in MPA. ", "page_idx": 2}, {"type": "text", "text": "Gradient-based multi-task learning. Due to the multi-objective nature of the multi-source domain adaptation problem, one can leverage recent methods from the multi-task learning literature [34, 35, 75] to derive an optimization procedure that benefits the learning across domains or put more weight on some specific domains via incorporating preference [32, 41, 42]. While those techniques are readily applicable in our context, we directly re-weight per-task gradients, similar to scalarization, instead of adopting multi-task learning methods for simplicity. Furthermore, our work is orthogonal to those gradient-based multi-task learning methods where we encourage the consensus among objects instead of directly manipulating their gradients to remove inherent conflicts among them. ", "page_idx": 2}, {"type": "text", "text": "Gradient matching is commonly used in continual learning [76\u201378] to measure conflict and transferability between tasks. A positive dot product between two tasks\u2019 gradients implies updating the models with one task can benefit the other. This principle is also applied in domain generalization [79, 80] to focus on invariant features. However, our approach aligns in the space of prompt gradient, a significantly smaller parameter set than the full model gradients used in previous works. Besides, to avoid the computation of costly second-order derivatives, [79] linearly approximate the inner product between gradients, which underperforms on datasets with a larger number of domains due to cumulative approximation error. Meanwhile, our method does not face this problem since we implicitly compute this term without using any approximation. More works sharing the same intuition of gradient alignment are provided in Appendix D. ", "page_idx": 2}, {"type": "text", "text": "3 Background ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Unsupervised Domain Adaptation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Given a set of $N\\geq1$ source domains $\\{D_{S,i}\\}_{i=1}^{N}$ each of which is a collection of data-label pairs of domain $i$ , i.e. $D_{S,i}=\\{\\pmb{x}_{j},y_{j}\\}_{j=1}^{N_{S,i}}$ , and one unlabelled target domain $D_{T}=\\{\\pmb{x}_{j}\\}_{j=1}^{N_{T}}$ , where $N_{S,i}$ and $N_{T}$ are respectively the number of data points in source domain $i$ and target domain $T$ , the goal is to learn a model that can perform well on the unlabelled target domain. In this paper, we focus on classification problems and denote $K$ as the number of categories. ", "page_idx": 2}, {"type": "text", "text": "3.2 Prompt Learning on CLIP-based models ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "CLIP [27] is a vision-language model that consists of an image encoder $f_{i}$ and a text encoder $f_{t}$ , which is trained to align the visual representation $f_{i}({\\pmb x})$ of an image $\\textbf{\\em x}$ with the textual representation $f_{t}(y)$ of the corresponding label. The textual representation is derived from a manually crafted prompt $\\pmb{p}_{k}$ in the form $^{\\prime}\\mathrm{A}$ photo of a $\\mathrm{[CLASS]}\\,k^{\\prime\\prime}$ , where $\\mathrm{[CLASS]}_{k}$ is the class $k$ \u2019s name. With great generalization capability, pre-trained CLIP models are often used for a variety of downstream tasks through prompt learning. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "For zero-shot inference, $K$ class names are forwarded through the text encoder, and the one with the highest representation similarity with the image is the predicted class: ", "page_idx": 3}, {"type": "equation", "text": "$$\ny_{\\mathrm{pred}}=\\mathrm{argmax}_{k}P(y=k|x),{\\mathrm{~where~}}P(y=k|x)={\\frac{\\exp(\\langle f_{i}(x),f_{t}(p_{k})\\rangle/\\gamma)}{\\sum_{k^{\\prime}=1}^{K}\\exp(\\langle f_{i}(x),f_{t}(p_{k^{\\prime}})\\rangle/\\gamma)}},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "and $\\langle.,.\\rangle$ measures the cosine similarity and $\\gamma$ is the temperature. ", "page_idx": 3}, {"type": "text", "text": "For fine-tuning, a set of learnable class-shared prompts are added to the class token to form $P_{k}=$ $[{\\bf v}_{1}|{\\bf v}_{2}|\\cdot\\cdot\\cdot|{\\bf v}_{\\bar{M}}][\\mathrm{CLASS}]_{k}$ , where $\\pmb{v}_{i}$ is a vector with the same size as the word embedding, and $M$ is the number of added prompts. These prompts are learnt by maximizing log-likelihood on downstream data, i.e. max $\\begin{array}{r}{\\sum_{i}\\log P(y=y_{i}|\\pmb{x}_{i},\\pmb{P})}\\end{array}$ . Note that in this predictive probability, we abuse symbol $_{P}$ to refer to the learnable tokens $\\pmb{v}_{i}$ , and when we drop the symbol as in 1, we refer to the zero-shot prediction using CLIP. As a result, additional information about the downstream task can be encoded in the prompts, and this design will enable knowledge transfer from pre-trained datasets. ", "page_idx": 3}, {"type": "text", "text": "4 Proposed method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this section, we describe our proposed prompt gradient alignment method. Motivated by the lightweight and effective nature of prompt learning in adapting pre-trained knowledge to downstream tasks, we cast UDA as a multi-objective optimization (MOO) problem, from which we propose aligning gradients of different objectives and minimizing their norms simultaneously. Additionally, we derive a UDA generalization bound to justify the intuition of our method. The full details of our proposed method in the generalized case where we have more than one source domain are provided in Appendix B. ", "page_idx": 3}, {"type": "text", "text": "4.1 Prompt design ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "A common assumption in domain adaptation literature is that each domain can be represented by domain-specific features and those that are shared with others. To reflect this, we employ two sets of prompts for each domain: domain-agnostic prompt (or shared prompt, interchangeably) $P_{s h}$ , and domain-specific prompts $P_{S,i}$ and $P_{T}$ . Here, $P_{S,i}$ refers to prompt used for source domain $i$ , and $P_{T}$ is that for target one. In particular, following DAPL, we use $K\\times M_{1}$ tokens to construct $\\boldsymbol{P}_{s h}=[\\boldsymbol{P}_{s h}^{k}]_{k=1}^{K}$ , where $P_{s h}^{k}=[\\pmb{v}_{1}^{k}|\\pmb{v}_{2}^{k}|\\cdot\\cdot\\cdot\\vert\\pmb{v}_{M_{1}}^{k}]$ is class-specific shared tokens. For source- and target-specific prompts, we use $M_{2}$ tokens: $\\boldsymbol{P}_{S,i}=[\\boldsymbol{u}_{1}^{S,i}|\\boldsymbol{u}_{2}^{S,i}|\\cdot\\cdot\\cdot|\\boldsymbol{u}_{M_{2}}^{S,i}]$ , $P_{T}=[\\pmb{u}_{1}^{T}|\\pmb{u}_{2}^{T}|\\cdot\\cdot\\cdot\\vert\\pmb{u}_{M_{2}}^{T}]$ And denote $P=[P_{s h},\\{P_{S,i}\\}_{i=1}^{N},P_{T}]$ as the whole prompts used in our method. Based on this, we use a prompt of the form $[P_{s h}^{k}][P_{S,i}][\\mathrm{CLASS}]_{k}$ to compute the predictive distribution of a source $i$ sample belonging to class $k$ , and similarly $[P_{s h}^{k}][P_{T}][\\mathrm{CLASS}]_{k}$ for a target sample. ", "page_idx": 3}, {"type": "text", "text": "4.2 Empirical risk minimization: a simple baseline ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "As we introduced, to learn those prompts, we consider the cross-entropy losses applied to source data and target data with pseudo labels as a set of objectives to optimize simultaneously: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\mathcal{L}_{t o t a l}(P):=\\lbrack[C_{S,i}(P)]_{i=1}^{N},C_{T}(P)\\rbrack=\\lbrack[C_{S,i}(P_{s h},P_{S,i})]_{i=1}^{N},C_{T}(P_{s h},P_{T})\\rbrack,}&{}&\\\\ {\\mathcal{L}_{S,i}(P_{s h},P_{S,i})=\\mathrm{CE}(P_{s h},P_{S,i};X_{S,i},Y_{S,i})=-\\frac{1}{N_{S,i}}\\sum_{j=1}^{N_{S,i}}\\log P(y=y_{j}|x_{j},P_{s h},P_{S,i}),}&{}&\\\\ {\\mathcal{L}_{T}(P_{s h},P_{T})=\\mathrm{CE}_{\\tau}(P_{s h},P_{T};X_{T},Y_{T})}&{}&\\\\ {=-\\frac{1}{N_{T}}\\sum_{j=1}^{N_{T}}\\lbrack[P(y=\\hat{y}_{j}|x_{j})\\geq\\tau)\\log P(y=\\hat{y}_{j}|x_{j},P_{s h},P_{T}),}&{}&\\\\ {\\hat{y}_{j}=\\arg\\underset{k\\geq1}{\\operatorname*{max}}P(y=k|x_{j}).}&{}&\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In summary, the total loss consists of $N+1$ objectives. The target objective is applied to target samples whose zero-shot predictions made by CLIP are larger than a threshold $\\tau$ . ", "page_idx": 4}, {"type": "text", "text": "Given these objectives, source- and target-specific prompts can be updated by minimizing source and target losses, respectively. Regarding domain-agnostic prompt, one can put a weighting term on the signal from source losses to compute the gradient. Formally, for $\\forall i=1\\rightarrow N$ , we have: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pmb{g}_{s h,i},\\pmb{g}_{S,i}=\\nabla_{P}\\mathcal{L}_{S,i}(\\pmb{P}_{s h},\\pmb{P}_{S,i}),\\quad\\pmb{g}_{s h,T},\\pmb{g}_{T}=\\nabla_{P}\\mathcal{L}_{T}(\\pmb{P}_{s h},\\pmb{P}_{T}),}\\\\ &{\\quad\\quad\\pmb{P}_{S,i}=\\pmb{P}_{S,i}-\\eta\\pmb{g}_{S,i},\\qquad\\qquad\\quad\\pmb{P}_{T}=\\pmb{P}_{T}-\\eta\\pmb{g}_{T},}\\\\ &{\\quad\\quad\\pmb{P}_{s h}=\\pmb{P}_{s h}-\\eta(\\pmb{g}_{s h,T}+\\lambda\\sum_{i}\\pmb{g}_{s h,i}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\eta$ is the learning rate, and $\\lambda$ is the weighting term to control how much emphasis we want to put on the target domain. Note that we treat gradient signals from source domains equally as we assume no prior preference knowledge about them. Nevertheless, one can measure the domain similarity between each source and target domain to devise a better way to reweight source domains\u2019 objectives. However, as will be shown in the experiments, taking the average is simple yet yields superior results, hence we will leave this for future work. ", "page_idx": 4}, {"type": "text", "text": "4.3 Prompt gradient alignment for UDA ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "For simplicity, we first consider the single-source UDA setting and will present the extension to the multi-source one later in Appendix B. One problem with the method above is we ignored the potential inherent gradient conflict between objectives when updating the shared prompt. To mitigate this, one can follow gradient-based methods, such as [35, 47] to manipulate the gradients so that confilct is reduced. However, it has been shown in [44\u201346] that comparable performance can be obtained without such complex manipulations, but with simple re-weighting the loss functions. Therefore, to encourage consensus between these gradients without modifying them, we propose aligning gradients between source and target domains during training. Specifically, we aim to maximize their cosine similarity, $\\langle\\pmb{g}_{s h,S},\\pmb{g}_{s h,T}\\rangle$ , If this goal is achieved, one can expect the shared prompt to capture useful features for classes regardless of domains. Indeed, $-\\pmb{g}_{s h,S}$ denotes the direction that moves the shared prompt towards low-loss region of source data, and similar for $-\\pmb{g}_{s h,T}$ . Hence, when they point to the same direction, i.e., $\\langle\\pmb{g}_{s h,S},\\pmb{g}_{s h,T}\\rangle>0$ , updating the shared prompt as in Eq. 6 can reduce loss of both domains, because the aggregated gradient $\\begin{array}{r}{\\pmb{g}_{s h}=\\lambda\\pmb{g}_{s h,S}+\\pmb{g}_{s h,T}}\\end{array}$ will create acute angles with both $\\mathbf{\\boldsymbol{g}}_{s h,S}$ and $\\pmb{g}_{s h,T}$ . As a result, the shared prompt can learn knowledge that benefits both domains, which is its ultimate goal. ", "page_idx": 4}, {"type": "text", "text": "However, there remain two important questions when implementing this gradient alignment constrain: (i) How to incorporate the cosine similarity maximization term as a regularization in the framework described in Sec. 4.2?; and (ii) How to reduce training time and space when explicitly maximizing it, as it involves the computation of Hessian matrix w.r.t the shared prompt? Our method will address these two concerns. ", "page_idx": 4}, {"type": "text", "text": "Consider the following loss applied on target data with $||.||$ denoting $l_{2}$ -norm of a vector: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{T}^{\\mathrm{align}}(\\boldsymbol{P}):=\\mathcal{L}_{T}(P_{s h}-\\rho\\frac{g_{s h,S}}{\\|\\boldsymbol{g}_{s h,S}\\|\\cdot\\|\\boldsymbol{g}_{s h,T}\\|},\\boldsymbol{P}_{T})}\\\\ &{\\quad\\quad\\quad\\approx\\mathcal{L}_{T}(P_{s h},\\boldsymbol{P}_{T})-\\rho\\frac{(\\boldsymbol{g}_{s h,S})^{\\mathbb{T}}\\cdot\\nabla_{\\boldsymbol{P}_{s h}}\\mathcal{L}_{T}(P_{s h},\\boldsymbol{P}_{T})}{\\|\\boldsymbol{g}_{s h,S}\\|\\cdot\\|\\boldsymbol{g}_{s h,T}\\|}}\\\\ &{\\quad\\quad\\quad=\\mathcal{L}_{T}(P_{s h},P_{T})-\\rho\\langle\\boldsymbol{g}_{s h,S},\\boldsymbol{g}_{s h,T}\\rangle,}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where Eq. 7 is obtained by applying first-order Taylor expansion with $\\rho$ is a small value, and $\\mathbb{T}$ is the vector transpose. It can be seen that minimizing this loss also maximizes cosine similarity between gradients of the two domains. In order to achieve this, let denote \u2225gsh,S\u2225s.h\u2225,Sgsh,T \u2225, and consider the loss\u2019s gradient w.r.t $P_{s h}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{s h,T}^{\\mathrm{align}}:=\\nabla_{P_{s h}}\\mathcal{L}_{T}(P_{s h}-\\rho a,P_{T})}\\\\ &{\\qquad=\\left.\\frac{d(P_{s h}-\\rho a)}{d(P_{s h})}\\nabla_{P_{s h}}\\mathcal{L}_{T}(P_{s h},P_{T})\\right|_{P_{s h}=P_{s h}-\\rho a}}\\\\ &{\\approx\\left.\\nabla_{P_{s h}}\\mathcal{L}_{T}(P_{s h},P_{T})\\right|_{P_{s h}=P_{s h}-\\rho a}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In the approximation of Eq. 8, we avoid the Hessian computation by dropping the derivative of $\\textbf{\\em a}$ w.r.t $P_{s h}$ . Now we can practically apply deep learning optimizers, such as SGD, to minimize $\\mathcal{L}_{T}^{\\mathrm{align}}(P)$ Specifically, we first compute gradients of the source and target losses w.r.t the shared prompt to get vector $\\textbf{\\em a}$ , then move the current shared prompt to the new stage: ${P}_{s h}={P}_{s h}-\\rho\\mathbf{a}$ . Finally, at this new stage, re-compute the loss on target data then calculate the new gradient. ", "page_idx": 5}, {"type": "text", "text": "In a similar way, we can derive $\\mathcal{L}_{S}^{\\mathrm{align}}(P)$ on source data and then compute its new gradient w.r.t the shared prompt, i.e. gaslihg,nS. Given these two new gradients, we can combine them to get the final update direction of the shared prompt, which will navigate it to common low-valued regions in the loss landscapes of both domains. ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{b=\\frac{g_{s h,T}}{\\lVert g_{s h,S}\\rVert_{\\cdot}\\lVert g_{s h,T}\\rVert},g_{s h,S}^{\\mathrm{align}}\\approx\\nabla_{P_{s h}}\\mathcal{L}_{S}(P_{s h},P_{S})|_{P_{s h}=P_{s h}-\\rho b}\\,,}\\\\ {g_{s h}^{\\mathrm{align}}=g_{s h,T}^{\\mathrm{align}}+\\lambda g_{s h,S}^{\\mathrm{align}}.\\qquad\\qquad\\qquad\\qquad}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "4.4 Prompt gradient-norm penalization for UDA ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "So far, we have proposed casting each domain loss as an objective in a multiple-objective optimization framework, and have suggested maximizing congruence between gradients of these objectives to reduce their inherent conflict. However, the domain loss is in the empirical form, which has been shown to be easily stuck in sharp minima and thus limiting generalization ability [81, 82], especially under distribution shifts [83]. Therefore, we argue that explicit control over the generalization of these prompts can be beneficial. Moreover, inspired by the finding in [59] that gradient norm penalization can help model favor flat minima, and by the effectiveness of such minima in the context of multi-task learning [81], we propose minimizing prompt gradient norm of each objective to enhance prompt generalization. ", "page_idx": 5}, {"type": "text", "text": "By following the same analysis as in Eq. 7, we can seamlessly fuse the gradient norm penalty term with the cosine similarity maximization with the loss below: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{T}^{\\mathrm{PGA}}(P):=\\mathcal{L}_{T}(P_{s h}-\\rho_{g a}\\frac{g_{s h,S}}{\\|g_{s h,S}\\|\\cdot\\|g_{s h,T}\\|}+\\rho_{g n}\\frac{g_{s h,T}}{\\|g_{s h,T}\\|},P_{T}+\\rho_{g n}\\frac{g_{T}}{\\|g_{T}\\|})}\\\\ &{\\qquad\\qquad\\approx\\mathcal{L}_{T}(P_{s h},P_{T})-\\rho_{g a}\\frac{\\left(g_{s h,S}\\right)^{\\top}\\nabla_{P_{s h}}\\mathcal{L}_{T}(P_{s h},P_{T})}{\\|g_{s h,S}\\|\\cdot\\|g_{s h,T}\\|}+\\rho_{g n}(\\|g_{s h,T}\\|+\\|g_{T}\\|)}\\\\ &{\\qquad\\qquad=\\mathcal{L}_{T}(P_{s h},P_{T})-\\rho_{g a}\\langle g_{s h,S},g_{s h,T}\\rangle+\\rho_{g n}(\\|g_{s h,T}\\|+\\|g_{T}\\|),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where ${\\bf\\nabla}_{g_{T}}$ is the gradient of the target loss w.r.t target-specific $P_{T}$ , and $g n$ stands for gradient norm. ", "page_idx": 5}, {"type": "text", "text": "We then follow the derivation of Eq. 8 to come up with a practical approximation of the gradient of $\\mathcal{L}_{T}^{\\mathrm{PGA}}(P)$ ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{s h,T}^{\\mathrm{PGA}},g_{T}^{\\mathrm{PGA}}:=\\nabla_{P}\\mathcal{L}_{T}^{\\mathrm{PGA}}(P)}\\\\ &{\\quad\\quad\\quad\\quad\\approx\\nabla_{P}\\mathcal{L}_{T}(P_{s h},P_{T})|_{P_{s h}=P_{s h}-\\rho_{g a}\\boldsymbol{a}+\\rho_{g n}\\frac{g_{s h,T}}{||g_{s h,T}||},P_{T}=P_{T}+\\rho_{g n}\\frac{g_{T}}{||g_{T}||}}\\,.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Similarly, we obtain the gradient of the source objective ", "page_idx": 5}, {"type": "equation", "text": "$$\ng_{s h,S}^{\\mathrm{PGA}},g_{S}^{\\mathrm{PGA}}\\approx\\left.\\nabla_{P}\\mathcal{L}_{S}(P_{s h},P_{S})\\right|_{P_{s h}=P_{s h}-\\rho_{g a}b+\\rho_{g n}\\frac{g_{s h,S}}{||g_{s h,S}||},P_{S}=P_{S}+\\rho_{g n}\\frac{g_{S}}{||g_{S}||}}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Following the same update rules in Eq. 5 and Eq. 6, the prompts can be learnt to achieve both of our two goals: inter-domain gradient alignment and flat minima enforcement, which can lead to improved performance for UDA. We will recap this with a generalization bound in the next part, and provide details for the final loss function in Appendix B. ", "page_idx": 5}, {"type": "text", "text": "4.5 Theoretical Analysis of PGA ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We informally present an information-theoretic bound to explain why PGA works. Refer to Appendix A for the formal version. For simplicity, we will consider the single-source UDA setting and abuse $N$ as the number of source samples. Let $\\mathcal{Z},\\mathcal{P}$ be the input-label space and prompt space (or hypothesis space), respectively. Assume the loss function $\\ell:\\mathcal{P}\\times\\mathcal{Z}\\to\\mathbb{R}_{0}^{+}$ is R-subgaussian Denote $\\mu,\\mu^{\\prime}$ as the two underlying distributions from which the source and target data is sampled, and $K L(.||.)$ as the KL-divergence. The generalization error is defined as the difference between the target population loss and the source empirical loss ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\nE r r:=\\mathbb{E}_{P,D_{S},D_{T}}[R_{\\mu^{\\prime}}({\\pmb P})-R_{D_{S}}({\\pmb P})]=\\mathbb{E}_{P,D_{S},D_{T}}[\\mathbb{E}_{{\\pmb Z}^{\\prime}\\sim\\mu^{\\prime}}[\\ell(P,{\\pmb Z}^{\\prime})]-\\frac{1}{N}\\sum_{i=1}^{N}\\ell({\\pmb P},{\\pmb Z}_{i})].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Theorem 4.1. Under the assumption $R$ -subgaussianity, the generalization error can be upperbounded by: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\left\\vert E r r\\right\\vert\\leq\\sqrt{\\frac{4R^{2}}{N}\\sum_{t=1}^{T}\\widetilde{\\eta}_{t}^{2}\\mathbb{E}_{P_{t-1},D_{S},D_{T}}[\\|g_{t}^{s r c}\\|^{2}+\\|g_{t}^{t g t}\\|^{2}+\\|g_{t}^{s r c}-g_{t}^{t g t}\\|^{2}]}+\\sqrt{2R^{2}K L(\\mu||\\mu^{\\prime})},\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\tau$ is the total number of training iterations, $\\tilde{\\eta_{t}}$ is the learning rate at iteration $t$ scaled by $a$ scalar, $\\begin{array}{r}{\\pmb{g}_{t}^{s r c}=\\nabla_{P}\\mathcal{L}_{S}(P_{t-1}),}\\end{array}$ , $\\pmb{g}_{t}^{t g t}=\\nabla_{P}\\mathcal{L}_{T}(P_{t-1})$ are the gradients w.r.t $P_{t-1}$ of source loss Eq. 2 and target loss Eq $^3$ where $\\mathbf{}P_{t}$ is the prompt at iteration $t$ . ", "page_idx": 6}, {"type": "text", "text": "As our method tries to minimize source empirical loss, gradient norms and gradient mis-alignment, from the first term in the R.H.S of Eq. 4.1, its benefit to the performance on target domain can be justified. Furthermore, the second term shows that the generalization error can be reduced by bridging the gap between the two domain distributions, which is the core of many UDA methods, such as [70, 84]. However, as stated earlier, our work is orthogonal to this line of method as we do not explicitly attempt to close such gap. Hence, an interesting future development could be taking the second term into account. Refer to Appendix A.5 for more discussion about this bound. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we evaluate the efficacy of our proposed method on different UDA benchmarks, following the same protocol of recent prompt-based UDA studies [25, 28]. Before that, we start with a simple multi-objective-optimization setup to derive insights into the effectiveness of our proposed method compared to conventional empirical risk minimization (ERM). ", "page_idx": 6}, {"type": "text", "text": "5.1 Illustrative example ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Let $\\mathbf{y}\\in\\{-1,1\\}$ be the true label, $\\mathbf{e}$ be the environmental feature and $\\epsilon$ be Gaussian noise, $\\mathbf{x}\\in\\mathbb{R}^{300}$ , and $\\mathsf{p}\\in(0,1),C>1$ be predefined scalar constants. The data-generating process is given by: ", "page_idx": 6}, {"type": "equation", "text": "$$\nr\\sim\\mathcal{U}\\{-1,1\\},\\quad\\mathbf{e}\\sim\\left\\{\\begin{array}{l l}{p_{\\mathrm{p}}(\\mathbf{e}=y\\mid\\mathbf{y}=y)=\\mathbf{p}}\\\\ {p_{\\mathrm{p}}(\\mathbf{e}=-y\\mid\\mathbf{y}=y)=\\left(1-\\mathbf{p}\\right)}\\end{array}\\right.\\quad,\\quad\\epsilon\\sim\\mathcal{N}\\left(0,\\mathbf{I}^{298}\\right),\\quad\\mathbf{x}=\\left[C\\ast\\mathbf{e},\\mathbf{y},\\epsilon\\right]\\sim\\mathcal{N}\\left(0,\\mathbf{I}^{298}\\right).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/f2c9e568c7104104b00ca4a8bfea7257154ef72ae00aefc74ccd0cf672acae39.jpg", "img_caption": [], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Figure 2: Performance of ERM and PGA on the in-domain data (validation set) and out-of-distribution data (test set). Average results and shaded standard errors are obtained from 10 random seeds. ", "page_idx": 6}, {"type": "text", "text": "The environmental feature e correlates with the true label y according to p. Similar to [55, 85], we set $\\mathrm{\\Deltap}\\,=\\,0.9$ for the training and validation set (in-distribution) and $\\mathrm{~p~}=\\mathrm{~0.1~}$ for the test set (out-of-distribution). Figure 2 presents the performance of three linear classifiers trained by ERM, our gradient alignment method only and PGA. In summary, while ERM learns non-predictive features and fails to generalize beyond in-distribution data, our gradient alignment algorithm can leverage the gradient information from multiple environments to learn the core feature that helps perform well on OOD data. Besides, incorporating the gradient norm penalty term further enhances stability and robustness at convergence. ", "page_idx": 6}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/9724d9a775ba7fdd58311793f5fcb07c213872459f80afeb0d9e113e3810d931.jpg", "table_caption": ["Table 2: Accuracy $(\\%)$ on ImageCLEF and Office-Home. We use bold to denote the best method overall and underscore to denote the best method using source combined. Overall, PGA and MPGA consistently obtain the best results among source combined and multi-source scenarios, respectively. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "5.2 Experimental setup ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Datasets. We conduct experiments using three well-established UDA datasets of varying scales: ImageCLEF [17], Office-Home [86], and DomainNet [87], respectively. Detailed descriptions of these datasets are available in Appendix C.1. ", "page_idx": 7}, {"type": "text", "text": "Metrics. We evaluate our model by reporting the top-1 accuracy for each target domain and the average accuracy across all domains. To further validate the effectiveness of our proposed method, we conduct experiments in two distinct settings: a source-combined setting, where data from all source domains are merged, and a multi-source setting, which utilizes individual domain identifications. Additionally, we provide pair-wise single-source domain adaptation results for the Office-Home dataset. ", "page_idx": 7}, {"type": "text", "text": "Baselines. Regarding prompt-based baselines, we compare our method with MPA [28], DAPL [25], Simple Prompt [28], and Zero-shot CLIP [27]. To ensure a comprehensive evaluation, we also include comparisons with various non-prompt methods such as DCTN [88], MDDA [89], MFSAN [62], T-SVDNet [90] and PFSA [91] ... As we follow the same settings as in [28] and [25], results for baselines are taken from those studies for the consistency. Note that while DAPL [25], MPA [28] and our methods employ CoOp [92] with text-end soft-prompt, other methods finetune the transformer block [63] or both image and text-end soft-prompts [93] or the whole encoders [94, 95]. Since those methods typically fine-tune many more parameters, we thus do not include them in the experimental results for the sake of fair comparison. ", "page_idx": 7}, {"type": "text", "text": "5.3 Experimental results ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Table 2 presents the results for the ImageCLEF and Office-Home datasets. Under the source-combined scenario, PGA significantly outperforms nearly all other baseline methods on both datasets, with the exception of its own multi-source variant, MPGA. For instance, PGA surpasses the secondbest source combined method by a notable $4\\%$ in average accuracy and exceeds MPA by over $1\\%$ . Notably, in the Office-Home domain Clipart, while two prompt-based baselines, DAPL and Simple Prompt, lag behind their non-prompt counterparts, PGA still manages to achieve slightly better results than these non-prompt methods. In the multi-source setting, MPGA consistently delivers the highest performance across all domains, notably outperforming MPA, the state-of-the-art (SOTA) prompt-based method for multi-source UDA, by a substantial margin of $4\\%$ on Office-Home. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/68c8be3f9369e14a3d02f303e37a2658917adbe676f4eb8d5ac4cf9e7b508d60.jpg", "table_caption": ["Table 3: Accuracy $(\\%)$ on DomainNet. We use bold to denote the best method overall and underscore to denote the best method using source combine. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "On DomainNet, as Table 3 presents, our method still obtains superior average accuracy under both source combined and multi-source, higher than the runner-up by $3.4\\%$ and $2.1\\%$ , respectively. Overall, in the domain where CLIP brings significant results compared with non-prompt baselines, our method leads to better performance, except for the difficult QuickDraw domain, as remarked by a relatively low zero-shot accuracy for CLIP-based methods, where it seems that prompt learning fails to beat non-prompt counterparts. Even though, both PGA and MPGA still outperform other prompt-based counterparts while fine-tuning fewer parameters (e.g. 500k versus 2M of MPA). ", "page_idx": 8}, {"type": "text", "text": "In addition, we also demonstrate our method\u2019s effectiveness under 12 pair-wise source-target settings on Office-Home in Table 4. Again, PGA acquires the highest average score and consistently beats DAPL under 12 settings while using the same parameter-efficient-finetuning method [92]. ", "page_idx": 8}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/070a149ab8f782200dbf9054a840d6fd0007ea7d62d18721384fad047d363837.jpg", "table_caption": ["Table 4: Accuracy $(\\%)$ on Office-Home[101] for unsupervised domain adaptation (ResNet-50[102]). The best accuracy is indicated in bold. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.4 Ablation study ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "From Table 5, we can see that (i) learning prompts using solely the target loss, the accuracy across all settings already surpasses that of Zero-shot CLIP. This confirms the reliability of pseudo labels generated by CLIP. (ii) When adding source loss and grad-norm penalization, the results improve slightly. (iii) Importantly, adding gradient alignment, the scores increase more clearly. These observations verify each of our contributions. ", "page_idx": 9}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/f2c0ed6190c7b35759ed7e1163a18f19862fc9e257cd5dd3efe373d07b00c051.jpg", "table_caption": [], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "Table 5: Ablation studies on various modules of   \nPGA on the ImageCLEF. Each of the proposed   \ncomponents shows its effectiveness while combin-Figure 3: Evolution of the gradient similarity ing them helps obtain the best performance. during training. ", "page_idx": 9}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/1f6419665854a3051283d14975153e10b9786e221b6852734bf19ad8a90c613d.jpg", "img_caption": [], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Furthermore, to show that gradient alignment indeed increases consensus between gradients, we plot cosine similarity along the training process with three different values of $\\rho_{g a}$ in Figure 3. First, during early training stages, there seems to be less agreement between gradients when no alignment is enforced, c.f. $\\rho_{g a}=0$ . When $\\rho_{g a}>0$ , we can see the similarity increase. Noticeably, there exists a point where similarity starts plummeting. This is reasonable when the model starts to converge to a Pareto solution where source and target gradients cancel each other. This is depicted more clearly in Figure 4 in the appendix where the closer the model is to the Pareto front, the more conflict the gradients are. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we have proposed a framework for UDA inspired by Multi-objective optimization thanks to the generalizability of CLIP and the lightweight nature of prompt learning. We have then devised a practical method to align per-objective gradients, which aims to encourage inherent consensus between objectives. We have further fused gradient norm penalization into the method to enhance prompt generalization. Finally, a UDA generalization bound is presented to justify the beneftis of our method. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements: Trung Le was supported by ARC DP23 grant DP230101176 and by the Air Force Office of Scientific Research under award number FA2386-23-1-4044. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Siddharth Srivastava and Gaurav Sharma. Omnivec: Learning robust representations with cross modal sharing. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 1236\u20131248, 2024.   \n[2] Jiahui Yu, Zirui Wang, Vijay Vasudevan, Legg Yeung, Mojtaba Seyedhosseini, and Yonghui Wu. Coca: Contrastive captioners are image-text foundation models. arXiv preprint arXiv:2205.01917, 2022.   \n[3] Mitchell Wortsman, Gabriel Ilharco, Samir Ya Gadre, Rebecca Roelofs, Raphael GontijoLopes, Ari S Morcos, Hongseok Namkoong, Ali Farhadi, Yair Carmon, Simon Kornblith, et al. Model soups: averaging weights of multiple fine-tuned models improves accuracy without increasing inference time. In International conference on machine learning, pages 23965\u201323998. PMLR, 2022.   \n[4] Xi Chen, Xiao Wang, Soravit Changpinyo, AJ Piergiovanni, Piotr Padlewski, Daniel Salz, Sebastian Goodman, Adam Grycner, Basil Mustafa, Lucas Beyer, et al. Pali: A jointly-scaled multilingual language-image model. In The Eleventh International Conference on Learning Representations, 2022.   \n[5] Zihang Dai, Hanxiao Liu, Quoc V Le, and Mingxing Tan. Coatnet: Marrying convolution and attention for all data sizes. Advances in neural information processing systems, 34:3965\u20133977, 2021.   \n[6] Zhuofan Zong, Guanglu Song, and Yu Liu. Detrs with collaborative hybrid assignments training. In Proceedings of the IEEE/CVF international conference on computer vision, pages 6748\u20136758, 2023.   \n[7] Wenhai Wang, Jifeng Dai, Zhe Chen, Zhenhang Huang, Zhiqi Li, Xizhou Zhu, Xiaowei Hu, Tong Lu, Lewei Lu, Hongsheng Li, et al. Internimage: Exploring large-scale vision foundation models with deformable convolutions. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14408\u201314419, 2023.   \n[8] Weijie Su, Xizhou Zhu, Chenxin Tao, Lewei Lu, Bin Li, Gao Huang, Yu Qiao, Xiaogang Wang, Jie Zhou, and Jifeng Dai. Towards all-in-one pre-training via maximizing multi-modal mutual information. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15888\u201315899, 2023.   \n[9] Kemal Oksuz, Selim Kuzucu, Tom Joy, and Puneet K Dokania. Mocae: Mixture of calibrated experts significantly improves object detection. arXiv preprint arXiv:2309.14976, 2023.   \n[10] Xudong Wang, Shufan Li, Konstantinos Kallidromitis, Yusuke Kato, Kazuki Kozuka, and Trevor Darrell. Hierarchical open-vocabulary universal image segmentation. Advances in Neural Information Processing Systems, 36, 2024.   \n[11] Peng Wang, Shijie Wang, Junyang Lin, Shuai Bai, Xiaohuan Zhou, Jingren Zhou, Xinggang Wang, and Chang Zhou. One-peace: Exploring one general representation model toward unlimited modalities. arXiv preprint arXiv:2305.11172, 2023.   \n[12] Wenhui Wang, Hangbo Bao, Li Dong, Johan Bjorck, Zhiliang Peng, Qiang Liu, Kriti Aggarwal, Owais Khan Mohammed, Saksham Singhal, Subhojit Som, et al. Image as a foreign language: Beit pretraining for all vision and vision-language tasks. arXiv preprint arXiv:2208.10442, 2022.   \n[13] Serdar Erisen. Sernet-former: Semantic segmentation by efficient residual network with attention-boosting gates and attention-fusion networks. arXiv preprint arXiv:2401.15741, 2024.   \n[14] Michael A Lones. How to avoid machine learning pitfalls: a guide for academic researchers. arXiv preprint arXiv:2108.02497, 2021.   \n[15] Pang Wei Koh, Shiori Sagawa, Henrik Marklund, Sang Michael Xie, Marvin Zhang, Akshay Balsubramani, Weihua Hu, Michihiro Yasunaga, Richard Lanas Phillips, Irena Gao, et al. Wilds: A benchmark of in-the-wild distribution shifts. In International conference on machine learning, pages 5637\u20135664. PMLR, 2021.   \n[16] Shiori Sagawa, Pang Wei Koh, Tatsunori B Hashimoto, and Percy Liang. Distributionally robust neural networks. In International Conference on Learning Representations, 2019.   \n[17] Mingsheng Long, Han Zhu, Jianmin Wang, and Michael I Jordan. Deep transfer learning with joint adaptation networks. In ICML, pages 2208\u20132217, 2017.   \n[18] Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Fran\u00e7ois Laviolette, Mario March, and Victor Lempitsky. Domain-adversarial training of neural networks. Journal of machine learning research, 17(59):1\u201335, 2016.   \n[19] Yaroslav Ganin and Victor Lempitsky. Unsupervised domain adaptation by backpropagation. In ICML, pages 1180\u20131189, 2015.   \n[20] Mingsheng Long, Yue Cao, Zhangjie Cao, Jianmin Wang, and Michael I Jordan. Transferable representation learning with deep adaptation networks. IEEE transactions on pattern analysis and machine intelligence, 41(12):3071\u20133085, 2018.   \n[21] Boxiao Pan, Zhangjie Cao, Ehsan Adeli, and Juan Carlos Niebles. Adversarial cross-domain action recognition with co-attention. In Proceedings of the AAAI conference on artificial intelligence, volume 34, pages 11815\u201311822, 2020.   \n[22] Zhongyi Han, Xian-Jin Gui, Chaoran Cui, and Yilong Yin. Towards accurate and robust domain adaptation under noisy environments. In Proceedings of the Twenty-Ninth International Conference on International Joint Conferences on Artificial Intelligence, pages 2269\u20132276, 2021.   \n[23] Jinyu Yang, Chunyuan Li, Weizhi An, Hehuan Ma, Yuzhi Guo, Yu Rong, Peilin Zhao, and Junzhou Huang. Exploring robustness of unsupervised domain adaptation in semantic segmentation. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 9194\u20139203, 2021.   \n[24] Pierre Foret, Ariel Kleiner, Hossein Mobahi, and Behnam Neyshabur. Sharpness-aware minimization for efficiently improving generalization. In International Conference on Learning Representations, 2020.   \n[25] Chunjiang Ge, Rui Huang, Mixue Xie, Zihang Lai, Shiji Song, Shuang Li, and Gao Huang. Domain adaptation via prompt learning. IEEE Transactions on Neural Networks and Learning Systems, 2023.   \n[26] Hui Tang, Ke Chen, and Kui Jia. Unsupervised domain adaptation via structurally regularized deep clustering. In CVPR, pages 8725\u20138735, 2020.   \n[27] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In ICML, volume 139, pages 8748\u20138763, 2021.   \n[28] Haoran Chen, Zuxuan Wu, and Yu-Gang Jiang. Multi-prompt alignment for multi-source unsupervised domain adaptation. Neural Information Processing Systems, 2022.   \n[29] Takeru Miyato, Shin-ichi Maeda, Masanori Koyama, and Shin Ishii. Virtual adversarial training: a regularization method for supervised and semi-supervised learning. IEEE transactions on pattern analysis and machine intelligence, 41(8):1979\u20131993, 2018.   \n[30] Rui Shu, Hung Bui, Hirokazu Narui, and Stefano Ermon. A dirt-t approach to unsupervised domain adaptation. In International Conference on Learning Representations, 2018.   \n[31] Ozan Sener and Vladlen Koltun. Multi-task learning as multi-objective optimization. Advances in neural information processing systems, 31, 2018.   \n[32] Xi Lin, Hui-Ling Zhen, Zhenhua Li, Qing-Fu Zhang, and Sam Kwong. Pareto multi-task learning. Advances in neural information processing systems, 32, 2019.   \n[33] Michinari Momma, Chaosheng Dong, and Jia Liu. A multi-objective/multi-task learning framework induced by pareto stationarity. In International Conference on Machine Learning, pages 15895\u201315907. PMLR, 2022.   \n[34] Tianhe Yu, Saurabh Kumar, Abhishek Gupta, Sergey Levine, Karol Hausman, and Chelsea Finn. Gradient surgery for multi-task learning. Advances in Neural Information Processing Systems, 33:5824\u20135836, 2020.   \n[35] Bo Liu, Xingchao Liu, Xiaojie Jin, Peter Stone, and Qiang Liu. Confilct-averse gradient descent for multi-task learning. Advances in Neural Information Processing Systems, 34:18878\u201318890, 2021.   \n[36] Adri\u00e1n Javaloy and Isabel Valera. Rotograd: Gradient homogenization in multitask learning. In International Conference on Learning Representations, 2021.   \n[37] Zhao Chen, Jiquan Ngiam, Yanping Huang, Thang Luong, Henrik Kretzschmar, Yuning Chai, and Dragomir Anguelov. Just pick a sign: Optimizing deep multitask models with gradient sign dropout. Advances in Neural Information Processing Systems, 33:2039\u20132050, 2020.   \n[38] Xiaobo Xia, Jiale Liu, Shaokun Zhang, Qingyun Wu, and Tongliang Liu. Coreset selection with prioritized multiple objectives. arXiv preprint arXiv:2311.08675, 2023.   \n[39] Yuru Song, Zan Lou, Shan You, Erkun Yang, Fei Wang, Chen Qian, Changshui Zhang, and Xiaogang Wang. Learning with privileged tasks. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10685\u201310694, 2021.   \n[40] Aviv Shamsian, Aviv Navon, Neta Glazer, Kenji Kawaguchi, Gal Chechik, and Ethan Fetaya. Auxiliary learning as an asymmetric bargaining game. In International Conference on Machine Learning, pages 30689\u201330705. PMLR, 2023.   \n[41] Pingchuan Ma, Tao Du, and Wojciech Matusik. Efficient continuous pareto exploration in multi-task learning. In International Conference on Machine Learning, pages 6522\u20136531. PMLR, 2020.   \n[42] Aviv Navon, Aviv Shamsian, Ethan Fetaya, and Gal Chechik. Learning the pareto front with hypernetworks. In International Conference on Learning Representations, 2020.   \n[43] Hoang Phan, Andrew Gordon Wilson, and Qi Lei. Controllable prompt tuning for balancing group distributional robustness. In Forty-first International Conference on Machine Learning, 2024.   \n[44] Vitaly Kurin, Alessandro De Palma, Ilya Kostrikov, Shimon Whiteson, and Pawan K Mudigonda. In defense of the unitary scalarization for deep multi-task learning. Advances in Neural Information Processing Systems, 35:12169\u201312183, 2022.   \n[45] Derrick Xin, Behrooz Ghorbani, Justin Gilmer, Ankush Garg, and Orhan Firat. Do current multi-task optimization methods in deep learning even help? Advances in neural information processing systems, 35:13597\u201313609, 2022.   \n[46] Yuzheng Hu, Ruicheng Xian, Qilong Wu, Qiuling Fan, Lang Yin, and Han Zhao. Revisiting scalarization in multi-task learning: A theoretical perspective. Advances in Neural Information Processing Systems, 36, 2024.   \n[47] Shiji Zhou, Wenpeng Zhang, Jiyan Jiang, Wenliang Zhong, Jinjie Gu, and Wenwu Zhu. On the convergence of stochastic multi-objective gradient manipulation and beyond. Advances in Neural Information Processing Systems, 35:38103\u201338115, 2022.   \n[48] Angela Fan, Edouard Grave, and Armand Joulin. Reducing transformer depth on demand with structured dropout. In International Conference on Learning Representations, 2019.   \n[49] Aliakbar Panahi, Seyran Saeedi, and Tom Arodz. Shapeshifter: a parameter-efficient transformer using factorized reshaped matrices. Advances in Neural Information Processing Systems, 34:1337\u20131350, 2021.   \n[50] Bonan Li, Yinhan Hu, Xuecheng Nie, Congying Han, Xiangjian Jiang, Tiande Guo, and Luoqi Liu. Dropkey for vision transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22700\u201322709, 2023.   \n[51] Sandhini Agarwal, Gretchen Krueger, Jack Clark, Alec Radford, Jong Wook Kim, and Miles Brundage. Evaluating clip: towards characterization of broader capabilities and downstream implications. arXiv preprint arXiv:2108.02818, 2021.   \n[52] Jialu Wang, Yang Liu, and Xin Wang. Are gender-neutral queries really gender-neutral? mitigating gender bias in image search. In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages 1995\u20132008, 2021.   \n[53] Yu Du, Fangyun Wei, Zihe Zhang, Miaojing Shi, Yue Gao, and Guoqi Li. Learning to prompt for open-vocabulary object detection with vision-language model. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14084\u201314093, 2022.   \n[54] Michael Zhang and Christopher R\u00e9. Contrastive adapters for foundation model group robustness. Advances in Neural Information Processing Systems, 35:21682\u201321697, 2022.   \n[55] Shiori Sagawa, Aditi Raghunathan, Pang Wei Koh, and Percy Liang. An investigation of why overparameterization exacerbates spurious correlations. In International Conference on Machine Learning, pages 8346\u20138356. PMLR, 2020.   \n[56] Lifu Tu, Caiming Xiong, and Yingbo Zhou. Prompt-tuning can be much better than finetuning on cross-lingual understanding with multilingual language models. In Findings of the Association for Computational Linguistics: EMNLP 2022, pages 5478\u20135485, 2022.   \n[57] Cheng-En Wu, Yu Tian, Haichao Yu, Heng Wang, Pedro Morgado, Yu Hen Hu, and Linjie Yang. Why is prompt tuning for vision-language models robust to noisy labels? In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 15488\u201315497, 2023.   \n[58] Kaiyang Zhou, Jingkang Yang, Chen Change Loy, and Ziwei Liu. Conditional prompt learning for vision-language models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 16816\u201316825, 2022.   \n[59] Yang Zhao, Hao Zhang, and Xiuyuan Hu. Penalizing gradient norm for efficiently improving generalization in deep learning. arXiv preprint arXiv: 2202.03599, 2022.   \n[60] Devansh Bisla, Jing Wang, and Anna Choromanska. Low-pass flitering sgd for recovering flat optima in the deep learning optimization landscape. In International Conference on Artificial Intelligence and Statistics, pages 8299\u20138339. PMLR, 2022.   \n[61] Dongxian Wu, Shu-Tao Xia, and Yisen Wang. Adversarial weight perturbation helps robust generalization. Advances in neural information processing systems, 33:2958\u20132969, 2020.   \n[62] Yongchun Zhu, Fuzhen Zhuang, and Deqing Wang. Aligning domain-specific distribution and classifier for cross-domain classification from multiple sources. In The Thirty-Third AAAI Conference on Artificial Intelligence, AAAI 2019, The Thirty-First Innovative Applications of Artificial Intelligence Conference, IAAI 2019, The Ninth AAAI Symposium on Educational Advances in Artificial Intelligence, EAAI 2019, Honolulu, Hawaii, USA, January 27 - February 1, 2019, pages 5989\u20135996. AAAI Press, 2019.   \n[63] Zhekai Du, Xinyao Li, Fengling Li, Ke Lu, Lei Zhu, and Jingjing Li. Domain-agnostic mutual prompting for unsupervised domain adaptation. In IEEE Conference on Computer Vision and Pattern Recognition, 2024.   \n[64] Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Wortman Vaughan. A theory of learning from different domains. Mach. Learn., 79(1- 2):151\u2013175, 2010.   \n[65] Han Zhao, Shanghang Zhang, Guanhang Wu, Jos\u00e9 M. F. Moura, Joao P Costeira, and Geoffrey J Gordon. Adversarial multiple source domain adaptation. In S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 31. Curran Associates, Inc., 2018.   \n[66] Han Zhao, Shanghang Zhang, Guanhang Wu, Jo ao P. Costeira, Jos\u00e9 M. F. Moura, and Geoffrey J. Gordon. Multiple source domain adaptation with adversarial learning, 2018.   \n[67] Hoang Phan, Trung Le, Trung Phung, Anh Tuan Bui, Nhat Ho, and Dinh Phung. Globallocal regularization via distributional robustness. In International Conference on Artificial Intelligence and Statistics, pages 7644\u20137664. PMLR, 2023.   \n[68] Arthur Gretton, Karsten Borgwardt, Malte J. Rasch, Bernhard Scholkopf, and Alexander J. Smola. A kernel method for the two-sample problem. arXiv preprint arXiv: 0805.2368, 2008.   \n[69] Baochen Sun and Kate Saenko. Deep coral: Correlation alignment for deep domain adaptation. In ECCV, pages 443\u2013450. Springer, 2016.   \n[70] Trung Quoc Phung, Trung Le, Long Tung Vuong, Toan Tran, Anh Tuan Tran, Hung Bui, and Dinh Phung. On learning domain-invariant representations for transfer learning with multiple sources. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, 2021.   \n[71] Mingsheng Long, Zhangjie Cao, Jianmin Wang, and Michael I. Jordan. Conditional adversarial domain adaptation. In NeurIPS, pages 1647\u20131657, 2018.   \n[72] Zihao Zhao, Eric Wallace, Shi Feng, Dan Klein, and Sameer Singh. Calibrate before use: Improving few-shot performance of language models. In International conference on machine learning, pages 12697\u201312706. PMLR, 2021.   \n[73] Ari Holtzman, Peter West, Vered Shwartz, Yejin Choi, and Luke Zettlemoyer. Surface form competition: Why the highest probability answer isn\u2019t always right. In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages 7038\u20137051, 2021.   \n[74] Simran Arora, Avanika Narayan, Mayee F Chen, Laurel Orr, Neel Guha, Kush Bhatia, Ines Chami, and Christopher Re. Ask me anything: A simple strategy for prompting language models. In The Eleventh International Conference on Learning Representations, 2022.   \n[75] Hoang Phan, Ngoc Tran, Trung Le, Toan Tran, Nhat Ho, and Dinh Phung. Stochastic multiple target sampling gradient descent. Advances in neural information processing systems, 35:22643\u201322655, 2022.   \n[76] Matthew Riemer, Ignacio Cases, Robert Ajemian, Miao Liu, Irina Rish, Yuhai Tu, , and Gerald Tesauro. Learning to learn without forgetting by maximizing transfer and minimizing interference. In International Conference on Learning Representations, 2019.   \n[77] David Lopez-Paz and Marc\u2019Aurelio Ranzato. Gradient episodic memory for continual learning. Neural Information Processing Systems, 2017.   \n[78] Arslan Chaudhry, Marc\u2019Aurelio Ranzato, Marcus Rohrbach, and Mohamed Elhoseiny. Efficient lifelong learning with a-GEM. In International Conference on Learning Representations, 2019.   \n[79] Yuge Shi, Jeffrey Seely, Philip Torr, Siddharth N, Awni Hannun, Nicolas Usunier, and Gabriel Synnaeve. Gradient matching for domain generalization. In International Conference on Learning Representations, 2022.   \n[80] Pengfei Wang, Zhaoxiang Zhang, Zhen Lei, and Lei Zhang. Sharpness-aware gradient matching for domain generalization. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 3769\u20133778, 2023.   \n[81] Hoang Phan, Lam Tran, Ngoc N. Tran, Nhat Ho, Dinh Phung, and Trung Le. Improving multi-task learning via seeking task-based flat regions. arXiv preprint arXiv: 2211.13723, 2022.   \n[82] Yaowei Zheng, Richong Zhang, and Yongyi Mao. Regularizing neural networks via adversarial model perturbation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 8156\u20138165, 2021.   \n[83] Harsh Rangwani, Sumukh K Aithal, Mayank Mishra, Arihant Jain, and R. Venkatesh Babu. A closer look at smoothness in domain adversarial training. International Conference on Machine Learning, 2022.   \n[84] Shuang Li, Chi Liu, Qiuxia Lin, Binhui Xie, Zhengming Ding, Gao Huang, and Jian Tang. Domain conditioned adaptation network. In AAAI, volume 34, pages 11386\u201311393, 2020.   \n[85] Aahlad Manas Puli, Lily Zhang, Yoav Wald, and Rajesh Ranganath. Don\u2019t blame dataset shift! shortcut learning due to gradients and cross entropy. Advances in Neural Information Processing Systems, 36:71874\u201371910, 2023.   \n[86] Hemanth Venkateswara, Jose Eusebio, Shayok Chakraborty, and Sethuraman Panchanathan. Deep hashing network for unsupervised domain adaptation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 5018\u20135027, 2017.   \n[87] Xingchao Peng, Qinxun Bai, Xide Xia, Zijun Huang, Kate Saenko, and Bo Wang. Moment matching for multi-source domain adaptation. In Proceedings of the IEEE/CVF international conference on computer vision, pages 1406\u20131415, 2019.   \n[88] Ruijia Xu, Ziliang Chen, W. Zuo, Junjie Yan, and Liang Lin. Deep cocktail network: Multisource unsupervised domain adaptation with category shift. IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2018.   \n[89] Sicheng Zhao, Guangzhi Wang, Shanghang Zhang, Yang Gu, Yaxian Li, Zhichao Song, Pengfei Xu, Runbo Hu, Hua Chai, and Kurt Keutzer. Multi-source distilling domain adaptation. In The Thirty-Fourth AAAI Conference on Artificial Intelligence, AAAI 2020, The Thirty-Second Innovative Applications of Artificial Intelligence Conference, IAAI 2020, The Tenth AAAI Symposium on Educational Advances in Artificial Intelligence, EAAI 2020, New York, NY, USA, February 7-12, 2020, pages 12975\u201312983. AAAI Press, 2020.   \n[90] Ruihuang Li, Xu Jia, Jianzhong He, Shuaijun Chen, and Qinghua Hu. T-svdnet: Exploring high-order prototypical correlations for multi-source domain adaptation. ICCV, 2021.   \n[91] Yangye Fu, Ming Zhang, Xing Xu, Zuo Cao, Chao Ma, Yanli Ji, Kai Zuo, and Huimin Lu. Partial feature selection and alignment for multi-source domain adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 16654\u201316663, June 2021.   \n[92] Kaiyang Zhou, Jingkang Yang, Chen Change Loy, and Ziwei Liu. Learning to prompt for vision-language models. International Journal of Computer Vision, 130(9):2337\u20132348, 2022.   \n[93] Zhengfeng Lai, Haoping Bai, Haotian Zhang, Xianzhi Du, Jiulong Shan, Yinfei Yang, ChenNee Chuah, and Meng Cao. Empowering unsupervised domain adaptation with large-scale pre-trained vision-language models. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 2691\u20132701, 2024.   \n[94] Zhengfeng Lai, Noranart Vesdapunt, Ning Zhou, Jun Wu, Cong Phuoc Huynh, Xuelu Li, Kah Kuen Fu, and Chen-Nee Chuah. Padclip: Pseudo-labeling with adaptive debiasing in clip for unsupervised domain adaptation. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 16155\u201316165, 2023.   \n[95] Wenlve Zhou and Zhiheng Zhou. Unsupervised domain adaption harnessing vision-language pre-training. IEEE Transactions on Circuits and Systems for Video Technology, 2024.   \n[96] Naveen Venkat, Jogendra Nath Kundu, D. K. Singh, Ambareesh Revanur, and R. VenkateshBabu. Your classifier can secretly suffice multi-source domain adaptation. Neural Information Processing Systems, 2021.   \n[97] Kuniaki Saito, Kohei Watanabe, Y. Ushiku, and T. Harada. Maximum classifier discrepancy for unsupervised domain adaptation. IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2017.   \n[98] Xingchao Peng, Qinxun Bai, Xide Xia, Zijun Huang, Kate Saenko, and Bo Wang. Moment matching for multi-source domain adaptation. In 2019 IEEE/CVF International Conference on Computer Vision, ICCV 2019, Seoul, Korea (South), October 27 - November 2, 2019, pages 1406\u20131415. IEEE, 2019.   \n[99] Hang Wang, Minghao Xu, Bingbing Ni, and Wenjun Zhang. Learning to combine: Knowledge aggregation for multi-source domain adaptation. In Andrea Vedaldi, Horst Bischof, Thomas Brox, and Jan-Michael Frahm, editors, Computer Vision - ECCV 2020 - 16th European Conference, Glasgow, UK, August 23-28, 2020, Proceedings, Part VIII, volume 12353 of Lecture Notes in Computer Science, pages 727\u2013744. Springer, 2020.   \n[100] Chuan-Xian Ren, Yong Liu, Xiwen Zhang, and Ke-Kun Huang. Multi-source unsupervised domain adaptation via pseudo target domain. IEEE Transactions on Image Processing, 2022.   \n[101] Hemanth Venkateswara, Jose Eusebio, Shayok Chakraborty, and Sethuraman Panchanathan. Deep hashing network for unsupervised domain adaptation. In CVPR, pages 5385\u20135394, 2017.   \n[102] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In CVPR, pages 770\u2013778, 2016.   \n[103] Xinyang Chen, Sinan Wang, Mingsheng Long, and Jianmin Wang. Transferability vs. discriminability: Batch spectral penalization for adversarial domain adaptation. In ICML, volume 97, pages 1081\u20131090, 2019.   \n[104] Yabin Zhang, Hui Tang, Kui Jia, and Mingkui Tan. Domain-symmetric networks for adversarial domain adaptation. In CVPR, pages 5031\u20135040, 2019.   \n[105] Mengxue Li, Yiming Zhai, You-Wei Luo, Pengfei Ge, and Chuan-Xian Ren. Enhanced transport distance for unsupervised domain adaptation. In CVPR, 2020.   \n[106] Shuhao Cui, Shuhui Wang, Junbao Zhuo, Liang Li, Qingming Huang, and Qi Tian. Towards discriminability and diversity: Batch nuclear-norm maximization under label insufficient situations. In CVPR, pages 3940\u20133949, 2020.   \n[107] Lanqing Hu, Meina Kan, Shiguang Shan, and Xilin Chen. Unsupervised domain adaptation with hierarchical gradient synchronization. In CVPR, pages 4043\u20134052, 2020.   \n[108] Shuhao Cui, Shuhui Wang, Junbao Zhuo, Chi Su, Qingming Huang, and Qi Tian. Gradually vanishing bridge for adversarial domain adaptation. In CVPR, pages 12455\u201312464, 2020.   \n[109] Xiang Gu, Jian Sun, and Zongben Xu. Spherical space domain adaptation with robust pseudolabel loss. In CVPR, pages 9101\u20139110, 2020.   \n[110] Qian Wang and Toby P. Breckon. Unsupervised domain adaptation via structured prediction based selective pseudo-labeling. In AAAI, pages 6243\u20136250, 2020.   \n[111] Hui Tang, Yaowei Wang, and Kui Jia. Unsupervised domain adaptation via distilled discriminative clustering. Pattern Recognition, 127:108638, 2022.   \n[112] Ziqiao Wang and Yongyi Mao. Information-theoretic analysis of unsupervised domain adaptation. In The Eleventh International Conference on Learning Representations, 2023.   \n[113] Gergely Neu. Information-theoretic generalization bounds for stochastic gradient descent. In Annual Conference Computational Learning Theory, 2021.   \n[114] Jonas Geiping, Micah Goldblum, Phillip Pope, Michael Moeller, and Tom Goldstein. Stochastic training is not necessary for generalization. In The Tenth International Conference on Learning Representations, ICLR 2022, Virtual Event, April 25-29, 2022. OpenReview.net, 2022.   \n[115] Lingfeng Shen, Weiting Tan, Boyuan Zheng, and Daniel Khashabi. Flatness-aware prompt selection improves accuracy and sample efficiency. Conference on Empirical Methods in Natural Language Processing, 2023.   \n[116] Liangchen Liu, Nannan Wang, Dawei Zhou, Xinbo Gao, Decheng Liu, Xi Yang, and Tongliang Liu. Gradient constrained sharpness-aware prompt learning for vision-language models, 2024.   \n[117] Ziqiao Wang and Yongyi Mao. Two facets of sde under an information-theoretic lens: Generalization of sgd via training trajectories and via terminal states. arXiv preprint arXiv: 2211.10691, 2022.   \n[118] Yury Polyanskiy and Yihong Wu. Lecture notes on information theory. Technical report, 2019.   \n[119] Armen Aghajanyan, Luke Zettlemoyer, and Sonal Gupta. Intrinsic dimensionality explains the effectiveness of language model fine-tuning. arXiv preprint arXiv:2012.13255, 2020.   \n[120] Eckart Zitzler, Kalyanmoy Deb, and Lothar Thiele. Comparison of multiobjective evolutionary algorithms: Empirical results. Evolutionary computation, 8(2):173\u2013195, 2000.   \n[121] Hui Tang and Kui Jia. A new benchmark: On the utility of synthetic data with blender for bare supervised learning and downstream domain adaptation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15954\u201315964, 2023.   \n[122] Zhenbin Wang, Lei Zhang, Lituan Wang, and Minjuan Zhu. Landa: Language-guided multisource domain adaptation. arXiv preprint arXiv:2401.14148, 2024.   \n[123] Mainak Singha, Harsh Pal, Ankit Jha, and Biplab Banerjee. Ad-clip: Adapting domains in prompt space using clip. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4355\u20134364, 2023.   \n[124] Korawat Tanwisuth, Xinjie Fan, Huangjie Zheng, Shujian Zhang, Hao Zhang, Bo Chen, and Mingyuan Zhou. A prototype-oriented framework for unsupervised domain adaptation. Advances in Neural Information Processing Systems, 34:17194\u201317208, 2021.   \n[125] Beier Zhu, Yulei Niu, Yucheng Han, Yue Wu, and Hanwang Zhang. Prompt-aligned gradient for prompt tuning. International Conference on Computer Vision, 2023.   \n[126] Da Li, Yongxin Yang, Yi-Zhe Song, and Timothy M. Hospedales. Learning to generalize: Metalearning for domain generalization. In Sheila A. McIlraith and Kilian Q. Weinberger, editors, Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI-18), the 30th innovative Applications of Artificial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI-18), New Orleans, Louisiana, USA, February 2-7, 2018, pages 3490\u20133497. AAAI Press, 2018.   \n[127] Da Li, Yongxin Yang, Yi-Zhe Song, and Timothy M. Hospedales. Sequential learning for domain generalization. ECCV Workshops, 2020.   \n[128] Juncheng Li, Minghe Gao, Longhui Wei, Siliang Tang, Wenqiao Zhang, Meng Li, Wei Ji, Qi Tian, Tat seng Chua, and Yueting Zhuang. Gradient-regulated meta-prompt learning for generalizable vision-language models. IEEE International Conference on Computer Vision, 2023. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Supplement to \u201cEnhancing Domain Adaptation through Prompt Gradient Alignment\u201c ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Due to space constraints, some details were omitted from the main paper. We therefore include additional theoretical developments (section A), the detailed algorithm description (section B) and experimental results (section C) in this appendix. ", "page_idx": 18}, {"type": "text", "text": "A UDA generalization bound ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Here, we provide an information-theoretic generalization bound for UDA, which can be reduced by our gradient alignment and gradient norm penalization. For simplicity, we will consider the single-source UDA setting. ", "page_idx": 18}, {"type": "text", "text": "To begin, we first define some additional notations: let $\\mathcal{X},\\mathcal{Y},\\mathcal{P}$ be the input space, output space, and prompt space (or hypothesis space), respectively. Denote the input-label space as $\\mathcal{Z}=\\mathcal{X}\\times\\mathcal{Y}$ , and the loss function as $\\ell:\\mathcal{P}\\times\\mathcal{Z}\\to\\mathbb{R}_{0}^{+}$ (Cross entropy in our case). Finally, denote $\\mu,\\mu^{\\prime}$ as the two underlying distributions from which the source and target domains are sampled. The training data for source domain $D_{S}=\\{Z_{i}\\}_{i=1}^{N}$ is drawn i.i.d from $\\mu^{\\otimes\\breve{N}}$ , and that for target domain $D_{T}=\\bar{\\{}X_{j}^{\\prime}\\}_{j=1}^{M}$ is from \u00b5X $\\mu_{X}^{'\\otimes M}$ ", "page_idx": 18}, {"type": "text", "text": "For each prompt parameter, the population risk in the target domain is defined as ", "page_idx": 18}, {"type": "equation", "text": "$$\nR_{\\mu^{\\prime}}({\\cal P}):=\\mathbb{E}_{Z^{\\prime}\\sim\\mu^{\\prime}}[\\ell({\\cal P},Z^{\\prime})].\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "This risk is the ultimate goal that a UDA algorithm aims to minimize. However, since $\\mu^{\\prime}$ is unknown, and only a finite number of training data is given, we define the empirical risk in the source domain as ", "page_idx": 18}, {"type": "equation", "text": "$$\nR_{D_{S}}(\\pmb{P}):=\\frac{1}{N}\\sum_{i=1}^{N}\\ell(\\pmb{P},\\pmb{Z}_{i}).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "In the information-theoretic analysis framework, model parameter, $P\\in\\mathcal P$ in our case, is a random variable that is outputted from a learning algorithm $\\boldsymbol{\\mathcal{A}}$ characterized by some conditional distribution $P_{P|D_{S},D_{T}}$ . Then the generalization error, measuring how close these two risks can be, has the form ", "page_idx": 18}, {"type": "equation", "text": "$$\nE r r:=\\mathbb{E}_{P,D_{S},D_{T}}[R_{\\mu^{\\prime}}({\\pmb P})-R_{D_{S}}({\\pmb P})],\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where the expectation is taken over ${\\pmb P},D_{S},D_{T}\\sim P_{{\\pmb P}|D_{S},D_{T}},\\mu^{\\otimes N},\\mu_{X}^{'\\otimes M}.$ ", "page_idx": 18}, {"type": "text", "text": "To derive the bound, we need the following assumption on the loss function, which is commonly adopted in many information-theoretic bounds such as those in [112, 113]: ", "page_idx": 18}, {"type": "text", "text": "Assumption A.1. (Subgaussianity). $\\ell(P;Z^{\\prime})$ is R-subgaussian under $P_{P,Z^{\\prime}|X_{j}^{\\prime}=x_{j}^{\\prime}},\\forall\\pmb{x}_{j}^{\\prime}\\in\\mathcal{X}$ , for any $P\\in\\mathcal P$ . ", "page_idx": 18}, {"type": "text", "text": "We also present the definitions of Mutual Information, Disintegrated Mutual Information, and Conditional Mutual Information: ", "page_idx": 18}, {"type": "text", "text": "Definition A.2. (Mutual Information). $I(X;Y)=\\mathrm{{KL}}(P_{X,Y}||P_{X}\\otimes P_{Y})$ , where KL is the KLdivergence and $\\otimes$ denote the product of two marginal distributions. ", "page_idx": 18}, {"type": "text", "text": "Definition A.3. (Disintegrated Mutual Information). The disintegrated mutual information between two random variables $X$ and $Y$ given a realization of a variable $Z=z$ is ", "page_idx": 18}, {"type": "equation", "text": "$$\nI^{Z=z}(X;Y)=\\mathrm{KL}(P_{X,Y|Z=z}||P_{X|Z=z}\\otimes P_{Y|Z=z})\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Definition A.4. (Conditional Mutual Information). $I(X,Y|Z)=\\mathbb{E}_{Z}I^{Z}(X;Y).$ ", "page_idx": 18}, {"type": "text", "text": "Theorem A.5. Under assumption A.1, the generalization error can be upper-bounded by ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\left\\vert E r r\\right\\vert\\leq\\sqrt{\\frac{4R^{2}}{N}\\sum_{t=1}^{T}\\frac{\\eta_{t}^{2}}{\\sigma_{t}^{2}}\\mathbb{E}_{P_{t-1},D_{S},D_{T}}[\\left\\|g_{t}^{s r c}\\right\\|^{2}+\\|g_{t}^{t g t}\\|^{2}+\\|g_{t}^{s r c}-g_{t}^{t g t}\\|^{2}]}+\\sqrt{2R^{2}K L(\\mu||\\mu^{\\prime})},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $\\tau$ is the total number of training iterations, $\\eta_{t}$ is the learning rate at iteration $t$ , $\\boldsymbol{P}_{t}$ is the prompt at iteration $t$ , $\\pmb{g}_{t}^{s r c}=\\nabla_{P}\\mathcal{L}_{s r c}(\\pmb{P}_{t-1})$ , $\\pmb{g}_{t}^{t g t}=\\nabla_{P}\\mathcal{L}_{t g t}(\\pmb{P}_{t-1})$ are the gradients w.r.t $P_{t-1}$ of source loss Eq.2 and target loss Eq.3, and $\\sigma_{t}$ is the standard deviation of the isotropic Gaussian noise added to the update of $\\mathbf{}P_{t}$ . ", "page_idx": 19}, {"type": "text", "text": "Remark A.6. For the purpose of simplicity, here we consider a \u2019noisy\u2019 update version of prompts: $P_{t}\\,=\\,P_{t-1}\\,-\\,\\eta_{t}g\\,+\\,N_{t},N_{t}\\,\\sim\\,\\mathcal{N}(\\mathbf{0},\\sigma_{t}^{2}I)$ . However, note that the bound still holds for the conventional SGD update, i.e., no added noise, by following techniques in [113]. ", "page_idx": 19}, {"type": "text", "text": "Remark A.7. Our methods align gradients of shared-prompt, but here we can omit its subscript in the inter-domain gradient matching term, $\\lVert\\pmb{g}_{t}^{s r c}-\\pmb{g}_{t}^{t g t}\\rVert^{2}$ , by noting that ${\\pmb g}_{t}^{s r c}=[{\\pmb g}_{t}^{s h,s r c},{\\pmb g}_{t}^{S},{\\bf0}]$ , gtS , 0] and $\\pmb{g}_{t}^{t g t}=[\\pmb{g}_{t}^{s h,t g t},\\mathbf{0},\\pmb{g}_{t}^{T}]$ . Indeed, $\\|g_{t}^{s r c}-g_{t}^{t g t}\\|^{2}=\\|g_{t}^{s r c}\\|^{2}+\\|g_{t}^{t g t}\\|^{2}-2(g_{t}^{s h,s r c})^{\\mathbb{T}}g_{t}^{s h,t g t}$ gsh,tgt, where T denotes the vector transpose. In addition, this bound suggests maximizing the dot product between gradients; however, to stabilize training, we aim to maximize the cosine similarity instead. ", "page_idx": 19}, {"type": "text", "text": "This theorem suggests that penalizing gradient norm and matching gradients across domains can improve generalization on the target domain, i.e., the first term in the R.H.S of A.5 is minimized. Note that minimizing gradient norm has been widely used in [59, 81, 114] to control the sharpness of the loss landscape, which is strongly related to the generalization capability of the model. In this work, we can empirically and theoretically verify the effectiveness of this technique in the gradient space of prompt, consistent with results in previous works [115, 116]. ", "page_idx": 19}, {"type": "text", "text": "Regarding the second term, we do not aim for a method that can explicitly reduce the gap between source and target distributions, because we do not want to remove any domain-specific features that may be helpful for prediction. Instead, we want to capture domain-agnostic features in the shared prompt, and specific features in the domain-specific ones so that at inference, a more meaningful representation can be obtained by using these prompts. Hence, one possible direction for future work is to design and learn prompts such that domain distribution alignment can also be achieved. ", "page_idx": 19}, {"type": "text", "text": "Finally, this bound can grow as the number of training iterations increases unless gradient norms and the difference between source and target gradients are extremely small at final iterations. Future work could be overcoming this limitation by considering other bounds, such as ones suggested in [117]. ", "page_idx": 19}, {"type": "text", "text": "Proof. Our bound is inspired from the bound in Theorem 5.1 in [112], which is restated as the following lemma ", "page_idx": 19}, {"type": "text", "text": "Lemma A.8. Under assumption A.1, the generalization error can be upper-bounded by ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle|E r r|\\leq\\frac{1}{N M}\\sum_{j=1}^{M}\\sum_{i=1}^{N}\\mathbb{E}_{{\\pmb X}_{j}^{\\prime}}\\sqrt{2R^{2}I^{\\pmb X_{j}^{\\prime}}(\\pmb P;\\pmb Z_{i})}+\\sqrt{2R^{2}K L(\\mu||\\mu^{\\prime})}}}\\\\ {{\\displaystyle\\leq\\sqrt{\\frac{2R^{2}}{N}I(\\pmb P;D_{S}|D_{T})}+\\sqrt{2R^{2}K L(\\mu||\\mu^{\\prime})}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Now consider the \u2019noisy\u2019 update of the prompt as presented in Eqs. 6 and 5: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{P_{t}=P_{t-1}-\\eta_{t}(\\nabla_{P}\\mathcal{L}_{s r c}(P_{t-1})+\\nabla_{P}\\mathcal{L}_{t g t}(P_{t-1}))+N_{t}}\\\\ &{\\quad\\quad:=P_{t-1}-\\eta_{t}\\mathbf{g}_{t}^{s r c}-\\eta_{t}\\mathbf{g}_{t}^{t g t}+N_{t}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Assume that we obtain the final prompts after $\\tau$ iterations, then following the chain rule of mutual information and data processing inequality, we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{I(P_{T-1},D_{S}|D_{T})=I(P_{T-1}-\\eta_{T}g_{T}^{e f}-\\eta_{T}g_{T}^{e f}+N_{T};D_{S}|D_{T})}&{}\\\\ {\\leq\\ I\\left(P_{T-1}-\\eta_{T}g_{T}^{e f}-\\eta_{T}g_{T}^{e f}+N_{T};D_{S}|D_{T}\\right)}&{}\\\\ {=I(P_{T-1},D_{S}|D_{T})+I(-\\eta_{T}g_{T}^{e f}-\\eta_{T}g_{T}^{e f}+N_{T};D_{S}|D_{T}}\\\\ {\\ }&{\\ }\\\\ {\\vdots}\\\\ {\\leq\\displaystyle\\sum_{t=1}^{T}I(-\\eta_{t}g_{t}^{e f}-\\eta_{t}g_{t}^{e f}+N_{t};D_{S}|D_{T},P_{t-1})}\\\\ {=\\displaystyle\\sum_{t=1}^{T}I(-\\eta_{t}^{e f}-g_{t}^{e f}+N_{t};P_{t},P_{t-1})}&{}\\\\ {\\leq\\displaystyle\\sum_{t=1}^{T}I\\left(-g_{t}^{e f}+\\frac{N_{t}}{2D_{t}},-g_{t}^{e f}+\\frac{N_{t}}{2D_{t}},D_{S}|D_{T},P_{t-1}\\right)}\\\\ {\\ }&{\\ }\\\\ {-\\displaystyle\\sum_{t=1}^{T}I\\left(-g_{t}^{e f}+\\frac{N_{t}}{2D_{t}},D_{S}|D_{T},P_{t-1}\\right)}&{}\\\\ {\\ }&{\\ }\\\\ {\\quad+I\\left(-g_{t}^{e f}+\\frac{N_{t}}{2D_{t}},D_{S}|D_{T},P_{t-1},-g_{t}^{e f}+\\frac{N_{t}}{2D_{t}}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Eq. 21 is due to the assumption of independence of $P_{0}$ w.r.t $D_{S}$ and $D_{T}$ , and Eq. 22 is because mutual information is scale-invariant. ", "page_idx": 20}, {"type": "text", "text": "Consider the first term in Eq. 24, for all $t$ , inspired by the proof of Lemma 3 in [118], we have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I\\left(-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}};D_{S}|D_{T},P_{t-1}\\right)}\\\\ &{=\\mathbb{E}_{D_{S},D_{T},P_{t-1}}\\big[\\mathrm{KL}\\left(P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1},D_{S}}|P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1}}\\right)\\big]}\\\\ &{=\\mathbb{E}_{D_{S},D_{T},P_{t-1}}\\big[\\mathrm{KL}\\left(P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1},D_{S}}||P_{\\tilde{G}_{t}|D_{T},P_{t-1}}\\right)-\\mathrm{KL}\\left(P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1}}||P_{\\tilde{G}_{t}|D_{T},P_{t-1}}\\right)}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad(2\\mathbb{E}_{D_{S},D_{T},P_{t-1}})}\\\\ &{\\le\\mathbb{E}_{D_{S},D_{T},P_{t-1}}\\big[\\mathrm{KL}\\left(P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1},D_{S}}||P_{\\tilde{G}_{t}|D_{T},P_{t-1}}\\right)\\big],}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where $P_{\\tilde{G}_{t}|D_{T},P_{t-1}}$ is some random distribution, every choice of which results in a upper bound for the MI, and the equality holds when $\\begin{array}{r}{P_{\\tilde{G}_{t}|D_{T},P_{t-1}}=P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}|D_{T},P_{t-1}}.}\\end{array}$ . ", "page_idx": 20}, {"type": "text", "text": "Therefore, if we choose $\\begin{array}{r}{P_{\\tilde{G}_{t}|D_{T},P_{t-1}}=\\mathcal{N}(\\mathbf{0},\\frac{\\sigma_{t}^{2}}{4\\eta_{t}^{2}}I)}\\end{array}$ , the R.H.S of Eq. 27 will be upper-bounded by $\\frac{2\\eta_{t}^{2}}{\\sigma_{t}^{2}}\\mathbb{E}_{D_{S},D_{T},{P_{t-1}}}\\left[||\\pmb{g}_{t}^{s r c}||^{2}\\right]$ , which is derived from the KL-divergence between two Gaussian distributions. ", "page_idx": 20}, {"type": "text", "text": "Similarly for the second term in Eq. 24, choosing $\\begin{array}{r}{P_{\\tilde{G}_{t}|D_{T},P_{t-1},-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}}=\\mathcal{N}(\\mathbf{0},\\frac{\\sigma_{t}^{2}}{4\\eta_{t}^{2}}I)}\\end{array}$ gives us the upper bound 2\u03c3\u03b72t2EDS,DT ,P t\u22121 ||gttg t||2 . Furthermore, letting P G\u02dct|DT ,P t\u22121,\u2212gtsrc+ Nt = $P_{-g_{t}^{s r c}+\\frac{N_{t}}{2\\eta_{t}}}$ , which is also a Gaussian distribution due to the effect of the added noise, we reach the gradient matching term, $\\begin{array}{r}{\\frac{2\\eta_{t}^{2}}{\\sigma_{t}^{2}}\\mathbb{E}_{D_{S},D_{T},{P}_{t-1}}\\big[||g_{t}^{s r c}-g_{t}^{t g t}||^{2}\\big].}\\end{array}$ ", "page_idx": 20}, {"type": "text", "text": "Note that in Eq. 15, we suppose the source-weight term $\\lambda=1$ to simplify proof. However, if one wishes to keep the impact of $\\lambda$ , they can change $\\pmb{g}_{t}^{s r c}=[\\lambda\\pmb{g}_{t}^{s h,s r c},\\pmb{g}_{t}^{S},\\mathbf{0}]$ . In this case, the terms under the expectation in the bound will become: $(\\lambda^{2}\\!-\\!1)||g_{t}^{s h,s r c}||^{2}\\!+\\!||g_{t}^{s r c}||^{2}\\!+\\!||g_{t}^{t g t}||^{2}\\!+\\!||g_{t}^{t g t}\\!-\\!\\lambda g_{t}^{s r c}||^{2}$ . Combining everything together, the proof is done. \u53e3 ", "page_idx": 20}, {"type": "text", "text": "B Algorithm ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "B.1 Final objectives ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "As we cast UDA as a MOO problem, the ideal final objectives, in the case of single-source UDA, would be ", "page_idx": 21}, {"type": "equation", "text": "$$\n[\\mathcal{L}_{S}^{\\mathrm{PGA}}(P),\\mathcal{L}_{T}^{\\mathrm{PGA}}(P)],\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "where ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{T}^{\\mathrm{PGA}}(P):=\\mathcal{L}_{T}(P_{s h}-\\rho_{g a}\\frac{g_{s h,S}}{\\|g_{s h,S}\\|.\\|g_{s h,T}\\|}+\\rho_{g n}\\frac{g_{s h,T}}{\\|g_{s h,T}\\|},P_{T}+\\rho_{g n}\\frac{g_{T}}{\\|g_{T}\\|}),}\\\\ &{\\mathcal{L}_{S}^{\\mathrm{PGA}}(P):=\\mathcal{L}_{S}(P_{s h}-\\rho_{g a}\\frac{g_{s h,T}}{\\|g_{s h,S}\\|.\\|g_{s h,T}\\|}+\\rho_{g n}\\frac{g_{s h,S}}{\\|g_{s h,S}\\|},P_{S}+\\rho_{g n}\\frac{g_{S}}{\\|g_{S}\\|}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "As aforementioned, we use scalarization method, i.e. reweighting loss functions with $\\lambda$ put on the PGA source objective. As a result, the PGA gradient updates for prompts are ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{g_{s h,T}^{\\mathrm{pGA}},g_{T}^{\\mathrm{pGA}}:=\\nabla_{P}\\mathcal{L}_{T}^{\\mathrm{pGA}}(P),\\quad g_{s h,S}^{\\mathrm{pGA}},g_{S}^{\\mathrm{pGA}}:=\\nabla_{P}\\mathcal{L}_{S}^{\\mathrm{pGA}}(P),}&{}\\\\ {P_{S}=P_{S}-\\eta g_{S}^{\\mathrm{pGA}},\\qquad\\qquad\\quad P_{T}=P_{T}-\\eta g_{T}^{\\mathrm{pGA}},}&{}\\\\ {P_{s h}=P_{s h}-\\eta(g_{s h,T}^{\\mathrm{pGA}}+\\lambda g_{s h,S}^{\\mathrm{pGA}}).}&{}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "However, computing these PGA gradients will trigger the computation of the Hessian matrix. Hence, we approximate them with a practical version: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{s h,T}^{\\mathrm{PGA}},g_{T}^{\\mathrm{PGA}}:=\\nabla_{P}\\mathcal{L}_{T}^{\\mathrm{PGA}}(P)}\\\\ &{\\qquad\\qquad\\approx\\nabla_{P}\\mathcal{L}_{T}(P_{s h},P_{T})\\big|_{P_{s h}=P_{s h}-\\rho_{g a}\\frac{g_{s h,S}}{\\|g_{s h,S}\\|\\cdot\\|g_{s h,T}\\|}+\\rho_{g n}\\frac{g_{s h,T}}{\\|g_{s h,T}\\|},P_{T}=P_{T}+\\rho_{g n}\\frac{g_{T}}{\\|g_{T}\\|}\\,,}\\\\ &{g_{s h,S}^{\\mathrm{PGA}},g_{S}^{\\mathrm{PGA}}:=\\nabla_{P}\\mathcal{L}_{S}^{\\mathrm{PGA}}(P)}\\\\ &{\\qquad\\qquad\\approx\\nabla_{P}\\mathcal{L}_{S}(P_{s h},P_{S})\\big|_{P_{s h}=P_{s h}-\\rho_{g a}\\frac{g_{s h,T}}{\\|g_{s h,S}\\|\\cdot\\|g_{s h,T}\\|}+\\rho_{g n}\\frac{g_{s h,S}}{\\|g_{s h,S}\\|},P_{S}=P_{S}+\\rho_{g n}\\frac{g_{S}}{\\|g_{S}\\|}\\,.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "B.2 Extension to Multi-source UDA ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Our method can be easily extended to work with multi-source domains by noting that the target gradient is aligned with each of the source gradients. ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{s h,T}^{\\mathrm{PGA}},g_{T}^{\\mathrm{PGA}}:=\\nabla_{P}\\mathcal{L}_{T}^{\\mathrm{PGA}}(P),}\\\\ &{g_{s h,i}^{\\mathrm{PGA}},g_{S,i}^{\\mathrm{PGA}}:=\\nabla_{P}\\mathcal{L}_{S,i}^{\\mathrm{QGA}}(P),\\forall i=1\\rightarrow N}\\\\ &{\\quad\\quad\\quad P_{S,i}=P_{S,i}-\\eta g_{S,i}^{\\mathrm{QA}},\\forall i=1\\rightarrow N}\\\\ &{\\quad\\quad\\quad P_{T}=P_{T}-\\eta g_{T}^{\\mathrm{PGA}},}\\\\ &{\\quad\\quad\\quad P_{s h}=P_{s h}-\\eta(g_{s h,T}^{\\mathrm{PGA}}+\\lambda\\sum_{i}g_{s h,i}^{\\mathrm{PGA}}),}\\\\ &{g_{s h,T}^{\\mathrm{PGA}},g_{T}^{\\mathrm{PGA}}\\approx\\nabla_{P}\\mathcal{L}_{T}(P_{s h},P_{T})\\vert_{P_{s h}=P_{s h}-\\rho_{g a}\\sum_{i}}\\frac{g_{s h,i}}{\\Vert g_{s h,i}\\Vert_{B}\\Vert_{B}\\Vert_{T}\\Gamma}+\\rho_{g_{n h,T}\\Vert_{B}\\Vert_{T}},P_{T}=P_{T}+\\rho_{g n}\\frac{g_{T}}{\\Vert g_{T}\\Vert_{B}\\Vert_{T}\\Vert_{B}\\Vert_{B}\\Vert_{T}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "equation", "text": "", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "The details of our proposed method for the general case of $N$ source domains are presented in Algorithm 1. When $N=1$ , our method degrades to PGA. ", "page_idx": 21}, {"type": "text", "text": "C Experimental details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In this section, we provide additional information for our experimental settings in Section C.1 and C.2 then include detailed ablation studies and other empirical results in Section C.3. ", "page_idx": 21}, {"type": "text", "text": "Algorithm 1 Prompt gradient alignment for unsupervised domain adaptation ", "page_idx": 22}, {"type": "text", "text": "Input: Prompt $P=[P_{s h},\\{P_{S,i}\\}_{i=1}^{N},P_{T}]$ , gradient norm penalization trade-off $\\rho_{\\mathrm{gn}}$ , alignment strength $\\rho_{\\mathrm{ga}}$ , source-gradient trade-off $\\lambda$ , learning rate $\\eta$ .   \nOutput: Updated prompt $P^{*}$   \n1: Compute target loss $\\mathcal{L}_{T}(P_{s h},P_{T})$ as in Eq. 3   \n2: Compute gradients of shared and target-specific prompts w.r.t target loss $\\bar{\\mathbf{g}_{s h,T}},\\mathbf{g}_{T}\\leftarrow\\nabla_{P}\\mathcal{L}_{T}(\\mathbf{P}_{s h},\\bar{\\mathbf{P}}_{T})$   \n3: Compute source losses $\\mathcal{L}_{S,i}(P_{s h},P_{S,i})$ as in Eq. 2   \n4: Compute gradient of shared and source-specific prompts w.r.t each source loss $g_{s h,i}^{\\phantom{\\dagger}},g_{S,i}^{\\phantom{\\dagger}}\\leftarrow\\nabla_{\\!P}\\mathcal{L}_{S,i}(P_{s h},P_{S,i}^{\\phantom{\\dagger}}),\\forall i=1\\rightarrow N$   \n5:  CCoommppuuttee $g_{s h,T}^{\\mathrm{PGA}},g_{T}^{\\mathrm{PGA}}$ aass  iinn  EEqq..   \n6:  gsPhG,Ai, gPS,GiA $29\\;\\forall i=1\\rightarrow N$   \n7: Compute combined gradient of shared prompt gsPhGA $\\begin{array}{r}{\\pmb{g}_{s h}^{\\mathrm{PGA}}=\\pmb{g}_{s h,T}^{\\mathrm{PGA}}+\\lambda\\sum_{i}\\pmb{g}_{s h,i}^{\\mathrm{PGA}}}\\end{array}$   \n8: Update prompt $P^{*}=[P_{s h},\\{P_{S,i}\\}_{i=1}^{N},P_{T}]-\\eta[g_{s h}^{\\mathrm{PGA}},\\{g_{S,i}^{\\mathrm{PGA}}\\}_{i=1}^{N},g_{T}^{\\mathrm{PGA}}]$ ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 22}, {"type": "equation", "text": "", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "C.1 Datasets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "ImageCLEF is a small-scaled dataset with 1,800 images across 12 object categories from three domains: ImageNet ILSVRC 2012 (I), Pascal VOC 2012 (P), and Caltech-256 (C). Office-Home is a medium-scaled dataset containing approximately 15,500 images from 65 categories in four domains: Art, Clipart, Product, and Real World. DomainNet is the largest dataset, comprising around 600,000 images from 345 categories across six domains: Clipart, Infograph, Painting, Quickdraw, Real, and Sketch. ", "page_idx": 22}, {"type": "text", "text": "C.2 Implementation details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "For fair comparisons, we use a ResNet50 as our backbone on Image-CLEF and Office-Home and a ResNet101 on DomainNet. Their weights are taken from pretrained-CLIP and kept frozen during training. Prompts are trained with the mini-batch SGD optimizer with a learning rate of 0.003 and 0.005. We use a batch size of 32 and adopt a cosine learning rate scheduler. For hyper-parameters, token lengths $M_{1}$ and $M_{2}$ are both set to 16. Pseudo-label threshold $\\tau$ is set to 0.4 for producing reliable labels. $\\rho_{g n},\\rho_{g a}$ and $\\lambda$ are found using grid-search. Details are provided in the public source code. ", "page_idx": 22}, {"type": "text", "text": "During inference, we average the prediction of both source $P_{S}$ and target $P_{T}$ prompts, which empirically yield the best performance. Please note that the inference cost remains almost the same as using a pretrained CLIP as computing class embeddings is an one-time-cost. The complexity grows linearly with the number of prompts during training $\\langle=2$ with PGA and $N+1$ in the case of MPGA), which is typically not a big issue in practice since the model training can quickly converge by fine-tuning under intrinsic dimension [119]. We further confirm this in the computation complexity ablation study below. ", "page_idx": 22}, {"type": "text", "text": "C.3 Additional experiments ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "C.3.1 Illustrative example ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "We run a small multi-objective-optimization problem on the ZDT-1 problem [120]. The ZDT-1 problems have a 30-dimensional variable and two differentiable objective functions $f_{1},f_{2}$ : ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\operatorname*{min}f_{1}(x)}\\\\ {\\operatorname*{min}f_{2}(x)=g(x)h\\left(f_{1}(x),g(x)\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "The function $g(x)$ can be considered as the function for convergence, their formulas are given by: ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{c l c r}{{f_{1}(x)=x_{1}}}\\\\ {{g(x)=1+\\displaystyle\\frac{9}{n-1}\\sum_{i=2}^{n}x_{i}}}\\\\ {{h\\left(f_{1},g\\right)=1-\\sqrt{f_{1}/g}}}\\\\ {{0\\leq x_{i}\\leq1\\,\\,\\,\\,\\,i=1,\\ldots,n}}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "with the Pareto solutions are given by: ", "page_idx": 23}, {"type": "equation", "text": "$$\n0\\leq x_{1}^{*}\\leq1\\;\\;\\;\\;\\;{\\mathrm{and}}\\;\\;\\;\\;\\;x_{i}^{*}=0\\;{\\mathrm{for}}\\,i=2,\\ldots,n\n$$", "text_format": "latex", "page_idx": 23}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/3c016739b1237a6de5fed11aaf85904bf8264aa6d67647061da8425bb30f4f2d.jpg", "img_caption": ["Figure 4: ZDT-1 task-specific gradient directions at different iterations. Red curve represents the Pareto front while the blue and green arrows indicate the updating directions for minimizing $f_{1}$ and $f_{2}$ , respectively. "], "img_footnote": [], "page_idx": 23}, {"type": "text", "text": "As can be seen from Figure 4, the cosine similarity increases at the beginning of the training and then decreases when the obtained solution reach the region near the Pareto front. This behavior aligns with the gradient similarity evolution experiment in the main paper. ", "page_idx": 23}, {"type": "text", "text": "C.3.2 Large-scale single-source unsupervised domain adaptation ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Apart from those experiments in the main paper, we expand the single-source unsupervised domain adaptation setup by including the empirical results on two large-scale synthetic-to-real benchmark for classification adaptation S2RDA-49 and S2RDA-MS-39 [121]. For each task, synthetic samples are created by rendering 3D models from ShapeNet, matching the label space of the real/target domain, with 12K RGB images per class. The S2RDA-49 real domain contains 60,535 images across 49 classes from various sources including the ImageNet validation set. The S2RDA-MS-39 real domain includes 41,735 natural images for 39 classes from MetaShift, featuring complex contexts like object co-occurrence and attributes, which adds to the task\u2019s difficulty. ", "page_idx": 23}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/e5b51c6243d944aaa2e24bf27dd8e899f803f44183ffee1173674454ee55c58e.jpg", "table_caption": ["Table 6: Unsupervised domain adaptation results on S2RDA. The best accuracy is indicated in bold. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Table 6 illustrates accuracy and mean score over classes, where utilizing pretrained vision-language models still shows their impressive performance. Using pretrained CLIP standalone outperforms other traditional DA methods and PGA further boosts the performance by large margins, $4\\%$ on S2RDA-49 and $1.5\\%$ on S2RDA-MS-39, respectively. ", "page_idx": 23}, {"type": "text", "text": "C.3.3 Ablation studies ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Similar to previous work on CLIP adaptation[25, 28], we vary the pseudo label threshold $\\tau$ value to study its sensitivity. As can be seen in Figure 7, both PGA and MPGA\u2019s performance is relatively stable across different values of $\\tau$ , indicating that our methods are not sensitive to $\\tau$ , and the best result is obtained at a reasonable trade-off between the quantity and quality of pseudo data. ", "page_idx": 24}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/a1ba3d8def5d7690400a7db687d9878897c4ab335850114847f9f099033c4d9a.jpg", "table_caption": ["Table 7: Accuracy $(\\%)$ of different threshold $\\tau$ on ImageCLEF. "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "In Figure 5, we provide the complexity for some comparative baselines. Accuracy curve (left): While DANN and CDAN obtain their best performance at approximately $77\\%$ after more than 1000s, PGA and MPGA achieve $84\\%$ within 100s. Besides, the first stage of pairwise source-target training of MPA takes 159s, followed by 35s for the second stage to actually train the final model. Number of Trainable Parameters (middle): PGA and MPGA, with fewer than $140\\mathbf{k}$ parameters, require significantly fewer parameters than MPA, DANN and CDAN, which have around 1M, 48.9M and 51.7M parameters, respectively. GPU Memory Usage (right) PGA, MPGA, and MPA exhibit substantially lower memory footprints, around 1300MB compared to 7000MB of DANN and CDAN throughout training. ", "page_idx": 24}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/162370ac13d2396782e34a60aa6a00138f2322857c0b93792836fbd73daead38.jpg", "img_caption": ["Figure 5: Computational complexity: accuracy curve (left), number of trainable parameters (middle), and GPU memory (right). "], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "Figure 6 shows that PGA is generally not sensitive to $\\rho_{g a}$ and $\\rho_{g n}$ within their acceptable range, i.e. 1e-2 to 10 for $\\rho_{g a}$ and 1e-5 to 0.1 for $\\rho_{g n}$ . Specifically, (i) a too large value of $\\rho_{g n}$ is less effective than smaller ones; (ii) ImageCLEF prefers larger values of $\\rho_{g a}$ while OfficeHome prefers smaller ones, suggesting that source and target domains in the former dataset may be more similar than those in the latter, hence over-matching gradients in the latter dataset may be adverse. ", "page_idx": 24}, {"type": "image", "img_path": "14hLJr6kZ3/tmp/421ae3bc59bd1f8ed5a635739e84b73a7134c9328ee7ace2bc394b208e8237bd.jpg", "img_caption": [], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "Figure 6: Parameter sensitivity analysis on $\\rho_{g n}$ and $\\rho_{g a}$ of PGA on ImageCLEF and Office-Home with CLIP-RN50 backbone. ", "page_idx": 24}, {"type": "text", "text": "We present results of our methods using ViT-B/16, ViT-L/14 backbones on OfficeHome in Tables 8 and 9, following experimental setups in [122, 123]. We can observe the superiority of our methods among all baselines while finetuning a small portion of the backbones using prompt tuning. Especially, PGA outperforms the second-best method on ViT-B/16 backbone by $\\approx1\\%$ accuracy score. ", "page_idx": 25}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/5c7a1a15220d2b6716e1cb31375633d3226ceb345745eee05e111433ce5d679f.jpg", "table_caption": ["Table 8: Accuracy $(\\%)$ on Office-Home of ViT-based vision encoder CLIP backbones (except CDTrans\\* uses DeiT). The overall best accuracy and best within per backbone are indicated in bold and underscore, respectively. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "Following a different protocol, Table 9 provides the results of ViT-L/14 backbones on Office-Home but with three source domains per category on Art, Clipart, Realworld and Product domain. In this setup, MPGA and PGA still consistently yield the best and second-best scores among all categories. ", "page_idx": 25}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/94586af821c9d5b0947891018fcc69a6bf6f7de99b6c3e296f28f3ba39df6e24.jpg", "table_caption": ["Table 9: Three-source domain adaptation of the Office-Home dataset on ViT-L/14. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "C.3.4 Domain adaptation with label shift ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "This section is to study how does the method performs when there are extreme label distribution shifts between source and target domains. We test PGA on the setting of label shift following [124], where the source or target domains are down-sampled with only $30\\%$ of data from the first-half of the classes are taken (indicated by s- prefix). ", "page_idx": 25}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/e3839402d367290435acb86f8cd3534146a2361d3dd198ab900423a1d3a3d901.jpg", "table_caption": ["Table 10: Accuracy $(\\%)$ on the sub-sampled Office-Home for unsupervised domain adaptation. The prefix s- denotes the domain where we sample only $30\\%$ of the images from the first half of its classes, following the label shift setting from prior work. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "Label-shift results presented in Table 10 and 11 below and Table 5 in the main text show the effectiveness of PGA on different levels of label shift. PGA consistently yields superior performance on every sub-experiment under these two setups. ", "page_idx": 25}, {"type": "table", "img_path": "14hLJr6kZ3/tmp/694be5baa9c04e0d18aa08fab26339936d103bec4e3162ea6532dd4df2f1a194.jpg", "table_caption": ["Table 11: Accuracy $(\\%)$ on the sub-sampled (target) Office-Home for unsupervised domain adaptation. "], "table_footnote": [], "page_idx": 26}, {"type": "text", "text": "C.4 Training Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "All experiments are run on Intel(R) Xeon(R) Platinum 8358 CPU $\\textcircled{a}2.60\\mathrm{GHz}$ and NVIDIA A100- SXM4-80GB GPU. ", "page_idx": 26}, {"type": "text", "text": "D Additional related work ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Another work sharing the same intuition of gradient alignment is ProGrad [125], which manipulates gradient of the fine-tuned loss to preserve general knowledge of the pretrained model. Similar to other gradient-based MTL methods [34, 35], it attempts to remove conflicts between per-objective gradients at each time step, thus is orthogonal to our approach. In contrast, we aim to stimulate their inherent consensus throughout training by encouraging the same training trajectory for both domains, hence, the model can find commonly good regions for them. Another concept that relates to gradient alignment is meta-learning. This has been introduced to Domain generalization in [126, 127]. Their intuition is a training procedure that enables the model to achieve low loss on a subset of training domains after having learned the other ones, and they work on the full model space. In a recent work about Vision-Language Models [128], meta-learning was used to deal with the problem of few-shot prompt learning by meta-learning prompt initialization. The gradient of the inner loop is modified with a learnable regulating function, and data for the support and query sets are found by hierarchically clustering an auxiliary large-scale image-text dataset. This method also has the impact of aligning gradient between support and query data as a result of meta-learning. However, its computation and space complexity is rather large as it requires the computation of Hessian matrix, web-scale of image-text pairs, and meta-learns the soft initialization for prompts. ", "page_idx": 26}, {"type": "text", "text": "E Limitations and Future works ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "First, our work relies on pretrained-CLIP, meaning that if UDA data is too different from pretrained knowledge, our method may fail to learn adequately. Therefore adapting our method to scratchtraining scenarios without heavy computation and space complexity should be investigated. Second, the derived bound can be potentially loose as the number of training iterations increases. Thus studying other types of bounds could be an interesting work. Finally, as we mentioned, a strategy to explicitly align feature distribution across domains is worth looking into. ", "page_idx": 26}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "The checklist is designed to encourage best practices for responsible machine learning research, addressing issues of reproducibility, transparency, research ethics, and societal impact. Do not remove the checklist: The papers not including the checklist will be desk rejected. The checklist should follow the references and follow the (optional) supplemental material. The checklist does NOT count towards the page limit. ", "page_idx": 27}, {"type": "text", "text": "Please read the checklist guidelines carefully for information on how to answer these questions. For each question in the checklist: ", "page_idx": 27}, {"type": "text", "text": "\u2022 You should answer [Yes] , [No] , or [NA] .   \n\u2022 [NA] means either that the question is Not Applicable for that particular paper or the relevant information is Not Available.   \n\u2022 Please provide a short (1\u20132 sentence) justification right after your answer (even for NA). ", "page_idx": 27}, {"type": "text", "text": "The checklist answers are an integral part of your paper submission. They are visible to the reviewers, area chairs, senior area chairs, and ethics reviewers. You will be asked to also include it (after eventual revisions) with the final version of your paper, and its final version will be published with the paper. ", "page_idx": 27}, {"type": "text", "text": "The reviewers of your paper will be asked to use the checklist as one of the factors in their evaluation. While \"[Yes] \" is generally preferable to \"[No] \", it is perfectly acceptable to answer \"[No] \" provided a proper justification is given (e.g., \"error bars are not reported because it would be too computationally expensive\" or \"we were unable to find the license for the dataset we used\"). In general, answering \"[No] \" or \"[NA] \" is not grounds for rejection. While the questions are phrased in a binary way, we acknowledge that the true answer is often more nuanced, so please just use your best judgment and write a justification to elaborate. All supporting evidence can appear either in the main paper or the supplemental material, provided in appendix. If you answer [Yes] to a question, in the justification please point to the section(s) where related material for the question can be found. ", "page_idx": 27}, {"type": "text", "text": "IMPORTANT, please: ", "page_idx": 27}, {"type": "text", "text": "\u2022 Delete this instruction block, but keep the section heading \u201cNeurIPS paper checklist\", \u2022 Keep the checklist subsection headings, questions/answers and guidelines below. \u2022 Do not modify the questions and only use the provided macros for your answers. ", "page_idx": 27}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: The main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 27}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We reported our computational complexity and also have a discussion section in Appendix. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 28}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: We provided full assumption and proof of our theory in appendix Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 28}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We reported detailed descriptions and hyperparameters for all experiments. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 29}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: Our reproducible codebase is published in https://github.com/ VietHoang1512/PGA. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. ", "page_idx": 29}, {"type": "text", "text": "\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). \u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 30}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We provide detailed settings and hyperparameters for all experiments. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 30}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We conducted the illustrative experiment ten times independently with different random seeds and reported the mean and standard derivation of the result. The other experiment setups follow the protocol of prior well-known work. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 30}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We mention about compute resources in Appendix. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 31}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We follow the NeurIPS Code of Ethics. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 31}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: This paper has no negative social impact. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 31}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: All datasets used in our paper are public. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 32}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: All datasets used in our paper are public. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 32}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: There is no new assets introduced in the paper. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 32}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: There are no crowdsourcing experiments and research with human subjects in this paper. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 33}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: There is no potential risks incurred by study participants. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 33}]