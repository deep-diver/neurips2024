[{"type": "text", "text": "Sparse Bayesian Generative Modeling for Compressive Sensing ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Benedikt B\u00f6ck, Sadaf Syed, Wolfgang Utschick TUM School of Computation, Information and Technology Technical University of Munich {benedikt.boeck,sadaf.syed,utschick}@tum.de ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "This work addresses the fundamental linear inverse problem in compressive sensing (CS) by introducing a new type of regularizing generative prior. Our proposed method utilizes ideas from classical dictionary-based CS and, in particular, sparse Bayesian learning (SBL), to integrate a strong regularization towards sparse solutions. At the same time, by leveraging the notion of conditional Gaussianity, it also incorporates the adaptability from generative models to training data. However, unlike most state-of-the-art generative models, it is able to learn from a few compressed and noisy data samples and requires no optimization algorithm for solving the inverse problem. Additionally, similar to Dirichlet prior networks, our model parameterizes a conjugate prior enabling its application for uncertainty quantification. We support our approach theoretically through the concept of variational inference and validate it empirically using different types of compressible signals. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Research in CS has shown that it is possible to reduce the number of measurements far below the one determined by the Nyquist sampling theorem while still being able to extract the information-carrying signal from the acquired observations. The fundamental problem in CS is an ill-posed linear inverse problem, i.e., the goal is to recover the signal $\\pmb{x}^{*}\\in\\mathbb{R}^{N}$ of interest from an under-determined set of measurements $\\pmb{y}\\in\\mathbb{R}^{M}$ with $M\\ll N$ , related by ", "page_idx": 0}, {"type": "equation", "text": "$$\n\\pmb{y}=\\pmb{A}\\pmb{x}^{*}+\\pmb{n},\n$$", "text_format": "latex", "page_idx": 0}, {"type": "text", "text": "where $x^{*}$ is compressed by the measurement matrix $\\pmb{A}$ and potentially corrupted by additive noise $n\\sim\\mathcal{N}(\\mathbf{0},\\sigma_{n}^{2}\\,\\mathbf{I})$ . Since the under-determined observation $\\textit{\\textbf{y}}$ does not carry enough information alone to faithfully reconstruct $x^{*}$ , additional prior (or model) knowledge about $x^{*}$ is required to make the inverse problem \u201cwell-posed\u201d. Classical CS algorithms such as Lasso regression or orthogonal matching pursuit (OMP) address this problem by incorporating the model knowledge that $x^{*}$ is sparse or compressible with respect to some dictionary [1]. Nowadays, modern deep learning (DL)- based approaches such as unfolding algorithms, generative model-based CS and un-trained neural networks (NNs) expand the possibilities by learning prior knowledge from a training set or designing the network architecture to be biased towards a certain class of signals [2\u20136]. These approaches typically require a (potentially large) training set of ground-truth data samples, or their architecture is specifically biased towards natural images. However, in many applications, ground-truth training data might not be easily accessible. In, e.g., electron microscopy, the amount of electron dose has to be restricted to not induce damage on the probe resulting in low-contrast noisy data samples [7]. The sensors in wearable electrocardiography (ECG) monitoring devices generally provide noisy signals with artifacts [8], which limits the ability to learn from patient-specific data in real-world settings. Another example is the wireless 5G communication standard, where mobile users receive compressed and noisy so-called channel observations on a frequent basis (cf. [9]) while acquiring ground-truth channel information requires costly measurement campaigns. Thus, in many applications, it is either impossible or prohibitively expensive to collect lots of ground-truth training data while corrupted data is readily available. This highlights the necessity for methods that can learn from corrupted data samples. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "In this paper, we propose a new learnable prior for solving the inverse problem (1), which can learn from only a few compressed and noisy data samples and, thus, requires no ground-truth information in its training phase. Additionally, it applies to any type of signal, which is compressible with respect to some dictionary. Our approach shares similarities with generative model-based CS [4, 10]. There, a generative model is first trained to capture the exact underlying prior distribution $p(x)$ of the signal $x^{*}$ of interest. It then serves as probabilistic prior to regularize the inverse problem (1). Similarly, classical CS algorithms like Lasso regression also impose a probabilistic prior on the sparse representation of $x^{*}$ with respect to some dictionary [11]. In contrast to modern generative models, however, these priors do not have any generation capabilities but solely bias the inverse problem (1) towards sparse solutions. This observation indicates that a probabilistic prior does not necessarily need to capture the exact prior distribution $p({\\pmb x})$ to effectively regularize (1). The proposed model in this work builds upon this insight and forms a trainable but simultaneously sparsity-inducing prior. For that, we aim to combine the adaptability of generative models to training data with the property of many types of signals $x^{*}$ to be compressible with respect to some dictionary. As a result, our model learns statistical information in the signal\u2019s sparse/compressible domain. Examples of signals with a specific statistical structure in their compressible representation include piecewise smooth functions and natural images, whose wavelet coefficients approximately build a connected sub-tree or wireless channels, which are burst-sparse in their angular domain [12, 13]. ", "page_idx": 1}, {"type": "text", "text": "Related Work. Early work on CS, which considers statistical structure in the wavelet domain of images, is given in [14, 15]. Based on the theoretical foundation in [16] and the concept of SBL [17, 18], these papers introduce a hierarchical Bayesian model, which is used to apply variational inference and Markov chain Monte Carlo (MCMC) posterior sampling to solve (1). Training Gaussian mixture models (GMMs), i.e., classical generative models, from compressed image patches of one or a few images has been analyzed in [19\u201322]. In this line of research, however, the GMM is fit directly in the pixel domain. Compressive dictionary learning represents a different line of research aiming to learn the dictionary from solely compressed data [23\u201326], and strongly bases on the dictionary learning method K-SVD [27]. More recently, variational autoencoders (VAEs) and generative adversarial networks (GANs) have been studied in the context of CS [4, 10]. There, the VAE/GAN is used to solve the inverse problem (1) by constraining the signal $x^{*}$ of interest to lie in the range of the generative model instead of being sparse with respect to some dictionary. In this context, AmbientGAN as well as CSGAN are extensions that loosen up the training set requirements and can learn from corrupted data [28, 29]. Another related topic is the ability of some generative models, i.e., diffusion models, VAEs and GMMs, to provide an approximation of the conditional mean estimator (CME) [30\u201332]. In the case of the latter two, the CME is represented as a tractable convex combination of linear minimum mean squared error (MSE) estimators by exploiting their conditional Gaussianity on a latent space that determines these estimators\u2019 means and covariances. ", "page_idx": 1}, {"type": "text", "text": "Our main contributions are as follows: ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "\u2022 We introduce a new type of sparsity-inducing generative prior for the inverse problem (1), which differs from classical CS algorithms due to its ability to learn from data. On the other hand, it also differs from other modern NN-based approaches due to its ability to promote sparsity in the signal\u2019s compressible domain. Moreover, it can learn from a few corrupted data samples and, thus, requires no ground-truth information in its training phase. \u2022 We theoretically underpin our approach by proving that its training maximizes a variational lower bound of a sparsity inducing log-evidence. \u2022 Building on the notion of conditional Gaussianity, we introduce two specific implementations of the proposed type of prior based on VAEs and GMMs, which do not require an optimization algorithm in their inference phase and come with computational benefits. \u2022 By exploiting the shared property with Dirichlet prior networks to parameterize a conjugate prior, we demonstrate how our approach can be applied for uncertainty quantification. \u2022 We validate the performance on datasets containing different types of compressible signals.1 ", "page_idx": 1}, {"type": "text", "text": "2 Background and Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Notation. The operations $b^{-1}$ , $\\sqrt{b}$ and $|b|^{2}$ denote the respective element-wise operation for the vector $^{b}$ . Moreover, $\\mathrm{diag}(B)$ represents the vectorized diagonal of the matrix $_B$ , while diag $(b)$ denotes the diagonal matrix with the vector $^{b}$ on its diagonal. ", "page_idx": 2}, {"type": "text", "text": "2.1 Problem Formulation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We consider the typical CS setup, in which we measure $N$ -dimensional ground-truth samples $\\pmb{x}_{i}$ by a known measurement matrix $\\boldsymbol{A}\\,\\in\\,\\mathbb{R}^{M\\times N}$ (or $\\pmb{A}_{i}\\;\\in\\;\\mathbb{R}^{M\\times N})$ with $M\\ll\\,N$ , where each observation is potentially corrupted by noise $\\pmb{n}_{i}$ drawn from additive white Gaussian noise (AWGN) $n\\sim\\mathcal{N}(\\mathbf{0},\\sigma_{n}^{2}\\:\\mathbf{\\dot{I}})$ . We assume all $\\pmb{x}_{i}$ to be compressible with respect to a known dictionary matrix $D\\,\\in\\,\\mathbb{R}^{N\\times S}$ , i.e., $\\pmb{y}_{i}\\,=\\,\\pmb{A}\\pmb{D}\\pmb{s}_{i}+\\pmb{n}_{i}$ with $\\pmb{x}_{i}\\,=\\,\\pmb{D}\\pmb{s}_{i}$ and $\\pmb{s}_{i}\\,\\in\\,\\mathbb{R}^{S}$ being approximately sparse. All $s_{i}$ are assumed to be independent and identically distributed (i.i.d.), i.e., $s_{i}\\,\\sim\\,p(s)$ , where $p(s)$ is unknown with $\\pmb{s}$ exhibiting non-trivially dependent entries. Typical signals which fit into this category are, e.g., natural images, piecewise smooth functions, and wireless channels (cf. Section 1). Our approach in this work allows to either solely have access to corrupted training observations $\\mathcal{V}=\\overline{{\\{}}}y_{i}\\}_{i=1}^{N_{t}}$ or training tuples with ground-truth information $\\mathcal{G}=\\{(\\bar{\\mathbf{s}_{i}},\\mathbf{y}_{i})\\}_{i=1}^{N_{t}}$ or $\\pmb{\\mathcal{W}}=\\{(\\pmb{x}_{i},\\pmb{y}_{i})\\}_{i=1}^{N_{t}}$ . We first train the proposed model using $\\boldsymbol{\\wp}$ (or, alternatively, $\\mathcal{G}$ or $\\mathcal{W}$ ) to serve as an effective prior for (1). Our goal is then to estimate a ground-truth signal $x^{*}$ of a newly observed $\\textit{\\textbf{y}}$ . We also define $\\pmb{\\chi}=\\{\\pmb{x}_{i}\\}_{i=1}^{N_{t}}$ and $\\pmb{S}=\\{\\pmb{s}_{i}\\}_{i=1}^{N_{t}}$ . ", "page_idx": 2}, {"type": "text", "text": "2.2 Sparse Bayesian Learning for Compressive Sensing ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In SBL for CS, the idea for solving the inverse problem (1) is to assign a parameterized prior to $s^{*}$ , i.e., the compressible representation of the signal $x^{*}$ of interest with ${\\boldsymbol{x}}^{*}=D{\\boldsymbol{s}}^{*}$ [18]. It assumes ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{y|s^{*}\\sim p(y|s^{*})=\\mathcal{N}(y;A D s^{*},\\sigma^{2}\\,\\mathbf{I}),\\;\\;s^{*}\\sim p_{\\gamma}(s)=\\mathcal{N}(s;\\mathbf{0},\\mathrm{diag}(\\gamma)).}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Given a single observation $\\textit{\\textbf{y}}$ , the parameters $\\gamma$ (and sometimes $\\sigma^{2}$ ) are estimated by an expectationmaximization (EM) algorithm maximizing the corresponding log-evidence $\\log p_{\\gamma}(\\pmb{y})$ implicitly defined by (2). After that, it is utilized that $\\displaystyle p_{\\gamma}(s)$ forms a conjugate prior of $\\b{p}(\\b{\\dot{y}}|\\b{s}^{*})$ resulting in a closed-form posterior $p_{\\gamma}(x|y)$ providing all necessary information to estimate $x^{*}$ . In [18], a variational interpretation of SBL is given, addressing why this approach yields sparse results, even though $p_{\\gamma}(s)$ does not inherently promote sparsity. It is shown that there exists a $C>0$ such that for all $\\gamma>0$ and $\\pmb{s}$ ", "page_idx": 2}, {"type": "equation", "text": "$$\np_{\\gamma}(s)\\leq t(s)=C\\cdot\\prod_{i=1}^{N}{\\frac{1}{|s_{i}|}}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The function $t(s)$ , however, is a well-known improper but sparsity-inducing prior, used as a noninformative prior for scale parameters [33]. Let another statistical model be given by $p(\\pmb{y}|\\pmb{s}^{*})$ (cf. (2)) and prior $t(s)$ instead of $p_{\\gamma}(s)$ with implicitly defined log-evidence $\\log\\pi^{(s)}(\\pmb{y})$ . Due to $t(s)$ being improper, the log-evidence $\\log\\pi^{(s)}(\\pmb{y})$ forms a not normalized but valid log-likelihood. Moreover, this model is sparsity-inducing due to the sparsity promoting characteristics of $t(s)$ . Based on (3), it holds that $\\log\\pi^{(s)}(\\pmb{y})\\geq\\log p_{\\gamma}(\\pmb{y})$ and, thus, $\\log p_{\\gamma}(\\pmb{y})$ can be embedded in variational inference, forming a tractable variational lower bound of an intractable log-evidence $\\log\\pi^{(s)}(\\pmb{y})$ of actual interest. Moreover, applying the EM algorithm to (2) is \u201cevidence maximization over the space of variational approximations to a model (i.e., $p(\\b{y}|\\b{s}^{*})$ and $t(s)$ ), with a sparse, regularizing prior\u201d [18]. ", "page_idx": 2}, {"type": "text", "text": "2.3 Gaussian Mixture Models and Variational Autoencoders ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "GMMs and VAEs are generative models aiming to learn an unknown distribution $p(x)$ from a training set $\\mathcal{X}$ . Both models represent $p(x)$ as the marginalization with conditionally Gaussian $p(\\pmb{x}|\\cdot)$ and an additional latent variable $k$ (or $_{\\textit{z}}$ ) [34\u201336], i.e., ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{p^{\\mathrm{(GMM)}}(\\pmb{x})=\\displaystyle\\sum_{k=1}^{K}p(k)p(\\pmb{x}|k)=\\displaystyle\\sum_{k=1}^{K}\\rho_{k}\\mathcal{N}(\\pmb{x};\\pmb{\\mu}_{k},C_{k}),}\\\\ &{}&{p^{\\mathrm{(VAE)}}(\\pmb{x})=\\displaystyle\\int p(z)p_{\\theta}(\\pmb{x}|z)\\mathrm{d}z=\\int\\mathcal{N}(z;\\pmb{0},\\mathbf{I})\\mathcal{N}(\\pmb{x};\\pmb{\\mu}_{\\theta}(z),C_{\\theta}(z))\\mathrm{d}z.}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The tunable parameters $(\\{\\rho_{k},\\mu_{k},C_{k}\\}_{k=1}^{K}$ for GMMs and $\\pmb{\\theta}$ for VAEs) are learned by optimizing the model\u2019s log-evidence $\\textstyle\\sum_{i}\\log p^{(f)}(\\pmb{x}_{i})$ $(f\\,\\in\\,\\{\\mathrm{GMM},\\mathrm{vAE}\\})$ over $\\mathcal{X}$ . In the case of GMMs, this is typically done by an EM algorithm alternating between the so-called e- and $\\mathbf{m}$ -step. The e-step determines the closed-form posteriors $p_{t}(k|\\pmb{x}_{i})$ (for all $i$ ) via the Bayes rule using the model\u2019s parameters in the tth iteration. The m-step then updates the model\u2019s parameters by maximizing $\\begin{array}{r}{\\sum_{i}\\mathbb{E}_{p_{t}(k|\\pmb{x}_{i})}\\left[\\log p(\\pmb{x}_{i},k)\\right]}\\end{array}$ . In case of VAEs, however, the posterior $p_{\\theta}(z|x)$ (and $\\log{\\dot{p}^{(\\mathrm{VAE})}(\\mathbf{\\boldsymbol{x}})})$ are intractable and the EM algorithm cannot be applied. Therefore, a tractable distribution $q_{\\phi}(z|x)=$ $\\mathcal{N}(z;\\mu_{\\phi}(x),\\mathrm{diag}(\\pmb{\\sigma}_{\\phi}^{2}(\\pmb{x}))$ with variational parameters $\\phi$ is introduced, which approximates $p_{\\theta}(z|x)$ , and ${\\pmb{\\mu}}_{\\phi}({\\pmb x})$ and ${\\pmb\\sigma}_{\\phi}^{2}({\\pmb x})$ are generated by a NN encoder. Equivalently, $\\mu_{\\theta}(z)$ and $C_{\\theta}(z)$ are generally realized by a NN decoder. The objective to be maximized is the evidence lower bound (ELBO) $L(\\pmb\\theta,\\phi)$ serving as a tractable lower bound for the intractable log-evidence $\\textstyle\\sum_{i}\\log p_{\\theta}(\\mathbf{\\alpha}_{i})$ , i.e., ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\sum_{x_{i}\\in\\mathcal{X}}\\log p_{\\theta}(x_{i})\\geq L(\\theta,\\phi)=\\sum_{x_{i}\\in\\mathcal{X}}\\left(\\log p_{\\theta}(x_{i})-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z|x_{i})||p_{\\theta}(z|x_{i}))\\right)\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "with $\\mathrm{{D}}_{\\mathrm{{KL}}}(\\cdot)$ being the Kullback-Leibler (KL) divergence. Generally, the GMM\u2019s and VAE\u2019s training critically depends on iteratively characterizing and updating their posteriors $p_{t}(k|\\pmb{x}_{i})$ and $q_{\\phi}(z|x_{i})$ . ", "page_idx": 3}, {"type": "text", "text": "2.4 Proposed Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The goal of this section is to derive a class of generative models, for which we can guarantee that, on the one hand, it is sparsity inducing, but on the other hand, it is trainable and can learn from solely compressed and noisy observations $\\boldsymbol{\\wp}$ resulting in an effective probabilistic prior for (1). ", "page_idx": 3}, {"type": "text", "text": "To incorporate the bias towards sparsity, we start with SBL discussed in Section 2.2 and combine it with the VAE\u2019s and GMM\u2019s main principle for their adaptability to complicated distributions, i.e., introducing a latent variable $_{z}$ (or $k$ ) on which we condition with a parameterized Gaussian (cf. (4) and (5)).2 More specifically, we exploit the Gaussianity of $p_{\\gamma}(s)$ in (3) and modify it to a parameterized Gaussian conditioned on some latent variable $_{z}$ with arbitrarily parameterized $p_{\\delta}(z)$ while explicitly keeping its mean zero and its covariance matrix diagonal, i.e., $p_{\\theta}(s|z)=\\mathcal{N}(s;\\mathbf{0},\\mathrm{diag}(\\gamma_{\\theta}(z)))$ . The resulting set of statistical models referred to as sparse Bayesian generative models, is given by ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{y|s\\sim p(y|s)=\\mathcal{N}(y;A D s,\\sigma^{2}\\,\\mathbf{I}),\\ \\ s|z\\sim p_{\\theta}(s|z)=\\mathcal{N}\\left(s;\\mathbf{0},\\mathrm{diag}(\\gamma_{\\theta}(z))\\right),\\ \\ z\\sim p_{\\delta}(z).}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Training principle. Our proposed training scheme is independent of specific realizations for $\\gamma_{\\theta}(z)$ and $p_{\\delta}(z)$ , which is why they are kept general in this section. Specific parameterizations are discussed in Section 3.2 and 3.3. The training goal is to maximize the model\u2019s log-evidence $\\textstyle\\sum_{i}\\log p_{\\delta,\\pmb{\\theta}}(\\pmb{y}_{i})$ implicitly defined by (7) over a training set of compressed and potentially noisy observations $\\boldsymbol{\\wp}$ . For that, we rely on the main training principles for statistical models including latent variables, i.e., the EM algorithm and variational inference (cf. Section 2.3). A key requirement of these principles is the ability to track and update the model\u2019s posterior (i.e., $p_{\\theta,\\delta}(s,z|y)$ for (7)) or approximations of it over the training iterations (cf. Section 2.3). In classical SBL, the prior distribution $p_{\\gamma}(s)$ forms a conjugate prior of $p(\\pmb{y}|\\pmb{s})$ (cf. (2)) and, thus, the posterior $p_{\\gamma}(s|y)$ is tractable in closed form. We utilize this property by observing that conditioned on some $_{\\textit{z}}$ , (7) coincides with the classical SBL model. Consequently, $s|z$ is a conditioned conjugate prior of $_{y\\mid s}$ in (7) with tractable Gaussian posterior $p_{\\theta}(s|z,y)$ , whose closed-form covariance matrix and mean ", "page_idx": 3}, {"type": "equation", "text": "$$\nC_{\\theta}^{s|y,z}(z)=\\left(\\frac{1}{\\sigma^{2}}D^{\\mathrm{T}}A^{\\mathrm{T}}A D+\\mathrm{diag}(\\gamma_{\\theta}^{-1}(z))\\right)^{-1},\\;\\mu_{\\theta}^{s|y,z}(z)=\\frac{1}{\\sigma^{2}}C_{\\theta}^{s|y,z}(z)D^{\\mathrm{T}}A^{\\mathrm{T}}y\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "equal those in SBL [18]. The equivalent formulas for $\\sigma^{2}~=~0$ are given in Appendix C. By considering the decomposition $\\bar{p}_{\\theta,\\bar{\\delta}}(s,z|y)=p_{\\theta}(s|z,y)p_{\\theta,\\delta}(z|y)$ , we conclude that our proposed set of statistical models in (7) exhibits posteriors, which are partially tractable in closed form independent of any specifics of $\\gamma_{\\theta}(z)$ and $p_{\\delta}(z)$ . The remaining $p_{\\pmb{\\theta},\\pmb{\\delta}}(\\pmb{z}|\\pmb{y})$ resembles the standard GMM\u2019s and VAE\u2019s posterior, and we can either apply the EM algorithm or variational inference to maximize the corresponding log-evidence. Both will be discussed in Section 3.2 and 3.3, respectively. ", "page_idx": 3}, {"type": "text", "text": "Estimation scheme. The goal after the training is to use the learned statistical model in (7) for regularizing the inverse problem (1) and estimating $x^{*}$ from a newly observed $\\textit{\\textbf{y}}$ . Generally, the CME $\\mathbb{E}[x|\\Bar{\\b{y}}]$ is a desirable estimator due to its property of minimizing the MSE. We utilize insights from [32, 22], which derive approximate closed forms of the CME using VAEs and GMMs. More precisely, by using the law of total expectation, we approximate the CME by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}[x|y]=\\mathbb{E}\\left[\\mathbb{E}\\left[x|y,z\\right]|y\\right]=D\\,\\mathbb{E}\\left[\\mathbb{E}\\left[s|y,z\\right]|y\\right]\\approx D\\,\\mathbb{E}_{p_{\\theta,\\delta}(z|y)}\\left[\\mathbb{E}_{p_{\\theta}(s|z,y)}\\left[s|y,z\\right]|y\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The inner expectation is given by the learned $\\mu_{\\theta}^{s\\vert y,z}(z)$ in (8), while, depending on its specific characteristics, also exhibits a closed form or a variational approximation has been learned during training (cf. Section 3.2), with which we approximate the outer expectation by a MonteCarlo estimation. Based on the perception-distortion trade-off, the CME is not optimal from a perceptual point [37], and deviating estimators from the CME approximation might be beneficial. More detailed descriptions of the CME approximation as well as further estimators based on the specific implementations in Section 3.2 and 3.3 are given in Appendix G. ", "page_idx": 4}, {"type": "text", "text": "3 Theoretical Analysis and Specific Parameterizations ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "3.1 Sparsity Guarantees ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In Section 2.4, we motivate constraining $p_{\\theta}(s|z)$ to be a zero mean conditional Gaussian with diagonal covariance matrix by SBL and its sparsity inducing property. In the following, we rigorously show that constraining $p_{\\theta}(s|z)$ in this manner is sufficient to maintain the sparsity inducing property for any statistical model following (7) despite the additionally included latent variable $_{\\textit{z}}$ . More precisely, we show that any statistical model in (7) with some specified parameterized $p_{\\delta}(z)$ and $\\gamma_{\\theta}(z)$ exhibits a log-evidence that is interpretable as a variational lower bound of a sparsity inducing log-evidence. For that, we establish the following theorem. ", "page_idx": 4}, {"type": "text", "text": "Theorem 3.1. Let $p_{\\pmb{\\theta}}(\\pmb{s}|\\pmb{z})=\\mathcal{N}(\\pmb{s};\\mathbf{0},d i a g(\\gamma_{\\pmb{\\theta}}(\\pmb{z}))$ (i.e., it is defined according to (7)), let $_{z}$ be either continuous or discrete and finite, and let $\\gamma_{\\theta}(z)>0$ . Then, there exists a constant $C>0$ such that for all $s,\\theta,\\delta$ with any arbitrary distribution $p_{\\delta}(z)$ ", "page_idx": 4}, {"type": "equation", "text": "$$\np_{\\theta,\\delta}(s)=\\int p_{\\delta}(z)\\mathcal{N}(s;\\mathbf{0},d i a g(\\gamma_{\\theta}(z)))\\mathrm{d}z\\leq t(s)=C\\cdot\\prod_{i=1}^{N}\\frac{1}{|s_{i}|}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The integral corresponds to a summation for discrete and finite $p_{\\delta}(z)$ . ", "page_idx": 4}, {"type": "text", "text": "The proof is given in Appendix A. Based on Theorem 3.1, it holds that ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\left(\\log\\pi^{(s)}({\\pmb y})\\geq\\log p_{\\pmb\\theta,\\delta}({\\pmb y})\\right){\\mathrm{~for~all~}}{\\pmb\\theta},\\delta\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "with $\\log\\pi^{(s)}(\\pmb{y})$ being the log-evidence of $y|s\\sim p(y|s)$ and the improper but sparsity promoting prior $t(s)$ , whereas $\\log p_{\\theta,\\delta}(\\pmb{y})$ is implicitly defined by (7). Consequently, we can interpret the maximization of $\\log p_{\\theta,\\delta}(\\boldsymbol{y})$ over $(\\pmb\\theta,\\bar{\\pmb\\delta})$ as the evidence maximization over the space of variational approximations to a model with a sparsity inducing and regularizing prior. However, contrary to classical SBL, we have the additional degree of freedom to choose the specifics of $\\gamma_{\\theta}(z)$ and $p_{\\delta}(z)$ without any constraint while maintaining the connection to sparsity. ", "page_idx": 4}, {"type": "text", "text": "3.2 Compressive Sensing VAE ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The integral version of $p_{\\theta,\\delta}(s)$ in (10) strongly resembles the VAE\u2019s decomposition of $p(x)$ in (5). In fact, by constraining $p_{\\delta}(\\dot{z})\\dot{=}p(z)=\\mathcal{N}(\\bar{z};\\mathbf{0},\\mathbf{I})$ , the distribution $p_{\\pmb\\theta,\\pmb\\delta}(\\pmb\\mathscr{s})=p_{\\pmb\\theta}(\\pmb\\mathscr{s})$ corresponds to a subset of all possible distributions covered by the VAE decomposition in (5). This motivates to choose $p_{\\delta}(z)$ in this exact manner and realize $\\gamma_{\\theta}(z)$ as the output of a NN decoder. Generally, we aim to optimize the log-evidence $\\textstyle\\sum_{i}\\log p_{\\theta}(y_{i})$ in (11) with respect to $\\pmb{\\theta}$ solely given compressed and noisy observations $\\boldsymbol{\\wp}$ . However,  equivalent to VAEs, the log-evidence $\\textstyle\\sum_{i}\\operatorname{log}p_{\\pmb{\\theta}}(\\pmb{y}_{i})$ is intractable for $\\dot{p}(z)=\\mathcal{N}(z;\\mathbf{0},\\mathbf{I})$ , which is why a tractable lower bound has to be derived. A tractable lower bound on the log-evidence of a statistical model with latent variables is obtained by subtracting the KL divergence between the conditional distribution of the latent variables given the observations and a tractable variational distribution from the log-evidence (cf. (6)). For the model in (7) and i.i.d. training data, this results in ", "page_idx": 4}, {"type": "image", "img_path": "GqefKjw1OR/tmp/0d6d93712bb44301e10779b403323b771ff16994f9bd164e224696706b4cef8b.jpg", "img_caption": ["Figure 1: A schematic of the sparsity inducing CSVAE. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\log p_{\\theta}(y_{i})\\geq L_{(\\theta,\\phi)}^{(\\mathrm{csvaE})}=\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\log p_{\\theta}(y_{i})-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z,s|y_{i})||p_{\\theta}(z,s|y_{i}))}&{}\\\\ {\\displaystyle=\\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{q_{\\phi}(z,s|y_{i})}\\left[\\log\\frac{p(y_{i}|s)p_{\\theta}(s|z)p(z)}{q_{\\phi}(z,s|y_{i})}\\right],}&{}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where the derivation of (13) from (12) is given in Appendix B. Based on insights from the training principle explained in Section 2.4, the variational posterior $q_{\\phi}(z,s|y_{i})$ in (13) can be simplified to $q_{\\phi}(z,s|y_{i})=p_{\\theta}(s|z,y_{i})q_{\\phi}(z|y_{i})$ with closed-form $p_{\\pmb\\theta}(\\pmb{s}|\\pmb{z},\\pmb{y}_{i})$ and only requires variational parameters $\\phi$ for $q_{\\phi}(z|y_{i})$ to be tractable. As a result, the adapted ELBO $L_{(\\theta,\\phi)}^{(\\mathrm{CSVAE})}$ equals ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{q_{\\phi}(z,s|y_{i})}\\left[\\log\\frac{p(y_{i}|s)p_{\\theta}(s|z)p(z)}{p_{\\theta}(s|z,y_{i})q_{\\phi}(z|y_{i})}\\right]=\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\Big(\\mathbb{E}_{q_{\\phi}(z|y_{i})}\\left[\\mathbb{E}_{p_{\\theta}(s|z,y_{i})}\\left[\\log p_{\\theta}(y_{i}|s)\\right]\\Big.\\Big.\\Big.}\\\\ &{\\displaystyle\\left.\\left.-\\,\\mathrm{D}_{\\mathrm{KL}}(p_{\\theta}(s|z,y_{i})||p_{\\theta}(s|z))\\right]-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z|y_{i})||p(z))\\Big).}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "To ensure the training of standard VAEs to be tractable, $\\mathbb{E}_{q_{\\phi}(z|y_{i})}[\\cdot]$ is generally approximated by a single-sample Monte-Carlo estimation [36]. We build on the same strategy and approximate (14) by ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{\\Lambda}_{(\\theta,\\phi)}^{\\mathrm{(CSWA)}}\\approx\\sum_{y_{i}\\in\\mathcal{Y}}\\left(\\mathbb{E}_{p_{\\theta}(s|\\tilde{z}_{i},y_{i})}[\\log p(y_{i}|s)]-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z|y_{i})||p(z))-\\mathrm{D}_{\\mathrm{KL}}(p_{\\theta}(s|\\tilde{z}_{i},y_{i})||p_{\\theta}(s|\\tilde{z}_{i}))\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "with $\\tilde{z}_{i}\\sim q_{\\phi}(z|y_{i})$ and $\\mathbb{E}_{p_{\\theta}(s|\\tilde{z}_{i},\\pmb{y}_{i})}[\\log p(\\pmb{y}_{i}|\\pmb{s})]$ exhibiting a closed-form solution detailed in Appendix D. In addition, $\\mathrm{D}_{\\mathrm{KL}}\\big(p_{\\pmb\\theta}(\\pmb\\mathscr{s}|\\widetilde{\\boldsymbol{z}}_{i},\\pmb{y}_{i})||p_{\\pmb\\theta}(\\pmb{s}|\\widetilde{\\boldsymbol{z}}_{i})\\big)$ is the tractable KL divergence of two multivariate Gaussians, and $\\mathrm{D}_{\\mathrm{KL}}\\big(q_{\\phi}(z|y_{i})||p(z)\\big)$ matches the $\\mathrm{KL}$ divergence from standard VAEs (cf. [36]). Both are specified in Appendix E. The adapted ELBO in (15) resembles the classical ELBO of ordinary VAEs with a modified reconstruction loss and an additional KL divergence. Equivalent to ordinary VAEs, we model $q_{\\phi}(z|y_{i})=\\mathcal{N}(z;\\pmb{\\mu}_{\\phi}(y_{i}),\\mathrm{diag}(\\pmb{\\sigma}_{\\phi}^{2}(\\pmb{y}_{i})))$ and realize $(\\mu_{\\phi}(\\cdot),\\sigma_{\\phi}^{2}(\\cdot))$ by a NN encoder, and $\\gamma_{\\theta}(\\cdot)$ by a NN decoder. The adapted ELBO in (15) forms a differentiable and variational approximation of the model\u2019s log-evidence $\\textstyle\\sum_{i}\\log p_{\\theta}(\\pmb{y}_{i})$ . Based on Theorem 3.1 and (11), it holds that ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\sum_{y_{i}\\in\\mathcal{Y}}\\log\\pi^{(s)}(\\pmb{y}_{i})\\geq\\sum_{y_{i}\\in\\mathcal{Y}}\\log p_{\\pmb{\\theta}}(\\pmb{y}_{i})\\geq L_{(\\pmb{\\theta},\\phi)}^{(\\mathrm{CSVAE})}\\mathrm{~for~all~}\\pmb{\\theta},\\phi.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Thus, $L_{(\\theta,\\phi)}^{(\\mathrm{CSVAE})}$ serves as a variational lower bound of a sparsity-inducing log-evidence. We denote the resulting VAE as Compressive Sensing VAE (CSVAE), and its schematic is presented in Fig. 1. It resembles the vanilla VAE with the main difference that the encoder takes a compressed observation $\\textit{\\textbf{y}}$ as input and the decoder solely outputs conditional variances $\\gamma_{\\theta}(\\Tilde{z})$ of $s|z$ . In case of varying measurement matrices $A_{i}$ for each training, validation and test sample, we use the least-squares estimate $\\hat{\\pmb{x}}_{i}^{(\\mathrm{LS})}\\,=\\,A_{i}^{\\mathrm{T}}(\\pmb{A}_{i}\\pmb{A}_{i}^{\\mathrm{T}})^{-1}\\pmb{y}_{i}$ instead of $\\pmb{y}_{i}$ as encoder input. The CSVAE\u2019s training with ground-truth data and pseudo-code for training are outlined in Appendix and (cf. algorithm 1). ", "page_idx": 5}, {"type": "text", "text": "3.3 Compressive Sensing GMM ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "By considering discrete and finite $p_{\\delta}(z)$ in (7), i.e., $p_{\\delta}(z=k)=p_{\\delta}(k)=\\rho_{k}$ , we observe that the resulting $p_{\\theta,\\delta}(s)$ strongly resembles the GMM\u2019s decomposition of $p(x)$ in (4). This motivates to choose $p_{\\delta}(z)$ in exactly this manner and $p_{\\theta}(s|z)=p(s|k)=\\mathcal{N}(s;\\mathbf{0},\\mathrm{diag}(\\gamma_{k}))$ , i.e., $\\pmb{s}$ is modelled as GMM with zero means and diagonal covariance matrices. Equivalent to CSVAEs in Section 3.2, the distribution $p(s|k,y)$ contained in the model\u2019s posterior $p(k,s|y)=p(s|k,y)p(k|y)$ exhibits a closed-form solution (cf. (8)). Moreover, due to the linear relation between $\\textit{\\textbf{y}}$ and $\\pmb{s}$ in (7) and the assumption that $s|k$ is Gaussian, $\\pmb{y}|k$ is also Gaussian with zero mean and covariance matrix ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{C_{k}^{\\pmb{y}|k}=A D\\mathrm{diag}(\\gamma_{k})D^{\\mathrm{T}}A^{\\mathrm{T}}+\\sigma^{2}\\,\\mathbf{I}\\,.}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "and $p(k|y)$ is computable in closed form by Bayes, i.e., $\\begin{array}{r}{p(k|\\pmb{y})=(p(\\pmb{y}|k)p(k))/(\\sum_{k}p(\\pmb{y}|k)p(k))}\\end{array}$ Thus, $p(k,s|y)$ exhibits a closed form, and an EM algorithm can be applied, whose e-step coincides with computing $p(k,s|y)$ . Based on the extended EM algorithm in [22], where the authors fti a vanilla GMM (4) in the pixel domain using compressed image patches, we formulate an m-step tailored to our model (7). We denote the resulting model as Compressive Sensing GMM (CSGMM). The m-step aims to update the CSGMM\u2019s parameters $\\{\\rho_{k},\\gamma_{k}\\}$ by optimizing $\\begin{array}{r}{\\sum_{i}\\mathbb{E}_{p_{t}(k,s|\\pmb{x}_{i})}\\left[\\log p(\\pmb{x}_{i},\\pmb{s},k)\\right]}\\end{array}$ , whose closed-form solution is given in the following lemma. ", "page_idx": 6}, {"type": "text", "text": "Lemma 3.2. Let the statistical model in (7) be given with discrete $p_{\\delta}(z=k)=p(k)=\\rho_{k}$ and $\\gamma_{\\theta}(z)=\\gamma_{k}$ $\\boldsymbol{\\wp}$ . i nn othisey t tahn idt ecroatmiopnr eosf saend  EobMs earlgvaotriitohnms $\\pmb{y}_{i}$ .e  Gupivdeant e $p_{t}(k|\\pmb{y}_{i})$ $p_{t}(\\pmb{s}|k,\\pmb{y}_{i})=\\mathcal{N}(\\pmb{s};\\pmb{\\mu}_{k,t}^{\\pmb{s}|\\pmb{y}_{i},k},\\pmb{C}_{k,t}^{\\pmb{s}|\\pmb{y}_{i},k})$ $\\{\\rho_{k},\\gamma_{k}\\}$ ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\gamma_{k,(t+1)}=\\frac{\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}(k|y_{i})(|\\mu_{k,t}^{s|y_{i},k}|^{2}+d i a g(C_{k,t}^{s|y_{i},k}))}{\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}(k|y_{i})},\\;\\rho_{k,(t+1)}=\\frac{\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}(k|y_{i})}{|\\mathcal{Y}|}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "form a valid $m$ -step and, thus, guarantee to improve the log-evidence in every iteration. ", "page_idx": 6}, {"type": "text", "text": "The proof of Lemma 3.2, the CSGMM\u2019s training with ground-truth data $\\boldsymbol{S}$ and pseudo-code are outlined in Appendix F, $_\\mathrm{H}$ and $\\mathbf{N}$ (cf. algorithm 4), respectively. ", "page_idx": 6}, {"type": "text", "text": "3.4 Discussion ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "From a broader perspective, our proposed algorithm represents two consecutive stages: ", "page_idx": 6}, {"type": "text", "text": "1) Choose a dictionary $_{D}$ , with respect to which a general signal set $\\mathcal{C}$ of interest is compressible (e.g. a wavelet basis for the set of natural images).   \n2) Learn the statistical characteristics of the specific signal subset $s\\subset{\\mathcal{C}}$ of interest in its compressible domain (e.g. the subset of handwritten digits). ", "page_idx": 6}, {"type": "text", "text": "Due to the strong regularization of stage 1) constraining the search space in stage 2), our model can learn from a few corrupted samples $\\boldsymbol{\\wp}$ . To ensure the search space to be within the set of compressible signals with respect to $_{D}$ , we enforce $s|z$ in (7) and, thus, $\\pmb{s}$ to have zero mean (cf. Theorem 3.1). ", "page_idx": 6}, {"type": "text", "text": "Limitation. On the one hand, this restriction regularizes the problem at hand. On the other hand, it generally introduces a bias, which potentially prevents perfectly learning the unknown distribution of $\\pmb{s}$ as it is not always possible to decompose a distribution in this way. As a result, the proposed model is biased towards capturing the sparsity-specific features from $\\boldsymbol{\\wp}$ and being an effective prior for (1) rather than learning a comprehensive representation of the true $p(s)$ . ", "page_idx": 6}, {"type": "text", "text": "Distinction from generative model-based CS. Generative model-based CS builds on a generator $G_{\\pmb{\\theta}}:\\pmb{z}\\mapsto\\pmb{x}=G_{\\pmb{\\theta}}(\\pmb{z})$ (e.g., a GAN or VAE) with $z\\,\\in\\,\\mathbb{R}^{F}$ , $\\pmb{x}\\in\\mathbb{R}^{N}$ and $F\\ll N$ [4]. Arguably, the notion of compressibility is still included in this setup, since it assumes that every $\\textbf{\\em x}$ can be perfectly encoded by only a few $F$ values. Moreover, these models typically assign a simplistic fixed distribution, e.g. $p(z)=\\mathcal{N}(z;\\mathbf{0},\\mathbf{I})$ , to their compressible domain. Consequently, while generative model-based CS replaces the dictionary with a learnable mapping $G_{\\theta}$ and constrains the compressible domain by forcing it to be representable by, e.g., $\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , our approach does the exact opposite. We keep the mapping from the compressible into the original domain fixed by a dictionary $_{D}$ and learn a non-trivial statistical model $p_{\\theta,\\delta}(s)$ in the compressible domain. ", "page_idx": 6}, {"type": "text", "text": "Connection to uncertainty quantification. While coming from different motivations, our approach shares similarities with methods from uncertainty quantification, namely so-called prior networks [38]. There, the general idea is to let the NN output the parameters of a conditioned conjugate prior (conditioned on the NN input) instead of directly the quantities of interest (cf. [39, 40]). As a result, one can use entropy and mutual information measures to quantify different types of uncertainty. Equivalently, our proposed models output the parameters $\\gamma_{\\theta}(z)$ of a conditioned conjugated prior $p_{\\pmb{\\theta}}(\\pmb{s}|\\pmb{z})$ , which is why they enable to quantify their uncertainty by the same measures. ", "page_idx": 6}, {"type": "text", "text": "Computational complexity. It is noteworthy that our algorithm\u2019s inference after training requires no optimization algorithm but only consists of, e.g., a feed-forward operation through a comparably small VAE. Thus, our proposed method\u2019s signal reconstruction comes with computational benefits and differs in this context from other approaches. On the downside, naively implementing the training requires computing and storing the posterior covariance matrices in (8), which can lead to a non-negligible computational and memory-related overhead for very high dimensions. To overcome this issue, we derive equivalent reformulations of the CSVAE\u2019s and CSGMM\u2019s update steps for training that circumvent the explicit computation of these matrices. More precisely, the reformulated update steps solely require the explicit storing and inversion of the observations\u2019 covariance matrices (cf. (17)), which are typically much lower dimensional. The reformulations are given in Appendix I. ", "page_idx": 7}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "4.1 Experimental Setup ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Datasets. We evaluate the performance on four datasets. We use the MNIST dataset ( $N=784$ for evaluation [41, (CC-BY-SA 3.0 license)]. Moreover, we use an artificial 1D dataset of piecewise smooth functions of dimension $N=256$ . For that, we combine HeaviSine functions with polynomials of quadratic degree and randomly placed discontinuities, which are frequently used for CS and compressible in the wavelet domain [42, 16]. The generation and examples are outlined in Appendix J. We also use a dataset of $64\\times64$ cropped celebA images $'N=3\\cdot64^{2^{2}}=12288)\\,[43]^{3}$ and evaluate on the FashionMNIST dataset ( $N=784$ ) in Appendix L [44, (MIT license)]. ", "page_idx": 7}, {"type": "text", "text": "Measurement matrix $\\pmb{\\&}$ evaluation metric. For the simulations on piecewise smooth functions, we use a separate measurement matrix $\\pmb{A}_{i}$ for each training, validation and test sample, where all $\\pmb{A}_{i}$ contain i.i.d. Gaussian entries $\\begin{array}{r}{A_{i,k l}\\sim\\mathcal{N}(0,\\frac{1}{M})}\\end{array}$ . For all remaining simulations, we use one fixed measurement matrix $\\pmb{A}$ each with equally distributed i.i.d. Gaussian entries for the whole dataset. We evaluate the distortion performance by a normalized MSE $\\begin{array}{r}{\\mathrm{nMSE}=1/N_{\\mathrm{test}}\\sum_{i=1}^{N_{\\mathrm{test}}}(\\Vert\\hat{\\mathbf{{x}}}_{i}-\\mathbf{x}_{i}\\Vert_{2}^{2}/N)}\\end{array}$ with $\\hat{\\pmb{x}}_{i}$ being the estimation of $\\pmb{x}_{i}$ and the SSIM [45] with $N_{\\mathrm{test}}$ being set to 5000 in any simulation. ", "page_idx": 7}, {"type": "text", "text": "Baselines & hyperparameters. As non-learnable baselines, we use Lasso [11] and SBL [18], where we either adjust Lasso\u2019s shrinkage parameter on a ground-truth dataset or use the configurations from [4]. As baselines, which can learn from compressed data, we use CSGAN [29] and CKSVD [23] with OMP, sparsity level 4 and 288 learnable dictionary atoms. We solely evaluate CKSVD on piecewise smooth functions due to its requirement of varying measurement matrices for observing the training samples. For CSGAN on MNIST, we use the configuration specified in [29].4 In any simulation, we use $K=32$ components for the proposed CSGMM and the proposed CSVAE\u2019s en- and decoders contain two fully-connected layers with ReLU activation and one following linear layer, respectively. We utilize Adam for optimization [46], and only consider the CME approximation of the estimators (cf. Section 2.4) since we did not observe notable differences to the alternative estimators in Appendix G. We utilize an overcomplete Daubechies db4 dictionary [47] in all estimators with fixed dictionaries. For all estimators except CSGAN, all images and estimates are normalized and clipped between 0 and 1, respectively. For CSGAN, images are normalized between $-1$ and 1 following [4, 29], and for evaluation, test images and their estimations are then re-normalized between 0 and 1. For a more detailed overview of hyperparameter configurations, see Appendix K. ", "page_idx": 7}, {"type": "text", "text": "4.2 Results ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Reconstruction. In Fig. 2 and 3, the reconstruction performance of all estimators for MNIST, the piecewise smooth functions, and celebA is shown. All trainable models are trained on compressed training samples $\\boldsymbol{\\wp}$ of dimension $M$ without any ground-truth information during training (cf. Section 2.1). The models are then used to estimate test signals $\\pmb{x}_{i}$ from observations of the same dimension $M$ (cf. (1)) for evaluation. In the case of the piecewise smooth functions, we also add noise of a 10dB signal-to-noise ratio (SNR) for training and testing, i.e., $\\sigma_{n}^{2}=\\mathbb{E}[\\|\\pmb{A x}\\|_{2}^{2}]/(M\\cdot10)$ in (1). ", "page_idx": 7}, {"type": "image", "img_path": "GqefKjw1OR/tmp/28db2190dd22a68c79505ade0f3c0cf571fbd2d38a56510c32f10d9f46ebb379.jpg", "img_caption": ["Figure 2: a) and b) nMSE and SSIM over $M$ $\\mathcal{N}_{t}=20000$ , MNIST), c) and d) nMSE and SSIM over $N_{t}$ ( $M=160$ , MNIST), e) exemplary reconstructed MNIST images $M=200$ , $N_{t}=20000)$ , f) nMSE over $M$ $\\mathrm{(SNR_{dB}\\ =\\ 10d B}$ , $N_{t}\\,=\\,10000$ , piece-wise smooth fct.), g) nMSE over $N_{t}$ $(\\mathrm{SNR}_{\\mathrm{dB}}=10\\mathrm{dB}$ , $M=100$ , piece-wise smooth fct.), h) exemplary reconstructed piece-wise smooth fct. ( $M=100$ , $N_{t}=1000)$ ), i) nMSE comparison of dictionaries (MNIST, $M=160$ , $N_{t}=20000)$ ). "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "In Fig. 2 a)-d), the nMSE and SSIM on MNIST is shown for a) and b) varying observation dimensions $M$ and the fixed number $N_{t}\\,=\\,20000$ of training samples, and c) and d) vice versa with fixed $M\\,=\\,160$ . The error bars represent standard deviations. In terms of both distortion metrics nMSE and SSIM, CSVAE and CSGMM perform overall the best. In Fig. 2 c), exemplary reconstructed MNIST images for $M=200$ and $N_{t}\\,=\\,20000$ are shown. Perceptually, CSGAN emphasizes different reconstruction aspects than the proposed CSVAE and CSGMM. While CSVAE and CSGMM successfully recover details of the MNIST images, CSGAN prioritizes the similarity in contrast between bright and dark areas. This can be explained by their different estimation strategies. The estimation of CSGANs is restricted to lie on the learned manifold, which has been adjusted based on the training dataset. In consequence, when the test sample $x^{*}$ contains details that cannot be found in the training dataset, CSGANs cannot reconstruct these but rather output a similar but realistic representative from the manifold. On the contrary, our proposed estimation scheme in Section 2.4 is not restricted to a manifold but rather infers conditional distributions (cf. (8)) over the whole linear space. Moreover, Fig. 2 c) and d) demonstrate that the proposed model can effectively learn from only a few hundred compressed and noisy samples. In Fig. 2 i), CSVAE and CSGMM are compared using different dictionaries types. The overall nMSE performance remains good for different dictionaries except for applying the models directly in the pixel domain. ", "page_idx": 8}, {"type": "text", "text": "In Fig. 2 f), g) and h), the nMSE over varying $M$ (see f)), varying $N_{t}$ (see g)) and exemplary reconstructed samples (see h)) are shown for the set of piecewise smooth functions. Here, we only evaluated the proposed CSVAE.5 Compared to the baselines Lasso, SBL, and CKSVD, the CSVAE performs the best in distortion (see f) and $\\mathrm{g})$ ) as well as perception (see h)). In Fig. 3 a)-e), the same plots are shown for the celebA dataset. Despite the significantly larger dimension, the results are consistent with those for MNIST and the set of piecewise smooth functions. ", "page_idx": 8}, {"type": "image", "img_path": "GqefKjw1OR/tmp/1657ebc2918ec9a021b8337b50ef4c5a898d4a97e47e6aaca90f87330dccff72.jpg", "img_caption": ["Figure 3: a) and b) nMSE and SSIM over $M$ $(N_{t}=5000)$ ), c) and d) nMSE and SSIM over $N_{t}$ $(M=1800)$ , e) exemplary reconstructed celebA images $M=2700$ , $N_{t}\\,=\\,5000)$ ), f) histogram of $h(z|y)$ for compressed test MNIST images of digits 0,1 and 7, where the CSVAE is trained on compressed zeros, g) training and reconstruction time for MNIST ( $M=200$ , $N_{t}=20000)$ . "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Uncertainty quantification. One possibility to determine the model\u2019s uncertainty is to determine the differential entropy $h(z|y)$ of the CSVAE\u2019s encoder distribution $q_{\\phi}(z|y)$ . Since $q_{\\phi}(z|y)$ is a Gaussian with diagonal covariance matrix (cf. Section 3.2), $h(z|y)$ can be calculated efficiently in closed form. In Fig. 3 f), a histogram is shown with values of $h(z|y)$ . The CSVAE is trained on solely compressed MNIST zeros. We then forward compressed zeros, ones and sevens and evaluate $h(z|\\dot{\\boldsymbol{y}})$ . It can be seen that the CSVAE\u2019s encoder identifies the observations that are distinct to the training dataset by providing larger entropy values on average for the compressed ones and sevens. ", "page_idx": 9}, {"type": "text", "text": "Runtime. Fig. $3\\;\\mathrm{g}$ ) shows our measured training time as well as average reconstruction time of the MAP-based estimators (cf. Section G) for MNIST, $M=200$ , $N_{t}=20000$ . CSGMM and CSVAE are considerably faster than the baselines validating the corresponding discussion in Section 3.4. ", "page_idx": 9}, {"type": "text", "text": "Additional results. The results in Fig. 2 and 3 display the performance for CSGAN and the proposed CSVAE and CSGMM trained on solely compressed data. However, all three models can also learn from ground-truth data (cf. Appendix H). In Appendix L, we include this comparison for MNIST, provide results on FashionMNIST, analyze the estimators\u2019 robustness, and plot further reconstructions for all datasets. Moreover, in Appendix M, we analyze the runtime for training and reconstruction in more detail and give an overview of the used compute resources. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we introduced a new type of learnable prior for regularizing ill-conditioned inverse problems denoted by sparse Bayesian generative modeling. Our approach shares the property of classical CS methods of utilizing compressibility, but at the same time, it incorporates the adaptability to training data. Due to its strong regularization towards sparsity, it can learn from a few corrupted data samples. It applies to any type of compressible signal and can be used for uncertainty quantification. While this work focused on setting up the sparse Bayesian generative modeling framework, extensions to learnable dictionaries, circumventing the inversion of the observations\u2019 covariance matrices during training, and perception-emphasizing estimators are part of future work. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This research was supported by Rohde & Schwarz GmbH & Co. KG. The authors gratefully acknowledge the financial support and resources provided by the company. The authors also sincerely appreciate the valuable discussions with Dominik Semmler and Benedikt Fesl. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Y. Eldar and G. Kutyniok, Compressed Sensing: Theory and Applications. Cambridge University Press, 11 2012.   \n[2] K. Gregor and Y. LeCun, \u201cLearning fast approximations of sparse coding,\u201d in Proceedings of the 27th International Conference on International Conference on Machine Learning, ser. ICML\u201910. Madison, WI, USA: Omnipress, 2010, p. 399\u2013406.   \n[3] J. Liu, X. Chen, Z. Wang, and W. Yin, \u201cALISTA: Analytic weights are as good as learned weights in LISTA,\u201d in International Conference on Learning Representations, 2019.   \n[4] A. Bora, A. Jalal, E. Price, and A. G. Dimakis, \u201cCompressed sensing using generative models,\u201d in Proceedings of the 34th International Conference on Machine Learning, ser. Proceedings of Machine Learning Research, vol. 70. PMLR, Aug 2017, pp. 537\u2013546.   \n[5] D. Ulyanov, A. Vedaldi, and V. Lempitsky, \u201cDeep image prior,\u201d International Journal of Computer Vision, vol. 128, no. 7, p. 1867\u20131888, Mar. 2020.   \n[6] R. Heckel and P. Hand, \u201cDeep decoder: Concise image representations from untrained nonconvolutional networks,\u201d in 7th International Conference on Learning Representations, ICLR 2019, New Orleans, LA, USA, May 6-9, 2019. OpenReview.net, 2019.   \n[7] T.-O. Buchholz, M. Jordan, G. Pigino, and F. Jug, \u201cCryo-care: Content-aware image restoration for cryo-transmission electron microscopy data,\u201d in 2019 IEEE 16th International Symposium on Biomedical Imaging (ISBI 2019), 2019, pp. 502\u2013506.   \n[8] G. Revach, T. Locher, N. Shlezinger, R. J. G. van Sloun, and R. Vullings, \u201cHkf: Hierarchical Kalman filtering with online learned evolution priors for adaptive ECG denoising,\u201d IEEE Transactions on Signal Processing, vol. 72, pp. 3990\u20134006, 2024.   \n[9] W. Kim, Y. Ahn, J. Kim, and B. Shim, \u201cTowards deep learning-aided wireless channel estimation and channel state information feedback for 6G,\u201d Journal of Communications and Networks, vol. 25, no. 1, pp. 61\u201375, 2023.   \n[10] A. Jalal, L. Liu, A. G. Dimakis, and C. Caramanis, \u201cRobust compressed sensing using generative models,\u201d in Neural Information Processing Systems, 2020.   \n[11] R. Tibshirani, \u201cRegression shrinkage and selection via the Lasso,\u201d Journal of the Royal Statistical Society (Series B), vol. 58, pp. 267\u2013288, 1996.   \n[12] R. Baraniuk, \u201cOptimal tree approximation with wavelets,\u201d Proceedings of SPIE - The International Society for Optical Engineering, vol. 3813, pp. 196\u2013207, Dec. 1999.   \n[13] A. Liu, V. K. N. Lau, and W. Dai, \u201cExploiting burst-sparsity in massive MIMO with partial channel support information,\u201d IEEE Transactions on Wireless Communications, vol. 15, no. 11, pp. 7820\u20137830, 2016.   \n[14] L. He, H. Chen, and L. Carin, \u201cTree-structured compressive sensing with variational Bayesian analysis,\u201d IEEE Signal Processing Letters, vol. 17, no. 3, pp. 233\u2013236, 2010.   \n[15] L. He and L. Carin, \u201cExploiting structure in wavelet-based Bayesian compressive sensing,\u201d IEEE Transactions on Signal Processing, vol. 57, no. 9, pp. 3488\u20133497, 2009.   \n[16] R. G. Baraniuk, V. Cevher, M. F. Duarte, and C. Hegde, \u201cModel-based compressive sensing,\u201d IEEE Transactions on Information Theory, vol. 56, no. 4, pp. 1982\u20132001, 2010.   \n[17] M. E. Tipping, \u201cSparse Bayesian learning and the relevance vector machine,\u201d J. Mach. Learn. Res., vol. 1, p. 211\u2013244, sep 2001.   \n[18] D. Wipf and B. Rao, \u201cSparse Bayesian learning for basis selection,\u201d IEEE Transactions on Signal Processing, vol. 52, no. 8, pp. 2153\u20132164, 2004.   \n[19] G. Yu and G. Sapiro, \u201cStatistical compressed sensing of Gaussian mixture models,\u201d IEEE Transactions on Signal Processing, vol. 59, no. 12, pp. 5842\u20135858, 2011.   \n[20] F. Renna, R. Calderbank, L. Carin, and M. R. D. Rodrigues, \u201cReconstruction of signals drawn from a Gaussian mixture via noisy compressive measurements,\u201d IEEE Transactions on Signal Processing, vol. 62, no. 9, pp. 2265\u20132277, 2014.   \n[21] G. Yu, G. Sapiro, and S. Mallat, \u201cSolving inverse problems with piecewise linear estimators: From Gaussian mixture models to structured sparsity,\u201d IEEE Transactions on Image Processing, vol. 21, no. 5, pp. 2481\u20132499, 2012.   \n[22] J. Yang, X. Liao, X. Yuan, P. Llull, D. J. Brady, G. Sapiro, and L. Carin, \u201cCompressive sensing by learning a Gaussian mixture model from measurements,\u201d IEEE Transactions on Image Processing, vol. 24, no. 1, pp. 106\u2013119, 2015.   \n[23] F. Pourkamali Anaraki and S. M. Hughes, \u201cCompressive K-SVD,\u201d in 2013 IEEE International Conference on Acoustics, Speech and Signal Processing, 2013, pp. 5469\u20135473.   \n[24] F. P. Anaraki and S. Hughes, \u201cMemory and computation efficient PCA via very sparse random projections,\u201d in Proceedings of the 31st International Conference on Machine Learning, ser. Proceedings of Machine Learning Research, vol. 32, no. 2. Bejing, China: PMLR, 22\u201324 Jun 2014, pp. 1341\u20131349.   \n[25] F. Pourkamali-Anaraki, S. Becker, and S. M. Hughes, \u201cEfficient dictionary learning via very sparse random projections,\u201d in 2015 International Conference on Sampling Theory and Applications (SampTA), 2015, pp. 478\u2013482.   \n[26] T. Chang, B. Tolooshams, and D. Ba, \u201cRandnet: Deep learning with compressed measurements of images,\u201d in 2019 IEEE 29th International Workshop on Machine Learning for Signal Processing (MLSP), 2019, pp. 1\u20136.   \n[27] M. Aharon, M. Elad, and A. Bruckstein, \u201cK-SVD: An algorithm for designing overcomplete dictionaries for sparse representation,\u201d IEEE Transactions on Signal Processing, vol. 54, no. 11, pp. 4311\u20134322, 2006.   \n[28] A. Bora, E. Price, and A. G. Dimakis, \u201cAmbientGAN: Generative models from lossy measurements,\u201d in 6th International Conference on Learning Representations, ICLR 2018, Vancouver, BC, Canada, April 30 - May 3, 2018, Conference Track Proceedings. OpenReview.net, 2018.   \n[29] M. Kabkab, P. Samangouei, and R. Chellappa, \u201cTask-aware compressed sensing with generative adversarial networks,\u201d in AAAI Conference on Artificial Intelligence, 2018.   \n[30] B. Fesl, B. B\u00f6ck, F. Strasser, M. Baur, M. Joham, and W. Utschick, \u201cOn the asymptotic mean square error optimality of diffusion models,\u201d 2024, arXiv:2403.02957.   \n[31] M. Koller, B. Fesl, N. Turan, and W. Utschick, \u201cAn asymptotically MSE-optimal estimator based on Gaussian mixture models,\u201d IEEE Transactions on Signal Processing, vol. 70, pp. 4109\u20134123, 2022.   \n[32] M. Baur, B. Fesl, and W. Utschick, \u201cLeveraging variational autoencoders for parameterized MMSE estimation,\u201d IEEE Transactions on Signal Processing, vol. 72, pp. 3731\u20133744, 2024.   \n[33] J. O. Berger, Statistical decision theory and Bayesian analysis. New York: Springer-Verlag, 1985.   \n[34] G. J. McLachlan and D. Peel, Finite mixture models. Wiley Series in Probability and Statistics, 2000.   \n[35] C. M. Bishop, Pattern Recognition and Machine Learning (Information Science and Statistics), 1st ed. Springer, 2007.   \n[36] D. P. Kingma and M. Welling, \u201cAn introduction to variational autoencoders,\u201d Foundations and Trends\u00ae in Machine Learning, vol. 12, no. 4, p. 307\u2013392, 2019.   \n[37] Y. Blau and T. Michaeli, \u201cThe perception-distortion tradeoff,\u201d in 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition. IEEE, Jun. 2018.   \n[38] D. T. Ulmer, C. Hardmeier, and J. Frellsen, \u201cPrior and posterior networks: A survey on evidential deep learning methods for uncertainty estimation,\u201d Transactions on Machine Learning Research, 2023.   \n[39] A. Malinin and M. Gales, \u201cPredictive uncertainty estimation via prior networks,\u201d in Advances in Neural Information Processing Systems, S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, Eds., vol. 31. Curran Associates, Inc., 2018.   \n[40] A. Amini, W. Schwarting, A. Soleimany, and D. Rus, \u201cDeep evidential regression,\u201d Advances in Neural Information Processing Systems, vol. 33, 2020.   \n[41] Y. Lecun, L. Bottou, Y. Bengio, and P. Haffner, \u201cGradient-based learning applied to document recognition,\u201d Proceedings of the IEEE, vol. 86, no. 11, pp. 2278\u20132324, 1998.   \n[42] D. L. Donoho and I. M. Johnstone, \u201cAdapting to unknown smoothness via wavelet shrinkage,\u201d Journal of the American Statistical Association, vol. 90, no. 432, pp. 1200\u20131224, 1995.   \n[43] Z. Liu, P. Luo, X. Wang, and X. Tang, \u201cDeep learning face attributes in the wild,\u201d in Proceedings of International Conference on Computer Vision (ICCV), December 2015.   \n[44] H. Xiao, K. Rasul, and R. Vollgraf, \u201cFashion-MNIST: a novel image dataset for benchmarking machine learning algorithms,\u201d 2017, arXiv:1708.07747.   \n[45] Z. Wang, A. Bovik, H. Sheikh, and E. Simoncelli, \u201cImage quality assessment: from error visibility to structural similarity,\u201d IEEE Transactions on Image Processing, vol. 13, no. 4, pp. 600\u2013612, 2004.   \n[46] D. Kingma and J. Ba, \u201cAdam: A method for stochastic optimization,\u201d in International Conference on Learning Representations (ICLR), San Diega, CA, USA, 2015.   \n[47] G. R. Lee, R. Gommers, F. Waselewski, K. Wohlfahrt, and A. O\u2019Leary, \u201cPywavelets: A python package for wavelet analysis,\u201d Journal of Open Source Software, vol. 4, no. 36, p. 1237, 2019.   \n[48] R. E. Blahut, Principles and practice of information theory. USA: Addison-Wesley Longman Publishing Co., Inc., 1987.   \n[49] P. Bickel and K. Doksum, Mathematical Statistics: Basic Ideas and Selected Topics. Chapman and Hall/CRC, 2015.   \n[50] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duchesnay, \u201cScikit-learn: Machine learning in Python,\u201d Journal of Machine Learning Research, vol. 12, pp. 2825\u20132830, 2011. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Proof of Theorem 3.1 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To prove Theorem 3.1, we restate (3), i.e., there exists a $C>0$ such that for all $\\gamma>0$ and $\\pmb{s}$ ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathcal{N}(s;\\mathbf{0},\\mathrm{diag}(\\gamma))\\leq t(s)=C\\cdot\\prod_{i=1}^{N}\\frac{1}{|s_{i}|}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Based on (19), there exists a $C>0$ such that for all $\\theta,s,z$ with $\\gamma_{\\theta}(z)>0$ ", "page_idx": 13}, {"type": "equation", "text": "$$\np_{\\theta}(s|z)=\\mathcal{N}(s;\\mathbf{0},\\mathrm{diag}(\\gamma_{\\theta}(z)))\\leq t(s)=C\\cdot\\prod_{i=1}^{N}\\frac{1}{|s_{i}|}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "By multiplying both sides in (20) with $p_{\\delta}(z)$ and integrating over $_{z}$ , we conclude that there exists a $C>0$ such that for all $\\theta,s,\\delta$ with $\\gamma_{\\theta}(z)>0$ ", "page_idx": 13}, {"type": "equation", "text": "$$\np_{\\theta,\\delta}(s)=\\int p_{\\delta}(z)p_{\\theta}(s|z)\\mathrm{d}z\\leq\\int p_{\\delta}(z)t(s)\\mathrm{d}z=t(s)\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "independent of the particular choice of $p_{\\delta}(z)$ . In case of discrete and finite $p_{\\delta}(z)$ the integral corresponds to a summation. ", "page_idx": 13}, {"type": "text", "text": "B Derivation of the adapted ELBO for CSVAEs ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We write out the KL divergence and utilize that $p_{\\pmb\\theta}(\\pmb y)$ is independent of the expectation, i.e., ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\frac{\\cdot(\\mathrm{cSvat})}{(\\theta,\\phi)}=\\sum_{y_{i}\\in\\mathcal{Y}}\\log p_{\\theta}(y_{i})-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z,s|y_{i})||p_{\\theta}(z,s|y_{i}))}}\\\\ &{}&{=\\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{q_{\\phi}(z,s|y_{i})}\\left[\\log\\frac{p_{\\theta}(y_{i})p_{\\theta}(z,s|y_{i})}{q_{\\phi}(z,s|y_{i})}\\right]=\\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{q_{\\phi}(z,s|y_{i})}\\left[\\log\\frac{p(y_{i}|s)p_{\\theta}(s|z)p(z)}{q_{\\phi}(z,s|y_{i})}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "C Conditional Posterior in the Noise-Free Case ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In the noise-free case, the closed-form covariance matrix and mean of $p_{\\theta}(s|z,y)$ are given by ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C_{\\theta}^{s|y,z}(z)=\\bigg(\\mathbf{I}-\\mathrm{diag}(\\sqrt{\\gamma_{\\theta}(z)})\\left(A D\\mathrm{diag}(\\sqrt{\\gamma_{\\theta}(z)})\\right)^{\\dagger}A D\\bigg)\\,\\mathrm{diag}(\\gamma_{\\theta}(z))}\\\\ &{\\mu_{\\theta}^{s|y,z}(z)=\\mathrm{diag}(\\sqrt{\\gamma_{\\theta}(z)})\\left(A D\\mathrm{diag}(\\sqrt{\\gamma_{\\theta}(z)})\\right)^{\\dagger}y.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "with $(\\cdot)^{\\dagger}$ being the Moore-Penrose inverse [18]. ", "page_idx": 13}, {"type": "text", "text": "D Closed-Form Solution of the CSVAE Reconstruction Loss ", "text_level": 1, "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbb{E}_{p\\theta}(s|\\tilde{z}_{i},y_{i})\\left[\\log p(y_{i}|s)\\right]=\\mathbb{E}_{p\\theta}(s|\\tilde{z}_{i},y_{i})\\left[-\\frac{1}{2}\\left(M\\log(2\\pi\\sigma^{2})+\\frac{1}{\\sigma^{2}}\\|y_{i}-A D s\\|_{2}^{2}\\right)\\right]}\\\\ &{}&{=-\\frac{1}{2}\\Big(M\\log(2\\pi\\sigma^{2})+\\frac{1}{\\sigma^{2}}\\mathbb{E}_{p\\theta}(s|\\tilde{z}_{i},y_{i})\\left[\\|y_{i}\\|_{2}^{2}-y_{i}^{\\top}A D s\\right.}\\\\ &{}&{\\left.\\quad\\quad\\quad\\quad\\quad\\quad-s^{\\top}D^{\\top}A^{\\top}y_{i}+\\mathrm{tr}(A D s s^{\\top}D^{\\top}A^{\\top})\\right]\\Big)}\\\\ &{}&{=-\\frac{1}{2}\\Big(M\\log(2\\pi\\sigma^{2})+\\frac{1}{\\sigma^{2}}\\Big(\\|y_{i}\\|_{2}^{2}-y_{i}^{\\top}A D\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})-\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})^{\\top}D^{\\top}A^{\\top}y_{i}}\\\\ &{}&{\\quad\\quad\\quad\\quad\\quad\\quad\\quad+\\mathrm{tr}(A D\\left(C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})+\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})^{\\top}D^{\\top}A^{\\top})\\Big)\\Big)}\\\\ &{}&{=-\\frac{1}{2}\\Big(M\\log(2\\pi\\sigma^{2})+\\frac{1}{\\sigma^{2}}\\Big(\\|y_{i}-A D\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\|_{2}^{2}+\\mathrm{tr}(A D C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})D^{\\top}A^{\\top})\\Big)\\Big)}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\mu_{\\theta}^{s\\vert y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ and $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ are the mean and covariance matrix of $p_{\\pmb\\theta}(\\pmb{s}|\\widetilde{\\boldsymbol z}_{i},\\pmb{y}_{i})$ ", "page_idx": 13}, {"type": "text", "text": "E Closed-Form Solution of the CSVAE KL Divergences ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "By inserting the closed form of the KL divergence between two Gaussians (cf. [48]), we get ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathrm{D}_{\\mathrm{KL}}(p_{\\theta}(s|\\tilde{z}_{i},y_{i})||p_{\\theta}(s|\\tilde{z}_{i}))=\\frac{1}{2}\\Big(\\log\\operatorname*{det}\\left(\\mathrm{diag}(\\gamma_{\\theta}(\\tilde{z}_{i}))\\right)-\\log\\operatorname*{det}\\left(C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\right)-S}\\\\ {+\\mathrm{tr}\\left(\\mathrm{diag}\\left((\\gamma_{\\theta}(\\tilde{z}_{i})^{-1})\\,C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\right)+\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})^{\\mathrm{T}}\\mathrm{diag}\\left(\\gamma_{\\theta}(\\tilde{z}_{i})^{-1}\\right)\\mu_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where \u00b5\u03b8 $\\mu_{\\theta}^{s\\vert\\mathfrak{y}_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ and $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ are the mean and covariance matrix of $p_{\\pmb\\theta}(\\pmb{s}|\\widetilde{\\boldsymbol z}_{i},\\pmb{y}_{i})$ . Moreover [46], ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(z|y_{i})||p(z))=-\\frac{1}{2}\\sum_{j=1}^{N_{L}}(1+\\log\\sigma_{j,\\phi}^{2}(y_{i}))-\\mu_{j,\\phi}(y_{i})-\\sigma_{j,\\phi}^{2}(y_{i}))\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "with $q_{\\phi}(z|y_{i})=\\mathcal{N}(z;\\mu_{\\phi}(y_{i}),\\mathrm{diag}(\\sigma_{\\phi}^{2}(y_{i})))$ and $\\mu_{j,\\phi}({\\pmb y}_{i})$ and $\\sigma_{j,\\phi}^{2}(y_{i})\\rangle$ being the $j$ th entry of $\\pmb{\\mu}_{\\phi}(\\pmb{y}_{i})$ and $\\sigma_{\\phi}^{2}(y_{i})$ , respectively. Additionally, $N_{L}$ denotes the CSVAE\u2019s latent dimension. ", "page_idx": 14}, {"type": "text", "text": "F Proof of Lemma 3.2 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "The optimization problem we aim to solve is given by ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\left\\{\\rho_{k,(t+1)},\\gamma_{k,(t+1)}\\right\\}=\\operatorname*{argmax}_{\\{\\rho_{k},\\gamma_{k}\\}}\\ \\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{p_{t}(k,s\\vert y_{i})}\\left[\\log p(y_{i},s,k)\\right]\\ \\mathrm{s.t.}\\ \\sum_{k}\\rho_{k}=1.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "First, we reformulate the objective as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\sum_{y_{i}\\in\\mathcal{P}}\\mathbb{E}_{p_{t}(k,s|y_{i})}\\left[\\log p(y_{i},s,k)\\right]=\\sum_{y_{i}\\in\\mathcal{P}}\\mathbb{E}_{p_{t}(k,s|y_{i})}\\left[\\log p(y_{i}|s)+\\log p(s|k)+\\log p(k)\\right],\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Moreover, we observe that $\\log p({\\pmb y}_{i}|{\\pmb s})$ does not depend on $\\{\\rho_{k},\\gamma_{k}\\}$ and we can leave it out from the optimization problem. Additionally, ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\mathbb{E}_{p_{t}(k|y_{i})}\\left[\\mathbb{E}_{p_{t}(s|y_{i},k)}\\left[\\log p(s|k)+\\log p(k)\\right]\\right]}\\\\ &{}&{\\displaystyle=\\sum_{y_{i}\\in\\mathcal{Y}}\\sum_{k=1}^{K}p_{t}(k|y_{i})\\left(-\\frac{1}{2}\\left(S\\log2\\pi+\\displaystyle\\sum_{j=1}^{S}\\log\\gamma_{k,j}+\\displaystyle\\sum_{j=1}^{S}\\frac{\\mathbb{E}_{p_{t}(s|y_{i},k)}\\left[\\left|s_{j}\\right|^{2}\\right]}{\\gamma_{k,j}}\\right)+\\log\\rho_{k}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "nwehxetr es tewpe,  ilnest $p(\\pmb{s}|k)=\\mathcal{N}(\\pmb{s};\\mathbf{0},\\mathrm{diag}(\\gamma_{k}))$ ,a nwdh $\\gamma_{k,j}$ esa nthd e $j$ rdy eonf $\\gamma_{k}$ .t hIen hthe $\\mathbb{E}_{p_{t}(s|y_{i},k)}\\left[|s_{j}|^{2}\\right]=|\\mu_{k,j}^{s|y_{i},k}|^{2}+C_{k,j,j}^{s|y_{i},k}$ $\\mu_{k,j}^{s|y_{i},k}$ $C_{k,j,j}^{s|y_{i},k}$ $j$ entry of \u00b5sk|,ty and the diagonal of $C_{k,t}^{s|y_{i},k}$ in the tth iteration, respectively. Thus, our optimization problem of interest can be restated as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\displaystyle\\arg\\operatorname*{max}_{\\{\\rho_{k},\\gamma_{k}\\}}}&{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\displaystyle\\sum_{k=1}^{K}p_{t}(k|y_{i})\\left(-\\frac{1}{2}\\left(S\\log2\\pi+\\displaystyle\\sum_{j=1}^{S}\\left(\\log\\gamma_{k,j}+\\frac{|\\mu_{k,j}^{s|y_{i},k}|^{2}+C_{k,j,j}^{s|y_{i},k}}{\\gamma_{k,j}}\\right)\\right)+\\log\\rho_{k}\\right.}\\\\ &{\\quad\\left.\\mathrm{s.t.}\\displaystyle\\sum_{k}\\rho_{k}=1\\right.}&{}\\\\ &{\\quad\\left.\\begin{array}{r}{\\rho_{k}}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "with Lagrangian ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\sum_{y_{i}\\in\\mathcal{Y}}\\sum_{k=1}^{K}p_{t}(k|y_{i})\\Big(-\\frac{1}{2}\\Big(S\\log2\\pi+\\sum_{j=1}^{S}\\Big(\\log\\gamma_{k,j}+\\frac{|\\mu_{k,j}^{s|y_{i},k}|^{2}+C_{k,j,j}^{s|y_{i},k}}{\\gamma_{k,j}}\\Big)\\Big)+}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "and Lagrangian multiplier $\\nu$ . Taking the derivative of $\\mathcal{L}$ with respect to $\\gamma_{m,q}$ and $\\rho_{m}$ and setting it to zero leads to ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{\\partial}{\\partial\\gamma_{m,q}}\\mathcal{L}=-\\frac{1}{2}\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}(m|y_{i})\\left(\\frac{1}{\\gamma_{m,q}}-\\frac{|\\mu_{m,q}^{s|y_{i},k}|^{2}+C_{m,q,q}^{s|y_{i},k}}{\\gamma_{m,q}^{2}}\\right)=0}\\\\ {\\frac{\\partial}{\\partial\\rho_{m}}\\mathcal{L}=\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}\\frac{p_{t}(m|y_{i})}{\\rho_{m}}-\\nu=0}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and, thus, ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\gamma_{m,q,(t+1)}=\\frac{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}\\left(m|y_{i}\\right)\\left(|\\mu_{m,q}^{s|y_{i},k}|^{2}+C_{m,q,q}^{s|y_{i},k}\\right)}{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}\\left(m|y_{i}\\right)}}\\\\ {\\rho_{m,(t+1)}=\\frac{\\displaystyle\\sum_{y_{i}\\in\\mathcal{Y}}p_{t}\\left(m|y_{i}\\right)}{\\nu}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where (41) comes from the normalization of $\\textstyle\\sum_{k}\\rho_{k}=1$ . ", "page_idx": 15}, {"type": "text", "text": "G Estimators Based on the CSVAE and CSGMM ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "CSVAE. The CME approximation in (9) with the proposed CSVAE in Section 3.2 is given by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\hat{x}_{\\mathrm{CSVAE,CME}}^{*}=\\frac{D}{|\\mathcal{Z}|}\\sum_{\\tilde{z}_{i}\\in\\mathcal{Z}}\\mathbb{E}_{p_{\\theta}(s|\\tilde{z}_{i},y)}\\left[s|y,\\tilde{z}_{i}\\right]\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "with $\\mathcal{Z}$ containing samples $\\tilde{z}_{i}\\,\\sim\\,q_{\\phi}(z|y)$ . Alternatively, one can estimate $x^{*}$ based on a newly observed $\\textit{\\textbf{y}}$ in the following way. We use the mean $\\mu_{\\phi}(y)$ as maximum a posteriori (MAP) estimate based on $q_{\\phi}(z|y)$ and, then, estimate $x^{*}$ by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{x}_{\\mathrm{CSVAE,MAP}}^{*}=D\\,\\mathbb{E}_{p_{\\theta}(s|\\mu_{\\phi}(y),y)}\\left[s|y,\\mu_{\\phi}(y)\\right]=D\\mu_{\\theta}^{s|y,\\mu_{\\phi}(y)}(\\mu_{\\phi}(y)).}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "This method is applied in [32] to reduce computational complexity, but also deviates from the CME approximation and potentially improves the perceptual quality of the reconstruction. ", "page_idx": 15}, {"type": "text", "text": "CSGMM. In case of the proposed CSGMM in Section 3.3 the CME approximation in (9) exhibits a closed form, i.e., ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\hat{x}_{\\mathrm{CSGMM,CME}}^{*}=D\\sum_{k}p(k|y)\\mathbb{E}_{p(s|k,y)}[s|k,y].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "An alternative estimator of $x^{*}$ is given by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{x}_{\\mathrm{CSGMM,MAP}}^{*}=D\\,\\mathbb{E}_{p(s|\\hat{k}_{\\mathrm{MAP}},y)}[s|\\hat{k}_{\\mathrm{MAP}},y]}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "with $\\hat{k}_{\\mathrm{MAP}}=\\operatorname{argmax}p(k|\\pmb{y})$ [22]. A pseudo-code for all estimators is provided in Appendix $_\\mathrm{N}$ (cf.   \nalgorithm 2-6). ", "page_idx": 15}, {"type": "text", "text": "H CSVAE and CSGMM Training on Ground-Truth Data ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The CSGMM as well as the CSVAE can both be trained given ground-truth datasets. For training the CSGMM, this dataset either contains the compressible ground-truth signals $s_{i}$ , i.e., $\\boldsymbol{S}$ , or the signals $\\pmb{x}_{i}$ themself, i.e., $\\mathcal{X}$ . On the other hand, for training the CSVAE, both datasets must also contain their corresponding observations $\\pmb{y}_{i}$ . Thus, the training dataset must be $\\mathcal{G}$ or $\\mathcal{W}$ (cf. Section 2.1). ", "page_idx": 15}, {"type": "text", "text": "CSGMM. To train the CSGMM, the training goal is to maximize the log-evidence of the training dataset. In case of having access to $\\boldsymbol{S}$ , the vanilla EM algorithm is employed with the modification of enforcing the GMM\u2019s means to be zero and covariance matrices to be diagonal in every update step. More precisely, after computing the posteriors $p_{t}(k|s_{i})$ by the Bayes rule in the $t$ th iteration, the m-step is given by ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "equation", "text": "$$\n\\gamma_{k,(t+1)}=\\frac{\\sum_{s_{i}\\in\\mathcal{S}}p_{t}(k|s_{i})|s_{i}|^{2}}{\\sum_{s_{i}\\in\\mathcal{S}}p_{t}(k|s_{i})},\\;\\rho_{k,(t+1)}=\\frac{\\sum_{s_{i}\\in\\mathcal{S}}p_{t}(k|s_{i})}{|\\mathcal{S}|}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "In case of having access to $\\mathcal{X}$ , the same modified EM algorithm from Section 3.3 is employed by exchanging $_{A D}$ with $_{D}$ and setting the noise variance $\\sigma^{\\bar{2}}$ to some small value. ", "page_idx": 16}, {"type": "text", "text": "CSVAE. To train the CSVAE using the dataset $\\mathcal{G}$ , we also aim optimize the log-evidence of the training dataset ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\sum_{(s_{i},y_{i})\\in\\mathcal{G}}\\log p_{\\pmb\\theta}(s_{i},y_{i})=\\sum_{(s_{i},y_{i})\\in\\mathcal{G}}\\log p_{\\pmb\\theta}(y_{i}|s_{i})+\\log p_{\\pmb\\theta}(s_{i})\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "By considering that $\\log p_{\\theta}({\\pmb y}_{i}|{\\pmb s}_{i})$ does not depend on the CSVAE\u2019s parameters (see (7)), introducing additional variational parameters $\\phi$ and approximating $p_{\\pmb\\theta}(\\pmb z|\\pmb y,\\pmb s)$ with $q_{\\phi}(z|y)$ , we apply the standard reformulations of VAEs, which ends up in an ELBO resembling the standard ELBO in (6), given by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\tilde{L}(\\pmb\\theta,\\phi)=\\sum_{(s_{i},y_{i})\\in\\mathcal{G}}\\log p_{\\pmb\\theta}(s_{i}|\\tilde{z}_{i})-\\mathrm{D}_{\\mathrm{KL}}(q_{\\phi}(\\boldsymbol z|\\pmb y_{i})||p(\\boldsymbol z))\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "with $\\tilde{z}_{i}\\sim q_{\\phi}(z|y_{i})$ and $p_{\\pmb\\theta}(\\pmb{s}_{i})$ being defined in (10) with $p(z)=\\mathcal{N}(z;\\mathbf{0},\\mathbf{I})$ . In the case of training the CSVAE with $\\mathcal{W}$ , the same training procedure from Section 3.2 is applied, resulting in the modified ELBO $\\tilde{L}_{(\\theta,\\phi)}$ approximated by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\sum_{(x_{i},y_{i})\\in\\mathcal{W}}\\bigg(\\mathbb{E}_{p_{\\theta}(s|\\tilde{z}_{i},x_{i})}\\big[\\log p(x_{i}|s)\\big]-\\operatorname{D}_{\\mathrm{KL}}(q_{\\phi}(z|y_{i})||p(z))-\\operatorname{D}_{\\mathrm{KL}}(p_{\\theta}(s|\\tilde{z}_{i},x_{i})||p_{\\theta}(s|\\tilde{z}_{i}))\\bigg)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where we set the variational distribution $q_{\\phi}(s,z|x_{i},y_{i})$ of the latent variables given the observations to $q_{\\phi}(z|y_{i})p_{\\theta}(s|z,x_{i})$ . Consequently, instead of computing the posterior $p_{\\pmb\\theta}(\\pmb{s}|\\pmb{z},\\pmb{y}_{i})$ , we use $p_{\\pmb\\theta}(\\pmb{s}|\\pmb{z},\\pmb{x}_{i})$ , which is given by (8) with $_{D}$ instead of $_{A D}$ and setting the noise variance $\\sigma^{2}$ to some small value. Additionally, to compute $\\mathbb{E}_{p_{\\theta}(s|\\tilde{z}_{i},\\mathbf{x}_{i})}[\\log p(\\mathbf{x}_{i}|s)]$ we replace $\\pmb{y}_{i}$ , $M$ and $_{A D}$ in (29) with $\\pmb{x}_{i}$ , $N$ and $_{D}$ , respectively. ", "page_idx": 16}, {"type": "text", "text": "I Implementation Aspects for Reducing the Computational Overhead ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In a first step towards a computationally more efficient implementation for training the CSVAE and CSGMM, we reformulate the expressions of the conditional mean \u00b5s\u03b8|y,z(z) and conditional covariance matrix $C_{\\theta}^{s|y,z}(z)$ from [17, 18] in (8). To do so, we observe that conditioned on $z,s$ and $\\textit{\\textbf{y}}$ in (7) are jointly Gaussian. In consequence, we can alternatively apply the standard formulas for computing the moments of a conditional distribution for a jointly Gaussian setup [49], i.e., ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mu_{\\theta}^{s|y,z}(z)=C_{\\theta}^{s,y|z}(z)\\left(C_{\\theta}^{y|z}(z)\\right)^{-1}y}\\\\ &{C_{\\theta}^{s|y,z}(z)=\\mathrm{diag}(\\gamma_{\\theta}(z))-C_{\\theta}^{s,y|z}(z)\\left(C_{\\theta}^{y|z}(z)\\right)^{-1}C_{\\theta}^{s,y|z}(z)^{\\mathrm{T}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "with ", "page_idx": 16}, {"type": "equation", "text": "$$\nC_{\\theta}^{y|z}(z)=A D\\mathrm{diag}(\\gamma_{\\theta}(z))D^{\\mathrm{T}}A^{\\mathrm{T}}+\\sigma^{2}\\,{\\bf I}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and $C_{\\theta}^{s,y|z}(z)=\\mathrm{diag}(\\gamma_{\\theta}(z))D^{\\mathrm{T}}A^{\\mathrm{T}}$ . Importantly, we do not need to explicitly compute $C_{\\theta}^{s|y,z}(z)$ according to (51). The subsequent reformulations differ between CSGMM and CSVAE. ", "page_idx": 16}, {"type": "text", "text": "CSGMM. For the CSGMM, only the diagonal entries of $C_{\\theta}^{s|y,z}(z)$ must be explicitly computed, i.e., ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\operatorname{diag}\\Big(C_{\\theta}^{s|y,z}(z)\\Big)=\\gamma_{\\theta}(z)-\\operatorname{diag}\\left(C_{\\theta}^{s,y|z}(z)\\left(C_{\\theta}^{y|z}(z)\\right)^{-1}C_{\\theta}^{s,y|z}(z)^{\\mathrm{T}}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "The matrix $C_{\\theta}^{s,y|z}(z)\\left(C_{\\theta}^{y|z}(z)\\right)^{-1}$ (i.e., $C_{k}^{s,y|k}\\left(C_{k}^{y|k}\\right)^{-1}{}^{_{6}})$ has been precomputed for the conditional mean in (50) and subsequently determining $\\mathrm{diag}\\left(C_{k}^{s,y|k}\\left(C_{k}^{y|k}\\right)^{-1}\\left(C_{k}^{s,y|k}\\right)^{\\mathrm{T}}\\right)$ only requires ${\\mathcal{O}}(S M)$ operations. Moreover, $\\left(C_{k}^{y|k}\\right)^{-1}$ has already been determined for evaluating the posterior distributions $p(k|y)$ in the preceding e-step (cf. Section 3.3). The closed-form m-step in (18) only takes diag $\\left(C_{k}^{s|y,k}\\right)$ for which we can directly use (53). In this way, we circumvent explicitly computing the full posterior covariance matrices in (8), rendering training the CSGMM more efficient. ", "page_idx": 17}, {"type": "text", "text": "CSVAE. The objective for training the CSVAE is given in (15), which consists of the modified reconstruction loss in (29) as well as the KL divergences in (30) and (31). While \u00b5s\u03b8|y,z(z) in (29) can be directly computed using (50), we reformulate the trace-term in (29) to circumvent the explicit computation of $C_{\\theta}^{s|y,z}(z)$ . To do so, we apply the following steps ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathrm{tr}(A D C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})D^{\\mathrm{T}}A^{\\mathrm{T}})=\\mathrm{tr}\\left(C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})D^{\\mathrm{T}}A^{\\mathrm{T}}A D\\right)=\n$$", "text_format": "latex", "page_idx": 17}, {"type": "equation", "text": "$$\n\\sigma^{2}\\operatorname{tr}\\left(C_{\\theta}^{s\\vert y_{i},{\\tilde{z}}_{i}}({\\tilde{z}}_{i})\\left(\\left(C_{\\theta}^{s\\vert y_{i},{\\tilde{z}}_{i}}({\\tilde{z}}_{i})\\right)^{-1}-\\mathrm{diag}(\\gamma_{\\theta}^{-1}({\\tilde{z}}_{i}))\\right)\\right)=\\sigma^{2}\\left(S-\\sum_{j=1}^{S}\\frac{C_{\\theta,j,j}^{s\\vert y_{i},{\\tilde{z}}_{i}}({\\tilde{z}}_{i})}{\\gamma_{\\theta,j}({\\tilde{z}}_{i})}\\right)\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "with $C_{\\theta,j,j}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ being the $j$ th diagonal entry of $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ and $\\gamma_{\\pmb{\\theta},j}(\\tilde{z}_{i})$ being the $j$ th entry of $\\gamma_{\\pmb\\theta}(\\widetilde{\\boldsymbol z}_{i})$ . For the derivation, we mainly apply the formula of $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ in (8). By observing that the $\\sigma^{2}$ in (55) cancels out with the $1/\\sigma^{2}$ in (29), the trace-term in (29) cancels out with $-S+$ $\\mathrm{tr}\\left(\\mathrm{diag}\\left((\\gamma_{\\pmb{\\theta}}(\\widetilde{z}_{i})^{-1}\\right)C_{\\pmb{\\theta}}^{s|\\pmb{y}_{i},\\widetilde{z}_{i}}(\\widetilde{z}_{i})\\right)$ in (30). We also reformulate $\\log\\operatorname*{det}\\left(C_{\\theta}^{s\\vert y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\right)$ in (30), rendering the explicit computation of $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ obsolete, i.e., ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\log\\operatorname*{det}\\left(C_{\\theta}^{\\alpha_{1}\\alpha_{2}}(\\hat{z}_{i})\\right)=-\\log\\operatorname*{det}\\left(\\frac{1}{\\sigma^{2}}D^{\\tau}A^{\\tau}A D+\\mathrm{diag}(\\gamma_{\\theta}^{-1}(\\hat{z}_{i}))\\right)=}\\\\ {-\\log\\operatorname*{det}\\left(\\left(\\frac{1}{\\sigma^{2}}D^{\\tau}A^{\\tau}A D+\\mathrm{diag}(\\gamma_{\\theta}^{-1}(\\hat{z}_{i}))\\right)\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i}))\\mathrm{diag}(\\gamma_{\\theta}^{-1}(\\hat{z}_{i}))\\right)=}\\\\ {-\\log\\operatorname*{det}\\left(\\left(\\frac{1}{\\sigma^{2}}D^{\\tau}A^{\\tau}A D+\\mathrm{diag}(\\gamma_{\\theta}^{-1}(\\hat{z}_{i}))\\right)\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i}))\\right)+\\log\\operatorname*{det}(\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i})))=}\\\\ {-\\log\\operatorname*{det}\\left(\\frac{1}{\\sigma^{2}}D^{\\tau}A^{\\tau}A D\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i}))+\\mathbf{I}\\right)+\\log\\operatorname*{det}(\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i})))=}\\\\ {-\\log\\operatorname*{det}\\left(\\frac{1}{\\sigma^{2}}D^{\\tau}A^{\\tau}A D\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i}))D^{\\tau}A^{\\tau}+\\right)+\\log\\operatorname*{det}(\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i})))=}\\\\ {-\\log\\operatorname*{det}\\left(\\frac{1}{\\sigma^{2}}A D\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i}))D^{\\tau}A^{\\tau}+\\right)+\\log\\operatorname*{det}(\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i})))=}\\\\ {-\\log\\operatorname*{det}(\\frac{1}{\\sigma^{2}}\\mathbf{I})-\\log\\operatorname*{det}C_{\\theta}^{\\tau}|^{\\delta_{1}}(\\hat{z}_{i})+\\log\\operatorname*{det}(\\mathrm{diag}(\\gamma_{\\theta}(\\hat{z}_{i})))=}\\\\ {\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where we use the formula of $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ in (8), $C_{\\theta}^{y|\\tilde{z}_{i}}(\\tilde{z}_{i})=A D\\mathrm{diag}(\\gamma_{\\theta}(\\tilde{z}_{i}))D^{\\mathrm{T}}A^{\\mathrm{T}}+\\sigma^{2}\\,{\\bf I}$ as well as Sylvester\u2019s determinant theorem for the reformulation from (59) to (60). ", "page_idx": 17}, {"type": "text", "text": "In general, equivalent reformulations can also be applied when the CSVAE and CSGMM are trained on ground-truth data (cf. Appendix $\\mathrm{H}$ ) by replacing $C_{\\theta}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ with $C_{\\theta}^{s|x_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})$ . ", "page_idx": 17}, {"type": "image", "img_path": "GqefKjw1OR/tmp/3aab8adf29a410daab0d1a546a0fd9c0b31f32d773c4fd68bb0802c120bba931.jpg", "img_caption": ["Figure 5: Wavelet Transforms of the exemplary signals in Fig. 4. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "J Implementation of the 1D Dataset of Piecewise Smooth Functions ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "The artificial 1D dataset of piecewise smooth functions is generated in the following way: ", "page_idx": 18}, {"type": "equation", "text": "$$\nx_{i}(t)=\\left\\{\\!\\!\\begin{array}{l l}{\\sum_{j=0}^{2}h_{1,i}^{(j)}t^{j}+a_{i}^{(1)}\\sin(4\\pi t+\\eta_{i}^{(1)}),\\,t\\in[0,g_{1})}\\\\ {\\sum_{j=0}^{2}h_{2,i}^{(j)}t^{j}+a_{i}^{(2)}\\sin(4\\pi t+\\eta_{i}^{(2)}),\\,t\\in[g_{1},g_{2})}\\\\ {\\sum_{j=0}^{2}h_{3,i}^{(j)}t^{j}+a_{i}^{(2)}\\sin(4\\pi t+\\eta_{i}^{(3)}),\\,t\\in[g_{2},4)}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where $h_{m,i}^{(j)}\\sim$ Bernoulli(0.5) and either takes $-0.4$ or 0.4, $a_{i}^{(m)}\\sim\\mathcal{N}(0,0.1^{2})$ , $\\eta_{i}^{(m)}\\sim\\mathcal{U}(0,2\\pi)$ $g_{1}\\sim\\mathcal{U}(0,2)$ and $g_{2}\\sim\\mathcal{U}(2,4)$ . After generation, each $x_{i}(t)$ is sampled equidistantly $N\\,=\\,256$ times, and its samples are stored in vectors $\\pmb{x}_{i}$ , which then constitute the ground-truth dataset $\\mathcal{X}$ . Exemplary signals and their wavelet decomposition are given in Fig. 4 and 5, respectively. ", "page_idx": 18}, {"type": "text", "text": "K Detailed Overview of Hyperparameter Configurations ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "MNIST & FashionMNIST. The non-learnable baselines for the simulations on MNIST are Lasso as well SBL. We apply Lasso directly in the pixel domain with its shrinkage parameter $\\lambda$ set to 0.1 in line with [4]. For SBL, we use an overcomplete $d b4$ dictionary with symmetric extension [47]. Moreover, although we do not include noise in the simulations for MNIST, we set $\\sigma^{2}$ in (2) to an increment corresponding to 40dB SNR to be able to apply the computationally efficient reformulations from Appendix I. For CSGAN, we use the exact hyperparameter configurations specified in [29]. For CSGMM, we set the number $K$ of components to 32 and iterate until the increments of the training dataset\u2019s log-evidence reach the tolerance parameter of $10^{-3}$ , a standard stopping criterion for GMMs [50]. The CSVAE encoders and decoders contain two fully connected layers with ReLU activation and one following linear layer, respectively. The widths of the layers are set in a way such that for the first two layers, the width increases linearly from the input dimension to 256, while the final linear layer maps from 256 to the desired dimension (i.e., either $S$ for the decoder or twice the latent dimension for the encoder). The latent dimension is set to 16, the learning rate is set to $2\\cdot10^{-5}$ , and the batch size is set to 64. We use the Adam optimizer for optimization [46]. We once reduce the learning rate by a factor of 2 during training and stop the training, when the modified ELBO in (15) for a validation set of 5000 samples does not increase. For CSGMM as well as CSVAE we set $\\sigma^{2}$ in (7) to an increment corresponding to 40dB SNR to be able to apply the training reformulation from Appendix I. We also use the same overcomplete db4 dictionary as for SBL. Moreover, we use $N_{s}=64$ samples to approximate the outer expectation in (9). ", "page_idx": 18}, {"type": "text", "text": "Piecewise smooth function. For the simulations on the set of piecewise smooth functions, we adjust the shrinkage parameter of Lasso based on a ground-truth validation dataset of 5000 samples once for every $M$ . Moreover, we also use the overcomplete db4 dictionary for Lasso as for all other dictionary-based estimators. Instead of choosing 256, we choose 128 as the maximum width of the en- and decoder layers. Otherwise, the hyperparameters remain the same as for the simulations on MNIST. ", "page_idx": 18}, {"type": "text", "text": "CelebA. For the simulations on celebA, we set the shrinkage parameter $\\lambda$ of Lasso to 0.00001 (cf. [4]). As celebA contains colored images, we choose a block-diagonal dictionary with the overcomplete $d b4$ dictionary three times along the diagonal and zero matrices in all off-diagonals. ", "page_idx": 18}, {"type": "image", "img_path": "GqefKjw1OR/tmp/d88be0a924cbcb5800dcac816d7aa1e4d280724ccb9e2a69b8c8154c3e085913.jpg", "img_caption": ["Figure 6: a) and b) nMSE and SSIM comparison over number $N_{s}$ of estimations per observation (MNIST, $M\\ =\\ 200,N_{t}\\ =\\ 20000)$ , c)-f) nMSE and SSIM performance of models trained on compressed data (solid curves) as well as models trained on ground-truth data (dashed curves) $\\mathcal{W}$ and $\\mathcal{X}$ over c) and d) $M$ $N_{t}=20000$ , MNIST), and e) and f) $N_{t}$ ( $M=160$ , MNIST), g) and h) performance comparison on FashionMNIST. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "Each block corresponds to one color channel. We use this dictionary for all estimators on celebA. The batch size to set to 32. Otherwise, all hyperparameters are chosen in the same way as for MNIST. Generally, we did no detailed network architecture search for the proposed CSVAE since we observed no considerable change in performance by testing out different architectures. ", "page_idx": 19}, {"type": "text", "text": "L Additional Results ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Robustness comparison. The proposed CSVAE relies on approximating the outer expectation in (9) by Monte-Carlo sampling. Similar to this approximation, the baseline CSGAN also applies several random restarts, i.e., it estimates the ground-truth sample several times for a single observation and chooses the best-performing estimation by comparing their tractable measurement errors [29, 4]. In this way, both methods can be compared in terms of the number $N_{s}$ of repeated estimations they perform for a single observation. In Fig. 6 a) and b), we compare the nMSE and the SSIM for both with respect to $N_{s}$ . We evaluate their performance on the MNIST dataset with $M=200$ and $N_{t}=20000$ . It can be seen that the proposed CSVAE achieves already good performance for a single Monte-Carlo sample, i.e., $N_{s}=1$ , while CSGAN is significantly worse when only using one restart (i.e., $N_{s}=1$ ) compared to having many restarts. ", "page_idx": 19}, {"type": "text", "text": "MNIST with training on ground-truth data. In Fig. 6 c)-f), the results from Fig. 2 a)-d) are extended with the performance of the corresponding models trained on ground-truth data, which are represented by the dashed curves. It should be noted that ground-truth information here refers to the MNIST images $\\pmb{x}_{i}$ themself. In consequence, CSGAN as well as the proposed CSGMM are trained on $\\mathcal{X}$ , while CSVAE is trained on $\\mathcal{W}$ (cf. Section 2.1 and Appendix H). For the sake of readability, we leave out the error bars in these plots. Generally, the CSGAN, as well as the proposed CSVAE and CSGMM, benefit from the additional information during training in terms of the distortion metrics nMSE and SSIM. For the nMSE, the overall performance comparison remains the same, while for SSIM CSGAN trained on $\\mathcal{X}$ outperforms CSVAE and CSGMM trained on $\\mathcal{W}$ and $\\mathcal{X}$ , respectively. In Fig. 7, additional exemplary reconstructed MNIST images are shown for all models trained on compressed as well as ground-truth data $\\mathcal{X}$ in case of the CSGAN and CSGMM and $\\mathcal{W}$ in case of the CSVAE. It can be seen that perceptually, the CSGAN significantly benefits from the ground-truth information during training, while the proposed CSVAE and CSGMM perform similarly in perception for a training set of compressed or ground-truth samples. This highlights their effective regularization effect explained in Section 3.4. ", "page_idx": 19}, {"type": "image", "img_path": "GqefKjw1OR/tmp/cd2b48bd07d5d6f42f4001d62c768b3313e7a053f12b3f84d0b1d045d1f535b5.jpg", "img_caption": ["Figure 7: Exemplary reconstructed MNIST images for $M\\,=\\,200$ , $N_{t}\\,=\\,20000$ from a) models, which are solely trained on compressed data (with observations of dimension $M$ ), and b) models, which are trained on ground truth data. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "FashionMNIST. In Fig. $6\\,\\mathrm{g}$ ) and h), the performance of SBL, CSGAN, and the proposed CSVAE and CSGMM for varying observation dimensions $M$ and fixed number $N_{t}\\,=\\,20000$ of training samples is shown. While for small $M$ , CSGAN outperforms the proposed CSVAE and CSGMM, its performance saturates for increasing $M$ , and it performs worse than CSVAE and CSGMM. In this case, CSGAN\u2019s regularization to enforce the reconstruction to be in the generator\u2019s domain is beneficial for strongly compressed observations (i.e., for small $M$ ). In Fig. 8, exemplary reconstructed FashionMNIST images are shown. ", "page_idx": 20}, {"type": "text", "text": "Additional exemplary reconstructions. In Fig. 9, 10 and 11, additional exemplary reconstructions for the piecewise smooth functions, MNIST as well as celebA are shown. ", "page_idx": 20}, {"type": "text", "text": "M Overview of Compute Resources ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "All models have been simulated on an NVIDIA A40 GPU except for the proposed CSGMM, whose experiments have been conducted on an Intel(R) Xeon(R) Gold 6134 CPU @ 3.20GHz. We report the number of learnable parameters, the time used for training as well as the average reconstruction time after training for simulations with piecewise smooth functions, MNIST and celebA in Table 1, 2 and 3, respectively. The average reconstruction time of estimating $x^{*}$ from a newly observed $\\textit{\\textbf{y}}$ has been measured for the MAP-based estimators in Appendix G. While the reported numbers give an overview of the comparison between the different tested models, it is important to note that we did not aim to fully optimize our simulations for computational efficiency. ", "page_idx": 20}, {"type": "text", "text": "N Pseudo-Code for the Training and Inference of the CSVAE and CSGMM ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Algorithm 1 summarizes one iteration of the training procedure for the CSVAE. Algorithm 4 does the same for the CSGMM. In algorithm 2 and 3, the pseudo-code of the CME approximation and the MAP-based estimator using the CSVAE is presented, respectively (cf. (42) and (43)). In algorithm 5 and 6, the same is given for the CSGMM (cf. (44) and (45)) ", "page_idx": 20}, {"type": "image", "img_path": "GqefKjw1OR/tmp/2a5f0d1bb45c39f1d2e9c7b6480bdfafac2d68368972eafc3e91dd805e6b99f2.jpg", "img_caption": ["Figure 8: Exemplary reconstructed FashionMNIST images ( $M=200$ , $N_{t}=20000$ , Fig. 6) g), h)) "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "GqefKjw1OR/tmp/957b78b09d81152f4e233ff55200d3e1231907eb2cbc45566385057d22a2b67b.jpg", "img_caption": ["Figure 9: Exemplary reconstructed piece-wise smooth functions ( $M=140$ , $N_{t}=10000$ , Fig. 2 f)) "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "GqefKjw1OR/tmp/31ca2a054e23355c854a433f21cd94ee45cfabc3709e13507549c6d28f432c6e.jpg", "img_caption": ["Figure 10: Exemplary reconstructed MNIST images $M=160$ , $N_{t}=20000$ , Fig. 2 a)) "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "GqefKjw1OR/tmp/f393975daddec0f612437bc6a04e76c182cc2cebda0829152cff16704dcf39bb.jpg", "img_caption": ["", "Figure 11: Exemplary reconstructed celebA images ( $M=2700$ , $N_{t}=5000$ , Fig. 3 a)) "], "img_footnote": [], "page_idx": 21}, {"type": "table", "img_path": "GqefKjw1OR/tmp/1541efdf9ea263663e20552dcb48ce610d4f9d6fd2daf38dba8fc49286dcfe5d.jpg", "table_caption": [], "table_footnote": ["Algorithm 1 Update Step in the Training Phase of the CSVAE "], "page_idx": 22}, {"type": "text", "text": "Input: parameters in the tth iteration ${\\pmb\\theta}^{(t)}$ (i.e., the decoder) and $\\phi^{(t)}$ (i.e., the encoder), batch $\\mathcal{V}_{\\mathrm{batch}}$ , meas.   \nmatrix $\\pmb{A}$ (or corresponding batch meas. matrices $\\{A_{i}\\}_{i})$ , dict. $_{D}$ , noise $\\sigma^{2}$ , optimizer $A d a m_{t}$ in the tth   \niteration, learning rate $\\lambda$   \nOutput: parameters in the $(t+1)\\cdot$ th iteration $\\pmb{\\theta}^{(t+1)}$ , $\\phi^{(t+1)}$   \nfor $i=1$ to $|\\mathcal{D}_{\\mathrm{batch}}|$ do 1) \u00b5\u03d5(t)(yi), \u03c3\u03d5(t)(yi)\u2190En\u2212c\u2212od\u2212e\u2212r 2) draw $\\tilde{z}_{i}\\sim q_{\\phi^{(t)}}(z|y_{i})=\\mathcal{N}(z;\\mu_{\\phi^{(t)}}(y_{i}),\\sigma_{\\phi^{(t)}}(y_{i}))$ (via reparameterization trick [36]) 3) $\\gamma_{\\pmb\\theta^{(t)}}\\left(\\tilde{z}_{i}\\right)\\,\\llangle\\frac{\\mathrm{Decoder}}{z_{i}}\\,\\,\\tilde{z}_{i}$ $\\begin{array}{r l}&{4)\\,\\left(C_{\\theta^{(t)}}^{y|\\tilde{z}_{i}}(\\tilde{z}_{i}),\\mu_{\\theta^{(t)}}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i})\\right)\\,\\stackrel{(52),(50)}{\\textstyle\\longleftrightarrow}\\,\\left(\\gamma_{\\theta^{(t)}}(\\tilde{z}_{i}),A,D,\\sigma^{2},y_{i}\\right)}\\\\ &{5)\\,\\mathbb{E}_{p_{\\theta^{(t)}}(s|\\tilde{z}_{i},y_{i})}[\\log p(y_{i}|s)]\\,\\stackrel{\\mathrm{Appendix~D,I}}{\\textstyle\\longleftrightarrow}\\,\\left(\\mu_{\\theta^{(t)}}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i}),A,D,\\sigma^{2},y_{i}\\right)}\\\\ &{6)\\,\\mathrm{D}\\mathrm{KL}(q_{\\phi^{(t)}}(z|y_{i})||p(z))\\,\\stackrel{\\mathrm{Appendix~E}}{\\textstyle\\longleftrightarrow}\\,\\left(\\mu_{\\phi^{(t)}}(y_{i}),\\sigma_{\\phi^{(t)}}(y_{i})\\right)}\\\\ &{7)\\,\\mathrm{D}\\mathrm{K}_{\\mathrm{L}}(p_{\\theta^{(t)}}(s|\\tilde{z}_{i},y_{i})||p_{\\theta^{(t)}}(s|\\tilde{z}_{i}))\\,\\stackrel{\\mathrm{Appendix~E,I}}{\\textstyle\\longleftrightarrow}\\,\\left(C_{\\theta^{(t)}}^{y|\\tilde{z}_{i}}(\\tilde{z}_{i}),\\mu_{\\theta^{(t)}}^{s|y_{i},\\tilde{z}_{i}}(\\tilde{z}_{i}),\\gamma_{\\theta^{(t)}}(\\tilde{z}_{i})\\right)}\\end{array}$   \nend for   \nL(CSVAE)   \n(\u03b8\u03b8(t+,1\u03d5), \u03d5)(t+1) \u2190Adamt(L((C\u03b8(StV)A,E\u03d5)(t)), \u03bb, \u03b8(t), \u03d5(t)) ", "page_idx": 22}, {"type": "text", "text": "Algorithm 2 CME Approximation with the CSVAE in the Inference Phase (cf. (42)) Input: observation $\\textit{\\textbf{y}}$ , encoder $(\\mu_{\\phi}(\\cdot),\\sigma_{\\phi}(\\cdot))$ , decoder $\\gamma_{\\theta}(\\cdot)$ , meas. matrix $\\pmb{A}$ , dict. $_{D}$ , noise $\\sigma^{2}$ , cardinality $|\\mathcal{Z}|$ in (42) Output: CME approximation $\\hat{\\pmb{x}}_{\\mathrm{CME}}^{*}$ 1) $\\mu_{\\phi}(y)$ , $\\pmb{\\sigma}_{\\phi}(\\pmb{y})\\leftarrow\\pmb{\\mathrm{Encoder}}\\pmb{y}$ for $i=1$ to $|\\mathcal{Z}|$ do 2) draw $\\tilde{z}_{i}\\tilde{\\textmd{e}}\\tilde{q}_{\\phi}(z|\\pmb{y})=\\mathcal{N}(z;\\pmb{\\mu}_{\\phi}(\\pmb{y}),\\pmb{\\sigma}_{\\phi}(\\pmb{y}))$ 3) $\\gamma_{\\theta}\\big(\\tilde{z}_{i}\\big)\\ \\xleftarrow{\\mathrm{Decoder}}\\ \\tilde{z}_{i}$ 4) $\\mu_{\\theta}^{s|y,\\tilde{z}_{i}}(\\tilde{z}_{i})\\overset{\\scriptscriptstyle(50)}{\\longleftarrow}(\\gamma_{\\theta}(\\tilde{z}_{i}),A,D,\\sigma^{2},y)$ end for 5) $\\begin{array}{r}{\\hat{\\pmb{x}}_{\\mathrm{CME}}^{*}=D/|\\mathcal{Z}|\\sum_{i=1}^{|\\mathcal{Z}|}{\\pmb{\\mu}}_{\\theta}^{s|y,\\tilde{z}_{i}}(\\tilde{z}_{i})}\\end{array}$ ", "page_idx": 22}, {"type": "text", "text": "Algorithm 3 MAP-based Estimator with the CSVAE in the Inference Phase (cf. (43)) ", "page_idx": 23}, {"type": "text", "text": "Input: observation $\\pmb{y}$ , encoder $(\\mu_{\\phi}(\\cdot),\\sigma_{\\phi}(\\cdot))$ , decoder $\\gamma_{\\theta}(\\cdot)$ , meas. matrix $\\pmb{A}$ , dict. $_{D}$ , noise $\\sigma^{2}$   \nOutput: MAP-based estimator $\\hat{\\pmb{x}}_{\\mathbf{MAP}}^{*}$   \n1) \u00b5\u03d5(y)\u2190En\u2212c\u2212od\u2212e\u2212r   \n3) $\\gamma_{\\theta}(\\mu_{\\phi}({\\pmb y}))\\ {\\xleftarrow{\\mathrm{Decoder}}}\\ {\\mu_{\\phi}(\\pmb y)}$   \n4) \u00b5\u03b8 $\\mu_{\\theta}^{s|y,\\mu_{\\phi}(y)}(\\mu_{\\phi}(y))\\xleftarrow{(50)}\\left(\\gamma_{\\theta}(\\mu_{\\phi}(y)),A,D,\\sigma^{2},y\\right)$   \n5) $\\hat{\\pmb{x}}_{\\mathrm{MAP}}^{*}=D\\mu_{\\theta}^{s|y,\\mu_{\\phi}(y)}(\\pmb{\\mu}_{\\phi}(\\pmb{y}))$ ", "page_idx": 23}, {"type": "text", "text": "Algorithm 4 One EM Step in the Training Phase of the CSGMM with one fixed $\\pmb{A}$ ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Input: parameters in the tth iteration $\\{\\gamma_{k}^{(t)},\\rho_{k}^{(t)}\\}_{k=1}^{K}$ , training set $\\boldsymbol{\\wp}$ , meas. matrix $\\pmb{A}$ , dict. $_{D}$ ,   \nnoise \u03c32   \nOutput: parameters in the $(t+1)$ th iteration $\\{\\gamma_{k}^{(t+1)},\\rho_{k}^{(t+1)}\\}_{k=1}^{K}$   \nfor 1) Cky,|tk\u2190(1\u22127\u2212)  \u03b3 $k=1$ $C_{k,t}^{y|k}\\xleftarrow{(17)}\\left(\\gamma_{k}^{(t)},D,A,\\sigma^{2}\\right)$ to $K$ do 2) dia $\\varsigma\\left(C_{k,t}^{s|y,k}\\right)\\,\\llangle\\frac{(53)}{k}\\,\\left(\\gamma_{k}^{(t)},D,A,\\sigma^{2}\\right)$ for $i=1$ to $|\\mathcal{V}|$ do $\\mid p_{t}(k|y_{i})\\mathrel{\\mathop:}\\overbrace{\\vphantom{\\biggl(}}C_{k,t}^{y|k},\\rho_{k}^{(t)}\\biggr)$ 4) \u00b5k,t $\\mu_{k,t}^{s|y_{i},k}\\overset{(50)}{\\leftarrow}\\left(C_{k,t}^{y|k},D,A,\\sigma^{2},y_{i}\\right)$ end for 5) Yk \u03b3k(t+1), \u03c1(kt+1) Lemma (3.2) pt(k|yi), \u00b5k,t s|yi,k |Y| i=1 , diag Cks,|ty,k   \nend for ", "page_idx": 23}, {"type": "text", "text": "Algorithm 5 CME Approximation with the CSGMM in the Inference Phase (cf. (44)) ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Input: observation $\\pmb{y}$ , GMM $\\{\\rho_{k},\\gamma_{k}\\}_{k=1}^{K}$ , meas. matrix $\\pmb{A}$ , dict. $_{D}$ , noise $\\sigma^{2}$   \nOutput: CME approximation $\\hat{\\pmb{x}}_{\\mathrm{CME}}^{*}$   \nfor $k=1$ to $K$ do 1) Cky|k (\u21901\u22127\u2212) $C_{k}^{y|k}\\xleftarrow{(17)}\\big(\\gamma_{k},D,A,\\sigma^{2}\\big)$ 2 $)\\,p(k|\\pmb{y})\\,\\xleftarrow{\\mathrm{\\tiny~(Bayes)}}\\left(C_{k}^{\\pmb{y}|k},\\rho_{k}\\right)$ $3)\\,\\mu_{k}^{s|y,k}\\,\\overset{(50)}{\\leftarrow}\\,\\left(C_{k}^{y|k},D,A,\\sigma^{2},y\\right)$   \nend for   \n4) $\\begin{array}{r}{\\overrightharpoon{\\pmb{x}_{\\mathrm{CME}}^{*}}=D\\sum_{k=1}^{K}p(k|\\pmb{y})\\pmb{\\mu}_{k}^{s|\\mathfrak{y},k}}\\end{array}$ ", "page_idx": 23}, {"type": "text", "text": "Algorithm 6 MAP-based Estimator with the CSGMM in the Inference Phase (cf. (45)) ", "page_idx": 23}, {"type": "text", "text": "Input: observation $\\textit{\\textbf{y}}$ , GMM $\\{\\rho_{k},\\gamma_{k}\\}_{k=1}^{K}$ , meas. matrix $\\pmb{A}$ , dict. $_{D}$ , noise $\\sigma^{2}$   \nOutput: MAP-based estimation $\\hat{\\pmb{x}}_{\\mathbf{MAP}}^{*}$ k   \nfor $k=1$ to $K$ do 1) Cky|k $C_{k}^{y|k}\\xleftarrow{(17)}\\big(\\gamma_{k},D,A,\\sigma^{2}\\big)$ 2) p(k|y)\u2190(B\u2212a\u2212ye\u2212s\u2212) y|k , \u03c1k   \nend for   \n3) $\\hat{k}_{\\mathrm{MAP}}=$ argmax $p(k|y)$ $\\mu_{\\hat{k}_{\\mathrm{MAP}}}^{s|y,\\hat{k}_{\\mathrm{MAP}}}\\xleftarrow{}\\overset{(50)}{\\longleftarrow}\\left(C_{k}^{y|\\hat{k}_{\\mathrm{MAP}}},D,A,y,\\sigma^{2}\\right)$   \n5) x\u02c6\u2217MAP = D\u00b5k\u02c6 s|y,k\u02c6MAP ", "page_idx": 23}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: All claims made in the abstract and introduction are discussed in Section 2.4, 3.1, 3.2 ,3.3 and 4. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 24}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: Limitations are discussed in Section 3.4. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 24}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Assumptions of Theorem 3.1 and Lemma 3.2 are stated in the theorem and lemma themself, while rigorous proofs of Theorem 3.1 and Lemma 3.2 are provided in Appendix A and F, respectively. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 25}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: All necessary information to reproduce the results is stated in Section 4.1 and Appendix K. Appendix N provides additional pseudo-code to facilitate the reproduction. Moreover, a link to a GitHub repository with our source code is provided in Section 1. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 25}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: Three of the four used datasets (MNIST, FashionMNIST, celebA) are freely accessible, while a detailed description of generating the fourth dataset (piecewise smooth functions) is given in Appendix J. Moreover, a link to our GitHub repository containing the source code is provided in Section 1. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 26}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: All necessary information is stated in Section 4.1. Moreover, we refer to the link to a GitHub repository with source code in Section 1. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 26}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We used a reasonable high number of test samples, see Section 4.1. Additionally, we provide error bars representing the results\u2019 standard deviations. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 27}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The compute resources are provided in Appendix M. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 27}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We have carefully read the NeurIPS Code of Ethics and confirm that our research conforms with it in every respect. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 27}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: There are no potential societal impacts of our work, which we think must be specifically highlighted. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 28}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: We do not see any potential risk for misuse of our proposed model Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 28}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We cite and explicitly state the licenses and terms of use of all used datasets in Section 4.1. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: All details are outlined in Section 4 and N. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 29}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 29}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 29}, {"type": "text", "text": "\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 30}]