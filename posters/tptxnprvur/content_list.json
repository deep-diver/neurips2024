[{"type": "text", "text": "One-Step Effective Diffusion Network for Real-World Image Super-Resolution ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Rongyuan $\\mathbf{W}\\mathbf{u}^{1,2,\\star}$ , Lingchen $\\mathbf{Sun}^{1,2,\\star}$ , Zhiyuan $\\mathbf{M}\\mathbf{a}^{1,\\star}$ , Lei Zhang1,2, ", "page_idx": 0}, {"type": "text", "text": "1The Hong Kong Polytechnic University 2OPPO Research Institute {rong-yuan.wu, ling-chen.sun, zm2354.ma} $@$ connect.polyu.hk, cslzhang $@$ comp.polyu.edu.hk \u22c6Equal contribution \u2020Corresponding author ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The pre-trained text-to-image diffusion models have been increasingly employed to tackle the real-world image super-resolution (Real-ISR) problem due to their powerful generative image priors. Most of the existing methods start from random noise to reconstruct the high-quality (HQ) image under the guidance of the given low-quality (LQ) image. While promising results have been achieved, such RealISR methods require multiple diffusion steps to reproduce the HQ image, increasing the computational cost. Meanwhile, the random noise introduces uncertainty in the output, which is unfriendly to image restoration tasks. To address these issues, we propose a one-step effective diffusion network, namely OSEDiff, for the RealISR problem. We argue that the LQ image contains rich information to restore its HQ counterpart, and hence the given LQ image can be directly taken as the starting point for diffusion, eliminating the uncertainty introduced by random noise sampling. We finetune the pre-trained diffusion network with trainable layers to adapt it to complex image degradations. To ensure that the one-step diffusion model could yield HQ Real-ISR output, we apply variational score distillation in the latent space to conduct KL-divergence regularization. As a result, our OSEDiff model can efficiently and effectively generate HQ images in just one diffusion step. Our experiments demonstrate that OSEDiff achieves comparable or even better Real-ISR results, in terms of both objective metrics and subjective evaluations, than previous diffusion model-based Real-ISR methods that require dozens or hundreds of steps. The source codes are released at https://github.com/cswry/OSEDiff. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Image super-resolution (ISR) [13, 66, 29, 65, 6, 24, 46, 27, 61] is a classical yet still active research problem, which aims to restore a high-quality (HQ) image from its low-quality (LQ) observation suffering from degradations of noise, blur and low-resolution, etc. While one line of ISR research [13, 66, 29, 65, 6] simplifies the degradation process from HQ to LQ images as bicubic downsampling (or downsampling after Gaussian blur) and focus on the study on network architecture design, the trained models can hardly be generalized to real-world LQ images, whose degradations are often unknown and much more complex. Therefore, another increasingly popular line of ISR research is the so-called real-world ISR (Real-ISR) [61, 45] problem, which aims to reproduce perceptually realistic HQ images from the LQ images captured in real-world applications. ", "page_idx": 0}, {"type": "text", "text": "There are two major issues in training a Real-ISR model. One is how to build the LQ-HQ training image pairs, and another is how to ensure the naturalness of restored images, i.e., how to ensure that the restored images follow the distribution of HQ natural images. For the first issue, some researchers have proposed to collect real-world LQ-HQ image pairs using long-short camera focal lenses [3, 51]. However, this is very costly and can only cover certain types of real-world image degradations. Another more economical way is to simulate the real-world LQ-HQ image pairs by using complex image degradation pipelines. The representative works include BSRGAN [61] and Real-ESRGAN [45], where a random shuffling of basic degradation operators and a high-order degradation model are respectively used to generate LQ-HQ image pairs. ", "page_idx": 0}, {"type": "image", "img_path": "TPtXnpRvur/tmp/9682ecd87dfb72c276bcb05d61d1101a89e4fcb994509245cdb96228235f04eb.jpg", "img_caption": ["Figure 1: Performance and efficiency comparison among SD-based Real-ISR methods. (a). Performance comparison on the DrealSR benchmark [51]. Metrics like LPIPS and NIQE, where smaller scores indicate better image quality, are inverted and normalized for display. OSEDiff achieves leading scores on most metrics with only one diffusion step. (b). Model efficiency comparison. The inference time is tested on an A100 GPU with $512\\times512$ input image size. OSEDiff has the fewest trainable parameters and is over 100 times faster than StableSR [42]. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "With the given training data, how to train a robust Real-ISR model to output perceptually natural images with high quality becomes a key issue. Simply learning a mapping network between LQ-HQ paired data with pixel-wise losses can lead to over-smoothed results [24, 46]. It is crucial to integrate natural image priors into the learning process to reproduce HQ images. A few methods have been proposed to this end. The perceptual loss [18] explores the texture, color, and structural priors in a pre-trained model such as VGG-16 [38] and AlexNet [23]. The generative adversarial networks (GANs) [14] alternatively train a generator and a discriminator, and they have been adopted for Real-ISR tasks [24, 46, 45, 61, 27, 53]. The generator network aims to synthesize HQ images, while the discriminator network aims to distinguish whether the synthesized image is realistic or not. While great successes have been achieved, especially in the restoration of specific classes of images such as face images [56, 44], GAN-based Real-ISR tends to generate unpleasant details due to the unstable adversarial training and the difficulties in discriminating the image space of diverse natural scenes. ", "page_idx": 1}, {"type": "text", "text": "The recently developed generative diffusion models (DM) [39, 16], especially the large-scale pretrained text-to-image (T2I) models [37, 36], have demonstrated remarkable performance in various downstream tasks. Having been trained on billions of image-text pairs, the pre-trained T2I models possess powerful natural image priors, which can be well exploited to improve the naturalness and perceptual quality of Real-ISR outputs. Some methods [42, 57, 31, 52, 40, 59] have been developed to employ the pre-trained T2I model for solving the Real-ISR problem. While having shown impressive results in generating richer and more realistic image details than GAN-based methods, the existing SD-based methods have several problems to be further addressed. First, these methods typically take random Gaussian noise as the start point of the diffusion process. Though the LQ images are used as the control signal with a ControlNet module [63], these methods introduce unwanted randomness in the output HQ images [40]. Second, the restored HQ images are usually obtained by tens or even hundreds of diffusion steps, making the Real-ISR process computationally expensive. Though some one-step diffusion based Real-ISR methods [48] have been recently proposed, they fail in achieving high-quality details compared to multi-step methods. ", "page_idx": 1}, {"type": "text", "text": "To address the aforementioned issues, we propose a One-Step Effective Diffusion network, OSEDiff in short, for the Real-ISR problem. The UNet backbone in pre-trained SD models has strong capability to transfer the input data into another domain, while the given LQ image actually has rich information to restore its HQ counterpart. Therefore, we propose to directly feed the LQ images into the pre-trained SD model without introducing any random noise. Meanwhile, we integrate trainable ", "page_idx": 1}, {"type": "text", "text": "LoRA layers [17] into the pre-trained UNet, and finetune the SD model to adapt it to the Real-ISR task. On the other hand, to ensure that the one-step model can still produce HQ natural images as the multi-step models, we utilize variational score distillation (VSD) [49, 58, 10] for KL-divergence regularization. This operation effectively leverages the powerful natural image priors of pre-trained SD models and aligns the distribution of generated images with natural image priors. As illustrated in Fig. 1, our extensive experiments demonstrate that OSEDiff achieves comparable or superior performance measures to state-of-the-art SD-based Real-ISR models, while it significantly reduces the number of inference steps from $N$ to 1 and has the fewest trainable parameters, leading to more than $\\times100$ speedup in inference time over previous methods such as StableSR [42]. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Starting from SRCNN [13], deep learning-based methods have become prevalent for ISR. A variety of methods have been proposed [30, 66, 67, 9, 5, 29, 65, 6, 7] to improve the accuracy of ISR reconstruction. However, most of these methods assume simple and known degradations such as bicubic downsampling, limiting their applications to real-world images with complex and unknown degradations. In recent years, researches have been exploring the potentials of generative models, including GAN [14] and diffusion networks [16], for solving the Real-ISR problem. ", "page_idx": 2}, {"type": "text", "text": "GAN-based Real-ISR. The use of GAN for photo-realistic ISR can be traced back to SRGAN [24], where the image degradation is assumed to be bicubic downsampling. Later on, researchers found that GAN has the potential to perform real-world image restoration with more complex degradations [61, 45]. Specifically, by using randomly shuffled degradation and high-order degradation to generate more realistic LQ-HQ training pairs, BSRGAN [61] and Real-ESRGAN [45] demonstrate promising Real-ISR results, which trigger many following works [4, 27, 28, 53]. DASR [28] designs a tiny network to predict the degradation parameters to handle degradations of various levels. SwinIR [29] switches the generator from CNNs to stronger transformers, further enhancing the performance of Real-ISR. However, the adversarial training process in GAN is unstable and its discriminator is limited in telling the quality of diverse natural image contents. Therefore, GAN-based Real-ISR methods often suffer from unnatural visual artifacts. Some works such as LDL [27] and DeSRA [53] can suppress much the artifacts, yet they are difficult to generate more natural details. ", "page_idx": 2}, {"type": "text", "text": "Diffusion-based Real-ISR. Some early attempts [21, 20, 47] employ the denoising diffusion probabilistic models (DDPMs) [16, 39, 11] to address the ISR problem by assuming simple and known degradations (e.g., bicubic downsampling). These methods are training-free by modifying the reverse transition of pre-trained DDPMs using gradient descent, but they cannot be applied to complex unknown degradations. Recent researches [42, 57, 31, 40, 59] have leveraged stronger pre-trained T2I models, such as Stable Diffusion (SD) [1], to tackle the Real-ISR problem. In general, they introduce an adapter [63] to fine-tune the SD model to reconstruct the HQ image with the LQ image as the control signal. StableSR [42] finetunes a time-aware encoder and employs feature warping to balance fidelity and perceptual quality. PASD [57] extracts both low-level and high-level features from the LQ image and inputs them to the pre-trained SD model with a pixel-aware cross attention module. To further enhance the semantic-aware ability of the Real-ISR model, SeeSR [52] introduces degradation-robust tag-style text prompts and utilizes soft prompts to guide the diffusion process. To mitigate the potential risks of diffusion uncertainty, CCSR [40] leverages a truncated diffusion process to recover structures and finetunes the VAE decoder by adversarial training to enhance details. SUPIR [59] leverages the powerful generation capability of SDXL model and the strong captioning capability of LLaVA [32] to synthesize rich image details. ", "page_idx": 2}, {"type": "text", "text": "The above mentioned methods, however, require tens or even hundreds of steps to complete the diffusion process, resulting in unfriendly latency. SinSR shortens ResShift [60] to a single-step inference by consistency preserving distillation. Nevertheless, the non-distrbution-based distillation loss tends to obtain smooth results, and the model capacity of SinSR and ResShift are much smaller than the SD models to address Real-ISR problems. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Problem Modeling ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Real-ISR is to estimate an HQ image $\\hat{\\pmb x}_{H}$ from the given LQ image $x_{L}$ . This task can be conventionally modeled as an optimization problem: $\\hat{\\pmb{x}}_{H}=\\operatorname*{argmin}_{\\pmb{x}_{H}}\\!\\left(\\mathcal{L}_{d a t a}\\left(\\Phi(\\pmb{x}_{H}),\\pmb{x}_{L}\\right)+\\lambda\\mathcal{L}_{r e g}\\left(\\pmb{x}_{H}\\right)\\right)$ , where $\\Phi$ is the degradation function, $\\mathcal{L}_{d a t a}$ is the data term to measure the fidelity of the optimization output, $\\mathcal{L}_{r e g}$ is the regularization term to exploit the prior information of natural images, and scalar $\\lambda$ is the balance parameter. Many conventional ISR methods [13, 29, 65] restore the desired HQ image by assuming simple and known degradation models and employing hand-crafted natural image prior models (i.e., image sparsity based prior [54]). ", "page_idx": 2}, {"type": "image", "img_path": "TPtXnpRvur/tmp/7843096b0fec30d01abb148f700600445cc2c3b7d6381f3c0b1bbcdd6138cdfc.jpg", "img_caption": ["Figure 2: The training framework of OSEDiff. The LQ image is passed through a trainable encoder $E_{\\theta}$ , a LoRA finetuned diffusion network $\\epsilon_{\\theta}$ and a frozen decoder $D_{\\theta}$ to obtain the desired HQ image. In addition, text prompts are extracted from the LQ image and input to the diffusion network to stimulate its generation capacity. Meanwhile, the output of the diffusion network $\\epsilon_{\\theta}$ will be sent to two regularizer networks (a frozen pre-trained one and a fine-tuned one), where variational score distillation is performed in latent space to ensure that the output of $\\epsilon_{\\theta}$ follows HQ natural image distribution. The regularization loss will be back-propagated to update $E_{\\theta}$ and $\\epsilon_{\\theta}$ . Once training is finished, only $E_{\\theta}$ , $\\epsilon_{\\theta}$ and $D_{\\theta}$ will be used in inference. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "However, the performance of such optimization-based methods is largely hindered by two factors. First, the degradation function $\\Phi$ is often unknown and hard to model in real-world scenarios. Second, the hand-crafted regularization terms ${\\mathcal L}_{\\mathrm{reg}}$ are hard to effectively model the complex natural image priors. With the development of deep-learning techniques, it has become prevalent to learn a neural network $G_{\\theta}$ , which is parameterized by $\\theta$ , from a training dataset $S$ of $(x_{L},x_{H})$ pairs to map the LQ image to an HQ image. The network training can be described as the following learning problem: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\theta^{*}=\\mathrm{argmin}_{\\theta}\\mathbb{E}_{(\\pmb{x}_{L},\\pmb{x}_{H})\\sim S}\\left[\\mathcal{L}_{\\mathrm{data}}\\left(G_{\\theta}(\\pmb{x}_{L}),\\pmb{x}_{H}\\right)+\\lambda\\mathcal{L}_{\\mathrm{reg}}\\left(G_{\\theta}(\\pmb{x}_{L})\\right)\\right],\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathcal{L}_{\\mathrm{data}}$ and ${\\mathcal{L}}_{\\mathrm{reg}}$ are the loss functions. $\\mathcal{L}_{\\mathrm{data}}$ enforces that the network output $\\hat{\\pmb x}_{H}=G_{\\theta}(\\pmb x_{L})$ can approach to the ground-truth $x_{H}$ as much as possible, which can be quantified by metrics such as $L_{1}$ norm, $L_{2}$ norm and LPIPS [64]. Using only the $\\mathcal{L}_{\\mathrm{data}}$ loss to train the network $G_{\\theta}$ from scratch may over-fti the training dataset. In this work, we propose to finetune a pre-trained generative network, more specifically the SD [36] network, to improve the generalization capability of $G_{\\theta}$ . In addition, the regularization loss ${\\mathcal{L}}_{\\mathrm{reg}}$ is critical to improve the generalization capability of $G_{\\theta}$ , as well as enhance the naturalness of output HQ images $\\hat{\\pmb{x}}_{H}$ . Suppose that we have the distribution of real-world HQ images, denoted by $p({\\pmb x}_{H})$ , the KL divergence [8] is an ideal choice to serve as the loss function of ${\\mathcal{L}}_{\\mathrm{reg}}$ ; that is, the distribution of restored HQ images, denoted by $q_{\\theta}(\\hat{\\bf x}_{H})$ , should be identical to $p({\\pmb x}_{H})$ as much as possible. The regularization loss can be defined as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{reg}}=\\mathcal{D}_{\\mathrm{KL}}\\left(q_{\\theta}(\\hat{\\pmb{x}}_{H})\\|p(\\pmb{x}_{H})\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Existing works [24, 46] mostly instantiate the above objective via adversarial training [14], which involves learning a discriminator to differentiate between the generated HQ image $\\hat{\\pmb{x}}_{H}$ and the real HQ image $x_{H}$ , and updating the generator $G_{\\theta}$ to make $\\hat{\\pmb{x}}_{H}$ and $\\pmb{x}_{H}$ indistinguishable. However, the discriminators are often trained from scratch alongside the generator. They may not be able to acquire the full distribution of HQ images and lack enough discriminative power, resulting in sub-optimal Real-ISR performance. ", "page_idx": 3}, {"type": "text", "text": "The recently developed T2I diffusion models such as SD [36] offer new options for us to formulate the loss ${\\mathcal{L}}_{\\mathrm{reg}}$ . These models, trained on billions of image-text pairs, can effectively depict the natural image distribution in latent space. Some score distillation methods have been reported to employ SD to optimize images by using the KL-divergence as the objective [49, 25, 43]. In particular, variational score distillation (VSD) [49, 58, 10] induces such a KL-divergence based objective from particlebased variational optimization to align the distributions represented by two diffusion models. Based on the above discussions, we propose to instantiate the learning objective in Eq. (1) by designing an efficient and effective one-step diffusion network. In specific, we finetune the pre-trained SD with LoRA [17] as our Real-ISR backbone network and employ VSD as our regularizer to align the distribution of network outputs with natural HQ images. The details are provided in the next section. ", "page_idx": 4}, {"type": "text", "text": "3.2 One-Step Effective Diffusion Network ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Framework Overview. As discussed in Sec. 1, the existing SD-based Real-ISR methods [42, 57, 31, 52, 40] perform multiple timesteps to estimate the HQ image with random noise as the starting point and the LQ image as control signal. These approaches are resource-intensive and will inherently introduce randomness. Based on our formulation in Sec. 3.1, we propose a one-step effective diffusion (OSEDiff) network for Real-ISR, whose training framework is shown in Fig. 2. Our generator $G_{\\theta}$ to be trained is composed of a trainable encoder $E_{\\theta}$ , a finetuned diffusion network $\\epsilon_{\\theta}$ and a frozen decoder $D_{\\theta}$ . To ensure the generalization capability of $G_{\\theta}$ , the output of the diffusion network $\\epsilon_{\\theta}$ will be sent to two regularizer networks, where VSD loss is performed in latent space. The regularization loss are back-propagated to update $E_{\\theta}$ and $\\epsilon_{\\theta}$ . Once training is finished, only the generator $G_{\\theta}$ will be used in inference. In the following, we will delve into the detailed architecture design of OSEDiff, as well as its associated training losses. ", "page_idx": 4}, {"type": "text", "text": "Network Architecture Design. Let\u2019s denote by $E_{\\phi}$ , $\\epsilon_{\\phi}$ and $D_{\\phi}$ the VAE encoder, latent diffusion network and VAE decoder of a pretrained SD model, where $\\phi$ denotes the model parameters. Inspired by the recent success of LoRA [17] in finetuning SD to downstream tasks [34, 35], we adopt LoRA to fine-tune the pre-trained SD in the Real-ISR task to obtain the desired generator $G_{\\theta}$ . ", "page_idx": 4}, {"type": "text", "text": "As shown in the left part of Fig. 2, to maintain SD\u2019s original generation capacity, we introduce trainable LoRA [17] layers to the encoder $E_{\\phi}$ and the diffusion network $\\epsilon_{\\phi}$ , finetuning them into $E_{\\theta}$ and $\\epsilon_{\\theta}$ with our training data. For the decoder, we fix its parameters and directly set $D_{\\theta}=D_{\\phi}$ . This is to ensure that the output space of the diffusion network remains consistent with the regularizers. ", "page_idx": 4}, {"type": "text", "text": "Recall that the diffusion model diffuses the input latent feature $_{\\textit{z}}$ through $z_{t}=\\alpha_{t}z+\\beta_{t}\\epsilon$ , where $\\alpha_{t},\\beta_{t}$ are scalars that are dependent to diffusion timestep $t\\in\\{1,\\cdot\\cdot\\cdot\\,,T\\}$ [16]. With a neural network that can predict the noise in zt, denoted as \u03f5\u02c6, the denoised latent can be obtained as z\u02c60 = zt\u03b1\u2212t\u03b2t\u03f5\u02c6, which is expected to be cleaner and more photo-realistic than $\\boldsymbol{z}_{t}$ . Moreover, SD is a text-conditioned generation model. By extracting the text embeddings [36], denoted by $c_{y}$ , from the given text description $y$ , the noise prediction can be performed as $\\hat{\\pmb{\\epsilon}}=\\pmb{\\epsilon}_{\\theta}(\\pmb{z}_{t};t,c_{y})$ . ", "page_idx": 4}, {"type": "text", "text": "We adapt the above text-to-image denoising process to the Real-ISR task, and formulate the LQ-to-HQ latent transformation $F_{\\theta}$ as a text-conditioned image-to-image denoising process as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{z}_{H}=F_{\\theta}(z_{L};c_{y})\\triangleq\\frac{z_{L}-\\beta_{T}\\pm_{\\theta}(z_{L};T,c_{y})}{\\alpha_{T}},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where we conduct only one-step denoising on the LQ latent $z_{L}$ , without introducing any noise, at the $T$ -th diffusion timestep. The denoising output $\\hat{z}_{H}$ is expected be more photo-realistic than $z_{L}$ . As for the text embeddings, we apply some text prompt extractor, such as the DAPE [52], to LQ input $x_{L}$ , and obtain $c_{y}=Y({\\pmb x}_{L})$ . Finally, the whole LQ-to-HQ image synthesis can be written as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{\\pmb{x}}_{H}=G_{\\theta}(\\pmb{x}_{L})\\triangleq D_{\\theta}(F_{\\theta}(E_{\\theta}(\\pmb{x}_{L});Y(\\pmb{x}_{L}))).}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As mentioned in Sec. 3.1, to improve the performance for a Real-ISR model, it is required to supervise the generator training with both the data term $\\mathcal{L}_{\\mathrm{data}}$ and regularization term ${\\mathcal{L}}_{\\mathrm{reg}}$ . As shown in the right part of Fig. 2, we propose to adapt VSD [49] as the regularization term. Apart from utilizing the SD model as the pre-trained regularizer $\\epsilon_{\\phi}$ , VSD also introduces a finetuned regularizer, i.e., a latent diffusion module finetuned on the distribution $q_{\\theta}\\left(\\hat{\\pmb{x}}_{H}\\right)$ of generated images with LoRA. We denote this finetuned diffusion module as $\\epsilon_{\\phi^{\\prime}}$ . ", "page_idx": 4}, {"type": "text", "text": "Training Loss. We train the generator $G_{\\theta}$ with the data loss $\\mathcal{L}_{\\mathrm{data}}$ and regularization loss ${\\mathcal{L}}_{\\mathrm{reg}}$ . We set $\\mathcal{L}_{\\mathrm{data}}$ as the weighted sum of MSE loss and LPIPS loss: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{data}}\\left(G_{\\theta}(\\boldsymbol{x}_{L}),\\boldsymbol{x}_{H}\\right)=\\mathcal{L}_{\\mathrm{MSE}}\\left(G_{\\theta}(\\boldsymbol{x}_{L}),\\boldsymbol{x}_{H}\\right)+\\lambda_{1}\\mathcal{L}_{\\mathrm{LPIPS}}\\left(G_{\\theta}(\\boldsymbol{x}_{L}),\\boldsymbol{x}_{H}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\lambda_{1}$ is a weighting scalar. As for ${\\mathcal{L}}_{\\mathrm{reg}}$ , we adopt the VSD loss via: ", "page_idx": 5}, {"type": "equation", "text": "$$\n{\\mathcal{L}}_{\\mathrm{reg}}\\left(G_{\\theta}(x_{L})\\right)={\\mathcal{L}}_{\\mathrm{VSD}}\\left(G_{\\theta}(x_{L}),c_{y}\\right)={\\mathcal{L}}_{\\mathrm{VSD}}\\left(G_{\\theta}(x_{L}),Y(x_{L})\\right).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Given any trainable image-shape feature $\\textbf{\\em x}$ , its latent code ${z}\\,=\\,E_{\\phi}({\\pmb x})$ and encoded text prompt condition $c_{y}$ , VSD optimizes $\\textbf{\\em x}$ to make it consistent with the text prompt $y$ via: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\nabla_{x}\\mathcal{L}_{\\mathrm{VSD}}\\left(\\boldsymbol{x},\\boldsymbol{c}_{y}\\right)=\\mathbb{E}_{t,\\epsilon}\\left[\\omega(t)\\left(\\epsilon_{\\phi}(\\boldsymbol{z}_{t};t,c_{y})-\\epsilon_{\\phi^{\\prime}}(\\boldsymbol{z}_{t},t;c_{y})\\right)\\frac{\\partial z}{\\partial x}\\right],\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where the expectation of the gradient is conducted over all diffusion timesteps $t\\in\\{1,\\cdot\\cdot\\cdot\\,,T\\}$ and $\\epsilon\\sim\\mathcal{N}(0,I)$ . Therefore, the overall training objective for the generator $G_{\\theta}$ is: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}\\left(G_{\\theta}(\\pmb{x}_{L}),\\pmb{x}_{H}\\right)=\\mathcal{L}_{\\mathrm{data}}\\left(G_{\\theta}(\\pmb{x}_{L}),\\pmb{x}_{H}\\right)+\\lambda_{2}\\mathcal{L}_{\\mathrm{reg}}\\left(G_{\\theta}(\\pmb{x}_{L})\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\lambda_{2}$ is a weighting scalar. Besides, as required by VSD, the finetuned regularizer $\\pmb{\\epsilon}_{\\phi^{\\prime}}$ should also be trainable, and its training objective is: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{diff}}=\\mathbb{E}_{t,\\epsilon,c_{y}=Y(x_{L}),\\hat{z}_{H}=F_{\\theta}\\left(E_{\\theta}\\left(x_{L}\\right);Y(x_{L})\\right)}\\mathcal{L}_{\\mathrm{MSE}}\\left(\\epsilon_{\\phi^{\\prime}}\\left(\\alpha_{t}\\hat{z}_{H}+\\beta_{t}\\epsilon;t,c_{y}\\right),\\epsilon\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Note that the above $\\mathcal{L}_{\\mathrm{diff}}$ loss is only applied to update $\\pmb{\\epsilon}_{\\phi^{\\prime}}$ . The whole algorithm to illustrate the training pipeline can be found in the Appendix. ", "page_idx": 5}, {"type": "text", "text": "VSD in Latent Space. The original VSD computes the gradients in the image space. When it is used to train an SD-based generator network, there will be repetitive latent decoding/encoding in computing $\\mathcal{L}_{\\mathrm{reg}}$ . This is costly and makes the regularization less effective. Considering the fact that a well-trained VAE should satisfy $E_{\\phi}(\\pmb{x})=E_{\\phi}(\\bar{D_{\\phi}}(\\pmb{z}))\\approx z$ , we can approximately let $\\bar{\\boldsymbol{E}}_{\\phi}(\\hat{\\boldsymbol{x}}_{H})=\\hat{\\boldsymbol{z}}_{H}$ . In this case, we can eliminate the redundant latent encoding/decoding in computing the regularization loss, as we follow DMD [58] to optimize the distribution loss in the latent state space rather than in the noise space. The gradient of the regularization loss w.r.t. the network parameter $\\theta$ in the latent space is: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\nabla_{\\theta}\\mathcal{L}_{\\mathrm{VSD}}(G_{\\theta}(\\mathbf{x}_{L}),c_{y})=\\nabla_{\\hat{\\alpha}_{H}}\\mathcal{L}_{\\mathrm{VSD}}(\\hat{x}_{H},c_{y})\\frac{\\partial\\hat{x}_{H}}{\\partial\\theta}}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad=\\mathbb{E}_{t,\\epsilon,\\hat{z}_{t}=\\alpha_{t}E_{\\phi}(\\hat{x}_{H})+\\beta_{t}\\epsilon}\\left[\\omega(t)\\left(\\epsilon_{\\phi}(\\hat{z}_{t};t,c_{y})-\\epsilon_{\\phi^{\\prime}}(\\hat{z}_{t};t,c_{y})\\right)\\frac{\\partial\\hat{z}_{H}}{\\partial\\hat{x}_{H}}\\frac{\\partial\\hat{x}_{H}}{\\partial\\theta}\\right]}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad=\\mathbb{E}_{t,\\epsilon,\\hat{z}_{t}=\\alpha_{t}\\hat{z}_{H}+\\beta_{t}\\epsilon}\\left[\\omega(t)\\left(\\epsilon_{\\phi}(\\hat{z}_{t};t,c_{y})-\\epsilon_{\\phi^{\\prime}}(\\hat{z}_{t};t,c_{y})\\right)\\frac{\\partial\\hat{z}_{H}}{\\partial\\theta}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Experimental Settings ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Training and Testing Datasets. Prior works [42, 57, 31, 52] employed different training datasets, making unified training standards for Real-ISR difficult to establish. For simplicity, we adopt SeeSR\u2019s setup [52] and train OSEDiff using the LSDIR [26] dataset and the first 10K face images from FFHQ [19]. The degradation pipeline of Real-ESRGAN [45] is used to synthesize LQ-HQ training pairs. We evaluate OSEDiff and compare it with competing methods using the test set provided by StableSR [42], including both synthetic and real-world data. The synthetic data includes 3000 images of size $512\\times512$ , whose GT are randomly cropped from DIV2K-Val [2] and degraded using the Real-ESRGAN pipeline [45]. The real-world data include LQ-HQ pairs from RealSR [3] and DRealSR [51], with sizes of $128\\times128$ and $512\\times512$ , respectively. ", "page_idx": 5}, {"type": "text", "text": "Compared Methods. We compare OSEDiff with state-of-the-art DM-based Real-ISR methods, including StableSR [42], ResShift [60], PASD [57], DiffBIR [31], SeeSR [52] and SinSR [48]. Among them, StableSR, PASD, DiffBIR, and SeeSR are all based on the pre-trained SD model. ResShift trains a DM from scratch in the pixel domain, while SinSR is a one-step model distilled ", "page_idx": 5}, {"type": "table", "img_path": "TPtXnpRvur/tmp/f9150221f42a14e07198f4e2980ade19189b10ae98ea46b76f2024c5e8da505b.jpg", "table_caption": ["Table 1: Quantitative comparison with state-of-the-art methods on both synthetic and real-world benchmarks. \u2018s\u2019 denotes the number of diffusion reverse steps in the method. The best and second best results of each metric are highlighted in red and blue, respectively. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "TPtXnpRvur/tmp/5ae45b2a68e86dbc27bde0df260043352ff90a803be6be782f53f3c434aa3c44.jpg", "table_caption": ["Table 2: Complexity comparison among different methods. All methods are tested with an input image of size $512\\times512$ , and the inference time is measured on an A100 GPU. "], "table_footnote": ["from ResShift. Note that we do not compare with the recent method SUPIR [59] because it tends to generate rich yet excessive details, which are however unfaithful to the input image. "], "page_idx": 6}, {"type": "text", "text": "For those GAN-based Real-ISR methods, including BSRGAN [61], Real-ESRGAN [45], LDL [27], and FeMaSR [4], we put their results into the Appendix. ", "page_idx": 6}, {"type": "text", "text": "Evaluation Metrics. To provide a comprehensive and holistic assessment on the performance of different methods, we employ a range of full-reference and no-reference metrics. PSNR and SSIM [50] (calculated on the Y channel in YCbCr space) are reference-based fidelity measures, while LPIPS [64], DISTS [12] are reference-based perceptual quality measures. FID [15] evaluates the distance of distributions between GT and restored images. NIQE [62], MANIQA-pipal [55], MUSIQ [22], and CLIPIQA [41] are no-reference image quality measures. We also conduct a user study, which is presented in the Appendix. ", "page_idx": 6}, {"type": "text", "text": "Implementation Details. We train OSEDiff with the AdamW optimizer [33] at a learning rate of 5e-5. The entire training process took approximately 1 day on 4 NVIDIA A100 GPUs with a batch size of 16. The rank of LoRA in the VAE Encoder, diffusion network, and finetuned regularizer is set to 4. For the text prompt extractor, although advanced multimodal language models [32] can provide detailed text descriptions, they come at a high inference cost. We adopt the degradation-aware prompt extraction (DAPE) module in SeeSR [52] to extract text prompts. The SD 2.1-base is used as the pre-trained T2I model. The weighting scalars $\\lambda_{1}$ and $\\lambda_{2}$ are set to 2 and 1, respectively. ", "page_idx": 6}, {"type": "text", "text": "4.2 Comparison with State-of-the-Arts ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Quantitative Comparisons. The quantitative comparisons among the competing methods on the three datasets are presented in Table 1. We can have the following observations. (1) First, OSEDiff exhibits clear advantages over competing methods in full-reference perceptual quality metrics LPIPS and DISTS, distribution alignment metric FID, and semantic quality metric CLIPIQA, especially on the two real-world datasets DrealSR and RealSR. (2) Second, SeeSR and PASD show better no-reference metrics like NIQE, MUSIQ and MANIQA. This is because these multi-step methods can produce rich image details in the diffusion process, which are preferred by no-reference metrics. (3) Third, ResShift and its distilled version SinSR show better full-reference fidelity metrics such as PSNR. This is mainly because they train a DM from scratch specifically for the restoration purpose, instead of exploring the pre-trained T2I model such as SD. However, ResShift and SinSR show poor perceptual quality metrics than other methods. ", "page_idx": 6}, {"type": "image", "img_path": "TPtXnpRvur/tmp/a62f3d5b34494cb5f3d18cdb925bd1eb508d902f81a1b4786c22ec256a289949.jpg", "img_caption": ["Figure 3: Qualitative comparisons of different Real-ISR methods. Please zoom in for a better view. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Qualitative Comparisons. Fig. 3 presents visual comparisons of different Real-ISR methods. As illustrated in the first example, ResShift and SinSR severely blur the facial details due to the lack of pre-trained image priors. StableSR, DiffBIR and SeeSR reconstruct more facial details by exploring the image prior in pre-trained SD model. PASD generates excessive yet unnatural details. Though OSEDiff performs only one step forward propagation, it reproduces realistic and superior facial details to other methods. Similar conclusion can be drawn from the second example. StableSR and DiffBIR are limited in generating rich textures due to the lack of text prompts. PASD suffers from incorrect semantic generation because its prompt extraction module is not robust to degradation. While SeeSR utilizes degradation-aware semantic cues to stimulate image generation priors, the generated leaf veins are unnatural, which may be influenced by its random noise sampling. In contrast, OSEDiff can generate detailed and natural leaf veins. More visualization comparisons and the results of subjective user study can be found in the Appendix. ", "page_idx": 7}, {"type": "text", "text": "Complexity Comparisons. We further compare the complexity of competing DM-based Real-ISR models in Table 2, including the number of inference steps, inference time, and trainable parameters. All methods are tested on an A100 GPU with an input image of size $512\\times512$ . OSEDiff has the fewest trainable parameters, and the trained LoRA layers can be merged into the original SD to further reduce the computational cost. By using only one forward pass, OSEDiff has significant advantage in inference time over multi-step methods. Specifically, OSEDiff demonstrates a substantial speed advantage, being approximately 105 times faster than StableSR, 39 times faster than SeeSR, and 6 times faster than ResShift. When compared to the single-step method SinSR, OSEDiff not only achieves faster inference but also delivers significantly higher output quality. In terms of complexity, OSEDiff requires the lowest MACs at just 2265G, as it operates with only a single diffusion step. In contrast, methods like StableSR, which require 200 steps, incur substantially higher MACs (e.g., 79940G). Regarding trainable parameters, OSEDiff is highly parameter-efficient, requiring only 8.5M parameters (LoRA layers), compared to models such as SeeSR, which necessitates 749.9M parameters. This highlights the efficiency of OSEDiff during the training process. ", "page_idx": 7}, {"type": "table", "img_path": "TPtXnpRvur/tmp/4596d217860b02be2ab6176545ee65dcf9030ee0c845de6449841c041f4878ec.jpg", "table_caption": ["Table 3: Comparison of different losses on the RealSR benchmark. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "TPtXnpRvur/tmp/f85d76d4751278c8a1e09434ed41b0ea8762b40e3b8f212972ea9685a5c01b6a.jpg", "table_caption": ["Table 4: Comparison of different text prompt extractors on the DrealSR benchmark. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "TPtXnpRvur/tmp/7b65badbdab90637b76ddb25cc5d9d11eadf98674b40ae57d789ab3e393c5753.jpg", "table_caption": ["Table 5: Comparison of LoRA in VAE encoder with different ranks. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "TPtXnpRvur/tmp/6fb44d67829f1f1a3083a3293e149bb7289b9ab5d5f02a43776b49bf9a31f7a7.jpg", "table_caption": ["Table 6: Comparison of LoRA in UNet with different ranks. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "TPtXnpRvur/tmp/21ed36435584a2cba486d77943f684ab1ea123829db849ae4dd937a4320da26e.jpg", "table_caption": ["Table 7: Ablation studies on finetuning the VAE encoder and decoder on the RealSR benchmark. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Effectiveness of VSD Loss. To validate the effectiveness of our VSD loss in latent space, we perform ablation studies by removing the VSD loss, replacing it with the GAN loss used in [35], and applying VSD loss in the image domain. The results on the RealSR test set are shown in Table 3. We can see that without using the VSD loss, the perceptual quality metrics are significantly degraded because it is hard to ensure good visual quality using only MSE loss and even LPIPS loss [64]. Using GAN loss and VSD loss in the image domain can improve the performance, but the results are not as good as applying VSD loss in the latent domain. Our proposed OSEDiff can effectively align the distribution of Real-ISR outputs by performing VSD regularization in the latent domain. ", "page_idx": 8}, {"type": "text", "text": "Comparison on Text Prompt Extractors. We then conduct experiments to evaluate the effect of different text prompt extractors on the Real-ISR results. We test three options. The first option does not employ text prompts. The second option uses the DAPE module in SeeSR [52] to extract degradation-aware tag-style prompts, as we used in our main experiments. The third option uses LLaVA-v1.5 [32] to extract long text descriptions after removing the degradation of input LQ images, as used in SUPIR [59]. We retrain the models based on different prompt extraction methods. The ablation results are shown in Table 4. ", "page_idx": 8}, {"type": "text", "text": "One can see that without using text prompts as inputs, those full-reference metrics such PSNR, SSIM, LPIPS, DISTS and even FID can improve, while those no-reference metrics such as MUSIQ, MANIQA and CLIPIQA become worse. By using DAPE and LLaVA to extract text prompts, the generation capability of the pre-trained T2I SD model can be triggered, resulting in richer synthesized details, which however can reduce the full-reference indices. A visual example is shown in Figure 4. We see that while LLaVA extracts significantly longer text prompts than DAPE, they produce a similar amount of visual details. However, it is worth mentioning that the MLLM model LLaVA is very costly, increasing the inference time of DAPE by 170 times. Considering the cost-effectiveness, we ultimately choose DAPE as the text prompt extractor in OSEDiff. ", "page_idx": 8}, {"type": "image", "img_path": "TPtXnpRvur/tmp/11980deb2ab00b528e3094123218a4078e6d6d18ab9de36b7184918b3af553cf.jpg", "img_caption": ["Prowpt from DAPE: 'beak, black, penguin, h Stone, stand? backgrounltmfftipidind "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Figure 4: The impact of different prompt extraction methods. Please zoom in for a better view. ", "page_idx": 9}, {"type": "text", "text": "Setting of LoRA Rank. When finetuning the VAE encoder and the UNet, we need to set the rank of LoRA layers. Here we evaluate the effect of different LoRA ranks on the Real-ISR performance by using the RealSR benchmark [3]. The results are shown in Tables 5 and 6, respectively. As shown in Table 5, if a too small LoRA rank, such as 2, is set for the VAE encoder, the training will be unstable and cannot converge. On the other hand, if a higher LoRA rank, such as 8, is used for the VAE encoder, it may overfit in estimating image degradation, losing some image details in the output, as evidenced by the PSNR, DISTS, MUSIQ and NIQE indices. We find that setting the rank to 4 can achieve a balanced result for the VAE encoder. Similar conclusions can be made for the setting of LoRA rank on UNet. As can be seen from Table 6, a rank of 4 strikes a good balance. Therefore, we set the rank as 4 for both the VAE encoder and UNet LoRA layers. ", "page_idx": 9}, {"type": "text", "text": "The Finetuning on the VAE Encoder and Decoder. We conducted ablation studies to examine the impact of finetuning the VAE encoder and decoder, as shown Table 7. In the first row, where neither the VAE encoder nor decoder is finetuned, the results show poor perception performance. Comparing with OSEDiff, where only the VAE encoder is finetuned, we observe significant improvements in perceptual quality (e.g., MUSIQ improves from 58.99 to 69.09). This demonstrates that finetuning the VAE encoder is important for removing degradation and enhancing overall performance. When comparing the third row, where both the VAE encoder and decoder are finetuned, with OSEDiff, where only the encoder is trained and the decoder is fixed, we note that OSEDiff also achieves better perceptual quality (CLIPIQ improves from 0.5778 to 0.6693). This indicates that fixing the VAE decoder is important to ensure that the UNet output remains in the original VAE latent space, which helps minimizing the VSD loss more effectively. Thus, finetuning the VAE encoder is important to remove degradation, while fixing the VAE decoder helps maintaining stability in the latent space, leading to better perceptual quality. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion and Limitation ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We proposed OSEDiff, a one-step effective diffusion network for Real-ISR, by utilizing the pretrained text-to-image model as both the generator and the regularizer in training. Unlike traditional multi-step diffusion models, OSEDiff directly took the given LQ image as the starting point for diffusion, eliminating the uncertainty associated with random noise. By fine-tuning the pre-trained diffusion network with trainable LoRA layers, OSEDiff can well adapt to the complex real-world image degradations. Meanwhile, we performed the variational score distillation in the latent space to ensure that the model\u2019s predicted scores align with those of multi-step pre-trained models, enabling OSEDiff to efficiently produce HQ images in one diffusion step. Our experiments showed that OSEDiff achieved comparable or superior Real-ISR outcomes to previous multi-step diffusion-based methods in both objective metrics and subjective assessments. We believe our exploration can facilitate the practical application of pre-trained T2I models to Real-ISR tasks. ", "page_idx": 9}, {"type": "text", "text": "There are some limitations of OSEDiff. First, the details generation capability of OSEDiff can be further improved. Second, like other SD-based methods, OSEDiff is limited in reconstructing fine-scale structures such as small scene texts. We will investigate these problems in further work. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Stability.ai. https://stability.ai/stable-diffusion. ", "page_idx": 10}, {"type": "text", "text": "[2] Eirikur Agustsson and Radu Timofte. Ntire 2017 challenge on single image super-resolution: Dataset and study. In Proceedings of the IEEE conference on computer vision and pattern recognition workshops, pages 126\u2013135, 2017.   \n[3] Jianrui Cai, Hui Zeng, Hongwei Yong, Zisheng Cao, and Lei Zhang. Toward real-world single image super-resolution: A new benchmark and a new model. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 3086\u20133095, 2019.   \n[4] Chaofeng Chen, Xinyu Shi, Yipeng Qin, Xiaoming Li, Xiaoguang Han, Tao Yang, and Shihui Guo. Real-world blind super-resolution via feature matching with implicit high-resolution priors. In Proceedings of the 30th ACM International Conference on Multimedia, pages 1329\u20131338, 2022.   \n[5] Hanting Chen, Yunhe Wang, Tianyu Guo, Chang Xu, Yiping Deng, Zhenhua Liu, Siwei Ma, Chunjing Xu, Chao Xu, and Wen Gao. Pre-trained image processing transformer. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 12299\u201312310, 2021.   \n[6] Xiangyu Chen, Xintao Wang, Jiantao Zhou, Yu Qiao, and Chao Dong. Activating more pixels in image super-resolution transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22367\u201322377, 2023.   \n[7] Zheng Chen, Yulun Zhang, Jinjin Gu, Linghe Kong, Xiaokang Yang, and Fisher Yu. Dual aggregation transformer for image super-resolution. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 12312\u201312321, 2023.   \n[8] Imre Csisz\u00e1r. I-divergence geometry of probability distributions and minimization problems. The annals of probability, pages 146\u2013158, 1975.   \n[9] Tao Dai, Jianrui Cai, Yongbing Zhang, Shu-Tao Xia, and Lei Zhang. Second-order attention network for single image super-resolution. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 11065\u201311074, 2019.   \n[10] Trung Dao, Thuan Hoang Nguyen, Thanh Le, Duc Vu, Khoi Nguyen, Cuong Pham, and Anh Tran. Swiftbrush v2: Make your one-step diffusion model better than its teacher. arXiv preprint arXiv:2408.14176, 2024.   \n[11] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780\u20138794, 2021.   \n[12] Keyan Ding, Kede Ma, Shiqi Wang, and Eero P Simoncelli. Image quality assessment: Unifying structure and texture similarity. IEEE transactions on pattern analysis and machine intelligence, 44(5):2567\u20132581, 2020.   \n[13] Chao Dong, Chen Change Loy, Kaiming He, and Xiaoou Tang. Learning a deep convolutional network for image super-resolution. In Computer Vision\u2013ECCV 2014: 13th European Conference, Zurich, Switzerland, September 6-12, 2014, Proceedings, Part IV 13, pages 184\u2013199. Springer, 2014.   \n[14] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. Advances in neural information processing systems, 27, 2014.   \n[15] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. Advances in neural information processing systems, 30, 2017.   \n[16] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \n[17] Edward J Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, and Weizhu Chen. Lora: Low-rank adaptation of large language models. arXiv preprint arXiv:2106.09685, 2021.   \n[18] Justin Johnson, Alexandre Alahi, and Li Fei-Fei. Perceptual losses for real-time style transfer and superresolution. In Computer Vision\u2013ECCV 2016: 14th European Conference, Amsterdam, The Netherlands, October 11-14, 2016, Proceedings, Part II 14, pages 694\u2013711. Springer, 2016.   \n[19] Tero Karras, Samuli Laine, and Timo Aila. A style-based generator architecture for generative adversarial networks. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 4401\u20134410, 2019.   \n[20] Bahjat Kawar, Michael Elad, Stefano Ermon, and Jiaming Song. Denoising diffusion restoration models. Advances in Neural Information Processing Systems, 35:23593\u201323606, 2022.   \n[21] Bahjat Kawar, Gregory Vaksman, and Michael Elad. Snips: Solving noisy inverse problems stochastically. Advances in Neural Information Processing Systems, 34:21757\u201321769, 2021.   \n[22] Junjie Ke, Qifei Wang, Yilin Wang, Peyman Milanfar, and Feng Yang. Musiq: Multi-scale image quality transformer. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 5148\u20135157, 2021.   \n[23] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep convolutional neural networks. Advances in neural information processing systems, 25, 2012.   \n[24] Christian Ledig, Lucas Theis, Ferenc Husz\u00e1r, Jose Caballero, Andrew Cunningham, Alejandro Acosta, Andrew Aitken, Alykhan Tejani, Johannes Totz, Zehan Wang, et al. Photo-realistic single image superresolution using a generative adversarial network. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 4681\u20134690, 2017.   \n[25] Kyungmin Lee, Kihyuk Sohn, and Jinwoo Shin. Dreamflow: High-quality text-to-3d generation by approximating probability flow. arXiv preprint arXiv:2403.14966, 2024.   \n[26] Yawei Li, Kai Zhang, Jingyun Liang, Jiezhang Cao, Ce Liu, Rui Gong, Yulun Zhang, Hao Tang, Yun Liu, Denis Demandolx, et al. Lsdir: A large scale dataset for image restoration. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 1775\u20131787, 2023.   \n[27] Jie Liang, Hui Zeng, and Lei Zhang. Details or artifacts: A locally discriminative learning approach to realistic image super-resolution. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 5657\u20135666, 2022.   \n[28] Jie Liang, Hui Zeng, and Lei Zhang. Efficient and degradation-adaptive network for real-world image super-resolution. In European Conference on Computer Vision, pages 574\u2013591. Springer, 2022.   \n[29] Jingyun Liang, Jiezhang Cao, Guolei Sun, Kai Zhang, Luc Van Gool, and Radu Timofte. Swinir: Image restoration using swin transformer. In Proceedings of the IEEE/CVF international conference on computer vision, pages 1833\u20131844, 2021.   \n[30] Bee Lim, Sanghyun Son, Heewon Kim, Seungjun Nah, and Kyoung Mu Lee. Enhanced deep residual networks for single image super-resolution. In Proceedings of the IEEE conference on computer vision and pattern recognition workshops, pages 136\u2013144, 2017.   \n[31] Xinqi Lin, Jingwen He, Ziyan Chen, Zhaoyang Lyu, Ben Fei, Bo Dai, Wanli Ouyang, Yu Qiao, and Chao Dong. Diffbir: Towards blind image restoration with generative diffusion prior. arXiv preprint arXiv:2308.15070, 2023.   \n[32] Haotian Liu, Chunyuan Li, Qingyang Wu, and Yong Jae Lee. Visual instruction tuning. Advances in neural information processing systems, 36, 2024.   \n[33] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. arXiv preprint arXiv:1711.05101, 2017.   \n[34] Simian Luo, Yiqin Tan, Suraj Patil, Daniel Gu, Patrick von Platen, Apolin\u00e1rio Passos, Longbo Huang, Jian Li, and Hang Zhao. Lcm-lora: A universal stable-diffusion acceleration module. arXiv preprint arXiv:2311.05556, 2023.   \n[35] Gaurav Parmar, Taesung Park, Srinivasa Narasimhan, and Jun-Yan Zhu. One-step image translation with text-to-image models. arXiv preprint arXiv:2403.12036, 2024.   \n[36] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[37] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, Kamyar Ghasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, et al. Photorealistic text-toimage diffusion models with deep language understanding. Advances in Neural Information Processing Systems, 35:36479\u201336494, 2022.   \n[38] Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556, 2014.   \n[39] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. arXiv preprint arXiv:2011.13456, 2020.   \n[40] Lingchen Sun, Rongyuan Wu, Zhengqiang Zhang, Hongwei Yong, and Lei Zhang. Improving the stability of diffusion models for content consistent super-resolution. arXiv preprint arXiv:2401.00877, 2023.   \n[41] Jianyi Wang, Kelvin CK Chan, and Chen Change Loy. Exploring clip for assessing the look and feel of images. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 37, pages 2555\u20132563, 2023.   \n[42] Jianyi Wang, Zongsheng Yue, Shangchen Zhou, Kelvin CK Chan, and Chen Change Loy. Exploiting diffusion prior for real-world image super-resolution. International Journal of Computer Vision, pages 1\u201321, 2024.   \n[43] Peihao Wang, Dejia Xu, Zhiwen Fan, Dilin Wang, Sreyas Mohan, Forrest Iandola, Rakesh Ranjan, Yilei Li, Qiang Liu, Zhangyang Wang, et al. Taming mode collapse in score distillation for text-to-3d generation. arXiv preprint arXiv:2401.00909, 2023.   \n[44] Xintao Wang, Yu Li, Honglun Zhang, and Ying Shan. Towards real-world blind face restoration with generative facial prior. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 9168\u20139178, 2021.   \n[45] Xintao Wang, Liangbin Xie, Chao Dong, and Ying Shan. Real-esrgan: Training real-world blind superresolution with pure synthetic data. In Proceedings of the IEEE/CVF international conference on computer vision, pages 1905\u20131914, 2021.   \n[46] Xintao Wang, Ke Yu, Shixiang Wu, Jinjin Gu, Yihao Liu, Chao Dong, Yu Qiao, and Chen Change Loy. Esrgan: Enhanced super-resolution generative adversarial networks. In Proceedings of the European conference on computer vision (ECCV) workshops, pages 0\u20130, 2018.   \n[47] Yinhuai Wang, Jiwen Yu, and Jian Zhang. Zero-shot image restoration using denoising diffusion null-space model. arXiv preprint arXiv:2212.00490, 2022.   \n[48] Yufei Wang, Wenhan Yang, Xinyuan Chen, Yaohui Wang, Lanqing Guo, Lap-Pui Chau, Ziwei Liu, Yu Qiao, Alex C Kot, and Bihan Wen. Sinsr: Diffusion-based image super-resolution in a single step. arXiv preprint arXiv:2311.14760, 2023.   \n[49] Zhengyi Wang, Cheng Lu, Yikai Wang, Fan Bao, Chongxuan Li, Hang Su, and Jun Zhu. Prolificdreamer: High-fidelity and diverse text-to-3d generation with variational score distillation. Advances in Neural Information Processing Systems, 36, 2024.   \n[50] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Simoncelli. Image quality assessment: from error visibility to structural similarity. IEEE transactions on image processing, 13(4):600\u2013612, 2004.   \n[51] Pengxu Wei, Ziwei Xie, Hannan Lu, Zongyuan Zhan, Qixiang Ye, Wangmeng Zuo, and Liang Lin. Component divide-and-conquer for real-world image super-resolution. In Computer Vision\u2013ECCV 2020: 16th European Conference, Glasgow, UK, August 23\u201328, 2020, Proceedings, Part VIII 16, pages 101\u2013117. Springer, 2020.   \n[52] Rongyuan Wu, Tao Yang, Lingchen Sun, Zhengqiang Zhang, Shuai Li, and Lei Zhang. Seesr: Towards semantics-aware real-world image super-resolution. arXiv preprint arXiv:2311.16518, 2023.   \n[53] Liangbin Xie, Xintao Wang, Xiangyu Chen, Gen Li, Ying Shan, Jiantao Zhou, and Chao Dong. Desra: Detect and delete the artifacts of gan-based real-world super-resolution models. 2023.   \n[54] Jianchao Yang, John Wright, Thomas S Huang, and Yi Ma. Image super-resolution via sparse representation. IEEE transactions on image processing, 19(11):2861\u20132873, 2010.   \n[55] Sidi Yang, Tianhe Wu, Shuwei Shi, Shanshan Lao, Yuan Gong, Mingdeng Cao, Jiahao Wang, and Yujiu Yang. Maniqa: Multi-dimension attention network for no-reference image quality assessment. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 1191\u20131200, 2022.   \n[56] Tao Yang, Peiran Ren, Xuansong Xie, and Lei Zhang. Gan prior embedded network for blind face restoration in the wild. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 672\u2013681, 2021.   \n[57] Tao Yang, Peiran Ren, Xuansong Xie, and Lei Zhang. Pixel-aware stable diffusion for realistic image super-resolution and personalized stylization. arXiv preprint arXiv:2308.14469, 2023.   \n[58] Tianwei Yin, Micha\u00ebl Gharbi, Richard Zhang, Eli Shechtman, Fredo Durand, William T Freeman, and Taesung Park. One-step diffusion with distribution matching distillation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 6613\u20136623, 2024.   \n[59] Fanghua Yu, Jinjin Gu, Zheyuan Li, Jinfan Hu, Xiangtao Kong, Xintao Wang, Jingwen He, Yu Qiao, and Chao Dong. Scaling up to excellence: Practicing model scaling for photo-realistic image restoration in the wild. arXiv preprint arXiv:2401.13627, 2024.   \n[60] Zongsheng Yue, Jianyi Wang, and Chen Change Loy. Resshift: Efficient diffusion model for image super-resolution by residual shifting. arXiv preprint arXiv:2307.12348, 2023.   \n[61] Kai Zhang, Jingyun Liang, Luc Van Gool, and Radu Timofte. Designing a practical degradation model for deep blind image super-resolution. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4791\u20134800, 2021.   \n[62] Lin Zhang, Lei Zhang, and Alan C Bovik. A feature-enriched completely blind image quality evaluator. IEEE Transactions on Image Processing, 24(8):2579\u20132591, 2015.   \n[63] Lvmin Zhang, Anyi Rao, and Maneesh Agrawala. Adding conditional control to text-to-image diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 3836\u20133847, 2023.   \n[64] Richard Zhang, Phillip Isola, Alexei A Efros, Eli Shechtman, and Oliver Wang. The unreasonable effectiveness of deep features as a perceptual metric. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 586\u2013595, 2018.   \n[65] Xindong Zhang, Hui Zeng, Shi Guo, and Lei Zhang. Efficient long-range attention network for image super-resolution. In European Conference on Computer Vision, pages 649\u2013667. Springer, 2022.   \n[66] Yulun Zhang, Kunpeng Li, Kai Li, Lichen Wang, Bineng Zhong, and Yun Fu. Image super-resolution using very deep residual channel attention networks. In Proceedings of the European conference on computer vision (ECCV), pages 286\u2013301, 2018.   \n[67] Yulun Zhang, Yapeng Tian, Yu Kong, Bineng Zhong, and Yun Fu. Residual dense network for image super-resolution. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 2472\u20132481, 2018. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In the appendix, we provide the following materials: ", "page_idx": 14}, {"type": "text", "text": "\u2022 Comparison with GAN-based methods (referring to Section 4.1 in the main paper).   \n\u2022 Results of user study (referring to Section 4.1 in the main paper).   \n\u2022 More real-world visual comparisons under scaling factor $4\\times$ (referring to Section 4.2 in the main paper).   \n\u2022 Training algorithm of OSEDiff (referring to Section 3.2 in the main paper). ", "page_idx": 14}, {"type": "text", "text": "A.1 Comparison with GAN-based Methods ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We compare OSEDiff with four representative GAN-based Real-ISR methods, including BSRGAN [61], Real-ESRGAN [45], LDL [27] and FeMaSR [4]. The results are shown in Table 8. It is not a surprise that GAN-based methods have better fidelity measures such as PSNR and SSIM than OSEDiff. However, OSEDiff has much better perceptual qualify metrics. We also provide visual comparisons in Figure 5. Compared to GAN-based methods, OSEDiff is able to generate realistic and reasonable details, such as squirrel hair, textures of petals, buildings, and leaves. ", "page_idx": 14}, {"type": "text", "text": "A.2 User Study ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "To further validate the effectiveness of our proposed OSEDiff method, we conducted a user study by using 20 real-world LQ images. An LQ image and its HQ counterparts generated by different Real-ISR methods were presented to volunteers, who were asked to select the best HQ result. The volunteers were instructed to consider two factors when making their decisions: the image perceptual quality and and its content (including structure and texture) consistency with the LQ input, with each factor contributing equally to the final selection. ", "page_idx": 14}, {"type": "text", "text": "We randomly selected 20 real-world LQ images from the RealLR200 dataset [52]. Figure 6(a) shows the thumbnails used in the user study, cropped into squares for a convenient layout. We generated the HQ outputs of them by using the DM-based Real-ISR methods StableSR [42], DiffBIR [31], SeeSR [52], PASD [57], ResShift [60], SinSR [48], and OSEDiff. A number of 15 volunteers were invited to participate in the evaluation. The results are shown in Figure 6(b). We see that OSEDiff ranks the second, just lagging slightly behind SeeSR. However, it should be noted that OSEDiff runs over 10 times faster than SeeSR by performing only one-step diffusion. ", "page_idx": 14}, {"type": "text", "text": "A.3 More Visual Comparisons ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Figure 7 provides more visual comparisons between OSEDiff and other DM-based methods. One can see that OSEDiff achieves comparable to or even better results than the multi-step diffusion methods in scenarios such as portraits, flower patterns, buildings, animal fur, and letters. ", "page_idx": 14}, {"type": "table", "img_path": "TPtXnpRvur/tmp/f393751a9857ea87dff383472ee91b3de28c6021ca3fea8944fe4a6213bc30c1.jpg", "table_caption": ["Table 8: Quantitative comparison with GAN-based methods on both synthetic and real-world benchmarks. The best results of each metric are highlighted in red. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "A.4 Algorithm of OSEDiff ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The pseudo-code of our OSEDiff training algorithm is summarized as Algorithm 1. We follow [49, 58] and use classifier-free guidance (cfg) when calculating $z_{\\phi}$ .The cfg value is set to 7.5, and the negative prompts we use are: \"painting, oil painting, illustration, drawing, art, sketch, oil painting, cartoon, CG Style, 3D render, unreal engine, blurring, dirty, messy, worst quality, low quality, frames, watermark, signature, jpeg artifacts, deformed, lowres, over-smooth.\" ", "page_idx": 15}, {"type": "text", "text": "Algorithm 1 Training Scheme of OSEDiff ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Input: Training dataset $s$ , pretrained SD parameterized by $\\phi$ including VAE encoder $E_{\\phi}$ , latent diffusion network $E_{\\phi}$ and VAE decoder $\\epsilon_{\\phi}$ , prompt extractor $Y_{s}$ , training iteration $N$   \n1 Initialize $G_{\\theta}$ parameterized by $\\theta$ , including $E_{\\theta}\\leftarrow E_{\\phi}$ with trainable LoRA $\\epsilon_{\\theta}\\leftarrow\\epsilon_{\\phi}$ with trainable LoRA $D_{\\theta}\\leftarrow D_{\\phi}$   \n2 Initialize $\\epsilon_{\\phi}\\leftarrow\\epsilon_{\\theta}$ with trainable LoRA   \n3 for $i\\gets1$ to $N$ do   \n4 Sample $x_{L},x_{H}$ from $_S$ $/*$ Network forward \\*/   \n5 $c_{y}\\gets Y({\\pmb x}_{L})$   \n6 $z_{L}\\leftarrow E_{\\theta}(x_{L})$   \n7 $\\hat{z}_{H}\\gets F_{\\theta}\\big(z_{L};c_{y}\\big)$   \n8 $\\hat{\\pmb{x}}_{H}\\gets D_{\\theta}\\big(\\hat{\\pmb{z}}_{H}\\big)$ $/*$ Compute data term objective \\*/   \n9 $\\begin{array}{r}{\\nabla_{\\theta}\\mathcal{L}_{\\mathrm{data}}\\Leftarrow\\left[\\mathcal{L}_{\\mathrm{MSE}}(\\hat{\\pmb{x}}_{H},\\pmb{x}_{H})+\\lambda_{1}\\mathcal{L}_{\\mathrm{LPIPS}}(\\hat{\\pmb{x}}_{H},\\pmb{x}_{H})\\right]\\frac{\\partial\\hat{\\pmb{x}}_{H}}{\\partial\\theta}}\\end{array}$ $/*$ Compute regularization objective, following DMD[58] \\*/   \n10 Sample $\\epsilon$ from $\\mathcal{N}(0,\\pmb{I})$   \n11 Sample $t$ from $\\{20,\\cdot\\cdot\\cdot,980\\}$   \n12 $\\begin{array}{r l}&{\\hat{z}_{t}\\overset{\\cdot}{\\leftarrow}\\alpha_{t}\\hat{z}_{H}+\\overline{{\\sigma}}_{t}\\epsilon}\\\\ &{z_{\\phi}\\gets\\mathrm{stopgrad}(F_{\\phi}\\left(\\hat{z}_{t};c_{y}\\right))}\\\\ &{z_{\\phi^{\\prime}}\\gets\\mathrm{stopgrad}(F_{\\phi^{\\prime}}\\left(\\hat{z}_{t};c_{y}\\right))}\\\\ &{\\omega\\gets1/\\mathrm{mean}(\\|z_{\\phi}-\\hat{z}_{H}\\|)}\\\\ &{\\nabla_{\\theta}\\mathcal{L}_{\\mathrm{reg}}\\gets[\\omega(z_{\\phi^{\\prime}}-z_{\\phi})]\\,\\frac{\\partial\\hat{z}_{H}}{\\partial\\theta}}\\end{array}$   \n13   \n14   \n15   \n16 $/*$ Compute regularizer funetuning objective \\*/   \n17 Sample $\\epsilon$ from $\\bar{\\mathcal{N}}(0,\\boldsymbol{I})$   \n18 Sample $t$ from $\\{1,\\cdot\\cdot\\cdot,T\\}$   \n19 $z_{t}\\gets\\alpha_{t}$ s $\\mathrm{copgrad}(\\hat{z}_{H})+\\sigma_{t}\\epsilon$   \n20 $\\mathcal{L}_{\\mathrm{diff}}\\leftarrow\\mathcal{L}_{\\mathrm{MSE}}\\big(\\epsilon_{\\phi^{\\prime}}\\big(z_{t};t,c_{y}\\big),\\epsilon\\big)$ $/*$ Network Parameter Update \\*/   \n21 Update $\\theta$ with $\\mathcal{L}_{\\mathrm{data}}+\\lambda_{2}\\mathcal{L}_{\\mathrm{reg}}$   \n22 Update $\\phi^{\\prime}$ with $\\mathcal{L}_{\\mathrm{diff}}$   \n23 end $G_{\\theta}$ $E_{\\theta}$ $E_{\\theta}$ $\\epsilon_{\\theta}$ ", "page_idx": 15}, {"type": "text", "text": "Output: Generator including VAE encoder , latent diffusion network and VAE decoder ", "page_idx": 15}, {"type": "image", "img_path": "TPtXnpRvur/tmp/59c2cd1562ad4564aac547e3d967c0f8e719667e232f0d23bf53b48905421350.jpg", "img_caption": ["Figure 5: Qualitative comparisons between OSEDiff and GAN-based Real-ISR methods. Please zoom in for a better view. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "TPtXnpRvur/tmp/d34f5af4853d79c1e3ec610481670f102aa64d304ae35ee0235c9e57934fc7b7.jpg", "img_caption": ["Figure 6: The LQ images used in user study and the voting results. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "TPtXnpRvur/tmp/7ef098d4579043c7bfcaffb128eeeb8e52a0bdb0caa7e03ec8b1f881ccf7a9a6.jpg", "img_caption": ["Figure 7: More visulization comparisons of different DM-based Real-ISR methods. Please zoom in for a better view. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Yes, the main claims in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 18}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Justification: We discuss limitations in the final section (Conclusion and Limitation). ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 18}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Yes, the paper provides a full set of assumptions and a proof for each theoretical result. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 19}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: Yes, the paper fully discloses all necessary information to reproduce the main experimental results, supporting the main claims and conclusions. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 19}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: All training and testing data are publicly available. We will release the codes and model if the paper is accepted. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 20}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: Yes, the paper provides all necessary training and test details, including data splits, hyperparameters, and optimizer type, to fully understand the results. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 20}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [No] ", "page_idx": 20}, {"type": "text", "text": "Justification: We do not report error bars. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We detail the type of compute workers, memory, and execution time in the experiment section. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 21}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Yes, the research in the paper fully conforms to the NeurIPS Code of Ethics in every respect. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 21}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Yes, we analyze the potential social impact in the final section. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 21}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 22}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pre-trained language models, image generators, or scraped datasets)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 22}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 22}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Yes, we clearly indicate the baseline methods and training/testing data used in the paper. Their licenses permit use within academic scope. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Codes and model will be released if the paper is accepted. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 23}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: The paper does not involve crowd sourcing nor research with human subjects. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 23}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}]