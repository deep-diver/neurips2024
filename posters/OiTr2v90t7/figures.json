[{"figure_path": "OiTr2v90t7/figures/figures_1_1.jpg", "caption": "Figure 1: Overview of new combinatorial structures invented in [75]. Left: A permutree that is a combinatorial object that includes the concepts of permutations, binary trees, clusters, factors, etc., but can also interpolate between them. The permutree is, as defined, a \"directed\" tree, but for visibility, the direction of the edges from Parent to Child is omitted in the diagrams. Middle: Variant concepts required to represent stochastic processes on permutrees indirectly through decorated permutations in Section 3. Right: Special cases of permutrees. Remark 2.1 provides details on each interpretation.", "description": "This figure illustrates the concept of permutrees and its relationship to other combinatorial structures.  The left side shows a permutree, a new mathematical object that generalizes permutations, binary trees, clusters, and binary sequences. The middle shows variations used to represent stochastic processes on permutrees. The right side displays examples of how the permutree concept encompasses these other structures as special cases.", "section": "2 Preliminaries: Permutree and related objects"}, {"figure_path": "OiTr2v90t7/figures/figures_3_1.jpg", "caption": "Figure 2: Left: One-to-one correspondence between decorated permutations and leveled permutrees. Right: Permutree process as marked point process - We introduce an intensity function \u03bb on the plane [0, 1] \u00d7 [0, 1] (top left). Next, we generate random locations l1, ..., ln from the Poisson point process with intensity \u03bb (middle left). Then, for each random location, we independently assign one of the decorations {,, , } from the categorical distribution as a random mark mi (i = 1,..., n) (bottom left). By reading the positional relationship of the points as a permutation table, the resulting marked point {(li, mi) : i = 1, 2, . . . n} can be converted to a decorated permutation. Furthermore, by the transformation used in Proposition 2.2 [75], the decorated permutation can be converted to a leveled permutree, as follows. First, we draw auxiliary lines (dashed lines colored red) below decorations, and above decorations, . From this point on, we will stretch the permutree edges, and it is important to emphasize that the permutree edges do not cross these auxiliary lines. Next, focusing on the auxiliary lines extending to the bottom, we can view these as dividing the lower region into smaller subregions (indicated by the red ovals). The edges are then extended one by one from each subregion. As we extend the edges from the bottom to the top, when they reach the height of each vertex, we connect the adjacent edges to that vertex (indicated by the gray box). By doing this until all vertices are covered, we obtain a leveled permutree.", "description": "The figure shows the one-to-one correspondence between decorated permutations and leveled permutrees.  The right side illustrates how a permutree process is constructed using a marked point process: random locations are generated from a Poisson point process, each assigned a decoration (mark), and this is converted into a leveled permutree via a decorated permutation.", "section": "Permutree processes"}, {"figure_path": "OiTr2v90t7/figures/figures_5_1.jpg", "caption": "Figure 3: (a) Data path - We consider each data as having a data path (a lineage to describe the data in conjunction with some likelihood model) from one of the lower terminal nodes to one of the upper terminal nodes on the permutree (top). This will convince us of its generality and applicability, as it is attributed to the hierarchical clustering from one of the terminal nodes to the root when restricting the permutree to the special case of a binary tree (bottom). (b) Marked stick-breaking process - Inspired by the stick-breaking representation [89] for the construction of Dirichlet processes [23], in order to represent a random permutree of infinite size, we can represent the random vertex positions of the permutree by the stick-breaking process in the horizontal direction and uniform random measures in the vertical direction. (c) Two-table Chinese restaurant process (Variant of two-class Dirichlet allocation) - The data allocated to the lower terminal nodes are successively merged and distributed depending on the mark of each vertex, according to the law of the 'the rich get richer', to select paths.", "description": "This figure illustrates three key aspects of the data modeling strategy using the permutree process. (a) shows how each data point is represented as a path from a lower terminal node to an upper terminal node in the permutree, connecting to hierarchical clustering when the permutree is a binary tree. (b) illustrates the marked stick-breaking process, a method for representing a random permutree of infinite size using stick-breaking in the horizontal direction and uniform random measures in the vertical direction. Finally, (c) depicts the two-table Chinese restaurant process, which models data assignment to lower terminal nodes by successively merging and distributing them based on vertex marks, following a 'rich get richer' approach.", "section": "Data modeling with permutree process"}, {"figure_path": "OiTr2v90t7/figures/figures_7_1.jpg", "caption": "Figure 4: (a) Phylogenetic permutree can simultaneously and unifiedly represent (b) coalescence, (c) recombination, multiple ancestry through (d) partition, and (e) mutation. We note that the past (upper) to present (lower) direction (indicated by\u2193) as biological events is the opposite of the parent (lower) to child (upper) direction (indicated by \u2191) of the permutree as a purely mathematical object.", "description": "This figure illustrates how a phylogenetic permutree can represent various biological events such as coalescence, recombination, multiple ancestry, and mutation in a unified manner. It shows that the direction of time in biological events (past to present) is opposite to the direction of the permutree structure (parent to child).  Each subfigure shows a specific biological event and its corresponding representation in the permutree using the decorations.", "section": "Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_8_1.jpg", "caption": "Figure 5: Experimental results of test perplexity (mean\u00b1std) comparison for real-world data.", "description": "The figure shows the test perplexity results of several models on four real-world datasets.  The models compared include HDPHMM, FCP, MrBayes, ppHMC, ncSMC, and three versions of the proposed MSBP model (MSBP-bTree, MSBP-cTree, MSBP-pTree). The results are presented for two different evolutionary models (JC and GTR).  The MSBP models show improved performance compared to other methods in most cases.  The results indicate that the flexibility offered by the permutree approach is beneficial.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_16_1.jpg", "caption": "Figure 6: Relationship between permutree process and other existing stochastic processes. (a) Uniform random permutation - If we restrict the decoration weights for marks to (c\u25cb, c\u2297, c\u2295, c\u2299) = (1,0,0,0) and make the Poisson process homogeneous, the permutree process leads to a stochastic process that generates a uniform random permutation. This relation follows immediately from the following fact: If a collection of i.i.d. uniform random variables U1, U2,\u2026\u2026 ~ Uniform([0, 1]) is ordered in ascending order, it follows a uniform random permutation. (b) Mondrian process - If we restrict the decoration weights to (c\u25cb, c\u2297, c\u2295, c\u2299) = (0,0,1,0) and set \u03bb(\u00b7) = \u03bc\u00b7 Leb(\u00b7), the permutree process leads to a stochastic process that simulates a Mondrian process [88, 87] on [0, 1] with the intensity \u03bc and the budget 1. By viewing the vertical position in the marked point process as the moment when the event of the cut in the Markov process (i.e., the Mondrian process) occurs, and the horizontal position as the location where the cut occurs, the special permutation process described above can be reduced to a Mondrian process.", "description": "This figure illustrates the relationship between the permutree process and two other stochastic processes: the uniform random permutation and the Mondrian process.  Panel (a) shows how restricting decoration weights and using a homogeneous Poisson process leads to a uniform random permutation. Panel (b) demonstrates that specific decoration weights and intensity functions in the permutree process can be used to generate a Mondrian process.", "section": "Relationship between permutree process and other stochastic processes"}, {"figure_path": "OiTr2v90t7/figures/figures_16_2.jpg", "caption": "Figure 6: Relationship between permutree process and other existing stochastic processes. (a) Uniform random permutation - If we restrict the decoration weights for marks to (c\u25cb, c\u2297, c\u2295, c\u2299) = (1,0,0,0) and make the Poisson process homogeneous, the permutree process leads to a stochastic process that generates a uniform random permutation. This relation follows immediately from the following fact: If a collection of i.i.d. uniform random variables U\u2081, U\u2082,\u2026\u2026 ~ Uniform([0, 1]) is ordered in ascending order, it follows a uniform random permutation. (b) Mondrian process - If we restrict the decoration weights to (c\u25cb, c\u2297, c\u2295, c\u2299) = (0,0,1,0) and set \u03bb(\u00b7) = \u03bc\u00b7Leb(\u00b7), the permutree process leads to a stochastic process that simulates a Mondrian process [88, 87] on [0, 1] with the intensity \u03bc and the budget 1. By viewing the vertical position in the marked point process as the moment when the event of the cut in the Markov process (i.e., the Mondrian process) occurs, and the horizontal position as the location where the cut occurs, the special permutation process described above can be reduced to a Mondrian process.", "description": "This figure shows the relationships between the permutree process and two other stochastic processes: the uniform random permutation and the Mondrian process.  Panel (a) demonstrates how restricting decoration weights and using a homogeneous Poisson process in the permutree process results in a uniform random permutation. Panel (b) shows that restricting decoration weights and intensity function, and interpreting vertical and horizontal positions as timing and location of cuts, leads to a simulation of the Mondrian process.", "section": "B Relationship between permutree process and other stochastic processes"}, {"figure_path": "OiTr2v90t7/figures/figures_17_1.jpg", "caption": "Figure 7: Samples drawn from permutree process with intensity \u03bb(\u00b7) = \u03bc\u00b7Leb(\u00b7) and decoration weights (co, c\u2297, co, c\u2295). Ten samples are generated for each parameter setting.", "description": "This figure shows 40 samples generated from the permutree process for different parameters. Each sample represents a different permutree structure, demonstrating the variability of the model based on different parameter settings. The parameters are: \u03bc (intensity of the Poisson point process) and the decoration weights (co, c\u2297, co, c\u2295), which control the relative frequency of different types of nodes in the permutree.", "section": "3 Permutree processes"}, {"figure_path": "OiTr2v90t7/figures/figures_17_2.jpg", "caption": "Figure 7: Samples drawn from permutree process with intensity \u03bb(\u00b7) = \u03bc\u00b7 Leb(\u00b7) and decoration weights (co, Co, c\u00f3, c\u00f4). Ten samples are generated for each parameter setting.", "description": "This figure shows 40 samples of permutrees generated by the permutree process for various parameter settings. Each row represents a different combination of decoration weights (co, Co, c\u00f3, co) and intensity (\u03bc) which determines the distribution of decorations and locations in the permutree process. The permutree process generates random labeled trees which represents different combinatorial structures as special cases. The visual representation of permutrees shows variations in tree structures that reflect the different parameters used in generating the samples.", "section": "3 Permutree processes"}, {"figure_path": "OiTr2v90t7/figures/figures_17_3.jpg", "caption": "Figure 7: Samples drawn from permutree process with intensity \u03bb(\u00b7) = \u03bc\u00b7 Leb(\u00b7) and decoration weights (co, co, co, co). Ten samples are generated for each parameter setting.", "description": "This figure shows samples generated from the permutree process under different parameter settings.  The intensity function is homogeneous Poisson (\u03bb(\u00b7) = \u03bc\u00b7Leb(\u00b7)), and the decoration weights (co, c\u00ae, co, c\u00f4) are varied to illustrate how different probability distributions of decorations affect the resulting permutree structures. Each row represents a different setting for the decoration weights, and each column displays 10 randomly generated permutrees for that specific setting. The parameter \u03bc is varied across rows, with three values (10, 20, and 40) to show how increasing the intensity also impacts the generated structures.", "section": "3 Permutree processes"}, {"figure_path": "OiTr2v90t7/figures/figures_17_4.jpg", "caption": "Figure 7: Samples drawn from permutree process with intensity \u03bb(\u00b7) = \u03bc\u00b7Leb(\u00b7) and decoration weights (co, c\u2297, co, c\u25cb). Ten samples are generated for each parameter setting.", "description": "This figure shows ten samples of permutrees generated using different parameter settings for the permutree process. Each sample displays the variation of permutree structure obtained by altering the intensity (\u03bc) and the decoration weights (co, c\u2297, co, c\u25cb) of the process.  The figure illustrates how different values for these parameters impact the overall structure and density of the permutrees.", "section": "3 Permutree processes"}, {"figure_path": "OiTr2v90t7/figures/figures_19_1.jpg", "caption": "Figure 8: Observed DNA sequences (top), phylogenetic permutree (middle), and observed DNA sequences assigned to leaf nodes of phylogenetic permutree (bottom). Note that each leaf node (lower) of the phylogenetic permutree does not necessarily have to be the assignment of a single observation DNA sequence. The blue dividing line in the figure below represents a group of DNA sequences where each parcel corresponds to one leaf (lower) node. The phenomenon that each observed sequences within the same group is different is due to mutation events based on the evolutionary model.", "description": "This figure shows how DNA sequences are assigned to a phylogenetic permutree. The top panel shows the raw DNA sequences, the middle shows the inferred permutree structure, and the bottom shows how the sequences are grouped and assigned to the leaf nodes of the permutree.  The figure illustrates that a leaf node can represent multiple sequences which are similar to each other, differing only by mutations that occur over time.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_19_2.jpg", "caption": "Figure 8: Observed DNA sequences (top), phylogenetic permutree (middle), and observed DNA sequences assigned to leaf nodes of phylogenetic permutree (bottom). Note that each leaf node (lower) of the phylogenetic permutree does not necessarily have to be the assignment of a single observation DNA sequence. The blue dividing line in the figure below represents a group of DNA sequences where each parcel corresponds to one leaf (lower) node. The phenomenon that each observed sequences within the same group is different is due to mutation events based on the evolutionary model.", "description": "This figure shows three parts. The top part shows the observed DNA sequences as a heatmap. The middle part shows the phylogenetic permutree which represents coalescence, recombination, multiple ancestry, and mutation. The bottom part shows observed DNA sequences assigned to the leaf nodes of the phylogenetic permutree. Each leaf node represents a group of DNA sequences with similar characteristics, where differences within the group are due to mutation events.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_21_1.jpg", "caption": "Figure 2: Left: One-to-one correspondence between decorated permutations and leveled permutrees. Right: Permutree process as marked point process - We introduce an intensity function \u03bb on the plane [0, 1] \u00d7 [0, 1] (top left). Next, we generate random locations l1, ..., ln from the Poisson point process with intensity \u03bb (middle left). Then, for each random location, we independently assign one of the decorations {,,, } from the categorical distribution as a random mark mi (i = 1,..., n) (bottom left). By reading the positional relationship of the points as a permutation table, the resulting marked point {(li, mi) : i = 1, 2, . . . n} can be converted to a decorated permutation. Furthermore, by the transformation used in Proposition 2.2 [75], the decorated permutation can be converted to a leveled permutree, as follows. First, we draw auxiliary lines (dashed lines colored red) below decorations , and above decorations , . From this point on, we will stretch the permutree edges, and it is important to emphasize that the permutree edges do not cross these auxiliary lines. Next, focusing on the auxiliary lines extending to the bottom, we can view these as dividing the lower region into smaller subregions (indicated by the red ovals). The edges are then extended one by one from each subregion. As we extend the edges from the bottom to the top, when they reach the height of each vertex, we connect the adjacent edges to that vertex (indicated by the gray box). By doing this until all vertices are covered, we obtain a leveled permutree.", "description": "This figure demonstrates the one-to-one correspondence between decorated permutations and leveled permutrees. It also illustrates how a permutree process can be constructed using a marked point process, where random locations and decorations are assigned, and then converted into a leveled permutree through a series of steps.", "section": "2 Preliminaries: Permutree and related objects"}, {"figure_path": "OiTr2v90t7/figures/figures_22_1.jpg", "caption": "Figure 10: Intuitive illustration of transformation PT2PP from permutree (left) to phylogenetic permutree (right). The number assigned to each vertex v represents the function q(v) (i.e., the order of the vertices vertically from bottom to top). We can regard this transformation as giving the role of the partition (red dotted line in the right figure) to the decoration (i.e., the vertex with two parents and two children in the left figure).", "description": "This figure shows how a permutree is transformed into a phylogenetic permutree. The transformation involves changing the representation of the permutree structure to incorporate information about the evolutionary relationships between sequences, such as coalescence, recombination, and mutation. The figure uses color and annotations to highlight the key aspects of the transformation process and the resulting phylogenetic permutree.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_23_1.jpg", "caption": "Figure 10: Intuitive illustration of transformation PT2PP from permutree (left) to phylogenetic permutree (right). The number assigned to each vertex v represents the function q(v) (i.e., the order of the vertices vertically from bottom to top). We can regard this transformation as giving the role of the partition (red dotted line in the right figure) to the decoration (i.e., the vertex with two parents and two children in the left figure).", "description": "This figure illustrates the transformation from a permutree to a phylogenetic permutree.  The transformation involves mapping the vertical ordering of vertices in the permutree (represented by the numbers) to the time dimension in the phylogenetic tree, and assigning a role to the decorations in the permutree that helps represent biological events such as partition in the phylogenetic tree. The red dotted lines highlight the partitioning aspect in the transformed phylogenetic tree.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_24_1.jpg", "caption": "Figure 4: (a) Phylogenetic permutree can simultaneously and unifiedly represent (b) coalescence, (c) recombination, multiple ancestry through (d) partition, and (e) mutation. We note that the past (upper) to present (lower) direction (indicated by\u2193) as biological events is the opposite of the parent (lower) to child (upper) direction (indicated by \u2191) of the permutree as a purely mathematical object.", "description": "This figure shows how a phylogenetic permutree can represent different biological events such as coalescence, recombination, multiple ancestry, and mutation.  The direction of time in the biological events is opposite to the direction of the parent-child relationships in the permutree structure.", "section": "Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_24_2.jpg", "caption": "Figure 13: Illustration of simplest inference method for permutree process as marked point process. The current leveled permutree in Markov chain Monte Carlo inference corresponds to a certain state of the marked point process (left). One marked point (slightly enlarged and colored red) is chosen to be a candidate for updating. The region to be updated is quantized (center) to generate a new candidate marked point (slightly enlarged and colored blue) from the conditional posterior probability (or some proposal distribution). Finally, the generated new marked points are updated or not by the Metropolis-Hastings scheme, which is the next state of the Markov chain (right).", "description": "This figure illustrates a simplified MCMC inference method for a permutree process represented as a marked point process.  It shows how a single marked point is updated in an iterative process.  The process starts with a current leveled permutree (left), representing a state in the Markov chain. A single point is selected (red), its region quantized (center), and a new candidate point is proposed (blue) based on the conditional posterior probability. Finally, the Metropolis-Hastings algorithm decides whether to accept or reject the new candidate, moving to a new state (right).", "section": "C.3 Bayesian inference algorithm for phylogenetic permutree"}, {"figure_path": "OiTr2v90t7/figures/figures_25_1.jpg", "caption": "Figure 8: Observed DNA sequences (top), phylogenetic permutree (middle), and observed DNA sequences assigned to leaf nodes of phylogenetic permutree (bottom). Note that each leaf node (lower) of the phylogenetic permutree does not necessarily have to be the assignment of a single observation DNA sequence. The blue dividing line in the figure below represents a group of DNA sequences where each parcel corresponds to one leaf (lower) node. The phenomenon that each observed sequences within the same group is different is due to mutation events based on the evolutionary model.", "description": "This figure shows how the observed DNA sequences are assigned to the leaves of the phylogenetic permutree, demonstrating the model's ability to handle multiple sequences per leaf node.  The top panel displays the input DNA sequences, the middle shows the corresponding permutree structure, and the bottom illustrates how the sequences are assigned to the leaf nodes of the permutree. The blue lines separate groups of sequences assigned to individual leaves, highlighting the fact that the sequence variations within each group arise due to the mutation process modeled.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_25_2.jpg", "caption": "Figure 5: Experimental results of test perplexity (mean\u00b1std) comparison for real-world data.", "description": "This figure compares the perplexity scores for four real-world datasets (RMPS, HWB, ZB, COMB) across different phylogenetic tree models. Lower perplexity indicates better performance. The models compared include the proposed MSBP model (with binary tree, cambrian tree, and permutree variations), HDPHMM, FCP, and models using MrBayes, ppHMC, and ncSMC.  The results suggest that the permutree model generally performs better than the binary tree model.", "section": "5 Application to phylogenetic permutree analysis"}, {"figure_path": "OiTr2v90t7/figures/figures_26_1.jpg", "caption": "Figure 1: Overview of new combinatorial structures invented in [75]. Left: A permutree that is a combinatorial object that includes the concepts of permutations, binary trees, clusters, factors, etc., but can also interpolate between them. The permutree is, as defined, a \"directed\" tree, but for visibility, the direction of the edges from Parent to Child is omitted in the diagrams. Middle: Variant concepts required to represent stochastic processes on permutrees indirectly through decorated permutations in Section 3. Right: Special cases of permutrees. Remark 2.1 provides details on each interpretation.", "description": "This figure illustrates various combinatorial structures and their relationship with the newly introduced concept of a permutree.  The left panel shows a permutree, highlighting its ability to combine different structures like permutations, binary trees, and clusters. The middle panel shows the decorated permutations used to represent stochastic processes on permutrees, while the right panel showcases special cases and interpretations of permutrees.", "section": "2 Preliminaries: Permutree and related objects"}, {"figure_path": "OiTr2v90t7/figures/figures_27_1.jpg", "caption": "Figure 17: Overview of Chinese restaurant street", "description": "This figure illustrates the recursive structure of the Chinese restaurant street, consisting of boulevards and side streets. Each side of the boulevard is weighted by concentration parameters \u03b81, \u03b82 and discount parameter \u03b1. When a new customer enters the boulevard, the next destination is determined according to the ratio of those weights.  The figure visually represents how the street structure expands recursively to represent a permutree.", "section": "D.2 Our attempt: Chinese restaurant street"}, {"figure_path": "OiTr2v90t7/figures/figures_28_1.jpg", "caption": "Figure 18: Generative model of Chinese restaurant street - (a): Suppose a customer encounters a new boulevard. The boulevard has a forward road and a backward road on both sides of it with an entrance in between. When the new boulevard is opened up, which direction is the forward or backward road is determined with probability 1/2. The figure shows the case where the forward road is up. Given two concentration parameters \u03b8\u2081 > 0 and \u03b8\u2082 \u2265 0, the first customer to enter through the entrance chooses the forward road with probability \u03b8\u2081/(\u03b8\u2081 + \u03b8\u2082), otherwise the backward road, and receives the dish being served at the end. We assign weights \u03b8\u2081 and \u03b8\u2082 to the forward and back roads, respectively. At this stage, the one that the customers did not choose between the forward and backward roads (the lower backward road, represented by the dashed line in the figure) has not yet been activated. Until both the forward and backward roads are activated, the entrance itself serves as another endpoint of this boulevard. (b): The next customer coming to this boulevard, entering through the entrance to this boulevard, will proceed to the side street on that side in the proportion according to the weights assigned to each side. This side street itself corresponds to the boulevard in the next smaller CRS in the recursive structure. That is, the forward direction of this side street (i.e., whether it extends to the left or right first in the figure) is determined by this customer with probability 1/2. The concept of whether the forward or backward road is chosen first on each side street determines whether the vertex corresponding to this side street in the permutree structure extends initially to the parent side or to the child side. (c): Given a discount parameter \u03b1 \u2265 0, this side street is assigned a weight of 1 - \u03b1, which is the number of customers who have taken the side street minus the discount parameter \u03b1. The edge divided by the side street is assigned a weight of the discount parameter \u03b1. (d)-(e): When the next customer decides where to go based on the ratio of weights assigned to edges and side streets, she/he may choose an inactive road (dashed line in (c)). In that case, after the new side street is added (which also releases the entrance termination facility), the backstreet beyond it (dashed line in (d)) will continue to remain inactive. (f)-(g): The above procedures are repeated sequentially and recursively.", "description": "This figure illustrates the generative process of the Chinese Restaurant Street (CRS) model, which is a recursive model that builds a tree structure. Each node represents a restaurant, which can have multiple branches representing side streets. The process begins with a single restaurant, and customers choose to either visit an existing restaurant or open a new one. This creates a tree-like structure that represents the relationships between the different restaurants.", "section": "D.2 Our attempt: Chinese restaurant street"}]