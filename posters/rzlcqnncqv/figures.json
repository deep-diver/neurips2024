[{"figure_path": "RzlCqnncQv/figures/figures_3_1.jpg", "caption": "Figure 1: Snippets of PDDL domain, problem, and plan.", "description": "This figure shows example snippets of PDDL code for a domain, problem, and plan.  The domain defines predicates (object properties), actions (operations), preconditions (requirements for actions), and effects (results of actions). The problem describes the initial state and goal state of a planning problem. Finally, the plan shows a sequence of actions that achieves the goal state, satisfying preconditions of each action.", "section": "1 Introduction"}, {"figure_path": "RzlCqnncQv/figures/figures_5_1.jpg", "caption": "Figure 2: (a) Effect of the number of removed terms on plan search failure. Each gray line shows the PNFk (Plan-Not-Found) metric for one environment. The red line is the average of all 15 environments. (b) Correlation between average exploration walk (EW) score and average domain difference. The x-axis shows how many terms each pair of domains differs in. The y-axis shows the average EW score over various pairs. All the domains show the average monotonicity of the EW score with respect to term difference.", "description": "Figure 2(a) shows how sensitive the planning process is to small changes in the PDDL domain.  Removing even a few terms significantly increases the likelihood of plan search failure. Figure 2(b) demonstrates the correlation between the Exploration Walk (EW) metric (measuring domain similarity) and the number of differing terms between two domains. The EW score consistently decreases as the number of differing terms increases, making EW a reliable measure of domain dissimilarity.", "section": "4.2 Difficulty of domain PDDL generation"}, {"figure_path": "RzlCqnncQv/figures/figures_7_1.jpg", "caption": "Figure 3: Overview of our method. Right: The process begins with natural language descriptions translated into problem PDDL by the LLM (red arrows). Then a domain is generated and refined through iterative cycles involving exploration walks in the environment, interaction with a classical planner, and feedback from the LLM (blue/black arrows). Left: The iterative refinement process depicted on the right corresponds to single paths in the structures shown on the left. Each node represents a state in the refinement process, with arrows indicating problem translation (red), domain refinement (blue).", "description": "This figure illustrates the proposed method for automated PDDL translation and planning using LLMs and environment interaction.  The right side shows the iterative refinement process, starting with natural language descriptions translated into problem PDDLs by an LLM.  This is followed by domain generation and refinement through cycles of exploration walks, classical planning, and LLM feedback. The left side illustrates how the iterative refinement process on the right corresponds to single paths within the tree structures shown. Each node represents a state in the refinement process; red arrows denote problem translation while blue arrows indicate domain refinement.", "section": "4 Method"}, {"figure_path": "RzlCqnncQv/figures/figures_13_1.jpg", "caption": "Figure 4: Correlation between average exploration walk score and average domain difference", "description": "The figure shows the correlation between average exploration walk (EW) score and average domain difference across various PDDL domains.  The x-axis represents the number of terms that differ between pairs of domains, while the y-axis represents the average EW score. Each line corresponds to a different domain, and the red line represents the average across all domains. The plot demonstrates that as the term difference increases, the average EW score decreases, indicating a strong negative correlation between the similarity of two domains and the number of terms that differ between them. This highlights the sensitivity of planning performance to even small changes in the domain description.", "section": "4.3 Domain alignment measure via Exploration Walk metrics"}, {"figure_path": "RzlCqnncQv/figures/figures_16_1.jpg", "caption": "Figure 5: Historgram of average number of lines of domains in [22].", "description": "This histogram shows the distribution of the average number of lines across various PDDL domains from the International Planning Competition (IPC).  The red dashed line indicates a cutoff point, likely highlighting a significant difference in complexity between smaller and larger domains.  The distribution appears to be right-skewed, suggesting a larger number of smaller domains and a few significantly larger ones.  This figure is relevant to understanding the challenges of automatically generating PDDL files, as the complexity of a domain directly impacts the difficulty of the task.", "section": "4.2 Difficulty of domain PDDL generation"}, {"figure_path": "RzlCqnncQv/figures/figures_18_1.jpg", "caption": "Figure 3: Overview of our method. Right: The process begins with natural language descriptions translated into problem PDDL by the LLM (red arrows). Then a domain is generated and refined through iterative cycles involving exploration walks in the environment, interaction with a classical planner, and feedback from the LLM (blue/black arrows). Left: The iterative refinement process depicted on the right corresponds to single paths in the structures shown on the left. Each node represents a state in the refinement process, with arrows indicating problem translation (red), domain refinement (blue).", "description": "This figure illustrates the proposed method for automatically generating PDDL domain and problem files using LLMs and environment feedback. The right side shows the iterative refinement process using exploration walks, classical planners, and LLM feedback. The left side illustrates that the refinement process can be viewed as a tree search, with each node representing a state in the refinement process, and arrows showing problem translation and domain refinement.", "section": "4 Method"}]