[{"type": "text", "text": "Long-range Meta-path Search on Large-scale Heterogeneous Graphs ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Chao $\\mathbf{L}\\mathbf{i}^{1,2,*}$ , Zijie $\\mathbf{Guo}^{1,3,*}$ , Qiuting $\\mathbf{H}\\mathbf{e}^{\\mathbf{1}}$ , $\\mathbf{Kun}\\,\\mathbf{He}^{\\mathbf{1},\\dagger}$ ", "page_idx": 0}, {"type": "text", "text": "1School of Computer Science and Technology, Huazhong University of Science and Technology 2 China Mobile Information Technology Co.,Ltd. 3 School of Computer Science, Fudan University {chaoli,zijieguo,brooklet60}@hust.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Utilizing long-range dependency, a concept extensively studied in homogeneous graphs, remains underexplored in heterogeneous graphs, especially on large ones, posing two significant challenges: Reducing computational costs while maximizing effective information utilization in the presence of heterogeneity, and overcoming the over-smoothing issue in graph neural networks. To address this gap, we investigate the importance of different meta-paths and introduce an automatic framework for utilizing long-range dependency on heterogeneous graphs, denoted as Longrange Meta-path Search through Progressive Sampling (LMSPS). Specifically, we develop a search space with all meta-paths related to the target node type. By employing a progressive sampling algorithm, LMSPS dynamically shrinks the search space with hop-independent time complexity. Through a sampling evaluation strategy, LMSPS conducts a specialized and effective meta-path selection, leading to retraining with only effective meta-paths, thus mitigating costs and over-smoothing. Extensive experiments across diverse heterogeneous datasets validate LMSPS\u2019s capability in discovering effective long-range meta-paths, surpassing state-of-the-art methods. Our code is available at https://github.com/JHL-HUST/LMSPS. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Heterogeneous graphs are widely used for modeling multiple types of entities and relationships in complex systems by various types of nodes and edges. For instance, the large-scale academic network, OGBN-MAG, contains multiple node types, i.e., Paper (P), Author (A), Institution (I), and Field (F), as well as multiple edge types, such as Author $\\xrightarrow{\\mathrm{writes}}$ Paper, Paper $\\xrightarrow{\\mathrm{c1tes}}.$ Paper, Author i\u2212s\u2212 a\u2212f\u2212ilfi\u2212a\u2212te\u2212d\u2212 w\u2212i\u2212th\u2192 Institution, and Paper\u2212ha\u2212s\u2212 a\u2212 t\u2212o\u2212pi\u2212c \u2212of\u2192Field. These elements can be combined to build higher-level semantic relations called meta-paths [44]. For example, APA is a 2-hop meta-path representing the co-author relationship, and PFPAPFP is a 6-hop meta-path related to long-range dependency. ", "page_idx": 0}, {"type": "text", "text": "Utilizing long-range dependency is essential for graph representation learning. For homogeneous graphs, many graph neural networks (GNNs) [28, 4, 1, 54] have been developed to gain benefti from long-range dependency. Utilizing long-range dependency is also crucial for heterogeneous graphs. For instance, the Internet movie database (IMDB) contains $21K$ nodes with only $87K$ edges. Such sparsity means each node has only a few directly connected neighbors and requires models to enhance the node embedding from long-range neighbors. The main challenge in using long-range dependency on heterogeneous graphs is how to alleviate costs while striving to effectively utilize information in exponentially increased receptive fields, which is much more challenging compared to homogeneous graphs due to the heterogeneity. In addition, the well-known over-smoothing issue [30, 24] occurring in many GNNs also needs to be addressed. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Heterogeneous Graph Neural Networks (HGNNs) are popular deep learning techniques for heterogeneous graph representation learning. The key idea is to aggregate valuable neighbor information based on a range of relations to enhance the semantics of vertices. Traditional HGNNs are typically classified into two categories: metapath-free methods and metapath-based methods. Most metapath-free HGNNs [63, 18, 21, 34] utilize information from $l$ -hop neighborhoods by stacking $l$ layers. However, on large-scale heterogeneous graphs, the number of nodes in receptive fields grows exponentially with the number of layers, making them hard to expand to large hops. A recent work [36] employs the graph transformer [54] to learn heterogeneous graphs, which can only exploit long-range dependency in small datasets due to the quadratic complexity of transformer [17]. ", "page_idx": 1}, {"type": "text", "text": "Metapath-based HGNNs [48, 11, 23, 52] obtain information from $l$ -hop neighborhoods by utilizing single-layer structures and meta-paths with maximum hop $l$ , i.e., all meta-paths no more than $l$ hops. Benefiting from the feature of selective aggregation of neighbors based on meta-path, metapathbased HGNNs show greater potential in handling large-scale datasets [55, 52]. For metapath-based HGNNs, to exploit long-range dependency, the maximum hop needs to be large enough as there are no stacking layers. However, the number of meta-paths also grows exponentially with maximum hop $l$ , corresponding to exponential receptive fields associated with layers in metapath-free methods. For instance, on OGBN-MAG, to gain a 3-hop meta-path based on the 2-hop meta-path PAP, the next node type has three choices (A, P, and F). For each additional hop, the number of possible meta-paths increases exponentially. Hence, utilizing long-range dependencies on large-scale heterogeneous graphs has not been resolved yet. ", "page_idx": 1}, {"type": "text", "text": "This paper investigates the importance of various meta-paths and makes two key observations: (1) A small number of meta-paths dominate the performance, and (2) certain meta-paths can have a negative impact on performance. The second observation explains why few HGNNs gain benefit from long-range neighbors. Different from homogeneous graphs, messages on heterogeneous graphs can be noisy or redundant for specific tasks, and the presence of long-range dependencies makes it more challenging to exclude negative heterogeneous information, even with the use of attention mechanisms. For example, focusing too much on Institution instead of related Papers is harmful to predicting a paper\u2019s field. These observations highlight the opportunity to leverage long-range dependencies by selectively utilizing effective meta-paths. ", "page_idx": 1}, {"type": "text", "text": "Motivated by the observations mentioned above, we propose a novel method called Long-range Meta-path Search through Progressive Sampling (LMSPS). LMSPS focuses on meta-path search and aims to reduce the exponentially growing meta-paths to a subset that is specifically effective for the given dataset and task. LMSPS builds a comprehensive search space initially, including all meta-paths related to the target nodes. Then, it adopts a progressive sampling algorithm to reduce the search space. Finally, LMSPS selects the top- $M$ meta-paths from the reduced search space based on a sampling evaluation strategy. This search stage reduces the exponential number of meta-paths to a constant for retraining. Experimental results on both real-world and manual sparse large-scale datasets demonstrate that LMSPS outperforms existing state-of-the-art methods for heterogeneous graph representation learning. ", "page_idx": 1}, {"type": "text", "text": "Our main contributions are summarized as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose a novel meta-path search framework termed LMSPS, which to our knowledge is the first HGNNs to utilize long-range dependency in large-scale heterogeneous graphs. \u2022 To search for effective meta-paths efficiently, we introduce a novel progressive sampling algorithm to reduce the search space dynamically and a sampling evaluation strategy for meta-path selection. \u2022 Moreover, the searched meta-paths of LMSPS can be generalized to other HGNNs to boost their performance. ", "page_idx": 1}, {"type": "text", "text": "2 Preliminaries ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Heterogeneous graph [43]. A heterogeneous graph is defined as $\\mathcal{G}=\\{\\mathcal{V},\\mathcal{E},T,\\mathcal{R},f_{T},f_{\\mathcal{R}}\\}$ with $|{\\mathcal{T}}+{\\mathcal{R}}|{>}2,$ , where $\\mathcal{V}$ denotes the set of nodes, $\\mathcal{E}$ denotes the set of edges, $\\tau$ is the node-type set and $\\mathcal{R}$ the edge-type set. Each node $v_{i}\\in\\mathcal{V}$ is maped to a node type $f_{T}(v_{i})\\in\\mathcal{T}$ by mapping function $f_{T}:\\mathcal{V}\\to\\mathcal{T}$ . Similarly, each edge $e_{t\\leftarrow s}\\in\\mathcal{E}$ ( $e_{t s}$ for short) is mapped to an edge type $f_{\\mathcal{R}}(e_{t s})\\in\\mathcal{R}$ by mapping function $f_{\\mathcal{R}}:\\mathcal{E}\\to\\mathcal{R}$ . ", "page_idx": 1}, {"type": "text", "text": "Meta-path [44]. A meta-path $P$ is a composite relation that consists of multiple edge types, i.e., $P\\triangleq$ $c_{1}\\,\\stackrel{r_{12}}{\\leftarrow}\\,c_{2}\\cdot\\cdot\\cdot\\cdot c_{l-1}\\stackrel{r_{(l-1)l}}{\\leftarrow}\\,c_{l}$ $'P=c_{1}\\cdot\\cdot\\cdot c_{l}$ for short), where $c_{1},\\ldots,c_{l}\\in{\\mathcal{T}}$ and $r_{12},\\ldots,r_{(l-1)l}\\in\\mathcal{R}$ . A meta-path $P$ corresponds to multiple meta-path instances in the underlying heterogeneous graph. For example, meta-path APA corresponds to all paths of co-author relationships on the heterogeneous graph. Using meta-paths means selectively aggregating neighbors on the meta-path instances. ", "page_idx": 2}, {"type": "text", "text": "3 Related Works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Heterogeneous Graph Neural Networks. HGNNs are proposed to learn rich and diverse semantic information on heterogeneous graphs. Several HGNNs [29, 23, 34, 36] have involved high-order semantic aggregation. However, their methods are not applied to large-scale datasets due to high costs. Additionally, many HGNNs [56, 21, 48, 23] have implicitly learned meta-paths by attention. However, few work employs the discovered meta-paths to produce final results, let alone generalize them to other HGNNs to demonstrate their effectiveness. For example, GTN [56] and HGT [21] only list the discovered meta-paths. HAN [48], HPN [23] and MEGNN [5] validate the importance of discovered meta-paths by experiments not directly associated with the learning task. GraphMSE [31] is the only work that shows the performance of the discovered meta-paths. However, they are not as effective as the full meta-path set. So, their learned meta-paths are not effective enough. ", "page_idx": 2}, {"type": "text", "text": "Meta-structure Search on Heterogeneous Graphs. Recently, some works have attempted to utilize neural architecture search (NAS) to discover meta-structures. GEMS [15] is the first NAS method on heterogeneous graphs, which utilizes an evolutionary algorithm to search meta-graphs for recommendation tasks. DiffMG [8] searches for meta-graphs by a differentiable algorithm to conduct an efficient search. PMMM [27] performs a stable search to find meaningful meta-multigraphs. However, meta-path-based HGNNs are mainstream methods [41, 57, 48, 11], while meta-graphbased HGNNs are specialized. So, their searched meta-graphs are extremely difficult to generalize to other HGNNs. RL-HGNN [60] proposes a reinforcement learning (RL)-based method to find meta-paths. On recommendation tasks, RMS-HRec [37] also proposes an RL-based meta-path selection strategy to discover meta-paths. Both of them are very time-consuming. ", "page_idx": 2}, {"type": "text", "text": "4 Motivation of Long-range Meta-path Search ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Long-range meta-paths can complete the missing information that can not be obtained from close nodes. Take the meta-path MDMDMK $(\\mathsf{M{\\mathrm{-}}D{\\mathrm{\\{-}}M{\\mathrm{-}}D{\\mathrm{\\{-}}M{\\mathrm{-}}K}})}$ ) from IMDB as an example. IMDB includes four different entity types: Movies (M), Directors $(\\mathrm{D})$ , Keywords (K), and Actors (A). The task is to predict the category of the target movies. MDMDMK is a 5-hop meta-path that is hard for experts to understand and then apply. However, for many movies without keywords, the meta-path $\\mathsf{M{\\mathrm{{\\{-\\,D}}\\{-\\mathbf{M{\\mathrm{{\\{\\leftarrowD}}}\\{-\\mathbf{M{\\mathrm{{\\leftarrow{K}}}}\\}}}}}}}}$ is important because the target movies can aggregate the keyword information from the movies of co-directors. ", "page_idx": 2}, {"type": "text", "text": "In addition, SeHGNN [52] employs attention mechanisms to fuse all the target-node-related metapaths and outperforms the existing HGNNs. SeHGNN has an important observation that models with single-layer structures and long meta-paths outperform those with multi-layers and short metapaths, indicating the advantages of long-range meta-paths. However, because the number of metapaths increases exponentially with maximum hops, SeHGNN has to use a small maximum hop to save memory and reduce costs. For example, The maximum hop is 2 for large-scale datasets OGBN-MAG [20], which is insufficient, as shown in Table 2 of the experiments. This inspires us to consider whether we can only use effective meta-paths instead of all meta-paths to reduce the consumption of large maximum hops. ", "page_idx": 2}, {"type": "text", "text": "We analyze the importance of different meta-paths for SeHGNN on two widely-used real-world datasets DBLP and ACM from HGB [34]. All results are the average of 10 times running with different random initialization. As the number of meta-paths exponentially increases with the maximum hop, in exploratory experiments, we set the maximum hop $l=2$ for ease of illustration. Then the meta-path sets are {A, AP, APA, APT, APV} on DBLP, and {P, PA, PC, PP, PAP, PCP, PPA, PPC, $\\mathrm{PPP}{}\\}$ on ACM. ", "page_idx": 2}, {"type": "text", "text": "In each experiment on DBLP, we remove one meta-path and compare the performance with the result of leveraging the full meta-path set to analyze the importance of the removed meta-path. As shown in Figure 1 (a), removing either A or AP or APA or APT has little impact on the final performance. However, removing APV results in severe degradation in performance, demonstrating APV is the critical meta-path on DBLP when $l\\,=\\,2$ . We further retain one meta-path and remove others as shown in Figure 1 (b). The performance of utilizing APV is only slightly degraded compared to the full meta-paths set. Consequently, we obtain the first observation: A small number of meta-paths provide major contributions. In each experiment on ACM, we remove some meta-paths to analyze their impact on the final performance. Results in Figure 1 (c) show that the performance of SeHGNN improves after removing a part of meta-paths. For example, after removing PC and PCP, the Micro-F1 scores are improved by $\\bar{0}.5\\bar{2}\\%$ . So, we can conclude the second observation: Certain meta-paths can have a negative impact for heterogeneous graphs. The second observation is reasonable because heterogeneous information is not consistently beneficial for various tasks compared to homogeneous information. It is supported by the fact that various recent HGNNs [8, 27, 52] have removed some edge types to exclude corresponding heterogeneous information during pre-processing based on substantial domain expertise or empirical observations. This observation explains why most HGNNs use a maximum hop of 2, i.e., it is hard to exclude negative information under larger maximum hops. Additionally, because SeHGNN employs an attention mechanism, the performance degradation indicates the attention mechanism has limitations in dealing with noise. ", "page_idx": 2}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/96d989505cbcf9a3e831cd982515b49b466e61930b9803df2aefa2e9fcb77007.jpg", "img_caption": ["Figure 1: Analysis of the importance of different meta-paths. (a) illustrates the results after removing a single meta-path on DBLP; (b) shows the performance of utilizing a single meta-path on DBLP; (c) illustrates the performance after removing a part of meta-paths on ACM. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Although long-range meta-paths outperform short meta-paths [52], they need a large maximum hop, resulting in exponentially increasing meta-paths. Motivated by the above two observations, unlike existing methods [5, 31, 52, 56], we can employ effective meta-paths instead of the full meta-path set without sacrificing performance. Although the number of meta-paths grows exponentially with the maximum hop, the proportion of effective meta-paths is small, which is similar to the $80/20$ rule of Pareto principle [40, 10]. To keep efficiency while trading off the performance, we choose a fixed number of meta-paths (like 30) over all datasets. Therefore, the exponential meta-paths can be reduced to a constant. Now the key point is how to find effective meta-paths. ", "page_idx": 3}, {"type": "text", "text": "5 The Proposed Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The key of our LMSPS is to utilize a search stage to reduce the exponentially increased meta-paths to a subset effective to the current dataset and task. It can overcome the main challenges of utilizing long-range dependency on heterogeneous graphs. First, utilizing effective meta-paths instead of all meta-paths alleviates computational and memory costs while keeping effective heterogeneous information. Second, each target node only aggregates neighbors on the path instances of effective meta-paths. Because the proportion of effective meta-paths is small and each node has a different neighborhood condition, each target node aggregates different neighbors under the constraints of effective meta-path instances. In this way, the over-smoothing issue can also be overcome. ", "page_idx": 3}, {"type": "text", "text": "Then, the main challenge becomes how to discover effective meta-paths, especially long-range ones. Searching for long-range meta-paths has two main challenges: the exponentially increasing issue and the noise issue. We propose a progressive sampling algorithm and a sampling evaluation strategy to respectively overcome the two challenges. Figure 2 illustrates the overall framework of LMSPS, which consists of a super-net in the search stage and a target-net in the training stage. ", "page_idx": 3}, {"type": "text", "text": "The super-net aims to automatically discover effective meta-paths for specific datasets or tasks, so the search results should not be affected by specific modules. Based on this consideration, we develop a simple MLP-based instead of transformer-based architecture for meta-path search because the ", "page_idx": 3}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/c59c1e2a2c48e5ece127cd1b276574a46c813c1efc1d6f766eb0b9bf851d71d2.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 2: The overall framework of LMSPS. Based on the progressive sampling and sampling evaluation in the search stage, the training stage employs $M$ effective meta-paths instead of the full $K$ target-node-related meta-paths. It exhibits aggregation of meta-paths with maximum hop 2, i.e., 0, 1, and 2-hop meta-paths. The weight updates of feature projection are not shown for ease of illustration. ", "page_idx": 4}, {"type": "text", "text": "former involves fewer human interventions [45, 16, 3]. In addition, the sampling strategy keeps the parametric modules changing in the search stage, which is important for preventing the search meta-paths from being affected by specific modules. The super-net contains five blocks: neighbor aggregation, feature projection, progressive sampling search, sampling evaluation, and MLP. ", "page_idx": 4}, {"type": "text", "text": "5.1 Progressive Sampling Search ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Let ${\\mathbb P}\\;=\\;\\{P_{1},\\cdots,P_{k},\\cdots,P_{K}\\}$ be the initial search space with all the $K$ target-node-related meta-paths, $X^{c_{i}}$ be the raw feature matrix of all nodes belonging to type $c_{i}$ , and $\\hat{A}_{c_{i},c_{i}+1}$ be the row-normalized adjacency matrix between node type $c_{i}$ and $c_{i+1}$ . The neighbor aggregation block follows SeHGNN [52], which employs an efficient one-time message passing to pre-process an entire heterogeneous graph into regular-shaped tensors for target nodes. Specifically, it uses the multiplication of adjacency matrices to calculate the final contribution weight of each metapath-based neighbor to targets. As shown in Figure 2, the neighbor aggregation process of $l$ -hop meta-path $P_{k}=c_{0}c_{1}c_{2}\\ldots c_{l}$ is: ", "page_idx": 4}, {"type": "equation", "text": "$$\nX_{k}=\\left\\{\\!\\!\\begin{array}{l l}{{X^{c_{0}}}}&{{l=0}}\\\\ {{\\hat{A}_{c_{0},c_{1}}\\hat{A}_{c_{1},c_{2}}\\cdot\\cdot\\cdot\\hat{A}_{c_{l-1},c_{l}}X^{c_{l}}}}&{{l>0}}\\end{array}\\!\\!,\\right.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $X_{k}$ is the feature matrices of meta-path $P_{k}$ , and $c_{0}$ is the target node type. Then, an MLP-based feature projection block is used to project different feature matrices into the same dimension, namely, $X_{k}^{\\prime}=\\mathrm{MLP}_{k}(X_{k})$ . ", "page_idx": 4}, {"type": "text", "text": "To automatically discover meaningful meta-paths for various datasets or tasks without prior, our search space contains all target-node-related meta-paths, severely challenging the efficiency and effectiveness of the search. To address the efficiency challenge, LMSPS utilizes a progressive sampling algorithm to sample meta-paths in each iteration and progressively shrink the search space. ", "page_idx": 4}, {"type": "text", "text": "Specifically, LMSPS assigns one architecture parameter to each meta-path. Let $\\alpha\\quad=$ $\\{\\dot{\\alpha}_{1},\\cdot\\cdot\\cdot,\\dot{\\alpha}_{k},\\cdot\\cdot\\cdot,\\alpha_{K}\\}\\in\\mathbb{R}^{K}$ be the architecture parameters of $K$ meta-paths. We use a Gumbelsoftmax [35, 9] over architecture parameters $\\alpha_{k}$ to calculate the strength of different meta-paths: ", "page_idx": 4}, {"type": "equation", "text": "$$\nq_{k}=\\frac{\\exp\\left[\\left(\\alpha_{k}+u_{k}\\right)/\\tau\\right]}{\\sum_{j=1}^{K}\\exp\\left[\\left(\\alpha_{j}+u_{j}\\right)/\\tau\\right]},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $q_{k}$ is the path strength, representing the relative importance of meta path $P_{k}$ . $\\mathit{u}_{k}=$   \n$-\\log\\left(-\\log\\left(U\\right)\\right)$ where $U\\sim\\mathrm{Uniform}(0,1)$ , and $\\tau$ is temperature controlling relaxation\u2019s extent. ", "page_idx": 4}, {"type": "text", "text": "The progressive sampling algorithm uses the path strength to progressively narrow the search space from $K$ to $V$ to exclude useless meta-paths. Generally, $K\\gg V$ under a large maximum hop. Let $\\widetilde{q}_{C}$ be the $C$ -th largest path strength of $\\mathbb{Q}=\\left\\{q_{1},\\cdot\\cdot\\cdot,q_{k},\\cdot\\cdot\\cdot,q_{K}\\right\\}$ . During the search stage, the search space retains all meta-paths no less than $\\widetilde{q}_{C}$ . The dynamic search space can be formulated as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbb{S}_{C}=\\{k|q_{k}\\geq\\widetilde{q}_{C},\\forall1\\leq k\\leq K\\}\\quad\\mathrm{where}\\ C=\\lceil\\lambda(K-V)\\rceil+V.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Here $C$ is the search space size, $\\mathbb{S}_{C}$ consists of the indexes of retained meta-paths, and $\\lceil\\cdot\\rceil$ indicates the rounding symbol. $\\lambda\\in[0,1]$ is a parameter controlling the number of retrained meta-paths and decreases from 1 to 0 as the epoch increases. ", "page_idx": 4}, {"type": "text", "text": "As the search stage aims to determine top- $M$ meta-paths, we sample $M$ meta-paths from dynamic search space in each iteration. In each iteration, only parameters on the $M$ activated meta-paths are updated, while others remain unchanged. Therefore, the search cost is relevant to $M$ instead of $K$ . The forward propagation can be expressed as: ", "page_idx": 5}, {"type": "equation", "text": "$$\nZ=\\mathrm{MLP}\\Big(\\sum_{k\\in\\mathbb{S}}q_{k}^{\\prime}\\cdot\\mathrm{MLP}_{k}(X_{k})\\Big)\\quad\\mathrm{where~}\\mathbb{S}=\\mathrm{UniformSample}(\\mathbb{S}_{C},M).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here $q_{k}^{\\prime}\\,=\\,\\exp\\left[\\left(\\alpha_{k}+u_{k}\\right)/\\tau\\right]/\\sum_{k\\in\\mathbb{S}}\\exp\\left[\\left(\\alpha_{j}+u_{j}\\right)/\\tau\\right]$ indicates the path strength of activated meta-paths, a $\\mathrm{nd}\\mathrm{\\UniformSample}(\\mathbb{S}_{C},M)$ indicates a set of $M$ elements chosen randomly from set $\\mathbb{S}_{C}$ without replacement via a uniform distribution. ", "page_idx": 5}, {"type": "text", "text": "The parameter update in the super-net involves a bilevel optimization problem [2, 7, 51]. ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\omega}~\\mathcal{L}_{v a l}(\\mathbb{S},\\omega^{*}(\\alpha),\\alpha)~~\\mathrm{~s.t.~}\\omega^{*}(\\alpha)=\\operatorname*{argmin}_{\\omega}\\mathcal{L}_{t r a i n}(\\mathbb{S},\\omega,\\alpha).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here $\\mathcal{L}_{t r a i n}$ and $\\mathcal{L}_{v a l}$ denote the training and validation loss, respectively. $_{\\alpha}$ is the architecture parameters calculating the path strength. $\\omega$ is the network weights in MLP. Following the NAS-related works in the computer vision field [33, 50, 53], we address this issue by first-order approximation. Specifically, we alternatively freeze architecture parameters $_{\\alpha}$ when training $\\omega$ on the training set and freeze $\\omega$ when training $_{\\alpha}$ on the validation set. ", "page_idx": 5}, {"type": "text", "text": "The progressive sampling strategy can contribute to a more compact search space specifically driven by the current HIN and task, leading to a more effective meta-path discovery. Additionally, it can overcome the deep coupling issue [13] because of the randomness in each iteration. ", "page_idx": 5}, {"type": "text", "text": "5.2 Sampling Evaluation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "After the completion of the progressive sampling search, the search space is narrowed from $K$ to $V$ Traditional methods in the computer vision field directly derive the final architecture based on the architecture parameters [33, 50, 53]. However, as different meta-paths could be noisy or redundant to each other, top- $M$ meta-paths are not necessarily the optimal solution when their importance is calculated independently. Based on this consideration, we specially designed a novel sampling evaluation strategy by evaluating the overall performance of each meta-path set. Specifically, using path strength at the end of progressive sampling as the probability, we sample $M$ meta-paths from the compact search space $\\mathbb{S}_{V}$ to evaluate their overall performance. The sampling evaluation is repeated 200 times to filter out the meta-path set with the lowest validation loss. So, we can select the best meta-path set instead of independent top- $M$ meta-paths, which is more reasonable. This stage is not time-consuming because the evaluation does not involve weight training. This sampling process can be represented as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\bar{\\mathbb{S}}=\\mathrm{DiscreteSample}(\\mathbb{S}_{V},M,\\bar{\\mathbb{Q}}).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here, DiscreteSample $(\\mathbb{S}_{V},M,\\bar{\\mathbb{Q}})$ indicates a set of $M$ elements chosen from set $\\mathbb{S}_{V}$ without replacement via discrete probability distribution $\\bar{\\mathbb Q}$ . $\\bar{\\mathbb Q}$ is the set of relative path strength calculated by architecture parameters of the $V$ meta-paths based on Equation 2. The overall search algorithm and more discussion are shown in Appendix $\\mathbf{C}$ . ", "page_idx": 5}, {"type": "text", "text": "Thereafter, the retained meta-path set is recorded as $\\mathbb{S}_{M}=\\mathrm{argmin}_{\\bar{\\mathbb{S}}}\\,\\mathcal{L}_{v a l}(\\bar{\\mathbb{S}},\\omega^{*},\\alpha^{*})$ . The forward propagation of the target-net for representation learning can be formulated as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\hat{\\pmb Z}=\\mathrm{MLP}\\Big(\\underset{\\substack{k\\in\\mathbb{S}_{M}}}{\\|\\big\\vert}\\,\\mathrm{MLP}_{k}(\\pmb X_{k})\\Big).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here, $\\parallel$ denotes the concatenation operation. Unlike existing HGNNs, the architecture of the targetnet does not contain neighbor attention and semantic attention. Instead, the parametric modules consist of pure MLPs. The training objective is shown in Appendix A.3. ", "page_idx": 5}, {"type": "text", "text": "5.3 Discussion on Differences with Prior Works ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "As discussed in Section 3, there have been some attempts to find meta-paths automatedly [15, 56, 60]. Three aspects highlight the differences between LMSPS and existing methods. 1) Large-scale dataset: LMSPS is the first HGNN that makes it possible to achieve automated meta-path selection for large-scale heterogeneous graph node property prediction. 2) Long-range dependency: LMSPS is the first HGNN to utilize long-range dependency in large-scale heterogeneous graphs. To achieve the above two goals, LMSPS has addressed two key challenges: (a) alleviating costs while striving to effectively utilize information in exponentially increased receptive fields and (b) overcoming the well-known over-smoothing issue. 3) High generalization: Based on Table 4, the searched meta-paths of LMSPS can be generalized to other HGNNs to boost their performance, which has not been achieved by existing works. To accomplish this objective, LMSPS uses an MLP-based architecture instead of a transformer-based one for meta-path search because the former involves fewer inductive biases [45, 16, 3], i.e., human interventions. ", "page_idx": 5}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/b04fadfa0b25a467cdf227a1b6e841c66ec64c272e39437b104d3560a95379ad.jpg", "table_caption": ["Table 1: Performance on small and large datasets. Best is in bold, and the runner-up is underlined. "], "table_footnote": ["OGBN-MAG is a large dataset with nodes\u2019 numbers 10 to 175 times that of the other four datasets. "], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "6 Experiments and Analysis ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "This section evaluates the beneftis of our method against state-of-the-art models on nine heterogeneous datasets. We aim to answer the following questions: Q1. How does LMSPS perform compared with state-of-the-art baselines? Q2. Can LMSPS overcome the over-smoothing and noise issues? Q3. Are the search algorithm and searched meta-paths effective? Q4. Does LMSPS perform better on sparser heterogeneous graphs? ", "page_idx": 6}, {"type": "text", "text": "6.1 Datasets and Baselines ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate LMSPS on several representative heterogeneous graph datasets, including DBLP, IMDB, ACM, and Freebase from HGB benchmark [34], and the large-scale dataset OGBN-MAG from OGB challenge [20]. The statistics of the datasets are listed in Table 7. The details about all datasets, baselines, and experiment settings are recorded in Appendix A and B. ", "page_idx": 6}, {"type": "text", "text": "6.2 Performance Analysis ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To answer Q1, we report the performance of our approaches and baselines in Table 1. Random means the result of replacing our searched meta-paths with 30 random meta-paths. We show the average result of 20 random samples. Based on the results, we have the following observations. First, LMSPS outperforms all baselines for different metrics on almost all datasets except Micro-F1 scores on Freebase, sometimes by a significant margin, which validates the power of LMSPS. For example, on the largest dataset OGBN-MAG, LMSPS achieves $54.83\\%$ test accuracy, while the best competitor has $51.4\\bar{5}\\%$ test accuracy. Second, all metapath-free methods encounter out-of-memory (OOM) issues when dealing with large datasets, including highly competitive methods, HINormer and SlotGAT, indicating the advantage of employing meta-paths electively aggregating neighbors on the meta-path instances. Third, although LMSPS is an MLP-based method, the pure MLP method [19] has the worst performance with only $26.92\\%$ test accuracy on OGBN-MAG, validating the advantages of pre-processing and meta-path search. Finally, LMSPS outperforms Random significantly, further indicating the importance of meta-path search. More comparisons with top method combinations ", "page_idx": 6}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/857a9f2bfbfe813c1b1ff9eecfa44ae203a37c48c99d9309eed3873aa65928be.jpg", "img_caption": ["Figure 3: Illustration of (a) performance, (b) memory cost, (c) average training time of Simple-HGN, SeHGNN, and LMSPS relative to the maximum hop or layer on DBLP. The gray dotted line in (a) indicates the number of target-node-related meta-paths under different maximum hops, which is exponential. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Table 2: Experiments on OGBN-MAG to analyze Table 3: Experiments to explore the effectiveness the performance of SeHGNN and LMSPS under of our search algorithm. In our LMSPS, the metadifferent maximum hops. #MP is the number paths are replaced by those discovered by other of meta-paths under different maximum hops. methods. ", "page_idx": 7}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/2d0a9509ca44103699195703829b45c6fe041136fad6896ca86b2e932327dbb5.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "on OGBN-MAG are shown in Table 10 of Appendix E.2, in which LMSPS also shows the best performance. ", "page_idx": 7}, {"type": "text", "text": "6.3 Analysis on Large Maximum Hops ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "To answer Q2, we conduct experiments to compare the performance, memory, and efficiency of LMSPS with the method of HGB benchmark, Simple-HGN [34], and the best metapath-based method, SeHGNN [52], on DBLP. Figure 3 (a) shows that LMSPS has consistent performance with the increment of maximum hop. The failure of Simple-HGN demonstrates its attention mechanism can not overcome the over-smoothing issue or eliminate the effects of noise under large hop. Figure 3 (b), (c) illustrate each training epoch\u2019s average memory and time costs relative to the maximum hop or layer. We can observe that the consumption of SeHGNN exponentially grows, and the consumption of Simple-HGN linearly increases, which is consistent with their time complexity as listed in Table 8. Meanwhile, LMSPS has almost constant consumption as the maximum hop grows. Figure 3 (c) shows the time cost of LMSPS in the search stage, which also approximates a constant when the number of meta-paths is larger than $M=30$ . More results about efficiency are shown in Figure 4 of Appendix E.1. ", "page_idx": 7}, {"type": "text", "text": "We also compare the performance and training time of LMSPS with SeHGNN under different maximum hops on large-scale dataset OGBN-MAG. When the maximum hop $l=1,2,3$ , we utilize the full meta-path set because the number of meta-paths is smaller than $M=30$ . Following the convention [34, 52], we measure the average time consumption of one epoch for each model. As shown in Table 2, the performance of LMSPS keeps increasing as the maximum hop value grows. It indicates that LMSPS can overcome the issues caused by utilizing long-range dependency, e.g., over-smoothing and noise. In addition, when the number of meta-paths is larger than 30, the training time of LMSPS is stable under different maximum hops. ", "page_idx": 7}, {"type": "text", "text": "6.4 Effectiveness of the Search Algorithm and Searched Meta-paths ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "To answer Q3, we first explore the effectiveness of our search algorithm. In our architecture, our meta-paths are replaced by those meta-paths discovered by other methods. DARTS [32] is the first differentiable search algorithm in neural networks. SPOS [13] is a classic singe-path differentiable algorithm. DARTS and SPOS aim to search operations, like $3\\times3$ convolution, in CNNs. DiffMG [8] and PMMM [27] search for meta-graphs instead of meta-paths. We ignore these differences and focus on the algorithms. The derivation strategies of the four methods are unsuitable for discovering ", "page_idx": 7}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/854cb570ca130f44ab904baf70323c624d000ca7dfe380557b6fac38f447ee56.jpg", "table_caption": ["Table 4: Experiments on the generalization of the searched meta paths. \\* means using the meta-paths searched in LMSPS. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/d6cd98583353d592815a9b62eebf89cea4688cb9ab1436cb3e1959f9def1c3dd.jpg", "table_caption": ["Table 5: Results of LMSPS and SeHGNN on the sparse large-scale heterogeneous graphs. \u2191means the improvements in test accuracy. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Table 6: Experiments on small and large datasets to analyze the effects of different blocks in LMSPS. PS means progressive sampling strategy, and $S E$ means sampling evaluation strategy. $\\dagger$ means employing all meta-paths and replacing the concatenation operation with the transformer module. ", "page_idx": 8}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/5c35f18d5cee79edfff3c0c06da649d2de36840dbc44b581198c6ec84c11d67d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "multiple meta-paths. So we changed their derivation strategies to ours to improve their performance. we report the Micro-F1 scores in Table 3. The performance of LMSPS verifies the effectiveness of our search algorithm. ", "page_idx": 8}, {"type": "text", "text": "To demonstrate the effectiveness of searched meta-paths, on the one hand, the meta-paths should be effective in the proposed model. On the other hand, the effective meta-paths mainly depend on the dataset instead of the architecture, so the meta-paths should be effective after being generalized to other HGNNs. Because finding meta-paths that work effectively across various HGNNs is a tough task, it has not been achieved by previous works. We verify the generalization of our searched metapath on the most famous HGNN, HAN [48], and the SOTA metapath-based method SeHGNN [52]. The Micro-F1 scores on three representative datasets are shown in Table 4. After simply replacing the original meta-path set with our searched meta-paths and keeping other settings unchanged, the performance both improve, demonstrating the effectiveness of our searched meta-paths. In addition, we have shown the interpretability of searched meta-paths in Appendix D. ", "page_idx": 8}, {"type": "text", "text": "6.5 Necessity of Long-range Dependency ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To answer Q4 and explore the necessity of long-range dependency on heterogeneous graphs, we construct four large-scale datasets with high sparsity based on OGBN-MAG. To avoid inappropriate preference seed settings of randomly removing, we construct fixed heterogeneous graphs by limiting the maximum in-degree related to edge type. Specifically, we gradually reduce the maximum indegree related to edge type in OGBN-MAG from 50 to 5 but leave all nodes unchanged. Details of the four datasets are listed in Appendix A. The test accuracy of LMSPS and SOTA method SeHGNN are shown in Table 5. LMSPS outperforms SeHGNN more significantly with the increasing sparsity. In addition, the leading gap of LMSPS over SeHGNN is more than $4.7\\%$ on the highly sparse dataset OGBN-MAG-5. The main difference between SeHGNN and LMSPS is that the former cannot utilize large hops and only use hop 2 while the latter has a maximum hop of 6, demonstrating that long-range dependencies are more effective with decreased direct neighbors on heterogeneous graphs. ", "page_idx": 8}, {"type": "text", "text": "6.6 Ablation Study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Two components differentiate our LMSPS from other HGNNs: the search algorithm and semantic fusion without attention. The search algorithm consists of a progressive sampling algorithm and a sampling evaluation strategy. We explore how each of them improves performance through ablation studies under the same settings as the main experiments in Table 1. As shown in Table 6, the performance of LMSPS significantly decreases when removing progressive sampling or sampling evaluation strategy. In addition, employing a transformer block for semantic attention on all metapaths shows slightly worse performance even if using many more meta-paths and is out-of-memory on larger datasets, indicating that the transformer cannot eliminate the negative effects of noise. It is reasonable because attention values are calculated based on softmax and are positive even for noise. ", "page_idx": 8}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work presented a novel approach, the Long-range Meta-path Search through Progressive Sampling (LMSPS), to tackle the challenges of leveraging long-range dependencies in large-scale heterogeneous graphs, i.e., reducing computational costs while effectively utilizing information and addressing the over-smoothing issue. Based on our two observations, i.e., a few meta-paths dominate the performance, and certain meta-paths can have negative impact on performance, LMSPS introduced a progressive sampling search algorithm and a sampling evaluation strategy to automatically identify effective meta-paths, hence reducing the exponentially growing number of meta-paths to a manageable constant. Extensive experiments demonstrated the superiority of LMSPS over existing methods, particularly on sparse heterogeneous graphs that require long-range dependencies. By employing simple MLPs and complex meta-paths, LMSPS offers a novel direction that emphasizes datadependent semantic relationships rather than relying solely on sophisticated neural architectures. The reproducibility and limitations are discussed in Appendix F and Appendix G, respectively. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported by National Natural Science Foundation (62076105,U22B2017). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] U. Alon and E. Yahav. On the bottleneck of graph neural networks and its practical implications. In 9th International Conference on Learning Representations, ICLR, 2021.   \n[2] G. Anandalingam and T. L. Friesz. Hierarchical Optimization: An Introduction. Annals of Operations Research, pages 1\u201311, 1992.   \n[3] G. Bachmann, S. Anagnostidis, and T. Hofmann. Scaling mlps: A tale of inductive bias. In Advances in Neural Information Processing Systems, NeurIPS, 2023.   \n[4] F. M. Bianchi, D. Grattarola, and C. Alippi. Spectral clustering with graph neural networks for graph pooling. In International conference on machine learning, ICML, pages 874\u2013883. PMLR, 2020.   \n[5] Y. Chang, C. Chen, W. Hu, Z. Zheng, X. Zhou, and S. Chen. MEGNN: Meta-path Extracted Graph Neural Network for Heterogeneous Graph Representation Learning. Knowledge-Based Systems, page 107611, 2022.   \n[6] W. Chiang, X. Liu, S. Si, Y. Li, S. Bengio, and C. Hsieh. Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks. In KDD \u201919: In Proceedings of the 25th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 257\u2013266, 2019.   \n[7] B. Colson, P. Marcotte, and G. Savard. An Overview of Bilevel Optimization. Annals of Operations Research, pages 235\u2013256, 2007.   \n[8] Y. Ding, Q. Yao, H. Zhao, and T. Zhang. DiffMG: Differentiable Meta Graph Search for Heterogeneous Graph Neural Networks. In KDD \u201921: In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 279\u2013288, 2021.   \n[9] X. Dong and Y. Yang. Searching for a robust neural architecture in four gpu hours. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, ICCV, pages 1761\u20131770, 2019.   \n[10] P. Erridge. The pareto principle. British Dental Journal, 201(7):419\u2013419, 2006.   \n[11] X. Fu, J. Zhang, Z. Meng, and I. King. MAGNN: Metapath Aggregated Graph Neural Network for Heterogeneous Graph Embedding. In Proceedings of the ACM Web Conference, WWW, pages 2331\u20132341, 2020.   \n[12] X. Glorot and Y. Bengio. Understanding the Difficulty of Training Deep Feedforward Neural Networks. In Proceedings of the Thirteenth International Conference on Artificial Intelligence and Statistics, AISTATS, pages 249\u2013256, 2010.   \n[13] Z. Guo, X. Zhang, H. Mu, W. Heng, Z. Liu, Y. Wei, and J. Sun. Single Path One-Shot Neural Architecture Search with Uniform Sampling. In European Conference on Computer Vision, ECCV, pages 544\u2013560, 2020.   \n[14] W. Hamilton, Z. Ying, and J. Leskovec. Inductive representation learning on large graphs. Advances in neural information processing systems, NeurIPS, 30, 2017.   \n[15] Z. Han, F. Xu, J. Shi, Y. Shang, H. Ma, P. Hui, and Y. Li. Genetic Meta-Structure Search for Recommendation on Heterogeneous Information Network. In CIKM \u201920: The 29th ACM International Conference on Information and Knowledge Management, pages 455\u2013464, 2020.   \n[16] X. He, B. Hooi, T. Laurent, A. Perold, Y. LeCun, and X. Bresson. A generalization of vit/mlpmixer to graphs. In International Conference on Machine Learning, ICML, volume 202, pages 12724\u201312745, 2023.   \n[17] X. He, B. Hooi, T. Laurent, A. Perold, Y. LeCun, and X. Bresson. A generalization of vit/mlpmixer to graphs. In International conference on machine learning, ICML, pages 12724\u201312745. PMLR, 2023.   \n[18] H. Hong, H. Guo, Y. Lin, X. Yang, Z. Li, and J. Ye. An Attention-based Graph Neural Network for Heterogeneous Structural Learning. In Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, pages 4132\u20134139, 2020.   \n[19] W. Hu, M. Fey, M. Zitnik, Y. Dong, H. Ren, B. Liu, M. Catasta, and J. Leskovec. Open graph benchmark: Datasets for machine learning on graphs. Advances in Neural Information Processing Systems, NeurIPS, 33:22118\u201322133, 2020.   \n[20] W. Hu, M. Fey, H. Ren, M. Nakata, Y. Dong, and J. Leskovec. OGB-LSC: A Large-Scale Challenge for Machine Learning on Graphs. In Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks, 2021.   \n[21] Z. Hu, Y. Dong, K. Wang, and Y. Sun. Heterogeneous Graph Transformer. In Proceedings of the ACM Web Conference, WWW, pages 2704\u20132710, 2020.   \n[22] Q. Huang, H. He, A. Singh, S. Lim, and A. R. Benson. Combining label propagation and simple models out-performs graph neural networks. In 9th International Conference on Learning Representations, ICLR 2021, Virtual Event, Austria, May 3-7, 2021, 2021.   \n[23] H. Ji, X. Wang, C. Shi, B. Wang, and S. Y. Philip. Heterogeneous Graph Propagation Network. IEEE Transactions on Knowledge and Data Engineering, pages 521\u2013532, 2021.   \n[24] N. Keriven. Not too little, not too much: a theoretical analysis of graph (over) smoothing. Advances in Neural Information Processing Systems, NeurIPS, 35:2268\u20132281, 2022.   \n[25] D. P. Kingma and J. Ba. Adam: A Method for Stochastic Optimization. In Y. Bengio and Y. LeCun, editors, International Conference on Learning Representations, ICLR, 2015.   \n[26] T. N. Kipf and M. Welling. Semi-supervised classification with graph convolutional networks. In International Conference on Learning Representation, ICLR, 2017.   \n[27] C. Li, H. Xu, and K. He. Differentiable Meta Multigraph Search with Partial Message Propagation on Heterogeneous Information Networks. Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, 2023.   \n[28] G. Li, M. Muller, A. Thabet, and B. Ghanem. Deepgcns: Can gcns go as deep as cnns? In Proceedings of the IEEE/CVF international conference on computer vision, ICCV, pages 9267\u20139276, 2019.   \n[29] J. Li, H. Peng, Y. Cao, Y. Dou, H. Zhang, S. Y. Philip, and L. He. Higher-order Attributeenhancing Heterogeneous Graph Neural Networks. IEEE Transactions on Knowledge and Data Engineering, pages 560\u2013574, 2021.   \n[30] Q. Li, Z. Han, and X.-M. Wu. Deeper Insights Into Graph Convolutional Networks for Semisupervised Learning. In Proceedings of the AAAI conference on artificial intelligence, AAAI, 2018.   \n[31] Y. Li, Y. Jin, G. Song, Z. Zhu, C. Shi, and Y. Wang. GraphMSE: Efficient Meta-path Selection in Semantically Aligned Feature Space for Graph Neural Networks. In Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, pages 4206\u20134214, 2021.   \n[32] H. Liu, K. Simonyan, and Y. Yang. DARTS: differentiable architecture search. In 7th International Conference on Learning Representations, ICLR, 2019.   \n[33] H. Liu, K. Simonyan, and Y. Yang. DARTS: Architecture Search. In 7th International Conference on Learning Representations, ICLR, 2019.   \n[34] Q. Lv, M. Ding, Q. Liu, Y. Chen, W. Feng, S. He, C. Zhou, J. Jiang, Y. Dong, and J. Tang. Are We Really Making Much Progress? Revisiting, Benchmarking and Refining Heterogeneous Graph Neural Networks. In KDD \u201921: In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 1150\u20131160, 2021.   \n[35] C. J. Maddison, A. Mnih, and Y. W. Teh. The concrete distribution: A continuous relaxation of discrete random variables. arXiv preprint arXiv:1611.00712, 2016.   \n[36] Q. Mao, Z. Liu, C. Liu, and J. Sun. Hinormer: Representation learning on heterogeneous information networks with graph transformer. In Proceedings of the ACM Web Conference, WWW, pages 599\u2013610, 2023.   \n[37] W. Ning, R. Cheng, J. Shen, N. A. H. Haldar, B. Kao, X. Yan, N. Huo, W. K. Lam, T. Li, and B. Tang. Automatic meta-path discovery for effective graph-based recommendation. In Proceedings of the 31st ACM International Conference on Information & Knowledge Management, pages 1563\u20131572, 2022.   \n[38] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, T. Killeen, Z. Lin, N. Gimelshein, L. Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in Neural Information Processing Systems, NeurIPS, 32, 2019.   \n[39] E. Real, S. Moore, A. Selle, S. Saxena, Y. L. Suematsu, J. Tan, Q. V. Le, and A. Kurakin. Large-scale evolution of image classifiers. In International conference on machine learning, ICML, pages 2902\u20132911, 2017.   \n[40] R. Sanders. The pareto principle: its use and abuse. Journal of Services Marketing, 1(2):37\u201340, 1987.   \n[41] M. Schlichtkrull, T. N. Kipf, P. Bloem, R. v. d. Berg, I. Titov, and M. Welling. Modeling Relational Data with Graph Convolutional Networks. In European semantic web conference, pages 593\u2013607, 2018.   \n[42] C. Sun, H. Gu, and J. Hu. Scalable and Adaptive Graph Neural Networks with Self-labelenhanced Training. arXiv preprint arXiv:2104.09376, 2021.   \n[43] Y. Sun and J. Han. Mining Heterogeneous Information Networks: A Structural Analysis Approach. SIGKDD Explor., pages 20\u201328, 2012.   \n[44] Y. Sun, J. Han, X. Yan, P. S. Yu, and T. Wu. PathSim: Meta Path-Based Top-K Similarity Search in Heterogeneous Information Networks. Proc. VLDB Endow., pages 992\u20131003, 2011.   \n[45] I. O. Tolstikhin, N. Houlsby, A. Kolesnikov, L. Beyer, X. Zhai, T. Unterthiner, J. Yung, A. Steiner, D. Keysers, J. Uszkoreit, et al. Mlp-mixer: An all-mlp architecture for vision. Advances in Neural Information Processing Systems, NeurIPS, 34:24261\u201324272, 2021.   \n[46] P. Velickovic, G. Cucurull, A. Casanova, A. Romero, P. Li\u00f2, and Y. Bengio. Graph attention networks. In 6th International Conference on Learning Representations, ICLR 2018, Vancouver, BC, Canada, April 30 - May 3, 2018, Conference Track Proceedings, 2018.   \n[47] R. Wang, M. Cheng, X. Chen, X. Tang, and C.-J. Hsieh. Rethinking architecture selection in differentiable nas. In International Conference on Learning Representation, ICLR, 2021.   \n[48] X. Wang, H. Ji, C. Shi, B. Wang, Y. Ye, P. Cui, and P. S. Yu. Heterogeneous Graph Attention Network. In Proceedings of the ACM Web Conference, WWW, pages 2022\u20132032, 2019.   \n[49] L. Xie and A. L. Yuille. Genetic CNN. In IEEE International Conference on Computer Vision, ICCV, pages 1388\u20131397, 2017.   \n[50] S. Xie, H. Zheng, C. Liu, and L. Lin. SNAS: Stochastic Neural Architecture Search. In 7th International Conference on Learning Representations, ICLR, 2019.   \n[51] C. Xue, X. Wang, J. Yan, Y. Hu, X. Yang, and K. Sun. Rethinking Bi-Level Optimization in Neural Architecture Search: A Gibbs Sampling Perspective. In Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, pages 10551\u201310559, 2021.   \n[52] X. Yang, M. Yan, S. Pan, X. Ye, and D. Fan. Simple and Efficient Heterogeneous Graph Neural Network. Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, 2023.   \n[53] Q. Yao, J. Xu, W.-W. Tu, and Z. Zhu. Efficient Neural Architecture Search via Proximal Iterations. In Proceedings of the AAAI Conference on Artificial Intelligence, AAAI, 2020.   \n[54] C. Ying, T. Cai, S. Luo, S. Zheng, G. Ke, D. He, Y. Shen, and T.-Y. Liu. Do transformers really perform badly for graph representation? Advances in Neural Information Processing Systems, NeurIPS, 34:28877\u201328888, 2021.   \n[55] L. Yu, J. Shen, J. Li, and A. Lerer. Scalable Graph Neural Networks for Heterogeneous Graphs. arXiv preprint arXiv:2011.09679, 2020.   \n[56] S. Yun, M. Jeong, R. Kim, J. Kang, and H. J. Kim. Graph Transformer Networks. In Advances in Neural Information Processing Systems, NeurIPS, pages 11960\u201311970, 2019.   \n[57] C. Zhang, D. Song, C. Huang, A. Swami, and N. V. Chawla. Heterogeneous Graph Neural Network. In KDD \u201919: In Proceedings of the 25th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 793\u2013803, 2019.   \n[58] W. Zhang, Z. Yin, Z. Sheng, Y. Li, W. Ouyang, X. Li, Y. Tao, Z. Yang, and B. Cui. Graph Attention Multi-layer Perceptron. In KDD \u201922: In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, page 4560\u20134570, 2022.   \n[59] T. Zhao, C. Yang, Y. Li, Q. Gan, Z. Wang, F. Liang, H. Zhao, Y. Shao, X. Wang, and C. Shi. Space4hgnn: a novel, modularized and reproducible platform to evaluate heterogeneous graph neural network. In Proceedings of the 45th International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 2776\u20132789, 2022.   \n[60] Z. Zhong, C.-T. Li, and J. Pang. Reinforcement learning enhanced heterogeneous graph neural network. arXiv preprint arXiv:2010.13735, 2020.   \n[61] D. Zhou, O. Bousquet, T. N. Lal, J. Weston, and B. Sch\u00f6lkopf. Learning with local and global consistency. In Advances in Neural Information Processing Systems, NeurIPS, pages 321\u2013328, 2003.   \n[62] Z. Zhou, J. Shi, R. Yang, Y. Zou, and Q. Li. Slotgat: slot-based message passing for heterogeneous graphs. In International Conference on Machine Learning, ICML, pages 42644\u201342657. PMLR, 2023.   \n[63] S. Zhu, C. Zhou, S. Pan, X. Zhu, and B. Wang. Relation Structure-aware Heterogeneous Graph Neural Network. In 2019 IEEE International Conference on Data Mining, ICDM, pages 1534\u20131539, 2019.   \n[64] X. J. Zhu. Semi-supervised learning literature survey. 2005. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "Appendix / Supplemental Material ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In the Appendix, we provide additional details and results not included in the main text due to space limitations. First, we provide the details of datasets, tasks, baselines, and parameter settings for our experiments. Secondly, we show the search algorithm of LMSPS and conduct theoretical analysis about the reasonableness of sampling search and analyze the time complexity. Thirdly, for interpretability, the searched meta-paths are listed and analyzed. Fourthly, we explore the training efficiency and search convergence of LMSPS and compare LMSPS with top method combinations on OGBN-MAG leaderboard. Hyperparameter studies are also conducted. Finally, we discuss the reproducibility and limitations of our research work. ", "page_idx": 13}, {"type": "text", "text": "A Dataset and Task ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Dataset Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We evaluate our method on four widely-used heterogeneous graphs including DBLP, IMDB, ACM, and Freebase from HGB benchmark [34] and the famous large-scale dataset OGBN-MAG from OGB challenge [20]. The datasets from HGB follow a transductive setting, where all edges are available during training, and target type nodes are divided into $24\\%$ for training, $6\\%$ for validation, and $70\\%$ for testing. For the OGBN-MAG dataset, we use the official data partition, where papers published before 2018, in 2018, and since 2019 are nodes for training, validation, and testing, respectively. In addition, we construct four sparse datasets to evaluate the performance of LMSPS by reducing the maximum in-degree related to edge type in OGBN-MAG. The four sparse datasets have the same number of nodes with OGBN-MAG. Follow the convention [34, 52, 36], we show the details of all datasets in Table 7. ", "page_idx": 13}, {"type": "text", "text": "A.2 Node Classification Tasks ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Following the convention [34, 27, 52, 36], we concentrate on semi-supervised node classification under the transductive setting and leave other downstream tasks related to heterogeneous graph representation learning as future work. Each dataset contains a target node type, and our task is to learn to predict the labels of vertices of this target node type. All the datasets provide fixed data splitting (into training, validation, and test sets) for node classification tasks. ", "page_idx": 13}, {"type": "text", "text": "A.3 Searching and Training Objective ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "An MLP layer is appended after the main module of LMSPS, which reduces the dimension of node-level representations of a heterogeneous graph to the number of classes: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\bar{Y}=\\operatorname{softmax}(Z\\omega_{o}),\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\omega_{o}\\in\\mathbb{R}^{d_{o}\\times N}$ is the output weight matrix, $d_{o}$ is the dimension of output node representations, and $N$ is the number of classes. Then, the cross-entropy loss is used over all labeled nodes: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathcal{L}=-\\sum_{v\\in\\mathcal{V}_{L}}\\sum_{n=1}^{N}{y_{v}[n]\\log{\\bar{y}_{v}[n]}},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/fc939c51a67774fa1c94686c48d2c26618daa39e2d9116255ecbaa16ce9c34d7.jpg", "table_caption": ["Table 7: Statistics of the datasets. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "where $\\mathcal{V}_{L}$ denotes the set of labeled nodes, $\\pmb{y}_{v}$ is a one-hot vector indicating the label of node $v$ , and $\\Bar{\\b{y}}_{v}$ is the predicted label for the corresponding node in $\\bar{Y}$ . In the search stage, $\\mathcal{V}_{L}$ is the training set when updating $\\omega$ and the validation set when updating $_{\\alpha}$ . In the training stage, $\\mathcal{V}_{L}$ is the training set, and $\\omega$ is reinitialized and trained. ", "page_idx": 14}, {"type": "text", "text": "B Baselines and Parameter Settings ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "B.1 Baselines ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We compare LMSPS with a large number of HGNN baselines, including MLP [19], GraphSAGE [14], RGCN [41], HAN [48], GTN [56], RSHN [63], HetGNN [57], MAGNN [11], HetSANN [18], GCN [26], GAT [46], , Simple-HGN [34], HGT [21], GraphMSE [31], SlotGAT [62], DiffMG [8], PMMM [27], HINormer [36], NARS [55], space4HGNN [59], SeHGNN [52]. GEMS [15] and RMS-HRec [37] are ignored because they are designed for recommendation tasks. RL-HGNN [60] is omitted due to a lack of source code. ", "page_idx": 14}, {"type": "text", "text": "Note that most of these baselines encounter out-of-memory (OOM) issues when dealing with large datasets. However, there are exceptions among them, including MLP, GraphSAGE, HGT, RGCN, NARS, and SeHGNN. The results of MLP and GraphSAGE come from the OGBN-MAG leaderboard. MLP [19] is famous for its lightweight and GraphSAGE [14] uses a neighbor sampling strategy, so they can handle large-scale datasets. HGT is designed with a graph sampling strategy, making it well-suited for managing large datasets. As for RGCN, while the original version does present OOM issues with large datasets, it is often used as a baseline for large-scale HGNNs [55]. NARS [55] and SeHGNN [52] are metapath-based and pre-computation-based HGNNs, allowing them to handle large-scale datasets. ", "page_idx": 14}, {"type": "text", "text": "It\u2019s worth noting that in the original paper, SeHGNN refers to the full version incorporating label propagation techniques. For clarity and consistency in our study, we have adjusted the terminology: we refer to the version without label propagation as SeHGNN and the version with label propagation as SeHGNN+LP. Note that label propagation is a general technique [64, 61, 22] that is compatible with most GNNs and is not used in the results of LMSPS and all other baselines in Table 1. Therefore, it is considered only in Appendix E.2, where we demonstrate the successful integration of our model with other techniques. ", "page_idx": 14}, {"type": "text", "text": "B.2 Training Settings ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For training, we follow the settings of the HGB benchmark [34] and utilize the performance improvement on the validation set as a guide to determine whether the model has been improved. Specifically, if we observe a performance boost on the validation set during training, we update the final model parameters accordingly. Additionally, we adopt the early stopping strategy employed by the HGB benchmark: if no performance improvement on the validation set is observed within a specific count (referred to as patience), the training will be stopped early before reaching the maximum epochs. This approach helps prevent overfitting while also enhancing the computational efficiency of our model training. Following the setting of HGB [34] and OGB [20], we train our model 5 times for HGB and 10 times for OGB with different random seeds and report the mean performance and standard deviation, respectively. We use Pytorch [38] to run all experiments on one Tesla V100 GPU with 16GB GPU memory. ", "page_idx": 14}, {"type": "text", "text": "B.3 Parameter Settings for Baselines ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For models such as RGCN, HAN, GTN, RSHN, HetGNN, MAGNN, HetSANN, HGT, GCN, GAT, Simple-HGN, and SeHGNN, the literature [34, 52] provides tuned parameter settings along with corresponding performance on small datasets, namely DBLP, IMDB, ACM, and Freebase. Therefore, we utilize these tuned parameter settings for these models on small datasets and utilize the reported performance. ", "page_idx": 14}, {"type": "text", "text": "Conversely, in cases where official results are unavailable (such as NARS on small datasets), or where the experimental settings differ, we employ the official or benchmark implementations $3\\ 4\\ 5\\ 6\\ 7\\ 8$ $9\\;\\;10\\;\\;11$ of the baseline models. We meticulously fine-tune their hyperparameters to the best of our capabilities. In instances involving hyperparameter analysis, such as in Figure 3, we only modify the relevant hyperparameters to ensure a fair comparison. ", "page_idx": 15}, {"type": "text", "text": "B.4 Parameter Settings for LMSPS ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We set the number of selected meta-paths $M=30$ for all datasets. The final search space $V=60$ . The maximum hop is 6 for ogbn-mag, DBLP, 5 for IMDB, ACM, and 3 for Freebase. All $K$ architecture parameters $\\alpha_{1},\\alpha_{2},\\cdots,\\alpha_{K}$ are initialized as 1s. For searching in the super-net, we train for 200 epochs. To train the target-net, we use an early stop mechanism based on the validation performance to promise full training. A two-layer MLP is adopted for each meta-path in the feature projection step, and the hidden size is 512. All network weights are initialized by the Xavier uniform distribution [12] and are optimized with Adam [25] during training. In the search stage, $\\lambda$ is 1 during the first 20 epochs for warmup and decreases to 0 linearly. $\\tau$ linearly decays with the number of epochs from 8 to 4. The learning rate is 0.001 for all search stages and HGB training stage, and 0.003 for OGBN-MAG training stage. The weight decay is always 0. For the initial search space, we simply preset the maximum hop and use all target-node-related meta-paths no more than this maximum hop. ", "page_idx": 15}, {"type": "text", "text": "B.5 Evaluation Metrics ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "To assess the performance of the models, we employ evaluation metrics consistent with those employed in baseline models. The metrics are chosen as follows. For small datasets, DBLP, IMDB, ACM, and Freebase, we adhere to the evaluation standards established by the HGB benchmark [34]. The metrics reported for these datasets are Macro-F1 and Micro-F1 scores, which evaluate the classification performance. For the OGBN-MAG dataset, evaluation follows the methodology outlined in NARS [55] and SeHGNN [52], where the classification accuracy score is reported for this dataset. ", "page_idx": 15}, {"type": "text", "text": "C Algorithm ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "C.1 The Search Algorithm ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Our search stage aims to discover the most effective meta-path set from all target-node-related meta-paths, severely challenging the efficiency of searching. Take OGBN-MAG as an example. The number of target-node-related meta-paths $K$ is 226 under the maximum hop 6, and we need to find the most effective meta-path set with size 30. Because different meta-paths could be noisy or redundant tcoa lecauclhat eotdh ienr,d teoppe-n3d0e nmtleyt.a -Tphatehrse faorree ,n toht en teocteasl snaruilmy btehre  oof pptiomssailb sleo lumtietoan- pwahthe ns etthse iirs $C_{226}^{\\bar{3}0}\\approx10^{37}$ Such a large search space is hard to solve efficiently by traditional RL-based algorithms [60, 37] or evolution-based algorithms [49, 39]. ", "page_idx": 15}, {"type": "text", "text": "To overcome this challenge, our LMSPS first uses a progressive sample algorithm to shrink the search space size from 226 to 60, then utilizes a sampling evaluation strategy to discover the best meta-path set with the lowest validation loss, which is more effective than architecture parameters [47]. In each iteration, we only uniformly sample meta-paths $M$ from the whole search space for parameter updates, so the search cost is relevant to $M$ , which is a predefined small number, rather than $K$ . Because the search stage has many iterations and the initial values of architecture parameters are ", "page_idx": 15}, {"type": "text", "text": "Input: meta-path sets $\\mathbb{P}=\\{P_{1},\\cdots,P_{K}\\}$ ; number of sampling meta-paths $M$ ; number of training iterations $T$ ; number of sampling evaluation $E$ ", "page_idx": 16}, {"type": "text", "text": "Parameter: Network weights $\\omega$ in $\\mathrm{MLP}_{k}$ for feature projection and MLP for downstream tasks; architecture parameters $\\pmb{\\alpha}=\\{\\alpha_{1},\\cdots,\\alpha_{K}\\}$ ", "page_idx": 16}, {"type": "text", "text": "Output: The index set of selected meta-paths $\\mathbb{S}_{M}$   \n1: $\\%$ Neighbor aggregation   \n2: Calculate neighbor aggregation of raw features for each $P_{k}\\in\\mathbb{P}$ based on Equation 1   \n3: while $t<T$ do   \n4: $\\%$ Path strength   \n5: Calculate the path strength of all meta-paths based on Equation 2   \n6: $\\%$ Dynamic search space   \n7: Calculate the current search space $\\mathbb{S}_{C}$ based on Equations 3   \n8: $\\%$ Sampling   \n9: Determine the set of indexes of sampled meta-paths $\\mathbb{S}$ based on Equation 4   \n10: $\\%$ Semantic fusion   \n11: Fused the semantic information of the sampled meta-paths based on Equation 4   \n12: $\\%$ Parameters updation   \n13: Update weights $\\omega$ by $\\nabla_{\\omega}\\mathcal{L}_{t r a i n}(\\omega,\\alpha)$   \n14: Update parameters $_{\\alpha}$ by $\\nabla_{\\alpha}\\mathcal{L}_{v a l}(\\omega,\\alpha)$   \n15: end while   \n16: $\\%$ Evaluation   \n17: while $e<E$ do   \n18: Randomly sample $M$ meta-paths from $\\mathbb{S}_{C}$ as $\\bar{\\mathbb S}$ based on Equation 6   \n19: Calculate $\\mathcal{L}_{v a l}(\\bar{\\mathbb{S}})$ of the sampled meta-paths   \n20: end while   \n21: Select the best meta-path set $\\mathbb{S}_{M}\\gets\\mathrm{argmin}_{\\bar{\\mathbb{S}}}\\,\\mathcal{L}_{v a l}(\\bar{\\mathbb{S}})$   \n22: return $\\mathbb{S}_{M}$ ", "page_idx": 16}, {"type": "text", "text": "the same, all architecture parameters will be updated multiple times and the relative importance can be learned during training, making the total search cost similar to training a single HGNN once. Specifically, for OGBN-MAG, LMSPS can finish searching in two hours. ", "page_idx": 16}, {"type": "text", "text": "Except for efficiency, LMSPS can also overcome the over-squashing issue [1] when utilizing longrange dependency. Over-squashing means the distortion of messages being propagated from distant nodes, which has been heuristically attributed to graph bottlenecks where the number of $l$ -hop neighbors grows rapidly with $l$ . In LMSPS, we set the number of searched meta-paths $M=30$ for all datasets, which is independent of $l$ . Because the exponential meta-paths in metapath-based methods correspond to exponential receptive fields in metapath-free methods, the constant $M$ means approximately constant $l$ -hop neighbors, i.e., LMSPS selectively aggregate effective neighbors for each target-net. Therefore, the over-squashing issue is overcome. ", "page_idx": 16}, {"type": "text", "text": "We have introduced the components of LMSPS in detail in the main text. LMSPS first employs a progressive sample algorithm to narrow the search space from $K$ to $V$ , then utilizes sample evaluation to filter out the best meta-path set with $M$ meta-paths. $V$ is a parameter to trade off the importance of progressive sampling search and sampling evaluation. When $V$ is too large, we need to repeat the sampling evaluation many more times, which will decrease the efficiency. When $V$ is too small, some effective meta-paths may be dropped too early. So, we simply set $V\\,=\\,2M$ . Generally, $K\\gg M$ under a large maximum hop. For a small maximum hop, when $K\\le M$ , the search stage is unnecessary because we can directly use all target-node-related meta-paths; when $K\\le2M$ , the progressive sampling algorithm is unnecessary because the search space is small enough. When $K>2M$ , we show the overall search algorithm in Algorithm 1. ", "page_idx": 16}, {"type": "text", "text": "C.2 Theoretical analysis of the reasonableness of sampling search ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Definition 1. Zero-order condition: Given two high-dimensional random variables, $\\mathbf{y}=\\mathbf{f}(\\mathbf{x})\\in$ $\\mathbf{R}^{\\mathbf{M}\\times\\mathbf{d_{1}}}$ and $\\mathbf{z}=\\mathbf{g}(\\mathbf{x})\\in\\mathbf{R^{M\\timesd_{1}}}$ , the zero-order condition is satisfied $i f|\\mathbf{y}-\\mathbf{z}|_{2}\\leq\\epsilon$ for any valid sample $\\mathbf{x}\\in\\mathbf{R}^{\\mathbf{N}\\times\\mathbf{d}}$ , where $\\epsilon$ is a small positive constant. ", "page_idx": 16}, {"type": "text", "text": "Table 8: Time complexity comparison of every training epoch. $\\dagger$ means time complexity under small-scale datasets and full-batch training. ", "page_idx": 17}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/755e4ede33d7686c2eda53d578f9eada1ce297b0dcf0936efa083de0c5f74552.jpg", "table_caption": [], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "Lemma C.1. Let m represent the maximum number of activatable paths, and assume each pair of operations satisfies the zero-order condition. We can approximate all $2^{\\mathbf{m}}$ combinations using m types of expectations and variances. ", "page_idx": 17}, {"type": "text", "text": "Lemma C.1 assures us that we can approximate all $2^{\\mathbf{m}}$ combinations by multiple times sampling.   \nThe proof is given as follows. ", "page_idx": 17}, {"type": "text", "text": "Let $\\mathbf{y}_{p_{\\mathbf{y}}(\\mathbf{y})}=f(\\mathbf{x}),\\mathbf{z}_{p_{\\mathbf{z}}(\\mathbf{z})}=g(\\mathbf{x}),\\mathbf{x}\\sim p_{\\mathbf{x}}(\\mathbf{x}).$ . For the case $m=1$ , the expectation of $\\mathbf{y}$ and ${\\bf z}$ can be written respectively as: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\mathbb{E}[{\\mathbf{y}}]=\\mathbb{E}[f\\left({\\mathbf{x}}\\right)]=\\int p_{\\mathbf{x}}(\\mathbf{x})f(\\mathbf{x})\\mathrm{d}\\,\\mathbf{x}}\\\\ {\\displaystyle\\mathbb{E}[\\mathbf{z}]=\\mathbb{E}[g\\left(\\mathbf{x}\\right)]=\\int p_{\\mathbf{x}}(\\mathbf{x})g(\\mathbf{x})\\mathrm{d}\\,\\mathbf{x}}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "According to the zero-order condition, we have $f(\\mathbf{x})\\approx g(\\mathbf{x})$ . And $p(\\mathbf{x})$ is same for both $\\mathbf{y}$ and ${\\bf z}$ , so $\\mathbb{E}[\\mathbf{y}]\\approx\\bar{\\mathbb{E}[\\mathbf{z}]}$ . ", "page_idx": 17}, {"type": "text", "text": "Now we prove $V a r[\\mathbf{y}]\\approx V a r[\\mathbf{z}]$ . Note that $V a r[\\mathbf{y}]=\\mathbb{E}\\left[\\mathbf{y}^{2}\\right]-\\left(\\mathbb{E}[\\mathbf{y}]\\right)^{2}$ and $V a r[\\mathbf{z}]=\\mathbb{E}\\left[\\mathbf{z}^{2}\\right]\\,-$ $\\left(\\mathbb{E}[\\mathbf{z}]\\right)^{2}$ , thus we only need to prove $\\mathbb{E}\\left[\\mathbf{y}^{2}\\right]\\approx\\mathbb{E}\\left[\\mathbf{z}^{2}\\right]$ . It can be similarly proved as follows: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\mathbb{E}\\left[{\\bf y}^{2}\\right]=\\int p_{\\bf y}({\\bf y}){\\bf y}^{2}\\mathrm{d}{\\bf y}=\\int p_{\\bf x}({\\bf x})f^{2}({\\bf x})\\mathrm{d}{\\bf x}}\\ ~}\\\\ {{\\displaystyle\\mathbb{E}\\left[{\\bf z}^{2}\\right]=\\int p_{\\bf z}({\\bf z}){\\bf z}^{2}\\mathrm{d}{\\bf z}=\\int p_{\\bf x}({\\bf x})g^{2}({\\bf x})\\mathrm{d}{\\bf x}}\\ ~}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "According to the zero-order condition, we have $V a r[\\mathbf{y}]\\approx V a r[\\mathbf{z}]$ . ", "page_idx": 17}, {"type": "text", "text": "For the case of $m=2$ , when the two paths are both selected, the output becomes $\\mathbf{y}+\\mathbf{z}$ , its expectation can be written as: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\mathbf{y}+\\mathbf{z}]=\\mathbb{E}[\\mathbf{y}]+\\mathbb{E}[\\mathbf{z}]\\approx2\\mathbb{E}[\\mathbf{y}]\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "And the variance of $\\mathbf{y}+\\mathbf{z}$ is, ", "page_idx": 17}, {"type": "equation", "text": "$$\nV a r[{\\bf y}+{\\bf z}]\\approx V a r[2{\\bf y}]=4V a r[{\\bf y}]\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Therefore, there are two kinds of expectations and variances: $\\mathbb{E}[\\mathbf{y}]$ and $V a r[\\mathbf{y}]$ for $\\{\\mathbf{y},\\mathbf{z}\\}$ , and $2\\mathbb{E}[\\mathbf{y}]$ and $4V a r[\\mathbf{y}]$ for $\\{\\mathbf{y}+\\mathbf{z}\\}$ . Similarly, in the case where $m\\in[\\bar{1},n]$ , there will be $m$ kinds of expectations and variances. ", "page_idx": 17}, {"type": "text", "text": "C.3 Time Complexity Analysis ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Following the convention [6, 52], we compare the time complexity of LMSPS with HAN [48], Simple-HGN [34], and SeHGNN [52] under mini-batch training with the total $N$ target nodes. All methods employ $l$ -hop neighborhood. For simplicity, we assume that the number of features is fixed to $F$ for all layers. The average degree of each node is $^{r d}$ , where $r$ is the number of edge types and $d$ is the number of edges connected to the node for each edge type. The complexity analysis is summarized in Table 8. Because HAN and Simple-HGN require neighbor aggregation during training, and the number of neighbors grows exponentially with hops. So, they have neighbor aggregation costs of $O((r d)^{l})$ . SeHGNN employs a pre-processing step to avoid the training cost of neighbor aggregation. However, the exponential meta-paths cause SeHGNN to suffer from $O(r^{l})$ costs in semantic aggregation. Unlike the above methods, LMSPS samples $M$ meta-paths in each iteration of the search stage and employs $M$ effective meta-paths in the training stage to avoid exponential costs. Generally, we have $\\bar{O((r d)^{l})}\\gg O(r^{l})=O(\\bar{K})\\gg O(M)$ when maximum hop $l$ is large. The time complexity of LMSPS is a constant when $N$ and $F$ are determined, which is the key point for utilizing long-range meta-paths. ", "page_idx": 17}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/9e133014e7acaf69dea9f69a4628fcd77d4f2ae28778bf839f8165a9e77e0841.jpg", "table_caption": ["Table 9: Meta-paths searched by LMSPS on different datasets. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "D Interpretability of Searched Meta-paths ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "We have conducted an extensive experimental study to validate the effectiveness of our searched meta-paths in the main text. Here, we illustrate the searched meta-paths of each dataset in Table 9. Because we discover many more meta-paths than traditional methods and most meta-paths are longer than traditional meta-paths, it is tough to interpret them one by one. So, we focus on the interpretability of meta-paths on large-scale obgn-mag dataset from the Open Graph Benchmark. The OGBN-MAG dataset is a heterogeneous graph composed of a subset of the Microsoft Academic Graph. It includes four different entity types: Papers (P), Authors (A), Institutions (I), and Fields of study (F), as well as four different directed relation types: Author $\\xrightarrow{\\mathrm{writes}}$ Paper, Paper $\\xrightarrow{\\mathrm{cites}}$ Paper, Author $\\xrightarrow{\\cdots+\\cdots+\\cdots+\\cdots+\\cdots}\\cdots$ Institution, and Paper\u2212h a\u2212s\u2212 a\u2212 t\u2212o\u2212pi\u2212c \u2212of\u2192Field. The target node is the paper, and the task is to predict each paper\u2019s venue (conference or journal). ", "page_idx": 18}, {"type": "text", "text": "Based on Table 9, the hop of effective meta-paths on obgn-mag ranges from 1 to 6, which means utilizing information from neighbors at different distances is important. Because long-range metapaths provide larger receptive fields, LMSPS shows stronger capability in utilizing heterogeneity compared to traditional metapath-based HGNNs. The source node type of 16 meta-paths is P, e.g., PFPFP $\\mathrm{\\DeltaP{\\leftarrow}F{\\leftarrow}P{\\leftarrow}F{\\leftarrow}P}$ ). It indicates that the neighborhood papers of the target paper are most significant for predicting its venue, which is consistent with reality: the citation relationship, co-author relationship, and co-topic relationship between papers are usually the most effective information. 12 meta-paths\u2019 source node type is F. It implies that the neighborhood fields of the target paper are also crucial in determining its venue, which is also consistent with reality. Because most conferences or journals focus on a few fixed fields, a paper\u2019s venue is highly related to its field. The source node type of 2 meta-paths is I. It means the neighborhood institution is not very important for predicting the paper\u2019s venue, which is reasonable because almost all institutions have a wide range of conference or journal options for publishing papers. No meta-path has source node type A. It means the neighborhood author is unimportant in determining the paper\u2019s venue, which is logical because each paper has multiple authors, and each author can consider different venues. So, it is difficult to determine the paper\u2019s venue based on its neighborhood authors. If using too much institution or author information to predict the paper\u2019s venue, it actually introduces much useless information, which can be viewed as a kind of noise in obgn-mag for predicting each paper\u2019s venue. ", "page_idx": 18}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/7d3004bc080171d17eeca2038b458732208b1dc65e137c9210104a1b321db0b0.jpg", "img_caption": ["Figure 4: Micro-F1 scores, time consumption, and parameters of various HGNNs on DBLP and ACM. GTN has a large time consumption and parameters. We ignore it for ease of illustration. "], "img_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/9cc1248496de1af57f72e4a2c419c10f83da7b88752665260cf032db12559944.jpg", "table_caption": ["Table 10: Performance of top mothod combinations on OGBN-MAG leaderboard. "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "We also provide some simple insights from the searced meta-paths of DBLP, IMDB, and ACM. In DBLP with target node type Author, the information from P (Paper) and A (Author) is slightly more important than that from T (Term) and V (Venue). In IMDB with target node type Movie, the importance of information of K (Keyword), M (Movie), A (Actor) and D (Director) gradually decreases. In ACM with target node type Paper, the importance of information of P (Paper), A (Author) and C (Conference) gradually decreases. For all datasets, the importance of node type is highly related to the target node type. ", "page_idx": 19}, {"type": "text", "text": "In addition, the hand-crafted meta-paths rely on intense expert knowledge, which is both laborious and data-dependent. In contrast, automatic meta-path search frees researchers from the understandthen-apply paradigm. In Table 9, LMSPS can search effective meta-paths without prior knowledge for various datasets, which is more valuable than manually-defined meta-paths. ", "page_idx": 19}, {"type": "text", "text": "E More Experiments ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "E.1 Comparison on Training Efficiency ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Following the convention [34, 52], we show the time cost and parameters of LMSPS and the advanced baselines on DBLP and ACM in Figure 4. We measure the average time consumption of one epoch for each model. The area of the circles represents the parameters. The hidden size is set to 512 and the maximum hop or layer is 6 for DBLP and 5 for ACM for all methods to test the training time and parameters under the same setting. Some methods perform quite poorly under the large maximum hop or layer. So we show the performance from Table 1 of the main text, which is the results under their best settings. Figure 4 shows that LMSPS has advantages in both training efficiency and performance. Our searched meta-paths are universal after searching once and can be applied to other metapath-based HGNNs based on Table 4. Because other metapath-based HGNNs don\u2019t include the time for discovering manual meta-paths, we also exclude our search time for discovering meta-paths in Figure 4. The search time is shown in Figure 3 (c) of the main text. ", "page_idx": 19}, {"type": "text", "text": "E.2 Comparison with Top Method Combinations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "The OGBN-MAG benchmark dataset is associated with a public leaderboard. In Table 10, we compare our method combination against top-performing approaches (method combinations) on the leaderboard. These methods integrate several general techniques, such as Label Propagation (LP), Multi-Stage Training (MS), and pre-trained Embeddings (Emb). By integrating LP and MS, $\\scriptstyle\\mathrm{LMSPS+LP+MS}$ outperforms $\\scriptstyle\\mathrm{SeHGNN+LP+MS}$ by a large margin. SeHGNN shows the results with extra embeddings as an enhancement. Though we cannot conduct a fair comparison with this trick due to the untouchability of its embedding file, LMSPS still outperforms their best result. ", "page_idx": 19}, {"type": "table", "img_path": "hbOWLtJNMK/tmp/444ace780348f2d41f1ba251d527bf359756090a2b62d61a6eba8ea0d53d86a2.jpg", "table_caption": ["Table 11: The performance of LMSPS under different searching epochs "], "table_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/514ebb1467345465841f9299b1e232ecb3e29864f0915e0993d86dc09d3819b2.jpg", "img_caption": ["Figure 5: Micro-F1 with respect to different hyper-parameter $M$ on DBLP, IMDB, and ACM. "], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "hbOWLtJNMK/tmp/604d47d4bcdbc5e14cc47f9a57b82fed350befb42681bdc2cb061a6012aff5cb.jpg", "img_caption": ["Figure 6: Micro-F1 scores with respect to different maximum hops on DBLP, IMDB, and ACM. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "E.3 Convergence of the Search Stage ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "As the search stage of LMSPS relies on sampling, we conduct experiments to explore the convergence of the search stage. Because the test set is unavailable in the search stage to avoid label leakage, we show the Micro-F1 scores of the validation set of DBLP, IMDB, ACM, Freebase and test accuracy of the validation set of OGBN-MAG under different searching epochs in Table 11. As we can see, LMSPS coverages during 100 to 180 epochs for all datasets. The main reason is that the search space size is progressively shrunk from $K$ to $2M$ under the progressive sampling algorithm. Most negative meta-paths have been removed from the search space in the second half of the search stage. ", "page_idx": 20}, {"type": "text", "text": "E.4 Hyperparameter Study ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "LMSPS randomly samples $M$ meta-paths at each epoch in the search stage and selects the top- $M$ meta-paths in the training stage. Here, we perform analysis on hyper-parameter $M$ on DBLP, IMDB, and ACM. Freebase and OGBN-MAG are ignored because they are relatively large and the experiments are time-consuming. As illustrated in Figure 5, the performance of LMSPS increases with the growth of $M$ when $M$ is small. In addition, the performance on DBLP and ACM slightly decreases when $M$ is larger than a certain threshold, indicating excessive meta-paths don\u2019t benefit performance for some datasets. For unity, we set $M=30$ for all datasets. ", "page_idx": 20}, {"type": "text", "text": "To observe the impact of different maximum hop values, we show the Micro-F1 of LMSPS with respect to different maximum hop values on DBLP, IMDB, and ACM in Figure 6. We can see LMSPS show the best performance when the maximum hop is 5 or 6. Additionally, the performance of ", "page_idx": 20}, {"type": "text", "text": "LMSPS does not always increase with the value of the maximum hop, and the best maximum hop depends on the dataset. ", "page_idx": 21}, {"type": "text", "text": "F Reproducibility Statement ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We have provided the details of datasets, tasks, baselines, and parameter settings in Appendix A and B and conducted the hyperparameter study in Appendix E.4. All reported results are the average of multiple experiments with standard deviations. We have included a pseudocode description of our method in Appendix C. The source code has been provided through an anonymized URL with clear commands on reproducing our results. ", "page_idx": 21}, {"type": "text", "text": "G Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "It is noteworthy that the performance of LMSPS does not always increase with the value of the maximum hop. For instance, based on Figure 3 (a), LMSPS can effectively utilize 12-hop meta-paths on DBLP with high performance and low cost. However, the optimal performance for LMSPS is observed when the maximum hop is 6. It can be attributed to the constraint of maintaining constant time complexity by setting the number of searched meta-paths to 30 for different maximum hop values. When the maximum hop value is 12, the number of target-node-related meta-paths exceeds 1400 (Figure 3 (a)). Searching for 30 effective meta-paths from such an extensive search space is notably challenging, despite LMSPS being the most effective method for meta-path search (as indicated in Table 3). The benefits of using longer meta-paths are outweighed by the drawbacks of the significantly more complex search space. So, the best maximum hop depends on the dataset and task and cannot be determined automatically. ", "page_idx": 21}, {"type": "text", "text": "Nevertheless, based on Table 8, the time complexity of LMSPS does not increase with the maximum hop. Consequently, it provides an effective solution for utilizing long-range dependency on heterogeneous graphs for possible applications on sparser real-world datasets. In Table 5, we conduct experiments on four constructed datasets based on OGBN-MAG to demonstrate that the advantages of utilizing long-range dependencies are more obvious for sparser large-scale heterogeneous graphs. For the constructed datasets, we carefully avoid inappropriate preference seed settings of randomly removing by limiting the maximum in-degree related to edge type. We expect sparser large-scale real heterogeneous datasets or more suitable tasks requiring long-range dependency to emerge in the future so we can fully explore our approach. ", "page_idx": 21}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We have provided cases, motivation, and also extensive experiments for verification to support our claim. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 22}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We have talked about the limitation of our work in Appendix G ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 22}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We have provided a theoretical analysis of the reasonableness of the sampling search in Appendix C.2. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 23}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have provided extensive experiments, results, descriptions, and also provided the code. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 23}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The code is provided in a URL in the Abstract. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 24}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The details of datasets, tasks, baselines, and parameter settings are shown in Appendix A and B. The hyperparameter study is shown in Appendix E.4 ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 24}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The mean and variance of the experimental results are reported. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We have provided that the computation resource is one Tesla V100 GPU with 16GB GPU memory. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 25}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We have read. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 25}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: Our work is specific to machine learning for heterogeneous graph node classification; therefore, it has limited possibility for a wide societal impact. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 25}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 26}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: Similarly, our work is specific to machine learning for heterogeneous graph node classification. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 26}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: All the data can be found publicly, and the code we provided has no constraints. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The URL of our code provides a detailed README to reproduce our results. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 27}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 27}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}]