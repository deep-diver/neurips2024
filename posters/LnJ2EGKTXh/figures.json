[{"figure_path": "LnJ2EGKTXh/figures/figures_1_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure provides a high-level overview of the ROBO-INSTRUCT framework, showing its main components and how they interact.  It visually demonstrates the process of generating and validating robot program instructions and code.  A key part is the comparison of ROBO-INSTRUCT with SELF-INSTRUCT, highlighting how ROBO-INSTRUCT improves instruction-program alignment and program validity through ROBOSIM and INSTALIGN.  The figure also includes a concrete example demonstrating a misalignment between an instruction and a program generated by SELF-INSTRUCT, illustrating how ROBOSIM detects and INSTALIGN corrects these errors.  Finally, it presents a bar chart comparing the performance (Pass@1) of various LLMs, showcasing the superior performance of the model fine-tuned using ROBO-INSTRUCT.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_4_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure presents a high-level overview of the ROBO-INSTRUCT framework, illustrating its key components: SELF-INSTRUCT for instruction and program generation, RoboSim for program validation and world state synthesis, and InstAlign for instruction-program alignment.  It also showcases a comparative example highlighting the misalignment often present in SELF-INSTRUCT outputs, contrasting an incorrect instruction-program pair with a corrected version. Finally, the chart visually compares the performance (Pass@1) of various LLMs, including the ROBO-INSTRUCT fine-tuned model, on the ROBOEVAL benchmark.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_5_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure provides a high-level overview of the ROBO-INSTRUCT framework, highlighting its key components: Self-Instruct for instruction and program generation, RoboSim for program validation and world state synthesis, and InstAlign for instruction-program alignment.  It uses a specific example to illustrate how misalignments between instructions and programs can occur when using Self-Instruct, and shows how RoboSim and InstAlign address these issues.  Finally, it presents a comparison of the Pass@1 accuracy (the percentage of times the top-ranked program is correct) for several LLMs, including the authors' ROBO-INSTRUCT model, demonstrating its performance advantage.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_7_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure presents a high-level overview of the ROBO-INSTRUCT framework, highlighting its main components: Self-Instruct, RoboSim, and InstAlign.  It visually depicts the process of generating and validating robot programs, emphasizing the dynamic world state synthesis in RoboSim and the instruction-program alignment in InstAlign.  An example showcases a misaligned instruction and program from Self-Instruct, contrasting it with a corrected version generated by Robo-Instruct.  Finally, it displays the pass@1 performance comparison of different Large Language Models (LLMs), including both proprietary and open-source models, on the ROBOEVAL benchmark, demonstrating the improved accuracy of ROBO-INSTRUCT.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_13_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure provides a high-level overview of the ROBO-INSTRUCT framework, showing its different components and their interactions.  It visually explains how the system generates training data by using SELF-INSTRUCT to generate instructions and programs, ROBOSIM to check for validity in a simulated robot environment, and INSTALIGN to refine the instructions. It also shows an example of how an invalid SELF-INSTRUCT instruction and program are handled, highlighting the process of alignment and correction. Finally, it presents a bar chart comparing the performance (Pass@1 metric) of various LLMs, including both open-source and proprietary models, on the ROBOEVAL benchmark, showcasing the effectiveness of ROBO-INSTRUCT in improving the performance of smaller LLMs.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_14_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure provides a high-level overview of the ROBO-INSTRUCT framework, which uses SELF-INSTRUCT to generate diverse robot program-instruction pairs.  ROBO-INSTRUCT enhances this by incorporating ROBOSIM for simulator-based checking and INSTALIGN for instruction-program alignment.  The figure also shows a concrete example illustrating how an invalid program and instruction generated by SELF-INSTRUCT are corrected by ROBO-INSTRUCT, highlighting its ability to improve instruction-program alignment and generate valid code.  Finally, it presents a comparison of the pass@1 accuracy for various LLMs (including both open-source and proprietary models) on the ROBOEVAL benchmark, demonstrating ROBO-INSTRUCT's performance gains.", "section": "1 Introduction"}, {"figure_path": "LnJ2EGKTXh/figures/figures_16_1.jpg", "caption": "Figure 1: High-Level Overview of ROBO-INSTRUCT. This figure also illustrates an example of an invalid SELF-INSTRUCT-generated instruction and program, as well as pass@1 results of different LLMs on ROBOEVAL.", "description": "This figure presents a high-level overview of the ROBO-INSTRUCT framework, which enhances the SELF-INSTRUCT method by adding ROBOSIM for program validation and INSTALIGN for instruction-program alignment.  It visually demonstrates the process, showing how an initial prompt leads to instruction and program generation.  A key part is highlighting an example of an invalid instruction and program produced by the SELF-INSTRUCT approach to illustrate the need for improvement. Finally, it displays a bar chart comparing the Pass@1 performance (accuracy of the top-1 generated program) of various large language models (LLMs), including both open-source and proprietary models, when tested on the ROBOEVAL benchmark. This comparison showcases the performance improvement achieved by fine-tuning a small open-weight LLM using the ROBO-INSTRUCT generated dataset.", "section": "1 Introduction"}]