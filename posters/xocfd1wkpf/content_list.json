[{"type": "text", "text": "Unified Lexical Representation for Interpretable Visual-Language Alignment ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Yifan Li1\u2217 Yikai Wang1\u2020 Yanwei $\\mathbf{Fu^{1\\ddag}}$ Dongyu $\\mathbf{R}\\mathbf{u}^{2}$ Zheng Zhang2 Tong He2\u2020 ", "page_idx": 0}, {"type": "text", "text": "1Fudan University 2 Amazon Web Services yifanli23@m.fudan.edu.cn, yi-kai.wang@outlook.com, yanweifu@fudan.edu.cn, {rudongyu, zhaz, htong}@amazon.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Visual-Language Alignment (VLA) has gained a lot of attention since CLIP\u2019s groundbreaking work. Although CLIP performs well, the typical direct latent feature alignment lacks clarity in its representation and similarity scores. On the other hand, lexical representation, a vector whose element represents the similarity between the sample and a word from the vocabulary, is a natural sparse representation and interpretable, providing exact matches for individual words. However, lexical representations are difficult to learn due to no ground-truth supervision and false-discovery issues, and thus requires complex design to train effectively. In this paper, we introduce LexVLA, a more interpretable VLA framework by learning a unified lexical representation for both modalities without complex design. We use DINOv2 as our visual model for its local-inclined features and Llama 2, a generative language model, to leverage its in-context lexical prediction ability. To avoid the false discovery, we propose an overuse penalty to refrain the lexical representation from falsely frequently activating meaningless words. We demonstrate that these two pre-trained uni-modal models can be well-aligned by fine-tuning on the modest multi-modal dataset and avoid intricate training configurations. On cross-modal retrieval benchmarks, LexVLA, trained on the CC-12M multi-modal dataset, outperforms baselines fine-tuned on larger datasets (e.g., YFCC15M) and those trained from scratch on even bigger datasets (e.g., 1.1B data, including CC12M). We conduct extensive experiments to analyze LexVLA. Codes are available at https://github.com/Clementine24/LexVLA. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The development of Vision-Language Alignment (VLA) models has made great progress [43, 48, 22, 26, 6] since the innovative CLIP [34] effectively learns a shared latent space where text and image are well-aligned. This progress has also boosted related fields like vision-language foundation models [20], multi-modal understanding [18], and text-conditional generation [35]. However, CLIP\u2019s latent features pose challenges of interpretability issue for analyzing individual factors\u2019 impact. Additionally, CLIP\u2019s visual model struggles to learn patch-level features, and its text model are trained based on incomplete and biased captions. These challenges reduces its overall effectiveness. ", "page_idx": 0}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/ffb57303934c41f1bc5c1421a9dd311b76612cfccc038b8cf543fe5d4eed5cef.jpg", "img_caption": [], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: LexVLA can generate a lexical representation of the input image (the first word cloud figure), or to pick some patches of the image for local lexical information representation (the second word cloud figure, with the seleted patches boxed in red), and to select the most relevant patches of the image given the text content (the rightmost figure, with caption \u2019horse\u2019, with the second-to-last figure is the ground-truth mask). ", "page_idx": 1}, {"type": "text", "text": "On the other hand, the lexical representation is known for its clarity as each dimension corresponds to the similarity between the input and a specific word/token from the vocabulary. Additionally, lexical representation can naturally be made sparse, which means it\u2019s efficient for tasks like search or indexing in large-scale retrieval tasks. However, learning lexical representation is difficult. The embedding vector is much larger than the CLIP latent vector as the vocabulary size is usually much larger than CLIP\u2019s feature dimension. This poses several challenges: the lack of precise supervision signals; the incomplete and biased text supervision, and the high-dimensional embedding space with low-dimensional targets. Thus using lexical representations in CLIP-style VLA models is tough. ", "page_idx": 1}, {"type": "text", "text": "Previous lexical representation learning approaches tries to utilize strategies including $\\ell_{1}$ regularization [46, 3] to direct encourage sparisity or use ReLU activation [27] to remove negative scores [12, 5, 25] or directly regularize the floating-point operations [31]. However, these intricate training configurations usually introduce extra training difficulty and additional regularization such as log saturation [12, 25] and bag-of-words penalization [48] which potentially limits the VLA capacity. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we propose LexVLA, a simple yet comprehensive framework for learning a unified lexical representation in the CLIP-style contrastive training pipeline, facilitating the VLA. LexVLA enjoys the following merits in addressing the challenges above. 1) We use single-modal pre-trained models for their unique beneftis, including DINOv2 [30] as vision model for its local-inclined features, and Llama 2 [40] as text model to learn lexical representations through in-context prediction tasks instead of traditional caption embeddings. 2) We suggest a unified vocabulary with distinctive codebooks for each modality to maintain the strengths of single-modal pre-trained models by refrain them from learning the same feature space. This allows us to create better VLA models with less multi-modal training data and simpler setups. We also introduce an overuse penalty to prevent excessive activation of irrelevant tokens, improving upon the FLOPs loss [31] which only promotes sparsity. 3) We incrementally train LexVLA to stay aligned with pre-trained models. For text, we fine-tune Llama 2 with LoRA adapter[14] and keep its codebook frozen. For vision, we freeze DINOv2 and train a projector with a self-attention layer and two multi-layer perceptions to the vision codebook, initialized using the text codebook. 4) We introduce PatchDis, a metric for patch-level alignment in visual features, evaluating patch-level classification tasks with image patch features and category text tokens learned by VLA models. We propose PatchDis as a patch-level interpretability metric for VLA models not trained on fine-grained tasks like segmentation or detection. ", "page_idx": 1}, {"type": "text", "text": "Formally, our LexVLA employs a unified lexical vocabulary with distinct codebooks for text and image modalities, utilizing bi-encoders to individually encode inputs into lexical representations. These encoders, initially set with single-modal pre-trained models, undergo incremental fine-tuning via the standard contrastive learning objective, with the integration of an overuse penalty to promote sparsity and mitigate token over-activation. Emprically, we show the effectiveness of LexVLA on two zero-shot cross-modal retrieval benchmarks. Trained on the CC-12M dataset, it outperforms baselines fine-tuned on larger datasets like $\\mathrm{YF100m-CLIP+CC-12M}$ and those trained from scratch on even larger datasets totaling 1.1B data, including CC-12M. We provide detailed analysis of LexVLA. ", "page_idx": 1}, {"type": "text", "text": "Our contributions can be listed as follows: ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "\u2022 We emphasize utilizing single-modal pre-trained models for vision-language alignment tasks to benefti from their unique properties that cannot learned by contrastive objectives. To exemplify, we use DINOv2 for its local-inclined features and Llama 2 for its in-context capacity. ", "page_idx": 1}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/d34e26c2d6e45b5e480b983348572f31254f0080157fd761261003580ac83435.jpg", "img_caption": ["Figure 2: Framework of LexVLA. We learn a unified lexical representation with distinct codebooks for text and visual modalities. For the image, we adopt the frozen DINOv2, learn an adapter and a mapper to get visual lexical representation. For the text, we use LoRA to fine-tune the Llama 2 on in-context lexical prediction task, followed with a mapper to get the text lexical representation. We initialize codebooks as Llama 2\u2019s codebook, freeze the text codebook while fine-tuning the visual codebook. We train LexVLA with the standard contrastive objectives along with the proposed overuse penalty to encourage sparsity while preventing meaningless activation. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "\u2022 We effectively learn a unified lexical representation with unique codebooks for vision and language modalities to refrain from the weakening of pre-trained capabilities. \u2022 We propose an overuse penalty to encourage sparse embedding and prevent meaningless activation. \u2022 We enjoy superior retrieval performance with less multi-modal training data, and achieve better patch-level interpretable VLA model with global supervision signals, quantitatively surpassing CLIP-style and lexical methods with our proposed patch-level interpretability metric PatchDis. ", "page_idx": 2}, {"type": "text", "text": "2 Related works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Vision-Language Alignment VLA has been a challenging problem in deep learning. The innovation of CLIP [34] has inspired a plethora of research efforts in combining visual and language modalities [21, 44, 26, 37, 6, 43]. With the rise of large language models (LLMs) [1, 40, 38], it\u2019s become common to use CLIP to get visual data from images and combine it with pretrained LLMs[24, 8, 20, 2, 49]. However, recent studies have identified visual encoders as potential bottlenecks in these models, posing issues like identifying actions and spatial relationships [41, 15], ignoring attributes and states [45, 10], introducing hallucination problems [39], etc. Nevertheless, progress in using other visual models instead of CLIP has been slow. Tong et al.[39] discovered a drop in instruction-following ability when integrating DINOv2[30] into LLaVA\u2019s [24] structure. To address this, they combined features from CLIP and DINOv2. Similarly, Zhai et al. [47] used a locked DINO for contrastive tuning, which necessitated significant aligned data and computational resources. In contrast, we use a locked DINOv2 for lexical VLA, demonstrating the superiority over CLIP with smaller amount of multi-modal training data. It is important to note that our work differs significantly from recent zero-shot cross-modal retrieval models, such as BEiT-3 [42]. Our approach emphasizes developing specific lexical representations for images and text, whereas general retrieval models lack this interpretable representation. ", "page_idx": 2}, {"type": "text", "text": "Multi-modal lexical representation Lexical representation is popular in information retrieval [12, 13] thanks to its interpretability and efficiency. However, adapting this approach to vision-language models is challenging because of the differences between the two modalities. Previous approaches rely on complex training stages (two [25] or three [5]), large scale multi-modal training data [5] to train effectively and additional Bag-of-Words (Bow) restrictions [25, 48] to prevent semantic misalignment. In contrast, we in this paper propose a single fine-tuning stage to align uni-modal pre-trained models in the output lexical space with less multi-modal training data and without BoW restriction. In this paper, our model shall be equipped with the generalizable ability for zero-shot cross-modal evaluation, rather than fine-tuning on each specific target cross-modal training dataset. ", "page_idx": 2}, {"type": "text", "text": "Additionally, it is important to note that lexical representation differs fundamentally from codebook strategies, as highlighted in [11]. While our aim is to develop interpretable lexical representations for images and visual patches at the vocabulary level, offering greater flexibility, codebook strategies focus on creating a unified yet non-explicit semantic code for images and text at the codebook level, which lacks the desirable traits of interpretability and high retrieval efficiency. ", "page_idx": 3}, {"type": "text", "text": "3 LexVLA ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Problem setup Our target is to learn the lexical alignment between text and image modalities. Typically, the lexical representation $s_{i}\\;\\in\\;\\mathbb{R}^{V},i\\;\\in\\;\\{{\\breve{\\mathrm{img}}},{\\mathrm{txt}}\\}$ is a score vector, whose element indicates the similarity between the sample and the corresponding word from the vocabulary $\\mathbf{V}$ with $V=|\\mathbf{V}|$ . The contrastive lexical alignment aims to train the lexical encoders for each modality such that the similarity $\\langle s_{i m g},s_{t x t}\\rangle$ for positive image-text pairs are maximized and that for negative pairs are minimized, while preserving the correct lexical correspondence with the vocabulary. ", "page_idx": 3}, {"type": "text", "text": "Overview Our model, as in Fig. 2, learns a single lexical representation for VLA (Sec. 3.1). We encode each modality separately using uni-modal encoders (Sec. 3.2) adapted in Sec. 3.3. ", "page_idx": 3}, {"type": "text", "text": "3.1 Lexical representation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Vocabulary Inspired by tokenization techniques [36, 19], we initialize with the tokenizer vocabulary and refine it by removing unused and meaningless tokens, reducing the size from 32,000 to 17,149. ", "page_idx": 3}, {"type": "text", "text": "Codebooks The one-hot embedding is semantic-less and assume the same distance between different words, which is obviously not a good embedding. In this paper, we use the output codebook of language models as a well pre-trained and semantic-rich codebook, inducing lexical codes of 4096-dim vectors. However, the text codebook is not optimized for visual features. Basically, during the pre-training of language model, the visual world is not observable, thus we may have a gap between text-only embeddings and the visual-embeddings. To this end, we propose to use the same vocabulary $V$ but a unique codebook $Z_{i},i\\in\\{\\mathrm{img},\\mathrm{txt}\\}$ for text and image modalities, respectively. As the language codebook is pre-trained on large corpus, we freeze $Z_{t x t}$ to enjoy the well-trained text embeddings. $Z_{i m g}$ is initialized with the weights of $Z_{t x t}$ and fine-tuned along with the training of lexical encoders to enable the adaptation for visual features. ", "page_idx": 3}, {"type": "text", "text": "Sparse representation Thanks to the inherent similarity measurement in lexical representations, it is natural to turn a dense output vector into a sparse lexical representation. Typically we could utilize the following strategies: 1) Top- $\\cdot\\mathbf{k}$ thresholding: select the most important $k$ items and discard the rest; 2) Value thresholding: keep items with value above the threshold and discard the rest. In this paper, we use the value thresholding strategy. We select items with values greater than $1/\\sqrt{V}$ , which means we consider only the items with above-average signals as informative. ", "page_idx": 3}, {"type": "text", "text": "3.2 Lexical encoder ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Given the image as $x_{i m g}$ and text as $\\pmb{x}_{t x t}$ , the lexical representation is achieved by: ", "page_idx": 3}, {"type": "equation", "text": "$$\ns_{i}:=e_{i}(\\pmb{x}_{i})=h_{i}\\circ g_{i}\\circ f_{i}(\\pmb{x}_{i}),i\\in\\{\\mathrm{img,txt}\\}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Without loss of generality, we ignore the subscript $i$ in the following definitions unless otherwise specified. We split the lexical encoder in three stages: 1) The single-modal pre-trained feature extractor $f$ , takes as input $\\textbf{\\em x}$ and as output a feature sequence $\\pmb{y}:=\\bar{\\pmb{f}}(\\pmb{x})\\in\\mathbb{R}^{n\\times d_{i}}$ , where $n$ is the sequence length and $d_{i}$ is the modal-dependent feature dimension; 2) The projector $g$ , projects $\\textit{\\textbf{y}}$ to the lexical feature sequence $\\boldsymbol{z}:=\\boldsymbol{g}(\\boldsymbol{y})\\overset{\\cdot}{\\in}\\mathbb{R}^{n\\times d}$ , where $d$ is the lexical feature dimension; 3) The mapper $h$ , maps $_{\\textit{z}}$ to the lexical representation $\\pmb{s}=h(\\pmb{z})\\in\\mathbb{R}^{V}$ . ", "page_idx": 3}, {"type": "text", "text": "In this paper, we restrict the lexical representation to be non-negative and $\\ell_{2}$ -normalized, i.e., $\\lVert s\\rVert_{2}=$ $1,s_{i}\\geq0$ . Different modalities share the same $V$ with a unique codebook $Z_{i}\\in\\mathbb{R}^{V\\times d},i\\in\\{\\mathrm{img,txt}\\}$ ", "page_idx": 3}, {"type": "text", "text": "3.2.1 Lexical text encoder ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Captioning? In VLA training data pair, the text is typically a caption of the corresponding image. However, it is well-known that caption only captures a partial observation of the semantics in the image, and cannot serve as a perfect target to represent the image. As it is the only accessible ground-truth signal, previous approaches mainly train the text encoders to represent the caption embedding via the output hidden state [9, 48, 12, 25] or [CLS] token embeddings [34], and use it as the target for the corresponding image. Hence, the learned alignment is biased and leads to false-elimination of image patterns that are not observed in the captions. ", "page_idx": 4}, {"type": "text", "text": "Predicting! Inspired by the powerful Large Language Models (LLMs), we would like to investigate can we unleash the inherent knowledge of LLMs for lexical representation? The answer is yes. ", "page_idx": 4}, {"type": "text", "text": "As the auto-regressive LLMs [1, 40] are not naturally to summarize the previous tokens, it is irrational to directly use the predicted token as the embedding for raw text inputs. A straightforward way to activate LLM is to use prompt like \u201csummarize the sentence of [TEXT] in one word:\u201d to activate LLM\u2019s summarization capacity and use the output token as the text embedding. But it is still the caption-style summarization, and cannot fully utilize the LLM. ", "page_idx": 4}, {"type": "text", "text": "LLM as lexical predictor Given the in-context learning capacity of LLM, we propose to adapt LLM as a lexical predictor. Specifically, our input for the LLM is: ", "page_idx": 4}, {"type": "text", "text": "The focus of \"The man is riding a white horse.\" lies on important words:\"man\", \"riding\", \"white\", \"horse\". The focus of \"[TEXT]\" lies on important words: ", "page_idx": 4}, {"type": "text", "text": "The [TEXT] is the input caption. Then we adopt the output token as the text embedding. This prompt includes two parts: 1) One in-context example to guide the LLM to identify the important words in the caption, adapting the LLM to lexical prediction task; 2) The question prompt to ask the LLM the important words of input caption. In this design, the output token of the LLM naturally performs the lexical prediction task to calculate the similarity between the input caption and every word in the vocabulary, and thus serves as a powerful proxy to get the lexical representation. ", "page_idx": 4}, {"type": "text", "text": "Realization we utilize Llama 2 [40] as our text encoder $f_{t x t}$ . The input text follows the above in-context prompts. We use the output of the predicted token embedding as $\\mathbf{\\Psi}_{y_{t x t}}$ . As our lexical codebook is Llama 2\u2019s output codebook, we do not need $g_{t x t}$ , thus $z_{t x t}\\,=\\,y_{t x t}$ . To implement $h_{t x t}$ , we first calculate dot-product attention between each text token $\\boldsymbol{z}_{t x t}\\in\\mathbb{R}^{1\\times d}$ and the text lexical codebook $Z_{t x t}$ . Then we use the $e l u1p$ activation [48] to transform the attention score into non-negative values and then normalize it, yielding global lexical representation $s_{t x t}$ . Formally, ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{s_{t x t}=\\mathrm{Normalize}\\circ e l u1p(z_{t x t}Z_{t x t}^{\\top}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $e l u1p(x)=(x+1)\\cdot1_{\\{x\\geq0\\}}+e^{x}\\cdot1_{\\{x<0\\}}$ and Normalize is the $\\ell_{2}$ normalization operator.   \nFor word-level lexical representation, we directly use the word code in $Z_{t x t}$ followed by Eq. (2). ", "page_idx": 4}, {"type": "text", "text": "3.2.2 Lexical visual encoder ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We adopt DINOv2 [30] as our visual backbone to implement $f_{i m g}$ . Given input $x_{i m g}$ , we first flatten it into patches ${\\bf x}_{i m g}=[{\\pmb x}_{1},...\\,,{\\pmb x}_{n-1}]$ and input to $f_{i m g}$ to get ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{{\\pmb y}_{i m g}=f_{i m g}([\\mathrm{CLS};{\\pmb x}_{i m g}])\\in\\mathbb{R}^{n\\times d},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where CLS is the \u201cclass\u201d token in DINOv2. Subsequently, we implement $g_{i m g}$ with an adapter includes a self-attention layer and 2 multi-layer perceptions to post-process the DINOv2 features. To implement $h_{i m g}$ , similar to the text encoder but in a more fine-grained manner, we first calculate dot-product attention between each image patch token $z_{i m g,i}\\in\\mathbb{R}^{1\\times d}$ and the image lexical codebook $Z_{i m g}$ , followed by the $e l u1p$ activation. In the end, we use max-pooling to aggregate patch representations and then normalize, yielding global lexical representation $s_{i m g}$ . Formally, ", "page_idx": 4}, {"type": "equation", "text": "$$\ns_{i m g}=\\mathrm{Normalize}\\circ\\mathrm{Max}.\\mathrm{Pool}\\circ e l u1p(z_{i m g}Z_{i m g}^{\\top}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The image patch lexical representation follows the same process but replace the max-pooling operator with selecting the corresponding patch location. ", "page_idx": 4}, {"type": "text", "text": "3.3 Train LexVLA", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Contrastive objective We use the InfoNCE loss [29] with learnable temperature $\\tau$ for cross-modal retrieval over a batch of $N$ text-image pairs $(x_{i m g},x_{t x t})$ as the major objective: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\ell_{a2b}=-\\frac{1}{N}\\sum_{i=1}^{N}\\log\\frac{\\exp(a_{i}b_{i}^{\\top}/\\tau)}{\\sum_{j=1}^{N}\\exp(a_{i}b_{j}^{\\top}/\\tau)},(a,b)\\in\\{(x_{i m g},x_{t x t}),(x_{t x t},x_{i m g})\\},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Overuse penalty In lexical representation learning, the FLOPs loss [31] is widely used to encourage the output sparsity. Given the modality-specified lexical representation matrix $S\\,=\\,\\{s_{i,j}\\},i\\ {\\bar{\\in}}$ $\\{1,\\cdot\\cdot\\cdot,N\\},j\\in\\{1,\\cdot\\cdot\\cdot,V\\}$ in current mini-batch, the FLOPs loss is defined as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\ell_{\\mathrm{FLOPs}}=\\sum_{j=1}^{V}{\\bar{s}}_{\\cdot,j}^{2}=\\sum_{j=1}^{V}\\left({\\frac{1}{N}}\\sum_{i=1}^{N}s_{i j}\\right)^{2}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The FLOPs loss aims to reduce FLOPs to induce sparsity. But we noticed that sometimes this penalty pushes the encoder to take shortcuts that falsely activate rarely used and image-unrelated tokens. This semantic deviation leads to false activation and affects the interpretability of lexical representation. ", "page_idx": 5}, {"type": "text", "text": "To prevent using meaningless tokens too much, we adapt the FLOPs loss with a weighting method. Essentially, we aim to penalize tokens that are used too often across examples. We measure this via the normalized average activation value across the vocabulary, and propose the overuse penalty as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\ell_{\\mathrm{overuse}}=V\\sum_{j=1}^{V}{\\frac{{\\bar{s}}_{\\cdot,j}}{\\sum_{k=1}^{V}{\\bar{s}}_{\\cdot,k}}}\\bar{s}_{\\cdot,j}^{2}=N V\\sum_{j=1}^{V}\\left(\\sum_{i=1}^{N}s_{i,j}/N\\right)^{3}/\\sum_{j=1}^{V}\\sum_{i=1}^{N}s_{i,j}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Objective The full objective contains Eq. (5) and Eq. (7) for each modality: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\ell_{t2i}+\\ell_{i2t}+\\lambda_{I}\\ell_{o v e r u s e}^{I}+\\lambda_{T}\\ell_{o v e r u s e}^{T}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\lambda_{I}$ and $\\lambda_{T}$ are two regularization weights for image and text representations, respectively. ", "page_idx": 5}, {"type": "text", "text": "Incremental fine-tuning For text part, we adopt LoRA adapters [14] to fine-tune the Llama 2. For vision part, we freeze the DINOv2, and only train the projector and vision codebook. ", "page_idx": 5}, {"type": "text", "text": "3.4 PatchDis: interpretability metric ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The core target of lexical representation is to achieve an interpretable feature representation for input modality. For the text input, the interpretability is straightforward to check. However, existing literature do not have a quantitative metric to measure the patch-level interpretability of visual lexical representation. In this paper, we propose the PatchDis metric to evaluate the patch-level discrimination tasks, inspired by the patch-level segmentation task but designed for models which are not trained from fine-grained alignment tasks like segmentation or detection. ", "page_idx": 5}, {"type": "text", "text": "Basically, PatchDis evaluates the classification task in the patch-level features. For any given VLA model, we use its text encoder to input the class names and obtain the text embeddings of all classes. Similarly, we input the testing image to the visual encoder to obtain all patch features. Then we could use the model-defined metric to calculate the similarity between each patch feature and the class embeddings, and predict the class of each patch from the largest similarity. Then for each class, we could aggregate all patches of one class as the patch-level prediction for the class. We use the ground-truth segmentation of the class as the target, and use mIoU as the metric to evaluate the patch-level interpretability of the VLA models in the zero-shot patch-level discrimination task. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets We use CC-12M [4] for training, a dataset consisting of 12.4 million image-text pairs. We successfully download 9.2M pairs and use this subset as our training set. For evaluation, we use Flickr30k [33] and MSCOCO [23] to evaluate zero-shot cross-modal retrieval tasks. ", "page_idx": 5}, {"type": "table", "img_path": "xoCFd1WKpf/tmp/02c5790a5757c3291418070ca9ea3cde496fbb5505ce357618c6b4bb6286b0e1.jpg", "table_caption": ["Table 1: Zero-shot cross-modal retrieval. $\\mathtt{a}$ indicates variants of our LexVLA. $\\mathrm{CLIP^{1}}$ is the original CLIP [34]; results denoted by $(\\cdot)^{2}$ are reported in VDR [48]; results denoted by $(\\cdot)^{3}$ are reported in STAIR [5]. \u201cData\u201d is the multi-modal alignment training data size; \u201cLatent\u201d means direct latent feature alignment methods; \u201cLexical\u201d indicates lexical feature alignment methods. $\\mathbf{R}\\ @\\mathbf{K}$ , the recall ratio within top-K items. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Implementation We use DINOv2 [30] base model and Llama 2 [40] 7B model as our backbones. We use Adam optimizer [17] with learning rate $5e-4$ and cosine decayed, batch size of 6,144, precision of BFloat16 for 12 epochs. We initialize $\\tau$ as 0.07, and clip the logits larger than 100 as in [34]. We use 8 A100 GPUs of 40GB memory to train LexVLA. We quadratically warmup $\\lambda$ in the fisrt 2k steps and then freeze as [31]. We set $\\lambda_{I}$ as $5e-4$ and $\\lambda_{T}$ as $1e-3$ . The trainable parameters in LexVLA is $109\\,\\mathrm{M}$ in total, including 70M for vision codebook, 17M for vision projector $19.76\\%$ compared with DINOv2), 21M for Llama adaptor $\\!\\!\\!\\partial.30\\%$ compared with Llama 2). ", "page_idx": 6}, {"type": "text", "text": "4.1 Zero-shot cross-modal retrieval ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Evaluation We conduct experiments on zero-shot cross-modal retrieval tasks on Flickr30k and MSCOCO based on the splits in [16] following previous approaches. We use the $\\mathbf{R}\\ @\\mathbf{K}$ , recall ratio within top-K items, as the evaluation metric. ", "page_idx": 6}, {"type": "text", "text": "Competitors We compare LexVLA with the latent feature alignment methods, including the original CLIP [34] model trained on different dataset scales and followup CLIP-style alignment models, including FILIP [43], CLIP-BERT [48], DeCLIP [22], SLIP [26], and ProtoCLIP [6]. We also compare with previous lexical representation learning models that focus on zero-shot cross-modal retrieval tasks, including VDR [48] and STAIR [5]. Note that all the competitors are trained by larger datasets. Specifically, the models trained on 15M data uses YFCC15M [21], and models trained on 1.1B data [5] contains several datasets including CC-12M. ", "page_idx": 6}, {"type": "text", "text": "Variants For LexVLA, we report the following variants in addition to our final model: 1) $\\sf{Q}(\\sf{B o W})$ , which selects only the nouns, adjectives, and non-auxiliary verbs in a caption (Bag-of-Words) instead of the LLM-based lexical predictor. 2) $\\mathsf{\\sf{Q}}(\\mathrm{{CLIP})}$ , which uses the original CLIP visual model, instead of the proposed DINOv2 based encoder; 3) $\\mathsf{Q}(\\mathrm{FLOPs})$ , which uses FLOPs loss as sparsity penalty. 3) $\\mathfrak{Q}(\\bar{\\mathfrak{d}})$ , which uses the top-k thresholding strategy. We test $d=512$ , the same activated dimension as CLIP to make a fair comparison. The average activated dimension of the final LexVLA is 1081. Note that LexVLA surpasses CLIP with less activated values, see Fig. 5 for detailed analysis. ", "page_idx": 6}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/5c266457daac046fb44f487b673f59760d1122c93433e860a21279d85efa5404.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 3: PatchDis visualization. The same color indicates the same category. LexVLA correctly predicts the corresponding region, even for the small-scale objects, like the bottle in the first image. ", "page_idx": 7}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/d271392f94cceaa91dc674acf21676946542c1204ab465c28f79bd9ffe40ac86.jpg", "img_caption": ["Figure 4: Visualization of the image lexical representation obtained by LexVLA. Larger word indicates larger lexical value. The first row represents the complete image, and the second row represent local patches (boxed in red). LexVLA learns a well-aligned lexical representation for both image and patches without local supervision. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Results We report the results in Table 1. 1) LexVLA performs significantly better than both latent feature alignment methods and previous lexical alignment methods when trained on a similar amount of multi-modal examples (12M vs. 15M). This shows the effectiveness of LexVLA. 2) Compared to CLIP trained on much larger multi-modal datasets (0.4B and 1.1B), LexVLA still performs better, even when using the same activated feature dimension as CLIP. This further demonstrates LexVLA\u2019s efficiency in text-image alignment with much less training data. 3) LexVLA outperforms STAIR in most metrics and is comparable in two others, despite using significantly less training data (12M vs. 1.1B). This highlights LexVLA\u2019s training efficiency. 4) The results of $\\sf{Q}(\\sf{B o W})$ are poor, due to the BoW method limits the model\u2019s ability to use information effectively. It struggles with vocabulary [7] and semantic [32] mismatches. LexVLA aims to address these limitations by leveraging language models for lexical prediction rather than relying solely on captioning. 5) The significant improvements of LexVLA over $\\mathsf{Q}(\\mathbf{CLIP})$ indicate that using DINOv2 as the visual backbone is superior. 6) LexVLA with FLOPs loss performs worse than our proposed overuse penalty, and activates meaningless tokens as in Fig. 6. In summary, these results demonstrate the effectiveness and efficiency of our method. ", "page_idx": 7}, {"type": "text", "text": "4.2 Lexical representation analysis ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this part, we evaluate if LexVLA learns the accurate lexical representation. We conduct the following experiments: 1) Quantitatively, we use the proposed PatchDis metric to evaluate the fine-grained patch-level visual lexical representations on MSCOCO 2017 [23]; 2) Qualitatively, we visualize the global lexical representation of images, local lexical representation of image patches, and a PatchDis visualization for the activated patches for the given category. ", "page_idx": 7}, {"type": "table", "img_path": "xoCFd1WKpf/tmp/988c369a89de354d44ab6946b37c17727faddc598f123bc4a4878abbd905f681.jpg", "table_caption": ["Table 2: PatchDis results. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "PatchDis evaluation We report the zero-shot PatchDis mIoU performance on MSCOCO 2017 validation dataset. We compare LexVLA with public available baselines CLIP (0.4B) and VDR (15M), as well as random discrimination, and report the performance in Tab. 2. LexVLA clearly shows the superiority on the patch-level interpretability with the weak global training signal. In contrast, the latent alignment CLIP, due to no supervision on patch-level features, performs slightly better than random guessing. VDR enjoys better interpretability, but significantly worse than our LexVLA. LexVLA variant, using the original CLIP visual model, provides a better and more interpretable lexical representation of visual patches compared to both the original CLIP and previous lexical methods. This further confirms the effectiveness of our proposed approach. We also visualize the predicted patches of different classes in Fig. 3. LexVLA successfully activates the correlated patches in the image for different classes, even for the small-scale objects. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/85a9a2b41782a6ab26684ef6d62515870ebb6301f21d1f6b07f28cbeb81709a9.jpg", "img_caption": ["Figure 5: Retrieval in different sparse levels. We compare LexVLA with VDR in the same sparse levels and with CLIP as a proxy of dense latent alignment. The first row is results in the Flickr30K dataset, and the second in the MSCOCO dataset. The first to the third columns show the settings of Recall $@1$ , Recall $@5$ , and Recall $@10$ , respectively. Purple symbols represent CLIP. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Lexical visualization We visualize the lexical representations of the global image and local patches in Fig. 4. For the bottom row, we randomly select one object in the image and then annotate the patches that cover the object to calculate the lexical representation on patches in the free form. We use word cloud [28] to illustrate the lexical representation where larger word indicates larger lexical value. These results clearly suggest that the learned lexical representation correctly correlates with the semantics of the image/patch, showcasing the effectiveness of LexVLA. ", "page_idx": 8}, {"type": "text", "text": "4.3 Further analysis ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "LexVLA under different sparsity One of the targets for lexical representation is to learn a sparse representation for potential benefits in large scale retrieval tasks. To test the robustness of learned representations in LexVLA, we test the retrieval performance of LexVLA in different sparsity levels. Particularly, the sparsity ratio is calculated via $\\ell_{0}(s_{i})/V$ , the ratio of non-zero elements in the lexical representation $s_{i}$ . We compare LexVLA with VDR on the same sparsity ratios. We also visualize the CLIP\u2019s performance as a proxy of dense latent representation. ", "page_idx": 8}, {"type": "text", "text": "Results are shown in Fig. 5. 1) LexVLA is robust against the sparsity ratio even in a very high ratio $(98.27\\%$ , 296 activated tokens, which is marked with black vertical dotted line in Fig. 5), and then starts to get damaged as the sparse ratio approaches 1; 2) Compared with VDR, LexVLA achieves better performance in all sparse level, indicating a consistent improvement. 3) LexVLA enjoys superior performance with less activated feature dimension as CLIP (296 vs 512) in almost all cases, showcasing our model\u2019s effectiveness. ", "page_idx": 8}, {"type": "text", "text": "Overuse penalty The widely used FLOPs loss aims to encourage the sparsity of learned lexical representation. However, we empirically find that it will falsely activate meaningless tokens as in Fig. 6. Specifically, the model tends to activate certain semantically unrelated tokens across different $s_{i}$ (like $\\mathbf{\\nabla}\\varphi^{,}$ in the image and \u2019contemporary\u2019 in the text, respectively), implicitly treating these tokens as latent dimensions. Our proposed overuse penalty inhibits these frequently activated words more aggressively, and leads to more semantic-correlated lexical representations in Fig. 6. This enhanced interpretability further improves the retrieval performance in most cases, as in Tab. 1. ", "page_idx": 8}, {"type": "text", "text": "Limitations The major limitation of LexVLA is the use of vocabulary from large language model. We design our lexical vocabulary based on the Llama 2\u2019s tokenizer, and sometimes it splits a word into several sub-word tokens, making the resulting token not a complete word. Although we filter out many meaningless tokens, it still introduces the gap between our vocabulary and the perfect word-level vocabulary. Given that random initialize a word-level vocabulary and additionally learn a projector from sub-word tokens to word-level tokens works poorly, we regard designing a word-level vocabulary that still benefit from the LLMs as a future work. ", "page_idx": 8}, {"type": "image", "img_path": "xoCFd1WKpf/tmp/aaa886cfa61943d791e9b37f98ac93c94e80b5bf8c2b96f0d1259ce29db53a47.jpg", "img_caption": ["Figure 6: Visualization of lexical representations of LexVLA w/ FLOPs loss and w/ our proposed overuse penalty, respectively. The first row represents images while the second is caption. LexVLA w/ FLOPs loss usually falsely activates similar meaningless tokens frequently as a shortcut (see \u2019 $@$ \u2019 and \u2019contemporary\u2019 outlined by green boxes as examples). LexVLA w/ overuse penalty significantly mitigate this false activation issue. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Broader impacts The advancements made in cross-modal retrieval, as demonstrated in this work, hold significant potential for various fields and applications. One immediate impact lies in enhancing information retrieval systems, where users can efficiently search and retrieve multimodal content such as images and text. This can greatly benefit industries such as e-commerce, digital libraries, and multimedia databases, enabling more intuitive and accurate searches. While the advancements in cross-modal retrieval offer numerous benefits, one concern is related to privacy and security, as the integration of multimodal data may raise issues regarding data protection and user consent. It\u2019s essential to mitigate these potential negative impacts through robust privacy measures. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose LexVLA, a unified lexical vision-language alignment framework. LexVLA effectively learns a unified lexical representation with unique codebooks for vision and language modalities, with the aid of single-modal pre-trained models. We propose to incremental fine-tune LexVLA with the standard contrastive objective penalized by the proposed overuse objective to prevent meaningless activation and encourage sparse embedding. LexVLA refrains from the complex training configurations, and effectively achieves the patch-level interpretability with only global supervision signals. We introduce a patch-level interpretability metric, PatchDis, to quantify this on the zero-shot cross-modal benchmark dataset. We demonstrate the effectiveness of LexVLA on two zero-shot cross-modal retrieval benchmark datasets with significantly smaller multi-modal training dataset. We also provide detailed analysis on LexVLA. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al. Gpt-4 technical report. arXiv preprint arXiv:2303.08774, 2023.   \n[2] Jean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana Hasson, Karel Lenc, Arthur Mensch, Katherine Millican, Malcolm Reynolds, et al. Flamingo: a visual language model for few-shot learning. Advances in neural information processing systems, 35:23716\u201323736, 2022.   \n[3] Usha Bhalla, Alex Oesterling, Suraj Srinivas, Flavio P Calmon, and Himabindu Lakkaraju. Interpreting clip with sparse linear concept embeddings (splice). arXiv preprint arXiv:2402.10376, 2024.   \n[4] Soravit Changpinyo, Piyush Sharma, Nan Ding, and Radu Soricut. Conceptual $12\\mathrm{m}$ : Pushing web-scale image-text pre-training to recognize long-tail visual concepts. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 3558\u20133568, 2021.   \n[5] Chen Chen, Bowen Zhang, Liangliang Cao, Jiguang Shen, Tom Gunter, Albin Madappally Jose, Alexander Toshev, Jonathon Shlens, Ruoming Pang, and Yinfei Yang. Stair: Learning sparse text and image representation in grounded tokens. arXiv preprint arXiv:2301.13081, 2023.   \n[6] Delong Chen, Zhao Wu, Fan Liu, Zaiquan Yang, Yixiang Huang, Yiping Bao, and Erjin Zhou. Prototypical contrastive language image pretraining. arXiv preprint arXiv:2206.10996, 2022.   \n[7] W Bruce Croft, Donald Metzler, and Trevor Strohman. Search engines: Information retrieval in practice, volume 520. Addison-Wesley Reading, 2010.   \n[8] Wenliang Dai, Junnan Li, Dongxu Li, Anthony Meng Huat Tiong, Junqi Zhao, Weisheng Wang, Boyang Li, Pascale N Fung, and Steven Hoi. Instructblip: Towards general-purpose vision-language models with instruction tuning. Advances in Neural Information Processing Systems, 36, 2024.   \n[9] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.   \n[10] Sivan Doveh, Assaf Arbelle, Sivan Harary, Roei Herzig, Donghyun Kim, Paola CascanteBonilla, Amit Alfassy, Rameswar Panda, Raja Giryes, Rogerio Feris, et al. Dense and aligned captions (dac) promote compositional reasoning in vl models. Advances in Neural Information Processing Systems, 36, 2024.   \n[11] Jiali Duan, Liqun Chen, Son Tran, Jinyu Yang, Yi Xu, Belinda Zeng, and Trishul Chilimbi. Multi-modal alignment using representation codebook. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15651\u201315660, 2022.   \n[12] Thibault Formal, Benjamin Piwowarski, and St\u00e9phane Clinchant. Splade: Sparse lexical and expansion model for first stage ranking. In Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 2288\u20132292, 2021.   \n[13] Luyu Gao, Zhuyun Dai, and Jamie Callan. Coil: Revisit exact lexical match in information retrieval with contextualized inverted list. arXiv preprint arXiv:2104.07186, 2021.   \n[14] Edward J Hu, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, Weizhu Chen, et al. Lora: Low-rank adaptation of large language models. In International Conference on Learning Representations, 2022.   \n[15] Amita Kamath, Jack Hessel, and Kai-Wei Chang. What\u2019s\" up\" with vision-language models? investigating their struggle with spatial reasoning. arXiv preprint arXiv:2310.19785, 2023.   \n[16] Andrej Karpathy and Li Fei-Fei. Deep visual-semantic alignments for generating image descriptions. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3128\u20133137, 2015.   \n[17] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[18] Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C Berg, Wan-Yen Lo, et al. Segment anything. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4015\u20134026, 2023.   \n[19] Taku Kudo and John Richardson. Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pages 66\u201371, 2018.   \n[20] Junnan Li, Dongxu Li, Silvio Savarese, and Steven Hoi. Blip-2: Bootstrapping language-image pre-training with frozen image encoders and large language models. In International conference on machine learning, pages 19730\u201319742. PMLR, 2023.   \n[21] Yangguang Li, Feng Liang, Lichen Zhao, Yufeng Cui, Wanli Ouyang, Jing Shao, Fengwei Yu, and Junjie Yan. Supervision exists everywhere: A data efficient contrastive language-image pre-training paradigm. arXiv preprint arXiv:2110.05208, 2021.   \n[22] Yangguang Li, Feng Liang, Lichen Zhao, Yufeng Cui, Wanli Ouyang, Jing Shao, Fengwei Yu, and Junjie Yan. Supervision exists everywhere: A data efficient contrastive language-image pre-training paradigm. In International Conference on Learning Representations, 2022.   \n[23] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In Computer Vision\u2013ECCV 2014: 13th European Conference, Zurich, Switzerland, September 6-12, 2014, Proceedings, Part V 13, pages 740\u2013755. Springer, 2014.   \n[24] Haotian Liu, Chunyuan Li, Qingyang Wu, and Yong Jae Lee. Visual instruction tuning. Advances in neural information processing systems, 36, 2024.   \n[25] Ziyang Luo, Pu Zhao, Can Xu, Xiubo Geng, Tao Shen, Chongyang Tao, Jing Ma, Qingwei Lin, and Daxin Jiang. Lexlip: Lexicon-bottlenecked language-image pre-training for large-scale image-text sparse retrieval. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 11206\u201311217, 2023.   \n[26] Norman Mu, Alexander Kirillov, David Wagner, and Saining Xie. Slip: Self-supervision meets language-image pre-training. In European conference on computer vision, pages 529\u2013544. Springer, 2022.   \n[27] Vinod Nair and Geoffrey E Hinton. Rectified linear units improve restricted boltzmann machines. In Proceedings of the 27th international conference on machine learning (ICML-10), pages 807\u2013814, 2010.   \n[28] Layla Oesper, Daniele Merico, Ruth Isserlin, and Gary D Bader. Wordcloud: a cytoscape plugin to create a visual semantic summary of networks. Source code for biology and medicine, 6(1):7, 2011.   \n[29] Aaron van den Oord, Yazhe Li, and Oriol Vinyals. Representation learning with contrastive predictive coding. arXiv preprint arXiv:1807.03748, 2018.   \n[30] Maxime Oquab, Timoth\u00e9e Darcet, Th\u00e9o Moutakanni, Huy Vo, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel Haziza, Francisco Massa, Alaaeldin El-Nouby, et al. Dinov2: Learning robust visual features without supervision. arXiv preprint arXiv:2304.07193, 2023.   \n[31] Biswajit Paria, Chih-Kuan Yeh, Ian E.H. Yen, Ning Xu, Pradeep Ravikumar, and Barnab\u00e1s P\u00f3czos. Minimizing flops to learn efficient sparse representations. In International Conference on Learning Representations, 2020.   \n[32] ME Peters, M Neumann, M Iyyer, M Gardner, C Clark, K Lee, and L Zettlemoyer. Deep contextualized word representations. corr. arXiv preprint arXiv:1802.05365, 2018.   \n[33] Bryan A Plummer, Liwei Wang, Chris M Cervantes, Juan C Caicedo, Julia Hockenmaier, and Svetlana Lazebnik. Flickr30k entities: Collecting region-to-phrase correspondences for richer image-to-sentence models. In Proceedings of the IEEE international conference on computer vision, pages 2641\u20132649, 2015.   \n[34] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748\u20138763. PMLR, 2021.   \n[35] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[36] Rico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words with subword units. In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1715\u20131725, 2016.   \n[37] Quan Sun, Yuxin Fang, Ledell Wu, Xinlong Wang, and Yue Cao. Eva-clip: Improved training techniques for clip at scale. arXiv preprint arXiv:2303.15389, 2023.   \n[38] Gemini Team, Rohan Anil, Sebastian Borgeaud, Yonghui Wu, Jean-Baptiste Alayrac, Jiahui Yu, Radu Soricut, Johan Schalkwyk, Andrew M Dai, Anja Hauth, et al. Gemini: a family of highly capable multimodal models. arXiv preprint arXiv:2312.11805, 2023.   \n[39] Shengbang Tong, Zhuang Liu, Yuexiang Zhai, Yi Ma, Yann LeCun, and Saining Xie. Eyes wide shut? exploring the visual shortcomings of multimodal llms. arXiv preprint arXiv:2401.06209, 2024.   \n[40] Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023.   \n[41] Fei Wang, Liang Ding, Jun Rao, Ye Liu, Li Shen, and Changxing Ding. Can linguistic knowledge improve multimodal alignment in vision-language pretraining? arXiv preprint arXiv:2308.12898, 2023.   \n[42] Wenhui Wang, Hangbo Bao, Li Dong, Johan Bjorck, Zhiliang Peng, Qiang Liu, Kriti Aggarwal, Owais Khan Mohammed, Saksham Singhal, Subhojit Som, et al. Image as a foreign language: Beit pretraining for vision and vision-language tasks. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 19175\u201319186, 2023.   \n[43] Lewei Yao, Runhui Huang, Lu Hou, Guansong Lu, Minzhe Niu, Hang Xu, Xiaodan Liang, Zhenguo Li, Xin Jiang, and Chunjing Xu. FILIP: Fine-grained interactive language-image pre-training. In International Conference on Learning Representations, 2022.   \n[44] Jiahui Yu, Zirui Wang, Vijay Vasudevan, Legg Yeung, Mojtaba Seyedhosseini, and Yonghui Wu. Coca: Contrastive captioners are image-text foundation models. arXiv preprint arXiv:2205.01917, 2022.   \n[45] Mert Yuksekgonul, Federico Bianchi, Pratyusha Kalluri, Dan Jurafsky, and James Zou. When and why vision-language models behave like bags-of-words, and what to do about it? In The Eleventh International Conference on Learning Representations, 2022.   \n[46] Hamed Zamani, Mostafa Dehghani, W Bruce Croft, Erik Learned-Miller, and Jaap Kamps. From neural re-ranking to neural ranking: Learning a sparse representation for inverted indexing. In Proceedings of the 27th ACM international conference on information and knowledge management, pages 497\u2013506, 2018.   \n[47] Xiaohua Zhai, Xiao Wang, Basil Mustafa, Andreas Steiner, Daniel Keysers, Alexander Kolesnikov, and Lucas Beyer. Lit: Zero-shot transfer with locked-image text tuning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 18123\u201318133, 2022.   \n[48] Jiawei Zhou, Xiaoguang Li, Lifeng Shang, Xin Jiang, Qun Liu, and Lei Chen. Retrievalbased disentangled representation learning with natural language supervision. In The Twelfth International Conference on Learning Representations, 2024.   \n[49] Deyao Zhu, Jun Chen, Xiaoqian Shen, Xiang Li, and Mohamed Elhoseiny. Minigpt-4: Enhancing vision-language understanding with advanced large language models. arXiv preprint arXiv:2304.10592, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Appendix / supplemental material ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Model hyperparameters ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Our hyperparamters selection for the detail can be found in Tab. 3 ", "page_idx": 13}, {"type": "text", "text": "Table 3: Hyperparameters for training LexVLA. ", "page_idx": 13}, {"type": "table", "img_path": "xoCFd1WKpf/tmp/f220579dcbbcb6178c5e0620a1155d5448fe4a55ad0f59febc140a43a56ecac3.jpg", "table_caption": [], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "A.2 Pretraining details of backbone models ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "The DINOv2 [30] base model used in LexVLA is pretrained with self-supervised learning, leveraging a large dataset of 142 million diverse, high-resolution images. It employs a teacher-student architecture with multi-crop views and strong data augmentations to encourage robustness and capture both global and local features. During pretraining, the model uses a cosine similarity loss between student and teacher outputs to ensure consistent feature representations across different augmentations. This model supports downstream performance on detection and segmentation tasks. ", "page_idx": 13}, {"type": "text", "text": "The Llama 2 model [40] used in LexVLA is pretrained with self-supervised learning on approximately 2 trillion tokens from a diverse mix of publicly available datasets and web-sourced content. It employs a dense transformer architecture, and during training, it focuses on token prediction accuracy and generalization. This model supports effective performance across various language tasks. ", "page_idx": 13}, {"type": "text", "text": "For more pretraining details, please refer to the original papers of these two pretrained models. ", "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: Yes, they correctly describe the paper\u2019s contributions and scope. We propose a unified lexical alignment model that aligns text and visual data based on single-modal pretrained models and introduces unique codebooks, an overuse penalty, and enjoys patch-level interpretability. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Justification: Yes, we discussed the limitations in Sec. 4.3. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 14}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: Our paper does not include theoretical results. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: Yes, we provided all the information needed to reproduce the main experimental results in Sec. 4 and Sec. A.1. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: (1) We used publicly available benchmark datasets and have provided references for each one for open access. (2) According to the rules of the authors\u2019 organization, the code will be available only after the official publication. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 16}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: We provided all the details in Sec. 4. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 16}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 16}, {"type": "text", "text": "Answer: [No] ", "page_idx": 16}, {"type": "text", "text": "Justification: We didn\u2019t include error bars because calculating them would take too much computing power. We\u2019re also following the approach of previous studies that didn\u2019t include them. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 16}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 17}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We provided all the required information in Sec. 4. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 17}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Our research conform, in every respect, with the NeurIPS Code of Ethics. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 17}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We discussed both potential positive societal impacts and negative societal impacts in Sec. 4.3. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 17}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our work, towards the accurate lexical alignment between text and images, poses no such risks. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 18}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have credited all the assets we used, followed their licensing rules, and will not distribute or repurpose them. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: We do not have new assets in the submission. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: We do not involve crowdsourcing nor research with human subjects. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: We do not involve crowdsourcing nor research with human subjects. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 19}, {"type": "text", "text": "\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}]