[{"figure_path": "OYOkkqRLvj/tables/tables_5_1.jpg", "caption": "Table 1: Evaluation of execution times per iteration on three tasks.", "description": "The table compares the execution time per iteration for three different tasks: nuclear norm regularization, latent-space PCA, and low-rank GCN. For each task, three different backbones are used: a baseline backbone with only reconstruction loss, a backbone with traditional eigendecomposition (eigh/svd), and a backbone using the proposed amortized eigendecomposition method. The table shows the execution times for each backbone (t0, t1, and t2 respectively), as well as the speedup of the amortized eigendecomposition method relative to the traditional method (t1-t0)/(t2-t0). The results demonstrate significant speed improvements using the proposed method.", "section": "5.2 Nuclear Norm Regularization"}, {"figure_path": "OYOkkqRLvj/tables/tables_7_1.jpg", "caption": "Table 1: Evaluation of execution times per iteration on three tasks.", "description": "The table presents the execution times per iteration for three different tasks: Nuclear norm regularization, Latent-space PCA, and Low-rank GCN.  For each task, multiple dimensions are tested. The table compares the execution times of a baseline backbone model (without eigendecomposition), a backbone model with traditional eigendecomposition (eigh/svd), and a backbone model using the proposed amortized eigendecomposition method. The \"Speed-up\" column shows the relative improvement in speed of the amortized eigendecomposition method compared to the traditional method.", "section": "5.2 Nuclear Norm Regularization"}]