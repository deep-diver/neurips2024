[{"type": "text", "text": "Rethinking Score Distillation as a Bridge Between Image Distributions ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "David McAllister1\u2217Songwei $\\mathbf{Ge}^{2*}$ Jia-Bin Huang2 David W. Jacobs2 Alexei A. Efros1 Aleksander Holynski1 Angjoo Kanazawa1 1 UC Berkeley 2 University of Maryland https://sds-bridge.github.io/ ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Score distillation sampling (SDS) has proven to be an important tool, enabling the use of large-scale diffusion priors for tasks operating in data-poor domains. Unfortunately, SDS has a number of characteristic artifacts that limit its usefulness in general-purpose applications. In this paper, we make progress toward understanding the behavior of SDS and its variants by viewing them as solving an optimal-cost transport path from a source distribution to a target distribution. Under this new interpretation, these methods seek to transport corrupted images (source) to the natural image distribution (target). We argue that current methods\u2019 characteristic artifacts are caused by (1) linear approximation of the optimal path and (2) poor estimates of the source distribution. We show that calibrating the text conditioning of the source distribution can produce high-quality generation and translation results with little extra overhead. Our method can be easily applied across many domains, matching or beating the performance of specialized methods. We demonstrate its utility in text-to-2D, text-based NeRF optimization, translating paintings to real images, optical illusion generation, and 3D sketch-to-real. We compare our method to existing approaches for score distillation sampling and show that it can produce high-frequency details with realistic colors. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Diffusion models have shown tremendous success in modeling complex data distributions like images [51, 54, 3, 22], videos [59, 4] and robot action policies [13]. In domains where data is plentiful, they produce state-of-the-art results. Many data modalities, however, cannot enjoy the same scaling benefits due to their lack of sufficiently large datasets. In these cases, it is useful to exploit diffusion models trained on domains with rich data sources as a prior in an optimization framework. Score Distillation Sampling (SDS) [48, 69] and its variants [70, 20, 76] are a widely adopted way to optimize parametric images, i.e., images produced by a model like NeRF, with a pre-trained diffusion model. Despite being applicable to a wide range of applications, SDS is also known to suffer from several significant artifacts, such as oversaturation and oversmoothing. As such, several variants have been proposed to alleviate these artifacts [70, 76, 32], often at the cost of efficiency, diversity, or other artifacts. ", "page_idx": 0}, {"type": "text", "text": "In this paper, we investigate the core issues with SDS by casting the class of score distillation optimization problems as a Schr\u00f6dinger Bridge (SB) problem [55, 12, 11, 42], which finds the optimal transport between two distributions. Specifically, given some images from the current optimized distribution (e.g., renderings from a NeRF), applying the transport maps them to their pair images in a target distribution (e.g., text-conditioned natural image distribution). The density flow formed by these mappings is transport-optimal, as defined in the SB problem. In an optimization framework, the difference between paired source and target samples, computed with an SB, can be used as a gradient to update the source. Su et al. [65] have shown that this path can be explicitly solved using two pre-trained diffusion models. We show that one can also compose these models as an optimizer to approximate transport paths on the fly. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Under this framework, we can understand SDS and its variants as approximating a source-to-target distribution bridge with the difference of two denoising directions. The denoising scores point to the source and target distributions respectively, with the source representing the current optimized image that updates with each optimization step. ", "page_idx": 1}, {"type": "text", "text": "This framing reveals two sources of errors. First, these methods are a first-order approximation of the diffusion bridge. Specifically, Gaussian noise is sampled to perturb the current optimized image, and single denoising steps, instead of the full PF-ODE simulation, are used to estimate the transport. This induces error in estimating the desired path. Recent works [34, 41] that use multi-step estimation can be explained as mitigating this error. Second, estimating the denoising direction to the current source distribution is non-trivial, since the current optimized image may not necessarily look like a real image (e.g., initializing with Gaussian noise or starting from a render of an untextured 3D model). Our analysis reveals that SDS approximates the current distribution with the unconditional image distribution, which is not accurate and results in a distribution mismatch error. We show that recent SDS variants [70, 76, 32] can be seen as proposals to improve this distribution mismatch error. ", "page_idx": 1}, {"type": "text", "text": "Finally, our analysis motivates a simple method that rectifies the distribution mismatch issue without additional computational overhead. Our insight is that the large-scale text-to-image diffusion models learn from billions of caption-image pairs [56], where a breadth of image corruptions are present in their training sets. They are also equipped with powerful pre-trained text encoders, which empower the models with zero-shot capacity in generating unseen concepts [53, 52]. As such, simply describing the current source distribution with text, even if it is not part of the real image manifold, can approximate the distribution of the current optimized image, leading to improved transport paths. Our simple and efficient solution can be easily applied to any existing application that uses SDS. We show that it consistently improves the visual quality in the desired domain. We comprehensively compare our approach with standard distillation sampling methods over several generation tasks, where our approach matches or outperforms the baselines. ", "page_idx": 1}, {"type": "text", "text": "Our contributions are as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose to cast the problem of using a pre-trained diffusion model as a prior in an optimization problem as solving the Schr\u00f6dinger Bridge (SB) problem between two image distributions. Specifically, it can be seen as bridging the distribution of the current optimized image to the target distribution under a dual-bridge framework.   \n\u2022 We analyze recent SDS-based methods under the lens of our framework and explain the pros and cons of the individual methods.   \n\u2022 Our analysis motivates a simple yet effective alternative to SDS by using textual descriptions to specify the current optimized image distribution. It achieves consistently more realistic results than SDS, producing quality comparable with VSD [70] without its computational overhead. We compare various generation tasks to show its wall-clock efficiency and quality generations against state-of-the-art methods. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Score Distillation Sampling Modalities like 3D, 4D, sketch, and vector graphics (SVGs) lack the large-scale, diverse, and high-quality datasets needed to train a domain-specific diffusion model. In these domains, previous works explore exploiting image or video as a proxy modality [26, 16]. By computing the gradient on a proxy representation with a pretrained model, optimization in the target modality is viable with differentiable mappings, e.g. differentiable rasterization [33] for SVGs or differentiable rendering [44] for 3D objects and scenes. The seminal method, Score Distillation Sampling (SDS) [48], first proposed to apply a pretrained text-to-image diffusion model for text-to-3D generation. However, it requires a high classifier-free guidance weight and, therefore, suffers from artifacts such as over-saturation and over-smoothing. Recent works have built upon SDS to adapt it for editing tasks [30, 20, 46, 29] or more broadly improve over the original SDS formulation [28, 1, 70, 77, 76, 78]. NFSD [28] and LMC-SDS [1] inspect the individual components of the SDS gradient and propose methods to rectify the high guidance weights. However, the over", "page_idx": 1}, {"type": "image", "img_path": "I8PkICj9kM/tmp/5c291ac06d51249516f67e288f92b7763536bb9fb74fc74cbff3064f8c2d9e45.jpg", "img_caption": [], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "Figure 1: Optimization with diffusion models as approximation of a Schr\u00f6dinger Bridge Problem (SBP). (a) We propose to formulate optimization with diffusion models as bridging the distribution of the current optimized image $x_{\\theta}$ to the target distribution under a dual-bridge framework (a). Current methods can be interpreted as approximating the optimal transport $\\epsilon_{\\mathrm{SBP}}^{*}$ between these distributions via the difference between projections of a noised image $x_{\\theta,t}$ onto the two distributions. This analysis reveals two sources of error: (1) these gradients are linear approximations of the optimal path, as illustrated in (a), and (2) the source distribution used for computing this approximation (e.g., the unconditional distribution in SDS [48]) may not be aligned with the current distribution, illustrated in (b). ", "page_idx": 2}, {"type": "text", "text": "saturation problem is mitigated but not fully resolved. VSD [70] formulates the problem as particlebased variational inference and proposes to train a LoRA [24] on the fly to estimate the score of proxy distribution. We present a new framework that allows rethinking all the variants under the same lens. This framework also motivates a method that improves the quality of SDS without losing efficiency. ", "page_idx": 2}, {"type": "text", "text": "Visual Content Generation with SDS Since SDS was developed for text-to-3D generation, it has also been adopted to generate various other visual content such as SVGs [18, 73], sketches [72], texture [43, 6\u20138, 75], typography [25], 3D bodies [45], dynamic 4D scenes [2, 60, 37] and illusions [5]. Among these applications, text-to-3D has been the most active research direction. In addition to designing better distillation sampling methods [70, 77, 28], prior work has also studied the underlying 3D neural representations [74, 66, 35, 9] and leveraging multiview data to improve the 3D consistency [57, 40, 39, 49, 78]. We note that these explorations are orthogonal to our study and should be able to work jointly with our method. In this paper, we look into existing applications like text-based NeRF optimization, painting-to-real, and illusion generation. We also propose a new AR application called 3D sketch-to-real. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we present an analytical framework that casts the score distillation sampling (SDS) family of methods as instantiations of a Schr\u00f6dinger Bridge problem. We show that many recent SDS based methods can be interpreted as an online solver for the problem. That is, each SDS optimization step is a first-order approximation of a dual diffusion bridge formed by two probability flow (PF) ODEs [65]. We analyze SDS and its variants under this general framework. Then, we present a simple solution based on the analysis, which leads to significant quality improvement with little extra computational overhead. ", "page_idx": 2}, {"type": "text", "text": "3.1 Background ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Diffusion models define a forward \u201cnoising\" process that degrades data samples $\\mathbf{x}$ gradually from the image distribution to noised samples $\\mathbf{z}_{t}$ , and eventually the i.i.d. Gaussian distribution [23, 62]. This process is indexed by timesteps $t$ , where $t=1$ indexes the full Gaussian noise distribution and $t=0$ indexes the data distribution. A diffusion model, parameterized by $\\phi$ , is then trained to reverse this encoding process, iteratively transforming the noise distribution into the data distribution with the following denoising objective: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{Diff}}(\\phi,\\mathbf{x})=\\mathbb{E}_{t\\sim\\mathcal{U}(0,1),\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left[w(t)\\left\\|\\epsilon_{\\phi}\\left(\\alpha_{t}\\mathbf{x}+\\sigma_{t}\\epsilon;y,t\\right)-\\epsilon\\right\\|_{2}^{2}\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $w(t)$ is a loss weighting function, $y$ is a conditioning text prompt, and $\\alpha_{t}$ and $\\sigma_{t}$ are hyperparameters from the predefined noise schedule. ", "page_idx": 2}, {"type": "text", "text": "Probability Flow ODE. Denoising score matching [64, 27, 61] shows that the diffusion model denoising prediction can be rewritten as a score vector field: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x})=-\\frac{1}{\\sqrt{1-\\alpha_{t}}}\\epsilon_{t}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Because of its special connection to marginal probability densities, the resulting ODE is named the probability flow (PF) ODE with the following expression: ", "page_idx": 3}, {"type": "equation", "text": "$$\nd x=[f(\\mathbf{x},t)-\\frac{1}{2}g^{2}(t)\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}))]d t,\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $f(\\mathbf{x},t)$ and $g(t)$ are pre-defined schedule parameters. This PF-ODE can be solved deterministically [63], mapping a noise sample to its corresponding data sample through the reverse process and the opposite through the forward process (inversion). This cycle-consistent conversion between image and latent representations is important in establishing dual diffusion implicit bridges. ", "page_idx": 3}, {"type": "text", "text": "Dual Diffusion Implicit Bridges. Dual Diffusion Implicit Bridges (DDIBs) [65] compose a diffusion inversion and generation process for solving image-to-image translation problems without requiring a paired image dataset. Instead, DDIBs use two diffusion models trained on different domains (or, analogously, one model with two different text conditions). DDIB inverts the source image into a noise latent via the forward PF-ODE and then decodes the latent in the target domain via the reverse PF-ODE. DDIBs can be interpreted as a concatenation of the Schr\u00f6dinger Bridges from source-to-latent and latent-to-target, hence the dual bridges in its name. DDIBs enable solving transport between two distributions using a single pre-trained diffusion model. We build on this insight in an optimization context. ", "page_idx": 3}, {"type": "text", "text": "3.2 Optimization with Diffusion Model Approximates a Dual Schr\u00f6dinger Bridge ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Many generative vision tasks involve optimizing corrupted images to the image manifold. For example, in 3D generation, a 3D representation like NeRF is optimized to render natural images matching a prescribed text prompt. Methods like SDS enable this by using a pre-trained diffusion model as a prior. We propose formulating such optimization problems as solutions to an instantiation of a Schr\u00f6dinger Bridges Problem (SBP). SBP finds cost-optimal paths between a source image distribution $p_{\\mathrm{src}}$ and a target image distribution $p_{\\mathrm{tgt}}$ [68, 14]. Optimizing a parametrized image toward the natural image distribution can be cast as finding the optimal paths between the current optimized image(s) and the natural image distribution. Instead of solving this problem directly, which would require training a generative model from scratch [38, 14, 10], we show that pre-trained diffusion models can be exploited as an optimizer that approximates the path. Further, the gradient computed by the existing score distillation methods can be viewed as the first-order approximation of this path. This formulation is illustrated in Figure 1. ", "page_idx": 3}, {"type": "text", "text": "Let $\\mathbf{x}_{\\theta}\\in\\mathbb{R}^{d}$ represent a parametric image, i.e., an image produced differentiably by a model with parameter $\\theta$ , such as a NeRF. To leverage the pretrained diffusion model, we add noise $\\boldsymbol{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ to obtain a latent at timestep $t$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{x}_{\\theta,t}=\\alpha_{t}\\mathbf{x}_{\\theta}+\\sigma_{t}\\epsilon\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Suppose that $\\psi_{t^{\\prime},\\mathrm{{src}}}$ and $\\psi_{t^{\\prime},\\mathrm{{tgt}}}$ denote the paths obtained by solving the PF ODE as in Eq. 3 from $t$ to 0, both starting from $\\mathbf{x}_{\\theta,t}$ , such that $\\psi_{0,\\mathrm{src}}\\in p_{\\mathrm{src}},\\psi_{0,\\mathrm{tgt}}\\in p_{\\mathrm{tgt}},\\psi_{t,\\mathrm{src}}=\\psi_{t,\\mathrm{tgt}}=\\mathbf{x}_{\\theta,t}.$ This forms a dual diffusion bridge [65] from $\\psi_{0,\\mathrm{src}}$ to $\\psi_{0,\\mathrm{{tgt}}}$ . We approximate this path per-iteration using a pretrained diffusion model. We denote the displacement of this path as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathrm{SBP}}^{*}=\\psi_{0,\\mathrm{tgt}}-\\psi_{0,\\mathrm{src}}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Fully simulating this bridge involves solving two PF ODEs, which invokes dozens of neural function evaluations (NFEs) to estimate the gradient of each iteration. Instead, one can estimate each half of the bridge with a single-step prediction by computing two denoising directions $\\epsilon_{\\phi,\\mathrm{src}}$ and $\\epsilon_{\\phi,\\mathrm{tgt}}$ . We thus obtain a first-order approximation of a dual diffusion bridge with the difference vector: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathrm{SBP}}=\\epsilon_{\\phi,\\mathrm{tgt}}-\\epsilon_{\\phi,\\mathrm{src}},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "image", "img_path": "I8PkICj9kM/tmp/aa07c16b6fa15b32fd22a96d196483dbb73f665db84816d1941518ac3be9d494.jpg", "img_caption": ["(a) Variational Score Distillation (b) Delta Distillation Sampling (c) Classifier Score Distillation (2nd term) ", "Figure 2: Comparision of SDS variants under our analysis. We illustrate the major gradient components of different SDS variants and provide a straightforward comparison with \u03f5SBP. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "which is subject to the following sources of errors. ", "page_idx": 4}, {"type": "text", "text": "1. First-order approximation error. Instead of performing full PF-ODE simulations, the single-step noising and prediction are less accurate and induce errors. Recent work ISM [34] can be interpreted as reducing this error with a multi-step simulation to obtain $\\mathbf{x}_{\\theta,t}$ .   \n2. Source distribution mismatch. The dual diffusion bridge relies on $\\epsilon_{\\phi,\\mathrm{src}}$ accurately estimating the distribution of the current sample, $\\mathbf{x}_{\\theta}$ . A series of works can be viewed as improving this error [70, 28, 76] by computing more accurate $\\epsilon_{\\phi,\\mathrm{src}}$ . ", "page_idx": 4}, {"type": "text", "text": "We show that $\\epsilon_{\\phi,\\mathrm{tgt}}-\\epsilon_{\\phi,\\mathrm{src}}$ is an effective gradient when both the source and target distribution are well expressed. Next, we discuss the popular score distillation methods under this analysis. We argue that their characteristic artifacts can largely be understood due to the errors above. ", "page_idx": 4}, {"type": "text", "text": "3.3 Analyzing Existing Score Distillation Methods ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We analyze SDS and its variants through our framework by inspecting each component in the computed gradient. For notation, $y_{\\mathrm{tgt}}$ is the text prompt representing the target distribution, and $\\mathcal{Q}$ denotes the unconditional prompt. For each method, we present its gradient update and discuss its implications. ", "page_idx": 4}, {"type": "text", "text": "Score Distillation Sampling [48]: ", "text_level": 1, "page_idx": 4}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathrm{SDS}}=\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\boldsymbol{\\mathcal{D}},t\\right)+s\\cdot\\left(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tg}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\boldsymbol{\\mathcal{D}},t\\right)\\right)-\\epsilon,\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $s$ is the strength of classifier-free guidance. When $s$ is small, the $\\epsilon$ functions as an averaging term to regress the image to the mean. However, the SDS gradient has been shown to work best with extreme values of classifier-free guidance $s$ like 100. We can rewrite the gradient to emphasize how the conditional-unconditional delta dominates at high CFG scales. ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\epsilon_{\\mathrm{SDS}}=\\underbrace{s\\cdot\\left(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tgt}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\mathcal{D},t\\right)\\right)}_{\\mathrm{Dominant~when~}s\\gg1}+\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\mathcal{D},t\\right)-\\epsilon,}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Experimentally, we produce very similar results at high CFG with or without the non-dominant terms. We argue that SDS should be interpreted through the dominant term, which fits within our analysis. Under this interpretation, the unconditional direction $\\phi\\left(\\mathbf{x}_{\\theta,t};\\boldsymbol{\\mathcal{D}},t\\right)$ approximates the source distribution of $\\mathbf{X}_{\\theta}$ poorly, instead representing images of any identity with low contrast and geometric artifacts. Figure 1(b) illustrates the effect of a poor approximation. The bridge from the unconditional to conditional distribution leads to the characteristic oversaturation and smoothing of SDS results. ", "page_idx": 4}, {"type": "text", "text": "Delta Distillation Sampling [20]: ", "text_level": 1, "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\epsilon_{\\mathrm{DDS}}=\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tgt}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\mathrm{ref},t};y_{\\mathrm{src}},t\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where ${\\bf x}_{\\mathrm{ref},t}$ is a noised version of a reference image in the image editing task. As shown in Figure 2 (b), this increases the source distribution mismatch since $\\epsilon_{\\phi,\\mathrm{src}}$ is not calculated based on the current optimized image $\\mathbf{x}_{\\theta,t}$ . ", "page_idx": 4}, {"type": "text", "text": "Noise Free Score Distillation [28]: ", "text_level": 1, "page_idx": 4}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathrm{NFSD}}=(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\mathcal{D},t\\right)-(t<0.2)\\cdot\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{neg}},t\\right))+s\\cdot(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tg}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\mathcal{D},t\\right)),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where the strength of classifier-free guidance $s$ is set to 7.5 and $y_{\\mathrm{neg}}=^{\\epsilon}$ \u201cunrealistic, blurry, low quality ...\u201d. NFSD greatly reduces the guidance strength while it is observed to perform very similarly to SDS in practice. We can better explain this phenomenon since the prompt $y_{\\mathrm{neg}}$ does not accurately describe the source distribution as it omits the image\u2019s content. In addition, the second component with weight $s=7.5$ still forms the major part of the gradient, which is the dominant term in SDS. ", "page_idx": 5}, {"type": "text", "text": "Classifier Score Distillation [76]: ", "text_level": 1, "page_idx": 5}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathrm{CSD}}=w_{1}\\cdot(\\epsilon_{\\phi}\\left({\\bf x}_{\\theta,t};y_{\\mathrm{tgt}},t\\right)-\\epsilon_{\\phi}\\left({\\bf x}_{\\theta,t};\\mathcal{D},t\\right))+w_{2}\\cdot(\\epsilon_{\\phi}\\left({\\bf x}_{\\theta,t};\\mathcal{D},t\\right)-\\epsilon_{\\phi}\\left({\\bf x}_{\\theta,t};y_{\\mathrm{src}},t\\right)),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $w_{1}$ and $w_{2}$ are hyperparameters. As shown in Figure 2 (c), the second term approximates the bridge from the source distribution to the unconditional distribution, which is not ideal since it does not point to the target distribution. It explains the observation made by the authors [76] that this undermines the alignment with the text prompt. Therefore, the authors always anneal $w_{2}$ to 0 during the optimization. However, we show this often reintroduces the SDS artifacts in practice. ", "page_idx": 5}, {"type": "text", "text": "Variational Score Distillation [70, 32]: ", "text_level": 1, "page_idx": 5}, {"type": "equation", "text": "$$\n\\epsilon_{\\mathsf{V S D}}=\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\boldsymbol{\\mathcal{D}},t\\right)+s\\cdot\\left(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tgt}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};\\boldsymbol{\\mathcal{D}},t\\right)\\right)-\\epsilon_{L o R A}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tg}},t\\right).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Out of all the discussed methods, VSD attempts to minimize the source distribution mismatch error most directly by test-time finetuning a copy of the diffusion model with LoRA on the current set of $\\mathbf{x}_{\\theta}$ . Note that in the original paper, the use of LoRA was motivated based on a particle-based variational framework. Our analysis enables an alternative understanding of VSD. As shown in Figure 2 a), this approach is well-justified in our dual diffusion bridge framework. However, training a LoRA every iteration is computationally expensive, adds complexity, and introduces its own low-rank approximation errors. Given this insight, we propose a simple yet efficient approach to mitigating source distribution without LoRA. ", "page_idx": 5}, {"type": "text", "text": "3.4 Mitigating Source Distribution Mismatch with Textual Descriptions ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Our analysis reveals that the LoRA model in VSD most closely approximates the distribution of the current optimized parametrized image, addressing the distribution mismatch error. Unfortunately, it incurs $200-300\\bar{\\%}$ runtime overhead on top of SDS, making it impractical, despite its significant performance gains. With this understanding, we propose a simple approach that better expresses the source distribution. Our insight is that pre-trained diffusion models have learned the distribution of natural and corrupted images through a combination of powerful text representation and enormous image-caption datasets. We find that by simply describing image corruptions with a text prompt, we can improve our estimate of the source distribution. ", "page_idx": 5}, {"type": "text", "text": "Specifically, we propose to use the gradient ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\epsilon_{\\mathrm{ours}}=w\\cdot\\big(\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{tgt}},t\\right)-\\epsilon_{\\phi}\\left(\\mathbf{x}_{\\theta,t};y_{\\mathrm{src}},t\\right)\\!\\big),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where we get $y_{\\mathrm{src}}$ by adding descriptions of the current image distribution to $y_{\\mathrm{tgt}}$ (the base prompt). The remaining question is how to set this description. In generation tasks, we propose a simple two-stage solution. ", "page_idx": 5}, {"type": "text", "text": "1. We use \u03f5SDS to produce a generation with the method\u2019s characteristic artifacts: 2. We switch to optimization with our gradient, $\\epsilon_{\\mathrm{ours}}$ , to transport the image parameter toward the natural image distribution. ", "page_idx": 5}, {"type": "text", "text": "To describe the artifacts produced by SDS, we append the descriptors \u201c, oversaturated, smooth, pixelated, cartoon, foggy, hazy, blurry, bad structure, noisy, malformed\u201d and drop the descriptors of the high-quality generation. This description $y_{\\mathrm{src}}$ does not require hand-crafting based on problem domains\u2014it is fixed across all shown examples and use cases. As shown in Appendix Figure A5, we explored searching for other prompts but did not find that variations in these descriptions made a big difference. ", "page_idx": 5}, {"type": "text", "text": "In editing tasks, we have an initialization that $y_{\\mathrm{src}}$ describes accurately. In such cases, we omit the first SDS stage and only apply our gradient to optimization. We also append a \u201cdomain descriptor.\u201d For instance, in painting-to-real, this is simply \u201c, painting\u201d to represent the initial distribution. ", "page_idx": 5}, {"type": "image", "img_path": "I8PkICj9kM/tmp/3b8a0956c6112b5642e950d59bceb8c7083b0ec63149b568a582838381fea3d5.jpg", "img_caption": ["Figure 3: Text-to-image generation results with COCO Captions. We compare different score distillation methods for generating images with COCO captions by optimizing a randomly initialized image. DDIM sampling indicates the lower bound that the diffusion model can achieve. VSD [70] and our method generate the least color artifacts while ours is more efficient than VSD. "], "img_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "I8PkICj9kM/tmp/8933fba1fff130316b495af19e6521555261a36212639fe565a247afa0d0b5b2.jpg", "table_caption": ["Table 1: Zero-shot FID comparison with different score distillation methods. We report FID scores of text-to-image generation using 5K captions randomly sampled from the COCO dataset. The best score distillation result is indicated in bold, while the second best is underlined. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "While the use of such negative prompting has been explored before, such as in NFSD, our analysis motivates a principled way to incorporate it into score distillation. We find that these simple modifications significantly narrow the quality gap between SDS and resource-intensive methods like VSD. We verify this finding experimentally with qualitative results and quantitative comparisons across applicable tasks. ", "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we test our proposed method on several generation problems where SDS is adopted. We compare against SDS and other task-specific baselines. Note that our goal is not to show another state-of-the-art text-to-3D generation method, but to verify our findings, where the proposed score distillation approach based on textual description efficiently improves the results by mitigating the source distribution mismatch error. We first perform a thorough experiment in a controlled setting on text-to-image generation. Then, we compare it on text-guided NeRF optimization to SDS and VSD and evaluate the painting-to-real image translation task against image editing baselines. Please see more results in the appendix, including additional qualitative results and comparison, ablation studies and our method\u2019s application to optical illusion generation and 3D-sketch-to-real task. ", "page_idx": 6}, {"type": "text", "text": "4.1 Zero-Shot Text-to-Image Generation with Score Distillation ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To verify our analysis of existing SDS variants and the proposed method, we perform text-to-image generation by optimizing an image of size $64\\times64\\times4$ in the Stable Diffusion latent space [70, 28] (We explore other base models like MVDream [57] and SDXL [47] in Appendix Figure A3). The benefti of choosing image generation as the evaluation task is that its generation quality has the least confounding variables among other tasks. (e.g., in text-to-3D, many designs like regularizations [77], initialization [35], 3D representations [9, 67, 74, 66], and 2D prior models [57, 40, 39, 49, 78] could affect the final quality.) ", "page_idx": 6}, {"type": "image", "img_path": "I8PkICj9kM/tmp/c7df80c7914e9dc52d624ffb92f83723a9eef443d171acf62b9ee94cc9fbaad8.jpg", "img_caption": ["Figure 4: Text-guided NeRF optimization with different score distillation methods. We make a fair comparison of SDS and VSD for text-to-3D generation. For each generation, we show three uniformly sampled views. SDS results like the cottage and pepper mill still suffer from over-saturation problems, while ours and VSD can produce realistic details, color, and texture. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "We use the MS-COCO [36] dataset for the evaluation. Consistent with the prior study [3], we randomly sample 5K captions from the COCO validation set as conditions for generating images. For each caption, we optimize a randomly initialized the image with the score distillation gradients. We compare our method with several SDS variants including SDS [48], NFSD [28], CSD [76], and VSD [70]. For all the methods, we use the same learning rate of 0.01 and optimize for 2, 500 steps where we generally observe convergence. We compute the zero-shot FID [21] and CLIP FID scores [31] between these generated images and the ground truth images. We also report results generated by DDIM with 20 steps as a lower bound for renference. ", "page_idx": 7}, {"type": "text", "text": "We report the FID scores and the time to optimize one image in Table 1. Among all the score distillation methods, VSD [70] achieves the lowest FID scores. However, it requires training a LoRA along the optimization process. Instead, ours achieves a comparable FID score with over $3\\times$ faster speed. We visualize random examples generated by different score distillation methods in Figure 3. We notice that SDS and NSFD suffer from the over-saturation and over-smoothness issues. CDS has slightly fewer color artifacts. VSD and ours generate the samples that most closely resemble the DDIM sampling. ", "page_idx": 7}, {"type": "text", "text": "4.2 Text-guided NeRF Optimization ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We now evaluate the text-to-3D generation problem, where we intentionally aim to exclude variables that could affect the generation quality other than the score distillation methods. We use the ThreeStudio [19] repository to optimize a NeRF with settings tuned for ProlificDreamer stage 1 (NeRF optimization) [70]. Note that we do not perform stages 2 and 3, i.e. geometry fine-tuning and texture refinement. Specifically, we initialize the NeRF with the method proposed by Magic3D [35], use the regularization losses on the sparsity and opacity, and optimize for 25K steps. We adopt the native SDS and VSD guidance implementations for comparison. In Appendix Figure A4, we evaluate our methods with additional text-to-3D systems, including Fantasia3D [9], Magic3D [35] and CSD [76]. ", "page_idx": 7}, {"type": "text", "text": "We first show visual comparisons of different score distillation methods in Figure 4. We notice that SDS tends to generate fewer details, as shown by the rock and chair examples, and sometimes suffers from oversaturation issues, as in 2D, as demonstrated by the cottage and seashell examples. Instead, both VSD and ours can generate highly photo-realistic 3D objects, while ours does not require training a LoRA model and shares a similar computational cost as SDS. ", "page_idx": 7}, {"type": "table", "img_path": "I8PkICj9kM/tmp/dc98a10d9e7e2c3c47830ed42beef97bed3e84aa64288d7829156601b2b8c528.jpg", "table_caption": ["Table 2: Quantitative comparisons of NeRF optimization. We measure the average CLIP similarity of rendered views using SDS, VSD and our. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "I8PkICj9kM/tmp/b04f8dd87bc3aed05f1983bb19e5bf836d45bc1117173c66c9fad8ed7bc2b77b.jpg", "img_caption": ["Figure 5: Painting-to-Real comparison. We compare our gradient in optimization to image restoration and image-conditional generation baselines. While SDEdit produces convincing textures, it is difficult to find a strength value that balances structure and quality. Other baselines fail to reproduce natural image quality, while our method produces the best combination of quality and faithfulness. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "We also perform a quantitative evaluation and user study on the NeRFs optimized based on 31 different text prompts. Note that this number is similar to the choice of existing works on the text-to3D task [34, 32, 15]. However, different from these works that ignore the confounding 3D variables that contribute to the generation quality, we disentangle this by isolating the score distillation method as the only comparison variable. We follow these works to evaluate the generation quality with CLIP [50]. We report the CLIP similarity in Table 2. Our method consistently outperforms SDS and achieves comparable results with VSD. In addition, in a user study consisting of 37 users, shown pairwise comparisons of rotating 3D renders (i.e., comparisons of our result and a random choice of VSD or SDS, with the prompt: \u201cFor a text-to-3D system, given the prompt $[p J]$ , which result would you be happiest with?\u201d), our results were chosen in $75.7\\%$ of all responses. ", "page_idx": 8}, {"type": "text", "text": "4.3 Painting-to-Real ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We examine our method\u2019s ability to serve as a general-purpose realism prior. Paintings are \"nearmanifold\" images, meaning they do not possess natural image statistics but live near the image distribution in image space. An effective image prior should guide a painting toward a nearby natural image through optimization. ", "page_idx": 8}, {"type": "text", "text": "We initialize a latent image by encoding scans of the artwork through Stable Diffusion\u2019s encoder. We specify a prompt for each painting to condition the diffusion model and then apply the second optimization stage of our method (SDS stage omitted). We experimented with automatically generating prompts via pretrained vision language models but found the results inconsistent, so we leave this to future work. Since the large image datasets used to train diffusion models contain artwork, we append the domain descriptor \u201c, painting\u201d to $y_{\\mathrm{src}}$ to optimize away from this distribution. ", "page_idx": 8}, {"type": "text", "text": "While SDS is proposed to leverage a pretrained text-to-image diffusion model as an image prior, its artifacts make it ineffective in practice. In comparison, our method realistically synthesizes details and relights the image naturally. We observe that SDS methods diverge more easily in 2D experiments than in 3D but that the issue can be mostly resolved with tuning. A future goal is to formulate a gradient that can be applied idempotently [58]. We compare with image reconstruction baselines in Figure 5 and provide a small gallery of painting-to-real results in Figure 6. ", "page_idx": 8}, {"type": "text", "text": "5 Discussion on Solving the Linear Approximation Error ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "As we have shown that reducing the distribution mismatching error can significantly improve the generation quality of the score distillation optimization, it is natural to ask whether one can also reduce the first-order approximation error, induced by linear bridge estimation, to improve the results further. Several recent studies, including SDI [41] and ISM [34], can be viewed as mitigating this error by replacing the single-step estimation with a multi-step estimation to an intermediate timestep. Under our framework, one can estimate the entire dual bridge by solving both PF-ODE paths. Specifically, via inversion, one can solve the PF-ODE path from $\\psi_{\\mathrm{0,src}}$ to $x_{\\theta,T}$ , and then walk to the $\\psi_{0,\\mathrm{tgt}}$ via sampling. In this way, it is possible to obtain the most accurate gradient direction with little approximation error $\\epsilon_{\\mathrm{SBP}}^{*}=w\\cdot(\\psi_{0,\\mathrm{tgt}}-\\psi_{0,\\mathrm{src}})$ . We refer to this approach as \u201cfull path\u201d. Note that this resolves the linear approximation error, and it is independent of handling the source approximation error, which could be addressed via the discussed text description or LoRA. ", "page_idx": 8}, {"type": "image", "img_path": "I8PkICj9kM/tmp/24eeaa834ac0e8b1f4c14dd059153d68ecc2e0b20f10930092b2354688f30c39.jpg", "img_caption": ["Figure 6: Painting-to-Real results.We show selected Painting-to-Real samples with diverse art styles and subjects. Initialization images are shown on the left, optimized images are shown on the right. "], "img_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "I8PkICj9kM/tmp/c349c638366fbae754ebc1bfed1d799cedfeec327db5dcb69eda5bb50530f82b.jpg", "table_caption": ["Table 3: Reducing first-order approximation error improves generation quality. Using full PF-ODE simulation (\u201cFull-path\u201d) to replace single-step prediction improves visual quality in all settings. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "However, solving the inversion ODE is not trivial [27]. We noticed that the inversion can exaggerate the distribution mismatch error and cause the optimization to get stuck at a local optimum at the beginning of the optimization. Instead, the stochasticity of the single-step methods often shows more robustness to the input image. Therefore, we first perform the single-step score distillation optimization to obtain reasonable results and then switch to solving the full bridge. We also anneal the timestep endpoint of the bridge throughout the optimization. With this approach, we can now explore addressing both the first and second sources of error. The first source (linear approximation) has \u201cfull-path,\u201d and the second source (source distribution mismatch error) has \u201cBridge\u201d or \u201cLoRA\u201d. We find that using the \u201cfull-path\u201d multi-step (mitigating linear approximation error) always outperforms the single-step methods, achieving a lower FID, as shown in Table 3. However, the same trend does not fully transfer to the text-to-3D experiments. We observe that solving the entire bridge typically introduces additional artifacts and makes the optimization less stable. We leave the best way of leveraging this gradient for future research exploration. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We present an analysis that formulates the use of a pre-trained diffusion model in an optimization framework as seeking an optimal transport between two distributions. Under this lens, we analyze SDS variants with a unified framework. We also develop a simple approach based on textual descriptions that work comparably well to the best-performing approach, VSD, without its significant computational burden. However, neither approach has yet to achieve the quality and diversity of images generated by the reverse process. We hope that our analysis enables the development of a more sophisticated solution that can one day achieve the same quality and diversity as the reverse process in an optimization framework. Combining our proposed method with multi-step approximations like ISM [34] or schedules like DreamFlow [32] could mitigate the first-order approximation error and further improve the efficiency, which is an interesting future research direction. With the rise of high-quality video diffusion models, we anticipate that the question of how to effectively use such models as a prior in various problems will become even more important. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgment. We thank Matthew Tancik, Jiaming Song, Riley Peterlinz, Ayaan Haque, Ethan Weber, Konpat Preechakul, Amit Kohli and Ben Poole for their helpful feedback and discussion. This project is supported in part by a Google research scholar award, IARPA DOI/IBC No. 140D0423C0035, and NSF grant No. IIS-2213335. The views and conclusions contained herein are those of the authors and do not represent the official policies or endorsements of these institutions. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Thiemo Alldieck, Nikos Kolotouros, and Cristian Sminchisescu. Score distillation sampling with learned manifold corrective, 2024.   \n[2] Sherwin Bahmani, Ivan Skorokhodov, Victor Rong, Gordon Wetzstein, Leonidas Guibas, Peter Wonka, Sergey Tulyakov, Jeong Joon Park, Andrea Tagliasacchi, and David B. Lindell. 4d-fy: Text-to-4d generation using hybrid score distillation sampling. arXiv preprint arXiv:2311.17984, 2023.   \n[3] Yogesh Balaji, Seungjun Nah, Xun Huang, Arash Vahdat, Jiaming Song, Qinsheng Zhang, Karsten Kreis, Miika Aittala, Timo Aila, Samuli Laine, Bryan Catanzaro, et al. eDiff-I: Text-toimage diffusion models with an ensemble of expert denoisers. arXiv preprint arXiv:2211.01324, 2022.   \n[4] Andreas Blattmann, Robin Rombach, Huan Ling, Tim Dockhorn, Seung Wook Kim, Sanja Fidler, and Karsten Kreis. Align your latents: High-resolution video synthesis with latent diffusion models. In CVPR, 2023.   \n[5] Ryan Burgert, Xiang Li, Abe Leite, Kanchana Ranasinghe, and Michael Ryoo. Diffusion illusions: Hiding images in plain sight, June 2023.   \n[6] Tianshi Cao, Karsten Kreis, Sanja Fidler, Nicholas Sharp, and KangXue Yin. Texfusion: Synthesizing 3d textures with text-guided image diffusion models. In ICCV, 2023.   \n[7] Dave Zhenyu Chen, Haoxuan Li, Hsin-Ying Lee, Sergey Tulyakov, and Matthias Nie\u00dfner. Scenetex: High-quality texture synthesis for indoor scenes via diffusion priors. arXiv preprint arXiv:2311.17261, 2023.   \n[8] Dave Zhenyu Chen, Yawar Siddiqui, Hsin-Ying Lee, Sergey Tulyakov, and Matthias Nie\u00dfner. Text2tex: Text-driven texture synthesis via diffusion models. arXiv preprint arXiv:2303.11396, 2023.   \n[9] Rui Chen, Yongwei Chen, Ningxin Jiao, and Kui Jia. Fantasia3d: Disentangling geometry and appearance for high-quality text-to-3d content creation. In ICCV, 2023.   \n[10] Tianrong Chen, Guan-Horng Liu, and Evangelos A Theodorou. Likelihood training of schr\u00f6dinger bridge using forward-backward sdes theory. In ICLR, 2022.   \n[11] Yongxin Chen and Tryphon Georgiou. Stochastic bridges of linear systems. IEEE Transactions on Automatic Control, 61(2):526\u2013531, 2016.   \n[12] Yongxin Chen, Tryphon T. Georgiou, and Michele Pavon. On the relation between optimal transport and schr\u00f6dinger bridges: A stochastic control viewpoint. Journal of Optimization Theory and Applications, 169:671\u2013691, 2014.   \n[13] Cheng Chi, Siyuan Feng, Yilun Du, Zhenjia Xu, Eric Cousineau, Benjamin Burchfiel, and Shuran Song. Diffusion policy: Visuomotor policy learning via action diffusion. In RSS, 2023.   \n[14] Valentin De Bortoli, James Thornton, Jeremy Heng, and Arnaud Doucet. Diffusion schr\u00f6dinger bridge with applications to score-based generative modeling. In NeurIPS, 2021.   \n[15] Wenqi Dong, Bangbang Yang, Lin Ma, Xiao Liu, Liyuan Cui, Hujun Bao, Yuewen Ma, and Zhaopeng Cui. Coin3d: Controllable and interactive 3d assets generation with proxy-guided conditioning. arXiv preprint arXiv:2405.08054, 2024.   \n[16] Kevin Frans, Lisa Soros, and Olaf Witkowski. Clipdraw: Exploring text-to-drawing synthesis through language-image encoders. Advances in Neural Information Processing Systems, 35:5207\u20135218, 2022.   \n[17] Daniel Geng, Inbum Park, and Andrew Owens. Visual anagrams: Generating multi-view optical illusions with diffusion models. CVPR, 2024.   \n[18] Shuyang Gu, Dong Chen, Jianmin Bao, Fang Wen, Bo Zhang, Dongdong Chen, Lu Yuan, and Baining Guo. Vector quantized diffusion model for text-to-image synthesis. In CVPR, pages 10696\u201310706, 2022.   \n[19] Yuan-Chen Guo, Ying-Tian Liu, Ruizhi Shao, Christian Laforte, Vikram Voleti, Guan Luo, Chia-Hao Chen, Zi-Xin Zou, Chen Wang, Yan-Pei Cao, and Song-Hai Zhang. threestudio: A unified framework for 3d content generation. https://github.com/threestudio-project/ threestudio, 2023.   \n[20] Amir Hertz, Kfir Aberman, and Daniel Cohen-Or. Delta denoising score. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2328\u20132337, 2023.   \n[21] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. In NeurIPS, 2017.   \n[22] Jonathan Ho, William Chan, Chitwan Saharia, Jay Whang, Ruiqi Gao, Alexey Gritsenko, Diederik P Kingma, Ben Poole, Mohammad Norouzi, David J Fleet, et al. Imagen video: High definition video generation with diffusion models. arXiv preprint arXiv:2210.02303, 2022.   \n[23] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In NeurIPS, 2020.   \n[24] Edward J Hu, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, Weizhu Chen, et al. Lora: Low-rank adaptation of large language models. In ICLR, 2022.   \n[25] Shir Iluz, Yael Vinker, Amir Hertz, Daniel Berio, Daniel Cohen-Or, and Ariel Shamir. Word-asimage for semantic typography. SIGGRAPH, 2023.   \n[26] Ajay Jain, Ben Mildenhall, Jonathan T Barron, Pieter Abbeel, and Ben Poole. Zero-shot text-guided object generation with dream fields. In CVPR, pages 867\u2013876, 2022.   \n[27] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. arXiv preprint arXiv:2206.00364, 2022.   \n[28] Oren Katzir, Or Patashnik, Daniel Cohen-Or, and Dani Lischinski. Noise-free score distillation. arXiv preprint arXiv:2310.17590, 2023.   \n[29] Subin Kim, Kyungmin Lee, June Suk Choi, Jongheon Jeong, Kihyuk Sohn, and Jinwoo Shin. Collaborative score distillation for consistent visual editing. In NeurIPS, 2023.   \n[30] Juil Koo, Chanho Park, and Minhyuk Sung. Posterior distillation sampling. arXiv preprint arXiv:2311.13831, 2023.   \n[31] Tuomas Kynk\u00e4\u00e4nniemi, Tero Karras, Miika Aittala, Timo Aila, and Jaakko Lehtinen. The role of imagenet classes in fr\u00e9chet inception distance. In ICLR, 2022.   \n[32] Kyungmin Lee, Kihyuk Sohn, and Jinwoo Shin. Dreamflow: High-quality text-to-3d generation by approximating probability flow. In ICLR, 2024.   \n[33] Tzu-Mao Li, Michal Luk\u00e1\u02c7c, Micha\u00ebl Gharbi, and Jonathan Ragan-Kelley. Differentiable vector graphics rasterization for editing and learning. ACM Transactions on Graphics (TOG), 39(6):1\u201315, 2020.   \n[34] Yixun Liang, Xin Yang, Jiantao Lin, Haodong Li, Xiaogang Xu, and Yingcong Chen. Luciddreamer: Towards high-fidelity text-to-3d generation via interval score matching. In CVPR, 2023.   \n[35] Chen-Hsuan Lin, Jun Gao, Luming Tang, Towaki Takikawa, Xiaohui Zeng, Xun Huang, Karsten Kreis, Sanja Fidler, Ming-Yu Liu, and Tsung-Yi Lin. Magic3d: High-resolution text-to-3d content creation. In CVPR, 2023.   \n[36] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In ECCV, 2014.   \n[37] Huan Ling, Seung Wook Kim, Antonio Torralba, Sanja Fidler, and Karsten Kreis. Align your gaussians: Text-to-4d with dynamic 3d gaussians and composed diffusion models, 2024.   \n[38] Guan-Horng Liu, Arash Vahdat, De-An Huang, Evangelos A Theodorou, Weili Nie, and Anima Anandkumar. I2sb: image-to-image schr\u00f6dinger bridge. In ICML, 2023.   \n[39] Ruoshi Liu, Rundi Wu, Basile Van Hoorick, Pavel Tokmakov, Sergey Zakharov, and Carl Vondrick. Zero-1-to-3: Zero-shot one image to 3d object. In CVPR, 2023.   \n[40] Yuan Liu, Cheng Lin, Zijiao Zeng, Xiaoxiao Long, Lingjie Liu, Taku Komura, and Wenping Wang. Syncdreamer: Generating multiview-consistent images from a single-view image. In ICLR, 2024.   \n[41] Artem Lukoianov, Haitz S\u00e1ez de Oc\u00e1riz Borde, Kristjan Greenewald, Vitor Campagnolo Guizilini, Timur Bagautdinov, Vincent Sitzmann, and Justin Solomon. Score distillation via reparametrized ddim. arXiv preprint arXiv:2405.15891, 2024.   \n[42] Christian L\u00e9onard. A survey of the schr\u00f6dinger problem and some of its connections with optimal transport, 2013.   \n[43] Gal Metzer, Elad Richardson, Or Patashnik, Raja Giryes, and Daniel Cohen-Or. Latent-nerf for shape-guided generation of 3d shapes and textures. In CVPR, pages 12663\u201312673, 2023.   \n[44] Ben Mildenhall, Pratul P Srinivasan, Matthew Tancik, Jonathan T Barron, Ravi Ramamoorthi, and Ren Ng. Nerf: Representing scenes as neural radiance fields for view synthesis. Communications of the ACM, 65(1):99\u2013106, 2021.   \n[45] Lea Muller, Vickie Ye, Georgios Pavlakos, Michael J. Black, and Angjoo Kanazawa. Generative proxemics: A prior for 3D social interaction from images. 2024.   \n[46] Hyelin Nam, Gihyun Kwon, Geon Yeong Park, and Jong Chul Ye. Contrastive denoising score for text-guided latent diffusion image editing. CVPR, 2022.   \n[47] Dustin Podell, Zion English, Kyle Lacey, Andreas Blattmann, Tim Dockhorn, Jonas M\u00fcller, Joe Penna, and Robin Rombach. Sdxl: Improving latent diffusion models for high-resolution image synthesis, 2023.   \n[48] Ben Poole, Ajay Jain, Jonathan T Barron, and Ben Mildenhall. Dreamfusion: Text-to-3d using 2d diffusion. In ICLR, 2023.   \n[49] Guocheng Qian, Jinjie Mai, Abdullah Hamdi, Jian Ren, Aliaksandr Siarohin, Bing Li, Hsin-Ying Lee, Ivan Skorokhodov, Peter Wonka, Sergey Tulyakov, and Bernard Ghanem. Magic123: One image to high-quality 3d object generation using both 2d and 3d diffusion priors. In ICLR, 2024.   \n[50] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, and Ilya Sutskever. Learning transferable visual models from natural language supervision. In ICML, 2021.   \n[51] Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical text-conditional image generation with clip latents. arXiv preprint arXiv:2204.06125, 2022.   \n[52] Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical text-conditional image generation with clip latents. arXiv preprint arXiv:2204.06125, 2022.   \n[53] Aditya Ramesh, Mikhail Pavlov, Gabriel Goh, Scott Gray, Chelsea Voss, Alec Radford, Mark Chen, and Ilya Sutskever. Zero-shot text-to-image generation. In ICML, 2021.   \n[54] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, Kamyar Ghasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, et al. Photorealistic text-to-image diffusion models with deep language understanding. In NeurIPS, 2022.   \n[55] E. Schr\u00f6dinger. Sur la th\u00e9orie relativiste de l\u2019\u00e9lectron et l\u2019interpr\u00e9tation de la m\u00e9canique quantique. Annales de l\u2019institut Henri Poincar\u00e9, 2(4):269\u2013310, 1932.   \n[56] Christoph Schuhmann, Romain Beaumont, Richard Vencu, Cade Gordon, Ross Wightman, Mehdi Cherti, Theo Coombes, Aarush Katta, Clayton Mullis, Mitchell Wortsman, et al. Laion5b: An open large-scale dataset for training next generation image-text models. NeurIPS, 2022.   \n[57] Yichun Shi, Peng Wang, Jianglong Ye, Long Mai, Kejie Li, and Xiao Yang. MVDream: Multi-view diffusion for 3d generation. In ICLR, 2024.   \n[58] Assaf Shocher, Amil V Dravid, Yossi Gandelsman, Inbar Mosseri, Michael Rubinstein, and Alexei A Efros. Idempotent generative network. In ICLR, 2024.   \n[59] Uriel Singer, Adam Polyak, Thomas Hayes, Xi Yin, Jie An, Songyang Zhang, Qiyuan Hu, Harry Yang, Oron Ashual, Oran Gafni, Devi Parikh, Sonal Gupta, and Yaniv Taigman. Make-a-video: Text-to-video generation without text-video data. In ICLR, 2023.   \n[60] Uriel Singer, Shelly Sheynin, Adam Polyak, Oron Ashual, Iurii Makarov, Filippos Kokkinos, Naman Goyal, Andrea Vedaldi, Devi Parikh, Justin Johnson, et al. Text-to-4d dynamic scene generation. arXiv preprint arXiv:2301.11280, 2023.   \n[61] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In ICML, 2015.   \n[62] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In ICLR, 2021.   \n[63] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models, 2022.   \n[64] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In ICLR, 2021.   \n[65] Xuan Su, Jiaming Song, Chenlin Meng, and Stefano Ermon. Dual diffusion implicit bridges for image-to-image translation. In ICLR, 2022.   \n[66] Jiaxiang Tang, Jiawei Ren, Hang Zhou, Ziwei Liu, and Gang Zeng. Dreamgaussian: Generative gaussian splatting for efficient 3d content creation, 2023.   \n[67] Christina Tsalicoglou, Fabian Manhardt, Alessio Tonioni, Michael Niemeyer, and Federico Tombari. Textmesh: Generation of realistic 3d meshes from text prompts. arXiv preprint arXiv:2304.12439, 2023.   \n[68] Gefei Wang, Yuling Jiao, Qian Xu, Yang Wang, and Can Yang. Deep generative learning via schr\u00f6dinger bridge. In ICML, 2021.   \n[69] Haochen Wang, Xiaodan Du, Jiahao Li, Raymond A. Yeh, and Greg Shakhnarovich. Score jacobian chaining: Lifting pretrained 2d diffusion models for 3d generation. In CVPR, pages 12619\u201312629, June 2023.   \n[70] Zhengyi Wang, Cheng Lu, Yikai Wang, Fan Bao, Chongxuan Li, Hang Su, and Jun Zhu. Prolificdreamer: High-fidelity and diverse text-to-3d generation with variational score distillation. NeurIPS, 2023.   \n[71] Tong Wu, Guandao Yang, Zhibing Li, Kai Zhang, Ziwei Liu, Leonidas Guibas, Dahua Lin, and Gordon Wetzstein. Gpt-4v(ision) is a human-aligned evaluator for text-to-3d generation. In CVPR, 2024.   \n[72] Ximing Xing, Chuang Wang, Haitao Zhou, Jing Zhang, Qian Yu, and Dong Xu. Diffsketcher: Text guided vector sketch synthesis through latent diffusion models. In NeurIPS, 2023.   \n[73] Ximing Xing, Haitao Zhou, Chuang Wang, Jing Zhang, Dong Xu, and Qian Yu. Svgdreamer: Text guided svg generation with diffusion model. arXiv preprint arXiv:2312.16476, 2023.   \n[74] Taoran Yi, Jiemin Fang, Junjie Wang, Guanjun Wu, Lingxi Xie, Xiaopeng Zhang, Wenyu Liu, Qi Tian, and Xinggang Wang. Gaussiandreamer: Fast generation from text to 3d gaussians by bridging 2d and 3d diffusion models, 2023.   \n[75] Kim Youwang, Tae-Hyun Oh, and Gerard Pons-Moll. Paint-it: Text-to-texture synthesis via deep convolutional texture map optimization and physically-based rendering. In CVPR, 2024.   \n[76] Xin Yu, Yuan-Chen Guo, Yangguang Li, Ding Liang, Song-Hai Zhang, and Xiaojuan Qi. Text-to-3d with classifier score distillation, 2023.   \n[77] Junzhe Zhu and Peiye Zhuang. Hifa: High-fidelity text-to-3d generation with advanced diffusion guidance, 2023.   \n[78] Zi-Xin Zou, Weihao Cheng, Yan-Pei Cao, Shi-Sheng Huang, Ying Shan, and Song-Hai Zhang. Sparse3d: Distilling multiview-consistent diffusion for object reconstruction from sparse views, 2023. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "image", "img_path": "I8PkICj9kM/tmp/2fded4ea3c9f60d3c231d9db36321a1abcffcbff182092b9e61e94c62b773fbd.jpg", "img_caption": ["Figure A1: 3D sketch-to-real. We introduce a conditional generation task in 3D where a coarse human-drawn mesh is optimized into a high-quality mesh. While SDS and our gradient both adhere to the prompt and shape conditions, our method produces higher fidelity colors and texture. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this appendix, we discuss the additional experiment details and provide more visual results, including optical illusion sketch, text-based NeRF optimization, and 3D paint-to-real results. We also perform an ablation study of our method. ", "page_idx": 15}, {"type": "text", "text": "A Additional Experimental Setup ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this section, we describe our experimental setups in more detail. ", "page_idx": 15}, {"type": "text", "text": "Text-to-image generation with score distillation. We use the stable-diffusion-v2-1-base model by default for our experiments if not specified. For CSD, we follow the original paper [76] to use $w_{1}\\,=\\,w_{2}\\,=\\,40$ at the initialization steps and anneal $w_{2}\\,=\\,0$ within the first 500 steps. We use $s=100$ for SDS and $s=7.5$ for NFSD and VSD, which are consistent with the best practice. We use $s=40$ and $w=25$ for our method. And we optimize with $\\epsilon_{\\mathrm{SDS}}$ loss for 500 iterations and then switch to $\\epsilon_{\\mathrm{ours}}$ for the rest of 2, 000 iterations. For all the methods, we use a learning rate of 0.01, and we use a learning rate of $1e-4$ to train the LoRA in VSD. ", "page_idx": 15}, {"type": "text", "text": "Text-guided NeRF optimization with score distillation. For our method, we optimize with \u03f5SDS loss for 20, 000 iterations and then switch to $\\epsilon_{\\mathrm{ours}}$ for the rest of 5, 000 iterations. We use $s=100$ and $w=1$ for our method. We find that a high $s$ is necessary to establish geometry in the first stage of the text-to-3D setting, but our method is not too sensitive to this hyperparameter in 2D. We use the rest of the learning rates and regularization strengths as the default settings. ", "page_idx": 15}, {"type": "text", "text": "B More Visual Results ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this section, we provide extra visual results. Specifically, we show 3D sketch-to-real and optical illusion generation as additional applications of our method. We also report more comparisons and ablation studies of text-based NeRF optimzition. ", "page_idx": 15}, {"type": "text", "text": "B.1 Additional Applications ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "3D Sketch-to-Real Head-mounted displays with hand tracking are a natural platform for a sort of \"3D sketching,\" where 3D primitives trail from your hand like ink from a pen. The resulting coarse mesh is structurally accurate but lacks geometric or texture detail. To this end, we propose a new application that transfers these 3D sketches to more realistic versions. We extend our text-to-3D solution to generate these details. ", "page_idx": 15}, {"type": "text", "text": "We first fit an implicit SDF volume to multi-view renders of the mesh, then apply our gradient with the same schedule as in text-based NeRF optimization. We lower the learning rate for geometry parameters to prevent divergence from the guiding sketch. Holding other hyperparameters equal, we compare our gradient and the SDS gradient in Figure A1. ", "page_idx": 15}, {"type": "image", "img_path": "I8PkICj9kM/tmp/b6438a3966bb649c3940082b44e697edef8fcb4b67b787bd49d5c9c04a53df2a.jpg", "img_caption": ["Figure A2: Diffusion illusions. We generate overlaid optic illusions with SDS and our method. While SDS suffers from color artifacts, our methods produce more details and proper color. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "I8PkICj9kM/tmp/ae8e2d323bb8ad5582ab911e14eac0dae52fe353ef39b09a807ffd7b694654be.jpg", "img_caption": ["Figure A3: Comparison of SDS and ours with MVDream [57] and SDXL [47]. We compare SDS with our two-stage process in two new settings (MVDream and SDXL). The two-stage process produces more natural colors and realistic details. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Illusion Generation. Prior works have shown that diffusion models can be leveraged to generate optical illusions [17, 5]. In these settings, the same image looks semantically different when transformed. To use the diffusion model sampling process, a previous study shows that the transformation has to be orthogonal [17]. However, there remain interesting illusions that are not formed by orthogonal transformation. One such is the rotation overlays. Given a base and a rotator image, by composing the base image with the rotator image at different angles, rotation overlays use two images to display four images. As such composition is not defined by an orthogonal matrix, the existing method [5] employs SDS to optimize the base and rotator images. Such a method suffers from the over-saturation problem, as shown in Figure A2. We show that our method can generate such optical illusions with better visual quality. ", "page_idx": 16}, {"type": "text", "text": "B.2 Additional Qualitative Results ", "page_idx": 16}, {"type": "text", "text": "Additional text-to-image results. We explore our proposed method across different base models in text-to-image experiments, including MVDream [57] and SDXL [47]. Since MVDream denoises four camera-conditioned images jointly, we treat the canvas of four images as a single optimization variable for the SDS gradient. In Figure A3, we compare the SDS baseline to the proposed two-stage optimization, in which we generate more natural colors and detail. This is especially noticeable in the background around the crocodile and donkey. ", "page_idx": 16}, {"type": "image", "img_path": "I8PkICj9kM/tmp/dc61a428a623f39ae5ba263082d22124b2de28337e30561c00b4516d19966d80.jpg", "img_caption": ["Figure A4: Comparison with more text-to-3D baselines. We apply our two-stage optimization as a drop-in replacement of SDS in Fantasia3D [9], Magic3D [35] and CSD [76] for texture refinement. We notice that this change greatly improves details and visual quality and reduces SDS artifacts. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "I8PkICj9kM/tmp/f49fcf5636f24adc092bc1f9d50e084030c10f7101d941533bbd12fc7d726b11.jpg", "img_caption": ["Figure A5: Ablation study of negative prompts. We compare SDS results with those from the two-stage optimization (bridge) using our negative prompts and five sets of negative prompts generated by GPT (GPT 1 is the first set, GPT 2 second, GPT 3 third, etc.). All negative prompts produce similar results and outperform the SDS baseline. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Additional text-guided NeRF optimization results. For text-guided NeRF optimization comparison against baselines, we show more results in Fig. A7. We test on the prompts used in the original paper [70] and additional prompts [71] that we find to be challenging. We notice that SDS often suffers from over-saturation problems. Our method does not require training a LoRA while it can still improve SDS by getting rid of the color artifacts and generating more details. ", "page_idx": 17}, {"type": "text", "text": "We also perform comparisons with more competitive baselines. We test with Fantasia3D [9], Magic3D [35], and CSD [76] through a drop-in replacement of SDS with our method. Specifically, all three methods optimize a textured DMTet, which is initialized from an SDS-optimized NeRF, using SDS or CSD for $5\\mathrm{k}$ or 10k iterations. We replace the SDS or CSD stage of these approaches with the two-stage optimization motivated by our framework. Just like our text-to-3D NeRF experiment, we perform the first stage for $60\\%$ of iterations and the second stage for $40\\%$ of iterations. Note that we keep all the other hyperparameters the same, which were tuned for the baselines, not our method. This replacement leads to the same optimization time as the original methods. For Fantaisia3D and Magic3D, we use threestudio for fair comparison (Magic3D does not have code available) and the default prompts, which are generally believed to work the best with this reimplementation. For CSD, we use the official implementation. As shown in Figure A4, our method improves the visual quality of all the methods by reducing the oversaturated artifacts of SDS and improving the details. ", "page_idx": 17}, {"type": "text", "text": "B.3 Ablation Study ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Ablation study of the negative prompts. We explore how the choice of negative prompts in our proposed methods affects the optimization. We prompted GPT-4 through ChatGPT a single time to generate alternative negative prompts using the following: ", "page_idx": 17}, {"type": "text", "text": "Here\u2019s a set of \"negative prompts\" to append to a text-to-image prompt that describe undesirable image characteristics: \", oversaturated, smooth, pixelated, cartoon, foggy, hazy, blurry, bad structure, noisy, malformed\" I want to try a variety of them, please brainstorm many of roughly the same length. ", "page_idx": 17}, {"type": "image", "img_path": "I8PkICj9kM/tmp/938c4b60cbfaccf6b2c3697a763bc519cea0dec14e68653a9a391e0d9233bd9a.jpg", "img_caption": ["Figure A6: Ablation study of our method without stage 1. We show directly optimizing with $y_{\\mathrm{src}}$ from the start can undermine the quality of the geometry and produce unnecessary content. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "1. \", washed out, grainy, distorted, flat, smeared, overexposed, undefined, choppy, glitchy, dull\"   \n2. \", low contrast, jumbled, faint, abstract, over-sharpened, muddy, cluttered, vague, jagged, poor detail\"   \n3. \", soft focus, muffled, streaky, patchy, ghosted, murky, unbalanced, skewed, mismatched, overcrowded\"   \n4. \", overbright, scrambled, bleary, blocky, misshapen, uneven, fragmented, obscured, chaotic, messy\"   \n5. \", dull tones, compressed, smeary, out of focus, unrefined, lopsided, erratic, irregular, spotty, stark\" ", "page_idx": 18}, {"type": "text", "text": "We keep other hyperparameters identical and only ablate the negative prompts with the variations. As shown in Figure A5, we do not see obvious differences between our prompts and the variants. ", "page_idx": 18}, {"type": "text", "text": "Ablation study of stage 2. Instead of switching to stage 2 during the optimization process, we ablate with starting without any SDS optimization from the beginning. That is, we always use the $y_{\\mathrm{src}}$ with the descriptors \u201c, oversaturated, smooth, pixelated, cartoon, foggy, hazy, blurry, bad structure, noisy, malformed\u201d. As shown in Figure A6, this makes it hard to generate the proper geometry even though the local texture looks reasonable and is inclined to produce excessive details that are not described by the texts. We suspect that this is because using $y_{\\mathrm{src}}$ increases the mismatching error at the beginning of the optimization process when the initialization does not resemble the target prompt at all. ", "page_idx": 18}, {"type": "text", "text": "C Potential Social Impact ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "We analyze how to use a pre-trained image diffusion as a prior in an optimization setup, necessary for domains such as 3D. On the positive side, these models can empower individuals to make 3D content creation more accessibly without requiring specialized skills. Additionally, professional artists and designers could rapidly prototype and visualize their ideas, accelerating the creative process. On the negative side, the ease of generating visual content could facilitate the spread of misinformation, proliferate biases in the training set and enable the usage of generated content for malicious purposes. In addition, there are ethical concerns regarding the potential for job displacement in industries reliant on traditional art-making skills and the copyright issues appeared in the training dataset. ", "page_idx": 18}, {"type": "image", "img_path": "I8PkICj9kM/tmp/6980f648b53c6a74998dc86d3a99d3e2188905b5f436834be3dbb4556e169b89.jpg", "img_caption": ["Figure A7: Additional comparison of text-guided NeRF optimization. We show more examples to compare with different distillation methods, SDS and VSD. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: Yes, and we also summarized the contributions of the paper at the end of the introduction, which is supported by our analysis in the method section and results in the experiment section. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 20}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: We discuss the limitations in the conclusion section. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 20}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: Our theoretical result of score distillation as an optimization that approximates a Schr\u00f6dinger Bridge path is obvious once we connect the score distillation formula with the Dual Diffusion Implicit Bridge. We also provide an intuitive error analysis of existing SDS variants. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 21}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We provide the details of experiments and will release the code to reproduce the results. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 21}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 22}, {"type": "text", "text": "Justification: We will release the code with an opensource license when the paper is published. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 22}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We mention these details in the experiment section of the main paper and the appendix. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 22}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 22}, {"type": "text", "text": "Justification: Most of our experiments are too expensive for us to run multiple rounds. For example, each run of our text-to-image generation with baseline VSD takes 1.3K GPU hours. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 22}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide these details in the experiment section as well as Table 1. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 23}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 23}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We briefly discuss this in the conclusion section. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 23}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] Justification: Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks. ", "page_idx": 24}, {"type": "text", "text": "\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 24}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets. ", "page_idx": 24}, {"type": "text", "text": "\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [No] Justification: ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 25}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We use human evaluation for our text-to-3D experiment, and we include the details about how the experimentation was done. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 25}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 25}]