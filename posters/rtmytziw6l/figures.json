[{"figure_path": "RtMyTzIW6l/figures/figures_2_1.jpg", "caption": "Figure 1: Permutation examples with directed edges denoting mapping rules.", "description": "This figure illustrates four types of permutations: identity, swapping, cyclic, and reflective. Each permutation is represented by a directed graph where nodes represent elements and edges represent mappings between elements. The identity permutation maps each element to itself. The swapping permutation swaps two elements. The cyclic permutation shifts the elements in a circular manner. The reflective permutation reverses the order of elements.", "section": "3 Background and preliminaries"}, {"figure_path": "RtMyTzIW6l/figures/figures_5_1.jpg", "caption": "Figure 2: An overview of the SymILO framework.", "description": "This figure presents a schematic overview of the SymILO framework.  It illustrates the data flow, processing stages, and key components involved in training a symmetry-aware model for integer linear program (ILP) solution prediction. The framework consists of three main stages: data processing (including the input ILPs, their optimal solutions, and their symmetry groups), model training (using a graph neural network and an alternating optimization algorithm that leverages the ILP's symmetry), and downstream tasks (where the model predictions are used by different algorithms to find feasible solutions). The figure highlights how symmetry information is incorporated into both the training process and the subsequent downstream tasks to improve the quality of the predictions.", "section": "4.3 An overview of the SymILO framework"}, {"figure_path": "RtMyTzIW6l/figures/figures_7_1.jpg", "caption": "Figure 3: The training and test risks v.s. the number of epochs on four benchmark problems.", "description": "This figure displays the training and testing empirical risks plotted against the number of epochs for four different benchmark problems (IP, SMSP, PESP, and PESPD).  The plot shows the training and testing risks for both the classic model and the symmetry-aware model. The results demonstrate that the symmetry-aware model consistently achieves lower empirical risks compared to the classic model after training convergence, supporting the effectiveness of the proposed symmetry-aware approach.", "section": "6.1 On empirical risks and Top-m% error"}, {"figure_path": "RtMyTzIW6l/figures/figures_8_1.jpg", "caption": "Figure 4: Relative primal gaps at different times. Three downstream tasks, i.e., fix-and-optimize, local branching, and node selection, are evaluated with a time limit of 800 seconds. The results of the same downstream task use the same color. In addition, the relative primal gap of the Tuned CPLEX running on a single thread is also reported as the blue dashed line.", "description": "This figure shows the relative primal gaps achieved by different downstream tasks (fix-and-optimize, local branching, node selection) at various time points up to 800 seconds.  Each downstream task uses a specific color, allowing for easy comparison. The performance of a tuned CPLEX solver (single-thread) is included as a baseline (blue dashed line).  The figure illustrates how the SymILO framework improves the primal gap across all downstream tasks compared to the baseline methods.", "section": "6.2 Downstream results"}, {"figure_path": "RtMyTzIW6l/figures/figures_12_1.jpg", "caption": "Figure 5: Equivalent solutions of Example B.0.1.", "description": "This figure illustrates equivalent solutions to the bin packing problem (Example B.0.1) presented earlier in the paper. Since all bins are identical, swapping them does not change the feasibility or the objective value.  The figure visually demonstrates how different arrangements of items within the bins represent equivalent solutions to the optimization problem. The key takeaway is that the symmetry of the problem (identical bins) leads to multiple equivalent solutions.", "section": "B ILP examples with different symmetry group"}, {"figure_path": "RtMyTzIW6l/figures/figures_14_1.jpg", "caption": "Figure 6: Equivalent solutions of Example B.0.2.", "description": "This figure illustrates equivalent solutions for Example B.0.2, a problem involving placing ticks on a circle such that distances between ticks are distinct.  The leftmost circle shows an initial solution. The middle circle demonstrates a rotation of the ticks, resulting in an equivalent solution because distances remain unchanged. The rightmost circle shows a reflection of the ticks, again producing an equivalent solution due to preserved distances.  This highlights the concept of symmetry in the problem, where certain permutations of solutions yield the same objective value.", "section": "B ILP examples with different symmetry group"}]