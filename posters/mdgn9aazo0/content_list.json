[{"type": "text", "text": "From Similarity to Superiority: Channel Clustering for Time Series Forecasting ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jialin Chen1, Jan Eric Lenssen2,3, Aosong Feng1, Weihua $\\mathbf{H}\\mathbf{u}^{2}$ ,   \nMatthias Fey2, Leandros Tassiulas1, Jure Leskovec2,4, Rex Ying1 1Yale University, 2Kumo.AI, 3Max Planck Institute for Informatics, 4Stanford University ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Time series forecasting has attracted significant attention in recent decades. Previous studies have demonstrated that the Channel-Independent (CI) strategy improves forecasting performance by treating different channels individually, while it leads to poor generalization on unseen instances and ignores potentially necessary interactions between channels. Conversely, the Channel-Dependent (CD) strategy mixes all channels with even irrelevant and indiscriminate information, which, however, results in oversmoothing issues and limits forecasting accuracy. There is a lack of channel strategy that effectively balances individual channel treatment for improved forecasting performance without overlooking essential interactions between channels. Motivated by our observation of a correlation between the time series model\u2019s performance boost against channel mixing and the intrinsic similarity on a pair of channels, we developed a novel and adaptable Channel Clustering Module (CCM). CCM dynamically groups channels characterized by intrinsic similarities and leverages cluster information instead of individual channel identities, combining the best of CD and CI worlds. Extensive experiments on real-world datasets demonstrate that CCM can (1) boost the performance of CI and CD models by an average margin of $2.4\\%$ and $7.2\\%$ on long-term and short-term forecasting, respectively; (2) enable zero-shot forecasting with mainstream time series forecasting models; (3) uncover intrinsic time series patterns among channels and improve interpretability of complex time series models 1. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Time series forecasting has attracted a surge of interest across diverse fields, ranging from economics, energy [1, 2], weather [3, 4], to transportation planning [5, 6]. The complexity of the task is heightened by factors including seasonality, trend, noise in the data, and potential cross-channel information. ", "page_idx": 0}, {"type": "text", "text": "Despite the numerous deep learning time series models proposed recently [7, 8, 9, 10, 11, 12, 13, 14], an unresolved challenge persists in the effective management of channel interaction within the forecasting framework [15, 16]. Previous works have explored two primary channel strategies: Channel-Independent (CI) and Channel-Dependent (CD) strategies. The Channel-Independent (CI) strategy has shown promise in better forecasting performance by having individual models for each channel. However, a critical drawback is its limited generalizability and robustness on unseen channels [17]. Besides, it tends to overlook potential interactions between various channels. Conversely, the Channel-Dependent (CD) strategy models all channels as a whole and captures intricate channel relations, while they tend to show oversmoothing and have trouble fitting to individual channels, especially when the similarity between channels is very low. Moreover, existing ", "page_idx": 0}, {"type": "image", "img_path": "MDgn9aazo0/tmp/07b30c8025c62131cd29627f2795f62fb69e6dccb77273a996f00847eab19e95.jpg", "img_caption": [], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: The pipeline of applying Channel Clustering Module (CCM) to general time series models. (a) is the general framework of most time series models. (b) illustrates two modified modules when applying CCM: Cluster Assigner and Cluster-aware Feed Forward. Cluster Assigner learns channel clustering based on intrinsic similarities and creates prototype embeddings for each cluster via a cross-attention mechanism. The clustering probabilities $\\{p_{i,k}\\}$ are subsequently used in Cluster-aware Feed Forward to average $\\{\\theta_{k}\\}_{k=1}^{K}$ , which are layer weights assigned to $K$ clusters, obtaining weights $\\theta^{i}$ for the $i$ -th channel. The learned prototypes retain pre-trained knowledge, enabling zero-shot forecasting on unseen samples in both univariate and multivariate scenarios. ", "page_idx": 1}, {"type": "text", "text": "models typically treat univariate data in a CI manner, neglecting the interconnections between time series samples, even though these dependencies are commonly observed and beneficial in real-world scenarios, such as stock market or weather forecasting [18, 19, 20]. ", "page_idx": 1}, {"type": "text", "text": "Proposed work. To address the aforementioned challenges, we propose a Channel Clustering Module (CCM) that balances individual channel treatment and captures necessary cross-channel dependencies simultaneously. CCM is motivated by the key observations that CI and CD models typically rely on channel identity information. The level of reliance is anti-correlated with the similarity between channels (see Sec. 4.1 for an analysis). This intriguing phenomenon alludes to the model\u2019s analogous behavior on similar channels. The proposed CCM thereby involves the strategic clustering of channels into cohesive clusters, where intra-cluster channels exhibit a higher degree of similarity. To capture the underlying time series patterns within these clusters, we employ cluster-aware Feed Forward to assign independent weights to each cluster and replace individual channel treatment with individual cluster treatment. Moreover, CCM learns expressive prototype embeddings in training, which enables zero-shot forecasting on unseen samples by grouping them into appropriate clusters. ", "page_idx": 1}, {"type": "text", "text": "CCM is a plug-and-play solution that is adaptable to most mainstream time series models. We evaluate the effectiveness of CCM on four different time series backbones (aka. base models): TSMixer [7], DLinear [8], PatchTST [21], and TimesNet [13]. It can also be applied to other state-ofthe-art models for enhanced performance. Extensive experiments verify the superiority of CCM in long-term and short-term forecasting benchmarks, achieving an average margin of $2.4\\%$ and $7.2\\%$ , respectively. Additionally, we collect stock data from a diverse range of companies to construct a new stock univariate dataset. Leveraging information from intra-cluster samples, CCM consistently shows a stronger ability to accurately forecast stock prices in the dynamic and intricate stock market. Moreover, CCM enhances zero-shot forecasting capacities of time series backbones in cross-domain scenarios, which further highlights the robustness and versatility of CCM. ", "page_idx": 1}, {"type": "text", "text": "The contributions of this paper are: (1) We propose a novel and unified channel strategy, i.e., CCM, which is adaptable to most mainstream time series models. CCM explores the optimal trade-off between channel individual treatment and cross-channel modeling, (2) CCM demonstrates superiority in improving performance on long-term and short-term forecasting, and (3) through learning prototypes from clusters, CCM enables zero-shot forecasting on unseen samples in both univariate and multivariate scenarios. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Time Series Forecasting Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Traditional machine learning methods such as Prophet [22, 23], ARIMA [24] capture the trend component and seasonality in time series [25]. As data availability continues to grow, deep learning methods revolutionized this field, introducing more complex and efficient models [26, 27]. Convolutional Neural Networks (CNNs) [13, 14, 28, 29, 30], have been widely adopted to capture local temporal dependencies. Recurrent Neural Networks (RNNs) [31, 32, 33, 34, 28] excel in capturing sequential information, yet they often struggle with longer sequences. Transformer-based models [11, 35, 12, 21, 36, 37, 9, 38, 10, 39, 40], typically equipped with self-attention mechanisms [41], demonstrate their proficiency in handling long-range dependencies, although they require substantial computational resources. Recently, linear models [42, 43, 44], e.g., DLinear [8], TSMixer [7], have gained popularity for their simplicity and effectiveness in long-term time series forecasting, but they may underperform with non-linear and complex patterns. Besides, traditional tricks, including trend-seasonal decomposition [8, 45, 46] and multi-periodicity analysis [47, 48, 13, 49, 50, 51, 52] continue to play a crucial role in aiding in the preprocessing stage for advanced models. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "2.2 Channel Strategies in Time Series Forecasting ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Most deep learning models [12, 39, 10] adopt the Channel-Dependent (CD) strategy, aiming to harness the full spectrum of information across channels. Conversely, the Channel-Independent (CI) approaches [21, 8] build forecasting models for each channel independently. Prior works on CI and CD strategy [17, 15, 53, 54, 16] present that CI leads to higher capacity and lower robustness, whereas CD is the opposite. Predicting residuals with regularization (PRReg) [17] is thereby proposed to incorporate a regularization term in the objective to encourage smoothness in future forecasting. However, the essential challenge from the model design perspective has not been solved and it remains challenging to develop a balanced channel strategy. Prior research has explored effective clustering of channels to improve the predictive capabilities in diverse applications, including image classification [55], natural language processing (NLP) [56, 57], anomaly detection [58, 59, 60]. For instance, in traffic prediction [61, 62], clustering techniques have been proposed to group relevant traffic regions to capture intricate spatial patterns. Despite the considerable progress in these areas, the potential and effect of channel clustering in time series forecasting remain under-explored. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Time Series Forecasting. Formally, let $X=[\\pmb{x}_{1},\\dots\\pmb{x}_{T}]\\in\\mathbb{R}^{T\\times C}$ be a time series, where $T$ is the length of historical data. $\\mathbf{\\boldsymbol{x}}_{t}\\in\\mathbb{R}^{C}$ represents the observation at time $t$ . $C$ denotes the number of variates (i.e., channels). The objective is to construct a predictive model $f$ that estimates the future values of the series, $Y=[{\\hat{\\mathbf{x}}}_{T+1},\\dots,{\\hat{\\mathbf{x}}}_{T+H}]\\in\\mathbb{R}^{H\\times C}$ , where $H$ is the forecasting horizon. We use $X_{[:,i]}\\in\\mathbb{R}^{T}$ ( $X_{i}$ for simplicity) to denote the $i$ -th channel in the time series. ", "page_idx": 2}, {"type": "text", "text": "Channel Dependent (CD) and Channel Independent (CI). The CI strategy models each channel $X_{i}$ separately and ignores any potential cross-channel interactions. This approach is typically denoted as $f^{(i)}:\\mathbb{R}^{T}\\rightarrow\\mathbb{R}^{H}$ for $i=1,\\cdot\\cdot\\cdot,C$ , where $f^{(i)}$ is specifically dedicated to the $i$ -th channel. Refer to Appendix A.2 for more details. In contrast, the CD strategy models all the channels as a whole with a function $f:\\mathbb{R}^{T\\times C}\\rightarrow\\mathbb{R}^{H\\times C}$ . This strategy is essential in scenarios where channels are not just parallel data streams but are interrelated, such as in financial markets or traffic flows. ", "page_idx": 2}, {"type": "text", "text": "4 Proposed Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this work, we propose a Channel Clustering Module (CCM), a model-agnostic method that is adaptable to most mainstream time series models. The pipeline of applying CCM is visualized in Figure 1. General time series models, shown in Figure 1(a), typically consist of three core components [15, 63]: an optional normalization layer (e.g., RevIN [64], SAN [65]), temporal modules including linear layers, transformer-based, or convolutional backbones, and a feed-forward layer that forecasts the future values. Motivated by the empirical observation discussed in Sec. 4.1, CCM presents with a cluster assigner preceding the temporal modules, followed by a cluster-aware Feed Forward (Sec. 4.2). The cluster assigner implements channel clustering based on intrinsic similarities and employs a cross-attention mechanism to generate prototypes for each cluster, which stores the knowledge from the training set and endows the model with zero-shot forecasting capacities. ", "page_idx": 2}, {"type": "text", "text": "4.1 Motivation for Channel Similarity ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To motivate our similarity-based clustering method, we conduct the following toy experiment. We select four recent and popular time series models with different backbones. TSMixer [7] and DLinear are linear models. PatchTST [21] is a transformer-based model with a patching mechanism and TimesNet [13] is a convolutional network that captures multi-periodicity in data. Among these, TSMixer and TimesNet utilize a Channel-Dependent strategy while DLinear and PatchTST adopt the Channel-Independent design. We train a time series model across all channels and evaluate the channel-wise Mean Squared Error (MSE) loss on the test set. Then, we repeat training while randomly shuffilng channels in each batch. Note that for both CD and CI models, this means channel identity information will be removed. We report the average performance gain in terms of MSE loss across all channels based on the random shuffling experiments (denoted as $\\Delta\\mathcal{L}(\\%))$ in Table 1. ", "page_idx": 3}, {"type": "text", "text": "We attribute the models\u2019 performance decrease in the random shuffling experiments to the loss of channel identity information. We see that all models rely on channel identity information to achieve better performance. Next, we define channel similarity based on radial basis function kernels [66] as ", "page_idx": 3}, {"type": "text", "text": "Table 1: Averaged performance gain from channel identity information $(\\Delta{\\mathcal{L}}(\\%))$ and Pearson Correlation Coefficients $(P C C)$ between $\\{\\Delta\\mathcal{L}_{i j}\\}_{i,j}$ and $\\{\\mathsf{S I M}\\big(X_{i},X_{j}\\big)\\}_{i,j}$ . The values are averaged across all test samples. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathrm{SIM}(X_{i},X_{j})=\\exp(\\frac{-\\|X_{i}-X_{j}\\|^{2}}{2\\sigma^{2}}),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\sigma$ is a scaling factor. Note that the similarity is computed on the standardized time series to avoid scaling differences. More details are discussed in Appendix A.1. The performance ", "page_idx": 3}, {"type": "table", "img_path": "MDgn9aazo0/tmp/0e760c640dcdae411f872e850d5bbe15af2a88f3ca25578521007f2c3b7b409a.jpg", "table_caption": [], "table_footnote": [], "page_idx": 3}, {"type": "text", "text": "difference in MSE from the random shuffilng experiment for channel $i$ is denoted as $\\Delta\\mathcal{L}_{i}$ . We define $\\Delta\\mathcal{L}_{i j}:=|\\Delta\\mathcal{L}_{i}-\\Delta\\mathcal{L}_{j}|$ and calculate the Pearson Correlation Coefficients (PCC) between $\\{\\Delta\\mathcal{L}_{i j}\\}_{i,j}$ and $\\{\\mathsf{S I M}\\big(X_{i},X_{j}\\big)\\}_{i,j}$ , as shown in Table 1. The toy example verifies the following two assumptions: (1) Existing forecasting methods heavily rely on channel identity information. (2) This reliance clearly anti-correlates with channel similarity: for channels with high similarity, channel identity information is less important. Together, these two assumptions motivate us to design an approach that provides cluster identity instead of channel identity, combining the best of both worlds: high capacity and generalizability. ", "page_idx": 3}, {"type": "text", "text": "4.2 CCM: Channel Clustering Module ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Channel Clustering. Motivated by the above observations, we first initialize a set of $K$ cluster embeddings $\\{c_{1},\\cdot\\cdot\\cdot,c_{K}\\}$ , where $\\dot{c_{k}}\\in\\mathbb{R}^{d}$ , $d$ is the hidden dimension and $K$ is a hyperparameter. Given a multivariate time series $X\\,\\in\\,\\mathbb{R}^{T\\times C}$ , each channel in the input $X_{i}$ is transformed into a $d$ -dimensional channel embedding $h_{i}$ through an MLP. The probability that a given channel $X_{i}$ is associated with the $k$ -th cluster is the normalized inner-product of the cluster embedding $c_{k}$ and the channel embedding $h_{i}$ , which is computed as ", "page_idx": 3}, {"type": "equation", "text": "$$\np_{i,k}=\\mathrm{Normalize}(\\frac{c_{k}^{\\top}h_{i}}{\\left\\|c_{k}\\right\\|\\left\\|h_{i}\\right\\|})\\in[0,1].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The normalization operator ensures that $\\textstyle\\sum_{k}p_{i,k}=1$ and validates the clustering probability distribution across $k$ clusters. We utilize repara meterization trick [67] to obtain the clustering membership matrix $\\mathbf{M}\\in\\mathbb{R}^{C\\times K}$ where $\\mathbf{M}_{i k}\\approx\\bar{\\mathbf{B}}\\mathrm{ernoulli}(p_{i,k})$ . Higher probability $p_{i,k}$ results in $\\mathbf{M}_{i k}$ close to 1, leading to the deterministic existence of certain channels in the corresponding cluster. ", "page_idx": 3}, {"type": "text", "text": "Prototype Learning. The cluster assigner also creates a $d$ -dimensional prototype embedding for each cluster in the training phase. Let $\\mathbf{C}=[c_{1},\\cdot\\cdot\\cdot\\ ,c_{K}]\\in\\mathbb{R}^{K\\times d}$ denote the cluster embedding, and $\\mathbf{H}=[h_{1},\\cdot\\cdot\\cdot\\,,h_{C}]\\in\\mathbb{R}^{C\\times d}$ denote the hidden embedding of the channels. To emphasize the intra-cluster channels and remove interference from out-of-cluster channel information, we design a modified cross-attention as follows, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\widehat{\\mathbf{C}}=\\mathrm{Normalize}\\left(\\mathrm{exp}(\\frac{(W_{Q}\\mathbf{C})(W_{K}\\mathbf{H})^{\\top}}{\\sqrt{d}})\\odot\\mathbf{M}^{\\top}\\right)W_{V}\\mathbf{H},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where the clustering membership matrix $\\mathbf{M}$ is an approximately binary matrix to enable sparse attention on intra-cluster channels specifically. $W_{Q}$ , $W_{K}$ and $W_{V}$ are learnable parameters. The prototype embedding $\\widehat{\\mathbf{C}}\\in\\mathbb{R}^{K\\times d}$ serves as the updated cluster embedding for subsequent clustering probability computing in Eq. 2. ", "page_idx": 4}, {"type": "text", "text": "Cluster Loss. We further introduce a specifically designed loss function for the clustering quality, termed ClusterLoss, which incorporates both the alignment of channels with respective clusters and the distinctness between different clusters in a self-supervised context. Let $\\mathbf{S}\\in\\mathbb{R}^{C\\times C}$ denote the channel similarity matrix $\\mathbf{S}_{i j}=\\mathsf{S I M}(X_{i},X_{j})$ defined in Eq. 1. The ClusterLoss is formulated as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{C}=-\\operatorname{Tr}\\left(\\mathbf{M}^{\\top}\\mathbf{S}\\mathbf{M}\\right)+\\operatorname{Tr}\\left(\\left(\\mathbf{I}-\\mathbf{M}\\mathbf{M}^{\\top}\\right)\\mathbf{S}\\right),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\operatorname{Tr}$ indicates a trace operator. $\\operatorname{Tr}\\left(\\mathbf{M}^{\\top}\\mathbf{S}\\mathbf{M}\\right)$ maximizes the channel similarities within clusters, which is a fundamental requirement for effective clustering. $\\mathrm{Tr}\\left(\\left(\\mathbf{I}-\\mathbf{M}\\mathbf{M}^{\\top}\\right)\\mathbf{S}\\right)$ instead encourages separation between clusters, which further prevents overlap and ambiguity in clustering assignments. $\\mathcal{L}_{C}$ captures meaningful time series prototypes without relying on external labels or annotations. The overall loss function thereby becomes $\\mathcal{L}=\\mathcal{L}_{F}+\\beta\\mathcal{L}_{C}$ , where ${\\mathcal{L}}_{F}$ is the general forecasting loss such as MSE loss; and $\\beta$ is a regularization parameter for a balance between forecasting accuracy and cluster quality. ", "page_idx": 4}, {"type": "text", "text": "Cluster-aware Feed Forward. Instead of using individual Feed Forward per channel in a CI manner or sharing one Feed Forward across all channels in a CD manner, we assign a separate Feed Forward to each cluster to capture the underlying shared time series patterns within the clusters. In this way, we use cluster identity to replace channel identity. Each Feed Forward is parameterized with a single linear layer due to its efficacy in time series forecasting [8, 15, 7]. Let $h_{\\theta_{k}}(\\cdot)$ represent the linear layer for the $k$ -th cluster with weights $\\theta_{k}$ . $Z_{i}$ represents the hidden embedding of the $i$ -th channel before the last layer. The final forecast is thereby averaged across the outputs of all cluster-aware Feed Forward with $\\{p_{i,k}\\}$ as weights, e.g., $\\begin{array}{r}{Y_{i}=\\stackrel{\\cdot}{\\sum}_{k}p_{i,k}\\stackrel{\\bullet}{h}_{\\theta_{k}}(Z_{i})}\\end{array}$ for the $i$ -th channel. For computational efficiency, it is equivalent to $Y_{i}=h_{\\theta^{i}}(Z_{i})$ with averaged weights $\\begin{array}{r}{\\theta^{i}=\\sum_{k}p_{i,k}\\theta_{k}}\\end{array}$ . ", "page_idx": 4}, {"type": "text", "text": "Univariate Adaptation. In the context of univariate time series forecasting, we extend the proposed method to clustering on samples. We leverage the similarity between two univariate time series as defined in Eq. 1, and classify univariate time series with comparable patterns into the same cluster. This univariate adaptation allows it to capture interrelation within samples and extract valuable insights from analogous time series. This becomes particularly valuable in situations where meaningful dependencies exist among various univariate samples, such as the stock market. ", "page_idx": 4}, {"type": "text", "text": "Zero-shot Forecasting. Zero-shot forecasting is useful in time series applications where data privacy concerns restrict the feasibility of training models from scratch for unseen samples. The prototype embeddings acquired during the training phase serve as a compact representation of the pre-trained knowledge and can be harnessed for seamless knowledge transfer to unseen samples or new channels in a zero-shot setting. The pre-trained knowledge is applied to unseen instances by computing the clustering probability distribution on the pre-trained clusters, following Eq. 2, which is subsequently used for averaging cluster-aware Feed Forward. The cross-attention is disabled to fix the prototype embeddings in zero-shot forecasting. It is worth noting that zero-shot forecasting is applicable to both univariate and multivariate scenarios. We refer to Appendix B for detailed discussion. ", "page_idx": 4}, {"type": "text", "text": "4.3 Complexity Analysis ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "CCM effectively strikes a balance between the CI and CD strategies. On originally CI models, CCM introduces strategic clustering on channels, which not only reduces the model complexity but also enhances their generalizability. Simultaneously, CCM increases the model complexity on originally CD models with negligible overhead for higher capacities. We refer to Figure 5 for empirical analysis. Theoretically, the computational complexity of clustering probability computation (Eq. 2) and the cross-attention (Eq. 3) are $\\mathcal{O}(K C d)$ , where $K,C$ are the number of clusters and channels, respectively, and $d$ is the hidden dimension. One may also use other attention mechanisms [68, 69, 70] for efficiency. The complexity of cluster-aware Feed Forward scales linearly in $C,K$ , and the forecasting horizon $H$ . ", "page_idx": 4}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "CCM consistently improves performance based on CI or CD models by significant margins across multiple benchmarks and settings, including long-term forecasting on 9 public multivariate datasets (Sec. 5.2); short-term forecasting on 2 univariate datasets (Sec. 5.3); and zero-shot forecasting in cross-domain and cross-granularity scenarios (Sec. 5.4). ", "page_idx": 5}, {"type": "text", "text": "5.1 Experimental Setup ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets. For long-term forecasting, we experiment on 9 popular benchmarking datasets across diverse domains [11, 12, 71], including weather, traffic and electricity. M4 dataset [72] is used in short-term forecasting, which is a univariate dataset that covers time series across diverse domains and various sampling frequencies from hourly to yearly. We further provide a new stock time series dataset with 1390 univariate time series. Each time series records the price history of an individual stock spanning 10 years. Due to the potential significant fluctuations in stock performance across different companies, this dataset poses challenges for capturing diverse and evolving stock patterns in financial markets. The statistics of long- and short-term datasets are shown in Table 2 and Table 3. ", "page_idx": 5}, {"type": "table", "img_path": "MDgn9aazo0/tmp/6506d1bc3e661c70be8dcc1a03b47d487775d42b0fc41ac64333d29de190f522.jpg", "table_caption": ["Table 2: The statistics of datasets in long-term forecasting. Horizon is $\\{96,192,336,720\\}$ . "], "table_footnote": [], "page_idx": 5}, {"type": "table", "img_path": "MDgn9aazo0/tmp/4de864015adeab74609e8bf8dfd5d2411e5c954a5821eb024e4f9da343557cca.jpg", "table_caption": ["Table 3: Dataset details of M4 and Stock in shortterm forecasting. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "We follow standard protocols [11, 12, 13] for data splitting on public benchmarking datasets. As for the stock dataset, we divide the set of stocks into train/validation/test sets with a ratio of 7:2:1. Therefore, validation/test sets present unseen samples (i.e., stocks) for model evaluation. This evaluation setting emphasizes the data efficiency aspect of time series models for scenarios where historical data is limited or insufficient for retraining from scratch given unseen instances. More details on datasets are provided in Appendix C.1. ", "page_idx": 5}, {"type": "text", "text": "Base Models and Experimental Details. CCM is a model-agnostic channel strategy that can be applied to arbitrary time series forecasting models for improved performance. We meticulously select four recent state-of-the-art time series models as base models: TSMixer [7], DLinear [8], PatchTST [21] and TimesNet [13], which mainly cover three mainstream paradigms, including linear models, transformer-based and convolutional models. For fair evaluation, we use the optimal experiment configuration as provided in the official code to implement both base models and the enhanced version with CCM. All the experiments are implemented with PyTorch on a single NVIDIA RTX A6000 48GB GPU. Experiment configurations and implementations are detailed in Appendix C.3. Experimental results in the following sections are averaged on five runs with different random seeds. Refer to Appendix C.6 for standard deviation results. ", "page_idx": 5}, {"type": "text", "text": "5.2 Long-term Forecasting Results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We report the mean squared error (MSE) and mean absolute error (MAE) on nine real-world datasets for long-term forecasting evaluation in Table 2. The forecasting horizon is $\\{96,192,336,720\\}$ . From the table, we observe that the model enhanced with CCM outperforms the base model in general. Specifically, CCM improves long-term forecasting performance in $90.27\\%$ cases in MSE and $\\bar{8}4.03\\%$ cases in MAE across 144 different experiment settings. Remarkably, CCM achieves a substantial boost on DLinear, with a significant reduction on MSE by $5.12\\%$ and MAE by $3.04\\%$ . The last column of the table quantifies the average percentage improvement in terms of MSE/MAE, which underscores the consistent enhancement brought by CCM across all forecasting horizons and datasets. Intuitively, the CCM method is more useful in scenarios where channel interactions are complex and significant, which is usually the case in real-world data. See more analysis in Appendix C.5. ", "page_idx": 5}, {"type": "text", "text": "Table 4: Long-term forecasting results on 9 real-world datasets in terms of MSE and MAE, the lower the better. The forecasting horizons are $\\{96,192,336,720\\}$ . The better performance in each setting is shown in bold. The best results for each row are underlined. The last column shows the average percentage of MSE/MAE improvement of CCM over four base models. ", "page_idx": 6}, {"type": "table", "img_path": "MDgn9aazo0/tmp/5d741c93544fdd27305b255606c4536f278ecab946dc01a3cc878a6321fd4573.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Comparison with Regularization Solution. PRReg [17] recently displays to improve the performance of CD models, by predicting residuals with a regularization term in the training objective. We evaluate the effectiveness of PRReg and our proposed CCM on long-term forecasting performance enhancement based on CI and CD models. Following the previous training setting [17], we develop CI and CD versions for Linear [8] and Transformer [41] and report MSE loss. Table 5 shows that CCM surpasses PRReg in most cases, highlighting its efficacy compared with regularization solutions. See full results in Appendix C.4. ", "page_idx": 6}, {"type": "text", "text": "5.3 Short-term Forecasting Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In both M4 and stock datasets, we follow the univariate forecasting setting. For M4 benchmarks, we adopt the evaluation setting in prior works [42] and report the symmetric mean absolute percentage error (SMAPE), mean absolute scaled error (MASE), and overall weighted average (OWA). As for the stock dataset, we implement MAE and MSE as metrics in Table 6. See more details on metrics in Appendix C.2. Remarkably, the efficacy of CCM is consistent across all M4 sub-datasets with different sampling frequencies. Specifically, CCM outperforms the state-of-the-art linear model (DLinear) by a significant margin of $11.62\\%$ , and outperforms the best convolutional method TimesNet by $8.88\\%$ . In Table 6, we also observe a significant performance improvement on the stock dataset, achieved by applying CCM. In the stock ", "page_idx": 6}, {"type": "text", "text": "Table 5: Comparison between CCM and existing regularization method for improved performance on CI/CD strategies. The best results are highlighted in bold. The forecasting horizon is 24 for ILI dataset and 48 for other datasets. $\\star$ denotes our implementation. Other results collect from [17] training to evaluate the model\u2019s generalization and robustness. By memorizing cluster-specific knowledge from analogous samples, the model potentially captures various market trends and behaviors and thereby makes more accurate and informed forecasting. ", "page_idx": 6}, {"type": "table", "img_path": "MDgn9aazo0/tmp/2a364ef8c63478100cbcd5684d198e48448151158f1d1b4c958310ad3eb617e7.jpg", "table_caption": [], "table_footnote": ["dataset, we test on new samples (i.e., univariate stock time series) that the model has not seen during "], "page_idx": 6}, {"type": "table", "img_path": "MDgn9aazo0/tmp/c9e82c897806021fc6cdcf9ff328e4eb291f9e294914ea5e104b899b9025bef5.jpg", "table_caption": ["Table 6: Short-term forecasting results on M4 dataset in terms of SMAPE, MASE, and OWA, and stock dataset in terms of MSE and MAE. The lower the better. The forecasting horizon is $\\{7,24\\}$ for the stock dataset. The better performance in each setting is shown in bold. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "table", "img_path": "MDgn9aazo0/tmp/80aec29af32522d980df685772201cc6f3c63ef705fee8acce557677205d3ae7.jpg", "table_caption": ["Table 7: Zero-shot forecasting results on ETT datasets. The forecasting horizon is $\\{96,720\\}$ . The best value in each row is underlined. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "5.4 Zero-shot Forecasting Results ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Existing time series models tend to be rigidly tailored to a specific dataset, leading to poor generalization on unseen data. In contrast, CCM leverages learned prototypes to capture cluster-specific knowledge. This enables meaningful comparisons between unseen time series and pre-trained knowledge, facilitating accurate zero-shot forecasting. Following prior work [73], we adopt ETT collections [11], where ETTh1 and ETTh2 are hourly recorded, while ETTm1 and ETTm2 are minutely recorded. \"1\" and \"2\" indicate two different regions where the datasets originated. Table 7 shows MSE and MAE results on test datasets. CCM consistently improves the zero-shot forecasting capacity of base time series models in 48 scenarios, including generalization to different regions and different granularities. Specifically, based on the results, we make the following observations. (1) CCM exhibits more significant performance improvement with longer forecasting horizons, highlighting the efficacy of memorizing and leveraging pre-trained knowledge in zero-shot forecasting scenarios. (2) CCM demonstrates a better effect on originally CI base models. For instance, the averaged improvement rates on two CI models, i.e., DLinear and PatchTST, are $10.48\\%$ and $11.13\\%$ respectively, while the improvement rates on TSMixer and TimesNet are $5.14\\%$ and $9.63\\%$ . Overall, the experimental results verify the superiority and efficacy of CCM in enhancing zero-shot forecasting and the practical value of generalization within closely related domains under varying conditions. ", "page_idx": 7}, {"type": "text", "text": "5.5 Qualitative Visualization ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Channel Clustering Visualization. Figure 2 presents the t-SNE visualization of channel and prototype embeddings within ETTh1 and ETTh2 datasets with DLinear as the base model. Each point represents a channel within a sample, with varying colors indicating different channels. In ETTh1 dataset, we discern a pronounced clustering of channels 0, 2, and 4, suggesting that they may be capturing related or redundant information within the dataset. Concurrently, channels 1, 3, 5, and 6 coalesce into another cluster. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "The similarity matrix in the lower left further corroborates these findings. Clustering is also observable in ETTh2 dataset, particularly among channels 0, 4, and 5, as well as channels 2, 3, and 6. Comparatively, channel 1 shows a dispersion among clusters, partly due to its capturing of unique or diverse aspects of the data that do not closely align with the features represented by any clusters. The clustering results demonstrate that CCM not only elucidates the intricate relationships and potential redundancies among the channels but also ", "page_idx": 8}, {"type": "image", "img_path": "MDgn9aazo0/tmp/ad607f766bfa8994762a8f775d1f2c5c1dddf7c7398b1313960812ad967029bc.jpg", "img_caption": ["Figure 2: t-SNE visualization of channel and prototype embedding by DLinear with CCM on (a) ETTh1 and (b) ETTh2 dataset. The lower left corner shows the similarity matrix between channels. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "offers critical insights for feature analysis and enhancing the interpretability of time series models. ", "page_idx": 8}, {"type": "text", "text": "Weight Visualization of Cluster-aware Projection. Figure 3 depicts the weights visualization for the cluster-aware Feed Forward on ETTh1 and ETTm1 datasets, revealing distinct patterns that are indicative of the model\u2019s learned features [15, 8, 51]. ", "page_idx": 8}, {"type": "text", "text": "For instance, in the ETTm1 dataset, Cluster 0 shows bright diagonal striping patterns, which may suggest that it is primarily responsible for capturing the most dominant periodic signals in the corresponding cluster. In contrast, Cluster 1 exhibits denser stripes, indicating its role in refining the representation by capturing more subtle or complex periodicities that the first layer does not. The visualization implies the model\u2019s ability to identify and represent periodicity in diverse patterns, which is crucial for time-series forecasting tasks that are characterized by intricate cyclic behaviors. ", "page_idx": 8}, {"type": "image", "img_path": "MDgn9aazo0/tmp/4d22d42361d24faafa8f82d66e7cd7ec1360b5d70408229ca85fb79c6d1a3eef.jpg", "img_caption": ["Figure 3: Weights visualization of cluster-wise linear layers on (a) ETTh1 and (b) ETTm1 datasets. The input and output lengths are 336 and 96, respectively. We observe the different periodicities captured by different clusters. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.6 Ablation Studies ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Figure 4 shows an ablation study on cluster ratios, which is defined as the ratio of the number of clusters to the number of channels. 0.0 means all channels are in a single cluster. We observe that the MSE loss slightly decreases and then increases as the cluster ratio increases, especially for DLinear, PatchTST, and TimesNet. Time series models with CCM achieve the best performance when the cluster ratio is in the range of [0.2, 0.6]. It is worth noticing that DLinear and PatchTST, two CI models among four ", "page_idx": 8}, {"type": "image", "img_path": "MDgn9aazo0/tmp/d0ba1bac7a4fc7ae00a3145f9c4ea2fdd32c57313e2d16fad7bd8c7ef251eacc.jpg", "img_caption": ["Figure 4: Ablation Study on Cluster Ratios in terms of MSE loss with four base models. The forecasting horizon is 96. (left: ETTh1 dataset; right: ETTm1 dataset) "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "base models, benefit consistently from channel clustering with any number of clusters. Additional ablation studies on the look-back window length and clustering step are provided in Appendix D. ", "page_idx": 8}, {"type": "text", "text": "5.7 Efficiency Analysis ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We evaluate the model size and runtime efficiency of the proposed CCM with various numbers of clusters on ETTh1 dataset, as shown in Figure 5. The batch size is 32, and the hidden dimension is 64. We keep all other hyperparameters consistent to ensure fair evaluation. It is worth noting that CCM reduces the model complexity based on Channel-Independent models (e.g., PatchTST, DLinear), since CCM essentially uses cluster identity to replace channel identity. The generalizability of CI models is thereby enhanced as well. When it comes to Channel-Dependent models, CCM increases the model complexity with negligible overhead, considering the improved forecasting performance. ", "page_idx": 9}, {"type": "image", "img_path": "MDgn9aazo0/tmp/fc3c4f964afbe765c85aec31315982027531324ebf3e4005dd01e9cda6740259.jpg", "img_caption": ["(a) Model Size Analysis on ETTh1 dataset (b) Runtime Efficiency Analysis on ETTh1 dataset ", "Figure 5: Efficiency analysis in model size and running time on ETTh1 dataset. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work introduces a novel Channel Clustering Module (CCM) to address the challenge of effective channel management in time series forecasting. CCM strikes a balance between individual channel treatment and capturing cross-channel dependencies by clustering channels based on their intrinsic similarity. Extensive experiments demonstrate the efficacy of CCM in multiple benchmarks, including long-term, short-term, and zero-shot forecasting scenarios. Refinement of the CCM clustering and domain-specific similarity measurement could potentially improve the model performance further. Moreover, it would be valuable to investigate the applicability of CCM in other domains beyond time series forecasting in future works. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This research was supported in part by the National Science Foundation (NSF) CNS Division Of Computer and Network Systems (2431504) and AWS Research Awards. We would like to thank the anonymous reviewers for their constructive feedback. Their contributions have been invaluable in facilitating our work. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Francisco Martinez Alvarez, Alicia Troncoso, Jose C Riquelme, and Jesus S Aguilar Ruiz. Energy time series forecasting based on pattern sequence similarity. IEEE Transactions on Knowledge and Data Engineering, 23(8):1230\u20131243, 2010.   \n[2] Irena Koprinska, Dengsong Wu, and Zheng Wang. Convolutional neural networks for energy time series forecasting. In 2018 international joint conference on neural networks (IJCNN), pages 1\u20138. IEEE, 2018.   \n[3] Rafal A Angryk, Petrus C Martens, Berkay Aydin, Dustin Kempton, Sushant S Mahajan, Sunitha Basodi, Azim Ahmadzadeh, Xumin Cai, Soukaina Filali Boubrahimi, Shah Muhammad Hamdi, et al. Multivariate time series dataset for space weather data analytics. Scientific data, 7(1):1\u201313, 2020.   \n[4] Remi Lam, Alvaro Sanchez-Gonzalez, Matthew Willson, Peter Wirnsberger, Meire Fortunato, Ferran Alet, Suman Ravuri, Timo Ewalds, Zach Eaton-Rosen, Weihua Hu, et al. Learning skillful medium-range global weather forecasting. Science, 382(6677):1416\u20131421, 2023.   \n[5] Li Li, Xiaonan Su, Yi Zhang, Yuetong Lin, and Zhiheng Li. Trend modeling for traffic time series analysis: An integrated study. IEEE Transactions on Intelligent Transportation Systems, 16(6):3430\u20133439, 2015. [6] Yi Yin and Pengjian Shang. Forecasting traffic time series with multivariate predicting method. Applied Mathematics and Computation, 291:266\u2013278, 2016.   \n[7] Si-An Chen, Chun-Liang Li, Nate Yoder, Sercan O Arik, and Tomas Pfister. Tsmixer: An all-mlp architecture for time series forecasting. arXiv preprint arXiv:2303.06053, 2023.   \n[8] Ailing Zeng, Muxi Chen, Lei Zhang, and Qiang Xu. Are transformers effective for time series forecasting? arXiv preprint arXiv:2205.13504, 2022. [9] Qingsong Wen, Tian Zhou, Chaoli Zhang, Weiqi Chen, Ziqing Ma, Junchi Yan, and Liang Sun. Transformers in time series: A survey. arXiv preprint arXiv:2202.07125, 2022.   \n[10] Tian Zhou, Ziqing Ma, Qingsong Wen, Xue Wang, Liang Sun, and Rong Jin. Fedformer: Frequency enhanced decomposed transformer for long-term series forecasting. arXiv preprint arXiv:2201.12740, 2022.   \n[11] Haoyi Zhou, Shanghang Zhang, Jieqi Peng, Shuai Zhang, Jianxin Li, Hui Xiong, and Wancai Zhang. Informer: Beyond efficient transformer for long sequence time-series forecasting. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, pages 11106\u201311115, 2021.   \n[12] Haixu Wu, Jiehui Xu, Jianmin Wang, and Mingsheng Long. Autoformer: Decomposition transformers with auto-correlation for long-term series forecasting. Advances in Neural Information Processing Systems, 34:22419\u201322430, 2021.   \n[13] Haixu Wu, Tengge Hu, Yong Liu, Hang Zhou, Jianmin Wang, and Mingsheng Long. Timesnet: Temporal 2d-variation modeling for general time series analysis. arXiv preprint arXiv:2210.02186, 2022.   \n[14] Minhao Liu, Ailing Zeng, Muxi Chen, Zhijian Xu, Qiuxia Lai, Lingna Ma, and Qiang Xu. Scinet: Time series modeling and forecasting with sample convolution and interaction. Advances in Neural Information Processing Systems, 35:5816\u20135828, 2022.   \n[15] Zhe Li, Shiyi Qi, Yiduo Li, and Zenglin Xu. Revisiting long-term time series forecasting: An investigation on linear mapping. arXiv preprint arXiv:2305.10721, 2023.   \n[16] Yuan Peiwen and Zhu Changsheng. Is channel independent strategy optimal for time series forecasting? arXiv preprint arXiv:2310.17658, 2023.   \n[17] Lu Han, Han-Jia Ye, and De-Chuan Zhan. The capacity and robustness trade-off: Revisiting the channel independent strategy for multivariate time series forecasting. arXiv preprint arXiv:2304.05206, 2023.   \n[18] Jian Ni and Yue Xu. Forecasting the dynamic correlation of stock indices based on deep learning method. Computational Economics, 61(1):35\u201355, 2023.   \n[19] Xingkun Yin, Da Yan, Abdullateef Almudaifer, Sibo Yan, and Yang Zhou. Forecasting stock prices using stock correlation graph: A graph convolutional network approach. In 2021 International Joint Conference on Neural Networks (IJCNN), pages 1\u20138. IEEE, 2021.   \n[20] Phillip A Jang and David S Matteson. Spatial correlation in weather forecast accuracy: a functional time series approach. Computational Statistics, pages 1\u201315, 2023.   \n[21] Yuqi Nie, Nam H Nguyen, Phanwadee Sinthong, and Jayant Kalagnanam. A time series is worth 64 words: Long-term forecasting with transformers. arXiv preprint arXiv:2211.14730, 2022.   \n[22] Sean J Taylor and Benjamin Letham. Forecasting at scale. The American Statistician, 72(1):37\u2013 45, 2018.   \n[23] Oskar Triebe, Hansika Hewamalage, Polina Pilyugina, Nikolay Laptev, Christoph Bergmeir, and Ram Rajagopal. Neuralprophet: Explainable forecasting at scale, 2021.   \n[24] G Peter Zhang. Time series forecasting using a hybrid arima and neural network model. Neurocomputing, 50:159\u2013175, 2003.   \n[25] Nesreen K Ahmed, Amir F Atiya, Neamat El Gayar, and Hisham El-Shishiny. An empirical comparison of machine learning models for time series forecasting. Econometric reviews, 29(5-6):594\u2013621, 2010.   \n[26] Jos\u00e9 F Torres, Dalil Hadjout, Abderrazak Sebaa, Francisco Mart\u00ednez-\u00c1lvarez, and Alicia Troncoso. Deep learning for time series forecasting: a survey. Big Data, 9(1):3\u201321, 2021.   \n[27] Bryan Lim and Stefan Zohren. Time-series forecasting with deep learning: a survey. Philosophical Transactions of the Royal Society A, 379(2194):20200209, 2021.   \n[28] Shaojie Bai, J Zico Kolter, and Vladlen Koltun. An empirical evaluation of generic convolutional and recurrent networks for sequence modeling. arXiv preprint arXiv:1803.01271, 2018.   \n[29] Renzhuo Wan, Shuping Mei, Jun Wang, Min Liu, and Fan Yang. Multivariate temporal convolutional network: A deep neural networks approach for multivariate time series forecasting. Electronics, 8(8):876, 2019.   \n[30] Rajat Sen, Hsiang-Fu Yu, and Inderjit S Dhillon. Think globally, act locally: A deep neural network approach to high-dimensional time series forecasting. Advances in neural information processing systems, 32, 2019.   \n[31] Hansika Hewamalage, Christoph Bergmeir, and Kasun Bandara. Recurrent neural networks for time series forecasting: Current status and future directions. International Journal of Forecasting, 37(1):388\u2013427, 2021.   \n[32] Syama Sundar Rangapuram, Matthias W Seeger, Jan Gasthaus, Lorenzo Stella, Yuyang Wang, and Tim Januschowski. Deep state space models for time series forecasting. Advances in neural information processing systems, 31, 2018.   \n[33] Slawek Smyl. A hybrid method of exponential smoothing and recurrent neural networks for time series forecasting. International Journal of Forecasting, 36(1):75\u201385, 2020.   \n[34] David Salinas, Valentin Flunkert, Jan Gasthaus, and Tim Januschowski. Deepar: Probabilistic forecasting with autoregressive recurrent networks. International Journal of Forecasting, 36(3):1181\u20131191, 2020.   \n[35] Yong Liu, Haixu Wu, Jianmin Wang, and Mingsheng Long. Non-stationary transformers: Rethinking the stationarity in time series forecasting. arXiv preprint arXiv:2205.14415, 2022.   \n[36] Yunhao Zhang and Junchi Yan. Crossformer: Transformer utilizing cross-dimension dependency for multivariate time series forecasting. In The Eleventh International Conference on Learning Representations, 2022.   \n[37] Yong Liu, Tengge Hu, Haoran Zhang, Haixu Wu, Shiyu Wang, Lintao Ma, and Mingsheng Long. itransformer: Inverted transformers are effective for time series forecasting. arXiv preprint arXiv:2310.06625, 2023.   \n[38] Binh Tang and David S Matteson. Probabilistic transformer for time series analysis. Advances in Neural Information Processing Systems, 34:23592\u201323608, 2021.   \n[39] Shizhan Liu, Hang Yu, Cong Liao, Jianguo Li, Weiyao Lin, Alex X Liu, and Schahram Dustdar. Pyraformer: Low-complexity pyramidal attention for long-range time series modeling and forecasting. In International Conference on Learning Representations, 2021.   \n[40] Aosong Feng, Jialin Chen, Juan Garza, Brooklyn Berry, Francisco Salazar, Yifeng Gao, Rex Ying, and Leandros Tassiulas. Efficient high-resolution time series classification via attention kronecker decomposition. arXiv preprint arXiv:2403.04882, 2024.   \n[41] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.   \n[42] Boris N Oreshkin, Dmitri Carpov, Nicolas Chapados, and Yoshua Bengio. N-beats: Neural basis expansion analysis for interpretable time series forecasting. arXiv preprint arXiv:1905.10437, 2019.   \n[43] Tianping Zhang, Yizhuo Zhang, Wei Cao, Jiang Bian, Xiaohan Yi, Shun Zheng, and Jian Li. Less is more: Fast multivariate time series forecasting with light sampling-oriented mlp structures. arXiv preprint arXiv:2207.01186, 2022.   \n[44] Abhimanyu Das, Weihao Kong, Andrew Leach, Rajat Sen, and Rose Yu. Long-term forecasting with tide: Time-series dense encoder. arXiv preprint arXiv:2304.08424, 2023.   \n[45] Robert B Cleveland, William S Cleveland, Jean E McRae, and Irma Terpenning. Stl: A seasonal-trend decomposition. J. Off. Stat, 6(1):3\u201373, 1990.   \n[46] Qingsong Wen, Zhe Zhang, Yan Li, and Liang Sun. Fast robuststl: Efficient and robust seasonaltrend decomposition for time series with complex patterns. In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 2203\u20132213, 2020.   \n[47] Djamel Benaouda, Fionn Murtagh, J-L Starck, and Olivier Renaud. Wavelet-based nonlinear multiscale decomposition model for electricity load forecasting. Neurocomputing, 70(1-3):139\u2013 154, 2006.   \n[48] Donald B Percival and Andrew T Walden. Wavelet methods for time series analysis, volume 4. Cambridge university press, 2000.   \n[49] Huiqiang Wang, Jian Peng, Feihu Huang, Jince Wang, Junhui Chen, and Yifei Xiao. Micn: Multi-scale local and global context modeling for long-term series forecasting. In The Eleventh International Conference on Learning Representations, 2022.   \n[50] Yifan Zhang, Rui Wu, Sergiu M Dascalu, and Frederick C Harris. Multi-scale transformer pyramid networks for multivariate time series forecasting. IEEE Access, 2024.   \n[51] Kun Yi, Qi Zhang, Wei Fan, Shoujin Wang, Pengyang Wang, Hui He, Defu Lian, Ning An, Longbing Cao, and Zhendong Niu. Frequency-domain mlps are more effective learners in time series forecasting. arXiv preprint arXiv:2311.06184, 2023.   \n[52] Tian Zhou, Ziqing Ma, Qingsong Wen, Liang Sun, Tao Yao, Wotao Yin, Rong Jin, et al. Film: Frequency improved legendre memory model for long-term time series forecasting. Advances in Neural Information Processing Systems, 35:12677\u201312690, 2022.   \n[53] Pablo Montero-Manso and Rob J Hyndman. Principles and algorithms for forecasting groups of time series: Locality and globality. International Journal of Forecasting, 37(4):1632\u20131653, 2021.   \n[54] Xue Wang, Tian Zhou, Qingsong Wen, Jinyang Gao, Bolin Ding, and Rong Jin. Card: Channel aligned robust blend transformer for time series forecasting. In The Twelfth International Conference on Learning Representations, 2023.   \n[55] Jung-Yi Jiang, Ren-Jia Liou, and Shie-Jue Lee. A fuzzy self-constructing feature clustering algorithm for text classification. IEEE transactions on knowledge and data engineering, 23(3):335\u2013349, 2010.   \n[56] Dmitrii Marin, Jen-Hao Rick Chang, Anurag Ranjan, Anish Prabhu, Mohammad Rastegari, and Oncel Tuzel. Token pooling in vision transformers for image classification. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 12\u201321, 2023.   \n[57] Lijimol George and P Sumathy. An integrated clustering and bert framework for improved topic modeling. International Journal of Information Technology, pages 1\u20139, 2023.   \n[58] Hao Li, Alin Achim, and D Bull. Unsupervised video anomaly detection using feature clustering. IET signal processing, 6(5):521\u2013533, 2012.   \n[59] Iwan Syarif, Adam Prugel-Bennett, and Gary Wills. Unsupervised clustering approach for network anomaly detection. In Networked Digital Technologies: 4th International Conference, NDT 2012, Dubai, UAE, April 24-26, 2012. Proceedings, Part I 4, pages 135\u2013145. Springer, 2012.   \n[60] Rajesh Kumar Gunupudi, Mangathayaru Nimmala, Narsimha Gugulothu, and Suresh Reddy Gali. Clapp: A self constructing feature clustering approach for anomaly detection. Future Generation Computer Systems, 74:417\u2013429, 2017.   \n[61] Jiahao Ji, Jingyuan Wang, Chao Huang, Junjie Wu, Boren Xu, Zhenhe Wu, Junbo Zhang, and Yu Zheng. Spatio-temporal self-supervised learning for traffic flow prediction. In Proceedings of the AAAI conference on artificial intelligence, volume 37, pages 4356\u20134364, 2023.   \n[62] Gang Liu, Silu He, Xing Han, Qinyao Luo, Ronghua Du, Xinsha Fu, and Ling Zhao. Selfsupervised spatiotemporal masking strategy-based models for traffic flow forecasting. Symmetry, 15(11):2002, 2023.   \n[63] Zhe Li, Zhongwen Rao, Lujia Pan, and Zenglin Xu. Mts-mixers: Multivariate time series forecasting via factorized temporal and channel mixing. arXiv preprint arXiv:2302.04501, 2023.   \n[64] Taesung Kim, Jinhee Kim, Yunwon Tae, Cheonbok Park, Jang-Ho Choi, and Jaegul Choo. Reversible instance normalization for accurate time-series forecasting against distribution shift. In International Conference on Learning Representations, 2021.   \n[65] Zhiding Liu, Mingyue Cheng, Zhi Li, Zhenya Huang, Qi Liu, Yanhu Xie, and Enhong Chen. Adaptive normalization for non-stationary time series forecasting: A temporal slice perspective. In Thirty-seventh Conference on Neural Information Processing Systems, 2023.   \n[66] Hao Helen Zhang, Mark G Genton, and Peng Liu. Compactly supported radial basis function kernels. Technical report, North Carolina State University. Dept. of Statistics, 2004.   \n[67] Eric Jang, Shixiang Gu, and Ben Poole. Categorical reparameterization with gumbel-softmax. arXiv preprint arXiv:1611.01144, 2016.   \n[68] Nikita Kitaev, \u0141ukasz Kaiser, and Anselm Levskaya. Reformer: The efficient transformer. arXiv preprint arXiv:2001.04451, 2020.   \n[69] Sinong Wang, Belinda Z Li, Madian Khabsa, Han Fang, and Hao Ma. Linformer: Self-attention with linear complexity. arXiv preprint arXiv:2006.04768, 2020.   \n[70] Zhuoran Shen, Mingyuan Zhang, Haiyu Zhao, Shuai Yi, and Hongsheng Li. Efficient attention: Attention with linear complexities. In Proceedings of the IEEE/CVF winter conference on applications of computer vision, pages 3531\u20133539, 2021.   \n[71] Guokun Lai, Wei-Cheng Chang, Yiming Yang, and Hanxiao Liu. Modeling long-and short-term temporal patterns with deep neural networks. In The 41st international ACM SIGIR conference on research & development in information retrieval, pages 95\u2013104, 2018.   \n[72] Spyros Makridakis, Evangelos Spiliotis, and Vassilios Assimakopoulos. The m4 competition: Results, findings, conclusion and way forward. International Journal of Forecasting, 34(4):802\u2013 808, 2018.   \n[73] Ming Jin, Shiyu Wang, Lintao Ma, Zhixuan Chu, James Y Zhang, Xiaoming Shi, Pin-Yu Chen, Yuxuan Liang, Yuan-Fang Li, Shirui Pan, et al. Time-llm: Time series forecasting by reprogramming large language models. arXiv preprint arXiv:2310.01728, 2023.   \n[74] Lei Chen and Raymond Ng. On the marriage of lp-norms and edit distance. In Proceedings of the Thirtieth international conference on Very large data bases-Volume 30, pages 792\u2013803, 2004.   \n[75] Hui Ding, Goce Trajcevski, Peter Scheuermann, Xiaoyue Wang, and Eamonn Keogh. Querying and mining of time series data: experimental comparison of representations and distance measures. Proceedings of the VLDB Endowment, 1(2):1542\u20131552, 2008.   \n[76] Omer Gold and Micha Sharir. Dynamic time warping and geometric edit distance: Breaking the quadratic barrier. ACM Transactions on Algorithms (TALG), 14(4):1\u201317, 2018.   \n[77] Ma\u0161a Kljun and M Ters\u02c7ek. A review and comparison of time series similarity measures. In 29th International Electrotechnical and Computer Science Conference (ERK 2020). Portoroz\u02c7, pages 21\u201322, 2020.   \n[78] Wei Li, Xiangxu Meng, Chuhao Chen, and Jianing Chen. Mlinear: Rethink the linear model for time-series forecasting. arXiv preprint arXiv:2305.04800, 2023.   \n[79] Artur Trindade. ElectricityLoadDiagrams20112014. UCI Machine Learning Repository, 2015. DOI: https://doi.org/10.24432/C58C86.   \n[80] Guokun Lai, Wei-Cheng Chang, Yiming Yang, and Hanxiao Liu. Modeling long-and short-term temporal patterns with deep neural networks. corr abs/1703.07015 (2017). arXiv preprint arXiv:1703.07015, 2017.   \n[81] M4 Team et al. M4 competitor\u2019s guide: prizes and rules. See https://www. m4. unic. ac. cy/wpcontent/uploads/2018/03/M4-CompetitorsGuide. pdf, 2018.   \n[82] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[83] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information processing systems, 32, 2019. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "A Definitions ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "A.1 Channel Similarity ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Essentially, the similarity between two time series $X_{i}$ and $X_{j}$ is defined as ${\\mathrm{SIM}}(X_{i},X_{j})\\;=\\;$ exp $\\big(\\frac{-d(X_{i},X_{j})}{2\\sigma_{.}^{2}}\\big)$ , where $d(\\cdot,\\cdot)$ can be any distance metric [74, 75], such as Euclidean Distance $(L_{p})$ , Editing Distance (ED) and Dynamic Time Warping (DTW) [76]. One may also use other similarity definitions, such as Longest Common Subsequence (LCSS) and Cross-correlation (CCor). ", "page_idx": 15}, {"type": "text", "text": "Firstly, the choice of Euclidean distance in this work is motivated by its efficiency and low computational complexity, especially in the case of large datasets or real-time applications. Let $H$ denote the length of the time series. The complexity of the above similarity computation is shown in Table 8. ", "page_idx": 15}, {"type": "text", "text": "Table 8: Complexity of similarity computation ", "page_idx": 15}, {"type": "text", "text": "Secondly, it\u2019s worth noting that while there are various similarity computation approaches, studies have demonstrated a strong correlation between Euclidean distance and other distance metrics [77]. This high correlation suggests that, despite different mathematical formulations, these metrics often yield similar results when assessing the similarity between time series. This empirical evidence supports the choice of Euclidean distance as a reasonable approximation of similarity for practical purposes. In our implementation, we select $\\sigma=5$ in Eq. 1 to compute the similarities based on Euclidean distance. ", "page_idx": 15}, {"type": "table", "img_path": "MDgn9aazo0/tmp/ce42ed2d875081412443d05dce0a1e696cbbccf6798ff9f29122e27ff48c39f6.jpg", "table_caption": [], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "A.2 Channel Dependent and Channel Independent Strategy ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The definitions of Channel Dependent (CD) and Channel Independent (CI) settings are pivotal to this work. The fundamental difference lies in whether a model captures cross-channel information. There are slightly varied interpretations of Channel Independent (CI) in previous works and we summarize as follows. ", "page_idx": 15}, {"type": "text", "text": "1. In some works [15, 54], CI is broadly defined as forecasting each channel independently, where cross-channel dependencies are completely ignored. For linear models [78, 16], CI is specifically defined as $n$ individual linear layers for $n$ channels in previous works. Each linear layer is dedicated to modeling a univariate sequence, with the possibility of differing linear weights across channels. ", "page_idx": 15}, {"type": "text", "text": "2. In previous work [17], CI also means all channels being modeled independently yet under a unified model. ", "page_idx": 15}, {"type": "text", "text": "All the above works acknowledge that CI strategies often outperform CD approaches, though this comparison is not the focal point of our work. It\u2019s also recognized that the specific CI strategy employed in DLinear and PatchTST contributes significantly to their performance. The CI setting in [17] represents a specific instance within the broader CI setting in other works [15, 54]. To avoid ambiguity, we use $f^{(i)}$ to represent the model for the $i$ -th channel specifically, aligning with previous definitions without conflict. ", "page_idx": 15}, {"type": "text", "text": "B Multivariate and Univariate Adaptation ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We provide pseudocodes for training time series models enhanced with CCM in Algorithm 1. Algorithm 2 displays pseudocodes for the inference phase, where both the training and test sets have the same number of channels. The components in the pretrained model $\\mathcal{F}$ , highlighted in blue, remain fixed during the inference phase. It\u2019s important to note that zero-shot forecasting in Algorithm 2 is adaptable to various scenarios. Let\u2019s discuss these scenarios: ", "page_idx": 15}, {"type": "text", "text": "\u2022 Training on a univariate dataset and inferring on either univariate or multivariate samples: In this case, the model learns prototypes from a vast collection of univariate time series in the training set. As a result, the model can effortlessly adapt to forecasting unseen univariate time series in a zero-shot manner. To forecast unseen multivariate time series, we decompose each multivariate sample into multiple univariate samples, where each univariate sample can be processed by the pretrained model. The future multivariate time series can be obtained by stacking multiple future univariate time series. ", "page_idx": 15}, {"type": "text", "text": "\u2022 Training on a multivariate dataset and inferring on either univariate or multivariate samples: For Channel-Dependent models, test samples should have the same number of channels as the training samples, as seen in sub-datasets within ETT collections [11]. In contrast, for ChannelIndependent models, zero-shot forecasting can be performed on either univariate or multivariate samples, even when they have different numbers of channels. ", "page_idx": 16}, {"type": "text", "text": "Algorithm 1 Forward function of time series models with channel clustering module. $C$ is the number of channels in the dataset. $K$ is the number of clusters. $T$ is the length of historical data. $H$ is the forecasting horizon. ", "page_idx": 16}, {"type": "text", "text": "Input: Historical time series $X\\in\\mathbb{R}^{T\\times C}$   \nOutput: Future time series $Y\\in\\mathbb{R}^{H\\times C}$ ; Prototype embedding $\\mathbf{C}\\in\\mathbb{R}^{K\\times d}$   \nInitialize the weights of $K$ linear layer $\\theta_{k}$ for $k=1,\\cdots\\,,K$   \nInitialize $K$ cluster embedding $c_{k}\\in\\mathbb{R}^{d}$ for $k=1,\\cdots\\,,K$ . $\\triangleright$ Cluster Embedding C   \n$X\\gets{\\mathrm{Normalize}}(X)$   \n$\\begin{array}{r}{\\mathbf{S}_{i,j}\\gets\\exp(\\frac{-\\|X_{i}-X_{j}\\|^{2}}{2\\sigma^{2}}).}\\end{array}$ . $\\triangleright$ Compute Similarity Matrix S   \n$h_{i}\\gets\\mathbf{M}\\mathbf{L}\\mathbf{P}(X_{i})$ for each channel $i$ . $\\triangleright$ Channel Embedding $\\mathbf{H}$ via MLP Encoder in the Cluster   \nAssigner   \n$\\begin{array}{r l}&{\\mathrm{~\\gamma^{\\alpha,\\beta^{\\prime}\\in\\mathrm{{\\mathbb{N}}^{\\mathrm{\\it~c}}\\mathrm{=}\\mathrm{{Normalize}\\big(\\frac{\\partial\\beta^{\\mathrm{\\top}}h_{i}}{\\partial\\beta\\mathrm{{i}_{i}\\mathrm{j}}}\\big)\\in\\left[0,1\\right]},}}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\mathrm{\\beta\\in\\mathrm{Zompute~Clustering~Probability~Matrix~}}}\\\\ &{\\mathrm{~\\mathbf{M}\\leftarrow B e r n o u l l i(\\mathbf{P}).}\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\mathrm{\\beta\\triangleright\\mathrm{{Sample~Clustering~Membership~Matrix~}}}}\\\\ &{\\mathrm{~\\mathbf{C}\\leftarrow\\mathrm{Normalize}\\left(\\exp(\\frac{(W_{Q}C)(W_{K}H)^{\\top}}{\\sqrt{d}})\\odot\\mathbf{M}^{\\top}\\right)W_{V}\\mathbf{H}.}\\qquad\\mathrm{\\forall~Update~Cluster~Embedding~\\mathbf{C}~v i a n c e}}\\end{array}$   \nCross Attention   \n$\\hat{\\bf{H}}=$ Temporal Module $(\\mathbf{H})$ . \u25b7Update via Temporal Modules   \nfor channel $i$ in $\\{1,2,\\cdots,C\\}$ do $Y_{i}\\leftarrow h_{\\theta^{i}}(\\hat{\\mathbf{H}}_{i})$ where $\\begin{array}{r}{\\theta^{i}=\\sum_{k}p_{i,k}\\theta_{k}}\\end{array}$ . \u25b7Weight Averaging and Projection   \nend for ", "page_idx": 16}, {"type": "text", "text": "Algorithm 2 Zero-shot forecasting of time series models with channel clustering module. $C$ is the number of channels in both the training and test datasets. $K$ is the number of clusters. $T$ is the length of historical data. $H$ is the forecasting horizon. ", "page_idx": 16}, {"type": "text", "text": "Input: Historical time series $X\\in\\mathbb{R}^{T\\times C}$ ; Pretrained Models $\\mathcal{F}$   \nOutput: Future time series $Y\\in\\mathbb{R}^{H\\times C}$ ;   \nLoad the weights of $K$ linear layer $\\theta_{k}$ for $k=1,\\cdots\\,,K$ from $\\mathcal{F}$   \nLoad $K$ cluster embedding $c_{k}\\!\\in\\!\\mathbb{R}^{d}$ for $k=1,\\cdots\\,,K$ from $\\mathcal{F}$ . $\\triangleright$ Cluster Embedding C $X\\gets{\\mathrm{Normalize}}(X)$   \nSi,j \u2190exp( \u2212\u2225Xi\u22122Xj\u22252). $\\triangleright$ Compute Similarity Matrix S $h_{i}\\gets\\mathrm{MLP}(X_{i})$ for each channel $i$ . $\\triangleright$ Channel Embedding $\\mathbf{H}$ via MLP Encoder in the Cluster Assigner   \n$\\begin{array}{r}{p_{i,k}\\stackrel{}{\\leftarrow}\\mathrm{Normalize}\\big(\\frac{c_{k}^{\\top}h_{i}}{\\|c_{k}\\|\\|h_{i}\\|}\\big)\\in[0,1].}\\end{array}$ $\\triangleright$ Compute Clustering Probability Matrix P M \u2190Bernoulli(P). $\\triangleright$ Sample Clustering Membership Matrix M $\\hat{\\bf{H}}=$ Temporal Module $(\\mathbf{H})$ . \u25b7Update via Temporal Modules for channel $i$ in $\\{1,2,\\cdot\\cdot\\cdot\\,,C\\}$ do   \n$Y_{i}\\leftarrow h_{\\theta^{i}}(\\hat{\\mathbf{H}}_{i})$ where $\\begin{array}{r}{\\theta^{i}=\\sum_{k}p_{i,k}\\theta_{k}}\\end{array}$ . \u25b7Weight Averaging and Projection end for ", "page_idx": 16}, {"type": "text", "text": "C Experiments ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "C.1 Datasets ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Public Datasets. We utilize nine commonly used datasets for long-term forecasting evaluation. Firstly, ETT collection [11], which documents the oil temperature and load features of electricity transformers over the period spanning July 2016 to July 2018. This dataset is further subdivided into four sub-datasets, ETThs and ETTms, with hourly and 15-minute sampling frequencies, respectively. ", "page_idx": 16}, {"type": "text", "text": "$s$ can be 1 or 2, indicating two different regions. Electricity dataset [79] encompasses electricity consumption data from 321 clients from July 2016 to July 2019. Exchange [80] compiles daily exchange rate information from 1990 to 2016. Traffic dataset contains hourly traffic load data from 862 sensors in San Francisco areas from 2015 to 2016. Weather dataset offers a valuable resource with 21 distinct weather indicators, including air temperature and humidity, collected every 10 minutes throughout the year 2021. ILI documents the weekly ratio of influenza-like illness patients relative to the total number of patients, spanning from 2002 to 2021. Dataset statistics can be found in Table 9. ", "page_idx": 17}, {"type": "text", "text": "We adopt M4 dataset for short-term forecasting evaluation, which involves 100,000 univariate time series collected from different domains, including finance, industry, etc.The M4 dataset is further divided into 6 sub-datasets, according to the sampling frequency. ", "page_idx": 17}, {"type": "table", "img_path": "MDgn9aazo0/tmp/ea27329e2fce3ed0588241185910d11b34744811b57eb12a5db58b086f56e080.jpg", "table_caption": ["Table 9: The statistics of dataset in long-term and short-term forecasting tasks "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "Stock Dataset. We design a new time series benchmark dataset constructed from publicly available stock-market data. We deploy commercial stock market API to probe the market statistics for 1390 stocks spanning 10 years from Nov.25, 2013 to Sep.1, 2023. We collect stock price data from 9:30 a.m. to $4{\\mathrm{:}}00\\,\\,\\mathrm{p.m}$ . every stock open day except early closure days. The sampling granularity is set to be 5 minutes. Missing record is recovered by interpolation from nearby timestamps and all stock time series are processed to have aligned timestep sequences. We implement short-term forecasting on the stock dataset, which is more focused on market sentiment, and short-term events that can cause stock prices to fluctuate over days, weeks, or months. Thereby, we set the forecasting horizon as 7 and 24. ", "page_idx": 17}, {"type": "text", "text": "C.2 Metrics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Following standard evaluation protocols [13], we utilize the Mean Absolute Error (MAE) and Mean Square Error(MSE) for long-term and stock price forecasting. The Symmetric Mean Absolute Percentage Error (SMAPE), Mean Absolute Scaled Error (MASE), and Overall Weighted Average (OWA) are used as metrics for M4 dataset [72, 42]. The formulations are shown in Eq. 5. Let $\\mathbf{y}_{t}$ and $\\widehat{\\mathbf{y}}_{t}$ denote the ground-truth and the forecast at the $t$ -th timestep, respectively. $H$ is the forecasting h orizon. In M4 dataset, MASE is a standard scale-free metric, where $s$ is the periodicity of the data (e.g., 12 for monthly recorded sub-dataset) [72]. MASE measures the scaled error w.r.t. the na\u00efve predictor that simply copies the historical records of $s$ periods in the past. Instead, SMAPE scales the error by the average between the forecast and ground truth. Particularly, OWA is an M4-specific metric [81] that assigns different weights to each metric. ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{MAE}=\\displaystyle\\frac{1}{H}\\displaystyle\\sum_{t=1}^{H}|\\mathbf{y}_{t}-\\widehat{\\mathbf{y}}_{t}|\\,,\\qquad\\mathrm{MSE}=\\displaystyle\\frac{1}{H}\\sum_{i=1}^{H}(\\mathbf{y}_{t}-\\widehat{\\mathbf{y}}_{t})^{2},}\\\\ &{\\mathrm{SMAPE}=\\displaystyle\\frac{200}{H}\\displaystyle\\sum_{i=1}^{H}\\frac{|\\mathbf{y}_{t}-\\widehat{\\mathbf{y}}_{t}|}{|\\mathbf{y}_{t}|+|\\widehat{\\mathbf{y}}_{t}|},\\qquad\\mathrm{MASE}=\\displaystyle\\frac{1}{H}\\sum_{i=1}^{H}\\frac{|\\mathbf{y}_{t}-\\widehat{\\mathbf{y}}_{t}|}{\\frac{1}{H-s}\\sum_{j=s+1}^{H}|\\mathbf{y}_{j}-\\mathbf{y}_{j-s}|},}\\\\ &{\\mathrm{OWA}=\\displaystyle\\frac{1}{2}\\left[\\frac{\\mathrm{SMAPE}}{\\mathrm{SMAPE}_{\\mathrm{Naive2}}}+\\frac{\\mathrm{MASE}}{\\mathrm{MASE}_{\\mathrm{Naive2}}}\\right]}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "C.3 Experiment Details ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "To verify the superiority of CCM in enhancing the performance of mainstream time series models, we select four popular and state-of-the-art models, including linear models such as TSMixer [7], DLinear [8], transformer-based model PatchTST [21] and convolution-based model TimesNet [13]. We build time series models using their official codes and optimal model configuration1234. ", "page_idx": 18}, {"type": "text", "text": "In the data preprocessing stage, we apply reversible instance normalization [64] to ensure zero mean and unit standard deviation, avoiding the time series distribution shift. Forecasting loss is MSE for long-term forecasting datasets and the stock dataset. Instead, we use SMAPE loss for M4 dataset. We select Adam [82] with the default hyperparameter configuration for $(\\beta_{1},\\beta_{2})$ as (0.9, 0.999). An early-stopping strategy is used to mitigate overfitting. The experiments are conducted on a single NVIDIA RTX A6000 48GB GPU, with PyTorch [83] framework. We use the official codes and follow the best model configuration to implement the base models. Then we apply CCM to the base models, keeping the hyperparameters unchanged for model backbones. Experiment configurations, including the number of MLP layers in the cluster assigner, the layer number in the temporal module, hidden dimension, the best cluster number, and regularization parameter $\\beta$ on nine real-world datasets are shown in Table 10. ", "page_idx": 18}, {"type": "table", "img_path": "MDgn9aazo0/tmp/0055820b9a859ddf947607fcaac2a71658f22842bd21bad9a9662ee0347cb31a.jpg", "table_caption": ["Table 10: Experiment configuration. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "C.4 Comparison between CCM and Other Approach ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Table 11: Full Results on Comparison between CCM and existing regularization method for enhanced performance on CI/CD strategies in terms of MSE metric. The best results are highlighted in bold. ", "page_idx": 18}, {"type": "table", "img_path": "MDgn9aazo0/tmp/add8f11f127b3fa846ab6adad9b1392cf2fe3b232218d0ea68681a7ffc0bacb8.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "Predict Residuals with Regularization. Prior work [17] demonstrates that the main drawback of CD models is their inclination to generate sharp and non-robust forecasts, deviating from the actual trend. Thereby, Predict Residuals with Regularization (PRReg for simplicity), a specifically designed ", "page_idx": 18}, {"type": "text", "text": "regularization objective, is proposed to improve the robustness of CD methods as follows. ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\frac{1}{N}\\sum_{j=1}^{N}\\mathcal{L}_{F}\\left(f\\left(X^{(j)}-A^{(j)}\\right)+A^{(j)},Y^{(j)}\\right)+\\lambda\\Omega(f),\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where the superscript $j$ indicates the sample index. ${\\mathcal{L}}_{F}$ is MSE loss. $\\begin{array}{r}{A^{(j)}=X_{L,:}^{j}}\\end{array}$ : represents the last values of each channel in $X^{(j)}$ . Therefore, the objective encourages the model to generate predictions that are close to the nearby historical data and keep the forecasts smooth and robust. The regularization term $\\Omega$ $L_{2}$ norm in practice) further restricts the complexity of the model and ensures smoothness in the predictions. It was demonstrated that PRReg can achieve better performance than original CD and CI strategies [17]. We conduct extensive experiments on long-term forecasting benchmarks to compare PRReg and CCM. The full results are shown in Table 11. The numbers in parentheses next to the method represent the forecasting horizon. We set the length of the look-back window to 36 for ILI and 96 for other datasets for consistency with previous works [17]. The base models are linear model [8] and basic transformer [41]. The values in the PRReg column are the best results with any $\\lambda$ , collected from [17]. We observe from Table 11 that CCM successfully improves forecasting performance on original CI/CD strategies (or reached comparable results) in 13 out of 16 settings, compared with PRReg method. ", "page_idx": 19}, {"type": "text", "text": "C.5 Results Analysis ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "We report the degree of multivariate correlation across multiple channels (measured by the average Pearson correlation coefficient) in Table 12 and Table 13. $r$ denotes the degree of multivariate correlation. Then the Pearson correlation coefficient between $r$ and the performance improvement rate is 0.258 in long-term forecasting, indicating a weak correlation. It demonstrates that CCM tends to achieve a greater boost on datasets that are intrinsically correlated within channels. Compared with datasets used in long-term benchmarks, M4 demonstrates more significant correlations between time series. Therefore, capturing the correlation within the dataset in short-term cases potentially leads to greater improvement in the forecasting performance than in long-term cases. ", "page_idx": 19}, {"type": "table", "img_path": "MDgn9aazo0/tmp/2e874d89fa030b0b3b5e5fc2dab942688db3f32d7ed0a7f47f450dc7c4defe7c.jpg", "table_caption": ["Table 12: Multivariate intrinsic similarity for long-term forecasting datasets "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "MDgn9aazo0/tmp/7596acd925045498223c504712df4a823f9e49f6738083cd13b4468992b60ea7.jpg", "table_caption": ["Table 13: Intrinsic similarity for short-term forecasting datasets "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "C.6 Error Bar ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Experimental results in this paper are averaged from five runs with different random seeds. We report the standard deviation for base models and CCM-enhanced versions on long-term forecasting datasets in Table 14, M4 dataset in Table 15 and stock dataset in Table 16. ", "page_idx": 19}, {"type": "text", "text": "D Ablation Study ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "D.1 Influence of Cluster Ratio ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "The number of clusters is an important hyperparameter in the CCM method. To verify the effectiveness of our design, we conduct an ablation study for all base models on four long-term forecasting datasets. The full results are shown in Table 17. We tune different cluster ratios, defined as the ratio of the number of clusters to the number of channels. Original means the original base model without any channel clustering mechanism. 0.0 indicates grouping all channels into the same cluster. We make the following observations. (1) For most cases, the channel clustering module (CCM) with any number of clusters greater than 1 consistently improves the forecasting performance upon base models. (2) For ", "page_idx": 19}, {"type": "table", "img_path": "MDgn9aazo0/tmp/43febddd4a1d4f4a9c25335f939c1ed2a1ae96aa8efd8866a3e541714ff3e594.jpg", "table_caption": ["Table 14: Standard deviation of Table 2 on long-term forecasting benchmarks. The forecasting horizon is 96. "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "MDgn9aazo0/tmp/2536297bcb7a44069d19ceb2349c1d201ac549f5d0b7ae10357442865f7d9e1f.jpg", "table_caption": ["Table 15: Standard deviation of Table 6 on M4 dataset "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "Channel-Independent base models, such as DLinear and PatchTST, grouping all channels into one cluster results in a channel fusion at the last layer, leading to a degradation in forecasting performance compared to the original CI models. (3) For most cases, the cluster ratio in the range of [0.2, 0.6] typically results in the best performance. ", "page_idx": 20}, {"type": "text", "text": "D.2 Influence of Look-back Window Length ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this section, we conduct additional ablation experiments to investigate the effect of different lookback window lengths in the newly collected stock dataset, which determines how much historical information the time series model uses to make short-term forecasts. Specifically, the ablation study helps identify the risk of overftiting or underftiting based on the chosen look-back window length. An overly long window may lead to overftiting, while a short window may cause underftiting. Table 18 display the forecasting performance on forecasting horizon 7 and 24. The length of the look-back window ranges from two to four times the forecasting horizon. From Table 18, we make the following observations. (1) CCM effectively improves the base models\u2019 forecasting performance in 24 cases across different base models, forecasting horizons, and look-back window lengths consistently. (2) Especially, CCM achieves better enhancement when the look-back window is shorter. ", "page_idx": 20}, {"type": "text", "text": "D.3 Influence of Different Clustering Steps ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "We conducted an ablation study on different clustering steps to investigate its effect on downstream performance, reported in Table 19. The ablation study follows the setting in Table 5. Random means we randomly assign each channel to a cluster, leading to worse clustering quality. K-Means means using the $\\mathbf{k}$ -means algorithm to replace our clustering step, leading to suboptimal prototype embedding. The proposed CCM is essentially an advanced variant of K-Means with learnable prototype embedding and cross-attention mechanism. Results show that both clustering quality and ", "page_idx": 20}, {"type": "table", "img_path": "MDgn9aazo0/tmp/dac2f95dc00b67f827c45a98c02743bad183130245014d4025304b71a6c386c7.jpg", "table_caption": ["Table 16: Standard deviation of Table 6 on stock dataset "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "Table 17: Sensitivity of cluster ratio in terms of MSE metric. The forecasting horizon is 96. 0.0 means grouping all channels into the same cluster. original means the base model without the CCM mechanism. ", "page_idx": 21}, {"type": "table", "img_path": "MDgn9aazo0/tmp/2c3c95e9813d56209cee6d695bc2501113203e13bf33ed9ab9a583971b7166dc.jpg", "table_caption": [], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "prototype embedding will affect the downstream performance. Instead, CCM generates high-quality channel clustering results, compared with random assignment and K-Means clustering. ", "page_idx": 21}, {"type": "text", "text": "E Visualization Results ", "text_level": 1, "page_idx": 21}, {"type": "image", "img_path": "MDgn9aazo0/tmp/dd1e2b19ec24998e21f27fd1387b4728f31c9145c9adaa2793be574bef3d6992.jpg", "img_caption": ["Figure 6: (a) Channel-wise forecasting performance and (b) Channel similarity on ETTh1 dataset illustrate the correlation between model performance and intrinsic similarity "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "E.1 Channel-wise Performance and Channel Similarity ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Figure 6 illustrates the channel-wise forecasting performance in terms of MSE metric and channel similarity on ETTh1 dataset with DLinear. We use the model\u2019s performance difference on the original dataset and the randomly shuffled dataset as the model\u2019s fitting ability on a specific channel. Note that MSE loss is computed on channels that have been standardized, which means that any scaling differences between them have been accounted for. Figure 6 highlights a noteworthy pattern: when two channels exhibit a higher degree of similarity, there tends to be a corresponding similarity in the performance on these channels. This observation suggests that channels with similar characteristics tend to benefit similarly from the optimization. It implies a certain level of consistency in the improvement of MSE loss when dealing with similar channels. ", "page_idx": 21}, {"type": "table", "img_path": "MDgn9aazo0/tmp/e2889a3e08e659eda6a85e7f83a1f338ec4f2d2747fa4940cf41f413f6b0d6ce.jpg", "table_caption": ["Table 18: Short-term forecasting on stock dataset with different look-back window length in $\\{14,21,28\\}$ . The forecasting length is 7. The best results with the same base model are underlined. Bold means CCM successfully enhances forecasting performance over the base model. "], "table_footnote": [], "page_idx": 22}, {"type": "table", "img_path": "MDgn9aazo0/tmp/6a2d9cfe4f0f4917501341ba488bf2f4653f5a349ccd688f19634f8f5a7e20bd.jpg", "table_caption": ["Table 19: Ablation on different clustering steps on ETTh1 and ETTm1 based on Linear and Transformer architecture. "], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "F Discussion ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "This paper presents the Channel Clustering Module (CCM) for enhanced performance of time series forecasting models, aiming to balance the treatment of individual channels while capturing essential cross-channel interactions. Despite its promising contributions, there still exist limitations and directions for future work that warrant consideration. ", "page_idx": 22}, {"type": "text", "text": "Limitation. While CCM shows improvements in forecasting, its scalability to extremely large datasets remains to be tested. Moreover, the clustering and embedding processes in CCM introduce additional computational overhead. The efficiency of CCM in real-time forecasting scenarios, where computational resources are limited, requires further optimization. ", "page_idx": 22}, {"type": "text", "text": "Future Works. Future research can focus on adapting CCM to specific domains, such as biomedical signal processing or geospatial data analysis, where external domain-specific knowledge can be involved in the similarity computation. Furthermore, exploring alternative approaches to develop a dynamical clustering mechanism within CCM could potentially enhance forecasting efficacy. It is also worth examining the effectiveness of CCM in contexts beyond time series forecasting. ", "page_idx": 22}, {"type": "text", "text": "Social Impact. The Channel Clustering Module (CCM) presented in this paper holds significant potential for positive social impact. By improving the accuracy and efficiency of forecasting, CCM can benefit a wide range of applications critical to society. For instance, in healthcare, CCM could enhance the prediction of patient outcomes, leading to better treatment planning and resource allocation. Additionally, in financial markets, CCM could aid in predicting market trends, supporting informed decision-making and potentially reducing economic risks for individuals and organizations. Overall, the development and refinement of CCM could potentially enhance the quality of life and promote societal well-being. ", "page_idx": 22}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "1. Claims ", "page_idx": 23}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Clearly state the contribution in the introduction. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 23}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: Discussed the limitations in conclusion. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 23}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: the paper does not include theoretical results. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 24}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Provided implementation and hyperparameters in Appendix C.3. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 24}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: The code is available at https://github.com/ Graph-and-Geometric-Learning/TimeSeriesCCM. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 25}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Provide training and test details in Appendix C.3. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 25}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Provided error bars in Appendix C.6. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: Provided details in Appendix C.3. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 26}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: well conform with the NeurIPS Code of Ethics. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 26}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: Discussed the social impacts in Appendix F. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. \u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: the paper poses no such risks. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 27}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Cited the original paper that produced the dataset used in this work. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 27}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: Will document the newly released dataset and well specify the license after paper acceptance. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 28}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 28}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 28}]