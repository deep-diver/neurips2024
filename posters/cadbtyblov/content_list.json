[{"type": "text", "text": "Improving Linear System Solvers for Hyperparameter Optimisation in Iterative Gaussian Processes ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jihao Andreas Lin1, 2 Shreyas Padhy1 Bruno Mlodozeniec1, 2 Javier Antor\u00e1n1, 3 Jos\u00e9 Miguel Hern\u00e1ndez-Lobato1, 3 1University of Cambridge 2Max Planck Institute for Intelligent Systems 3\u00c5ngstr\u00f6m AI ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Scaling hyperparameter optimisation to very large datasets remains an open problem in the Gaussian process community. This paper focuses on iterative methods, which use linear system solvers, like conjugate gradients, alternating projections or stochastic gradient descent, to construct an estimate of the marginal likelihood gradient. We discuss three key improvements which are applicable across solvers: (i) a pathwise gradient estimator, which reduces the required number of solver iterations and amortises the computational cost of making predictions, (ii) warm starting linear system solvers with the solution from the previous step, which leads to faster solver convergence at the cost of negligible bias, (iii) early stopping linear system solvers after a limited computational budget, which synergises with warm starting, allowing solver progress to accumulate over multiple marginal likelihood steps. These techniques provide speed-ups of up to $72\\times$ when solving to tolerance, and decrease the average residual norm by up to $7\\times$ when stopping early. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Gaussian processes [21] (GPs) are a versatile class of probabilistic machine learning models which are used widely for Bayesian optimisation of black-box functions [23], climate and earth sciences [10, 25], and data-efficient learning in robotics and control [6]. However, their effectiveness depends on good estimates of hyperparameters, such as kernel length scales and observation noise. These quantities are typically learned by maximising the marginal likelihood, which balances model complexity with training data fti. In general, the marginal likelihood is a non-convex function of the hyperparameters and evaluating its gradient requires inverting the kernel matrix. Using direct methods, this requires compute and memory resources which are respectively cubic and quadratic in the number of training examples. This is intractable when dealing with large datasets of modern interest. ", "page_idx": 0}, {"type": "text", "text": "Methods to improve the scalability of Gaussian processes can roughly be grouped into two categories. Sparse methods [19, 26, 12] approximate the kernel matrix with a low-rank surrogate, which is cheaper to invert. This reduced flexibility may result in failure to properly fit increasingly large or sufficiently complex data [15]. On the other hand, iterative methods [11] express GP computations in terms of systems of linear equations. The solution to these linear systems is approximated up to a specified numerical precision with linear system solvers, such as conjugate gradients (CG) [11, 9, 29], alternating projections (AP) [22, 27, 32], or stochastic gradient descent (SGD) [15, 16]. These methods allow for a trade-off between compute time and accuracy. However, convergence can be slow in the large data regime, where system conditioning is often poor. ", "page_idx": 0}, {"type": "text", "text": "In this paper, we focus on iterative GPs and identify techniques, which were important to the success of previously proposed methods, but did not receive special attention in the literature. Many of these amount to amortisations which leverage previous computations to accelerate subsequent ones. We analyse and adapt these techniques, and show that they can be applied to accelerate different linear solvers, obtaining speed-ups of up to $72\\times$ without sacrificing predictive performance (see Figure 1). ", "page_idx": 0}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/ec0087ff061b2413658e1506e7ec1af9720d704e169b36087034939cd38aca6e.jpg", "img_caption": ["Standard Pathwise Standard $+$ warm start Pathwise $^+$ warm start Hatched areas represent the fraction of the total runtime which is used by the linear system solver "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: Comparison of relative runtimes for different methods, linear system solvers, and datasets. The linear system solver (hatched areas) dominates the total training time (coloured patches). The pathwise gradient estimator requires less time than the standard estimator. Initialising at the previous solution (warm start) further reduces the runtime of the linear system solver for both estimators. ", "page_idx": 1}, {"type": "text", "text": "In the following, we summarise our contributions: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We introduce a pathwise estimator of the marginal likelihood gradient and show that, under real-world conditions, the solutions to the linear systems required by this estimator are closer to the origin than those of the standard estimator, allowing our solvers to converge faster. Additionally, these solutions transform into samples from the GP posterior without further matrix inversions, amortising the computational costs of predictive posterior inference. \u2022 We propose to warm start linear system solvers throughout marginal likelihood optimisation by reusing linear system solutions to initialise the solver in the subsequent step. This results in faster convergence. Although this technically introduces bias into the optimisation, we show that, theoretically and empirically, the optimisation quality does not suffer. \u2022 We investigate the behaviour of linear system solvers on a limited compute budget, such that reaching the specified tolerance is not guaranteed. Here, warm starting allows the linear system solver to accumulate solver progress across marginal likelihood steps, progressively improving the solution quality of the linear system solver despite early stopping. \u2022 We demonstrate empirically that the methods above either reduce the required number of iterations until convergence without sacrificing performance or improve the performance if a limited compute budget hinders convergence. Across different UCI regression datasets and linear system solvers, we observe average speed-ups of up to $\\mathbf{72\\times}$ when solving until the tolerance is reached, and increased performance when the compute budget is limited. ", "page_idx": 1}, {"type": "text", "text": "Source code available at: https://github.com/jandylin/iterative-gaussian-processes ", "page_idx": 1}, {"type": "text", "text": "2 Gaussian Process Regression and Marginal Likelihood Optimisation ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Formally, a GP is a stochastic process $f:\\mathcal{X}\\to\\mathbb{R}$ , such that, for any finite subset $\\{x_{i}\\}_{i=1}^{n}\\subset\\mathcal{X}$ , the set of random variables $\\{f(x_{i})\\}_{i=1}^{n}$ is jointly Gaussian. In particular, $f$ is uniquely identified by a mean function $\\mu(\\cdot)=\\mathbb{E}[f(\\cdot)]$ and a positive-definite kernel function $\\bar{k}(\\cdot,\\cdot^{\\prime};\\vartheta)=\\mathrm{{Cov}}(f(\\cdot),f(\\cdot^{\\prime}))$ with kernel hyperparameters $\\vartheta$ . We use a Mat\u00e9rn- ${\\mathit{\\Omega}}^{3}/{2}$ kernel with length scales per dimension and a scalar signal scale and write $f\\sim\\operatorname{GP}(\\mu,k)$ to express that $f$ is a GP with mean $\\mu$ and kernel $k$ . ", "page_idx": 1}, {"type": "text", "text": "For GP regression, let the training data consist of $n$ inputs $x\\subset\\mathcal{X}$ and targets $\\pmb{y}\\in\\mathbb{R}^{n}$ . We consider the Bayesian model $y_{i}=f(x_{i})+\\epsilon_{i}$ , where each $\\epsilon_{i}\\sim\\mathcal{N}(0,\\sigma^{2})$ i.i.d. and $f\\sim\\operatorname{GP}(\\mu,k)$ . We assume $\\mu=0$ without loss of generality. The posterior of this model is $f|\\pmb{y}\\sim\\mathrm{GP}(\\mu_{f|\\pmb{y}},k_{f|\\pmb{y}})$ , with ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\mu_{f|y}(\\cdot)=k(\\cdot,\\mathbf{\\boldsymbol{x}};\\vartheta)(k(\\mathbf{\\boldsymbol{x}},\\mathbf{\\boldsymbol{x}};\\vartheta)+\\sigma^{2}\\mathbf{I})^{-1}y,}}\\\\ {{k_{f|y}(\\cdot,\\cdot^{\\prime})=k(\\cdot,\\cdot^{\\prime};\\vartheta)-k(\\cdot,\\mathbf{\\boldsymbol{x}};\\vartheta)(k(\\mathbf{\\boldsymbol{x}},\\mathbf{\\boldsymbol{x}};\\vartheta)+\\sigma^{2}\\mathbf{I})^{-1}k(\\mathbf{\\boldsymbol{x}},\\cdot^{\\prime};\\vartheta),}}\\end{array}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $k(\\cdot,\\pmb{x};\\vartheta)$ , $k(x,\\cdot;\\vartheta)$ and $k(x,x;\\vartheta)$ refer to pairwise evaluations, resulting in a $1\\times n$ row vector, a $n\\times1$ column vector and a $n\\times n$ matrix respectively. ", "page_idx": 1}, {"type": "text", "text": "Pathwise Conditioning Wilson et al. [30, 31] express a GP posterior sample as a random function ", "page_idx": 1}, {"type": "equation", "text": "$$\n(f|y)(\\cdot)=f(\\cdot)+k(\\cdot,\\mathbf{x};\\vartheta)(k(x,x;\\vartheta)+\\sigma^{2}\\mathbf{I})^{-1}(y-(f(x)+\\epsilon)),\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\boldsymbol\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\sigma^{2}\\mathbf{I})$ is a random vector, $f\\sim\\mathrm{GP}(0,k)$ is a zero-mean prior function sample, and $f({\\boldsymbol{x}})$ is its evaluation at the training data. Following previous work [30, 31, 15, 16], we efficiently approximate the prior function sample using random features [20, 24] (see Appendix B for details). Using pathwise conditioning, a single linear solve suffices to evaluate a posterior function sample at arbitrary locations without further linear solves. In Section 3, we amortise the cost of this single linear solve during marginal likelihood optimisation to obtain posterior samples efficiently. ", "page_idx": 2}, {"type": "text", "text": "The Marginal Likelihood and Its Gradient With hyperparameters $\\pmb{\\theta}=\\{\\pmb{\\vartheta},\\pmb{\\sigma}\\}$ and regularised kernel matrix ${\\bf H}_{\\theta}=k({\\boldsymbol{x}},{\\boldsymbol{x}};\\vartheta)+\\sigma^{2}{\\bf I}\\in\\mathbb{R}^{n\\times n}$ , the marginal likelihood $\\mathcal{L}$ as a function of $\\pmb{\\theta}$ and its gradient $\\nabla_{\\boldsymbol{\\theta}_{k}}\\mathcal{L}$ with respect to $\\theta_{k}$ can be expressed as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\displaystyle\\mathcal{L}(\\pmb{\\theta})=-\\frac{1}{2}\\pmb{y}^{\\top}\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\pmb{y}-\\frac{1}{2}\\log\\operatorname*{det}\\mathbf{H}_{\\pmb{\\theta}}-\\frac{n}{2}\\log2\\pi,}}\\\\ {{\\displaystyle\\nabla_{\\theta_{k}}\\mathcal{L}(\\pmb{\\theta})=\\frac{1}{2}(\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\pmb{y})^{\\top}\\frac{\\partial\\mathbf{H}_{\\pmb{\\theta}}}{\\partial\\theta_{k}}\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\pmb{y}-\\frac{1}{2}\\mathrm{tr}\\left(\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\frac{\\partial\\mathbf{H}_{\\pmb{\\theta}}}{\\partial\\theta_{k}}\\right),}}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the partial derivative of $\\mathbf{H}_{\\theta}$ with respect to $\\theta_{k}$ is a $n\\times n$ matrix. We assume $n$ is too large to compute the inverse or log-determinant of $\\mathbf{H}_{\\theta}$ and iterative methods are used instead. ", "page_idx": 2}, {"type": "text", "text": "2.1 Hierarchical View of Marginal Likelihood Optimisation for Iterative Gaussian Processes ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Marginal likelihood optimisation for iterative GPs consists of bilevel optimisation, where the outer loop maximises the marginal likelihood (4) using stochastic estimates of its gradient (5). Computing these gradient estimates requires the solution to systems of linear equations. These solutions are obtained using an iterative solver in the inner loop. Figure 2 illustrates this three-level hierarchy. ", "page_idx": 2}, {"type": "text", "text": "Outer-Loop Optimiser The outer-loop optimiser maximises the marginal likelihood $\\mathcal{L}$ (4) using its gradient (5). Common choices are L-BFGS [3], when exact gradients are available, and Adam [14] in the large-data setting, when stochastic approximation is required. We consider the case where gradients are stochastic and use Adam. ", "page_idx": 2}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/b44c689ddf7eb9b8c14a4c4d97d90cae5b77c8eed22b9535a0ceb03ea5d43a92.jpg", "img_caption": [], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "Figure 2: Marginal likelihood optimisation for iterative GPs. ", "page_idx": 2}, {"type": "text", "text": "Gradient Estimator The gradient (5) involves two computationally expensive components: linear solves against the targets $\\mathbf{H}_{\\pmb{\\theta}}^{\\bar{-}1}\\pmb{y}$ and the trace term $\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-\\mathrm{1}}\\partial\\mathbf{H}_{\\theta}/\\partial\\boldsymbol{\\dot{\\theta_{k}}}\\right)$ . An unbiased estimate of the latter can be obtained using $s$ probe vectors and Hutchinson\u2019s trace estimator [13], ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\right)=\\mathbb{E}_{z}\\left[z^{\\top}\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}z\\right]\\approx\\frac{1}{s}\\sum_{j=1}^{s}z_{j}^{\\top}\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}z_{j},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the probe vectors $z_{j}\\in\\mathbb{R}^{n}$ satisfy $\\forall j:\\mathbb{E}[z_{j}z_{j}^{\\mathsf{T}}]={\\bf I}$ , and $z_{j}^{\\top}\\mathbf{H}_{\\theta}^{-1}$ is obtained using a linear solve. We refer to this as the standard estimator and set $s=64$ , unless otherwise specified. ", "page_idx": 2}, {"type": "text", "text": "Linear System Solver Substituting the trace estimator (6) back into the gradient (5), we obtain an unbiased gradient estimate in terms of the solution to a batch of systems of linear equations, ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbf{H}_{\\theta}\\left[\\,v_{y},v_{1},\\dots,v_{s}\\,\\right]=\\left[\\,\\pmb{y},z_{1},\\dots,z_{s}\\,\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "which share the same coefficient matrix $\\mathbf{H}_{\\theta}$ . Since ${\\bf H}_{\\theta}$ is positive-definite, the solution $\\pmb{v}=\\mathbf{H}_{\\pmb{\\theta}}^{-1}b$ to the system $\\mathbf{H}_{\\theta}\\,v=b$ can be obtained by finding the unique minimiser of the quadratic objective ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\boldsymbol{v}=\\underset{\\boldsymbol{u}}{\\arg\\operatorname*{min}}~\\frac{1}{2}\\boldsymbol{u}^{\\top}\\mathbf{H}_{\\theta}\\,\\boldsymbol{u}-\\boldsymbol{u}^{\\top}\\boldsymbol{b},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "facilitating the use of iterative solvers. Most popular in the GP literature are conjugate gradients (CG) [9, 29\u201331], alternating projections (AP) [22, 27, 32] and stochastic gradient descent (SGD) [15, 16]. We consider these in our study and provide detailed descriptions of them in Appendix B. Solvers are often run until the relative residual norm $\\|\\boldsymbol{b}-\\mathbf{H}_{\\theta}\\boldsymbol{u}\\|/\\|\\boldsymbol{b}\\|$ reaches a certain tolerance $\\tau$ [29, 17, 32]. We set $\\tau=0.01$ , following Maddox et al. [17]. The linear system solver in the inner loop dominates the computational costs of marginal likelihood optimisation for iterative GPs, as shown in Figure 1. Therefore, improving linear system solvers is the main focus of our work. ", "page_idx": 2}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/612f95467ca62942a9b0a2fbe366b1c888d61ad58c2d7925ab526ef35734945a.jpg", "img_caption": ["Figure 3: On the POL and ELEVATORS datasets, the pathwise estimator results in a lower RKHS distance (12) between solver initialisation and solution, as predicted by theory (14,15) (left). This results in fewer AP iterations until reaching the tolerance (left middle). When using the standard estimator, the initial distance follows the top eigenvalue of $\\mathbf{H}_{\\pmb{\\theta}}^{-1}$ (right middle), which is strongly related to the noise precision (right). The latter tends to increase during marginal likelihood optimisation when fitting the data. The effects are greater on POL due to the higher noise precision. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3 Pathwise Estimation of Marginal Likelihood Gradients ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We introduce the pathwise estimator, an alternative to the standard estimator (6) which reduces the required number of linear system solver iterations until convergence (see Figure 3). Additionally, the estimator simultaneously provides us with posterior function samples via pathwise conditioning, hence the name pathwise estimator. This facilitates predictions without further linear solves. ", "page_idx": 3}, {"type": "text", "text": "We modify the standard estimator (6) to absorb $\\mathbf{H}_{\\pmb{\\theta}}^{-1}$ into the distribution of the probe vectors [2], ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\right)=\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-\\frac{1}{2}}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-\\frac{1}{2}}\\right)=\\mathbb{E}_{\\hat{z}}\\left[\\hat{z}^{\\mathsf{T}}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\hat{z}\\right]\\approx\\,\\frac{1}{s}\\sum_{j=1}^{s}\\hat{z}_{j}^{\\mathsf{T}}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\hat{z}_{j},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\forall j:\\mathbb{E}[\\hat{z}_{j}\\hat{z}_{j}^{\\mathsf{T}}]=\\mathbf{H}_{\\theta}^{-1}$ . Probe vectors $\\hat{z}$ with the desired second moment can be obtained as $\\begin{array}{r}{f(\\mathbf{x})\\sim{\\cal N}(\\mathbf{0},k(\\mathbf{x},\\mathbf{x};\\vartheta))\\implies\\xi\\sim{\\cal N}(\\mathbf{0},\\mathbf{H}_{\\theta})\\implies\\hat{z}=\\mathbf{H}_{\\theta}^{-1}\\xi\\sim{\\cal N}(\\mathbf{0},\\mathbf{H}_{\\theta}^{-1}),}\\end{array}$ (1 ", "page_idx": 3}, {"type": "equation", "text": "", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\pmb{\\xi}=f(\\pmb{x})+\\pmb{\\epsilon}$ . Akin to the standard estimator in Section 2.1, we obtain $\\pmb{v_{y}}$ and $\\hat{z}_{j}$ by solving ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{H}_{\\theta}\\left[\\boldsymbol{v}_{y},\\hat{z}_{1},\\ldots,\\hat{z}_{s}\\right]=\\left[\\boldsymbol{y},\\boldsymbol{\\xi}_{1},\\ldots,\\boldsymbol{\\xi}_{s}\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Initial Distance to the Linear System Solution Under realistic conditions, the pathwise estimator moves the solution of the linear system closer to the origin. To show this, we consider the generic linear system $\\mathbf{H}_{\\theta}\\mathbf{u}=b$ and measure the RKHS distance between the initialisation $\\pmb{u}_{\\mathrm{init}}$ and the solution $u=\\mathbf{H}_{\\theta}^{-1}\\,b$ as $\\lVert u_{\\mathrm{init}}-u\\rVert_{\\mathbf{H}_{\\theta}}^{2}$ . With $u_{\\mathrm{init}}=0$ , which is standard [9, 29, 1, 15, 32, 16], ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|u_{\\mathrm{init}}-u\\|_{\\mathbf{H}_{\\theta}}^{2}=\\|u\\|_{\\mathbf{H}_{\\theta}}^{2}=u^{\\mathsf{T}}\\mathbf{H}_{\\theta}u=b^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}\\mathbf{H}_{\\theta}\\mathbf{H}_{\\theta}^{-1}b=b^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}b.}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Since $^{b}$ is a random vector $_{z}$ in (7) and $\\xi$ in (11)), we analyse the expected squared distance ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[b^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}b\\right]=\\mathbb{E}\\left[\\mathrm{tr}\\left(b^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}b\\right)\\right]=\\mathbb{E}\\left[\\mathrm{tr}\\left(b b^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}\\right)\\right]=\\mathrm{tr}\\left(\\mathbb{E}\\left[b b^{\\mathsf{T}}\\right]\\mathbf{H}_{\\theta}^{-1}\\right).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For the standard estimator (6), we substitute $b:=z$ with $\\boldsymbol{\\mathfrak{L}}\\left[z\\boldsymbol{z}^{\\mathsf{T}}\\right]=\\mathbf{I},$ , yielding ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\Vert u_{\\mathrm{init}}-u\\Vert_{\\mathbf{H}_{\\theta}}^{2}\\right]=\\operatorname{tr}\\left(\\mathbb{E}\\left[z z^{\\mathsf{T}}\\right]\\mathbf{H}_{\\theta}^{-1}\\right)=\\operatorname{tr}\\left(\\mathbf{I}\\mathbf{H}_{\\theta}^{-1}\\right)=\\operatorname{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\right).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For the pathwise estimator (9), we substitute $b:=\\xi$ with $\\mathbb{E}\\left[\\boldsymbol{\\xi}\\boldsymbol{\\xi}^{\\mathsf{T}}\\right]=\\mathbf{H}_{\\theta}$ , yielding ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}\\left[\\left\\|u_{\\mathrm{init}}-u\\right\\|_{\\mathbf{H}_{\\theta}}^{2}\\right]=\\mathrm{tr}\\left(\\mathbb{E}\\left[\\boldsymbol{\\xi}\\boldsymbol{\\xi}^{\\mathsf{T}}\\right]\\mathbf{H}_{\\theta}^{-1}\\right)=\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}\\mathbf{H}_{\\theta}^{-1}\\right)=\\mathrm{tr}\\left(\\mathbf{I}\\right)=n.}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The initial distance for the standard estimator is equal to the trace of $\\mathbf{H}_{\\theta}^{-1}$ , whereas it is constant for the pathwise estimator. Figure 3 illustrates that this trace follows the top eigenvalue, which roughly matches the noise precision. As the model ftis the data better, the noise precision increases, increasing the initial distance for the standard but not for the pathwise estimator. In practice, the latter leads to faster solver convergence, especially for problems with high noise precision (see Table 1). ", "page_idx": 3}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/2f2b7b8b61e4ff0ade0ff9bab5d18efc04b2010094dcf7048d2ea7266e29be72.jpg", "img_caption": ["Figure 4: On the POL dataset, increasing the number of posterior samples improves the performance of pathwise conditioning until diminishing returns start to manifest with more than 64 samples (left). Furthermore, with $4\\times$ as many probe vectors, the total cumulative runtime only increases by around $10\\%$ because the computational costs are dominated by shared kernel function evaluations (right). "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Amortising Linear Solves for Optimisation and Prediction The name of the pathwise estimator comes from the fact that solving the linear systems (11) provides us with all of the terms we need to construct a set of $s$ posterior samples via pathwise conditioning (3). Each of these is given by ", "page_idx": 4}, {"type": "equation", "text": "$$\n(f|y)(\\cdot)=f(\\cdot)+k(\\cdot,x;\\vartheta)\\,\\mathbf{H}_{\\theta}^{-1}(y-\\xi)=f(\\cdot)+k(\\cdot,x;\\vartheta)(v_{y}-\\hat{z}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We can use these to make predictions without requiring any additional linear system solves. ", "page_idx": 4}, {"type": "text", "text": "How Many Probe Vectors and Posterior Samples Do We Need? In the literature [9, 17, 2, 32], it is common to use $s\\leq16$ probe vectors for marginal likelihood optimisation. However, a larger number of posterior samples, around $s=64$ , is necessary to make accurate predictions [2, 15, 16] (see Figure 4). Thus, to amortise linear system solves across marginal likelihood optimisation and prediction, we must use the same number of probes for both. Interestingly, as shown in Figure 4, using 64 instead of 16 probe vectors only increases the runtime by around $10\\%$ because the computational costs are dominated by kernel function evaluations, which are shared among probe vectors. ", "page_idx": 4}, {"type": "text", "text": "Estimator Variance The standard estimator with Gaussian probe vectors and the pathwise estimator have the same variance if $\\mathbf{H}_{\\theta}$ and $\\partial\\mathbf{H}_{\\theta}/\\partial\\theta_{k}$ commute with each other (see Appendix A.1). There has been work developing trace estimators with lower variance [18, 8], however, we did not pursue these as we find variance to be sufficiently low, even when relying on only $s=16$ probe vectors. ", "page_idx": 4}, {"type": "text", "text": "Approximate Prior Function Samples Using Random Features In practice, the pathwise estimator requires samples from the prior $f\\sim\\mathrm{GP}(0,k)$ , which are intractable for large datasets without the use of random features [30, 31]. In Figure 5, we show that, despite using random features, most of the time the marginal likelihood optimisation trajectory of the pathwise estimator matches the trajectory of exact optimisation using Cholesky factorisation and backpropagation. Further, we confirm that deviations of the pathwise estimator are indeed due to the use of random features by demonstrating that we can remove these deviations using exact samples from the prior instead. ", "page_idx": 4}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/4d809a7ff8589b65c9d3653eafee51543ef5128d5d68293dbf41c60ffe0002a1.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 5: Across all datasets and marginal likelihood steps, most hyperparameter trajectories of the pathwise estimator rarely differ from exact optimisation, as shown by the histogram illustrating the differences between hyperparameters (left). On selected length scales of the ELEVATORS dataset, the pathwise estimator deviates due to the use of random features to approximate prior function samples. With exact samples from the prior, the pathwise estimator matches exact optimisation again (right). ", "page_idx": 4}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/37c616530d40ab8d363ee17f1eac94f9557ccd9b1e6b0044b7794b9b1ba710a7.jpg", "img_caption": ["Figure 6: Two-dimensional cross-sections along top eigendirections of the inner-loop quadratic objective after 20 marginal likelihood steps on the POL dataset. The current solution is placed at the origin of coordinates (left and middle). Warm starting significantly reduces the initial root-meansquare RKHS distance to the solution throughout marginal likelihood optimisation (right). "], "img_footnote": [], "page_idx": 5}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/c16073f3573db91305e74c24833ca0c04f0c98fe740d68e80f4c743042e527bf.jpg", "img_caption": ["Figure 7: Required number of solver iterations to the tolerance $\\tau=0.01$ during marginal likelihood optimisation on the POL and ELEVATORS datasets. Warm starting with the previous solution reduces the required number of iterations to reach the tolerance without sacrificing predictive performance. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "4 Warm Starting Linear System Solvers ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Linear system solvers are typically initialised at zero [9, 29, 1, 15, 32, 16].1 However, because the outer-loop marginal likelihood optimisation does not change the hyperparameters much between consecutive steps, we expect that the solution to inner-loop linear systems also does not change much between consecutive steps (see Appendix A.2 for a more formal argument). Therefore, we suggest to warm start linear system solvers by initialising them at the solution of the previous. This requires that the targets of the linear systems, $z_{j}$ or $\\pmb{\\xi}_{j}$ , are not resampled throughout optimisation, which can introduce bias [5]. However, we find that warm starting consistently provides gains across all linear system solvers for both the standard and the pathwise estimator, and that the bias is negligible. ", "page_idx": 5}, {"type": "text", "text": "Visualising Warm Starts Figure 6 visualises the two top eigendirections of the inner-loop quadratic objective on POL. Throughout training, warm starting solvers at the solution to the previous linear system results in a substantially smaller initial distance to the current solution. ", "page_idx": 5}, {"type": "text", "text": "Effects on Linear System Solver Convergence Reducing the initial RKHS distance to the solution reduces the required number of solver iterations until the tolerance $\\tau=0.01$ is reached for all solvers and all five datasets, as shown in Figure 7, Table 1 and Appendix C. However, the effectiveness depends on the solver type. CG is more sensitive to the direction of descent rather than the distance to the solution because it uses line searches to take big steps. It only obtains a $2.1\\times$ speed-up on average. AP and SGD benefit more, with average speed-ups of $18.9\\times$ and $5.1\\times$ , respectively. ", "page_idx": 5}, {"type": "text", "text": "Table 1: Test log-likelihoods, total training times, and average speed-up among datasets for CG, AP, and SGD after 100 outer-loop marginal likelihood steps with learning rate of 0.1. We consider five datasets with $n<50\\mathrm{k}$ , which allows us to solve to tolerance, and report the mean over 10 data splits. ", "page_idx": 6}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/c0fb579aec19ce1e88e6b0356de8a8388f15e9bc16b6858b9489cb067233b0f2.jpg", "img_caption": ["Figure 8: Across all marginal likelihood steps and datasets, warm starting results in hyperparameter trajectories which barely differ from exact optimisation, as shown by the histogram (left). On the same selected length scales from Figure 5, warm starting matches exact optimisation (right). "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Does Warm Starting Introduce Bias? A potential concern when warm starting is that the latter introduces bias into the optimisation trajectory because the linear system targets are not resampled throughout optimisation. Although individual gradient estimates are unbiased, estimates are correlated along the optimisation trajectory. In fact, after fixing the targets, gradients become deterministic and it is unclear whether the induced optimum converges to the true optimum.2 Fortunately, one can show that the marginal likelihood at the optimum implied by these gradients will converge in probability to the marginal likelihood of the true optimum. ", "page_idx": 6}, {"type": "text", "text": "Theorem 1. (informal) Under reasonable assumptions, the marginal likelihood $\\mathcal{L}$ of the hyperparameters obtained by maximising the objective implied by the warm-started gradients $\\tilde{\\pmb{\\theta}}^{*}$ will converge in probability to the marginal likelihood of a true maximum $\\theta^{*}\\colon\\mathcal{L}(\\tilde{\\theta}^{*})\\ \\stackrel{p}{\\to}\\mathcal{L}(\\theta^{*})$ as $s\\to\\infty$ . ", "page_idx": 6}, {"type": "text", "text": "See Appendices A.3 and A.4 for details. In practice, a small number of samples seems to be sufficient. In Appendix C, we illustrate that optimisation trajectories of warm-started solvers are almost identical to trajectories obtained by non-warm-started solvers across solver types and datasets. ", "page_idx": 6}, {"type": "text", "text": "Warm Starting the Pathwise Estimator One advantage of the pathwise estimator from Section 3 is the reduced RKHS distance between the origin and the solution. When warm starting, the inner-loop solver no longer initialises at the origin, and thus, one may be concerned that we lose this advantage. However, empirically, this is not the case. As shown in Table 1, combining both techniques further accelerates AP and SGD, reaching $72.1\\times$ and $7.2\\times$ average speed-ups across our datasets relative to the standard estimator without warm starting. Furthermore, since we run solvers until reaching the tolerance, the predictive performance is almost identical among all methods and solvers. ", "page_idx": 6}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/32f6bf142a68ed41c78a5c16fd018052a2b786fb4be2e00218b1976716ceb951.jpg", "img_caption": ["Figure 9: Relative residual norms of the probe vector linear systems at each marginal likelihood step on the POL dataset when solving until the tolerance or a maximum number of solver epochs is reached. Increasing the compute budget generally reduces the residual norm. Given the same compute budget, the pathwise estimator reaches lower residual norms than the standard estimator. Adding warm starts further reduces the residual norm for both estimators. However, the final test log-likelihood does not always match the residual norm. Surprisingly, good predictive performance can be obtained even if the residual norm is much higher than the tolerance $\\tau=0.01$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "5 Solving Linear Systems on a Limited Compute Budget ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Our experiments so far have only considered relatively small datasets with $n<50\\mathrm{k}$ , such that innerloop solvers can reach the tolerance in a reasonable amount of time. However, on large datasets, where linear system conditioning may be poor, reaching a low relative residual norm can become computationally infeasible. Instead, linear system solvers are commonly given a limited compute budget. Gardner et al. [9] limit the number of CG iterations to 20, Wu et al. [32] use 11 epochs of AP, Antor\u00e1n et al. [2] run SGD for $50\\mathrm{k}$ iterations, and Lin et al. [15, 16] run SGD for $100\\mathrm{k}$ iterations. While effective for managing computational costs, it is not well understood how early stopping before reaching the tolerance affects different solvers and marginal likelihood optimisation. Furthermore, it is unclear whether a certain tolerance is required to obtain good downstream predictive performance. ", "page_idx": 7}, {"type": "text", "text": "The Effects of Early Stopping We repeat the experiments from Table 1 but introduce limited compute budgets: 10, 20, 30, 40 or 50 solver epochs, where one epoch refers to computing each value in ${\\bf H}_{\\theta}$ once (see Appendix B for details).3 In this setting, solvers terminate upon either reaching the relative residual norm tolerance or when the compute budget is exhausted, whichever occurs first. ", "page_idx": 7}, {"type": "text", "text": "In Figure 9, we illustrate the relative residual norms reached for each compute budget on the POL dataset (see Figures 14 to 17 in Appendix C for other datasets). In general, the residual norms increase as ${\\bf H}_{\\theta}$ becomes more ill-conditioned during optimisation, and as the compute budget is decreased. The increase in residual norms is much larger for CG than the other solvers, which is consistent with previous reports of CG not being amenable to early stopping [15]. AP seems to behave slightly better than SGD under a limited compute budget. Both the pathwise estimator and warm starting combine well with early stopping, reaching lower residual norms when using a budget of 10 solver epochs than the standard estimator without warm starting using a budget of 50 solver epochs. ", "page_idx": 7}, {"type": "text", "text": "In terms of predictive performance, we see that CG with the standard estimator and no warm starting suffers the most from early stopping. Changing to the pathwise estimator and warm starting recovers good performance most of the time. SGD also shows some sensitivity to early stopping, but there seems to be a stronger correlation between invested compute and final performance. Surprisingly, AP generally achieves good predictive performance even on the smallest compute budget, despite not reaching the tolerance of $\\tau=0.01$ . Overall, the relationship between reaching a low residual norm and obtaining good predictive performance seems to be weak. This is an unexpected yet interesting observation, and future research should investigate the suitability of the relative residual norm as a metric to determine solver convergence. ", "page_idx": 7}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/a5ee8886049813942c31f19ea58b0ee210df01e07fa06a6f04d120235e763b58.jpg", "img_caption": [], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Figure 10: Relative residual norms and test log-likelihoods during marginal likelihood optimisation on large datasets using the pathwise estimator. Warm starting allows solver progress to accumulate over multiple marginal likelihood steps, leading to decreasing residual norms. Without warm starting, residual norms tend to remain similar or increase during optimisation. Despite reaching significantly lower residual norms, the predictive performance does not always improve, akin to Figure 9. ", "page_idx": 8}, {"type": "text", "text": "Demonstration on Large Datasets After analysing early stopping on small datasets, we now turn to larger UCI datasets $391\\mathrm{k}<n<1.8\\mathrm{M}$ , where solving until reaching the tolerance becomes computationally infeasable. Thus, we introduce a compute budget of 10 solver epochs per marginal likelihood step. Hyperparameters are initialised with the heuristic of Lin et al. [15] and optimised using a learning rate of 0.03 for 30 Adam steps (15 for HOUSEELECTRIC due to high computational costs). We use the pathwise estimator because it accelerates solver convergence (see Section 3), and it enables efficient tracking of predictive performance during optimisation. See Appendix B for details. ", "page_idx": 8}, {"type": "text", "text": "Figure 10 visualises the evolution of the relative residual norm of the probe vector linear systems and the predictive test log-likelihood during marginal likelihood optimisation. A full set of results is in Appendix C. For all solvers, warm starting leads to lower residual norms throughout outer-loop steps. This suggests a synergistic behaviour between early stopping and warm starting: the latter allows solver progress to accumulate across marginal likelihood steps. This can be interpreted as amortising the inner-loop linear system solve over multiple outer-loop steps. Despite the lower residual norm, CG is brittle under early stopping, obtaining significantly worse performance than AP and SGD on BUZZ and HOUSEELECTRIC. AP and SGD seem to be more robust to early stopping. However, lower residual norms do not always translate to improved predictive performance. Furthermore, we find that SGD can suffer due to the optimal learning rate changing as the hyperparameters change. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Building upon a hierarchical view of marginal likelihood optimisation, this paper consolidates several iterative GP techniques into a common framework, analysing them and showing their applicability across different linear system solvers. Overall, these provide speed-ups of up to $72\\times$ when solving until a specified tolerance is reached, and decrease the average relative residual norm by up to $7\\times$ under a limited compute budget. Additionally, our analyses lead to the following findings: Firstly, the pathwise gradient estimater accelerates linear system solvers by moving solutions closer to the origin, and also provides amortised predictions as an added benefit by turning probe vectors into posterior samples via pathwise conditioning. Secondly, warm starting solvers at previous solutions during marginal likelihood optimisation reduces the number of solver iterations to tolerance at the cost of introducing negligible bias into the optimisation trajectory. Furthermore, warm starting combines well with pathwise gradient estimation. Finally, stopping linear system solvers after exhausting a limited compute budget generally increases the relative residual norm. However, when paired with warm starting, solver progress accumulates, amortising inner-loop linear system solves over multiple outer-loop steps. Nonetheless, we observe that low relative residual norms are not always necessary to obtain good predictive performance, which presents an interesting avenue for future research. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Jihao Andreas Lin and Shreyas Padhy were supported by the University of Cambridge Harding Distinguished Postgraduate Scholars Programme. Jos\u00e9 Miguel Hern\u00e1ndez-Lobato acknowledges support from a Turing AI Fellowship under grant EP/V023756/1. We thank Runa Eschenhagen for helpful discussions. This work was performed using resources provided by the Cambridge Service for Data Driven Discovery (CSD3) operated by the University of Cambridge Research Computing Service (www.csd3.cam.ac.uk), provided by Dell EMC and Intel using Tier-2 funding from the Engineering and Physical Sciences Research Council (capital grant EP/T022159/1), and DiRAC funding from the Science and Technology Facilities Council (www.dirac.ac.uk). This work was also supported with Cloud TPUs from Google\u2019s TPU Research Cloud (TRC). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] J. Antor\u00e1n, R. Barbano, J. Leuschner, J. M. Hern\u00e1ndez-Lobato, and B. Jin. Uncertainty Estimation for Computed Tomography with a Linearised Deep Image Prior. arXiv:2203.00479, 2022. Cited on pages 4, 6.   \n[2] J. Antor\u00e1n, S. Padhy, R. Barbano, E. T. Nalisnick, D. Janz, and J. M. Hern\u00e1ndez-Lobato. Sampling-based inference for large linear models, with application to linearised Laplace. In International Conference on Learning Representations, 2023. Cited on pages 4\u20136, 8.   \n[3] A. Artemev, D. R. Burt, and M. van der Wilk. Tighter Bounds on the Log Marginal Likelihood of Gaussian Process Regression using Conjugate Gradients. In International Conference on Machine Learning, 2021. Cited on pages 3, 6.   \n[4] J. Bradbury, R. Frostig, P. Hawkins, M. J. Johnson, C. Leary, D. Maclaurin, G. Necula, A. Paszke, J. VanderPlas, S. Wanderman-Milne, and Q. Zhang. JAX: composable transformations of Python+NumPy programs, 2018. Cited on page 17.   \n[5] H. Chen, L. Zheng, R. Al Kontar, and G. Raskutti. Stochastic Gradient Descent in Correlated Settings: A Study on Gaussian Processes. In Advances in Neural Information Processing Systems, 2020. Cited on page 6.   \n[6] M. P. Deisenroth, D. Fox, and C. E. Rasmussen. Gaussian Processes for Data-Efficient Learning in Robotics and Control. IEEE Trans. Pattern Anal. Mach. Intell., 2015. Cited on page 1.   \n[7] D. Dua and C. Graff. UCI Machine Learning Repository, 2017. Cited on pages 17, 33\u201336.   \n[8] E. N. Epperly, J. A. Tropp, and R. J. Webber. XTrace: Making the Most of Every Sample in Stochastic Trace Estimation. Matrix Analysis and Applications, 45(1), 2024. Cited on page 5.   \n[9] J. Gardner, G. Pleiss, K. Q. Weinberger, D. Bindel, and A. G. Wilson. GPyTorch: Blackbox Matrix-matrix Gaussian Process Inference with GPU Acceleration. In Advances in Neural Information Processing Systems, 2018. Cited on pages 1, 3\u20136, 8, 18, 19, 35.   \n[10] P. Ghasemi, M. Karbasi, A. Z. Nouri, M. S. Tabrizi, and H. M. Azamathulla. Application of Gaussian process regression to forecast multi-step ahead SPEI drought index. Alexandria Engineering Journal, 60(6), 2021. Cited on page 1.   \n[11] M. N. Gibbs and D. J. C. MacKay. Efficient Implementation of Gaussian Processes. Technical report, University of Cambridge, 1997. Cited on page 1.   \n[12] J. Hensman, N. Fusi, and N. D. Lawrence. Gaussian Processes for Big Data. In Uncertainty in Artificial Intelligence, 2013. Cited on page 1.   \n[13] M. Hutchinson. A stochastic estimator of the trace of the influence matrix for Laplacian smoothing splines. Communications in Statistics - Simulation and Computation, 19(2), 1990. Cited on page 3.   \n[14] D. P. Kingma and J. Ba. Adam: A Method for Stochastic Optimization. In International Conference on Learning Representations, 2015. Cited on pages 3, 18.   \n[15] J. A. Lin, J. Antor\u00e1n, S. Padhy, D. Janz, J. M. Hern\u00e1ndez-Lobato, and A. Terenin. Sampling from Gaussian Process Posteriors using Stochastic Gradient Descent. In Advances in Neural Information Processing Systems, 2023. Cited on pages 1, 3\u20136, 8, 9, 18, 20, 35.   \n[16] J. A. Lin, S. Padhy, J. Antor\u00e1n, A. Tripp, A. Terenin, C. Szepesv\u00e1ri, J. M. Hern\u00e1ndez-Lobato, and D. Janz. Stochastic Gradient Descent for Gaussian Processes Done Right. In International Conference on Learning Representations, 2024. Cited on pages 1, 3\u20136, 8, 18, 20, 35.   \n[17] W. J. Maddox, S. Kapoor, and A. G. Wilson. When are Iterative Gaussian Processes Reliably Accurate? In ICML OPTML Workshop, 2021. Cited on pages 3, 5.   \n[18] R. Meyer, C. Musco, C. Musco, and D. Woodruff. Hutch $^{++}$ : Optimal Stochastic Trace Estimation. Symposium on Simplicity in Algorithms, 2021, 2021. Cited on page 5.   \n[19] J. Qui\u00f1onero-Candela and C. E. Rasmussen. A Unifying View of Sparse Approximate Gaussian Process Regression. Journal of Machine Learning Research, 6, 1, 2005. Cited on page 1.   \n[20] A. Rahimi and B. Recht. Random Features for Large-scale Kernel Machines. In Advances in Neural Information Processing Systems, 2008. Cited on pages 3, 18.   \n[21] C. E. Rasmussen and C. K. I. Williams. Gaussian Processes for Machine Learning. MIT Press, 2006. Cited on page 1.   \n[22] S. Shalev-Shwartz and T. Zhang. Stochastic Dual Coordinate Ascent Methods for Regularized Loss Minimization. Journal of Machine Learning Research, 14, 2012. Cited on pages 1, 3.   \n[23] J. Snoek, H. Larochelle, and R. P. Adams. Practical Bayesian Optimization of Machine Learning Algorithms. In Advances in Neural Information Processing Systems, 2012. Cited on page 1.   \n[24] D. J. Sutherland and J. Schneider. On the error of random Fourier features. In Uncertainty in Artificial Intelligence, 2015. Cited on pages 3, 18.   \n[25] K. Tazi, J. A. Lin, R. Viljoen, A. Gardner, T. John, H. Ge, and R. E. Turner. Beyond Intuition, a Framework for Applying GPs to Real-World Data. In ICML Structured Probabilistic Inference & Generative Modeling Workshop, 2023. Cited on page 1.   \n[26] M. K. Titsias. Variational learning of inducing variables in sparse Gaussian processes. In Artificial Intelligence and Statistics, 2009. Cited on page 1.   \n[27] S. Tu, R. Roelofs, S. Venkataraman, and B. Recht. Large Scale Kernel Learning using Block Coordinate Descent. arXiv:1602.05310, 2016. Cited on pages 1, 3.   \n[28] R. Vershynin. High-Dimensional Probability: An Introduction with Applications in Data Science. Cambridge University Press, 2018. Cited on pages 13, 14.   \n[29] K. A. Wang, G. Pleiss, J. R. Gardner, S. Tyree, K. Q. Weinberger, and A. G. Wilson. Exact Gaussian Processes on a Million Data Points. In Advances in Neural Information Processing Systems, 2019. Cited on pages 1, 3, 4, 6, 19, 35.   \n[30] J. T. Wilson, V. Borovitskiy, A. Terenin, P. Mostowsky, and M. P. Deisenroth. Efficiently Sampling Functions from Gaussian Process Posteriors. In International Conference on Machine Learning, 2020. Cited on pages 2, 3, 5, 18.   \n[31] J. T. Wilson, V. Borovitskiy, A. Terenin, P. Mostowsky, and M. P. Deisenroth. Pathwise Conditioning of Gaussian Processes. Journal of Machine Learning Research, 22, 1, 2021. Cited on pages 2, 3, 5, 18.   \n[32] K. Wu, J. Wenger, H. Jones, G. Pleiss, and J. R. Gardner. Large-Scale Gaussian Processes via Alternating Projection. In International Conference on Artificial Intelligence and Statistics, 2024. Cited on pages 1, 3\u20136, 8, 19, 35. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "A Mathematical Derivations ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "In this appendix, we provide mathematical derivations for claims in the main paper. ", "page_idx": 11}, {"type": "text", "text": "A.1 Variance of Standard and Pathwise Gradient Estimator ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "To compare the variances of the standard estimator (6) and the pathwise estimator (9), we calculate ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathrm{Var}\\left(\\hat{z}^{\\top}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}\\hat{z}\\right)\\mathrm{~with~}\\,\\hat{z}\\sim\\mathcal{N}({\\bf0},{\\bf H}_{\\theta}^{-1}).\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "The variance of the standard estimator is given by ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{Var}\\left(z^{\\mathsf{T}}\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}z\\right)=\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}+\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-1}\\right)\\right),}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad=\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\right)+\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-1}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "The variance of the pathwise estimator is given by ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{Var}\\left(\\hat{z}^{\\top}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}\\hat{z}\\right)=2\\operatorname{tr}\\left(\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}{\\bf H}_{\\theta}^{-1}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}{\\bf H}_{\\theta}^{-1}\\right),}\\\\ &{\\qquad\\qquad\\qquad=\\operatorname{tr}\\left({\\bf H}_{\\theta}^{-1}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}{\\bf H}_{\\theta}^{-1}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}\\right)+\\operatorname{tr}\\left({\\bf H}_{\\theta}^{-1}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}{\\bf H}_{\\theta}^{-1}\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\theta_{k}}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "Therefore, the variances of both estimators share the first trace term and only differ in the second trace term. Hence, their variances will be identical if ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-1}\\right)\\stackrel{!}{=}\\mathrm{tr}\\left(\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\mathbf{H}_{\\theta}^{-1}\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}\\right),\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "which is the case if $\\mathbf{H}_{\\theta}^{-1}$ and $\\partial\\mathbf{H}_{\\theta}/\\partial\\theta_{k}$ commute with each other. ", "page_idx": 11}, {"type": "text", "text": "For example, consider the derivative with respect to the noise scale $\\sigma$ , ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\frac{\\partial{\\bf H}_{\\theta}}{\\partial\\sigma}=\\frac{\\partial}{\\partial\\sigma}\\left(k({\\pmb x},{\\pmb x};\\vartheta)+\\sigma^{2}{\\bf I}\\right)=2\\sigma{\\bf I}.\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "In this case, $\\mathbf{H}_{\\theta}^{-1}$ and $\\partial\\mathbf{H}_{\\theta}/\\partial\\boldsymbol{\\sigma}$ commute with each other, such that both estimators have the same variance. In general, a sufficient condition for matrix multiplication to be commutative is simultaneous diagonalisability of two matrices. ", "page_idx": 11}, {"type": "text", "text": "A.2 Taylor Approximation View of Warm Start ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "At iterations $t$ and $t+1$ of the outer-loop marginal likelihood optimiser, associated with ${\\pmb\\theta}^{(t)}$ and $\\pmb{\\theta}^{(t+1)}$ , the linear system solver must solve two batches of linear systems, namely ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbf{H}_{\\theta}^{(t)}\\left[\\boldsymbol{v}_{y}^{(t)},\\boldsymbol{v}_{1}^{(t)},\\ldots,\\boldsymbol{v}_{s}^{(t)}\\right]=\\left[\\boldsymbol{y},\\boldsymbol{z}_{1}^{(t)},\\ldots,\\boldsymbol{z}_{s}^{(t)}\\right]\\quad\\mathrm{and}}\\\\ &{}&{\\mathbf{H}_{\\theta}^{(t+1)}\\left[\\boldsymbol{v}_{y}^{(t+1)},\\boldsymbol{v}_{1}^{(t+1)},\\ldots,\\boldsymbol{v}_{s}^{(t+1)}\\right]=\\left[\\boldsymbol{y},\\boldsymbol{z}_{1}^{(t+1)},\\ldots,\\boldsymbol{z}_{s}^{(t+1)}\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "where H(\u03b8t) a $\\mathbf{H}_{\\theta}^{(t+1)}$ are related through the change from ${\\pmb\\theta}^{(t)}$ to $\\pmb{\\theta}^{(t+1)}$ and ${\\pmb v}_{{\\pmb y}}^{(t)}$ and ${\\pmb v}_{y}^{(t+1)}$ are further related through sharing the same right-hand side $\\textit{\\textbf{y}}$ in the linear system. In such a setting, where the coefficient matrix only changes slightly and the right-hand side remains fixed, we can approximate $\\pmb{v}^{(t+1)}$ using a first-order Taylor expansion of $\\mathbf{H}_{\\theta}^{(\\bar{t}+1)}$ ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left(\\mathbf{H}_{\\theta}^{(t+1)}\\right)^{-1}\\approx\\left(\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)^{-1}-\\left(\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)^{-1}\\left(\\mathbf{H}_{\\theta}^{\\left(t+1\\right)}-\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)\\left(\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)^{-1},}\\\\ &{\\qquad v^{\\left(t+1\\right)}\\approx v^{\\left(t\\right)}-\\left(\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)^{-1}\\left(\\mathbf{H}_{\\theta}^{\\left(t+1\\right)}-\\mathbf{H}_{\\theta}^{\\left(t\\right)}\\right)\\,v^{\\left(t\\right)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "If $\\Delta\\,=\\,\\mathbf{H}_{\\pmb{\\theta}}^{(t+1)}\\,-\\,\\mathbf{H}_{\\pmb{\\theta}}^{(t)}$ is small then $\\pmb{v}^{(t)}$ will be close to $\\pmb{v}^{(t+1)}$ , such that we can reuse $\\pmb{v}^{(t)}$ to initialise the linear system solver when solving for . To satisfy the condition of fixed right-hand sides, we must set $\\smash{\\boldsymbol{z}_{j_{m a x}}^{(t)}=\\boldsymbol{z}_{j}}$ at the cost of introducing some bias throughout optimisation, which turns out to be negligible in practice (see Section 4 and Appendices A.3 and A.4 for details). ", "page_idx": 11}, {"type": "text", "text": "A.3 Convergence of Warm Starting Marginal Likelihood Optimisation ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Recall the gradient of the marginal likelihood objective: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}(\\pmb{\\theta})}{\\partial\\theta_{k}}=\\frac{1}{2}(\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\pmb{y})^{\\top}\\frac{\\partial\\mathbf{H}_{\\pmb{\\theta}}}{\\partial\\theta_{k}}\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\pmb{y}-\\frac{1}{2}\\mathrm{tr}\\left(\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\frac{\\partial\\mathbf{H}_{\\pmb{\\theta}}}{\\partial\\theta_{k}}\\right)\\qquad\\qquad k\\in\\{1,\\ldots,d_{\\pmb{\\theta}}\\},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $H_{\\theta}\\in\\mathbb{R}^{n\\times n}$ is a positive semi-definite symmetric matrix, $\\pmb{y}\\in\\mathbb{R}^{n}$ is a real vector, $n$ is the number of \u201cdata\u201d examples, and $d_{\\theta}$ is the number of hyperparameters. Also, recall the the warm start estimator $\\tilde{g}_{k}(\\pmb\\theta)$ to the gradient $\\partial\\mathcal{L}(\\pmb{\\theta})/\\partial\\theta_{k}$ : ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\tilde{g}_{k}(\\pmb\\theta)=\\frac{1}{s}\\sum_{j=1}^{s}z_{j}^{\\top}\\mathbf H_{\\pmb\\theta}^{-1}\\frac{\\partial\\mathbf H_{\\pmb\\theta}}{\\partial\\theta_{k}}z_{j},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where the probe vectors $z_{j}$ are random variables with identity second moments: $\\mathbb{E}[z_{j}z_{j}^{\\mathsf{T}}]=I$ , and $s$ is the number of probe vectors in the trace estimator. ", "page_idx": 12}, {"type": "text", "text": "Notation We will write $S^{n-1}\\ {\\stackrel{\\mathrm{def}}{=}}\\ \\{{\\pmb x}\\,\\in\\,\\mathbb{R}^{n}\\,:\\,\\|{\\pmb x}\\|_{2}\\,=\\,1\\}$ for a sphere in $\\mathbb{R}^{n}$ . For a real matrix $\\mathbf{A}\\in\\mathbb{R}^{m\\times n}$ , we will denote the operator (spectral) norm $\\begin{array}{r}{\\operatorname*{sup}_{x\\in S^{n-1}}\\operatorname*{sup}_{y\\in S^{m-1}}y^{\\top}\\mathbf{A}x}\\end{array}$ with $\\|\\mathbf{A}\\|_{\\mathrm{op}}$ . ", "page_idx": 12}, {"type": "text", "text": "Definition 2 ( $S u b$ -gaussian norm). The sub-gaussian norm of a sub-gaussian random variable $X$ is defined as: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\|X\\|_{\\psi_{2}}=\\operatorname*{inf}\\{t>0:\\mathbb{E}\\left[X^{2}/t^{2}\\right]\\leq2\\}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Definition 3 (Sub-exponential norm). The sub-exponential norm of a sub-exponential random variable $X$ is defined as: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\|X\\|_{\\psi_{2}}=\\operatorname*{inf}\\{t>0:\\mathbb{E}\\left[|X|/t\\right]\\leq2\\}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "We will denote the optimisation domain for the hyperparameters as $\\Theta$ , where we assume $\\Theta\\subseteq\\mathbb{R}^{d_{\\theta}}$ . ", "page_idx": 12}, {"type": "text", "text": "Theorem 4. Assume that the probe vectors $(z_{1},\\ldots,z_{s})$ are zero mean, coordinate-wise independent,   \nAons stuhme ed tohmaat itnh eo fs mb $z_{j}$ s.i nTghuelna, rf ovra laulle ${\\|{z_{j i}}\\|_{\\psi_{2}}}=\\sigma\\forall i\\in\\{1,\\ldots,n\\},j\\in\\{1,\\ldots,s\\}$ $\\mathbf{H}_{\\pmb{\\theta}}^{-1}\\frac{\\partial\\mathbf{H}_{\\pmb{\\theta}}}{\\partial\\theta_{k}}$ $k\\in\\{1,\\ldots,d_{\\pmb\\theta}\\}$ $\\pmb{\\theta}$ $\\lambda^{\\mathrm{max}}$ $\\delta>0$ ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\left\\Vert\\tilde{g}(\\theta)-\\frac{\\partial\\mathcal{L}}{\\partial\\theta}(\\theta)\\right\\Vert_{\\infty}<\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\mathrm{max}}\\right]>1-\\delta,\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "The crux of the proof of Theorem 4 comes from bounding the spectral norm of the difference $\\left(\\left(\\sum_{j=1}^{s}z_{j}z_{j}^{\\mathsf{T}}\\right)^{}-\\mathbf{I}\\right)$ . To do so, it is useful to introduce the following definitions and lemmas. ", "page_idx": 12}, {"type": "text", "text": "Lemma 5 (Computing the operator norm on a net [28, Exercise 4.4.3]). Let A be an $n\\times n$ matrix and $\\varepsilon\\in[0,1)$ . Then, for any $\\varepsilon$ -net $\\Sigma_{\\varepsilon}$ of the unit sphere $S^{n-1}$ , we have: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{x\\in\\Sigma_{\\varepsilon}}x^{\\top}\\mathbf{A}x\\leq\\|\\mathbf{A}\\|_{\\mathrm{op}}\\leq\\frac{1}{1-2\\varepsilon}\\operatorname*{sup}_{x\\in\\Sigma_{\\varepsilon}}x^{\\top}\\mathbf{A}x.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Lemma 6 (Size of $\\varepsilon$ -net on $S^{n-1}$ [28, Corollary 4.2.13]). There exists an $\\varepsilon$ -net on $S^{n-1}$ with cardinality at most $\\textstyle{\\left({\\frac{2}{\\varepsilon}}+1\\right)^{n}}$ . ", "page_idx": 12}, {"type": "text", "text": "Lemma 7. Let $\\begin{array}{r}{\\mathbf{M}=\\frac{1}{s}\\sum_{j=1}^{s}z_{j}z_{j}^{\\intercal}-I}\\end{array}$ be an $n\\times n$ random matrix, where $z_{j i}$ are independent and identically distributed sub-gaussian random variables with sub-gaussian norm $\\|z_{i j}\\|_{\\psi_{2}}=\\sigma$ , and $\\pmb{x}\\in S^{n-1}$ any unit vector in $\\mathbb{R}^{n}$ . Then: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{P}[{\\pmb x}^{\\top}{\\bf M}{\\pmb x}\\geq\\beta]\\leq2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}}{C_{2}^{2}\\sigma^{2}},\\frac{\\beta}{C_{2}\\sigma}\\right)s},}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $C_{1},C_{2}$ are absolute constants. ", "page_idx": 12}, {"type": "text", "text": "Proof. We can rewrite: ", "page_idx": 13}, {"type": "equation", "text": "$$\n{\\boldsymbol{x}}^{\\top}\\mathbf{M}{\\boldsymbol{x}}={\\boldsymbol{x}}^{\\top}{\\frac{1}{s}}\\sum_{j=1}^{s}\\left(z_{j}z_{j}^{\\top}-I\\right){\\boldsymbol{x}}={\\frac{1}{s}}\\sum_{j=1}^{s}\\left({\\boldsymbol{x}}^{\\top}z_{j}\\right)^{2}-{\\boldsymbol{x}}^{\\top}{\\boldsymbol{x}}={\\frac{1}{s}}\\sum_{j=1}^{s}\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}-1.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Since n $\\textstyle\\sum_{i=1}^{n}x_{i}z_{i j}$ is a weighted sum of independent sub-gaussian random variables, it is also subgaussi an with squared norm: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\left\\|\\sum_{i=1}^{n}x_{i}z_{i j}\\right\\|_{\\psi_{2}}^{2}\\leq C\\sum_{i=1}^{n}\\|x_{i}z_{i j}\\|_{\\psi_{2}}^{2}=C\\sum_{i=1}^{n}x_{i}^{2}\\|z_{i j}\\|_{\\psi_{2}}^{2}=C\\sigma^{2},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $C$ is an absolute constant [28, Proposition 2.6.1]. Hence, since $\\scriptstyle(\\sum_{i=1}^{n}x_{i}z_{i j})^{2}$ is the square of a sub-gaussian random variable, it must be sub-exponential with the sub-exponential norm (see [28, Lemma 2.7.6]): ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\left\\|\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}\\right\\|_{\\psi_{1}}=\\left\\|\\sum_{i=1}^{n}x_{i}z_{i j}\\right\\|_{\\psi_{2}}^{2}\\leq C\\sigma^{2},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Lastly, since $\\scriptstyle(\\sum_{i=1}^{n}x_{i}z_{i j})^{2}$ is sub-exponential, so will the mean-centered counterpart $\\begin{array}{r}{\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}-\\mathbb{E}[\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}]=\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}-1}\\end{array}$ [28, Exercise 2.7.10] with sub-exponential norm: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\left\\|{\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)}^{2}-1\\right\\|_{\\psi_{1}}\\leq C_{2}\\sigma^{2},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $C_{2}$ is another absolute constant. Hence, since $\\begin{array}{r}{\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}-1}\\end{array}$ for $j\\,\\in\\,\\{1,\\ldots,s\\}$ are sub-exponential, zero-mean and independent, we can apply Bernstein\u2019s inequality to bound the tail probability of $x^{\\mathsf{T}}\\mathbf{M}x$ : ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{P}[x^{\\top}\\mathbf{M}x>\\beta]=\\mathbb{P}\\left[\\frac{1}{s}\\sum_{j=1}^{s}\\left(\\left(\\sum_{i=1}^{n}x_{i}z_{i j}\\right)^{2}-1\\right)>\\beta\\right]\\le2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}}{C_{2}^{2}\\sigma^{2}},\\frac{\\beta}{C_{2}\\sigma}\\right)s}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "holds for any $\\beta\\geq0$ , where $C_{1},C_{2}$ are absolute constants. ", "page_idx": 13}, {"type": "text", "text": "Lemma 8. Let $\\begin{array}{r}{\\mathbf{M}=\\frac{1}{s}\\sum_{j=1}^{s}z_{j}z_{j}^{\\intercal}-I}\\end{array}$ be an $n\\times n$ random matrix, where $z_{j i}$ are independent and identically distributed sub-Gaussian random variables with sub-gaussian norm $\\|z_{i j}\\|_{\\psi_{2}}=\\sigma$ . Then: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\left\\lVert\\mathbf{M}\\right\\rVert_{\\mathrm{op}}\\geq\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right)C_{4}\\sigma\\right]\\leq\\delta\\qquad\\forall\\delta>0,\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $C_{1},C_{4}$ are absolute constants. ", "page_idx": 13}, {"type": "text", "text": "Proof. Pick an $\\varepsilon$ -net $\\Sigma_{\\varepsilon}$ on $S^{n-1}$ of size at most $\\textstyle\\left({\\frac{2}{\\varepsilon}}+1\\right)^{n}$ (Lemma 6). Then, we can bound the tail probability of the operator norm as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r l}{\\mathbb{P}\\left[\\left\\|\\mathbf{M}\\right\\|_{\\mathrm{op}}\\geq\\beta\\right]\\leq\\mathbb{P}\\left[\\underset{x\\in\\Sigma_{\\varepsilon}}{\\operatorname*{sup}}\\;x^{\\mathsf{T M}x}\\geq(1-2\\varepsilon)\\beta\\right]}&&{\\quad\\Delta\\mathrm{By~Lemm}}\\\\ {\\leq\\displaystyle\\sum_{x\\in\\Sigma_{\\varepsilon}}\\mathbb{P}\\left[x^{\\mathsf{T M}x}\\geq(1-2\\varepsilon)\\beta\\right]}&&{\\quad\\Delta\\mathrm{Union~bo}}\\\\ {\\leq\\left\\|\\Sigma_{\\varepsilon}\\right\\|2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}(1-2\\varepsilon)^{2}}{C_{2}^{2}\\sigma^{2}},\\frac{\\beta(1-2\\varepsilon)}{C_{2}\\sigma}\\right)s}}&&{\\quad\\Delta\\mathrm{By~Lemm}}\\\\ {\\leq\\left(\\frac{2}{\\varepsilon}+1\\right)^{n}2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}(1-2\\varepsilon)^{2}}{C_{2}^{2}\\sigma^{2}},\\frac{\\beta(1-2\\varepsilon)}{C_{2}\\sigma}\\right)s}}&&{\\quad\\Delta\\left(\\frac{2}{\\varepsilon}+\\right)^{n}}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Setting $\\begin{array}{r}{\\varepsilon=\\frac{1}{4}}\\end{array}$ gives: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\|\\mathbf{M}\\|_{\\mathrm{op}}\\geq\\beta\\right]\\leq9^{n}2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}}{C_{4}^{2}\\sigma^{2}},\\frac{\\beta}{C_{4}\\sigma}\\right)s},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $C_{4}$ is an absolute constant. ", "page_idx": 14}, {"type": "text", "text": "Lastly, to get the bound into the form $\\mathbb{P}\\left[\\left\\|\\mathbf{M}\\right\\|_{\\mathrm{op}}\\geq f(\\delta,n,s)\\right]\\leq\\delta$ , we can note that: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\displaystyle9^{n}2e^{-C_{1}\\operatorname*{min}\\left(\\frac{\\beta^{2}}{C_{4}^{2}\\sigma^{2}},\\frac{\\beta}{C_{4}\\sigma}\\right)s}\\leq\\delta}&{\\Leftrightarrow}&{\\operatorname*{min}\\left(\\displaystyle\\frac{\\beta^{2}}{C_{4}^{2}\\sigma^{2}},\\frac{\\beta}{C_{4}\\sigma}\\right)\\geq\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)}\\\\ &{\\Leftrightarrow}&{\\displaystyle\\frac{\\beta}{C_{4}\\sigma}\\geq\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "and so by setting $\\begin{array}{r}{\\beta=\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right)C_{4}\\sigma}\\end{array}$ we get the desired result: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\left\\lVert\\mathbf{M}\\right\\rVert_{\\mathrm{op}}\\geq\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right)C_{4}\\sigma\\right]\\leq\\delta\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Proof of Theorem 4. Let $\\textstyle\\sum_{i=1}^{n}\\mathbf{q}_{i}\\lambda_{i}\\mathbf{p}_{i}^{\\top}$ be a singular value decomposition (SVD) of $\\mathbf{A}\\ {\\stackrel{\\mathrm{def}}{=}}\\ \\mathbf{H}_{\\theta}^{-1}{\\frac{\\partial\\mathbf{H}_{\\theta}}{\\partial\\theta_{k}}}$ , where $\\{{q}_{i}\\}_{i=1}^{n}$ and $\\{p_{i}\\}_{i=1}^{n}$ are two sets of orthonormal vectors. First, note that we can rewrite: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\tilde{\\wp}_{k}(\\theta)-\\frac{\\partial C(\\theta)}{\\partial\\theta_{k}}=\\sum_{\\scriptstyle\\atop{\\scriptstyle j=1}}^{\\infty}z^{\\prime}\\Delta z_{j}\\log\\overline{{\\nu}}_{j}\\sum_{\\scriptstyle z=1}^{\\infty}\\mathbb{E}\\left[\\tau\\left(\\frac{\\partial}{\\partial\\theta_{j}}\\log\\overline{{\\nu}}\\right)\\right]:}&{}\\\\ {=\\sum_{\\scriptstyle\\mu=1}^{\\infty}z^{\\prime}\\left(\\frac{\\overline{{\\nu}}}{\\overline{{\\nu}}_{1}}\\lambda_{2}q_{\\mu}\\overline{{\\nu}}_{j}\\right)z_{j}-\\frac{\\overline{{\\nu}}_{k}}{4}\\left[\\tau^{\\prime}\\left(\\frac{\\overline{{\\nu}}}{\\overline{{\\nu}}_{1}-1}\\lambda_{4}q_{\\mu}\\overline{{\\nu}}_{j}^{\\prime}\\right)z_{j}\\right]}\\\\ {=\\sum_{\\scriptstyle\\mu=1}^{\\infty}\\sum_{\\scriptstyle\\mu=1}^{\\infty}z_{j}^{\\prime}\\eta_{k}^{\\prime}\\overline{{\\nu}}_{j}q_{\\mu}^{\\nu}\\overline{{\\nu}}_{j}-\\sum_{\\scriptstyle\\mu=1}^{\\infty}\\mathbb{E}\\left[\\tau\\left(\\frac{\\overline{{\\nu}}}{\\overline{{\\nu}}_{1}}q_{\\mu}|^{2}\\right)\\right]}\\\\ {=\\sum_{\\scriptstyle\\mu=1}^{\\infty}\\lambda_{4}\\left(\\sum_{\\scriptstyle j=1}^{\\infty}z_{j}^{\\prime}q_{\\mu}\\overline{{\\nu}}_{j}z_{j}-\\frac{\\overline{{\\nu}}_{k}}{4}|\\tau^{\\prime}q_{j}|^{2}\\right)}\\\\ {=\\sum_{\\scriptstyle\\mu=1}^{\\infty}\\lambda_{4}\\left(\\left(\\frac{\\overline{{\\nu}}}{\\overline{{\\nu}}_{1}-1}z_{j}^{\\prime}\\right)\\rho_{k}-q_{j}\\frac{\\overline{{\\nu}}}{\\overline{{\\nu}}_{1}}\\frac{(z_{j}-1)^{\\nu}(z_{j}^{\\prime})}{\\overline{{\\nu}}_{1}}\\right)}\\\\ {=\\sum_{\\scriptstyle\\mu=1}^{\\infty}\\lambda_{4}q_{j}^{\\prime}\\left(\\left(\\sum_{\\scriptstyle j=1}^{\\infty}z_{j}^{\\prime}\\right)-1\\right)p_{1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Therefore, we can bound the norm of the difference as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\lvert\\tilde{g}_{k}(\\pmb{\\theta})-g_{k}(\\pmb{\\theta})\\rvert\\leq\\sum_{i=1}^{n}\\lvert\\lambda_{i}\\rvert\\,\\big\\lvert\\pmb{q}_{i}^{\\top}\\mathbf{M}\\pmb{p}_{i}\\big\\rvert}\\\\ &{\\displaystyle\\qquad\\qquad\\leq\\sum_{i=1}^{n}\\lvert\\lambda_{i}\\rvert\\|\\mathbf{M}\\|_{\\mathrm{op}}=\\lambda^{\\operatorname*{max}}\\|\\mathbf{M}\\|_{\\mathrm{op}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "By Lemma 8, with probability at least $1-\\delta$ we can bound the operator norm of $\\mathbf{M}$ as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\left\\vert\\widetilde{g}_{k}(\\pmb{\\theta})-g_{k}(\\pmb{\\theta})\\right\\vert\\leq\\lambda^{\\operatorname*{max}}\\|\\mathbf{M}\\|_{\\mathrm{op}}<\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "with $C_{1},C_{2}$ absolute constants. ", "page_idx": 14}, {"type": "text", "text": "We can apply a union bound over all $k\\in\\{1,\\ldots,d_{\\pmb\\theta}\\}$ to bound the probability of the $\\ell_{\\infty}$ -norm of the gradient deviating by a certain amount: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\left\\Vert\\tilde{g}(\\theta)-\\frac{\\partial\\mathcal{L}}{\\partial\\theta}(\\theta)\\right\\Vert_{\\infty}<\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}}\\right]>1-d_{\\theta}\\delta,\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "or: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathbb{P}\\left[\\left\\Vert\\tilde{g}(\\theta)-\\frac{\\partial\\mathcal{L}}{\\partial\\theta}(\\theta)\\right\\Vert_{\\infty}<\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\mathrm{max}}\\right]>1-\\delta.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Now, if $\\tilde{\\pmb g}(\\pmb\\theta)$ is a conservative field, and so is implicitly a gradient of some (approximate) objective $\\tilde{\\mathcal{L}}:\\Theta\\to\\overset{\\cdot}{\\mathbb{R}}$ , the above result allows us to bound the error on the solution found when optimising using the approximate gradient $\\tilde{\\pmb g}$ instead of the actual gradient $g=\\nabla\\mathcal{L}$ . However, in general, $\\tilde{\\pmb g}(\\pmb\\theta)$ need not be strictly conservative. In practice, since $\\tilde{\\pmb g}(\\pmb\\theta)$ converges to a conservative field the more samples we take, we may assume that it is close enough to being conservative for the purposes of optimisation on hardware with finite numerical precision. Assuming that $\\tilde{\\pmb g}(\\pmb\\theta)$ is conservative allows us to show the following bound on the optimum found when optimising using $\\tilde{\\pmb g}(\\pmb\\theta)$ , which is a restatement of Theorem 1: ", "page_idx": 15}, {"type": "text", "text": "Theorem 9. Let $\\tilde{\\pmb g}$ and $\\mathcal{L}$ be defined as in Theorem 4. Assume ${\\tilde{g}}:\\Theta\\to\\mathbb{R}$ is a conservative field. Assume the optimisation domain $\\Theta$ is convex, closed and bounded. Then, with probability at least $1-\\delta$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathcal{L}(\\tilde{\\theta}^{*})\\geq\\mathcal{L}(\\theta^{*})-\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}}\\Delta\\Theta\\sqrt{d_{\\theta}},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\Delta\\Theta\\ {\\stackrel{\\mathrm{def}}{=}}\\ \\operatorname*{sup}_{\\pmb{\\theta},\\pmb{\\theta^{\\prime}}\\in\\Theta}\\left\\|\\pmb{\\theta^{\\prime}}-\\pmb{\\theta}\\right\\|$ is the maximum distance between two elements in $\\Theta$ ", "page_idx": 15}, {"type": "text", "text": "Proof. Let $\\tilde{\\mathcal{L}}:\\Theta\\to\\mathbb{R}$ be an approximate objective implied by the gradient field $\\tilde{\\pmb g}$ , namely a scalar field such that $\\nabla\\tilde{\\mathcal{L}}=\\tilde{\\pmb g}$ . Such a scalar field exists if $\\tilde{\\pmb g}$ is a conservative field, and is unique up to a constant (which does not affect the optimum). ", "page_idx": 15}, {"type": "text", "text": "For any two points $\\theta,\\theta^{\\prime}\\in\\Theta$ , with $\\Delta\\pmb{\\theta}\\ {\\stackrel{\\mathrm{def}}{=}}\\ \\pmb{\\theta}^{\\prime}-\\pmb{\\theta}$ , we have that ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\Big\\vert(\\mathcal{L}(\\pmb{\\theta}^{\\prime})-\\mathcal{L}(\\pmb{\\theta}))+\\Big(\\Tilde{\\mathcal{L}}(\\pmb{\\theta}^{\\prime})-\\Tilde{\\mathcal{L}}(\\pmb{\\theta})\\Big)\\Big\\vert\n$$", "text_format": "latex", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle=\\left|\\int_{0}^{1}\\frac{\\partial}{\\partial t}\\mathcal{L}\\left(\\theta+\\Delta\\theta t\\right)d t-\\int_{0}^{1}\\frac{\\partial}{\\partial t}\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)d t\\right|}\\\\ &{\\displaystyle=\\left|\\int_{0}^{1}\\Delta\\theta\\cdot\\nabla C\\left(\\theta+\\Delta\\theta t\\right)d t-\\int_{0}^{1}\\Delta\\theta\\cdot\\nabla\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)d t\\right|}\\\\ &{\\displaystyle=\\left|\\int_{0}^{1}\\Delta\\theta\\cdot\\left(\\nabla C\\left(\\theta+\\Delta\\theta t\\right)-\\nabla\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)\\right)d t\\right|}\\\\ &{\\displaystyle\\leq\\int_{0}^{1}\\left|\\Delta\\theta\\cdot\\left(\\nabla C\\left(\\theta+\\Delta\\theta t\\right)-\\nabla\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)\\right)\\right|d t}\\\\ &{\\displaystyle=\\int_{0}^{1}\\left\\|\\Delta\\theta\\right\\|\\left\\|\\left(\\nabla C\\left(\\theta+\\Delta\\theta t\\right)-\\nabla\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)\\right)\\right\\|d t}\\\\ &{\\displaystyle\\leq\\int_{0}^{1}\\left\\|\\Delta\\theta\\right\\|\\left\\|\\left(\\nabla C\\left(\\theta+\\Delta\\theta t\\right)-\\nabla\\bar{C}\\left(\\theta+\\Delta\\theta t\\right)\\right)\\right\\|_{\\infty}\\sqrt{d_{\\theta}}d t}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "equation", "text": "$$\n\\leq\\int_{0}^{1}\\|\\Delta\\theta\\|\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}}\\sqrt{d_{\\theta}}d t\n$$", "text_format": "latex", "page_idx": 15}, {"type": "equation", "text": "$$\n\\leq\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}}\\Delta\\Theta\\sqrt{d_{\\theta}}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "The above inequality holds with probability at least $(1-\\delta)$ . Hence, ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}(\\theta^{*})-\\mathcal{L}(\\tilde{\\theta}^{*})\\leq\\mathcal{L}(\\theta^{*})-\\mathcal{L}(\\tilde{\\theta}^{*})-\\sqrt{\\tilde{\\mathcal{L}}(\\theta^{*})-\\tilde{\\mathcal{L}}(\\tilde{\\theta}^{*})}\\Bigg)\\ ,}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\leq\\left|\\mathcal{L}(\\theta^{*})-\\mathcal{L}(\\tilde{\\theta}^{*})-\\left(\\tilde{\\mathcal{L}}(\\theta^{*})-\\tilde{\\mathcal{L}}(\\tilde{\\theta}^{*})\\right)\\right|}\\\\ &{\\quad\\quad\\quad\\quad\\leq\\operatorname*{max}\\left(\\sqrt{\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)},\\frac{n}{s}C_{1}\\log\\left(\\frac{9d_{\\theta}}{2\\delta}\\right)\\right)C_{2}\\sigma\\lambda^{\\operatorname*{max}}\\Delta\\Theta\\sqrt{d_{\\theta}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Remark 10. Theorem 9 above implies that the objective of the optimum $\\tilde{\\pmb{\\theta}}^{*}$ obtained with the approximate gradients converges to the objective of the true optimum $\\pmb{\\theta}^{*}$ in probability: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\forall\\alpha>0:\\quad\\mathbb{P}\\left[\\left|\\mathcal{L}(\\pmb{\\tilde{\\theta}}^{*})-\\mathcal{L}(\\pmb{\\theta}^{*})\\right|>\\alpha\\right]\\rightarrow0\\;a s\\;s\\rightarrow\\infty\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "which trivially follows from the implication of Theorem $^{\\,g}$ that for every $\\alpha,\\delta>0,$ , we can find an $s\\in\\mathbb{N}$ such that $\\mathcal{L}(\\tilde{\\theta}^{\\ast})\\geq\\mathcal{L}(\\theta^{\\ast})-\\alpha$ with probability at least $1-\\delta$ . ", "page_idx": 16}, {"type": "text", "text": "Remark 11 (Convexity of $\\Theta$ ). We also note that the convexity of the hyperparameter domain $\\Theta$ is $a$ fairly mild assumption which is satisfied in the majority of practical settings. For example, optimising kernel length scales and noise scale on bounded intervals $\\mathbf{\\dot{\\left(10^{-10},10^{10}\\right)}}$ falls within the assumptions, but introducing a \u201chole\u201d into the domain (e.g. introducing a constraint like $\\lVert\\vartheta-\\mathbf{1}\\rVert\\geq0.5)$ would break the assumption. In particular, this assumption is not a statement about the convexity of the objective $\\mathcal{L}$ \u2014 in the proof, we allow for the objective to be arbitrarily non-convex, and only assume its differentiability. ", "page_idx": 16}, {"type": "text", "text": "A.4 Convergence of Warm Starting the Pathwise Estimator ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "The result in Appendix A.3 can be trivially extended for the pathwise estimator in (9) for any pairwise independent probe vectors $\\hat{z}_{j}$ (with second moment $\\mathbf{H}_{\\theta}^{-1}$ ) that upon rescaling by $\\mathbf{H}_{\\theta}^{\\frac{1}{2}}$ will be zero-mean with independent coordinates. This is true for probe vectors $\\hat{z}_{j}$ that are either i.i.d. $\\mathcal{N}(\\mathbf{0},\\mathbf{H}_{\\theta}^{-1})$ -distributed or obtained by transforming Radamacher random variables by $\\mathbf{H}_{\\theta}^{-\\frac{1}{2}}$ . ", "page_idx": 16}, {"type": "text", "text": "B Implementation and Experiment Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this appendix, we provide details about our implementation and experiments. ", "page_idx": 16}, {"type": "text", "text": "General Our implementation uses the JAX library [4]. All reported experiments were conducted on internal NVIDIA A100-SXM4-80GB GPUs using double floating point precision. Some additional experiments and ablations were performed on Google Cloud TPUs (v4). The total compute time, including preliminary and failed experiments, and evaluation is around 4500 hours. The compute time of individual runs is reported in Tables 2 to 10. The source code is available here. ", "page_idx": 16}, {"type": "text", "text": "Datasets Our experiments are conducted using the datasets and data splits from the popular UCI regression benchmark [7]. They consist of various high-dimensional, multivariate regression tasks and are available under the Creative Commons Attribution 4.0 International (CC BY 4.0) license. In particular, we used the POL $(n\\,=\\,13500,d\\,=\\,26)$ , ELEVATORS $(n\\,=\\,14940,d\\,=\\,18)$ ), BIKE $(n\\,=\\,15642,d\\,=\\,17)$ , PROTEIN $(n\\,=\\,41157,d\\,=\\,9)$ , KEGGDIRECTED $(n\\,=\\,43945,d\\,=\\,20)$ ), 3DROAD $(n=391387,d=3)$ , SONG $(n=463811,d=90)$ , BUZZ $(n=524925,d=77)$ ), and HOUSEELECTRIC $(n=1844352,d=11)$ ) datasets. ", "page_idx": 16}, {"type": "text", "text": "Kernel Function and Random Features In all experiments, we used the Mat\u00e9rn- $\\ensuremath{3}/\\ensuremath{2}$ kernel, parameterised by a scalar signal scale and a length scale per input dimension. For pathwise conditioning (3) and the pathwise gradient estimator (9), we used random Fourier features [20, 24] $1000\\;\\mathrm{sin/cos}$ pairs, 2000 features in total) to draw approximate samples from the Gaussian process prior. For an explanation about how to efficiently sample prior functions from a Gaussian process using random features, we refer to existing literature [30, 31, 15]. However, we want to discuss some details in terms of using this technique for the pathwise estimator from Section 3. ", "page_idx": 17}, {"type": "text", "text": "For pathwise gradient estimation, the linear system solver must solve linear systems of the form ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbf{H}_{\\theta}\\left[\\boldsymbol{v}_{y},\\hat{z}_{1},\\ldots,\\hat{z}_{s}\\right]=\\left[\\boldsymbol{y},\\boldsymbol{\\xi}_{1},\\ldots,\\boldsymbol{\\xi}_{s}\\right],\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "with $\\pmb{\\xi}=f(\\pmb{x})+\\pmb{\\varepsilon}$ , where $f(\\pmb{x})_{\\therefore}\\sim\\mathcal{N}(\\mathbf{0},k(\\pmb{x},\\pmb{x};\\pmb{\\vartheta}))$ is a prior function $f$ sample evaluated at the training data $\\textbf{\\em x}$ , and $\\mathbf{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\sigma^{2}\\mathbf{I})$ is a Gaussian random vector. Both quantities are resampled in each outer-loop marginal likelihood step if the pathwise estimator is used without warm starting. With warm starting enabled, the right-hand sides of the linear system must not be resampled. In this case, $f$ and $\\epsilon$ are sampled once and fixed afterwards. However, $f$ depends on $\\vartheta$ and $\\epsilon$ depends on $\\sigma$ , and both $\\vartheta$ and $\\sigma$ are hyperparameters which change in each outer-loop step. Therefore, what does it mean to keep $f$ and $\\epsilon$ fixed? ", "page_idx": 17}, {"type": "text", "text": "For $\\epsilon$ , this amounts to the reparameterisation $\\pmb{\\epsilon}=\\sigma\\,\\pmb{w}$ , where $w\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ is sampled once and fixed afterwards, such that $\\epsilon$ becomes deterministic. For $f$ , this refers to fixing the parameters of the random features, for example the frequencies in the case of random Fourier features. Intuitively, this corresponds to selecting a particular instance of a prior sample, although the distribution of the sample can change due to changes in the hyperparameters. In each outer-loop step, the random features are evaluated using the fixed random feature parameters and the updated kernel hyperparameters, and the prior function sample is then evaluated at the training data using the updated random features. Both of these operations are $\\mathcal{O}(n)$ and efficient as long as the number of random features is reasonable. ", "page_idx": 17}, {"type": "text", "text": "Iterative Optimiser To optimise hyperparameters $\\pmb{\\theta}$ given an estimate of $\\nabla\\mathcal{L}$ , we used the Adam optimiser [14] with default settings except for the learning rate. For all small datasets $(n<50\\mathrm{k})$ , we initialised the hyperparameters at 1.0 and used a learning rate of 0.1 to perform 100 steps of Adam. For all large datasets $(n>50\\mathrm{k})$ , we initialised the hyperparameters using a heuristic and used a learning rate of 0.03 to perform 30 steps of Adam (15 for HOUSEELECTRIC due to high computational costs). The heuristic to obtain initial hyperparameters for the large datasets consists of: ", "page_idx": 17}, {"type": "text", "text": "1. Select a centroid data example uniformly at random from the training data. ", "page_idx": 17}, {"type": "text", "text": "2. Find the 10k data examples with the smallest Euclidean distance to the centroid.   \n3. Obtain hyperparameters by maximising the exact marginal likelihood using this subset.   \n4. Repeat the procedure with 10 different centroids and average the hyperparameters. ", "page_idx": 17}, {"type": "text", "text": "This heuristic has previously been used by Lin et al. [15, 16] to avoid aliasing bias. ", "page_idx": 17}, {"type": "text", "text": "To enforce positive value constraints during hyperparameter optimisation, we used the softplus function. In particular, we reparameterise each hyperparameter $\\theta_{k}\\in\\mathbb{R}_{>0}$ as $\\theta_{k}=\\log(1+\\exp(\\nu_{k}))$ and apply optimiser steps to $\\nu_{k}\\in\\mathbb{R}$ instead, to facilitate unconstrained optimisation. ", "page_idx": 17}, {"type": "text", "text": "Gradient Estimator For all experiments, unless otherwise specified, the number of probe vectors was set to $s=64$ for both the standard and the pathwise estimator. The distributions of the probe vectors are $z\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ for the standard estimator and $\\hat{z}:=\\mathbf{H}_{\\theta}^{-1}\\boldsymbol{\\xi}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{H}_{\\theta}^{-1})$ for the pathwise estimator. See Section 3 for details about how to generate samples from $\\mathcal{N}(\\mathbf{0},\\mathbf{H}_{\\theta}^{-1})$ . ", "page_idx": 17}, {"type": "text", "text": "The probe vectors used by Gardner et al. [9] have conceptual similarities but the motivation is different. They used probe vectors $z\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{P})$ , where $\\mathbf{P}$ is constructed using a low-rank pivoted Cholesky decomposition to implement the preconditioner. In contrast, our pathwise probe vectors are sampled using random features, and, for CG, we used the pivoted Cholesky preconditioner in addition to the pathwise probe vectors. Furthermore, we used the solution of the pathwise probe vector systems to construct posterior samples via pathwise conditioning, which has not been done by Gardner et al. [9]. ", "page_idx": 17}, {"type": "text", "text": "The name of the pathwise estimator can be related to the reparameterisation trick by viewing a sample from the GP posterior as a deterministic transformation of a sample from the GP prior, and observing that the latter itself is an affine transformation of a standard normal random variable. ", "page_idx": 17}, {"type": "text", "text": "Linear System Solver We conducted two sets of experiments which only differ in the termination criterion of the linear system solver. In the first set, we stop linear system solvers once they reach a relative residual norm tolerance of $\\tau=0.01$ . In the second set, we also restrict the maximum number of solver epochs to 10, 20, 30, 40 or 50, such that most of the time the residual norm does not reach $\\tau$ . ", "page_idx": 18}, {"type": "text", "text": "For a generic system of linear equations $\\mathbf{H}_{\\theta}\\,u=b$ , the residual is defined as $\\pmb{r}=\\pmb{b}-\\mathbf{H}_{\\theta}\\,\\pmb{u}$ and the relative residual norm is defined as $\\left\\|\\pmb{r}\\right\\|/\\|b\\|$ . In practice, to improve numerical stability, the relative residual norm tolerance is implemented by solving the system $\\mathbf{H}_{\\theta}\\,\\tilde{\\boldsymbol{u}}=\\tilde{\\boldsymbol{b}}$ , where $\\tilde{\\pmb{b}}:=\\pmb{b}/(\\|\\pmb{b}\\|+\\epsilon)$ , until $\\|\\tilde{\\boldsymbol{r}}\\|:=\\|\\tilde{\\boldsymbol{b}}-\\mathbf{H}_{\\theta}\\,\\tilde{\\boldsymbol{u}}\\|\\leq\\tau$ and then returning $\\pmb{u}:=(\\|\\pmb{b}\\|+\\epsilon)\\,\\pmb{\\tilde{u}}$ , where epsilon is set to a small constant value to prevent division by zero. Since we are solving batches of systems of linear equations of the form $\\mathbf{H}_{\\theta}\\left[\\,v_{y},v_{1},\\dots,v_{s}\\,\\right]=\\left[\\,\\pmb{y},z_{1},\\dots,z_{s}\\,\\right]$ , we track the residuals of each individual system and calculate separate residual norms for the mean and for the probe vectors, where the residual norm for the mean $\\lVert\\boldsymbol{r}_{\\boldsymbol{y}}\\rVert$ corresponds to the system $\\mathbf{H}_{\\theta}\\,v_{y}=y$ and the residual norm for the probe vectors $\\lVert\\boldsymbol{r}_{z}\\rVert$ is defined as the arithmetic average over residual norms corresponding to the systems $\\mathbf{H}_{\\theta}\\left[\\,v_{1},\\ldots,v_{s}\\,\\right]=\\left[\\,z_{1},\\ldots,z_{s}\\,\\right]$ . Both relative residual norms must reach the tolerance $\\tau$ to satisfy the termination criterion. We use separate residual norms because $\\lVert\\boldsymbol{r}_{\\boldsymbol{y}}\\rVert$ typically converges faster than $\\Vert r_{z}\\Vert$ , such that an average other all systems tends to dilute the latter (see Figures 14 to 17). ", "page_idx": 18}, {"type": "text", "text": "Conjugate Gradients The conjugate gradients algorithm [9, 29] computes necessary residuals as part of the algorithm. In terms of counting solver epochs, every conjugate gradient iteration counts as one solver epoch because in every iteration each value of $\\mathbf{H}_{\\theta}$ is computed once. Following previous work, we used a pivoted Cholesky preconditioner of rank 100 for all experiments [29]. We initialised conjugate gradients either at zero (no warm start) or at the previous solution (warm start). Otherwise, conjugate gradients does not have any other parameters. Pseudocode is provided in Algorithm 1. ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathbf{Algorithm\\textbf{1}C o n j u g a t e}\\,\\,\\mathrm{gradients\\;for\\;solving\\;H}_{\\theta}\\,\\left[\\,v_{y},v_{1},\\ldots,v_{s}\\,\\right]=\\left[\\,y,z_{1},\\ldots,z_{s}\\,\\right]\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Require: Linear operator $\\mathbf{H}_{\\theta}(\\cdot)$ , targets $\\pmb{b}=[\\pmb{y},z_{1},\\dots,z_{s}]$ , tolerance $\\tau$ , maximum epochs $T$   \nRequire: Preconditioner $\\mathbf{P}(\\cdot)$   \n1: Let $(\\cdot)_{*}$ denote parallel execution over $(\\cdot)_{\\pmb{y}},(\\cdot)_{1},\\ldots,(\\cdot)_{s}$   \n2: $\\pmb{v}_{*}\\gets\\mathbf{0}$ (or previous solution if warm start)   \n3: $r_{*}\\leftarrow b_{*}-\\mathbf{H}_{\\theta}(v_{*})$   \n4: $\\pmb{p}_{*}\\gets\\mathbf{P}(\\pmb{r}_{*})$   \n5: d \u2190p   \n6: $\\gamma_{*}\\leftarrow r_{*}^{\\mathsf{T}}p_{*}$   \n7: $t\\leftarrow0$   \n8: while $t<T$ and $\\|r_{y}\\|>\\tau$ and $\\begin{array}{r}{\\frac{1}{s}\\sum_{j=1}^{s}\\|r_{j}\\|=\\|r_{z}\\|>\\tau}\\end{array}$ do   \n9: $\\begin{array}{r l}&{\\alpha_{*}\\gets\\gamma_{*}/d_{*}^{\\top}\\mathbf{H}_{\\theta}(\\bar{d}_{*})}\\\\ &{v_{*}\\gets v_{*}+\\alpha_{*}d_{*}}\\\\ &{r_{*}\\gets r_{*}-\\alpha_{*}\\mathbf{H}_{\\theta}(d_{*})}\\\\ &{p_{*}\\gets\\mathbf{P}(r_{*})}\\\\ &{\\beta_{*}\\gets r_{*}^{\\top}p_{*}/\\gamma_{*}}\\\\ &{\\gamma_{*}\\gets r_{*}^{\\top}p_{*}}\\\\ &{d_{*}\\gets p_{*}+\\beta_{*}d_{*}}\\\\ &{t\\gets t+1}\\end{array}$   \n10:   \n11:   \n12:   \n13:   \n14:   \n15:   \n16:   \n17: end while   \n18: return $[\\pmb{v}_{y},\\pmb{v}_{1},\\dots,\\pmb{v}_{s}]$ ", "page_idx": 18}, {"type": "text", "text": "Alternating Projections The alternating projections algorithm [32] also keeps track of the residuals as part of the algorithm. In terms of counting solver epochs, we convert the number of maximum solver epochs to a maximum number of solver iterations by multiplying with $n/b$ , where $b$ is the block size, because every iteration of alternating projections computes $b/n$ of all entries of ${\\bf H}_{\\theta}$ . We used a block size of $b=1000$ for all datasets, except PROTEIN and KEGGDIRECTED, where we used $b=2000$ instead. We initialised alternating projections either at zero (no warm start) or at the previous solution (warm start). During each marginal likelihood step, the Cholesky factorisation of every block is computed once and cached afterwards (although, in practice, the Cholesky factorisation does not dominate the computational costs). In each iteration of alternating projections, the block with largest residual norm is selected to be processed. Pseudocode is provided in Algorithm 2. ", "page_idx": 18}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/5998543250925804198e586dbc7cdff376293aa992b322a53d0c71c5434fdb14.jpg", "table_caption": [], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "Require: Linear operator $\\mathbf{H}_{\\theta}(\\cdot)$ , targets $\\pmb{b}=[\\pmb{y},z_{1},\\dots,z_{s}]$ , tolerance $\\tau$ , maximum epochs $T$   \nRequire: Block size $b$ , block partitions [1], [ $2],\\ldots,[\\lceil\\frac{n}{b}\\rceil]$   \n1: Let $(\\cdot)_{*}$ denote parallel execution over $(\\cdot)_{y},(\\cdot)_{1},\\ldots,(\\cdot)_{s}$   \n2: $\\pmb{v}_{*}\\gets\\mathbf{0}$ (or previous solution if warm start)   \n3: $r_{*}\\leftarrow b_{*}-\\mathbf{H}_{\\theta}(v_{*})$   \n4: $t\\leftarrow0$   \n5: while $\\begin{array}{r}{t<\\frac{n}{b}T}\\end{array}$ and $\\|r_{y}\\|>\\tau$ and $\\begin{array}{r}{\\frac1s\\sum_{j=1}^{s}\\|r_{j}\\|=\\|r_{z}\\|>\\tau}\\end{array}$ do   \n6: $\\begin{array}{r}{[i]\\gets\\mathbf{arg\\_max}(\\|r_{y}[1]+\\sum_{j=1}^{s}r_{j}[1]\\|,\\dots,\\|r_{y}[\\lceil\\frac{n}{b}\\rceil]+\\sum_{j=1}^{s}r_{j}[\\lceil\\frac{n}{b}\\rceil]\\|)}\\end{array}$   \n7: $\\begin{array}{r}{\\boldsymbol{v}_{*}[i]\\leftarrow\\boldsymbol{v}_{*}[i]+\\mathrm{chol}_{-}\\mathrm{solve}(\\mathbf{H}_{\\theta}[i,i],\\boldsymbol{r}_{*}[i])}\\end{array}$   \n8: $\\begin{array}{r}{r_{*}\\gets r_{*}-\\mathbf{H}_{\\theta}[:,i]\\big(\\mathrm{chol\\mathrm{\\bf~\\underline{~}{s o l y e}}}(\\mathbf{H}_{\\theta}[i,i],r_{*}[i])\\big)}\\end{array}$   \n9: t \u2190t + 1   \n10: end while   \n11: return $[\\pmb{v}_{y},\\pmb{v}_{1},\\dots,\\pmb{v}_{s}]$ ", "page_idx": 19}, {"type": "text", "text": "Stochastic Gradient Descent The stochastic gradient descent algorithm [15, 16] does not compute residuals as part of the algorithm. Therefore, we estimate the current residual by keeping a residual vector in memory and updating it sparsely whenever we compute the gradient on a batch of data, leveraging the property that the negative gradient is equal to the residual. In practice, we find that this estimates an approximate upper bound on the true residual, which becomes fairly accurate after a few iterations. In terms of counting solver epochs, we apply the same procedure as for alternating projections. The number of maximum solver epochs is converted to a maximum number of solver iterations by multiplying with $n/b$ , where $b$ is the batch size. We used a batch size of $b\\,=\\,500$ , momentum of $\\rho=0.9$ , and no Polyak averaging, because averaging is not strictly necessary [16] and would interfere with our residual estimation heuristic. We use learning rates of 30, 20, 30, 20, and 20 respectively for the POL, ELEVATORS, BIKE, KEGGDIRECTED and PROTEIN datasets, picking the largest learning rate from a grid $[5,10,20,30,50,60,70,80,90,100]$ that does not cause the inner linear system solver to diverge on the very first outer marginal likelihood loop. For the larger datasets, we use learning rates of 10, 10, 50, and 50 for 3DROAD, BUZZ, SONG and HOUSEELECTRIC, picking half of the largest learning rate as above. We find that the larger datasets are more sensitive to diverging when the hyperparameters change, and therefore we choose half of the largest learning rate possible at initialisation. Pseudocode is provided in Algorithm 3. ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathbf{Algorithm\\3\\;Stochastic\\;gradient\\;descent\\;for\\;solving\\;H}_{\\theta}\\;\\left[v_{y},v_{1},\\ldots,v_{s}\\right]=\\left[y,z_{1},\\ldots,z_{s}\\right]\\;,\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Require: Linear operator $\\mathbf{H}_{\\theta}(\\cdot)$ , targets $\\pmb{b}=[\\pmb{y},z_{1},\\dots,z_{s}]$ , tolerance $\\tau$ , maximum epochs $T$   \nRequire: Batch size $b$ , learning rate $\\gamma$ , momentum $\\rho$   \n1: Let $(\\cdot)_{*}$ denote parallel execution over $(\\cdot)_{\\pmb{y}},(\\cdot)_{1},\\ldots,(\\cdot)_{s}$   \n2: $\\pmb{v}_{*}\\gets\\mathbf{0}$ (or previous solution if warm start)   \n3: $r_{*}\\leftarrow b_{*}$   \n4: $m_{*}\\gets\\mathbf{0}$   \n5: $t\\leftarrow0$   \n6: while $\\begin{array}{r}{t<\\frac{n}{b}T}\\end{array}$ and $\\|r_{y}\\|>\\tau$ and $\\begin{array}{r}{\\frac1s\\sum_{j=1}^{s}\\|r_{j}\\|=\\|r_{z}\\|>\\tau}\\end{array}$ do   \n7: $[i]\\leftarrow$ uniform_batch_sampl $\\mathsf{e}(1,\\ldots,n)$   \n8: $g_{*}\\gets\\mathbf{0}$   \n9: g [i] \u2190H\u03b8[i, :](v ) \u2212b [i]   \n10: m \u2190\u03c1 m \u2212\u03b3b g   \n11: v = v + m   \n12: r [i] \u2190g [i]   \n13: t \u2190t + 1   \n14: end while   \n15: return $[\\pmb{v}_{y},\\pmb{v}_{1},\\dots,\\pmb{v}_{s}]$ ", "page_idx": 19}, {"type": "text", "text": "C Additional Empirical Results ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this appendix, we provide additional result from our experiments. ", "page_idx": 20}, {"type": "text", "text": "For our first experiment (solving until reaching the relative residual norm tolerance), we present the predictive performance, time taken, and speed-ups in Tables 2 to 6. Hyperparameter trajectories are illustrated in Figures 11 to 13. Required number of solver iterations are shown in Figure 21. ", "page_idx": 20}, {"type": "text", "text": "For our second experiment (solving until reaching the tolerance or exhausting the compute budget), we tabulate the predictive performance, time taken, and average residual norms in Tables 7 to 10. The behaviour of residual norms is visualised in Figures 14 to 17. The evolution of residual norms and predictive performance via pathwise conditioning is depicted in Figures 18 to 20. ", "page_idx": 20}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/ba0ef63afdd0d9cc5505a4602cc966b5f8738787ac7012548c3a1b6450a496ae.jpg", "table_caption": ["Table 2: Results on POL when solving until convergence (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/7e4ab00b11d79385b27345a5f8758d36ec4f5022ed1f9e3763d7b2ed65d87916.jpg", "table_caption": ["Table 3: Results on ELEV when solving until convergence (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/67095c0ecca7be828cea8c11587bb4af92f1374d99be9448605ebb02a52b79da.jpg", "table_caption": ["Table 4: Results on BIKE when solving until convergence (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 21}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/91b280601d4715eb47e388568628adf2db931a26ae568f6792c378646ac9d815.jpg", "table_caption": ["Table 5: Results on PROT when solving until convergence (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 21}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/d3410d3173442a90ad8d7c1b2d14f7081711b155c50a423bf59580e65ac7a3e3.jpg", "table_caption": ["Table 6: Results on KEGG when solving until convergence (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/659d749ecc7641367c52aed5980ef1eb15ec2de8a178973881bc9d6a986e8685.jpg", "img_caption": ["Figure 11: Evolution of hyperparameters during marginal likelihood optimisation on different datasets using conjugate gradients as linear system solver. Most of the time, the behaviour of exact gradient computation using Cholesky factorisation is resembled. "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/ba5cb90ad8e82d475c5c6a88e071c9c230f2cf95f23ad76ee8128d17bc45e502.jpg", "img_caption": ["Figure 12: Evolution of hyperparameters during marginal likelihood optimisation on different datasets using alternating projections as linear system solver. Most of the time, the behaviour of exact gradient computation using Cholesky factorisation is resembled. "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/ab811d9a5f8f262aec69bdb16a152e683e6c509a192e6054a330b626b68aafbf.jpg", "img_caption": ["Figure 13: Evolution of hyperparameters during marginal likelihood optimisation on different datasets using stochastic gradient descent as linear system solver. Most of the time, the behaviour of exact gradient computation using Cholesky factorisation is resembled. "], "img_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/1b967e1fe4bd3799b4577e0de65dd43370f0607b08b066d0ccb139fbb7f1ec7b.jpg", "table_caption": ["Table 7: Results on 3DROAD with 10 maximum solver epochs (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 25}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/971f3bb08bcf254095e1d66fa392a7c8745e8d1c09a0549dc3ce8195be2c6992.jpg", "table_caption": ["Table 8: Results on SONG with 10 maximum solver epochs (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 25}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/7f57c8535db4037ad76922fcaf60aaf7ae7a0b32efd1c279b5b1ec8222203f88.jpg", "table_caption": ["Table 9: Results on BUZZ with 10 maximum solver epochs (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 25}, {"type": "table", "img_path": "CAdBTYBlOv/tmp/f26df6c85d4b943537034c26008a7354a170574a7fceecf8cdb901335187d136.jpg", "table_caption": ["Table 10: Results on HOUSE with 10 maximum solver epochs (mean $\\pm$ standard error over 10 splits). "], "table_footnote": [], "page_idx": 25}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/847bad2077ede5c21f72b938bd0f4aa836607348049d449a20347c21292a0760.jpg", "img_caption": ["Figure 14: Relative residual norms of the mean at each marginal likelihood step and final test rootmean-square errors using the standard estimator on different datasets. The linear system solver is terminated upon either reaching the tolerance or exhausting a maximum number of solver epochs. "], "img_footnote": [], "page_idx": 26}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/b3000f2cff5bea911f8160ce1d43cf9938b6aad8e8b82bb08ec1ba47587c67d1.jpg", "img_caption": ["Maximum solver epochs per marginal likelihood step: 10 20 30 40 50 ", "Figure 15: Relative residual norms of the mean at each marginal likelihood step and final test rootmean-square errors using the pathwise estimator on different datasets. The linear system solver is terminated upon either reaching the tolerance or exhausting a maximum number of solver epochs. "], "img_footnote": [], "page_idx": 26}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/84a1189a97dec44a6516c728b38d281cb018a808909ec6f327a3cae74c58e970.jpg", "img_caption": ["Maximum solver epochs per marginal likelihood step: $10\\ =20\\ =30\\ =40\\ =50$ "], "img_footnote": [], "page_idx": 27}, {"type": "text", "text": "Figure 16: Relative residual norms of the probe vectors at each marginal likelihood step and final test log-likelihoods using the standard estimator on different datasets. The linear system solver is terminated upon either reaching the tolerance or exhausting a maximum number of solver epochs. ", "page_idx": 27}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/b9f2ddecaa6dc0b1c22f5f3789374242e98f608a9687df68d81d70a397cd150e.jpg", "img_caption": ["Figure 17: Relative residual norms of the probe vectors at each marginal likelihood step and final test log-likelihoods using the pathwise estimator on different datasets. The linear system solver is terminated upon either reaching the tolerance or exhausting a maximum number of solver epochs. "], "img_footnote": [], "page_idx": 27}, {"type": "text", "text": "Conjugate Gradients ", "text_level": 1, "page_idx": 28}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/1645d7f8279a9285e08b59b1188f90889b2ee99eadfffe2fe32fabf98fcf9c89.jpg", "img_caption": [], "img_footnote": [], "page_idx": 28}, {"type": "text", "text": "Figure 18: Relative residual norms, test root-mean-square errors and test log-likelihoods during marginal likelihood optimisation on large datasets using the pathwise gradient estimator and conjugate gradients as linear system solver. ", "page_idx": 28}, {"type": "text", "text": "Alternating Projections ", "text_level": 1, "page_idx": 28}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/f133a1893c56a5ecc9a53f08009372a16480c8f5a31dc9b4f7cf942f82435806.jpg", "img_caption": ["Figure 19: Relative residual norms, test root-mean-square errors and test log-likelihoods during marginal likelihood optimisation on large datasets using the pathwise gradient estimator and alternating projections as linear system solver. ", "Pathwise estimator Pathwise estimator $^+$ warm start "], "img_footnote": [], "page_idx": 28}, {"type": "text", "text": "Stochastic Gradient Descent ", "text_level": 1, "page_idx": 29}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/274f230252566c03fc6b63d9ea2b1457c896f5f33796ecf2386e6371d155d088.jpg", "img_caption": ["Pathwise estimator Pathwise estimator $^+$ warm start "], "img_footnote": [], "page_idx": 29}, {"type": "text", "text": "Figure 20: Relative residual norms, test root-mean-square errors and test log-likelihoods during marginal likelihood optimisation on large datasets using the pathwise gradient estimator and stochastic gradient descent as linear system solver. ", "page_idx": 29}, {"type": "image", "img_path": "CAdBTYBlOv/tmp/d874e58c24fd13dbcd1f11d01515fd251a6714f70cf03c6f6e326b64cc35fce4.jpg", "img_caption": ["Figure 21: Required number of solver iterations until reaching the tolerance $\\tau=0.01$ at each step of marginal likelihood optimisation and final predictive test log-likelihoods on different datasets. On the KEGGDIRECTED dataset, alternating projections with the standard estimator and without warm starting did not complete the experiment within 24 hours. "], "img_footnote": [], "page_idx": 29}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: The main claims made in the abstract and introduction accurately reflect the contributions of Sections 3 to 5 and empirical results illustrated in Table 1 and Figure 10. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 30}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Justification: Yes, the paper discusses the limitations of our work. In particular, the dependence on random features to sample prior functions is discussed in Section 3 and Figure 5, and the bias due to warm starting is discussed in Section 4 and Theorem 1. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \u201cLimitations\u201d section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 30}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: All theoretical claims and results made in the paper are formally derived in Appendix A, including all assumptions and proofs. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 31}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: Methods and experiments are described in Sections 3 to 5, with implementation details, pseudocode, and link to source code being provided in Appendix B. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 31}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: We provide open access to our source code required to reproduce our experiments by uploading it to an anonymous repository during the review phase and moving it to a public repository upon acceptance. The link to the repository is provided in Appendix B. In terms of data, we only use publicly available regression datasets, which are also discussed in Appendix B. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (HTTPS://NIPS.CC/PUBL IC/GUIDES/CODESUBMISSIONPOLICY) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (HTTPS: //NIPS.CC/PUBLIC/GUIDES/CODESUBMISSIONPOLICY) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 32}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: All datasets and train/test splits used in this paper are publicly available [7]. Experimental settings are explained in Sections 3 to 5 with details being provided in Appendix B. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 32}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: All experiments are repeated $10\\times$ using the train/test data splits provided by [7], except for the 3 largest datasets, where only 5 splits were used due to computational costs. Tables in the main paper only report the mean over data splits due to space constraints. Tables in the appendix report the mean $\\pm$ standard errors over data splits. In figures, mean $\\pm$ standard errors over data splits are reported via error bars when appropriate. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \u201cYes\u201d if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 33}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 33}, {"type": "text", "text": "Justification: Details about compute resources are provided in Appendix B. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 33}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics HTTPS://NEURIPS.CC/PUBLIC/ETHICSGUIDELINES? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Justification: The research conducted in this paper does not involve any human subjects or participants and only uses curated, publicly available datasets [7]. Additionally, the research conducted in this paper considers generic regression tasks and does not pose a high risk in terms of safety, security, discrimination, surveillance, deception and harassment, environment, human rights, or bias and fairness. While specific applications of regression methods could potentially facilitate some of these harmful consequences, such applications are by no means a topic of the research conducted in this paper. Furthermore, implementation details and other information which is required to reproduce the research conducted in this paper is thoroughly provided in Appendix B. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. \u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. ", "page_idx": 33}, {"type": "text", "text": "\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 34}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 34}, {"type": "text", "text": "Justification: In this paper, we discuss and analyse techniques hyperparameter optimisation in Gaussian processes, which is foundational research and not tied to particular applications or deployment. There is no direct path to generating content such as fake speeches, images, or videos. Potential harm which could arise from intended use and correct functioning are thus minimal. Potential harm due to intended use but incorrect functioning is very unlikely because Gaussian processes are specifically designed to produce calibrated uncertainty estimates. While any general purpose regression algorithm, including Gaussian process regression, technically has the potential to be used in harmful applications or technology, it is by no means topic of this paper. Furthermore, our paper conducts empirical studies on publicly available datasets which do not have a harmful downstream impact and which are a standard benchmark in the literature [9, 29, 15, 16, 32]. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 34}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Justification: The paper uses curated, publicly available regression datasets [7] and the proposed methods do not pose a high risk for misuse or dual-use because they are for generic regression and, in particular, do not process or generate natural language, images, nor videos. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 34}, {"type": "text", "text": "", "page_idx": 35}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: The paper uses datasets from the popular UCI regression benchmark made available through a GitHub repository [7] under the CC BY 4.0 license. This information is provided in Appendix B. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, PAPERSWITHCODE.COM/DATASETS has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 35}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: This paper does not release new assets except the code required to reproduce our experiments, which has already been discussed earlier in this checklist. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 35}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 36}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 36}]