[{"figure_path": "01s5ODIHKd/figures/figures_1_1.jpg", "caption": "Figure 1: The robustness of different watermark encoding positions. Left: Encoding in image frequency space resists Gaussian noise but is vulnerable to regeneration attacks. Middle: Encoding in image latent space enhances resistance to regeneration attacks but introduces vulnerabilities to Gaussian noise. Right: FreqMark encodes latent frequency space in the image, achieving a strong defense against regeneration and traditional attacks.", "description": "This figure compares the robustness of three different watermarking approaches against Gaussian noise and regeneration attacks.  The leftmost panel shows watermarking in the image frequency domain, which is resistant to Gaussian noise but vulnerable to regeneration attacks. The middle panel illustrates watermarking in the image's latent space. This approach improves resistance to regeneration attacks but is more susceptible to Gaussian noise. The rightmost panel showcases the FreqMark method, which embeds the watermark in the latent frequency space, providing strong robustness against both Gaussian noise and regeneration attacks.", "section": "1 Introduction"}, {"figure_path": "01s5ODIHKd/figures/figures_3_1.jpg", "caption": "Figure 2: Overview of FreqMark. Encoding: FreqMark employs a pre-trained VAE model to encode watermarks within the latent frequency space of the image.  e1 and e2 are Gaussian noise perturbations added during training. All networks are fixed and only perturbation \u03b4m is trained. Decoding: FreqMark utilizes a pre-trained image encoder to extract features from the image and extracts the watermark by comparing this feature against predefined directions.", "description": "This figure illustrates the FreqMark watermarking process.  The encoding stage uses a pre-trained Variational Autoencoder (VAE) to map an image to a latent frequency space.  A perturbation (\u03b4m) is added to this latent space, encoding the watermark message. This is then passed through the VAE decoder to produce the watermarked image. The decoding stage uses a pre-trained image encoder, extracting features from the watermarked image and using a comparison with predefined vectors to reveal the hidden message.  Noise (e1 and e2) is introduced during training to enhance robustness.", "section": "4 Method"}, {"figure_path": "01s5ODIHKd/figures/figures_5_1.jpg", "caption": "Figure 3: Examples of watermarked images. The first three columns are from ImageNet [16], and the others are generated by the prompts from DiffusionDB [49]. These watermarked images have 48-bit messages and are robust to various attacks. Top: origin image. Middle: watermarked image. Bottom: pixel difference (amplified by a factor of 10 to enhance the visual effect).", "description": "This figure shows example images from the ImageNet and DiffusionDB datasets that have been watermarked using the FreqMark method.  The top row shows the original images, the middle row shows the same images after watermark embedding, and the bottom row shows the pixel-level difference between the original and watermarked images (amplified for visibility).  The caption highlights that the watermarks are 48 bits long and resistant to various attacks.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_6_1.jpg", "caption": "Figure 4: The correlation matrix of each bit of the decoded message from the vanilla images and the random message.", "description": "This figure shows the correlation matrices for each bit of a decoded message (left) and a random message (right).  The diagonal line represents the perfect correlation of a bit with itself. The rest of the matrix shows the correlation between different bits. The decoded message shows more structured correlation than the random message, illustrating the dependency between bits in the watermarked image. This is important because independent bits are easier to break during attacks.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_7_1.jpg", "caption": "Figure 5. Watermarked images under different optimization locations. We compared four distinct optimization objectives for watermark embedding, including the image pixel domain, the frequency domain of the image pixel, the image latent space, and the frequency domain of the image latent space (ours). The difference after watermarking addition is amplified by a factor of 10.", "description": "This figure compares the visual results of watermark embedding using different methods. The first column shows the original images, and the following columns show the watermarked images with different embedding strategies.  The methods compared include embedding in the pixel space, the frequency domain of the pixel space, the latent space, and the frequency domain of the latent space. The last column highlights the difference between the original and watermarked images, amplified for better visualization. The figure demonstrates the impact of embedding location on image quality and watermark invisibility. The \"Latent Frequency\" method, proposed by the authors, aims to achieve a balance between robustness and image quality.", "section": "5.3 Why the Frequency Domain of Image Latent Space"}, {"figure_path": "01s5ODIHKd/figures/figures_9_1.jpg", "caption": "Figure 2: Overview of FreqMark. Encoding: FreqMark employs a pre-trained VAE model to encode watermarks within the latent frequency space of the image.  e1 and e2 are Gaussian noise perturbations added during training. All networks are fixed and only perturbation \u03b4m is trained. Decoding: FreqMark utilizes a pre-trained image encoder to extract features from the image and extracts the watermark by comparing this feature against predefined directions.", "description": "This figure illustrates the FreqMark watermarking method.  The encoding process uses a pre-trained Variational Autoencoder (VAE) to embed the watermark in the latent frequency space of the input image.  Only the perturbation (\u03b4m) is trained during this process, keeping the encoder, decoder, and other components fixed. The decoding process uses a pre-trained image encoder to extract features from the watermarked image, and compares these to pre-defined directional vectors to recover the hidden message. Gaussian noise (e1 and e2) is added during training to enhance robustness.", "section": "4 Method"}, {"figure_path": "01s5ODIHKd/figures/figures_15_1.jpg", "caption": "Figure 7: The relationship between the training steps, watermark robustness, and image quality.", "description": "The figure consists of two sub-figures. The left sub-figure shows the relationship between training steps and watermark robustness under various attacks. The right sub-figure shows how PSNR and SSIM change with increasing training steps.  The graph shows that the watermark robustness improves with increased training steps, while image quality (as measured by PSNR and SSIM) remains relatively stable after initial fluctuations.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_15_2.jpg", "caption": "Figure 8: The TPR/FPR curve under various attacks in two datasets.", "description": "This figure shows the receiver operating characteristic (ROC) curves for the FreqMark watermarking method under various attacks, including brightness, contrast, JPEG compression, Gaussian blur, Gaussian noise, and VAE-B, VAE-C, and Diffusion regeneration attacks. The curves are plotted for two datasets: DiffusionDB and ImageNet.  The x-axis represents the false positive rate (FPR), while the y-axis represents the true positive rate (TPR).  Each curve shows the trade-off between the FPR and TPR for a specific attack, demonstrating the robustness of FreqMark under various attacks.  The different curves represent different attacks on the watermarked image. Ideally, the curves should be high in the y-direction and low in the x-direction (high TPR, low FPR).", "section": "5.2 Benchmarking Watermark Accuracy and Image Quality"}, {"figure_path": "01s5ODIHKd/figures/figures_16_1.jpg", "caption": "Figure 3: Examples of watermarked images. The first three columns are from ImageNet [16], and the others are generated by the prompts from DiffusionDB [49]. These watermarked images have 48-bit messages and are robust to various attacks. Top: origin image. Middle: watermarked image. Bottom: pixel difference (amplified by a factor of 10 to enhance the visual effect).", "description": "This figure showcases examples of images watermarked using the proposed FreqMark method.  It demonstrates the imperceptibility of the watermarking process by visually comparing the original images, the watermarked images, and an amplified version of the pixel differences. The dataset used to source the images includes ImageNet and DiffusionDB, highlighting the method's versatility.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_17_1.jpg", "caption": "Figure 3: Examples of watermarked images. The first three columns are from ImageNet [16], and the others are generated by the prompts from DiffusionDB [49]. These watermarked images have 48-bit messages and are robust to various attacks. Top: origin image. Middle: watermarked image. Bottom: pixel difference (amplified by a factor of 10 to enhance the visual effect).", "description": "This figure shows examples of images watermarked using the FreqMark method.  It demonstrates the invisibility of the watermark by comparing the original image to the watermarked version, showing only minor visual differences (amplified for visibility).  The images come from two datasets: ImageNet and DiffusionDB, highlighting the method's versatility across different image types and sources.  The robustness of the watermark to attacks is also implied by the minimal changes.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_17_2.jpg", "caption": "Figure 3: Examples of watermarked images. The first three columns are from ImageNet [16], and the others are generated by the prompts from DiffusionDB [49]. These watermarked images have 48-bit messages and are robust to various attacks. Top: origin image. Middle: watermarked image. Bottom: pixel difference (amplified by a factor of 10 to enhance the visual effect).", "description": "This figure showcases examples of images watermarked using the proposed FreqMark method.  It demonstrates the imperceptibility of the watermarking process by comparing original images to their watermarked counterparts and showing the difference (amplified for visibility). The images are from the ImageNet and DiffusionDB datasets.  The caption highlights the robustness of the watermarks to various attacks and that they encode a 48-bit message.", "section": "5 Experiments"}, {"figure_path": "01s5ODIHKd/figures/figures_18_1.jpg", "caption": "Figure 3: Examples of watermarked images. The first three columns are from ImageNet [16], and the others are generated by the prompts from DiffusionDB [49]. These watermarked images have 48-bit messages and are robust to various attacks. Top: origin image. Middle: watermarked image. Bottom: pixel difference (amplified by a factor of 10 to enhance the visual effect).", "description": "This figure shows several examples of images watermarked using the FreqMark method. The top row displays the original images, the middle row shows the same images after watermarking, and the bottom row highlights the pixel-level differences between the original and watermarked images (amplified for better visibility).  The images are sourced from both the ImageNet and DiffusionDB datasets, demonstrating the technique's effectiveness across different image types. The watermarks are 48 bits long and the images demonstrate robustness against several attacks.", "section": "5 Experiments"}]