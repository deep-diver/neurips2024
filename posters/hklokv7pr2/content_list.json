[{"type": "text", "text": "Rethinking Optimal Transport in Offline Reinforcement Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Arip Asadulaev1,2 Rostislav Korst3 Alexander Korotin4,1 Vage Egiazarian5,6 Andrey Filchenkov2 Evgeny Burnaev4,1 ", "page_idx": 0}, {"type": "text", "text": "1AIRI 2ITMO 3MIPT 4Skoltech 5Yandex 6HSE University ", "page_idx": 0}, {"type": "text", "text": "asadulaev@airi.net ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We propose a novel algorithm for offline reinforcement learning using optimal transport. Typically, in offline reinforcement learning, the data is provided by various experts and some of them can be sub-optimal. To extract an efficient policy, it is necessary to stitch the best behaviors from the dataset. To address this problem, we rethink offline reinforcement learning as an optimal transport problem. And based on this, we present an algorithm that aims to find a policy that maps states to a partial distribution of the best expert actions for each given state. We evaluate the performance of our algorithm on continuous control problems from the D4RL suite and demonstrate improvements over existing methods. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Deep reinforcement learning (RL) has shown remarkable progress in complex tasks such as strategy games [51], robotics [37], and dialogue systems [39]. In online RL, agents operate in the environment and receive rewards that are used to update policies. However, in some domains, such as healthcare, industrial control, and robotics interactions with the environment can be costly and risky. For these reasons, offilne RL algorithms that use historical data of expert interactions with the environment are more applicable. Given only a dataset of experiences, offline RL algorithms learn a policy without any online actions [33]. ", "page_idx": 0}, {"type": "text", "text": "Due to the off-policy nature of offline RL, naive training of online RL algorithms in offline settings does not provide effective solutions [33]. This is primarily due to a distribution shift between the learned and the behavior policy [15], which causes the instability of the critic function during offpolicy evaluation. To solve this problem and make actions of the learned policy more similar to the one on which critic function was trained, a Behavior Cloning (BC) objectives was proposed [52, 33]. ", "page_idx": 0}, {"type": "text", "text": "As an example of BC loss, Optimal Transport (OT) [50] distance has been introduced for RL. This application of OT is particularly relevant because by minimizing the OT distance between policies, we can efficiently clone the behavior [52, 11, 40, 34, 20, 9, 35]. But there is another problem, in offilne RL, the dataset often consists of various experts demonstrations. Some of these demonstrations may be incorrect, or efficient only for certain parts of the environment. Consequently, cloning the behavior policy in such scenarios may limit policy improvement [30]. To solve these types of problems, RL algorithms need to apply stitching, which means that the algorithm selects the best action for each state and recombines different trajectories provided by multiple experts [30]. ", "page_idx": 0}, {"type": "text", "text": "In our paper, we rethink OT as a framework for offilne reinforcement learning that aims to stitch the best trajectories, rather than clone the policy. Unlike previous OT-based approaches in RL, we do not introduce a new OT-based regularization or a reward function [11, 40]. Instead, we propose a novel perspective that views the entire offline RL problem as an optimal transport problem between state and actions distribution ( 3). By utilizing the $Q$ -function as a transport cost and the policy as an optimal transport map, we  formalize offline reinforcement learning as a Maximin OT optimization problem. This opens doors for applying recent advantages of OT methods to RL directly. In particular, we propose an algorithm that trains a policy to identify the partial distribution of the best actions for each given state. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Contribution: We proposed a novel optimal transport-based policy extraction method and provided an analysis of its performance on various RL-based cost functions. The core of our method is the Partial Policy Learning (PPL) algorithm, which efficiently identifies the best action for each state in the dataset. We evaluated our method across various environments using the D4RL benchmark suite, achieving superior performance compared to state-of-the-art model-free offline RL techniques. ", "page_idx": 1}, {"type": "text", "text": "2 Background and Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Optimal Transport ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Primal form of the optimal transport problem was first proposed by Monge [50]. Suppose there are two probability distributions $\\mu$ and $\\nu$ over measurable spaces $\\mathcal{X}$ and $\\boldsymbol{\\wp}$ respectively, where $\\mathcal{X},\\mathcal{Y}\\subset\\dot{\\mathbb{R}}^{D}$ . We want to find a measurable map $T:\\mathcal{X}\\rightarrow\\mathcal{Y}$ such that the mapped distribution is equal to the target $\\nu$ , for a cost function $c:\\mathcal{X}\\times\\mathcal{Y}\\to\\mathbb{R}$ , the ${o T}$ problem between $\\mu,\\nu$ : ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{T\\sharp\\mu=\\nu}\\mathbb{E}_{x\\sim\\mu}\\big[c(x,T(x))\\big].\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $T\\sharp$ is the push forward operator and respectively $T\\sharp\\mu=\\nu$ represents the mass preserving condition. Informally, we can say that the cost is a measure of how hard it is to move a mass piece between points $x\\,\\in\\,{\\mathcal{X}}$ and $y\\,\\in\\,\\mathcal{V}$ from distributions $\\mu$ and $\\nu$ correspondingly. That is, an OT map $T$ shows how to optimally move the mass of $\\mu$ to $\\nu$ , i.e., with the minimal effort. A widely recognized alternative formulation for optimal transport was introduced by Kantorovich [22]. Unlike the Monge\u2019s OT problem formulation, this alternative allows for mass splitting. The Kantorovich OT problem can be written as: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{g\\in\\Pi(\\mu,\\nu)}\\mathbb{E}_{(x,y)\\sim g}\\left[c(x,y)\\right].\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "In this case, the minimum is obtained over the transport plans $g$ , which refers to the couplings $\\Pi$ with the respective marginals being $\\mu$ and $\\nu$ . The optimal $g^{*}$ belonging to $\\Pi(\\mu,\\nu)$ is referred to as the optimal transport plan. ", "page_idx": 1}, {"type": "text", "text": "Dual form of optimal transport, following the Kantorovich-Rubinstein duality [49], can be obtained from (2) and written as: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{f}\\mathbb{E}_{x\\sim\\mu}\\big[f^{c}(x)\\big]+\\mathbb{E}_{y\\sim\\nu}\\big[f(y)\\big],\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $f:\\mathcal{X}\\to\\mathbb{R}$ and $f^{c}(x)\\!=\\!\\operatorname*{min}_{y\\in\\nu}\\bigl[c(x,y)\\!-\\!f(y)\\bigr]$ is referred to as the $c$ -transform of potential $f$ [50]. For cost function $c(x,y)=\\|x-y\\|_{2}$ , the resulted OT cost is called the Wasserstein-1 distance, see [50, 1] or [44, 1, 2]. It was shown that to compute Wasserstein-1 distance, instead of computing conjuga t e function $f^{c}$ we can simply consider $f$ to be from the set of $^{\\,l}$ -Lipschitz functions[50, 1]. ", "page_idx": 1}, {"type": "text", "text": "Maximin formulation for simultaneously computing the OT distance and recovering the OT map $T$ was recently proposed. According to [27], by applying the Rockafellar interchange theorem [43, Theorem 3A], we can replace the optimization over points $y\\in\\nu$ with an optimization over functions $T:\\mathcal{X}\\rightarrow\\mathcal{Y}$ , which reformulates the problem (3) as a saddle-point optimization problem for the potential $f$ and map $T$ : ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{f}\\operatorname*{min}_{T}\\mathbb{E}_{x\\sim\\mu}\\big[c(x,T(x))-f(T(x))\\big]+\\mathbb{E}_{y\\sim\\nu}\\big[f(y)\\big]\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Using this formulation, significant progress has been achieved in utilizing neural networks for computing OT maps to address strong [36, 24, 18], weak [27], and general [2] OT problems. Our work is inspired by these developments, as we leverage neural optimal transport methods to improve offline reinforcement learning. ", "page_idx": 1}, {"type": "text", "text": "Partial OT: In cases where it is necessary to ignore some data and map the input to part of the target distribution, techniques like unbalanced or partial optimal transport are commonly employed [12, 4, ", "page_idx": 1}, {"type": "text", "text": "17]. For example, partial optimal transport is useful in resource allocation problems where only a subset of resources needs to be optimally allocated to match a subset of demands [12]. ", "page_idx": 2}, {"type": "text", "text": "In our paper, we consider the partial OT formulation proposed by [17]. This framework, named extremal ${o T}$ , solves the partial alignment between the full input distribution and part of the target distribution. Essentially, for Euclidean cost functions such as $\\ell^{\\dot{2}}$ , partial transport maps can be seen as a tool for finding nearest neighbors (maximally close) to the input samples from the target according to the cost function. Please see Figure 1 in [17]. Formally, this method can be written as: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{T\\sharp\\mu\\leq w\\nu}\\mathbb{E}_{x\\sim\\mu}\\big[c(x,T(x))\\big].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "We can call $w$ a coefficient of unbalance. The intuition behind this formulation is as follows: when $w=1$ , the constraint $T\\sharp\\mu\\leq w\\nu$ is equivalent to $T\\sharp\\mu=\\nu$ . This equivalence holds because there is only one probability measure that is less than or equal to $\\nu$ , and it is $\\nu$ itself. However, with values of $w\\geq1$ , the mass of the second measure is scaled. Consequently, it is sufficient to match $\\mu$ only to part of the second measure $\\nu$ to transfer the full mass contained in $\\mu$ . Since the cost $c$ is our objective, $T$ will tend to map to the samples from $\\nu$ that are closest to the input distribution. It was shown that this formulation can also be considered in maximin settings [17], which is the core of our method ( 3.2). ", "page_idx": 2}, {"type": "text", "text": "2.2 Offline Reinforcement Learning ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Reinforcement Learning is a well-established framework for decision-making processes in environments modeled as Markov Decision Processes (MDPs). The MDP is defined as $\\mathcal{M}=(S,A,P,r,\\gamma)$ by the state space $S$ , action space $A$ , transition probability $P(s^{\\prime}\\mid s,a)$ , reward function $r(s,a)$ , and discount factor $\\gamma$ . The goal in RL is to find a policy $\\pi(a|s)$ that maximizes the expected cumulative reward over time $t$ : $\\begin{array}{r}{J(\\pi)\\ensuremath{\\stackrel{\\r{d e f}}{=}}\\mathbb{E}_{\\pi}[\\sum_{t=0}^{\\infty}\\gamma^{t}r(s_{t},a_{t})]}\\end{array}$ . Also we define the distribution over the state space following policy $\\pi$ as $d^{\\pi}(s)$ . To estimate of the expected cumulative reward following a given policy $\\pi$ the critic function $Q^{\\pi}$ is used: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{Q^{\\pi}\\left(s,a\\right)=r\\left(s,a\\right)+\\gamma\\mathbb{E}_{s^{\\prime}\\sim T\\left(s,a\\right),a^{\\prime}\\sim\\pi\\left(s^{\\prime}\\right)}\\left[Q^{\\pi}\\left(s^{\\prime},a^{\\prime}\\right)\\right)\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "In deep RL neural networks are used to parameterize critic $Q_{\\phi}^{\\pi}(s,a)$ and policy $\\pi_{\\theta}$ . Critic can be learned by minimizing the mean squared Bellman error over the experience replay dataset $\\begin{array}{r}{\\mathcal{D}=\\left\\{\\left(s_{i},a_{i},s_{i}^{\\prime},r_{i}\\right)\\right\\}}\\end{array}$ , which consist of trajectories implied by policy $\\pi$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{Q_{\\phi}^{\\pi}}\\mathbb{E}_{(s,a,s^{\\prime})\\sim\\mathcal{D}}\\left[\\left(r(s,a)+\\gamma\\mathbb{E}_{a^{\\prime}\\sim\\pi_{\\theta}(s^{\\prime})}\\left[Q_{\\phi}^{\\pi}(s^{\\prime},a^{\\prime})\\right]-Q_{\\phi}^{\\pi}(s,a)\\right)^{2}\\right].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Using a trained critic function we can recover a near-optimal policy, for example, using Deterministic Policy Gradient (DPG) [45] or its improved version named Twin Delayed Deep Deterministic Policy Gradient (TD3) [15]. ", "page_idx": 2}, {"type": "text", "text": "Offline $\\underline{{\\mathbf{R}}}$ is a fully data-driven approach for decision-making problems. Conventional offline RL algorithms use the (7) formula to recover the $Q$ function, using data $\\mathcal{D}$ collected according to the expert policy $\\beta$ . However, due to distribution shift between actions from $\\mathcal{D}$ and those induced by policy $\\pi$ , the $Q$ function may suffer from inefficiency and overestimation bias during evaluation [15]. To mitigate this issue, various offilne RL algorithms with behavior cloning objectives was proposed. See the related work section ( 6) for more details. ", "page_idx": 2}, {"type": "text", "text": "OT in offline $\\underline{{\\mathbf{R}}}$ has been proposed primarily for efficient behavior cloning. Compared to BC/KL, OT offers more flexibility, while including many building blocks to properly consider the geometry of the problem. The simplest method of integrating OT into offilne RL is by utilizing the Wasserstein- $^{\\,l}$ distance as the measure of dissimilarity between the learned and expert policies. This method is known as the W-BRAC algorithm [52]. Given the critic function $Q(s,{\\bar{a}})$ , the Wasserstein-1 distance defined by $f$ , and the behavior cloning coefficient $\\alpha$ , we have ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\operatorname*{min}_{\\pi}\\operatorname*{max}_{\\|f\\|_{L}\\leq1}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\big[\\underbrace{-Q^{\\pi}(s,a)}_{\\mathrm{Critic}}\\big]+\\alpha\\big(\\underbrace{\\mathbb{E}_{(s,a)\\sim\\mathcal{D}}\\big[f(s,a)\\big]-\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\big[f(s,a)\\big]}_{W a s s e r s t e i n./\\mathrm{distance}}\\big.}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "In real-world applications, collecting large and high-quality datasets may be too costly or impractical. Due to that, the provided data it is often collected by many expert playing several near-optimal policies and only a single expert can be optimal in dataset $\\mathcal{D}$ . The formulation (8) has no mechanism to infer the importance of each action, its just clone the entire data. Moreover, the problem is that computing Wasserstein- $^{\\,l}$ distance is typically complicated [25], because the potential $f$ is required to satisfy the 1-Lipschitz condition [1]. It is also important to note that the coefficient $\\alpha$ is task-dependent[6]. ", "page_idx": 2}, {"type": "text", "text": "Input: Dataset $\\ensuremath{\\mathcal \u1e0a D \u1e0c }(s,a,r,s^{\\prime})$   \nInitialize $Q_{\\phi}$ , $\\pi_{\\theta}$ , $f_{\\omega}$ , $\\beta$   \nfor $k$ in 1...N do $(s,a,r,s^{\\prime})\\gets D$ : sample a batch of transitions from the dataset. $Q^{k+1}\\leftarrow$ Update cost function $Q_{\\phi}^{\\pi}$ using the Bellman update in (2). $f^{k+1}\\quad\\leftarrow\\quad$ Update $f_{\\omega}$ using outputs of $\\pi_{\\theta}$ and samples from dataset: $\\operatorname{\\arg\\operatorname*{min}}_{f}-\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi^{k}(s)}[f^{k}(s,a)]\\stackrel{\\cdot}{+}w\\mathbb{E}_{s,a\\sim\\mathcal{D}}[f^{k}(s,a)]$ $\\pi^{k+1}\\leftarrow\\mathrm{U}$ pdate policy $\\pi_{\\theta}$ as a transport map: $\\operatorname{arg\\,min}_{\\pi}\\mathbb{E}_{s\\sim{\\mathcal{D}},a\\sim\\pi^{k}(s)}[-Q^{k}(s,a)-f^{k}(s,a)].$   \nend for ", "page_idx": 3}, {"type": "text", "text": "3 Rethinking OT in RL ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Considering RL as OT problem ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To extend a connection and apply OT methods in RL, we can view the entire offline RL problem as an optimal transport problem. For this purpose, let\u2019s consider (1). By replacing the cost function $c(\\bar{x},y)$ with the critic $Q^{\\pi}(s,a)$ and treating our policy $\\pi$ as a map that moves mass from the state distribution $d^{\\beta}(s)$ , $(d(s)$ for shorthand), to the corresponding distribution of actions given by the behavior policy $\\beta(\\cdot|s)$ , we obtain a primal state-conditional Monge OT problem. $\\begin{array}{r l}&{\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\operatorname*{min}_{\\pi\\sharp d(s)=\\beta(\\cdot|s)}\\bigl[{-Q^{\\pi}(s,a)}\\bigr]}\\end{array}$ which is equal to: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\left\\{\\pi\\sharp d(s)=\\beta(\\cdot|s)\\right\\}}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\big[-Q^{\\pi}(s,a)\\big].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The objective is to minimize the expectation of the negative critic function $Q^{\\pi}$ , (we can also consider $Q^{\\beta}.$ ) while mapping exclusively to the distribution of actions given by the expert policy $\\beta$ . ", "page_idx": 3}, {"type": "text", "text": "Remark 1: In this formulation, the imposed equality constraints force the policy to mimic the behavior of the expert policy. However, since the provided dataset often contains sub-optimal paths, this formulation remains inappropriate for avoiding inefficient actions provided by the expert policy. ", "page_idx": 3}, {"type": "text", "text": "In the following subsection, we introduce an algorithm that integrates Partial Optimal Transport [17] for deep RL. ", "page_idx": 3}, {"type": "text", "text": "3.2 Stitching with Partial OT ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In many real-world applications, collecting high-quality datasets may be costly or impractical. Therefore, offilne RL algorithms need to select the best actions provided by the experts and ignore sub-optimal ones. Our idea is that partial OT can help us deal with sub-optimal trajectories by mapping states only to the most relevant parts of the action distribution with respect to the critic function $Q$ To obtain partial formulation of 3, instead of equality constraints, we need to consider optimization problem with the following inequality constraints [17]: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\big\\{\\pi\\|d(s)\\le w(\\beta(\\cdot|s))\\big\\}}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\big[-Q^{\\pi}(s,a)\\big].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "As discussed in ( 2.1), the parameter $w$ scales the mass contained in the target distribution. For values of $w\\geq1$ , the mass of the second measure is increased. Consequently, it is not necessary to cover the full distribution $\\beta(\\cdot|s)$ to transport the Dirac mass given by $d(s)$ . As a result, a learned policy (map) matches the state only to part of the action distribution $\\beta(\\cdot|s)$ . This is particularly relevant for offilne RL, as the resulting policy will not clone all actions but will select only the most optimal ones, where optimality is defined by the critic function $Q$ . ", "page_idx": 3}, {"type": "text", "text": "Proposition 1: (Informal) for a critic-based cost function $Q^{\\beta}$ , an offline Policy trained by (10) improves over the behavior policy $\\beta$ . Proofs are given an Appendix ( 9.1). ", "page_idx": 3}, {"type": "text", "text": "To find a practical solution to the given problem using neural networks, we can also consider a dual and maximin formulation for (10). The dual form for the partial transport problem[17] can be expressed as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{f\\geq0}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi}\\left[f^{c}(s,a)\\right]+w\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\beta}\\left[f(s,a)\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "To obtain the maximin formulation, we expand the c-transform (3) using the function $Q$ as the cost $c$ . This operation can be represented as $\\begin{array}{r}{\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi}[f^{c}(s,a)]=\\mathbb{E}_{s\\sim\\mathcal{D}}[\\operatorname*{min}_{a}\\left\\{-Q^{\\pi}(s,a)-f(s,a)\\right\\}]}\\end{array}$ Subsequently, by applying the Rockafellar interchange theorem [43, Theorem 3A], we replace the optimization over points $a$ with an equivalent optimization over functions $\\pi:{\\mathcal{S}}\\rightarrow A$ . The solution can be computed using neural approximations, which is useful for RL tasks ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{f\\geq0}\\operatorname*{min}_{\\pi}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}\\big[\\underbrace{-Q^{\\pi}(s,a)}_{\\mathrm{Cost}}-\\underbrace{f(s,a)\\big]+w\\mathbb{E}_{(s,a)\\sim\\mathcal{D}}\\big[f(s,a)\\big]}_{\\mathrm{Constraints}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Remark 2: In the $I I7,$ , Proposition $^{4\\!}J$ it was shown that $f^{*}(s,a)=0$ vanishes on the outliers i.e on the samples outside the scaled target distribution. The policy update in $(I2)$ , can be written as $\\mathrm{min}_{\\pi}\\operatorname{\\mathbb{E}}_{s\\sim\\mathcal{D},a\\sim\\pi(s)}[-Q(s,a)-f(s,a)]$ . This reveals that if $f(s,a)=0$ exclusively on the outlier actions, it then applies extra weight to correct actions, which reduces the value of $-Q(s,a)-f(s,a)$ . ", "page_idx": 4}, {"type": "text", "text": "Remark 3: The value of w controls the size of the action space in which we map; the higher the value of $w$ , the smaller the subset[17]. When the actions are provided by a single expert, scaling $w$ can be detrimental to performance. ", "page_idx": 4}, {"type": "text", "text": "The primary distinction between our method (12), and previous OT for RL approaches, particularly (8), is as follows: ", "page_idx": 4}, {"type": "text", "text": "\u2022 OT is not treated as a component of the problem or as a regularization term with a coefficient of $\\alpha$ . Instead, the entire policy optimization is considered as OT.   \n\u2022 Our formulation for computing OT does not necessitate $^{\\,l}$ -Lipschitz function constraints on $f$ , as it does not compute the Wasserstein-1 distance. Rather, it addresses a maxmin OT problem with a critic-based cost function, where $f$ can be any arbitrary scalar function satisfying $f\\geq0$ .   \n\u2022 Unlike traditional OT approaches that fully aligns two distributions, our method maps only to the part of the target distribution with the best actions with respect to the critic. ", "page_idx": 4}, {"type": "text", "text": "In practice, we use neural networks $\\pi_{\\theta}:S\\rightarrow A$ and $f_{\\omega}:S\\times A\\to\\mathbb{R}$ to parameterize $\\pi$ and $f$ respectively. These neural networks serve as approximators that can capture complex mappings of states. We train these neural networks using stochastic gradient ascent-descent (SGAD) by sampling random batches from the dataset $\\mathcal{D}$ . At each training step, we sample a batch of transitions from the offilne dataset $\\mathcal{D}$ and then adjust the value function $Q$ , and the potential $f$ , Then for the $k$ update step, given the last policy value function $Q^{k}$ , and $f^{k}$ , we update the policy, see Algorithm 1. ", "page_idx": 4}, {"type": "text", "text": "4 Toy Experiments ", "text_level": 1, "page_idx": 4}, {"type": "image", "img_path": "hKloKv7pR2/tmp/8cca9d285e09d223ee6f6b1662ac5714362392bf2b2e31fa8f56f6d4a6ed21db.jpg", "img_caption": ["Figure 1: Toy experiments. (a) Left point $S_{0}$ denoting start and $S_{T}$ is the only rewarded, target location. Black curves visualize behavior trajectories $\\beta$ . (b) Best behavior policy $\\beta^{*}$ according to the data, and the optimal policy $\\pi^{*}$ that provides the optimal (shortest path) solution. (c) Results of the policy $\\beta$ trained by minimizing $-Q^{\\tilde{\\beta}}(s,\\pi(s))\\mathbf{+}\\mathbf{B}\\mathbf{C}$ and policy $\\pi$ trained by our algorithm 1. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "To demonstrate the ability of our algorithm to extract the best policy from the sub-optimal behavior trajectories, we constructed a simplified offilne RL dataset. The goal is to find the shortest path from a starting location $S_{0}$ to a reward point $S_{T}$ , navigating through 50 intermediate states $S_{t}$ uniformly spaced along the $x$ -axis from -1.3 to 0. The action space is continuous, with the agent\u2019s task being to determine the optimal $y$ -values for the each $x$ -coordinate. For the each intermediate state-action pair, the reward is defined as negative Euclidean distance to the final state-action pair $S_{T},A_{T}$ . ", "page_idx": 4}, {"type": "text", "text": "The offline RL dataset consisted of three sub-optimal expert trajectories, as shown in Figure 1(a). The best policy that can be extracted by recombining the expert trajectories and an actual optimal policy $\\pi^{*}$ that provides the shortest path are highlighted in Figure 1(b). ", "page_idx": 5}, {"type": "text", "text": "We compared our method with the offline RL algorithm based on behavior cloning. For this, we trained the critic $Q^{\\beta}$ by (2), using actions drawn from the observed behavior trajectories $\\beta$ presented in the dataset $\\mathcal{D}$ . Given $Q^{\\beta}$ , we minimize $\\mathbb{E}_{s,a\\sim\\mathcal{D}}[-Q^{\\beta}(s,\\beta(s))+\\|\\beta(s)-a\\|^{\\frac{\\gamma}{2}}]$ to obtain the policy $\\beta$ .1 Next, using the given critic function $Q^{\\beta}$ , we trained the policy $\\pi(s)$ using our algorithm with parameter $w\\,=\\,8$ . Compared to offline RL 1(b), which produced average expert solutions, our method demonstrated superior performance by extracting and exploiting the most strategic insights from the data, maximizing the reward and ignoring all inefficient actions, see Figure 1(c).. ", "page_idx": 5}, {"type": "text", "text": "In all experiments, a single-layer neural network with 32 neurons and ReLU activation was used as the configuration for both the critic and policy networks. For our method, we used a Lagrangian network $f(s,a)$ with similar parameters. There are 5000 steps was done for each network, with Adam [23] optimizer with a learning rate (lr) of 1e-3. ", "page_idx": 5}, {"type": "text", "text": "5 D4RL Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "5.1 Benchmarks and Baselines ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We evaluate our proposed method using the Datasets for Deep Data-Driven Reinforcement Learning (D4RL) [13] benchmark suite, which is a collection of diverse datasets designed for training and evaluating deep RL agents in a variety of settings. It includes tasks in continuous control, discrete control, and multi-agent settings with a variety of reward structures and observation spaces. First, we tested our method on the Gym\u2019s MuJoCo-v2 environments, such as Walker, Hopper, and HalfCheetah. We also tested our method on the complex Antmaze-v2 and Android-v1 environments. ", "page_idx": 5}, {"type": "text", "text": "To compare the performance of our proposed method, we selected four state-of-the-art offline RL algorithms. These include Conservative $Q$ -Learning (CQL) [32], Twin Delayed Deep Deterministic Policy Gradient with behavior Cloning $\\mathrm{TD}3\\substack{+\\mathrm{BC}})$ [14], Implicit $Q$ -Learning IQL [28], ReBRAC [47], and IQL with Optimal Transport Reward Labeling $({\\mathrm{IQL}}{+}{\\mathrm{OTR}})$ [35]. More details on the methods are given in ( 6). The results of the supervised behavior cloning are also included. ", "page_idx": 5}, {"type": "text", "text": "5.2 Settings ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We tested our method in conjunction with various algorithms that avoid overestimation of Q-function. These overestimation-avoiding methods are used to obtain different types of cost functions in our method, showing that our method can work efficiently with any of them. ", "page_idx": 5}, {"type": "text", "text": "PPL. First, to be consistent with Proposition 1, we considered our method in the One-Step RL settings. Following the original setting provided by One-Step RL [6], we pre-trained $\\beta$ for $500\\mathrm{k}$ steps. Next, we pre-trained $\\mathbf{\\bar{{Q}}}^{\\beta}$ for 2 million steps. Then, to avoid overestimation bias, we applied a simplified conservative update to $Q^{\\beta}$ (see [32, Eq.1]). Finally, to improve beyond the behavior policy $\\beta$ , we trained the policy $\\pi$ for the 100k steps using our method 1. For these experiments, a two-layer feed-forward network with a hidden layer size of 1024 and a learning rate of 0.001 was used with the Adam optimizer [23]. We tested this approach for the Mujoco environment see Table 4, for the comparison with the OneStep RL method. ", "page_idx": 5}, {"type": "text", "text": "$\\underline{{\\mathbf{P}\\mathbf{P}\\mathbf{L}^{\\mathbf{C}\\mathbf{Q}\\mathbf{L}}}}$ . Second, we tested our method in conjunction with the CQL method on the Antmaze problems. In this setting, no pre-trained models were used; we used the code provided by the CORL library [48], with all hyperparameters and architectures set identical to those originally used in CORL for the CQL method. We trained the algorithm for 1M steps, with $w$ set to 8 for all experiments. See the comparison with CQL in Table 1. ", "page_idx": 5}, {"type": "text", "text": "PPLR. Finally, we coupled our method with the improved version of $\\mathrm{TD3+BC}$ called ReBRAC [47]. In these experiments, for a cost function, the $\\mathrm{TD3+BC}$ objective was used, which combines the $Q$ function with a supervised loss. The same hyperparameters proposed by the authors for ReBRAC were kept in our experiments. No pre-trained models were used, we trained the agent from scratch for ", "page_idx": 5}, {"type": "text", "text": "1M steps. We have tested our method on the Mujoco, Android, and Antmaze datasets. While the ReBRAC framework recommends task-specific hyperparameters [47], the results for the Antmaze are also reported for the best $w$ hyperparameter. The results can be found in the Tables 1, 2 and 3. ", "page_idx": 6}, {"type": "text", "text": "5.3 Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In the Table 1 we consider a side-by-side comparison, and the color purple indicates the best results between two columns. In the Tables 2 and 3 the color indicates the top 3 results. We compared the results with those reported in the ReBRAC [47] and $\\mathrm{OTR+IQL}$ papers [35]. For the Antmaze datasets, the main comparison is with the oracle method to which our method is coupled. For comparison, we reproduced the CQL and ReBRAC results using the code provided in CORL. The CQL score curves are provided in Appendix 3. For completeness, IQL and OTR+IQL results are also included. ", "page_idx": 6}, {"type": "table", "img_path": "hKloKv7pR2/tmp/2fe4cb99014c8f3370f6fe766916870dbba75eb3ad344eaa022825e7003bc467.jpg", "table_caption": ["Table 1: Averaged normalized scores on Antmaze-v2 tasks. Reported scores are the results of the final 100 evaluations and 5 random seeds. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "hKloKv7pR2/tmp/ca3f011a71a5a1159fda911e89825c5f28869245befec682b835fcaf3996dcb1.jpg", "table_caption": ["Table 2: Averaged normalized scores on MuJoCo tasks. Reported scores are the results of the final 10 evaluations and 5 random seeds. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "In offilne RL, the problems are noisy, complex, and diverse, and task-specific hyperparameter search is required. Despite this fact, our method shows promising results and consistently outperforms methods on which it is based. Most importantly our method gives significant improvement in the achieved scores for the Antmaze problems (Table 1). In particular, our method provides state-ofthe-art results for all datasets on this task, and gives a significant improvement of $_{(+16)}$ and $(+21)$ points for the complicated large-play-v2 and large-play-diverse-v2 environments. Importantly, we consistently outperform the previous best OT-based offline RL algorithm, $\\mathrm{OTR+IQL}$ . ", "page_idx": 6}, {"type": "text", "text": "We can interpret that our method lies between behavior cloning and direct maximization of the $Q$ function. Recent studies have shown that direct maximization can lead to sub-optimal results due to overestimation bias [16]. Conversely, being too close to the expert\u2019s policy prevents improvement [30]. Intuitively, our extremal formulation allows us to strike a balance, maximizing $Q$ by actions from the expert action distribution that are not radically different from those on which the $Q$ was trained. ", "page_idx": 6}, {"type": "text", "text": "Our formulation aligns the state space with only a portion of the action space. This property is particularly relevant for offilne datasets that contain a mixture of expert demonstrations. Our method can help to select the best possible action from a set of expert trajectories [33]. In other words, optimal $f$ is to encourage the discovery of new actions that can yield high rewards. To illustrate the task-specific dependence of the parameter $w$ , we performed an ablation for different values ( 5.4). ", "page_idx": 6}, {"type": "text", "text": "Table 3: Averaged normalized scores on Android tasks. Reported scores are the results of the final 10 evaluations and 5 random seeds. ", "page_idx": 7}, {"type": "table", "img_path": "hKloKv7pR2/tmp/cee2081379a3c80b51b162d2ac7b43b26f1a2789a34f47f6448a4d9b03b9fec0.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Run time: The code is implemented in the PyTorch [41] and JAX frameworks and will be publicly available along with the trained networks. Our method converges within 2\u20133 hours on Nvidia 1080 (12 GB) GPU. We used WanDB [5] for babysitting training process. The code is available in supplementary materials. ", "page_idx": 7}, {"type": "image", "img_path": "hKloKv7pR2/tmp/7ebb02b25e11b358bebcd214a18f187aad0b559aaa813b45e1abba483132a720.jpg", "img_caption": ["5.4 Parameter w ", "Figure 2: Exponential moving average (coef. 0.3) curves of the normalized score curves for the Antmaze. Different colors of the curves represent results for $w=3$ , $w=5$ , $w=8$ , $w=12$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "The parameter $w$ influences the action selection process by determining the support range over which the policy operates. With the parameter $w$ equal to 1, our method considers all actions provided in the dataset for each state. By increasing this value, we consider the smaller subspace of possible actions, which can be useful when it is necessary to select the best one from the data. In a perfect scenario, we want to find as few actions as possible that maximize the score, so we favor the higher values of $w$ . ", "page_idx": 7}, {"type": "text", "text": "For some datasets, reducing the action subspace is unnecessary. We studied different parameters $w{=}[3,5,8,12]$ for the range of tasks, results for the Antmaze are presented in Figure 2. We can see that the biggest effect of the parameter was accrued for the large-play and large-diverse tasks 2 (e). This means that selecting the subspace of actions is important for this environments, and our method allows for this nuanced control depending on the task. ", "page_idx": 7}, {"type": "text", "text": "6 Related work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "There is a rich family of offline RL algorithms. To solve the distribution shift problem, several methods have been proposed [6, 29, 53, 7, 31, 14, 28]. The simplest approach is the behavior regularized actor-critic (BRAC) [52]. Minimizing some divergence $D$ , between the learned $\\pi$ and the expert policy $\\beta$ , the BRAC framework can be written as distance regularized policy optimization: Where $D(\\pi(\\cdot|s),\\beta(\\cdot|s))$ is BC loss. Based on BRAC framework [14] proposed a $\\mathrm{TD3+BC}$ approach that combines standard TD3 [15] with BC loss minimization between policy and expert actions, and showed strong performance. ", "page_idx": 8}, {"type": "text", "text": "Policy Gradient from Arbitrary Experience via DICE [38] proposes to incorporate $f$ -divergence regularization into the critic function. Based on a similar concept, Conservative $Q$ -Learning [32] and Adversarial Trained Actor-Critic [8] extends the critic loss with pessimistic terms that minimize the $Q$ values on the samples of a learned policy and maximize the values of the dataset actions. ", "page_idx": 8}, {"type": "text", "text": "Methods such as one-step RL [6], solves stitching by approximating the behavior $Q^{\\beta}$ function and extract the corresponding policy $\\pi$ by weighting actions using the advantage function $A^{\\beta}(s,a)$ to find the best action for the given state [46]. Based on this concept, Implicit $Q$ -Learning (IQL) [28] approximates the policy improvement step by treating the state value function $V^{\\beta}(s)$ as a random variable and taking a state-conditional upper expectile to estimate the value of the best actions. ", "page_idx": 8}, {"type": "text", "text": "Application of optimal transport in offline RL was wiedly explored for behavioral cloning. For example it was used to construct a pseudo-reward function [11, 40, 34, 20, 9]. Primal Wasserstein Imitation Learning [11] and Sinkhorn Imitation Learning [40] use the OT distance between the expert and imitator to create a reward function. Recently, the Optimal Transport Reward Labeling (OTR) method [35] was proposed to generate a reward-annotated dataset that can then be used by various offilne RL algorithms. However, like W-BRAC, these methods primarily use OT as an additional loss. ", "page_idx": 8}, {"type": "text", "text": "7 Conclusion and Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we have established the novel algorithm for offline reinforcement learning. Our work introduces the concept using the action-value function and the policy as components of the OT problem between states and actions. To demonstrate the potential of our formulation, we propose the practical algorithm that penalize the policy to avoid inefficient actions provided in the dataset. By applying partial optimal transport, our algorithm effectively selects and maps the best expert actions for each given state, ensuring efficient policy extraction from noisy or sub-optimal datasets. The limitation of our method is that parameter $w$ is task dependent. ", "page_idx": 8}, {"type": "text", "text": "This work is a step towards our larger vision towards deepening the connection between OT and offilne RL RL. Using our formulation other OT methods also can be integrated into RL. For example, various regularizations [26, 10] and general costs [42, 2] can be used to incorporate task-specific information into the learned map, which can be particularly relevant in hierarchical RL problems [3]. Additionally Weak Neural OT [27] can be relevant in RL where stochastic behavior is preferred for exploration in the presence of multimodal goals [19]. ", "page_idx": 8}, {"type": "text", "text": "7.1 Reproducibility ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To reproduce our experiment we provide source code in https://github.com/machinestein/ PPL/. Details on used hyperparameters are presented in settings ( 5.2). ", "page_idx": 8}, {"type": "text", "text": "7.2 Societal Impact ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "This paper presents research aimed at advancing the field of RL. While our work may have various societal implications, we do not believe any particular ones need to be specifically emphasized here. ", "page_idx": 8}, {"type": "text", "text": "8 Acknowledgment ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "The work was supported by the Analytical center under the RF Government (subsidy agreement 000000D730321P5Q0002, Grant No. 70-2021-00145 02.11.2021) ", "page_idx": 8}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Martin Arjovsky, Soumith Chintala, and L\u00e9on Bottou. Wasserstein generative adversarial networks. In International conference on machine learning, pages 214\u2013223. PMLR, 2017.   \n[2] Arip Asadulaev, Alexander Korotin, Vage Egiazarian, and Evgeny Burnaev. Neural optimal transport with general cost functionals. arXiv preprint arXiv:2205.15403, 2022.   \n[3] Pierre-Luc Bacon, Jean Harb, and Doina Precup. The option-critic architecture. In Proceedings of the AAAI conference on artificial intelligence, volume 31, 2017.   \n[4] Yikun Bai, Bernhard Schmitzer, Matthew Thorpe, and Soheil Kolouri. Sliced optimal partial transport. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 13681\u201313690, 2023.   \n[5] Lukas Biewald. Experiment tracking with weights and biases, 2020. Software available from wandb.com.   \n[6] David Brandfonbrener, Will Whitney, Rajesh Ranganath, and Joan Bruna. Offline rl without off-policy evaluation. Advances in neural information processing systems, 34:4933\u20134946, 2021.   \n[7] Xi Chen, Ali Ghadirzadeh, Tianhe Yu, Yuan Gao, Jianhao Wang, Wenzhe Li, Bin Liang, Chelsea Finn, and Chongjie Zhang. Latent-variable advantage-weighted policy optimization for offilne rl. arXiv preprint arXiv:2203.08949, 2022.   \n[8] Ching-An Cheng, Tengyang Xie, Nan Jiang, and Alekh Agarwal. Adversarially trained actor critic for offline reinforcement learning. In International Conference on Machine Learning, pages 3852\u20133878. PMLR, 2022.   \n[9] Samuel Cohen, Brandon Amos, Marc Peter Deisenroth, Mikael Henaff, Eugene Vinitsky, and Denis Yarats. Imitation learning from pixel observations for continuous control. 2021.   \n[10] Nicolas Courty, R\u00e9mi Flamary, Devis Tuia, and Alain Rakotomamonjy. Optimal transport for domain adaptation. IEEE transactions on pattern analysis and machine intelligence, 39(9):1853\u2013 1865, 2016.   \n[11] Robert Dadashi, L\u00e9onard Hussenot, Matthieu Geist, and Olivier Pietquin. Primal wasserstein imitation learning. arXiv preprint arXiv:2006.04678, 2020.   \n[12] Alessio Figalli. The optimal partial transport problem. Archive for rational mechanics and analysis, 195(2):533\u2013560, 2010.   \n[13] Justin Fu, Aviral Kumar, Ofir Nachum, George Tucker, and Sergey Levine. D4rl: Datasets for deep data-driven reinforcement learning. arXiv preprint arXiv:2004.07219, 2020.   \n[14] Scott Fujimoto and Shixiang Shane Gu. A minimalist approach to offilne reinforcement learning. Advances in neural information processing systems, 34:20132\u201320145, 2021.   \n[15] Scott Fujimoto, Herke Hoof, and David Meger. Addressing function approximation error in actor-critic methods. In International conference on machine learning, pages 1587\u20131596. PMLR, 2018.   \n[16] Scott Fujimoto, David Meger, and Doina Precup. Off-policy deep reinforcement learning without exploration. In International conference on machine learning, pages 2052\u20132062. PMLR, 2019.   \n[17] Milena Gazdieva, Alexander Korotin, Daniil Selikhanovych, and Evgeny Burnaev. Extremal domain translation with neural optimal transport. arXiv preprint arXiv:2301.12874, 2023.   \n[18] Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron C Courville. Improved training of Wasserstein GANs. In Advances in Neural Information Processing Systems, pages 5767\u20135777, 2017.   \n[19] Tuomas Haarnoja, Haoran Tang, Pieter Abbeel, and Sergey Levine. Reinforcement learning with deep energy-based policies. In International conference on machine learning, pages 1352\u20131361. PMLR, 2017.   \n[20] Siddhant Haldar, Vaibhav Mathur, Denis Yarats, and Lerrel Pinto. Watch and match: Supercharging imitation with regularized optimal transport. arXiv preprint arXiv:2206.15469, 2022.   \n[21] Sham Kakade and John Langford. Approximately optimal approximate reinforcement learning. In Proceedings of the Nineteenth International Conference on Machine Learning, pages 267\u2013 274, 2002.   \n[22] Leonid Kantorovitch. On the translocation of masses. Management Science, 5(1):1\u20134, 1958.   \n[23] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[24] Alexander Korotin, Vage Egiazarian, Arip Asadulaev, Alexander Safin, and Evgeny Burnaev. Wasserstein-2 generative networks. In International Conference on Learning Representations, 2021.   \n[25] Alexander Korotin, Alexander Kolesov, and Evgeny Burnaev. Kantorovich strikes back! wasserstein gans are not optimal transport? arXiv preprint arXiv:2206.07767, 2022.   \n[26] Alexander Korotin, Daniil Selikhanovych, and Evgeny Burnaev. Kernel neural optimal transport. arXiv preprint arXiv:2205.15269, 2022.   \n[27] Alexander Korotin, Daniil Selikhanovych, and Evgeny Burnaev. Neural optimal transport. arXiv preprint arXiv:2201.12220, 2022.   \n[28] Ilya Kostrikov, Rob Fergus, Jonathan Tompson, and Ofir Nachum. Offline reinforcement learning with fisher divergence critic regularization. In International Conference on Machine Learning, pages 5774\u20135783. PMLR, 2021.   \n[29] Aviral Kumar, Justin Fu, Matthew Soh, George Tucker, and Sergey Levine. Stabilizing offpolicy q-learning via bootstrapping error reduction. Advances in Neural Information Processing Systems, 32, 2019.   \n[30] Aviral Kumar, Joey Hong, Anikait Singh, and Sergey Levine. When should we prefer offline reinforcement learning over behavioral cloning? arXiv preprint arXiv:2204.05618, 2022.   \n[31] Aviral Kumar, Sergey Levine, Yevgen Chebotar, et al. Dasco: Dual-generator adversarial support constrained offline reinforcement learning. In Advances in Neural Information Processing Systems, 2022.   \n[32] Aviral Kumar, Aurick Zhou, George Tucker, and Sergey Levine. Conservative q-learning for offilne reinforcement learning. Advances in Neural Information Processing Systems, 33:1179\u2013 1191, 2020.   \n[33] Sergey Levine, Aviral Kumar, George Tucker, and Justin Fu. Offline reinforcement learning: Tutorial, review, and perspectives on open problems. arXiv preprint arXiv:2005.01643, 2020.   \n[34] Zhuo Li, Xu Zhou, Taixin Li, and Yang Liu. An optimal-transport-based reinforcement learning approach for computation offloading. In 2021 IEEE Wireless Communications and Networking Conference (WCNC), pages 1\u20136. IEEE, 2021.   \n[35] Yicheng Luo, Zhengyao Jiang, Samuel Cohen, Edward Grefenstette, and Marc Peter Deisenroth. Optimal transport for offline imitation learning. arXiv preprint arXiv:2303.13971, 2023.   \n[36] Ashok Vardhan Makkuva, Amirhossein Taghvaei, Sewoong Oh, and Jason D Lee. Optimal transport mapping via input convex neural networks. arXiv preprint arXiv:1908.10962, 2019.   \n[37] Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A Rusu, Joel Veness, Marc G Bellemare, Alex Graves, Martin Riedmiller, Andreas K Fidjeland, Georg Ostrovski, et al. Human-level control through deep reinforcement learning. nature, 518(7540):529\u2013533, 2015.   \n[38] Ofir Nachum, Bo Dai, Ilya Kostrikov, Yinlam Chow, Lihong Li, and Dale Schuurmans. Algaedice: Policy gradient from arbitrary experience. arXiv preprint arXiv:1912.02074, 2019.   \n[39] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al. Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730\u201327744, 2022.   \n[40] Georgios Papagiannis and Yunpeng Li. Imitation learning with sinkhorn distances. arXiv preprint arXiv:2008.09167, 2020.   \n[41] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information processing systems, 32, 2019.   \n[42] Fran\u00e7ois-Pierre Paty and Marco Cuturi. Regularized optimal transport is ground cost adversarial. In International Conference on Machine Learning, pages 7532\u20137542. PMLR, 2020.   \n[43] R Tyrrell Rockafellar. Integral functionals, normal integrands and measurable selections. In Nonlinear operators and the calculus of variations, pages 157\u2013207. Springer, 1976.   \n[44] Filippo Santambrogio. Optimal transport for applied mathematicians. Birk\u00e4user, NY, 55(58- 63):94, 2015.   \n[45] David Silver, Guy Lever, Nicolas Heess, Thomas Degris, Daan Wierstra, and Martin Riedmiller. Deterministic policy gradient algorithms. In International conference on machine learning, pages 387\u2013395. PMLR, 2014.   \n[46] Richard S Sutton and Andrew G Barto. Reinforcement learning: An introduction. MIT press, 2018.   \n[47] Denis Tarasov, Vladislav Kurenkov, Alexander Nikulin, and Sergey Kolesnikov. Revisiting the minimalist approach to offline reinforcement learning. arXiv preprint arXiv:2305.09836, 2023.   \n[48] Denis Tarasov, Alexander Nikulin, Dmitry Akimov, Vladislav Kurenkov, and Sergey Kolesnikov. CORL: Research-oriented deep offline reinforcement learning library. In 3rd Offline RL Workshop: Offline RL as a \u201dLaunchpad\u201d, 2022.   \n[49] C\u00e9dric Villani. Topics in optimal transportation. Number 58. American Mathematical Soc., 2003.   \n[50] C\u00e9dric Villani. Optimal transport: old and new, volume 338. Springer Science & Business Media, 2008.   \n[51] Oriol Vinyals, Igor Babuschkin, Junyoung Chung, Michael Mathieu, Max Jaderberg, Wojciech M Czarnecki, Andrew Dudzik, Aja Huang, Petko Georgiev, Richard Powell, et al. Alphastar: Mastering the real-time strategy game starcraft ii. DeepMind blog, 2, 2019.   \n[52] Yifan Wu, George Tucker, and Ofir Nachum. Behavior regularized offline reinforcement learning. arXiv preprint arXiv:1911.11361, 2019.   \n[53] Wenxuan Zhou, Sujay Bajracharya, and David Held. Plas: Latent action space for offline reinforcement learning. In Conference on Robot Learning, pages 1719\u20131735. PMLR, 2021. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "9 Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "9.1 Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proposition 9.1 (Policy Improvement with Partial Policy Learning). For any policy $\\pi$ , let\u2019s define its performance as J(\u03c0)de=f E\u03c0[ t\u221e=0 \u03b3tr(st, at)] over the trajectories obtained by following the policy $\\pi_{i}$ , $(s_{0}\\sim S,a_{t}\\sim\\pi(s_{t}),s_{t+1}\\overset{.}{\\sim}P(\\cdot\\mid s_{t},a_{t}))$ ). Let $\\beta$ be the policy of an expert and $\\pi$ is the solution to Eq. 10 with the $Q^{\\beta}$ cost function. Then it holds that: ", "page_idx": 12}, {"type": "equation", "text": "$$\nJ(\\pi)\\geq J(\\beta).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Proof. According to [21], to compare the performance of any two policies $\\pi$ and $\\beta$ we can use the Performance difference lemma: ", "page_idx": 12}, {"type": "equation", "text": "$$\nJ(\\pi)-J(\\beta)=\\frac{1}{1-\\gamma}\\underset{s\\sim d^{\\pi}}{\\mathbb{E}}\\left[A^{\\beta}(s,\\pi)\\right]\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "By applying [17, Theorem 3], the solution of (10) as the parameter $w\\,\\rightarrow\\,\\infty$ , converges to the solution of the following problem: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\left\\{\\pi(\\cdot|s)\\subset\\mathrm{Supp}(\\beta(\\cdot|s))\\right\\}}\\mathbb{E}_{s\\sim\\mathcal{D},a\\sim\\pi}[-Q(s,a)].\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Here support (Supp) is the set of points where the probability mass of the distribution lives. In our settings $\\operatorname{Supp}(\\beta(\\cdot|s))$ indicates the best action from $\\beta$ which maximizes $Q$ . ", "page_idx": 12}, {"type": "text", "text": "Now, to show the improvement over the behavior policy, let\u2019s consider the difference between the behavior policy $\\beta$ and the new policy $\\pi$ obtained after the update of $\\beta$ using our Eq.14, then we have: ", "page_idx": 12}, {"type": "equation", "text": "$$\nJ(\\pi)-J(\\beta)=\\frac{1}{1-\\gamma}\\underset{s\\sim d^{\\pi}}{\\mathbb{E}}\\left[Q^{\\beta}(s,\\pi)-V^{\\beta}(s)\\right]=\n$$", "text_format": "latex", "page_idx": 12}, {"type": "equation", "text": "$$\n\\frac{1}{1-\\gamma}\\underset{s\\sim d^{\\pi}}{\\mathbb{E}}[Q^{\\beta}(s,\\underset{a\\subset\\mathrm{Supp}(\\beta(\\cdot\\vert s))}{\\operatorname*{max}}[Q^{\\beta}(s,a)])-\\mathbb{E}_{a\\sim\\beta(s)}[Q^{\\beta}(s,a)]]\\geq0\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Where in first we used the definition of $\\pi$ , and then noted that the maximum over the all actions given by the expert is always greater than the average over some actions from the experts policy $\\beta$ . \u25a1 ", "page_idx": 12}, {"type": "text", "text": "This result is analogous to the classic policy iteration improvements proof. The difference is that we takes max over the $\\operatorname{Supp}(\\beta(\\cdot|s))$ rather than max over the all possible actions $A$ . ", "page_idx": 12}, {"type": "text", "text": "9.2 Additional Illustrations ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "For completeness, we provide an additional illustration of the results of the proposed method. Specifically, we show the scores for the one-step settings Table 4 and in this subsection we show the normalized score curves of the CQL and our method during training Figure 3. ", "page_idx": 12}, {"type": "text", "text": "Table 4: Averaged normalized scores on MuJoCo tasks. Results of the final 10 evaluations and 5 random seeds. ", "page_idx": 12}, {"type": "table", "img_path": "hKloKv7pR2/tmp/a2ac91a3f90eab1d09391e58a704b3e0ed9453cba5fa2b39ba49b165fe9e3645.jpg", "table_caption": [], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "Parameters settings As mentioned, we considered different values of $w$ for the ReBRAC-based method. The parameters can be seen in the Table 5. For most tasks, higher values of $w$ are preferable, which means that some sort of suboptimal trajectories are present in the datasets. ", "page_idx": 12}, {"type": "image", "img_path": "hKloKv7pR2/tmp/4ba4953f103feb572f681ab9abaca62e0b47243e71998a67bfb270adb41615a1.jpg", "img_caption": ["Figure 3: Normalized score curves on the Antmaze tasks, $\\mathrm{IPL}^{\\mathrm{CQL}}$ algorithm is blue, CQL is red "], "img_footnote": [], "page_idx": 13}, {"type": "table", "img_path": "hKloKv7pR2/tmp/2145e737696ca2c75d8e9d0ca8bf4ffa612a320c469f4133ee3f43542e8e4008.jpg", "table_caption": [], "table_footnote": ["Table 5: Optimal $w$ values for different environments "], "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: For each contribution listed in abstract and introduction we provide the links to the sections about them. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: We discuss the limitations of our solver in Appenix 7. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: We provide the proofs and the assumptions in Appendix 9.1. ", "page_idx": 14}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: We provide a full list of the experimental details. We use publicly available datasets. The code for the experiments is provided in supplementary material. ", "page_idx": 14}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: The code for our solver is included in supplementary material and will be made public after acceptance of our paper. We use publicly available datasets. ", "page_idx": 14}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: We provide the experimental details in Experiments section5. ", "page_idx": 14}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 14}, {"type": "text", "text": "Answer: [No] ", "page_idx": 14}, {"type": "text", "text": "Justification: We have provided comparisons in tables on the range of different environments, which is usually sufficient for comparing algorithms in the offline RL domain. ", "page_idx": 14}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: The computational resources are discussed in results section. ", "page_idx": 15}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The research conforms with NeurIPS Code of Ethics. We discuss the societal impact of our paper in Appendix 7.2. ", "page_idx": 15}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We discuss the societal impact of our paper in 7.2. ", "page_idx": 15}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: The research does not release data or models that have a high risk for misuse and does not need safeguards. ", "page_idx": 15}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We cited the creators all of the used assets. ", "page_idx": 15}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The code is included in supplementary material. The license for the code will be provided after the paper acceptance. ", "page_idx": 15}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: The paper does not include crowdsourcing experiments or research with human subjects. ", "page_idx": 15}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: The paper does not include crowdsourcing experiments or research with human subjects. ", "page_idx": 15}]