[{"figure_path": "jij4vOVU7i/tables/tables_5_1.jpg", "caption": "Table 1: Comparative analysis of matching strategies on 50Salads. (#Q: number of queries.)", "description": "This table presents a comparison of three different matching strategies used in the BaFormer model for temporal action segmentation on the 50Salads dataset. The strategies are: Ordered Class Matching, Transcript Matching, and Instance Matching. For each strategy, the table shows the number of queries used, FLOPs (floating-point operations), inference time, number of parameters, and the performance metrics (F1@10, F1@25, F1@50, Edit score, and accuracy). The results demonstrate the effectiveness of the instance matching strategy in achieving high accuracy with a relatively small number of queries compared to the other two strategies.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_6_1.jpg", "caption": "Table 1: Comparative analysis of matching strategies on 50Salads. (#Q: number of queries.)", "description": "This table presents a comparison of three different matching strategies used in the BaFormer model for temporal action segmentation on the 50Salads dataset.  The strategies are Ordered Class Matching, Transcript Matching, and Instance Matching. The table shows the performance of each strategy in terms of FLOPs, inference time, number of parameters, and accuracy metrics (F1 score at different IoU thresholds and Edit score). The results demonstrate that the Instance Matching strategy, particularly with a higher number of queries (100), achieves the best performance across all metrics.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_6_2.jpg", "caption": "Table 2: Performance of different global queries on 50Salads.", "description": "This table presents the performance comparison of different global query methods used in the BaFormer model on the 50Salads dataset.  It shows the effectiveness of using an average pooling method versus a class token method for generating a global query to improve boundary prediction and overall performance. The metrics evaluated are FLOPs, inference time, model parameters, F1-score@ {10, 25, 50}, edit score, and accuracy.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_7_1.jpg", "caption": "Table 3: Performance and efficiency of different voting strategies on 50Salads.", "description": "This table compares two voting strategies: frame-based voting (FV) and query-based voting (QV) on the 50Salads dataset.  It shows the inference time, F1 scores at different IoU thresholds (10, 25, 50), edit score, and accuracy for each method. The improvement achieved by query-based voting (QV) over frame-based voting (FV) is also presented, highlighting the efficiency gains and accuracy improvements provided by the query-based approach.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_7_2.jpg", "caption": "Table 5: Performance with predicted or ground-truth boundaries on 50Salads.", "description": "This table presents a comparison of the model's performance using predicted boundaries versus ground truth boundaries on the 50Salads dataset.  The performance metrics shown are F1 scores at different Intersection over Union (IoU) thresholds (10%, 25%, 50%), Edit score, and overall Accuracy.  The difference between using predicted and ground truth boundaries is also calculated, highlighting the impact of accurate boundary detection on the model's performance. ", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_7_3.jpg", "caption": "Table 4: Different strategies on boundary generation on 50Salads.", "description": "This table compares the performance of different boundary generation strategies on the 50Salads dataset.  The strategies compared are Non-Maximum Suppression (NMS), peak choice, and using the ground truth boundaries.  The metrics used to evaluate performance are F1 scores at different Intersection over Union (IoU) thresholds (10%, 25%, 50%), edit score, and accuracy. The results show that using ground truth boundaries yields the best performance, but peak choice and NMS achieve comparable results, with peak choice slightly better than NMS.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_8_1.jpg", "caption": "Table 6: Performance on GTEA, 50Salads, and Breakfast datasets. In terms of running time, BaFormer outperforms all methods except MSTCN. As for accuracy, BaFormer achieves comparable or better results. UVAST\u2020, UVAST, and UVAST\u2021 represent UVAST with alignment decoder, Viterbi, and FIFA. All FLOPs and running time are evaluated on 50Salads using the official codes in a consistent environment. We omit the running time and FLOPs on GTEA and Breakfast for simplicity as they are proportional to video length.", "description": "This table presents a comprehensive comparison of BaFormer's performance against state-of-the-art methods on three benchmark datasets: GTEA, 50Salads, and Breakfast.  It compares various metrics including running time (in seconds), FLOPs (in billions), number of parameters (in millions), and performance metrics (F1 scores at different IoU thresholds and edit scores) for each dataset.  The table highlights BaFormer's efficiency and competitive accuracy compared to other methods.", "section": "4.3 Comparisons with the State of the Arts"}, {"figure_path": "jij4vOVU7i/tables/tables_8_2.jpg", "caption": "Table 7: Performance of methods with similar running time, employing the CNN or Transformer based frame decoder on the 50Salads dataset. To achieve comparable running time, DiffAct (1 step) is adapted with an encoder and a single-step decoder, and ASFormer with an encoder only is included.", "description": "This table compares the performance of different methods with similar running times on the 50Salads dataset.  It contrasts methods using CNN-based and Transformer-based frame decoders. To ensure fair comparison of running times, DiffAct uses only a single decoder step and ASFormer uses only its encoder. The table highlights the trade-offs between computational cost and accuracy for different architectural choices.", "section": "4.3 Comparisons with the State of the Arts"}, {"figure_path": "jij4vOVU7i/tables/tables_13_1.jpg", "caption": "Table 1: Comparative analysis of matching strategies on 50Salads. (#Q: number of queries.)", "description": "This table compares three different matching strategies used in the BaFormer model for temporal action segmentation: Ordered Class Matching, Transcript Matching, and Instance Matching.  For each strategy, it shows the number of queries used, the FLOPs (floating point operations), inference time, number of model parameters, and the evaluation metrics (F1 scores at different IoU thresholds (10%, 25%, 50%), Edit Score, and Accuracy). The results demonstrate the effectiveness of Instance Matching compared to the other two strategies.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_15_1.jpg", "caption": "Table 8: Results of different numbers of Transformer decoder layers on 50Salads.", "description": "This table presents the ablation study on the number of transformer decoder layers used in the BaFormer model.  It shows the FLOPs (floating point operations), running time, number of parameters, and the performance metrics (F1 score @{10, 25, 50}, Edit score, and Accuracy) for different numbers of layers (3, 5, 8, and 10) on the 50Salads dataset. The results indicate an optimal number of layers for balancing performance and computational cost.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_15_2.jpg", "caption": "Table 9: Influence of query quantity on 50Salads.", "description": "This table presents the results of an ablation study on the 50Salads dataset, investigating the impact of varying the number of queries on model performance.  It shows that increasing the number of queries from 50 to 100 improves the model's performance across all metrics (F1@ {10,25,50}, Edit score, and Accuracy), but further increasing the number of queries beyond 100 leads to diminishing returns, suggesting that there is an optimal range where the model's performance is maximized. The table includes FLOPs, running time, and the number of parameters for different query counts.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_16_1.jpg", "caption": "Table 10: Comparative analysis of the effect of feature connections, i.e., single or multiple, on 50Salads and the use of auxiliary loss.", "description": "This table presents a comparative analysis of different feature connection strategies (single vs. multiple) and the impact of using auxiliary losses during training on the 50Salads dataset. It shows the performance metrics (F1 score @ {10, 25, 50}, Edit score, and Accuracy) for different combinations of feature connections and auxiliary loss usage, allowing for assessment of their relative impact on the model's performance. The results suggest that incorporating multiple features and incorporating auxiliary loss boosts accuracy and F1 scores.", "section": "4.2 Ablation Studies and Analysis"}, {"figure_path": "jij4vOVU7i/tables/tables_17_1.jpg", "caption": "Table 11: Comparative overview of multi-stage/step methods versus BaFormer on 50Salads. Here, \"MSTCNn\" and \"ASFormern\" denotes a model with n processing stages, while \"DiffActn\" signifies a model with \"n\" decoder steps.", "description": "This table compares the performance of several multi-stage and single-stage methods for temporal action segmentation on the 50Salads dataset.  It shows the number of stages/steps used in each method, the FLOPs (floating-point operations), running time, number of parameters, and the performance metrics (F1 score at different IoU thresholds, edit score, and accuracy).  The table highlights BaFormer's efficiency and competitive performance compared to other state-of-the-art methods.", "section": "4.3 Comparisons with the State of the Arts"}, {"figure_path": "jij4vOVU7i/tables/tables_17_2.jpg", "caption": "Table 12: Accuracy for action segments of different lengths, comparing frame-based and query-based methods on the 50Salads dataset.", "description": "This table shows the accuracy of frame-based and query-based voting methods on different lengths of action segments from the 50Salads dataset.  It compares the performance of the two methods across three segment length categories (0-1000 frames, 1001-2000 frames, and 2001-3100 frames). The results indicate that while frame-based methods perform slightly better on shorter segments, query-based methods demonstrate higher accuracy on longer segments. This highlights the difference in how each method processes the information.", "section": "F.2 Performance on segments with different lengths"}]