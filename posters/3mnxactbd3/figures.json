[{"figure_path": "3MnXAcTBD3/figures/figures_4_1.jpg", "caption": "Figure 1: Two spanning trees with 10 nodes when B = 2. On the left is GR, and the right one is GC.", "description": "This figure shows two spanning trees used in the B-ary Tree Push-Pull (BTPP) algorithm.  Each tree has 10 nodes and a branching factor (B) of 2.  The tree on the left (GR) represents the communication graph for distributing model parameters, where information flows from parent nodes to child nodes. The tree on the right (GC) is the inverse of the left tree, used for distributing stochastic gradients, with information flowing from child nodes to parent nodes.  The root node (1) has a self-loop in GC.  These trees form the basis of the BTPP algorithm's communication structure.", "section": "2 B-ary Tree Push-Pull Method"}, {"figure_path": "3MnXAcTBD3/figures/figures_9_1.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left plot compares the performance of BTPP with other algorithms for logistic regression with non-convex regularization.  The right plot shows how the performance of BTPP changes with different branch sizes (B).", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_9_2.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left panel compares the performance of BTPP against other algorithms for logistic regression with non-convex regularization.  The right panel shows how the performance of BTPP changes with different branch sizes (B).  Both plots use the gradient norm as a metric to assess convergence speed.", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_31_1.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left plot compares the performance of various algorithms for solving logistic regression with non-convex regularization.  The y-axis represents gradient norm, and the x-axis represents the number of iterations.  BTPP (in red) shows faster convergence than others with \u0398(1) degree and closely approximates centralized SGD. The right plot illustrates how BTPP's performance changes with different branch sizes (B).  Increasing B improves convergence speed but increases communication cost per iteration.", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_31_2.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "This figure compares the performance of various decentralized optimization algorithms on a logistic regression task with non-convex regularization.  The left panel shows the gradient norm over iterations for BTPP (with B=2) and other algorithms, highlighting BTPP's faster convergence. The right panel demonstrates how BTPP's performance improves with increasing branch size B, approaching that of centralized SGD.  Different graph topologies are considered for each algorithm to ensure fair comparison.", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_32_1.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left plot compares various algorithms on a logistic regression task with non-convex regularization.  BTPP (with B=2) is shown to converge faster than other algorithms that have a communication overhead of \u0398(1) per iteration, achieving performance comparable to centralized SGD. The right plot shows how varying the branch size B in BTPP affects its convergence rate. Increasing B leads to faster convergence, but at the cost of increased communication per iteration.", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_32_2.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left plot compares the performance of BTPP with other algorithms on a logistic regression task with nonconvex regularization.  The right plot shows how BTPP's performance changes when varying the branch size B.", "section": "4.1 Logistic Regression"}, {"figure_path": "3MnXAcTBD3/figures/figures_32_3.jpg", "caption": "Figure 2: Left: performance of algorithms for logistic regression with nonconvex regularization, where the dotted lines correspond to algorithms whose degrees are not \u0398(1). We let the branch size B = 2 in BTPP, \u03b7 = 0.5 in OD-EquiDyn, k = 2 in Base-(k + 1), and perform RelaySGD on a binary tree graph for fairness. Right: performance of BTPP with different branch size B.", "description": "The left plot compares the performance of various algorithms on a logistic regression task with nonconvex regularization.  The algorithms with a degree of \u0398(1) (meaning each node communicates with at most one other node) show improved performance compared to those with higher degree.  BTPP is highlighted for its performance. The right plot shows how the performance of BTPP changes with differing branch sizes (B). Increasing B improves performance, although also increasing computational cost per iteration.", "section": "4.1 Logistic Regression"}]