[{"type": "text", "text": "Fast and Memory-Efficient Video Diffusion Using Streamlined Inference ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zheng Zhan1\u2217 Yushu $\\mathbf{W}\\mathbf{u}^{1*}$ Yifan Gong1 Zichong Meng1 Zhenglun Kong12 Changdi Yang1 Geng Yuan3 Pu Zhao1\u2020 Wei Niu3 Yanzhi Wang1 1Northeastern University 2Harvard University 3University of Georgia ", "page_idx": 0}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/b9155b26a546bc4ff6a8e8c2b9089b693a0872412fe88efe10c16192987e8744.jpg", "img_caption": ["Figure 1: Our Streamlined Inference is a training-free inference framework for video diffusion models that can reduce the computation and peak memory cost without sacrificing the quality. "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The rapid progress in artificial intelligence-generated content (AIGC), especially with diffusion models, has significantly advanced development of high-quality video generation. However, current video diffusion models exhibit demanding computational requirements and high peak memory usage, especially for generating longer and higher-resolution videos. These limitations greatly hinder the practical application of video diffusion models on standard hardware platforms. To tackle this issue, we present a novel, training-free framework named Streamlined Inference, which leverages the temporal and spatial properties of video diffusion models. Our approach integrates three core components: Feature Slicer, Operator Grouping, and Step Rehash. Specifically, Feature Slicer effectively partitions input features into sub-features and Operator Grouping processes each sub-feature with a group of consecutive operators, resulting in significant memory reduction without sacrificing the quality or speed. Step Rehash further exploits the similarity between adjacent steps in diffusion, and accelerates inference through skipping unnecessary steps. Extensive experiments demonstrate that our approach significantly reduces peak memory and computational overhead, making it feasible to generate high-quality videos on a single consumer GPU (e.g., reducing peak memory of AnimateDiff from 42GB to 11GB, featuring faster inference on $\\bar{2}080\\,\\mathrm{Ti})^{1}$ . ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Recent years have witnessed continual progress and advancements in artificial intelligence-generated content (AIGC). Among them, diffusion models allow artists and amateurs to create visual content with text prompts, advancing the development of image and video generation in both academia and industry. For video diffusion models, the latest works such as SVD-XT [3], Gen2 [29], Pika [20], and notably the more advanced Sora [28], demonstrate impressive capabilities in producing visually striking and artistically effective videos. Despite their great performance, video diffusion models also exhibit high computational requirements and substantial peak memory, particularly when generating longer videos with higher resolutions. For instance, SVD-XT generates 25 frames simultaneously with a resolution of $576\\times1024$ , while Sora expands these capabilities by supporting the generation of longer videos (over a minute) at a higher resolution of $1080\\times1920$ . Given the trends of generating longer videos with higher quality, the escalating memory and computation demands have impeded practical applications of these large-scale video diffusion models on various platforms. ", "page_idx": 0}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/8388503bf2691147bfb7a92408b34ab6c2876320b417e3271b7632679f5c6bc0.jpg", "img_caption": ["Figure 2: Comparison on Animatediff and SVD inference using our Streamlined Inference. Memory requirement is crucial as \u201cOut of Memory\u201d errors prevent the GPU from performing inference. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Existing model compression methods to reduce peak memory and latency, such as weight pruning [38, 12, 35, 6, 48, 23, 42, 44, 47], quantization [37, 22, 32], and distillation [18, 10, 43, 39], typically require substantial retraining or fine-tuning of the compressed model to recover performance. This process is costly, time-consuming, and may raise data privacy concerns. Applying these methods in zero-shot avoids the expensive retraining, but leads to severe performance degradation. Furthermore, the variety and complexity of video diffusion architectures further complicate the model optimization. Therefore, it is challenging yet crucial to develop an effective and efficient video diffusion framework with reduced computations, smaller peak memory and less data (no re-training) requirements for its wide applications. ", "page_idx": 1}, {"type": "text", "text": "To address the above challenges, we first identify the sources of the high computation and memory cost, which scale up with the iterative denoising process and the simultaneous processing of multiple frames. We further observe that the feature maps of certain layers may exhibit high similarity between multiple consecutive denoising steps due to the temporal property of videos, enabling further optimizations for acceleration. Based on that, we propose a training-free framework named Streamlined Inference, by leveraging the temporal and spatial characteristics of video diffusion models to effectively reduce peak memory and computational demands. Our framework contains three core components: Feature Slicer, Operator Grouping, and Step Rehash, which work together closely and comprehensively with different focuses on peak memory reduction or inference acceleration. ", "page_idx": 1}, {"type": "text", "text": "Our Feature Slicer performs lossless feature slicing in both temporal and spatial layers, raising the possibility of peak memory reduction through processing smaller features. However, the feature slicer alone is not able to decrease peak memory as we still need to store all intermediate results of one layer for all sliced features to form a complete intermediate feature map for the next layer. To reduce peak memory practically, we further propose Operator Grouping to group homogeneous and consecutive operators in the computational graph. Within each operator group, the intermediate result of one sliced feature can be directly sent to the next operator/layer without waiting for aggregation with all other intermediate results, achieving the full potential of Feature Slicer to reduce the peak memory. Furthermore, a pipeline technique is proposed to accelerate the computations of the same operator group for multiple sliced feature inputs, with improved parallelism. ", "page_idx": 1}, {"type": "text", "text": "Moreover, observing the high similarity of certain features between multiple consecutive denoising steps, we propose Step Rehash to reuse the generated features for a few following steps due to their high similarity, skipping the exact expansive and repetitive generation of similar features and thereby accelerating the video diffusion significantly. With this framework, we can generate high-quality videos in a fast and memory-efficient manner on a single consumer GPU, as shown in Fig. 2. For example, the peak memory of AnimateDiff [11] can be reduced significantly from 41.7GB to 11GB, featuring inference on a typical consumer GPU 2080Ti. We summarize our contributions as follows: ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "\u2022 We propose a novel training-free framework that can significantly reduce the peak memory and computation cost for the inference of video diffusion models by leveraging the spatial and temporal characteristics of video diffusion models. \u2022 Our approach can be seamlessly integrated into existing video diffusion models. Our extensive experiments on SVD, SVD-XT, and AnimateDiff demonstrate our effectiveness to reduce peak memory and accelerate inference without sacrificing quality. \u2022 Our approach offers a new research perspective for fast and memory-efficient video diffusion, enabling the generation of higher quality and longer videos on consumer-grade GPUs. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Video Diffuison Models. For video generation, various approaches have been proposed, with VDM [17] as a leading example. VDM transforms the conventional U-Net [30] architecture of image diffusion models into a 3D U-Net structure, employing joint training on both images and videos. MagicVideo [49] is the first work that introduces Latent Diffusion Model (LDM) for text-to-video (T2V) generation in latent space. LVDM [13] introduces a mask sampling technique that enhances its longer video generation capability. ModelScope [36] incorporates spatial-temporal convolution and attention into LDM. Video LDM [4] trains a T2V network composed of three training stages, enabling higher quality and longer video generation. Show-1 [45] first introduces the fusion of pixel-based and latent-based diffusion models for T2V generation. Recently, Stable Video Diffusion (SVD) [3] identifies three key stages for training video LDMs: text-to-image (T2I) pretraining, video pretraining, and high-quality video finetuning. ", "page_idx": 2}, {"type": "text", "text": "Architectural Efficiency of Video Diffusion Models. There are various research efforts exploring either architectural efficiency or model compression techniques for image/video generation. For example, ED-T2V [24] freezes parameters to reduce training costs and proposes a attention mechanism to ensure temporal coherence. SimDA [40] devises a parameter-efficient training approach by maintaining the parameter of the T2I model and uses two adapters to train it. For model compression, Diff-pruning [6] employs structural pruning techniques to reduce inference time at each sampling step. Additionally, the work [22] implements quantization on diffusion models using low-precision data types. However, these methods take substantial efforts to retrain or finetune the diffusion model to recover performance, which is costly, time-consuming, and may raise data privacy concerns. Furthermore, applying post-training compression techniques in one-shot [8, 7, 34] may save the retraining/fine-tuning efforts, but suffers from significant performance degradation. ", "page_idx": 2}, {"type": "text", "text": "Sample-Efficient Video Diffusion Models. To address the iterative denoising process in diffusion models and improve the sampling efficiency, two approaches are proposed. The first approach [2, 19, 5, 25] focuses on creating rapid solvers to resolve the differential equation associated with the denoising process more effectively. The works [31, 27, 21] utilize knowledge distillation methods to compress and simplify the sampling trajectory efficiently, thereby enhancing overall performance. Imagen video [15] is one of the first methods to apply progressive distillation on video diffusion models, incorporating guidance and stochastic samplers. Recent work Deepcache [26] proposes a novel training-free paradigm that accelerates diffusion models by reusing the high-level features. ", "page_idx": 2}, {"type": "text", "text": "3 Motivation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Peak memory and computation analysis. Existing open-source video diffusion models [11, 3, 36, 46] typically adopt a pretrained T2I 2D-UNet as backbone. Their temporal layers are seamlessly integrated into the backbone 2D-UNet, positioned after every spatial layer. Here, we use SVD as an example to demonstrate how peak memory and computational overhead scale with the number of frames. The SVD model is trained with two distinct configurations: regular SVD is designed to generate 14 frames, while SVD-XT is tailored to produce 25 frames. To generate 14 or 25 video frames concurrently with SVD, its latent features require massive GPU memory and computation consumption, estimated to be approximately $14\\times$ or $25\\times$ higher than its base T2I model. This estimate does not even account for the additional memory required by SVD\u2019s extra-temporal layers. More specifically, the SVD consumes 39.49G of peak memory for $576\\times1024$ resolution output, whereas its image generation counterpart only requires 6.33G of memory at the same resolution. Furthermore, incorporating the classifier-free guidance [16] substantially enhances the generation quality but doubles the peak memory required during inference. ", "page_idx": 2}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/5c12a98e5f4c4cf5e93911034d51eee98a23707d7a76f92d908717650be04c98.jpg", "img_caption": ["Figure 3: The quality results of our method and na\u00efve slicing. Note that na\u00efve slicing will incur unpleasant artifacts due to lack of temporal correction by fewer frames. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Consequently, video diffusion is computationally demanding, but the challenge of memory consumption is more critical and demands immediate attention. Most consumer-grade GPUs do not have enough memory for video diffusion models and, therefore, suffer from the \u201cOut of Memory\u201d error, which prevents the GPU from generating high-quality videos. There is no workaround without switching GPUs. Most users have to endure generating short and low-resolution videos. ", "page_idx": 3}, {"type": "text", "text": "Na\u00efve Slicing. A Na\u00efve approach to reduce peak memory is to execute the video diffusion inference clip-by-clip. However, this strategy is hindered by the temporal layers, which are essential for maintaining temporal correlation in video diffusion models. Forcibly implementing this approach can generate random artifacts and cause motion vanishing in the output video, as detailed in Fig. 3. Therefore, designing a memory-efficient inference framework is a challenging and non-trivial task. ", "page_idx": 3}, {"type": "text", "text": "4 Streamlined Inference Framework ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To address the above massive peak memory and computation costs, in this section, we propose a training-free framework named Streamlined Inference, which is composed of three core components: Feature Slicer, Operator Grouping, and Step Rehash. First, we discuss Feature Slicer, designed to partition input features of spatial and temporal layers, and enable the potential of massive peak memory reduction. Next, we introduce our Operator Grouping technique to aggregate homogeneous and consecutive operators into the same group, achieving the full potential of Feature Slicer to reduce peak memory through reusing the memory of intermediate result from previous sliced feature. Finally, we discuss our Step Rehash method to reuse the same feature for a few consecutive steps due to their high similarity. It accelerates the inference without increasing peak memory overhead as it skips certain denoising steps with less computations. ", "page_idx": 3}, {"type": "text", "text": "4.1 Feature Slicer ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Video diffusion models contain spatial and temporal layers which extract the corresponding information from their specific domains. On this basis, we propose a feature slicer that consists of two components: Spatial-layer slicer and Temporal-layer slicer, to divide the feature map into multiple batches/sub-features, ensuring accurate computation without introducing additional operations. The slicer is further utilized for Operator Grouping to reduce peak memory cost. ", "page_idx": 3}, {"type": "text", "text": "Spatial layers slicer. Based on our profliing (more details can be found in Appendix A) for memory allocation of various video diffusion models, we find that performing slices at spatial layers can greatly reduce the memory footprint. The 5-D feature in the spatial layer $X\\,\\in\\,{\\overset{\\mathbf{\\lambda}}{\\mathbb{R}}}^{B\\times T\\times{\\check{C}}\\times H\\times W}$ can be reshaped to a 4-D feature $X\\in\\mathbb{R}^{(B\\times T)\\times C\\times H\\times W}$ , where $B,T,C,H,W$ are the batch size, number of frames, channels, height, and width, respectively. Thus, we slice it into $k$ sub-features, $\\left\\{X_{i}\\in\\mathbb{R}^{n_{i}\\times C\\times H\\times W}\\right\\}_{i=1}^{k}$ , where $n_{i}=\\lceil B\\times T/k\\rceil$ with $\\lceil\\cdot\\rceil$ denoting the least integer greater than or equal to the input. If $\\lceil\\bar{B}\\times T/k\\rceil\\neq B\\times T/k$ , the dimension of the last sub-feature $n_{k}$ is different from others. The spatial layer slicer is applicable for most operations in spatial layers such as Conv2D, GroupNorm, LayerNorm, Attention, and Linear. ", "page_idx": 3}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/0bf100763d5935d803ac1915a0b06e678d78e16033321218a9def02062a9905f.jpg", "img_caption": ["Figure 4: Overview of Operator Grouping with Pipeline in our framework. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "Temporal layers slicer. The input of the temporal layer is a 5-D feature map with dimensions {batch, channels, frames, height, width}. 3-D operations such as Conv3D are employed to extract temporal information from the 5-D feature. Differing from spatial layers, slicing along the temporal dimension may disrupt the extraction and processing of temporal information. Therefore, we keep the temporal dimension untouched while slicing over other dimensions. Specifically, the 5-D feature $X\\in\\mathbb{R}^{B\\times T\\times C\\times H\\times W}$ can be sliced to $k_{h}\\times k_{w}$ sub-features $\\left\\{X_{i j}\\in\\mathbb{R}^{\\bar{B}\\times T\\times C\\times\\bar{h_{i}}\\times w_{j}}\\right\\}_{i=1,j=1}^{i=k_{h},j=k_{w}}$ , where $h_{i}=\\lceil H/k_{h}\\rceil$ and $w_{j}=\\lceil W/k_{w}\\rceil$ . After detailed profliing different configurations for temporal layer slicer, we discover that the configuration with $k_{h}=\\operatorname*{max}{(H,16)}$ and $k_{w}=\\operatorname*{max}\\left(W,16\\right)$ can result in promising peak memory reduction. ", "page_idx": 4}, {"type": "text", "text": "4.2 Operator Grouping ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Although Feature Slicer converts the original feature map into multiple smaller sub-features with reduced memory footprint, the peak memory can not be reduced since the intermediate results of multiple sliced features require re-consolidation to send to the next layer/operator as inputs. It still needs to store all intermediate outputs of sliced features to form the united/unsliced intermediate feature map without actual peak memory reduction. Therefore, to address this problem, we propose Operator Grouping to group the operators accordingly in the computational graph, achieving the full potential of Feature Slicer with effective peak memory reduction due to less memory reserved for intermediate results. Furthermore, a pipeline technique is proposed to optimize the inference of operator groups with improved parallelism and practical acceleration. ", "page_idx": 4}, {"type": "text", "text": "4.2.1 Grouping Operators for Peak Memory Reduction ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Operator Grouping directly re-uses existing operators by aggregating consecutive homogeneous operators into the same group. Homogeneous operators indicate these operators extract features from coherent domains and dimensions. In video diffusion models, different operators can be grouped into GroupOPt (temporal operator groups) and GroupOPs (spatial operators groups) to ensure the well-preserved semantics of sliced sub-features within each group. For example, in the SVD Model [3], consecutive GroupNorm, Conv2D, SiLU, and Up/DownSample operators in the Spatial ResBlock can be aggregated to one group, as these operators all extract features from spatial domain and are deemed homogeneous. As shown in Fig. 4, when computing the output feature $X^{o}$ for an operator group (GroupOP), the input feature $X$ is sliced into multiple sub-features $X_{1},X_{2},\\ldots,X_{k}$ with Feature Slicer. Each sub-feature $X_{i}$ goes through the operator group and their outputs are concatenated after all outputs are available, as shown in Eq. (1), ", "page_idx": 4}, {"type": "equation", "text": "$$\nX^{o}=\\operatorname{Concat}\\left(\\operatorname{GroupOP}(X_{1}),\\operatorname{GroupOP}(X_{2}),\\ldots,\\operatorname{GroupOP}(X_{k})\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $k$ is the number of slices, and Concat is the concatenation operation. ", "page_idx": 4}, {"type": "text", "text": "Reducing peak memory cost. As shown in Fig. 4, the peak memory with the operator group is determined by the memory footprint of the input feature, the output feature, and the intermediate results. Without operator grouping, all intermediate results of all operators for sliced sub-features will allocate their own memory, hence failing to reduce memory consumption. Compared with the case above, grouped operators only need to allocate memory for intermediate results of a single sliced sub-feature and the final outputs, without the necessity to allocate full intermediate features corresponding to the original unsliced input feature, as shown in Fig. 4 (a) and (b). Operator Grouping can effectively reduce peak memory cost, enabling successful inference of video diffusion models on one single consumer or commercial GPU with low or moderate available memory, as shown in Tab. 1. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Mitigating I/O intensity. As the original feature map is sliced into multiple sub-features to reduce peak memory cost, the computation may slow down due to multiple iterations corresponding to multiple inputs. However, we surprisingly observe that even with the naive basic for-loop implementation for each sub-feature as shown in Fig. 4 (b), the overall runtime with Operator Grouping is around $10\\%$ slower than that of the original unsliced version. The marginal increase in runtime can be attributed to the memory bound of the GPU for video diffusion inference. Specifically, current video diffusion model inference suffers from the memory bound, where the I/O overhead of intermediate results is more notorious than their computation workload. The slicer provides a solution to mitigate the I/O burden, thus balancing the computation and memory read/write to fully utilize the GPU capacity. ", "page_idx": 5}, {"type": "text", "text": "4.2.2 Pipelining with Improved Parallelism and Practical Acceleration. ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "With the proposed Feature Slicer and Operator Grouping, the peak memory will decrease significantly with a marginal increase for the computation runtime (based on the basic for-loop implementation). With a deeper investigation for the computation patterns, we find that the for-loop implementation cannot maximize GPU parallelism, and further employ the pipelining technique to optimize the for-loop implementation for faster inference without additional memory cost. ", "page_idx": 5}, {"type": "text", "text": "With Operator Grouping, there are multiple operators in one group to process one sliced subfeature sequentially. With the naive for-loop implementation, before feeding each sliced sub-feature into another operator group, it needs to wait until the last sub-feature finishes its computation within the group. The parallelism can be further improved with the proposed pipeline method. Specifically, in an operator group, after a sliced feature map is computed by the out-of-place computation operator (e.g., Conv, GroupNorm, Attention, etc.) and sent to the next operator, its previous allocated memory is no longer required, but it is still reserved during inference, leading to resource waste. We can pipeline all operators in the same group to mitigate this issue. As shown in Fig. 4(c), once the Conv operator completes processing a sliced feature $X_{i}$ as described in Eq. (1) and its outputs are sent to the next operator Norm, the subsequent sliced feature $X_{i+1}$ is immediately piped into the same Conv operator, reusing the reserved memory of $X_{i}$ . In this way, multiple operators are executed simultaneously with improved parallelism. No additional memory is required, as we only make use of previously reserved memory. ", "page_idx": 5}, {"type": "text", "text": "Acceleration performance. With the naive for-loop implementation, only one operator in an operator group is executed at a time. However, our pipeline method can simultaneously execute multiple operators (such as Conv, Norm, and Activation as depicted in Fig. 4 (c)) without incurring additional memory. Consequently, the inference speed can be further improved. Accordingly, integrating the pipeline within Operator Grouping can mitigate $10\\%$ speed degradation caused by feature slicing. ", "page_idx": 5}, {"type": "text", "text": "4.3 Step Rehash ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we further introduce our step rehash method to optimize the iterative denoising steps for effective acceleration in video diffusion generation. Capitalized on the high similarity between adjacent steps, our approach accelerates the video generation, while ensuring both high quality and temporal consistency across video frames, without extra memory cost. Next we first discuss our observations for the high feature similarity and then explain details of our step rehash. ", "page_idx": 5}, {"type": "text", "text": "4.3.1 Similarity of Temporal Features between Steps ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Similarity visualization. The denoising process of U-Net in diffusion models requires multiple steps and the features of different steps may share certain similarities with minor differences [26]. To explore this, we analyze the feature maps averaged over multiple images at different parts of the model and plot the similarity between features of different steps, with an example shown in Fig. 5 (and more results and details demonstrated in Appendix C). We find two key insights below: ", "page_idx": 5}, {"type": "text", "text": "\u2022 The similarity between adjacent steps significantly depends on certain blocks and layers, and it may change sharply after specific operations in video diffusion. The features do not always show high similarity. For example, neither deeper layers within the same block nor those in middle blocks consistently show higher similarity between adjacent steps. \u2022 The features between adjacent steps following the temporal layers and spatial layers in video diffusion usually exhibit remarkably higher similarity compared to outputs of other layers. ", "page_idx": 6}, {"type": "text", "text": "High similarity after temporal layers. Existing video diffusion models typically employ pretrained image diffusion models as their backbone. While these image models are trained to produce a variety of images, the addition of temporal layers is designed to improve the temporal continuity of latent features. This enhancement significantly strengthens their correlation, thereby increasing similarity among the features. ", "page_idx": 6}, {"type": "text", "text": "Motivation and challenges for step rehash. ", "text_level": 1, "page_idx": 6}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/3c9af40e49ba864c3f4d2f698634e93e726347c1457e40fe0a150759ed5dbc01.jpg", "img_caption": ["Figure 5: The high similarity of output features after temporal layers in $U_{3}$ between each timestep. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Due to the high similarity between features of different steps, we propose the step rehash method to skip the computation of certain features by reusing previous generated features. However, we need to address the challenges of when and where to skip. Specifically, based on the above insights, simply reusing features from deeper layers does not guarantee better results since deeper layers may not show high similarity. We need to carefully choose what layers or blocks can be skipped (where to skip) to make use of high similarities without significantly downgrading the generation performance. As shown in fig. 5, it exhibits high similarity between adjacent time steps, but the similarity pattern differs between video diffusion models. Thus, we need to determine which steps can use skip strategy (when to skip), and the remaining steps that require full computation are full computation steps. ", "page_idx": 6}, {"type": "text", "text": "4.3.2 Step Rehash ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Here we specify the details of our step rehash. The video diffusion models typically use a U-Net architecture with 4 down-sampling and 4 up-sampling blocks, and their output features can be represented by $D_{0\\sim3}^{s}$ and $U_{0\\sim3}^{s}$ , respectively, with $s$ denoting the current step number as shown in Fig. 6. Typically, $U_{b}^{s}$ is obtained by feeding $D_{b}^{s}$ and $U_{b-1}^{s}$ into the $b^{t h}$ $[b>0]$ ) up-sampling block, and $U_{3}^{s}$ is the final output of the $s^{t h}$ step. Based on similarity analysis, in the next step $s+1$ , we can directly reuse the output features of the temporal layer from the previous step s without actual exact computations. Our insights into the similarity indicate that deeper and middle blocks do not consistently demonstrate high similarity. Reusing their features results in significant degradation of generation quality. Therefore, we rehash features of the temporal layer in the final up-sampling block. Specifically, to obtain $U_{3}^{s+1}$ for step $s+1$ , we feed the output features of the temporal layer from $U_{3}^{s}$ (current full computnaeteiod nt os tceopm) ipnuttoe $D_{3}^{s+1}$ nfaol ru cpo-snacamteplniantigo bn,l oscinkc. e Nooutre  rtehuaste dw tee omnploy rcalo lmaypeurt ei s pdaerte poef $U_{3}^{s+1}$ tahne dc odno cnaott operator for features from $D_{3}^{s+1}$ , as shown in Fig. 6. We further propose a step search algorithm to solve the when to skip problem, algorithm details can be found in Appendix B. ", "page_idx": 6}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/864c04b022ec1f50298ac369bf96a43eecc5aca943bfea84cc4ded65eb42153a.jpg", "img_caption": ["Figure 6: Illustration of Step Rehash. Computation in grey areas are skipped. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "5 Experimental results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "5.1 Models, Datasets and Evaluation Metrics ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We conduct the experiments on representative video diffusion models, including SVD [3], SVD-XT [3], and AnimateDiff [11]. For evaluation, we use the following evaluation protocols: The first frame of the video clips are extracted as the image condition for image-to-video generation and their captions are considered as the prompts. All experiments are conducted on a NVIDIA A100 GPU. ", "page_idx": 6}, {"type": "table", "img_path": "iNvXYQrkpi/tmp/b04998576020c1f077277bba80628b883fc517895bf92aca4442e561aa167ff8.jpg", "table_caption": ["Table 1: Comparison of our Streamlined Inference with baseline methods in video visual quality (on UCF101), PM (Peak Memory), and latency (measured with 50 runs with the average value). "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Zero-shot UCF-101 [33]: We sample clips from each categories of UCF-101 dataset, and gather a subset with 1,000 video clips for evaluation. Their action categories are considered as their captions. For SVD and SVD-XT, our samples are generated at a resolution of $576\\times1024$ (14 frames for SVD and 25 frames for SVD-XT) and then resize to $240\\times320$ . For AnimateDiff, we generate samples with resolution $512\\times512$ (16 frames). ", "page_idx": 7}, {"type": "text", "text": "Zero-shot MSR-VTT [41]: We generated a video sample for each of the 9,940 development prompts. The samples are at resolution $320\\times576$ then resized to $240\\times426$ for all models with different number of generated frames. ", "page_idx": 7}, {"type": "text", "text": "Metrics: We compute the FVD as outlined in [9] and CLIP-Score [14] using TorchMetrics [1] to measure the performance of generated samples. ", "page_idx": 7}, {"type": "text", "text": "Baseline: We use pretained weight for SVD (I2V) and AnimateDiff (T2V). We compare the proposed Streamlined Inference (use 13 full computation steps) with the original inference (use 25 full computation steps) and na\u00efve slicing inference as mentioned in Sec.3. More specifically, for image-conditioned SVD model, we set each na\u00efve slice with a frame size of 2 and use the last frames of each generated slice as the image condition for the next slice. For AnimateDiff, we evenly generate 4 slices with a frame size of 4, then combine them into a full video clip. ", "page_idx": 7}, {"type": "text", "text": "5.2 Quantitative Evaluation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "The results from Table 1 demonstrate the effectiveness of our proposed method in managing memory, computational resources, and performance. Our method significantly reduced peak memory and latency while maintaining competitive FVD and CLIP-Score values across all three models and resolutions compared to the original method. For SVD, our method achieved a notable reduction in peak memory and latency while maintaining competitive FVD and CLIP-Score, unlike Na\u00efve Slicing, which increased FVD and latency. For SVD-XT, our method improved over Na\u00efve Slicing and balanced resource usage and performance. For AnimateDiff, our method significantly outperformed Na\u00efve Slicing in FVD and latency, achieving nearly the same performance as the original method but with smaller latency and around a $70\\%$ reduction in peak memory. ", "page_idx": 7}, {"type": "text", "text": "5.3 Ablation Study ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Our ablation study in Table 2 demonstrates that our Step Rehash method consistently outperforms DeepCache with the same number of full computation steps. Step Rehash skips more computations than DeepCache. For the SVD model, our method maintains competitive CLIP-Scores while slightly increasing FVD compared to the original method (FVD of 307.7 and CLIP-Score of 29.25 on UCF101). DeepCache performs poorly, increasing FVD and reducing video quality. For the AnimateDiff model, our method maintains stable FVD (603.9 vs. 607.13) and CLIP-Score (29.29 vs. 29.40) on MSR-VTT compared to the original method. DeepCache shows the worst performance on UCF101, with higher FVD and lower CLIP-Scores. Visual comparisons of our method with DeepCache are provided in Appendix D. ", "page_idx": 7}, {"type": "table", "img_path": "iNvXYQrkpi/tmp/fdf4c143dd3a7ad3ab40e2d1778f785f2ad465e31562b2f025169f5677348f70.jpg", "table_caption": ["Table 2: Ablation study of our proposed method compared with DeepCache in video visual quality. Both our Step Rehash and DeepCache involve 13 full computation steps. "], "table_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/f7c500f0eca7fb1ba8e84f6f1ad0d1fcc8b982d972ecac993356479b382a0a4a.jpg", "img_caption": ["Figure 7: Quality evaluation of using our method on baseline models. The results show that our method can be generally applied to various video diffusion models and achieve competitive results. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.4 Quality results ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In Fig. 7 and Appendix E, we present qualitative results comparing our method to the original model without using Streamlined Inference.We can see that our method produces vivid and high-quality samples aligned with the text descriptions. More importantly, these results demonstrate that our method can significantly reduce peak memory and computation without sacrificing quality. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion and Limitation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we propose a novel training-free framework that significantly reduces peak memory and computation costs for video diffusion model inference by leveraging its spatial and temporal characteristics. Our approach can be seamlessly integrated into existing models. Extensive experiments on ", "page_idx": 8}, {"type": "text", "text": "SVD, SVD-XT, and AnimateDiff demonstrate our method\u2019s effectiveness in reducing peak memory and accelerating inference without sacrificing quality. Our approach offers a new perspective for fast, memory-efficient video diffusion, enabling the generation of higher quality and longer videos on consumer-grade GPUs. Though our method is general, the efficiency is limited by baseline model architecture design. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported by National Science Foundation CNS-2312158. We would like to express our sincere gratitude to the reviewers for their invaluable feedback and constructive comments to improve the paper. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Torchmetrics, https://lightning.ai/docs/torchmetrics/stable/multimodal/ clip_score.html,.   \n[2] Fan Bao, Chongxuan Li, Jun Zhu, and Bo Zhang. Analytic-dpm: an analytic estimate of the optimal reverse variance in diffusion probabilistic models. arXiv preprint arXiv:2201.06503, 2022.   \n[3] Andreas Blattmann, Tim Dockhorn, Sumith Kulal, Daniel Mendelevitch, Maciej Kilian, Dominik Lorenz, Yam Levi, Zion English, Vikram Voleti, Adam Letts, et al. Stable video diffusion: Scaling latent video diffusion models to large datasets. arXiv preprint arXiv:2311.15127, 2023.   \n[4] Andreas Blattmann, Robin Rombach, Huan Ling, Tim Dockhorn, Seung Wook Kim, Sanja Fidler, and Karsten Kreis. Align your latents: High-resolution video synthesis with latent diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22563\u201322575, 2023.   \n[5] Tim Dockhorn, Arash Vahdat, and Karsten Kreis. Genie: Higher-order denoising diffusion solvers. Advances in Neural Information Processing Systems, 35:30150\u201330166, 2022.   \n[6] Gongfan Fang, Xinyin Ma, and Xinchao Wang. Structural pruning for diffusion models. In Advances in Neural Information Processing Systems, 2023.   \n[7] Elias Frantar and Dan Alistarh. Sparsegpt: Massive language models can be accurately pruned in one-shot. In International Conference on Machine Learning, pages 10323\u201310337. PMLR, 2023.   \n[8] Elias Frantar, Saleh Ashkboos, Torsten Hoefler, and Dan Alistarh. Gptq: Accurate post-training compression for generative pretrained transformers. arXiv preprint arXiv:2210.17323, 1, 2022.   \n[9] Songwei Ge, Aniruddha Mahapatra, Gaurav Parmar, Jun-Yan Zhu, and Jia-Bin Huang. On the content bias in fr\u00e9chet video distance. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), 2024.   \n[10] Yifan Gong, Zheng Zhan, Qing Jin, Yanyu Li, Yerlan Idelbayev, Xian Liu, Andrey Zharkov, Kfir Aberman, Sergey Tulyakov, Yanzhi Wang, et al. $\\mathrm{E^{2}}$ gan: Efficient training of efficient gans for image-to-image translation. arXiv preprint arXiv:2401.06127, 2024.   \n[11] Yuwei Guo, Ceyuan Yang, Anyi Rao, Yaohui Wang, Yu Qiao, Dahua Lin, and Bo Dai. Animatediff: Animate your personalized text-to-image diffusion models without specific tuning. arXiv preprint arXiv:2307.04725, 2023.   \n[12] Yang He, Ping Liu, Ziwei Wang, Zhilan Hu, and Yi Yang. Filter pruning via geometric median for deep convolutional neural networks acceleration. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2019.   \n[13] Yingqing He, Tianyu Yang, Yong Zhang, Ying Shan, and Qifeng Chen. Latent video diffusion models for high-fidelity long video generation. arXiv preprint arXiv:2211.13221, 2022.   \n[14] Jack Hessel, Ari Holtzman, Maxwell Forbes, Ronan Le Bras, and Yejin Choi. Clipscore: A reference-free evaluation metric for image captioning. In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages 7514\u20137528, 2021.   \n[15] Jonathan Ho, William Chan, Chitwan Saharia, Jay Whang, Ruiqi Gao, Alexey Gritsenko, Diederik P Kingma, Ben Poole, Mohammad Norouzi, David J Fleet, et al. Imagen video: High definition video generation with diffusion models. arXiv preprint arXiv:2210.02303, 2022.   \n[16] Jonathan Ho and Tim Salimans. Classifier-free diffusion guidance. In NeurIPS 2021 Workshop on Deep Generative Models and Downstream Applications, 2021.   \n[17] Jonathan Ho, Tim Salimans, Alexey Gritsenko, William Chan, Mohammad Norouzi, and David J Fleet. Video diffusion models. Advances in Neural Information Processing Systems, 35:8633\u20138646, 2022.   \n[18] Minguk Kang, Richard Zhang, Connelly Barnes, Sylvain Paris, Suha Kwak, Jaesik Park, Eli Shechtman, Jun-Yan Zhu, and Taesung Park. Distilling diffusion models into conditional gans. arXiv preprint arXiv:2405.05967, 2024.   \n[19] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. Advances in Neural Information Processing Systems, 35:26565\u201326577, 2022.   \n[20] Pika Labs. Pika labs ai text to video generator, 2023.   \n[21] Muyang Li, Ji Lin, Chenlin Meng, Stefano Ermon, Song Han, and Jun-Yan Zhu. Efficient spatially sparse inference for conditional gans and diffusion models. arXiv preprint arXiv:2211.02048, 2022.   \n[22] Xiuyu Li, Yijiang Liu, Long Lian, Huanrui Yang, Zhen Dong, Daniel Kang, Shanghang Zhang, and Kurt Keutzer. Q-diffusion: Quantizing diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 17535\u201317545, 2023.   \n[23] Yanyu Li, Pu Zhao, Geng Yuan, Xue Lin, Yanzhi Wang, and Xin Chen. Pruning-as-search: Efficient neural architecture search via channel pruning and structural reparameterization. arXiv preprint arXiv:2206.01198, 2022.   \n[24] Jiawei Liu, Weining Wang, Wei Liu, Qian He, and Jing Liu. Ed-t2v: An efficient training framework for diffusion-based text-to-video generation. In 2023 International Joint Conference on Neural Networks (IJCNN), pages 1\u20138, 2023.   \n[25] Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. Dpm-solver: A fast ode solver for diffusion probabilistic model sampling in around 10 steps. Advances in Neural Information Processing Systems, 35:5775\u20135787, 2022.   \n[26] Xinyin Ma, Gongfan Fang, and Xinchao Wang. Deepcache: Accelerating diffusion models for free. In The IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2024.   \n[27] Chenlin Meng, Ruiqi Gao, Diederik P Kingma, Stefano Ermon, Jonathan Ho, and Tim Salimans. On distillation of guided diffusion models. arXiv preprint arXiv:2210.03142, 2022.   \n[28] OpenAI. Creating video from text, 2024.   \n[29] Runway Research. Gen-2: The next step forward for generative ai, 2023.   \n[30] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[31] Tim Salimans and Jonathan Ho. Progressive distillation for fast sampling of diffusion models. arXiv preprint arXiv:2202.00512, 2022.   \n[32] Xuan Shen, Zhenglun Kong, Changdi Yang, Zhaoyang Han, Lei Lu, Peiyan Dong, et al. Edgeqat: Entropy and distribution guided quantization-aware training for the acceleration of lightweight llms on the edge. arXiv preprint arXiv:2402.10787, 2024.   \n[33] Khurram Soomro, Amir Roshan Zamir, and Mubarak Shah. Ucf101: A dataset of 101 human actions classes from videos in the wild. arXiv preprint arXiv:1212.0402, 2012.   \n[34] Mingjie Sun, Zhuang Liu, Anna Bair, and J Zico Kolter. A simple and effective pruning approach for large language models. arXiv preprint arXiv:2306.11695, 2023.   \n[35] Haotao Wang, Shupeng Gui, Haichuan Yang, Ji Liu, and Zhangyang Wang. Gan slimming: All-in-one gan compression by a unified optimization framework. In Computer Vision\u2013ECCV 2020: 16th European Conference, Glasgow, UK, August 23\u201328, 2020, Proceedings, Part IV 16, pages 54\u201373. Springer, 2020.   \n[36] Jiuniu Wang, Hangjie Yuan, Dayou Chen, Yingya Zhang, Xiang Wang, and Shiwei Zhang. Modelscope text-to-video technical report. arXiv preprint arXiv:2308.06571, 2023.   \n[37] Peiqi Wang, Dongsheng Wang, Yu Ji, Xinfeng Xie, Haoxuan Song, XuXin Liu, Yongqiang Lyu, and Yuan Xie. Qgan: Quantized generative adversarial networks. arXiv preprint arXiv:1901.08263, 2019.   \n[38] Wei Wen, Chunpeng Wu, Yandan Wang, Yiran Chen, and Hai Li. Learning structured sparsity in deep neural networks. In Advances in neural information processing systems (NeurIPS), pages 2074\u20132082, 2016.   \n[39] Yushu Wu, Yifan Gong, Pu Zhao, Yanyu Li, Zheng Zhan, Wei Niu, Hao Tang, Minghai Qin, Bin Ren, and Yanzhi Wang. Compiler-aware neural architecture search for on-mobile real-time super-resolution. In European Conference on Computer Vision, pages 92\u2013111. Springer, 2022.   \n[40] Zhen Xing, Qi Dai, Han Hu, Zuxuan Wu, and Yu-Gang Jiang. Simda: Simple diffusion adapter for efficient video generation. arXiv preprint arXiv:2308.09710, 2023.   \n[41] Jun Xu, Tao Mei, Ting Yao, and Yong Rui. Msr-vtt: A large video description dataset for bridging video and language. In 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 5288\u20135296, 2016.   \n[42] Changdi Yang, Pu Zhao, Yanyu Li, Wei Niu, Jiexiong Guan, Hao Tang, Minghai Qin, Bin Ren, Xue Lin, and Yanzhi Wang. Pruning parameterization with bi-level optimization for efficient semantic segmentation on the edge. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15402\u201315412, 2023.   \n[43] Zheng Zhan, Yifan Gong, Pu Zhao, Geng Yuan, Wei Niu, Yushu Wu, Tianyun Zhang, Malith Jayaweera, David Kaeli, Bin Ren, et al. Achieving on-mobile real-time super-resolution with neural architecture and pruning search. In Proceedings of the IEEE/CVF international conference on computer vision, pages 4821\u20134831, 2021.   \n[44] Zheng Zhan, Zhenglun Kong, Yifan Gong, Yushu Wu, Zichong Meng, Hangyu Zheng, Xuan Shen, Stratis Ioannidis, Wei Niu, Pu Zhao, and Yanzhi Wang. Exploring token pruning in vision state space models. arXiv preprint arXiv:2409.18962, 2024.   \n[45] David Junhao Zhang, Jay Zhangjie Wu, Jia-Wei Liu, Rui Zhao, Lingmin Ran, Yuchao Gu, Difei Gao, and Mike Zheng Shou. Show-1: Marrying pixel and latent diffusion models for text-to-video generation. arXiv preprint arXiv:2309.15818, 2023.   \n[46] Shiwei Zhang, Jiayu Wang, Yingya Zhang, Kang Zhao, Hangjie Yuan, Zhiwu Qin, Xiang Wang, Deli Zhao, and Jingren Zhou. I2vgen-xl: High-quality image-to-video synthesis via cascaded diffusion models. arXiv preprint arXiv:2311.04145, 2023.   \n[47] Yihua Zhang, Yuguang Yao, Parikshit Ram, Pu Zhao, Tianlong Chen, Mingyi Hong, Yanzhi Wang, and Sijia Liu. Advancing model pruning via bi-level optimization. Advances in Neural Information Processing Systems, 35:18309\u201318326, 2022.   \n[48] Pu Zhao, Fei Sun, Xuan Shen, Pinrui Yu, Zhenglun Kong, Yanzhi Wang, and Xue Lin. Pruning foundation models for high accuracy without retraining. arXiv preprint arXiv:2410.15567, 2024.   \n[49] Daquan Zhou, Weimin Wang, Hanshu Yan, Weiwei Lv, Yizhe Zhu, and Jiashi Feng. Magicvideo: Efficient video generation with latent diffusion models. arXiv preprint arXiv:2211.11018, 2022. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A Memory Snapshot during inference ", "page_idx": 12}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/49816870ed62731d41ab0e80f70c9e9a578a88e268405c39aea3e1b6c3f8b061.jpg", "img_caption": ["Figure A1: GPU memory snapshot of active cached segment timeline for Stable Video Diffusion with 14 frames $512\\times512$ "], "img_footnote": [], "page_idx": 12}, {"type": "text", "text": "We provide memory snapshots under different configurations during inference, demonstrating the effectiveness of memory reduction. An example is shown in Fig.A1. This example shows the memory reduction of our method on SVD with $512\\times512$ resolution. The snapshot is collected following the tutorial2. ", "page_idx": 12}, {"type": "text", "text": "B Key Step Search for Step Rehash ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Example of Step Rehash. For step $s+1$ , we only conduct part of the computations in the final up-sampling block, skipping most of the computations in the U-net. Similarly, we can skip multiple steps. For example, if we skip both step $s+1$ and $s+2$ , to obtain the output $U_{3}^{s+2}$ for step $s+2$ we feed the output features $U_{3}^{s+1}$ into the final up-sampling block of step $s+2$ , where $U_{3}^{s+1}$ is also obtained from $U_{3}^{s}$ following the above reusing and skipping method. ", "page_idx": 12}, {"type": "text", "text": "Similarity patterns. The feature similarity between different steps exhibits certain patterns. As shown in Fig. 5a, at initial steps, the similarity is high (above $97\\%$ ) across multiple steps such as from step 0 to step 13. In the middle steps, the high similarity only appears within a small step range. For example, the similarity between step 17 and step 19 is lower than $93\\%$ . In the final steps, the high similarity appears in a slightly larger step range, such as from step 20 to step 22, with above $93\\%$ similarity. ", "page_idx": 12}, {"type": "text", "text": "We address the where-to-skip problem with a fixed strategy to skip the computations from the specific blocks. Next, we address the when skip problem to choose what steps can be skipped based on the similarity map. Given the similarity map as shown in Fig. 5a, the similarity value between step $i$ and $j$ can be represented by $S_{i j}$ as shown in the similarity map. We develop a search method to find the key steps with feature rehash and skip the other steps. ", "page_idx": 12}, {"type": "text", "text": "The algorithm is shown in Algorithm 1. We use a threshold to select the key steps. If the similarity of multiple consecutive steps is above the threshold, we only select the start and end steps as key steps, and the middle steps can be skipped. Typically, a larger threshold leads to more key steps with high generation performance close to the original one, and a smaller threshold leads to skipping more steps and, thus, computations with faster generation. ", "page_idx": 12}, {"type": "table", "img_path": "iNvXYQrkpi/tmp/98cf06c53a10b28e49af29737db1089c905cab707b4e31a830b2617fbf9b4b57.jpg", "table_caption": [], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "", "page_idx": 12}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/9fa8a46b8bf13913abd1d5a7ed6cb7b6f153d4369f95d3c08e461f87f4ee0b3f.jpg", "img_caption": ["Figure A2: Similarity maps of different temporal layers in up_blocks.0.resnets. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "We provide sample PyTorch snippets for operation grouping and Step Rehash. The sample code effectively reduces the peak memory and accelerates the inference speed. However, the pipeline is not released because it requires specific compilation support. ", "page_idx": 13}, {"type": "text", "text": "C Similarity map of middle layers ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We illustrate the similarity map of several layers closer to the mid-block of the UNet, showing that the similarity of these layers is relatively low compared to the results in Fig. 5. ", "page_idx": 13}, {"type": "text", "text": "D Visual comparison with DeepCache ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We provide visual comparison of our method with DeepCache in here. As we can see, our method produces more vivid and detailed sample than DeepCache. ", "page_idx": 13}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/5239a947edba507c04976a04acf8da6b181bf5a0ad76240f0a764b3ee95bd00f.jpg", "img_caption": ["Figure A3: Visual comparison of our method with DeepCache. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "E More quality results ", "text_level": 1, "page_idx": 14}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/4037737c04eb6db9ac52a9b1aed68ba3280765f5d02a954ea70e60686174ccd6.jpg", "img_caption": ["a boat sailing in the ocean with a rocky landmass in view "], "img_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/df351c20629156483ccb18ae7b7934c0ca434f5bfd20b7aa6e42484fd9efa5d1.jpg", "img_caption": ["a bus pulls up to a curb then pulls off "], "img_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/bbf43d6b148b96d3874f8d366dcccfd7f932fa5563f24368a63f3c6a184d897b.jpg", "img_caption": ["the expensive audi car going very fastly in the road at the center of the forest "], "img_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/5fcfd34b393abbbb9e3887536d32ff4dbe40e93b54e53a8c4195da15861e4d47.jpg", "img_caption": ["Figure A4: Quality evaluation of using our method on baseline models. ", "a lion is shown with another lion walking through the field "], "img_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/71320826835a355408dcb4e18ab22b24830c6e7bb1a9c3b5a573af9105e9a406.jpg", "img_caption": ["a bunch of loud lamborghini s a driving up and down the street all at diferent times "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/479dff6de2d118bdffbe6247afee356d8703285a7b94c6015f5abe9fd87b28bc.jpg", "img_caption": ["2 cute parrots sitting nicely "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/1ba17661fbf6a51cb9238bf05764f5a9c2989cc6afba0d0e56d11e1d19d5b49c.jpg", "img_caption": ["a movie trailer of james cameron s titanic movie "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/2a8ab7db6be37060d28046622757cca65d9f1686fb7390c3cccb689622e0e1ff.jpg", "img_caption": ["a street with trafic shown first then a setting of custom made convertables are being displayed "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "Figure A5: Quality evaluation of using our method on baseline models. ", "page_idx": 15}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/bb44e5e987cbf49a53b7b2ce2275ada0df6c9ea966698f894feeec342ba9600d.jpg", "img_caption": ["a band is performing and being shown oh a large screen "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/477338f4a2b30d40d97edb190366a9b752463f1a5fb0cc7ced2ec24df7c1449e.jpg", "img_caption": ["a man is standing on a car at a car tv show "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/c63b2c497ca3ed54c8ea20785f8c4690fdd448622bc8f052933af67a8f8fadf1.jpg", "img_caption": ["a campaign ad for hillary clinton "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/3618d5773f7fe01de6b009c5507b45adb548f0163b7ff46ade7902f89a48db5f.jpg", "img_caption": ["a beautifol rhyme about the roadbus journey for children "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Figure A6: Quality evaluation of using our method on baseline models. ", "page_idx": 16}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/3c93ade62deb2233ef3bcf51947db22f1f974f1fbfdffa85e918092eb4cf9695.jpg", "img_caption": ["Figure A7: Quality evaluation of using our method on baseline models. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "iNvXYQrkpi/tmp/70c29511a0d61fa483a867f1de8423c99448b22d1fb21f90bff943120f6cf5d5.jpg", "img_caption": ["Figure A8: Quality evaluation of using our method on baseline models. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We explain method and summarize the contribution in introduction. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 19}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: The limitation is included in conclusion section. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 19}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: Our paper does not include theoretical results. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 20}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: This paper fully discloses all the information needed to reproduce the main experimental results. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 20}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The datasets and models we used is open-source, and we will open source our code soon. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 21}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification:We have specified all the training and test details necessary to understand the results ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 21}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: We report average results of multiple runs in our experimental section. Our paper does not report error bars. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We explain the computation resources in experiment section. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 22}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: Research is conducted in the paper conform with NeurIPS Code of Ethics. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 22}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 22}, {"type": "text", "text": "Justification: Our paper is not highly related to societal impacts. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our paper poses no such risks. Our work does not release a new model. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 23}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: CC-BY 4.0, and we referenced the works that we used to implement our code. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 23}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 24}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: Our paper does not release new assets. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 24}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 24}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 24}]