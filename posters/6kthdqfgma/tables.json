[{"figure_path": "6KThdqFgmA/tables/tables_2_1.jpg", "caption": "Table 1: Summary of optimization algorithms for efficiently computing utilitarian and egalitarian welfare under different robustness concepts. Green highlights indicate problems which require solving a single linear program (low difficulty). Yellow highlights indicate solving a small number of linear or quadratic programs (medium difficulty). Red highlights indicate problems which require solving numerous quadratic programs or arbitrary concave programs.", "description": "This table summarizes the computational complexity of different optimization algorithms used to solve for utilitarian and egalitarian welfare under different uncertainty models (robust and CVaR).  It categorizes algorithms based on the type of uncertainty set and the welfare function used, indicating the complexity of each algorithm as low, medium, or high.", "section": "1 Introduction"}, {"figure_path": "6KThdqFgmA/tables/tables_9_1.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the performance of different allocation methods on the AAMAS 2015 dataset. Each row represents an allocation method (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW), and each column represents an evaluation metric. The values are the normalized scores, and the \u00b1 values represent the standard deviation across 5 independent runs.  The table shows which allocation method performs best for each evaluation metric.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_16_1.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the performance of different allocation strategies across various metrics for the AAMAS 2015 dataset. Each row represents a different allocation method (e.g., maximizing utilitarian welfare (USW), maximizing group egalitarian welfare (GESW), optimizing conditional value at risk (CVaR) for USW, and robust optimization for USW and GESW).  Each column shows the performance of each allocation method against the evaluation objective (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW).  The values represent the normalized performance score for each allocation method, relative to the highest score achieved by any allocation in each run.  This allows a direct comparison of how each method performs against various metrics and objectives.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_16_2.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the performance of different allocation strategies (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW) across various metrics on the AAMAS 2015 dataset. Each row represents an allocation strategy optimized for a specific objective, and each column shows the performance of that allocation strategy on different metrics (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW). The values are normalized to highlight that the allocation targeted for a given objective always returns the highest value on that objective.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_17_1.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the performance of different allocation strategies across various metrics on the AAMAS 2015 dataset.  Each row represents a different allocation method (e.g., optimizing for USW, GESW, CVaR-USW, etc.), and each column represents a metric used to evaluate the allocation's performance (e.g., USW, GESW, CVaR-USW, CVaR-GESW, Robust USW, Robust GESW). The values in the table represent the normalized mean performance of each allocation method across multiple runs of the experiment, with standard deviations in parentheses. This table allows for the comparison of various optimization approaches (robust, stochastic, and naive) and the corresponding performance on both utilitarian (USW) and egalitarian (GESW) welfare objectives.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_17_2.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the results of an experiment evaluating different resource allocation methods on the AAMAS 2015 dataset.  Each row represents a different optimization approach (e.g., maximizing utilitarian welfare (USW), maximizing group egalitarian welfare (GESW), maximizing the Conditional Value at Risk (CVaR) of USW, etc.), and each column shows the performance of the allocation generated by that method, measured according to several metrics. The metrics include the objective function value for that method (normalized to 1), and the performance of the same allocation evaluated using alternative objectives.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_17_3.jpg", "caption": "Table 2: Performance of different allocations across each metric on the AAMAS 2015 dataset.", "description": "This table presents the results of an experiment evaluating different allocation methods on the AAMAS 2015 dataset.  Each row represents a different allocation method (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW), aiming to optimize a specific welfare objective. Each column shows the performance of that allocation method according to various metrics (USW, GESW, CVaR USW, CVaR GESW, Robust USW, Robust GESW), which are normalized to the best performance for each metric.  The table helps compare the effectiveness of different allocation methods under various fairness and robustness criteria.", "section": "5 Experiments"}, {"figure_path": "6KThdqFgmA/tables/tables_28_1.jpg", "caption": "Table 1: Summary of optimization algorithms for efficiently computing utilitarian and egalitarian welfare under different robustness concepts. Green highlights indicate problems which require solving a single linear program (low difficulty). Yellow highlights indicate solving a small number of linear or quadratic programs (medium difficulty). Red highlights indicate problems which require solving numerous quadratic programs or arbitrary concave programs.", "description": "This table summarizes the computational complexity of different optimization algorithms used to compute utilitarian and egalitarian welfare under various robustness models (linear, one ellipsoid, multiple ellipsoids, and general convex).  The complexity is categorized into low (single linear program), medium (small number of linear/quadratic programs), and high (numerous quadratic programs or arbitrary concave programs). The table highlights the different algorithms' suitability for different objective functions and uncertainty representations.", "section": "1 Introduction"}, {"figure_path": "6KThdqFgmA/tables/tables_29_1.jpg", "caption": "Table 1: Summary of optimization algorithms for efficiently computing utilitarian and egalitarian welfare under different robustness concepts. Green highlights indicate problems which require solving a single linear program (low difficulty). Yellow highlights indicate solving a small number of linear or quadratic programs (medium difficulty). Red highlights indicate problems which require solving numerous quadratic programs or arbitrary concave programs.", "description": "This table summarizes the computational complexity of different optimization algorithms for computing utilitarian and egalitarian welfare under different robustness concepts (linear, one ellipsoid, multiple ellipsoids, and any arbitrary convex set).  The complexity is categorized as low (single linear program), medium (small number of linear or quadratic programs), or high (numerous quadratic programs or arbitrary concave programs).", "section": "1 Introduction"}, {"figure_path": "6KThdqFgmA/tables/tables_29_2.jpg", "caption": "Table 1: Summary of optimization algorithms for efficiently computing utilitarian and egalitarian welfare under different robustness concepts. Green highlights indicate problems which require solving a single linear program (low difficulty). Yellow highlights indicate solving a small number of linear or quadratic programs (medium difficulty). Red highlights indicate problems which require solving numerous quadratic programs or arbitrary concave programs.", "description": "This table summarizes the computational complexity of different optimization algorithms used to solve for utilitarian and egalitarian welfare under various robustness concepts (linear, one ellipsoid, multiple ellipsoids, and general).  The complexity is categorized by difficulty level (low, medium, high).", "section": "1 Introduction"}]