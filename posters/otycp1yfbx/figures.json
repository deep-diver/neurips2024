[{"figure_path": "OtYCp1yfbX/figures/figures_4_1.jpg", "caption": "Figure 1: The \u03bb levels constructed by our offline algorithm.", "description": "This figure illustrates the hierarchical structure of clusters generated by the offline k-center clustering algorithm with outliers.  Each level represents a cluster, where the first \u03bb levels (\u03bb \u2264 k) correspond to the k clusters found by the algorithm, and the final level represents the outliers.  Level 1 contains the points closest to the first center chosen; level 2 contains the remaining points close to the second center, and so on. The algorithm iteratively constructs these levels until k clusters are found or no more points remain to be assigned.  The outermost dashed box represents the entire dataset.", "section": "2.1 Data structure and invariants"}, {"figure_path": "OtYCp1yfbX/figures/figures_7_1.jpg", "caption": "Figure 2: Visualization of charging rules I and II. For case 1, we see that B(ci, 2r) and O\u2081 intersect. As a result, B(ci, 4r) covers all points in O\u017c. Points p, q are in set Zd. For case 2, the balls B(c1, 2r) and B(c2, 2r) do not intersect the optimal cluster O. The crossed points in O2 are charged to black squared in B(c2, 2r). The circle points in O2 are not charged to any point. Points a, b, c are in Zd.", "description": "This figure illustrates two cases in the charging argument used to prove the approximation guarantee of the algorithm. Case 1 shows the situation where the ball B(ci, 2r) intersects a remaining modified optimal ball, allowing for a simple charging scheme. Case 2 addresses the scenario where B(ci, 2r) does not intersect any of the remaining modified optimal balls, requiring a more intricate charging argument and the introduction of artificial outliers.", "section": "3.2 Approximation guarantee"}, {"figure_path": "OtYCp1yfbX/figures/figures_15_1.jpg", "caption": "Figure 1: The \u03bb levels constructed by our offline algorithm.", "description": "This figure illustrates the hierarchical structure of the offline algorithm's output.  It shows how the algorithm creates a series of levels, each level representing a cluster obtained in an iteration. The first X levels represent the clusters found by the algorithm, while the last level (level \u03bb+1) contains the remaining points that were not included in any cluster and are considered outliers. Each level uses a center and radius to define the cluster, and the clusters in higher levels only consider the points that remain after forming the clusters in lower levels. The process of iteratively constructing clusters and refining the sets of remaining points creates a hierarchical structure of levels reflecting the clustering result.", "section": "2.1 Data structure and invariants"}, {"figure_path": "OtYCp1yfbX/figures/figures_21_1.jpg", "caption": "Figure 4: Illustration of the claim\u2019s proof. Part (i): before deletion of c\u1d62, we report c\u1d62 as the center. Part (ii): after deletion of c\u1d62, we report an arbitrary point p \u2208 B(c\u1d62, 2r) as the center. Then, B(p, 6r) can cover all the points in the cluster C\u1d62.", "description": "This figure illustrates the proof of a 6-approximation for the discrete version of the k-center problem with outliers.  In the first part, before the deletion of the center c\u1d62, c\u1d62 is used as the center of the cluster, and the cluster radius is 4r. After c\u1d62 is deleted, the second part shows that an arbitrary point p within a radius of 2r from the old center c\u1d62 can replace c\u1d62 as the new center. A cluster with p as its center and radius 6r can cover the same points that were originally covered by the cluster with center c\u1d62 and radius 4r.", "section": "G How to support discrete k-center clustering with outliers"}]