[{"type": "text", "text": "Unleashing the Denoising Capability of Diffusion Prior for Solving Inverse Problems ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jiawei Zhang Jiaxin Zhuang Tsinghua University Tsinghua University jiawei-z23@mails.tsinghua.edu.cn zhuangjx23@mails.tsinghua.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Cheng Jin Gen Li Yuantao Gu Tsinghua University CUHK Tsinghua University jinc21@mails.tsinghua.edu.cn genli@cuhk.edu.hk gyt@tsinghua.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The recent emergence of diffusion models has significantly advanced the precision of learnable priors, presenting innovative avenues for addressing inverse problems. Previous works have endeavored to integrate diffusion priors into the maximum a posteriori estimation (MAP) framework and design optimization methods to solve the inverse problem. However, prevailing optimization-based rithms primarily exploit the prior information within the diffusion models while neglecting their denoising capability. To bridge this gap, this work leverages the diffusion process to reframe noisy inverse problems as a two-variable constrained optimization task by introducing an auxiliary optimization variable that represents a \u2019noisy\u2019 sample at an equivalent denoising step. The projection gradient descent method is efficiently utilized to solve the corresponding optimization problem by truncating the gradient through the $\\mu$ -predictor. The proposed algorithm, termed ProjDiff, effectively harnesses the prior information and the denoising capability of a pretrained diffusion model within the optimization framework. Extensive experiments on the image restoration tasks and source separation and partial generation tasks demonstrate that ProjDiff exhibits superior performance across various linear and nonlinear inverse problems, highlighting its potential for practical applications. Code is available at https://github.com/weigerzan/ProjDiff/. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Denoising diffusion models have achieved tremendous success in the field of generative modeling [1\u20135]. Their remarkable ability to capture data priors provides promising avenues for solving inverse problems [6], which are widely exploited in image restoration [7\u201312], medical image processing [13, 14], 3D vision [15], audio processing [16, 17] and beyond. ", "page_idx": 0}, {"type": "text", "text": "Numerous endeavors have sought to harness diffusion models to address inverse problems $\\left[18-\\right.$ 27]. Since the sampling process of diffusion models is a reverse Markov chain, most approaches attempt to integrate the guidance provided by the observation equation into the sampling chain. For instance, DDRM [20] achieves favorable results for linear inverse problems with low complexity by introducing a new variational distribution. DDNM [21] capitalizes on the concept of nullrange decomposition, effectively rectifying the range-space component of the intermediate steps by leveraging the observation information. DPS [23] guides the generation process using the gradients of intermediate steps with respect to the observation error. Moreover, methods based on Monte Carlo Particle Filtering [25\u201327] are employed to approximate the true posterior. ", "page_idx": 0}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/8cbd52445ce31f5a428f9b175c9638e99b6c54d2ec4744037732b795674e6a19.jpg", "img_caption": ["Figure 1: Framework of ProjDiff. We introduce an auxiliary variable ${\\bf x}_{t_{a}}$ and transform the inverse problem into a two-variable constrained optimization problem which can be solved using the projection gradient method. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Since inverse problems are often modeled as maximum a posteriori (MAP) estimations, recent efforts have been made to explicitly integrate diffusion models as the prior term in the optimization framework [28, 24]. [28] proposed to employ the Evidence Lower Bound (ELBO) to approximate the prior, facilitating the application of diffusion models in inverse problems in a plug-and-play manner. [24] achieved analogous results from a variational perspective. In these optimizationbased methods, due to the presence of the observation noise, a common practice is to adopt a Gaussian likelihood. However, it\u2019s worth noting that, since diffusion models are inherently effective at denoising, considering the observation noise in the likelihood term fails to fully leverage diffusion models\u2019 denoising capability. ", "page_idx": 1}, {"type": "text", "text": "To fully utilize both the prior information and the denoising capability inherent in diffusion models within the optimization framework, we introduce an auxiliary optimization variable to accommodate the influence of the observation noise. We derive a novel two-variable objective based on the properties of the diffusion process and transform the inverse problem into a constrained optimization task. Through gradient truncation, we obtain a more practical approximation of the stochastic gradient of the objective which sidesteps significant computational overhead. The proposed algorithm, termed ProjDiff, tackles the inverse problem by employing the concept of projection gradient descent to solve the corresponding optimization task. We also discuss the noise-free version of ProjDiff as a special case, which, compared to other optimization-based methods, ensures superior consistency between the generated results and observations. ProjDiff\u2019s applicability also extends beyond linear observations to encompass nonlinear functions, which enhances its competitiveness and versatility. ", "page_idx": 1}, {"type": "text", "text": "We demonstrate the outstanding performance of ProjDiff through comprehensive experiments on various benchmarks. In both linear and nonlinear image restoration tasks, ProjDiff exhibites superior performance among existing state-of-the-art (SOTA) algorithms. In the music separation task, ProjDiff shows for the first time, to the best of our knowledge, that a diffusion-based separation algorithm can surpass previous SOTA, which further demonstrates the powerful potential of diffusion models and provides insights to better harness their capabilities in inverse problems for future research. ", "page_idx": 1}, {"type": "text", "text": "2 Backgrounds ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Denoising diffusion models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Denoising diffusion models [1\u20133] are a class of latent variable generative models tailored to capture a targeted data distribution $q(\\mathbf{x})$ . Diffusion models typically predefine a forward process characterized as a Markov chain, wherein the transition probability is stipulated as Gaussian distribution: ", "page_idx": 1}, {"type": "equation", "text": "$$\nq(\\mathbf{x}_{0:T})=q(\\mathbf{x}_{0})\\prod_{t=1}^{T}q(\\mathbf{x}_{t}|\\mathbf{x}_{t-1}),\\quad q(\\mathbf{x}_{t}|\\mathbf{x}_{t-1})=\\mathcal{N}(\\mathbf{x}_{t};a_{t}\\mathbf{x}_{t-1},b_{t}\\mathbf{I}),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $a_{t}$ and $b_{t}$ represent the scale and variance parameters, respectively. The sampling process of diffusion models aims to invert the forward chain via a parameterized reverse process, which is also modeled as a Markov chain with learnable parameter $\\pmb{\\theta}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\np_{\\theta}(\\mathbf{x}_{0:T})=p_{\\theta}(\\mathbf{x}_{T})\\prod_{t=1}^{T}p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t}),\\quad p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})=\\mathcal{N}(\\mathbf{x}_{t-1};\\mathbf{f}_{\\theta}(\\mathbf{x}_{t},t),\\sigma_{t}^{2}\\mathbf{I}),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathbf{f}_{\\theta}$ denotes the mean function and the variance $\\sigma_{t}^{2}$ is predefined. In this work, we primarily focus on the Variance Preservation (VP) diffusion [19]1, characterized by parameters $a_{t}=\\sqrt{\\alpha_{t}},b_{t}=1\\!-\\!\\alpha_{t}$ with $\\alpha_{0}\\approx1$ and $\\textstyle\\prod_{t=0}^{T}\\alpha_{t}\\approx0$ . With these parameters, we have $q(\\mathbf{x}_{t}|\\mathbf{x}_{0})=\\mathcal{N}(\\mathbf{x}_{t};\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0},(1-$ $\\overline{{\\alpha}}_{t})\\mathbf{I}$ ), where $\\begin{array}{r}{\\overline{{\\alpha}}_{t}=\\prod_{i=0}^{t}\\alpha_{t}}\\end{array}$ . The initial distribution of the reverse process is set to match the forward process, i.e., $p_{\\pmb{\\theta}}(\\mathbf{x}_{T})\\stackrel{.}{=}\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , while the mean function is chosen as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbf{f}_{\\theta}(\\mathbf{x}_{t},t)=\\sqrt{\\overline{{\\alpha}}_{t-1}}\\mu_{\\theta}(\\mathbf{x}_{t},t)+\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}}\\mu_{\\theta}(\\mathbf{x}_{t},t)}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Here $\\pmb{\\mu}_{\\pmb{\\theta}}$ serves as an estimation of $\\mathbf{x}_{\\mathrm{0}}$ at time $t$ , typically implemented through a parameterized neural network referred to as a \u201c $\\pmb{\\mu}$ -predictor\u201d2. The variance $\\dot{\\sigma}_{t}^{2}\\in[0,1-\\overline{{\\alpha}}_{t-1}\\overline{{}}]$ can take various values. When \u03c3t = $\\begin{array}{r}{\\sigma_{t}=\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t-1}}}}\\end{array}$ , the reverse process aligns with DDPM [2]; while when retaining $\\sigma_{t}=\\tilde{\\sigma}_{t}$ as an adjustable parameter, one obtains DDIM [3]. We refer to [19, 29\u201331] for more theoretical guarantees of diffusion models. ", "page_idx": 2}, {"type": "text", "text": "2.2 Diffusion models as data prior ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "As stated in [32, 28], for a well-trained diffusion model, the Evidence Lower Bound (ELBO) can effectively approximate the log-likelihood of the samples, i.e. ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\log q(\\mathbf{x}_{0})\\approx C-\\sum_{t=1}^{T}\\lambda(t)\\mathbb{E}_{q(\\mathbf{x}_{t}|\\mathbf{x}_{0})}||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)||^{2},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\lambda(t)$ represents the coefficient within the ELBO and $C$ is a constant. Utilizing the ELBO as the log-prior term enables diffusion models to serve as a plug-and-play prior for general inverse problems. [28] handled the ELBO via stochastic gradient descent and the reparameterization method. By sampling $t\\sim\\mathcal{U}\\left\\{1,2,\\ldots,T\\right\\}$ and $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , a stochastic gradient of the ELBO can be derived as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{d}_{t,\\mathbf{x}_{0}}=\\left(\\mathbf{D}_{\\mathbf{x}_{0}}\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t}}\\epsilon,t\\right)-\\mathbf{I}\\right)\\left(\\mathbf{x}_{0}-\\mu_{\\theta}\\big(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t}}\\epsilon,t\\big)\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathbf{D}_{\\mathbf{x}_{0}}\\mu_{\\theta}(\\cdot)$ denotes the Jocabian of the $\\pmb{\\mu}$ -predictor. [24] derived a similar proxy objective from the perspective of variational inference, and proposed a more computationally efficient approximation of the stochastic gradient by reweighting the objective. Notably, when the variational distribution is a delta function, variational inference aligns with the MAP estimation. In this work, we introduce a novel two-variable ELBO by constructing an auxiliary variable that accounts for the observation noise, thereby utilizing both the prior information and the denoising capability in diffusion models simultaneously. ", "page_idx": 2}, {"type": "text", "text": "2.3 Equivalent noisy samples ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "As stated in [26], the noisy observation of a sample can be regarded as a noise-free observation of an equivalent noisy sample at certain steps in the diffusion process. For linear observations $\\textbf{y}=$ $\\mathbf{Ax}_{0}\\mathbf{+}\\sigma\\mathbf{n}$ , where $\\mathbf{x}_{0}\\in\\mathbb{R}^{m_{\\mathbf{x}}}$ , $\\mathbf{y}\\in\\mathbb{R}^{m_{\\mathbf{y}}}$ , and $\\mathbf{n}\\in\\mathcal{N}(\\mathbf{0},\\mathbf{I}_{m_{\\mathbf{y}}})$ , a common practice [20, 21, 26] involves the Singular Value Decomposition (SVD) to attain a decoupled form. Without loss of generality, assume A has full row rank. Utilizing the SVD $\\mathbf{A}=\\mathbf{U}\\mathbf{S}\\mathbf{V}^{\\pmb{\\lambda}}$ yields $\\mathbf{U}^{T}\\mathbf{y}=\\mathbf{S}(\\mathbf{V}^{T}\\mathbf{x}_{0})+\\sigma\\mathbf{n}$ , thus transforming the observation equation to $\\overline{{\\mathbf{y}}}=\\mathbf{S}\\overline{{\\mathbf{x}}}_{0}+\\sigma\\mathbf{n}$ , where $\\overline{{\\mathbf{y}}}=\\mathbf{U}^{T}\\mathbf{y}$ and $\\overline{{\\mathbf{x}}}_{0}=\\mathbf{V}^{T}\\mathbf{x}_{0}$ , which can be further written element-wise as ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "equation", "text": "$$\n\\frac{\\overline{{\\mathbf{y}}}_{i}}{s_{i}}=\\overline{{\\mathbf{x}}}_{0,i}+\\frac{\\sigma}{s_{i}}\\mathbf{n}_{i},1\\leq i\\leq m_{\\mathbf{y}},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\overline{{\\mathbf{x}}}_{0,i}$ and $\\overline{{\\mathbf{y}}}_{i}$ represent the $i$ th component of $\\overline{{\\mathbf{x}}}_{\\mathrm{0}}$ and $\\overline{{\\mathbf{y}}}$ , respectively, and $s_{i}$ denotes the ith singular value of A\u221a. Assuming there exist $t_{i}\\in\\left\\{1,2,\\ldots,T\\right\\},1\\leq i\\leq m_{\\mathbf{y}}$ such that $\\overline{{\\alpha}}_{t_{i}}=1/(1+(\\sigma/s_{i})^{2})$ , let $\\overline{{\\mathbf{y}}}_{i}^{\\prime}=\\sqrt{\\overline{{\\alpha}}_{t_{i}}}\\overline{{\\mathbf{y}}}_{i}/s_{i}$ and then the observation function can be rewritten as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\overline{{\\mathbf{y}}}_{i}^{\\prime}=\\sqrt{\\overline{{\\alpha}}_{t_{i}}}\\overline{{\\mathbf{x}}}_{0,i}+\\sqrt{1-\\overline{{\\alpha}}_{t_{i}}}\\mathbf{n}_{i}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "$\\sqrt{\\overline{{\\alpha}}_{t_{i}}}\\overline{{\\mathbf{x}}}_{0,i}+\\sqrt{1-\\overline{{\\alpha}}_{t_{i}}}\\mathbf{n}_{i}$ can be interpreted as the $i$ th component of a sample at time step $t_{i}$ , namely $\\overline{{\\mathbf{x}}}_{t_{i},i}$ . Thus [26] proposed to employ Monte Carlo Particle Filtering to restore the samples up to the equivalent noise level, and then apply the backward transition to map these noisy samples back to the clean samples. In this work, we introduce this equivalent noisy sample as an auxiliary variable, thus better handling the observation noise in the optimization framework. ", "page_idx": 3}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this section, we introduce the ProjDiff algorithm. The main idea behind ProjDiff lies in constructing an auxiliary variable to align the noisy observations to specific steps of the diffusion process, thereby forming a two-variable constrained optimization task, which can be tackled by approximating the stochastic gradients and employing the projection gradient descent method. We begin by deriving the ProjDiff algorithm for noisy linear observations and then discuss its noise-free version as a special case and the extension of ProjDiff to accommodate nonlinear observations. ", "page_idx": 3}, {"type": "text", "text": "3.1 ProjDiff ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Consider the Gaussian observation equation $\\mathbf{y}=\\mathbf{Ax}_{0}+\\sigma\\mathbf{n}$ . The goal of the inverse problem is to recover the original data $\\mathbf{x}_{\\mathrm{0}}$ given $\\mathbf{y},\\mathbf{A}$ , and $\\sigma$ . The decoupled observation equation in (7) indicates that one can apply SVD to reduce a linear observation into the simple form with $\\mathbf{A}=[\\mathbf{I}_{m_{\\mathbf{y}}},\\mathbf{0}]$ in the spectral domain, which implies the observation $\\mathbf{y}$ represents the first $m_{\\mathbf{y}}$ components of $\\mathbf{x}$ Consequently, we can focus on this simplest observation function to declare our algorithm. Under this condition, assuming there exists some $t_{a}\\in[0,1,\\ldots,T]^{3}$ such that $\\overline{{\\alpha}}_{t_{a}}=1/\\left(\\overline{{1}}+\\sigma^{2}\\right)$ , we rewrite the observation function as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{y}^{\\prime}=\\left[\\mathbf{I}_{m_{\\mathbf{y}}},\\mathbf{0}\\right]\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\mathbf{n}^{\\prime}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathbf{y}^{\\prime}=\\mathbf{y}/\\sqrt{1+\\sigma^{2}}$ a\u221and $\\mathbf{n}^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}_{m_{\\mathbf{x}}})$ . The noisy observation $\\mathbf{y}^{\\prime}$ can be interpreted as a noise-free observation of $\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\mathbf{n}^{\\prime}$ , which in turn can be viewed as a sample in the manifold of $q(\\mathbf{x}_{t_{a}})$ . Thus, we introduce an auxiliary variable ${\\bf x}_{t_{a}}$ which denotes a noisy sample at time step $t_{a}$ , and propose to optimize the log-posterior term of the two variables as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\displaystyle\\operatorname*{max}_{\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}}\\log q(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}|\\mathbf{y})=\\displaystyle\\operatorname*{max}_{\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}}\\log q(\\mathbf{y}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})+\\log q(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})-\\log q(\\mathbf{y})}\\\\ {\\displaystyle\\approx\\operatorname*{max}_{\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}}\\log q(\\mathbf{y}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})+\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})-\\log q(\\mathbf{y}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where in (10) we use $p_{\\theta}$ to approximate the true prior $q$ . By the construction of the auxiliary variable ${\\bf x}_{t_{a}}$ , the likelihood term embodies a stringent consistency between this auxiliary variable and the noisy observation, which serves as a constraint. Note that $\\log{q(\\mathbf{y})}$ is independent of the optimization variables, thus (10) is transformed into the following constrained optimization task: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}}\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})\\qquad\\mathrm{s.t.}\\quad\\mathbf{y}^{\\prime}=\\left[\\mathbf{I}_{m_{\\mathbf{y}}},0\\right]\\mathbf{x}_{t_{a}}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Now we seek the ELBO as a proxy of the joint log-prior term of $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ to render it tractable. Leveraging Jensen\u2019s inequality and the transition probability of the diffusion model, we reach the following proposition. ", "page_idx": 3}, {"type": "text", "text": "Proposition 1. Considering the DDIM reference distribution $q_{\\sigma}$ , we have the variational lower bound of the log-prior term as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})\\ge C-\\sum_{t=1}^{t_{a}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}\\mid\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\left(g(t)\\vert\\vert\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)\\vert\\vert^{2}\\right).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "equation", "text": "$$\n-\\sum_{t=t_{a}+1}^{T}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}\\mid\\mathbf{x}_{t_{a}}),\\epsilon^{\\prime}\\sim N(\\mathbf{0},\\mathbf{I})}\\bigg(g(t)\\bigg|\\Big|\\mathbf{x}_{t_{a}}-\\Big(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t},t)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\Big)\\Big|\\Big|^{2}+w(t)\\langle\\mu_{\\theta}(\\mathbf{x}_{t},t),\\nu\\rangle\\bigg)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $C$ is a constant independent of $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ , the weight $g(t),w(t)$ are functions of $\\overline{{\\alpha}}_{t}$ and the DDIM variance $\\tilde{\\sigma}_{t}$ , and $\\begin{array}{r}{\\pmb{\\nu}=\\left(\\mathbf{x}_{t}-\\sqrt{\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\mathbf{x}_{t_{a}}\\right)/\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}}\\end{array}$ . ", "page_idx": 4}, {"type": "text", "text": "The complete derivation of the lower bound is provided in Appendix A. Note that the summation on the right-hand side of (12) is partitioned into two parts. The first part, the denoising matching term, pertains to the approximation of $\\log p_{\\pmb\\theta}(\\mathbf x_{0}|\\mathbf x_{t_{a}})$ , signifying the consistency between the noise-free variable $\\mathbf{x}_{\\mathrm{0}}$ and the auxiliary variable ${\\bf x}_{t_{a}}$ . The second part, the noisy prior term, corresponds to the approximation of the log-prior of the noisy auxiliary variable ${\\bf x}_{t_{a}}$ . Conceptually, the workflow of utilizing this ELBO for inverse problems can be delineated as follows: the noisy prior term, coupled with the constraint on the auxiliary variable, exploits the prior information of the diffusion model and the observation information to recover a noisy sample $\\mathbf{x}_{t_{a}}$ that satisfies the observation equation, while the denoising matching term leverages the denoising capability of the diffusion model to restore the clean sample $\\mathbf{x}_{\\mathrm{0}}$ from the noisy sample ${\\bf x}_{t_{a}}$ . ", "page_idx": 4}, {"type": "text", "text": "Now, we address the ELBO outlined in Proposition 1 utilizing the principle of the stochastic gradient method. The constant $C$ is independent of the optimization variables and can therefore be disregarded. The following proposition is obtained through reparameterization. ", "page_idx": 4}, {"type": "text", "text": "Proposition 2. Randomly sampling $t\\sim\\mathcal{U}\\left\\{1,2,\\dots,T\\right\\},\\epsilon,\\epsilon^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}),$ , the stochastic gradients of the proxy objective (for minimization) with respect to $\\mathbf{x}_{\\mathrm{0}}$ and $\\mathbf{x}_{t_{a}}$ are, respectively, ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{d}_{\\mathbf{x}_{0},t}=\\left\\{\\begin{array}{l l}{\\nabla_{\\mathbf{x}_{0}}\\left||\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\mathbf{h}_{t},t\\right)\\right||^{2}}&{t\\leq t_{a};}\\\\ {0}&{t>t_{a},}\\end{array}\\right.}\\\\ &{\\mathbf{d}_{\\mathbf{x}_{t_{a},t}}=\\left\\{\\begin{array}{l l}{\\nabla_{\\mathbf{x}_{t_{a}}}\\left||\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\mathbf{h}_{t},t\\right)\\right||^{2}}&{t\\leq t_{a}}\\\\ {\\nabla_{\\mathbf{x}_{t_{a}}}\\left||\\mathbf{x}_{t_{a}}-\\left(\\sqrt{\\alpha_{t_{a}}}\\mu_{\\theta}\\left(\\mathbf{h}_{t},t\\right)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right)\\right||^{2}+w(t)/g(t)\\nabla_{\\mathbf{x}_{t_{a}}}\\left<\\mu_{\\theta}\\left(\\mathbf{h}_{t},t\\right),\\epsilon\\right>}&{t>t_{a}}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{h}_{t}=\\left\\{\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0})/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}+\\zeta_{t}\\epsilon\\right.\\ \\ t\\leq t_{a};}\\\\ {\\left.\\sqrt{\\overline{{\\alpha}}_{t}}/\\overline{{\\alpha}}_{t_{a}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}}/\\overline{{\\alpha}}_{t_{a}}\\epsilon\\right.\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\left.t>t_{a},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "and $\\gamma_{t},\\,\\zeta_{t}$ are determined by $\\overline{{\\alpha}}_{t}$ and the DDIM variance $\\tilde{\\sigma}_{t}$ . ", "page_idx": 4}, {"type": "text", "text": "The coefficients are omitted as they can be scaled into the step sizes. Note that in such stochastic gradients, the Jacobian of $\\mu_{\\theta}(\\cdot)$ is involved, which necessitates backpropagation through the neural network and incurs significant computational and storage overhead. Therefore, we use an approximate yet effective and practical method by truncating the gradients in $\\mu_{\\theta}(\\cdot)$ , i.e. $\\mathbf{D}_{\\mathbf{x}_{0}}\\mu_{\\theta}(\\cdot)\\approx\\mathbf{0}$ and $\\mathbf{D}_{\\mathbf{x}_{t_{a}}}\\mu_{\\theta}(\\cdot)\\approx\\mathbf{0}$ . Intuitively, the $\\pmb{\\mu}$ -predictor of the diffusion model should be resilient to small perturbations in the input. For instance, when we feed a noisy image into a pre-trained diffusion model and introduce minor perturbations to the original image, we anticipate the predicted image to maintain consistency with the original one. Thus the approximation for $\\mathbf{x}_{\\mathrm{0}}$ is acceptable, and similarly for ${\\bf x}_{t_{a}}$ if the noise level of ${\\bf x}_{t_{a}}$ is not too large. By such gradient truncation, the approximation of the stochastic gradients for $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ are, respectively, ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}=\\left\\{\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\mathbf{h}_{t},t\\right)\\quad t\\leq t_{a};}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad t>t_{a},}\\\\ &{\\tilde{\\mathbf{d}}_{\\mathbf{x}_{t_{a}},t}=\\left\\{\\vphantom{\\frac{\\partial}{\\partial}}_{\\mathbf{x}_{t_{a}}}^{0}\\right.\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!}&{\\left.\\!\\!\\!\\!t\\leq t_{a};}\\\\ &{\\qquad\\mathbf{x}_{t_{a}}-\\sqrt{\\bar{\\alpha}_{t_{a}}}\\mu_{\\theta}(\\mathbf{h}_{t},t)-\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\quad t>t_{a}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that $\\mathbf{x}_{\\mathrm{0}}$ is not subject to the constraint and can be updated directly by stochastic gradient descent. ${\\bf x}_{t_{a}}$ is involved in the equality constraint, so we apply the projection gradient descent method. Considering the projection operator of the observation in (11), an iteration step of the proposed algorithm is outlined as follows ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{x}_{0}\\leftarrow\\mathbf{x}_{0}-\\eta_{1}\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t},}\\\\ &{\\mathbf{x}_{t_{a}}\\leftarrow\\left[\\mathbf{I}_{m_{\\mathbf{y}}},\\mathbf{0}_{m_{\\mathbf{y}}\\times(m_{\\mathbf{x}}-m_{\\mathbf{y}})}\\right]^{T}\\mathbf{y}^{\\prime}+\\mathrm{diag}\\left(\\mathbf{0}_{m_{\\mathbf{y}}\\times m_{\\mathbf{y}}},\\mathbf{I}_{m_{\\mathbf{x}}-m_{\\mathbf{y}}}\\right)\\left(\\mathbf{x}_{t_{a}}-\\eta_{2}\\tilde{\\mathbf{d}}_{\\mathbf{x}_{t_{a},t}}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\eta_{1}$ and $\\eta_{2}$ are selected step sizes and $\\mathrm{diag(\\cdot)}$ denotes the operation of arranging entries into a diagonal matrix. We term this algorithm ProjDiff. ", "page_idx": 5}, {"type": "text", "text": "Algorithm 1 ProjDiff for VP diffusion (noisy observation). ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Require: Observation $\\mathbf{y}^{\\prime}$ , pre-trained diffusion model $\\pmb{\\mu_{\\theta}}$ , step sizes $\\eta_{1},\\eta_{2}$ , total steps $T$ , noise   \nschedule $\\overline{{\\alpha}}_{1}\\ldots\\overline{{\\alpha}}_{T}$ , equivalent noise level $\\overline{{\\alpha}}_{t_{a}}$ .   \n1: Sample \u03f5 $\\mathbf{\\Psi}_{\\Gamma},\\mathbf{\\epsilon}_{T}^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n2: Initialize $\\begin{array}{r}{\\mathbf{x}_{t_{a}}\\overleftarrow{}\\leftarrow\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\epsilon_{T},T)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon_{T}^{\\prime};}\\end{array}$ ;   \n3: for $t=T$ to $t_{a}+1$ do   \n4: Sample $\\epsilon,\\epsilon^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n5: Calculate the approximate stochastic gradient $\\tilde{\\mathbf{d}}_{\\mathbf{x}_{t_{a}},t}$ as (17);   \n6: Update ${\\bf x}_{t_{a}}$ as (19);   \n7: end for   \n8: Initialize $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\mathbf{x}_{t_{a}},t_{a})$ ;   \n9: for $t=t_{a}$ to 1 do   \n10: Sample $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n11: Calculate the approximate stochastic gradient $\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}$ as (16);   \n12: Update $\\mathbf{x}_{\\mathrm{0}}$ as (18);   \n13: end for   \n14: return $\\mathbf{x}_{\\mathrm{0}}$ ", "page_idx": 5}, {"type": "text", "text": "3.2 Noise-free observations: a special case ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In the noise-free scenario, the observation equation becomes $\\mathbf{y}=\\mathbf{Ax}_{0}$ and the auxiliary variable ${\\bf x}_{t_{a}}$ degrades to $t_{a}=0$ , thus the constraint is directly applied on $\\mathbf{x}_{\\mathrm{0}}$ . The corresponding optimization problem can be expressed as ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{x}_{0}}\\sum_{t=1}^{T}\\lambda(t)\\mathbb{E}_{q(\\mathbf{x}_{t}|\\mathbf{x}_{0})}||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)||^{2}\\qquad\\mathrm{s.t.}\\quad\\mathbf{y}=\\mathbf{A}\\mathbf{x}_{0}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Utilizing reparameterization and gradient truncation, the approximate stochastic gradient of the objective is ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\widetilde{\\mathbf{d}}_{t,\\mathbf{x}_{0}}=\\mathbf{x}_{0}-\\pmb{\\mu}_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t}}\\pmb{\\epsilon},t\\right).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Then the iteration of ProjDiff in the noise-free scenario is given by: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbf{x}_{0}\\leftarrow\\mathbf{A}^{\\dagger}\\mathbf{y}+\\left(\\mathbf{I}-\\mathbf{A}^{\\dagger}\\mathbf{A}\\right)(\\mathbf{x}_{0}-\\eta\\tilde{\\mathbf{d}}_{t,\\mathbf{x}_{0}}),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathbf{A}^{\\dagger}$ is the Moore-Penrose pseudo-inverse of matrix $\\mathbf{A}$ and $\\eta$ is the selected step size. The principle of the ProjDiff algorithm in noise-free scenarios resides in treating the observation as a constraint. In contrast to [24] where the authors used Gaussian likelihood for noise-free observations, ProjDiff guarantees better consistency between the generated results and the observations. ", "page_idx": 5}, {"type": "text", "text": "3.3 Extension to nonlinear observation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Nonlinear inverse problems are inherently more ill-posed than linear ones. For instance, in our experiments, we consider the phase retrieval task, which aims to recover the original image given only the Fourier magnitude spectrum. The observation equation is: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{y}=\\left|\\mathrm{DFT}(\\mathbf{P}\\mathbf{x}_{0})\\right|,}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathbf{P}$ is the zero-padding matrix. Effectively addressing nonlinear inverse problems can significantly enhance the algorithm\u2019s versatility. Here, we discuss about the ProjDiff algorithm for nonlinear observations concerning noise-free and noisy scenarios. ", "page_idx": 6}, {"type": "text", "text": "For noise-free nonlinear observation functions, the key point of ProjDiff lies in identifying an appropriate projection operator for the nonlinear constraint $\\mathbf{y}=\\mathcal{A}(\\mathbf{x}_{0})$ . For some nonlinear functions $\\bar{\\mathcal{A}}(\\cdot)$ , such a projection operator is analytic or can be approximated. For more intricate functions, we can resort to gradient descent or sub-gradient methods to minimize $||\\mathbf{y}-\\mathcal{A}(\\mathbf{x})||^{2}$ starting from the initial point $\\mathbf{x}_{\\mathrm{0}}$ to approximate the projection operator. Thus ProjDiff is applicable to such class of nonlinear observations. ", "page_idx": 6}, {"type": "text", "text": "For noisy inverse problems, ProjDiff necessitates mapping the noise applied on the observation to the noise applied on the original data $\\mathbf{x}_{\\mathrm{0}}$ . Such a mapping is strict in the linear case. For nonlinear observations, the exact equivalent noise might not be accessible but may be estimated through some appropriate approach. In cases where the observation function is overly complex, one may leave the determination of the equivalent noise variance as a hyperparameter to be manually tuned. This renders ProjDiff applicable to noisy nonlinear observations. ", "page_idx": 6}, {"type": "text", "text": "3.4 Time steps, initialization, and Restricted Encoding ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Here we elaborate on crucial details and address the weak observation problem. ", "page_idx": 6}, {"type": "text", "text": "Time steps. In practice, we observe that selecting time steps in a decreasing manner from $T$ to 1 yields the optimal performance and provides more stable results with reduced oscillations, which aligns with the findings reported in [28, 24]. Therefore, we adopt this time step schedule as the default setting in this work. Furthermore, we note that in certain scenarios, repeating the same time step multiple times (say $N$ times) leads to enhanced performance, which bears a resemblance to the correction step proposed in [19] and the time-travel technique in [21]. ", "page_idx": 6}, {"type": "text", "text": "Initialization. We propose to use random initialization in the ProjDiff algorithm. The core concept entails initializing $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ to be close to the manifold of $q(\\mathbf{x}_{0})$ and $q(\\mathbf{x}_{t_{a}})$ , respectively, which is achievable via the $\\pmb{\\mu}$ -predictor (or the Tweedie\u2019s formula [33]) and the forward process. Randomly sampling a Ga\u221aussian noise\u221a $\\epsilon_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , we initialize the optimization variables by $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\epsilon_{T},\\dot{T})$ and $\\mathbf{x}_{t_{a}}\\;\\leftarrow\\;\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon_{T}^{\\prime}$ for some $\\epsilon_{T}^{\\prime}\\,\\sim\\,\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ . Nonetheless, given the time step schedule and the form of the stochastic gradients discussed above, we note that the $\\mathbf{x}_{\\mathrm{0}}$ remains unaltered until ${\\bf x}_{t_{a}}$ is fully optimized. Therefore, for noisy observations, it would be more efficient to re-initialize $\\mathbf{x}_{\\mathrm{0}}$ as $\\mu_{\\theta}(\\mathbf{x}_{t_{a}},t_{a})$ once ${\\bf x}_{t_{a}}$ has been optimized. ", "page_idx": 6}, {"type": "text", "text": "Weak observation problem. In most image restoration tasks, the constraints imposed by observations are typically strong enough to lead to a unique original data point, rendering ProjDiff effective in yielding satisfactory results. However, in scenarios where observations are weak, particularly in situations with significant degrees of freedom in the inverse problem, the performance of ProjDiff tends to decline. We term these scenarios the weak observation problem. Drawing inspiration from [34], where the authors found that including a larger variance when remapping $\\mathbf{x}_{\\mathrm{0}}$ to $\\mathbf{x}_{t}$ leads to noisy results, we attempt to adjust the noise schedule to diminish the variance of the sampled $\\mathbf{x}_{t}$ . We propose Restricted Encoding to tackle the weak observation problem, which entails fixing an initial noise $\\pmb{\\epsilon}_{0}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ and reparameterizing the sampling of $\\mathbf{x}_{t}$ as ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathbf{x}_{t}=\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\xi\\epsilon_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t}-\\xi^{2}}\\epsilon,\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , and $\\xi\\in[0,\\sqrt{1-\\overline{{\\alpha}}_{t}}]$ regulates the level of randomness. ", "page_idx": 6}, {"type": "text", "text": "The complete implementation of ProjDiff for noisy observations is outlined in Algorithm 1. More variations of ProjDiff used in our experiments can be found in Appendix H. ", "page_idx": 6}, {"type": "text", "text": "4 Experiments. ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We present the comparison of the proposed ProjDiff algorithm with several SOTA algorithms in two primary scenarios: (1) image restoration, and (2) source (music) separation and partial generation. All experiments are performed on a single NVIDIA 3090ti GPU. ", "page_idx": 6}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/8438944598c855bbe969bdbecef1862cf35a11b515e5f4bd6cc0a82e9a2f5c80.jpg", "table_caption": ["Table 1: Noisy restoration on ImageNet with $\\sigma=0.05$ . The LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/f6c5b2ab1a367cc2ba8a7fac57eef2681ede3bcc9fac65d0283c9e2b7498d30f.jpg", "table_caption": ["Table 2: Phase retrieval results. The LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.1 Image restoration ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Linear tasks. We demonstrate the performance of ProjDiff across three linear image restoration tasks on ImageNet [35]: $4\\times$ super-resolution (with average pooling), $50\\%$ random inpainting, and Gaussian deblurring. Comparisons are conducted against prominent diffusion-based image restoration algorithms in recent years, including DDRM [20], $\\mathrm{DDNM+}$ [21], DPS [23], and RED-diff [24]. The performance of the least square solution $(\\hat{\\mathbf{x}}_{0}=\\mathbf{A}^{\\dagger}\\mathbf{y})$ ) is reported as a baseline. For a fair comparison, DDRM, DDNM, RED-diff, and ProjDiff utilize 100 function evaluations, while DPS uses 1000 function evaluations as its performance significantly declines with 100 steps. The pre-trained model on ImageNet is sourced from [36], specifically the $256\\times256$ model without classifier guidance. Testing is conducted on a 1k sub-testset of ImageNet consistent with [21]. Metrics include PSNR, SSIM [37], LPIPS [38], and FID [39], with all LPIPS values multiplied by 100 for clarity. ", "page_idx": 7}, {"type": "text", "text": "Table 1 presents the restoration metrics for noisy observations with standard deviation $\\sigma\\,=\\,0.05$ (doubled when pixels are rescaled to $[-1,1]$ ) on ImageNet. ProjDiff demonstrated highly competitive performance compared to other algorithms. Some visualization results are shown in Figure 2. More experiments on ImageNet and CelebA [40] alongside ablation studies are shown in Appendix C. ", "page_idx": 7}, {"type": "text", "text": "Nonlinear tasks. We evaluate the effectiveness of ProjDiff for nonlinear observations through the challenging phase retrieval task on the FFHQ dataset [41]. We compare ProjDiff against DPS [23] and RED-diff [24] as they are applicable to nonlinear observations. Traditional baseline algorithms are also reported, including the Error Reduction (ER) algorithm [42], Hybrid Input-Output (HIO) [43], and Oversampling Smoothness (OSS) [44]. Table 2 presents the results for both noise-free and noisy scenarios. One sample is generated per image from each algorithm. Given the inherently ill-posedness of phase retrieval, ProjDiff requires more steps to achieve superior results. We set the number of function evaluations to 1000 for all three algorithms. The results demonstrate that ProjDiff excels in addressing nonlinear inverse problems, regardless of whether the observation is noise-free or noisy. Some visualization results are shown in Figure 3. Further experiments on the high dynamic range (HDR) task can be found in Appendix C. ", "page_idx": 7}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/34faa0266a9eab270a33c5b8e7cb38b10732cf18dd14e6260d346f7435ccc6de.jpg", "img_caption": [], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "", "img_caption": ["Figure 3: Nonlinear restoration on FFHQ (noise-free). "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.2 Source separation and partial generation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We evaluate ProjDiff on source separation and partial generation tasks following [45, 46]. The SLACK2100 dataset [47] is employed and the pre-trained diffusion models are sourced from [45]. ", "page_idx": 8}, {"type": "text", "text": "The objective of the source separation task is to separate the audio tracks of four instruments (piano, bass, guitar, and drums) from a mixed audio sequence. We compare ProjDiff against the methods reported in [45], along with RED-diff [24] due to its relevance to this work. Performance is assessed using the scale-invariant SDR improvement (SI-SDRi) [48] for each instrument as well as their average. Tabel 3 presents the performance on the ISDM model [45] of different algorithms. ProjDiff demonstrates significant performance improvements compared to other diffusion-based algorithms. The particularly noteworthy result is that ProjDiff surpasses the Demucs method [49], marking the first instance, to the best of our knowledge, where a diffusion-based separation algorithm significantly outperforms previous SOTA, not to mention that the diffusion model is not specifically designed or trained for the separation task. ", "page_idx": 8}, {"type": "text", "text": "The partial generation task aims to generate tracks of other instruments given partial of the instruments tracks while ensuring harmony. We employ the sub-FAD metrics [50, 45] for different partial generation tasks. Note that partial generation poses a weak observation problem as discussed in Section 3.4, thus the proposed Restricted Encoding method is applied for ProjDiff. The results are shown in Table 4. ProjDiff outperforms other algorithms across different partial generation tasks. Additional results and in-depth analysis including ablation studies can be found in Appendix D. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this work, we introduce ProjDiff, a versatile inverse problem solver that harnesses the power of diffusion models to capture intricate data prior and denoise simultaneously. By deriving a novel two-variable ELBO as a proxy for the log-prior, we reframe the inverse problems as constrained optimization tasks and address them via the projection gradient method. We meticulously explore the implementation details of ProjDiff and propose refined initialization methods and optional noise schedules to enhance its performance. Through extensive experiments across image restoration tasks and source separation and partial generation tasks, we demonstrate the competitive performance and versatility of ProjDiff in linear, nonlinear, noise-free, and noisy problems. ProjDiff provides insights into better leveraging diffusion priors for inverse problems for future work. ", "page_idx": 8}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/4154bf9b60c3a65c61bde19a86999e2993c113943d52530a41d353e38332a9fa.jpg", "table_caption": ["Table 3: SI-SDRi for source separation task (higher is better). "], "table_footnote": ["\\* Previous SOTA. "], "page_idx": 9}, {"type": "text", "text": "Table 4: The sub-FAD metrics on different partial generation tasks (lower is better). The capital letters in the table header represent the initial letters of the generated instruments. For example, BD represents the task of generating bass and drums given piano and guitar. ", "page_idx": 9}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/b2b0e27f20bcbdb2834cfbda64a1d014e4d2dfc9529e0cdbe649b5f8cb92081f.jpg", "table_caption": [], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "Limitations and future work. One of the possible limitations of ProjDiff is the potential challenge of effectively handling noisy observations with highly intricate functions. Also, its reliance on Gaussian observation noise may limit its applicability to other noise types like Poisson or multiplicative noise. Additionally, ProjDiff needs manual tuning for the step size. Future research could focus on extending ProjDiff to tackle intricate noisy nonlinear observations more effectively, as well as developing adaptive step size strategies to further enhance the performance while reducing the need for manual intervention. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by NSAF (Grant No. U2230201) and a Grant from the Guoqiang Institute, Tsinghua University. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In International conference on machine learning, pages 2256\u20132265. PMLR, 2015.   \n[2] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \n[3] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2021.   \n[4] Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. Dpm-solver: A fast ode solver for diffusion probabilistic model sampling in around 10 steps. Advances in Neural Information Processing Systems, 35:5775\u20135787, 2022.   \n[5] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[6] Andrey Nikolayevich Tikhonov et al. On the stability of inverse problems. In Dokl. akad. nauk sssr, volume 39, pages 195\u2013198, 1943.   \n[7] Deepa Kundur and Dimitrios Hatzinakos. Blind image deconvolution. IEEE signal processing magazine, 13(3):43\u201364, 1996.   \n[8] Sung Cheol Park, Min Kyu Park, and Moon Gi Kang. Super-resolution image reconstruction: a technical overview. IEEE signal processing magazine, 20(3):21\u201336, 2003.   \n[9] Marcelo Bertalmio, Guillermo Sapiro, Vincent Caselles, and Coloma Ballester. Image inpainting. In Proceedings of the 27th annual conference on Computer graphics and interactive techniques, pages 417\u2013424, 2000.   \n[10] Antoni Buades, Bartomeu Coll, and Jean-Michel Morel. A review of image denoising algorithms, with a new one. Multiscale modeling & simulation, 4(2):490\u2013530, 2005.   \n[11] Richard Zhang, Phillip Isola, and Alexei A Efros. Colorful image colorization. In Computer Vision\u2013ECCV 2016: 14th European Conference, Amsterdam, The Netherlands, October 11-14, 2016, Proceedings, Part III 14, pages 649\u2013666. Springer, 2016.   \n[12] Yoav Shechtman, Yonina C Eldar, Oren Cohen, Henry Nicholas Chapman, Jianwei Miao, and Mordechai Segev. Phase retrieval with application to optical imaging: a contemporary overview. IEEE signal processing magazine, 32(3):87\u2013109, 2015.   \n[13] Morteza Mardani, Enhao Gong, Joseph Y. Cheng, Shreyas S. Vasanawala, Greg Zaharchuk, Lei Xing, and John M. Pauly. Deep generative adversarial neural networks for compressive sensing mri. IEEE Transactions on Medical Imaging, 38(1):167\u2013179, 2019.   \n[14] Yang Song, Liyue Shen, Lei Xing, and Stefano Ermon. Solving inverse problems in medical imaging with score-based generative models. In International Conference on Learning Representations, 2022.   \n[15] Hyungjin Chung, Dohoon Ryu, Michael T McCann, Marc L Klasky, and Jong Chul Ye. Solving 3d inverse problems using pre-trained 2d diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22542\u201322551, 2023.   \n[16] Andreas Schuhmacher, J\u00f8rgen Hald, Karsten Bo Rasmussen, and Per Christian Hansen. Sound source reconstruction using inverse boundary element calculations. The Journal of the Acoustical Society of America, 113(1):114\u2013127, 2003.   \n[17] Antonio Pereira, J\u00e9r\u00f4me Antoni, and Quentin Leclere. Empirical bayesian regularization of the inverse acoustic problem. Applied Acoustics, 97:11\u201329, 2015.   \n[18] Bahjat Kawar, Gregory Vaksman, and Michael Elad. Snips: Solving noisy inverse problems stochastically. Advances in Neural Information Processing Systems, 34:21757\u201321769, 2021.   \n[19] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2021.   \n[20] Bahjat Kawar, Michael Elad, Stefano Ermon, and Jiaming Song. Denoising diffusion restoration models. Advances in Neural Information Processing Systems, 35:23593\u201323606, 2022.   \n[21] Yinhuai Wang, Jiwen Yu, and Jian Zhang. Zero-shot image restoration using denoising diffusion null-space model. The Eleventh International Conference on Learning Representations, 2023.   \n[22] Jiaming Song, Arash Vahdat, Morteza Mardani, and Jan Kautz. Pseudoinverse-guided diffusion models for inverse problems. In International Conference on Learning Representations, 2022.   \n[23] Hyungjin Chung, Jeongsol Kim, Michael Thompson Mccann, Marc Louis Klasky, and Jong Chul Ye. Diffusion posterior sampling for general noisy inverse problems. In The Eleventh International Conference on Learning Representations, 2023.   \n[24] Morteza Mardani, Jiaming Song, Jan Kautz, and Arash Vahdat. A variational perspective on solving inverse problems with diffusion models. In The Twelfth International Conference on Learning Representations, 2024.   \n[25] Brian L. Trippe, Jason Yim, Doug Tischer, David Baker, Tamara Broderick, Regina Barzilay, and Tommi S. Jaakkola. Diffusion probabilistic modeling of protein backbones in 3d for the motifscaffolding problem. In The Eleventh International Conference on Learning Representations, 2023.   \n[26] Gabriel Cardoso, Yazid Janati el idrissi, Sylvain Le Corff, and Eric Moulines. Monte carlo guided denoising diffusion models for bayesian linear inverse problems. In The Twelfth International Conference on Learning Representations, 2024.   \n[27] Zehao Dou and Yang Song. Diffusion posterior sampling for linear inverse problem solving: A filtering perspective. In The Twelfth International Conference on Learning Representations, 2024.   \n[28] Alexandros Graikos, Nikolay Malkin, Nebojsa Jojic, and Dimitris Samaras. Diffusion models as plug-and-play priors. Advances in Neural Information Processing Systems, 35:14715\u201314728, 2022.   \n[29] Gen Li and Yuling Yan. ${\\cal O}({\\bf d}/T)$ convergence theory for diffusion probabilistic models under minimal assumptions. arXiv preprint arXiv:2409.18959, 2024.   \n[30] Gen Li, Yuting Wei, Yuxin Chen, and Yuejie Chi. Towards non-asymptotic convergence for diffusion-based generative models. In The Twelfth International Conference on Learning Representations, 2024.   \n[31] Gen Li and Changxiao Cai. Provable acceleration for diffusion models under minimal assumptions. arXiv preprint arXiv:2410.23285, 2024.   \n[32] Calvin Luo. Understanding diffusion models: A unified perspective. arXiv preprint arXiv:2208.11970, 2022.   \n[33] Bradley Efron. Tweedie\u2019s formula and selection bias. Journal of the American Statistical Association, 106(496):1602\u20131614, 2011.   \n[34] Bowen Song, Soo Min Kwon, Zecheng Zhang, Xinyu Hu, Qing Qu, and Liyue Shen. Solving inverse problems with latent diffusion models via hard data consistency. In The Twelfth International Conference on Learning Representations, 2024.   \n[35] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A largescale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition, pages 248\u2013255. Ieee, 2009.   \n[36] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780\u20138794, 2021.   \n[37] Zhou Wang, Alan C Bovik, Hamid R Sheikh, and Eero P Simoncelli. Image quality assessment: from error visibility to structural similarity. IEEE transactions on image processing, 13(4):600\u2013 612, 2004.   \n[38] Richard Zhang, Phillip Isola, Alexei A Efros, Eli Shechtman, and Oliver Wang. The unreasonable effectiveness of deep features as a perceptual metric. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 586\u2013595, 2018.   \n[39] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. Advances in neural information processing systems, 30, 2017.   \n[40] Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild. In Proceedings of International Conference on Computer Vision (ICCV), December 2015.   \n[41] Tero Karras, Samuli Laine, and Timo Aila. A style-based generator architecture for generative adversarial networks. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 4401\u20134410, 2019.   \n[42] James R Fienup. Phase retrieval algorithms: a comparison. Applied optics, 21(15):2758\u20132769, 1982.   \n[43] C Fienup and J Dainty. Phase retrieval and image reconstruction for astronomy. Image recovery: theory and application, 231:275, 1987.   \n[44] Jose A Rodriguez, Rui Xu, C-C Chen, Yunfei Zou, and Jianwei Miao. Oversampling smoothness: an effective algorithm for phase retrieval of noisy diffraction intensities. Journal of applied crystallography, 46(2):312\u2013318, 2013.   \n[45] Giorgio Mariani, Irene Tallini, Emilian Postolache, Michele Mancusi, Luca Cosmo, and Emanuele Rodol\u00e0. Multi-source diffusion models for simultaneous music generation and separation. In The Twelfth International Conference on Learning Representations, 2024.   \n[46] Emilian Postolache, Giorgio Mariani, Luca Cosmo, Emmanouil Benetos, and Emanuele Rodol\u00e0. Generalized multi-source inference for text conditioned music diffusion models. In ICASSP 2024-2024 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 6980\u20136984. IEEE, 2024.   \n[47] Ethan Manilow, Gordon Wichern, Prem Seetharaman, and Jonathan Le Roux. Cutting music source separation some slakh: A dataset to study the impact of training data quality and quantity. In 2019 IEEE Workshop on Applications of Signal Processing to Audio and Acoustics (WASPAA), pages 45\u201349. IEEE, 2019.   \n[48] Jonathan Le Roux, Scott Wisdom, Hakan Erdogan, and John R Hershey. Sdr\u2013half-baked or well done? In ICASSP 2019-2019 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 626\u2013630. IEEE, 2019.   \n[49] Ethan Manilow, Curtis Hawthorne, Cheng-Zhi Anna Huang, Bryan Pardo, and Jesse Engel. Improving source separation by explicitly modeling dependencies between sources. In ICASSP 2022-2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 291\u2013295. IEEE, 2022.   \n[50] Kevin Kilgour, Mauricio Zuluaga, Dominik Roblek, and Matthew Sharif.i Fr\u00e9chet Audio Distance: A Reference-Free Metric for Evaluating Music Enhancement Algorithms. In Proc. Interspeech 2019, pages 2350\u20132354, 2019.   \n[51] Charles M Stein. Estimation of the mean of a multivariate normal distribution. The annals of Statistics, pages 1135\u20131151, 1981.   \n[52] Xiangming Meng and Yoshiyuki Kabashima. Diffusion model based posterior sampling for noisy linear inverse problems. arXiv preprint arXiv:2211.12343, 2022.   \n[53] Yuanzhi Zhu, Kai Zhang, Jingyun Liang, Jiezhang Cao, Bihan Wen, Radu Timofte, and Luc Van Gool. Denoising diffusion models for plug-and-play image restoration. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 1219\u20131229, 2023.   \n[54] Yu M Bruck and LG Sodin. On the ambiguity of the image reconstruction problem. Optics communications, 30(3):304\u2013308, 1979.   \n[55] MHMH Hayes. The reconstruction of a multidimensional sequence from the phase or magnitude of its fourier transform. IEEE Transactions on Acoustics, Speech, and Signal Processing, 30(2):140\u2013154, 1982.   \n[56] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. Advances in Neural Information Processing Systems, 35:26565\u201326577, 2022. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In the appendix, we provide further details and additional experimental results omitted in the main text. First, we present the complete derivations of the propositions for the ProjDiff algorithm (Appendix A), and then provide the derivations for ProjDiff in the variance exploding setting (Appendix B). Next, we present additional numerical results. For the image restoration tasks, we report the results of noisefree scenarios on the ImageNet dataset, both noise-free and noisy scenarios on the CelebA dataset, the nonlinear HDR task on the FFHQ dataset, and the ablation studies (Appendix C). For source separation and partial generation tasks, results on the MSDM model, and ablation experiments with waveform visualizations are shown in Appendix D. Then we provide the details of the experiments, including the mathematical form of the inverse problems, and the details for calculating metrics (Appendix E). The implementation details of ProjDiff for various inverse problems are discussed in Appendix F, especially the details for the phase retrieval task and high dynamic range task. Discussion about the performance gap between ProjDiff and the MAP framework is presented in Appendix G. Algorithm blocks for all kinds of ProjDiff used in this work are outlined in Appendix H. Finally, we include more visualizations of the restoration results to present the performance of ProjDiff intuitively in Appendix I. ", "page_idx": 13}, {"type": "text", "text": "A Derivation for ProjDiff in VP diffusion ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Preliminaries and lemmas ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Assume $\\mathbf{y}=\\mathbf{Ax}_{0}+\\mathbf{n}=[\\mathbf{I}_{m_{\\mathbf{y}}},\\mathbf{0}]\\mathbf{x}_{0}+\\mathbf{n}$ . For general linear observations, SVD can be used to reach this decoupled form in the spectral domain. We rewrite the observation equation as ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{y}^{\\prime}=\\left[\\mathbf{I}_{m_{\\mathbf{y}}},\\mathbf{0}\\right]\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\mathbf{n}^{\\prime}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\overline{{\\alpha}}_{t_{a}}\\,=\\,1/\\bigl(1+\\sigma^{2}\\bigr)$ for some $t_{a}\\,\\in\\,[0,1,\\ldots,T]$ , $\\mathbf{y}^{\\prime}=\\sqrt{\\overline{{\\alpha}}_{t a}}\\mathbf{y}$ and $\\mathbf{n}^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}_{m_{\\mathbf{x}}})$ . This makes the $\\mathbf{y}^{\\prime}$ a noise-free observation for a sample at time step $t_{a}$ , namely the auxiliary variable ${\\bf x}_{t_{a}}$ . We consider the DDIM reference distribution as ", "page_idx": 13}, {"type": "equation", "text": "$$\nq_{\\sigma}(\\mathbf{x}_{1:T}|\\mathbf{x}_{0})=q_{\\sigma}(\\mathbf{x}_{T}|\\mathbf{x}_{0})\\prod_{t=2}^{T}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0}),\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where the transition probability follows ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{q_{\\sigma}}({\\bf x}_{T}|{\\bf x}_{0})=\\mathcal{N}({\\bf0},{\\bf I}),}\\\\ {{q_{\\sigma}}({\\bf x}_{t-1}|{\\bf x}_{t},{\\bf x}_{0})=\\mathcal{N}\\left({\\bf x}_{t-1};\\sqrt{\\overline{{\\alpha}}_{t-1}}{\\bf x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\tilde{\\sigma}_{t}^{2}}\\frac{{\\bf x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}}{\\bf x}_{0}}{\\sqrt{1-\\overline{{\\alpha}}_{t}}},\\tilde{\\sigma}_{t}^{2}{\\bf I}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\tilde{\\sigma}_{t}$ is the variance hyperparameter in DDIM. We further choose $\\begin{array}{r l r l}{\\tilde{\\sigma}_{t}}&{{}=}&{\\sigma_{t}}&{{}=}\\end{array}$ $\\begin{array}{r l}{\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t-1}}}}&{{}}\\end{array}$ for $t>t_{a}$ , which makes the stochastic process between $t_{a}$ and $T$ Markov. For $t\\leq t_{a}$ , we leave $\\tilde{\\sigma}_{t}$ a hyperparameter. Thus the reference distribution can be rewritten as ", "page_idx": 13}, {"type": "equation", "text": "$$\nq_{\\sigma}(\\mathbf{x}_{1:T}|\\mathbf{x}_{0})=q_{\\sigma}(\\mathbf{x}_{T}|\\mathbf{x}_{t_{a}})q_{\\sigma}(\\mathbf{x}_{t_{a}}|\\mathbf{x}_{0})\\prod_{t=2}^{t_{a}}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})\\prod_{t=t_{a}+2}^{T}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{t}).\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Thus ", "page_idx": 13}, {"type": "equation", "text": "$$\nq_{\\sigma}(\\mathbf{x}_{1:T\\backslash t_{a}}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{0})=q_{\\sigma}(\\mathbf{x}_{T}|\\mathbf{x}_{t_{a}})\\prod_{t=2}^{t_{a}}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})\\prod_{t=t_{a}+2}^{T}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{t}).\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "The following Lemma regarding transition probabilities can be proved by induction. ", "page_idx": 13}, {"type": "text", "text": "Lemma 1. The conditional distribution of $\\mathbf{x}_{t}$ conditioning on ${\\bf x}_{t_{a}}$ and $\\mathbf{x}_{\\mathrm{0}}$ is ", "page_idx": 13}, {"type": "equation", "text": "$$\nq_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{0})=\\left\\{\\mathcal{N}\\left(\\mathbf{x}_{t};\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}},(1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}})\\,\\mathbf{I}\\right)\\right.\\quad\\hfill t>t_{a};}\\\\ {\\left.\\mathcal{N}\\left(\\mathbf{x}_{t};\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}\\left(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}\\right)/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}},\\zeta_{t}^{2}\\mathbf{I}\\right)\\right.\\quad t\\leq t_{a},}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\gamma_{t}=\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}-\\tilde{\\sigma}_{t_{a}}^{2}}\\prod_{k=t}^{t_{a}-1}\\frac{\\sqrt{1-\\overline{{\\alpha}}_{k}-\\tilde{\\sigma}_{k+1}^{2}}}{\\sqrt{1-\\overline{{\\alpha}}_{k+1}}},\\zeta_{t}=\\sqrt{\\sum_{k=t}^{t_{a}-1}\\tilde{\\sigma}_{k+1}^{2}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Proof. When $t>t_{a}$ , (30) holds as the chain between $t_{a}$ and $T$ Markov. ", "page_idx": 14}, {"type": "text", "text": "When $t<t_{a}$ , (30) and (31) holds when $t=t_{a}$ as it is equal to the DDIM reference distribution. We assume (30) and (31) holds when $t=t_{0}\\in\\{1,2,\\ldots,t_{a}\\}$ , then when $t=t_{0}-1$ , we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{q_{\\sigma}\\big(\\mathbf{x}_{t_{0}-1}\\vert\\mathbf{x}_{t_{a}},\\mathbf{x}_{0}\\big)=\\int\\mathrm{d}\\mathbf{x}_{t_{0}}q_{\\sigma}\\big(\\mathbf{x}_{t_{0}-1},\\mathbf{x}_{t_{0}}\\vert\\mathbf{x}_{t_{a}},\\mathbf{x}_{0}\\big)}}\\\\ &{}&{=\\int\\mathrm{d}\\mathbf{x}_{t_{0}}q_{\\sigma}\\big(\\mathbf{x}_{t_{0}-1}\\vert\\mathbf{x}_{t_{0}},\\mathbf{x}_{0}\\big)q_{\\sigma}\\big(\\mathbf{x}_{t_{0}}\\vert\\mathbf{x}_{t_{a}},\\mathbf{x}_{0}\\big).}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "$q_{\\sigma}(\\mathbf{x}_{t_{0}-1}|\\mathbf{x}_{t_{0}},\\mathbf{x}_{0})$ is a Gaussian distribution according to the DDIM refernece distribution, and $q_{\\sigma}(\\mathbf{x}_{t_{0}}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{0})$ is a Gaussian distribution due to the inductive hypothesis. Then by the convolution law of two Gaussian distributions, (30) and (31) hold when $t=t_{0}-1$ . By induction, Lemma 1 concludes. \u53e3 ", "page_idx": 14}, {"type": "text", "text": "The following lemma can be proved using Bayes\u2019s formula. ", "page_idx": 14}, {"type": "text", "text": "Lemma 2. The conditional distribution of $\\mathbf X_{t-1}$ conditioned on ${\\bf x}_{t_{a}}$ and $\\mathbf{x}_{t}$ for $t\\geq t_{a}+2$ is ", "page_idx": 14}, {"type": "equation", "text": "$$\n[\\sigma\\left(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}}\\right)\\!=\\!\\mathcal{N}\\left(\\mathbf{x}_{t-1};\\sqrt{\\overline{{\\alpha}}_{t-1}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t-1}/\\overline{{\\alpha}}_{t_{a}}-\\hat{\\sigma}_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}},\\hat{\\sigma}_{t}^{2}\\mathbf{I}\\right),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\hat{\\sigma}_{t}^{2}=\\left(1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t-1}\\right)\\left(1-\\overline{{\\alpha}}_{t-1}/\\overline{{\\alpha}}_{t_{a}}\\right)/\\left(1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}\\right).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Proof. By Bayes\u2019s formula, ", "page_idx": 14}, {"type": "equation", "text": "$$\nq_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}})=\\frac{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t-1},\\mathbf{x}_{t_{a}})q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t_{a}})}{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}=\\frac{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t-1})q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t_{a}})}{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Substituting the transition probability for $t\\geq t_{a}$ , we obtain the conclusion of Lemma 2. ", "page_idx": 14}, {"type": "text", "text": "The transition probability of $p_{\\theta}$ follows $q_{\\sigma}$ as $p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})=q_{\\sigma}(\\mathbf{x}_{t-1}|\\mu_{\\theta}(\\mathbf{x}_{t},t),\\mathbf{x}_{t})$ for $t\\geq2$ , and $p_{\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})=\\bar{\\mathcal{N}}(\\mathbf{x}_{0};\\mu_{\\theta}(\\mathbf{x}_{1},\\bar{1}),\\tilde{\\sigma}_{1}^{2}\\mathbf{I})$ . ", "page_idx": 14}, {"type": "text", "text": "A.2 Proof of Proposition 1 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Proof. Based on the above preliminaries, we derive the ELBO of $\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})$ as follows: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})=\\log\\int\\mathrm{d}\\mathbf{x}_{1:t\\backslash t_{a}}\\log p_{\\theta}(\\mathbf{x}_{0:T})\\frac{q_{\\sigma}(\\mathbf{x}_{1:T\\backslash t_{a}}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}{q_{\\sigma}(\\mathbf{x}_{1:T\\backslash t_{a}}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\ \\ \\ \\ \\ \\ \\ \\ }\\\\ {\\displaystyle\\geq\\int\\mathrm{d}\\mathbf{x}_{1:t\\backslash t_{a}}\\log\\left(p_{\\theta}(\\mathbf{x}_{T})\\prod_{t=1}^{T}p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})\\frac{q_{\\sigma}(\\mathbf{x}_{1:T\\backslash t_{a}}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}{q_{\\sigma}(\\mathbf{x}_{T}|\\mathbf{x}_{t_{a}})\\prod_{t=2}^{t_{a}}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})\\prod_{t=t_{a}+2}^{T}q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{t_{a}})}\\right)}\\\\ {\\displaystyle=\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{1}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\log p_{\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})-\\sum_{t=2}^{t_{a}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}},\\mathbf{x}_{0})}D_{K L}\\left(q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})\\right||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})\\right)}\\\\ {\\displaystyle.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "equation", "text": "$$\n+\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t_{a}+1}|\\mathbf{x}_{t_{a}})}\\log p_{\\theta}(\\mathbf{x}_{t_{a}}|\\mathbf{x}_{t_{a}+1})-\\sum_{t=t_{a}+2}^{T}D_{K L}(q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}})||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t}))\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The KL divergence between $q_{\\sigma}(\\mathbf{x}_{T}|\\mathbf{x}_{t_{a}})$ and $p_{\\theta}(\\mathbf{x}_{T})$ is zero as they are both $\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ by the setting of diffusion models. Now we handle (1) and (2) respectively. ", "page_idx": 15}, {"type": "text", "text": "(1) $p_{\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})$ is Gaussian and thus we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{1}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\log p_{\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})=c_{1}-\\frac{1}{2\\tilde{\\sigma}_{1}^{2}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{1}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\left|\\left|\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{1},1)\\right|\\right|^{2},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where by writing $c_{i}$ we denote the term independent of $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ . $q_{\\sigma}(\\mathbf{x}_{t-1}\\vert\\mathbf{x}_{t},\\mathbf{x}_{0})$ and $p_{\\theta}\\big(\\mathbf{x}_{t-1}\\big|\\mathbf{x}_{t}\\big)$ are also Gaussian, so by the KL divergence of the Gaussian distributions, we have (for $t\\leq t_{a}$ ) ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\ \\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}D_{K L}(q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}})||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t}))}\\\\ &{=\\!c_{2}+\\frac{1}{2\\tilde{\\sigma}_{t}^{2}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\!\\left|\\!\\left|\\sqrt{\\overline{{\\alpha}}_{t-1}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\tilde{\\sigma}_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}-\\sqrt{\\overline{{\\alpha}}_{t-1}}\\mu_{\\theta}(\\mathbf{x}_{t},t)\\right.\\right.}\\\\ &{\\quad-\\left.\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\tilde{\\sigma}_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}}\\mu_{\\theta}(\\mathbf{x}_{t},t)}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}\\right|\\!\\right|^{2}}\\\\ &{=\\!c_{2}+\\frac{1}{2\\tilde{\\sigma}_{t}^{2}}\\left(\\sqrt{\\overline{{\\alpha}}_{t-1}}-\\frac{\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\tilde{\\sigma}_{t}^{2}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}\\sqrt{\\overline{{\\alpha}}_{t}}\\right)^{2}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)||^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "(2) Similarly, ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t_{a}+1}|\\mathbf{x}_{t_{a}})}\\log p_{\\theta}(\\mathbf{x}_{t_{a}}|\\mathbf{x}_{t_{a}+1})}\\\\ &{=\\!c_{3}-\\frac{1}{2\\sigma_{t_{a}+1}^{2}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t_{a}+1}|\\mathbf{x}_{t_{a}})}\\Bigg|\\Bigg|\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t_{a}+1},t_{a}+1)}\\\\ &{\\quad-\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}\\frac{\\mathbf{x}_{t_{a}+1}-\\sqrt{\\overline{{\\alpha}}_{t_{a}+1}}\\mu_{\\theta}(\\mathbf{x}_{t_{a}+1},t_{a}+1)}{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\Bigg|\\Bigg|^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and for $t\\geq t_{a}+2$ ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\;\\;\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}D_{K L}\\left(q_{\\sigma}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}})||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})\\right)}\\\\ &{=\\!c_{4}+\\frac{1}{2\\sigma_{t}^{2}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}\\bigg|\\bigg|\\sqrt{\\overline{{\\alpha}}_{t-1}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t-1}/\\overline{{\\alpha}}_{t_{a}}-\\hat{\\sigma}_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}}}\\\\ &{\\quad-\\sqrt{\\overline{{\\alpha}}_{t-1}}\\mu_{\\theta}(\\mathbf{x}_{t},t)-\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}}\\mu_{\\theta}(\\mathbf{x}_{t},t)}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}\\bigg|\\bigg|^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Here we apply the reparameterization trick in advance. We write ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{x}_{t}=\\mathbf{x}_{t}(\\epsilon)=\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\epsilon,}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\mathbf{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , since $q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})\\;=\\;\\mathcal{N}(\\mathbf{x}_{t};\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}},(1\\,-\\,\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}})\\mathbf{I})$ for $t\\,\\geq\\,t_{a}\\,+\\,1$ . Substitute this into (39) and we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t+1}\\mid\\mathbf{x}_{t})}\\log p_{\\theta}(\\mathbf{x}_{t_{a}}\\mid\\mathbf{x}_{t_{a}+1})}\\\\ &{=c_{3}+\\mathbb{E}_{\\epsilon\\sim N(0,1)}\\frac{1}{2\\sigma_{t_{a}+1}^{2}}\\Bigg\\|\\left(\\frac{1}{1-\\sqrt{\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}\\frac{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}}{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\right)\\left(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t_{a}+1}(\\epsilon),t_{a}+1)\\right)}\\\\ &{\\quad-\\frac{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}}{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t_{a+1}}}{\\overline{{\\alpha}}_{t_{a}}}}\\epsilon\\Bigg\\|^{2}}\\\\ &{=\\!c_{3}^{\\prime}+\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t_{a}+1}\\mid\\mathbf{x}_{t_{a}}),\\epsilon^{\\prime}\\sim N(0,1)}\\!\\!\\!(\\!t_{a}+1)\\!\\mid\\!\\mid\\mathbf{x}_{t_{a}}-\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t_{a}+1},t_{a}+1)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon\\right)\\mid\\!\\|^{2}}\\\\ &{\\quad+\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t_{a}+1}\\mid\\mathbf{x}_{t_{a}})}w(t_{a}+1)\\!\\Bigg\\langle\\mu_{\\theta}(\\mathbf{x}_{t_{a}+1},t_{a}+1),\\frac{\\mathbf{x}_{t_{a}+1}-\\sqrt{\\alpha}_{t_{a}+1}/\\overline{{\\alpha}}_{t_{a}}}{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}+1/\\overline{{\\alpha}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g(t_{a}+1)=\\!\\frac{1}{2\\sigma_{t_{a}+1}^{2}}\\left(1-\\sqrt{\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\right)^{2},}\\\\ &{w(t_{a}+1)=\\!\\frac{1}{\\sigma_{t_{a}+1}^{2}}\\left(1-\\sqrt{\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\right)\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "And also (40) is (for $t\\geq t_{a}+2)$ ) ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}D_{K L}(q(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{t_{a}})||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t}))}\\\\ &{=\\!c_{4}^{\\prime}+g(t)\\!\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}}),\\epsilon^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}||\\mathbf{x}_{t_{a}}-\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t},t)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right)||^{2}}\\\\ &{\\quad+\\,w(t)\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}})}\\left\\langle\\mu_{\\theta}(\\mathbf{x}_{t},t),\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}}\\right\\rangle,}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "with ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{l l}{{\\displaystyle{\\prime(t)=\\frac{1}{2\\sigma_{t}^{2}}\\left(\\sqrt{\\frac{\\overline{{\\alpha}}_{t-1}}{\\overline{{\\alpha}}_{t_{a}}}}-\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\right)^{2},}}}\\\\ {{\\displaystyle{v(t)\\!=\\!\\frac{1}{\\sigma_{t}^{2}}\\left(\\sqrt{\\overline{{\\alpha}}_{t-1}}-\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{\\overline{{\\alpha}}_{t}}\\right)\\left(\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\!-\\!\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t-1}}{\\overline{{\\alpha}}_{t_{a}}}}\\!-\\!\\hat{\\sigma}_{t}^{2}\\right),}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Thus by integrate (37), (38), (42), and (45), we obtain the Variantional Lower bound of $p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})$ as follows: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\log p_{\\theta}(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\\\ &{\\geq C-\\displaystyle\\sum_{t=1}^{t_{a}}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}\\left(g(t)||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)||^{2}\\right)}\\\\ &{\\quad-\\displaystyle\\sum_{t=t_{a}+1}^{T}\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{t_{a}}),\\epsilon^{\\prime}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left(g(t)\\left|\\left|\\mathbf{x}_{t_{a}}-\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}(\\mathbf{x}_{t},t)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right)\\right|\\right|^{2}\\right.}\\\\ &{\\quad+\\left.w(t)\\left\\langle\\mu_{\\theta}(\\mathbf{x}_{t},t),\\frac{\\mathbf{x}_{t}-\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}}\\right\\rangle\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Here we reach the result of Proposition 1., with the coefficient $g(t)$ is given by ", "page_idx": 16}, {"type": "equation", "text": "$$\ng(t)=\\left\\{\\begin{array}{l l}{\\frac{1}{2\\bar{\\sigma}_{t}^{2}}}&{t=1;}\\\\ {\\frac{1}{2\\bar{\\sigma}_{t}^{2}}\\left(\\sqrt{\\overline{{\\alpha}}_{t-1}}-\\sqrt{1-\\overline{{\\alpha}}_{t-1}-\\tilde{\\sigma}_{t}^{2}}\\frac{\\sqrt{\\overline{{\\alpha}}_{t}}}{\\sqrt{1-\\overline{{\\alpha}}_{t}}}\\right)^{2}}&{2\\leq t\\leq t_{a};}\\\\ {\\frac{1}{2\\sigma_{t_{a}+1}^{2}}\\left(1-\\sqrt{\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\right)^{2}}&{t=t_{a}+1;}\\\\ {\\frac{1}{2\\sigma_{t}^{2}}\\left(\\sqrt{\\frac{\\overline{{\\alpha}}_{t-1}}{\\overline{{\\alpha}}_{t_{a}}}}-\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t-1}-\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\right)^{2}}&{t_{a}+2\\leq t\\leq T,}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and $w(t)$ is give by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r}{v(t)\\!=\\!\\left\\{\\!\\begin{array}{l l}{\\!\\frac{1}{\\sigma_{t_{a}+1}^{2}}\\left(1-\\sqrt{\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\alpha_{t_{a}}}}\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\right)\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t_{a}}-\\sigma_{t_{a}+1}^{2}}{1-\\overline{{\\alpha}}_{t_{a}+1}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t_{a}+1}}{\\overline{{\\alpha}}_{t_{a}}}}}&{t\\!=\\!t_{a}\\!+\\!1;}\\\\ {\\!\\frac{1}{\\sigma_{t}^{2}}\\!\\left(\\!\\sqrt{\\overline{{\\alpha}}_{t-1}}\\!-\\!\\sqrt{\\frac{1\\overline{{\\alpha}}_{t_{a}}\\!-\\!\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{\\overline{{\\alpha}}_{t}}\\right)\\!\\left(\\!\\sqrt{\\frac{1\\!-\\!\\overline{{\\alpha}}_{t-1}\\!-\\!\\sigma_{t}^{2}}{1-\\overline{{\\alpha}}_{t}}}\\!\\sqrt{1\\!-\\!\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\!-\\!\\sqrt{1\\!-\\!\\frac{\\overline{{\\alpha}}_{t-1}}{\\overline{{\\alpha}}_{t_{a}}}}\\!-\\!\\hat{\\sigma}_{t}^{2}\\!\\right)}&{t\\!\\geq\\!t_{a}\\!+\\!2.}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "A.3 Proof of Proposition 2 ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Proof. We continue the derivation by using the reparameterization trick. The reparameterization of (42) and (45) has been given above, we focus on (37) and (38) now. Applying Lemma 1, we can reparameterize them as ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{q_{\\sigma}(\\mathbf{x}_{t}|\\mathbf{x}_{0},\\mathbf{x}_{t_{a}})}||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{t},t)||^{2}}\\\\ &{~=\\mathbb{E}_{\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left|\\left|\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}\\left(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}\\right)/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}+\\zeta_{t}\\epsilon,t\\right)\\right|\\right|^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "We further disregard all the constants. The proxy objective for minimization can be rewritten as follows ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{\\gamma}{2\\left(\\mathbf{x}_{0},\\mathbf{x}_{t_{a}}\\right)}=\\displaystyle\\sum_{t=1}^{t_{a}}\\mathbb{E}_{\\epsilon\\sim N(\\mathbf{0},\\mathbf{I})}g(t)\\left\\|\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}\\frac{\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0}}{\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}}+\\zeta_{t}\\epsilon,t\\right)\\right\\|^{2}}\\\\ &{+\\displaystyle\\sum_{t=t_{a}+1}^{T}\\mathbb{E}_{\\epsilon,\\epsilon^{\\prime}\\sim N(\\mathbf{0},\\mathbf{I})}g(t)\\left(\\left\\|\\mathbf{x}_{b}-\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}\\left(\\sqrt{\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t_{a}}}}\\epsilon,t\\right)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right)\\right\\|^{2}\\right.}\\\\ &{+\\displaystyle\\left.\\frac{w(t)}{g(t)}\\left\\langle\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\epsilon,t\\right),\\epsilon\\right\\rangle\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Now we seek for stochastic gradients of $L$ . Sampling $t\\sim\\mathcal{U}\\left\\{1,2,\\ldots,T\\right\\}$ and $\\epsilon,\\epsilon^{\\prime}\\in\\mathcal{N}(\\mathbf{0,I})$ , the stochastic gradient with respect to $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ are, respectively, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbf{d}_{\\mathbf{x}_{0},t}=\\left\\{\\nabla_{\\mathbf{x}_{0}}\\left|\\left|\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0})/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}+\\zeta_{t}\\epsilon,t\\right)\\right|\\right|^{2}\\right.\\right.\\left.t\\leq t_{a};\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "and ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{l}_{\\mathbf{x}_{t,t}}=\\left\\{\\begin{array}{l l}{\\nabla_{\\mathbf{x}_{t,a}}\\left||\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0})/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}+\\zeta_{t}\\epsilon,t\\right)\\right|^{2}}&{t\\leq t_{a};}\\\\ {\\nabla_{\\mathbf{x}_{t_{a}}}\\left||\\mathbf{x}_{t_{a}}-\\left(\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}/\\overline{{\\alpha}}_{t_{a}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}/\\overline{{\\alpha}}_{t_{a}}}\\epsilon,t\\right)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right)||^{2}}&{}\\\\ {\\quad+w(t)/g(t)\\nabla_{\\mathbf{x}_{t_{a}}}\\left<\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}/\\overline{{\\alpha}}_{t_{a}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}}/\\overline{{\\alpha}}_{t_{a}}\\epsilon,t\\right),\\epsilon\\right>}&{t>t_{a},}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where the coefficient $g(t)$ is omitted as it can be scaled into the step size. Here we reach the result of Proposition 2 in the main text. \u53e3 ", "page_idx": 17}, {"type": "text", "text": "A.4 Gradient truncation and remarks ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In practice, we truncate the gradient through $\\pmb{\\mu_{\\theta}}$ , i.e., we let ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{D}_{\\mathbf{x}_{0}}\\pmb{\\mu}_{\\theta}(\\cdot)=\\mathbf{D}_{\\mathbf{x}_{t_{a}}}\\pmb{\\mu}_{\\theta}(\\cdot)=\\mathbf{0}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Thus the approximate stochastic gradients are, respectively, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}=\\left\\{\\begin{array}{l l}{\\mathbf{x}_{0}-\\mu_{\\theta}\\left(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\gamma_{t}(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{0})/\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}+\\zeta_{t}\\epsilon,t\\right)}&{t\\leq t_{a};}\\\\ {\\mathbf{0}}&{t>t_{a},}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "and ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\tilde{\\mathbf{d}}_{\\mathbf{x}_{t_{a}},t}=\\left\\{\\begin{array}{l l}{\\mathbf{0}}&{t\\leq t_{a};}\\\\ {\\mathbf{x}_{t_{a}}-(\\sqrt{\\bar{\\alpha}_{t_{a}}}\\mu_{\\theta}(\\sqrt{\\bar{\\alpha}_{t}/\\bar{\\alpha}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t}/\\bar{\\alpha}_{t_{a}}}\\mathbf{\\bar{\\epsilon}},t)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\mathbf{\\bar{\\epsilon}}^{\\prime})}&{t>t_{a}.}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "At this point, we obtain the approximate stochastic gradients of the objective function with respect to the two variables $\\mathbf{x}_{\\mathrm{0}}$ and ${\\bf x}_{t_{a}}$ . We can perform gradient descent on $\\mathbf{x}_{\\mathrm{0}}$ and the projection gradient method on ${\\bf x}_{t_{a}}$ to solve the problem. ", "page_idx": 17}, {"type": "text", "text": "Remark: ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "1. The idea of introducing a new noise $\\epsilon^{\\prime}$ is to ensure that the update direct\u221aion of ${\\bf x}_{t_{a}}$ rem\u221aains as much as possible within the manifold at time step $t_{a}$ . The expression $-\\left(\\mathbf{x}_{t_{a}}-\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\mu_{\\pmb\\theta}(\\cdot)-\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}\\right))$ ", "page_idx": 17}, {"type": "text", "text": "can be viewed as a vector pointing from $\\mathbf{x}_{t_{a}}$ to $\\sqrt{\\overline{{\\alpha}}_{t_{a}}}\\pmb{\\mu}_{\\theta}(\\cdot)+\\sqrt{1-\\overline{{\\alpha}}_{t_{a}}}\\epsilon^{\\prime}$ . As $\\mu_{\\theta}(\\cdot)$ is close to the manifold of $\\mathbf{x}_{\\mathrm{0}}$ , the introduction of $\\epsilon^{\\prime}$ allows the endpoint of the gradient vector to be close to the manifold at time $t_{a}$ . ", "page_idx": 18}, {"type": "text", "text": "2. For a general linear observation equation, the derivation remains similar when transforming the observations into the spectral domain using SVD. Due to potentially differing noise levels for each component, the objective function will take on an element-wise form. This is based on the fact that in the diffusion model, we assume that the elements of $\\mathbf{x}_{t-1}$ are independent when conditioning on $\\mathbf{x}_{t}$ . ", "page_idx": 18}, {"type": "text", "text": "3. In practice, w\u221ae find that setting the DDIM variance $\\tilde{\\sigma}_{t}=0$ for $t\\leq t_{a}$ yields the best results, which results in $\\gamma_{t}={\\sqrt{1-{\\overline{{\\alpha}}}_{t}}}$ and $\\zeta_{t}=0$ . But this poses a problem as it leads to $g(t)\\rightarrow\\infty$ . In this work, we still scale all the coefficients $g(t)$ into the step sizes as it works well in the experiments. We leave this issue for future research. ", "page_idx": 18}, {"type": "text", "text": "4. Note that one may find $t_{a}$ is not an integer in practice, as $\\overline{{\\alpha}}_{t_{a}}$ may not be in the discrete series $\\overline{{\\alpha}}_{0:T}$ . This won\u2019t affect our algorithm, as it can be derived similarly that the approximate stochastic gradients in (56) and (57) still hold. The only difference lies in the initialization of $\\mathbf{x}_{\\mathrm{0}}$ which will be discussed in Appendix F. ", "page_idx": 18}, {"type": "text", "text": "5. We use the $\\pmb{\\mu}$ -predictor in\u221a the derivation. T\u221ahe case of $\\epsilon$ -predictor is similar, with the conversion given by $\\mu_{\\theta}(\\dot{\\mathbf{x}}_{t})\\dot{=}\\left(\\mathbf{x}_{t}-\\sqrt{1-\\overline{{\\alpha}}_{t}}\\epsilon_{\\theta}(\\mathbf{x}_{t})\\right)/\\sqrt{\\overline{{\\alpha}}_{t}}$ . We refer to [19, 32] for more details about the relation between the $\\pmb{\\mu}$ -predictor, the $\\epsilon$ -predictor and the Stein score [51]. ", "page_idx": 18}, {"type": "text", "text": "B ProjDiff for VE diffusion ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "In this section, we derive the ProjDiff algorithm for the Variance Exploding (VE) diffusion used in the source separation and partial generation tasks. The experiments using VE diffusion in this work are all noise-free, thus we only focus on the noise-free scenarios and leave the noisy scenarios of VE diffusion for future work. ", "page_idx": 18}, {"type": "text", "text": "Consider the forward transition probability $q(\\mathbf{x}_{t}|\\mathbf{x}_{t-1})=\\mathcal{N}(\\mathbf{x}_{t};\\mathbf{x}_{t-1},(\\overline{{\\sigma}}_{t}^{2}-\\overline{{\\sigma}}_{t-1}^{2})\\mathbf{I})$ , with $\\overline{{\\sigma}}_{T}>$ $\\overline{{\\sigma}}_{T-1}\\;>\\;\\cdot\\cdot\\;>\\;\\overline{{\\sigma}}_{1}\\;>\\;\\overline{{\\sigma}}_{0}\\;\\rightarrow\\;0$ . When $\\overline{{\\sigma}}_{T}$ is large enough, $q(\\mathbf{x}_{T})\\,\\approx\\,\\mathcal{N}(\\mathbf{0},\\sigma_{T}^{2}\\mathbf{I})$ . The initial distribution of the reverse process is set to be $p_{\\pmb\\theta}(\\mathbf{\\bar{x}}_{T})\\,=\\,\\mathbf{\\bar{\\mathcal{N}}}(\\bar{\\mathbf{0}},\\sigma_{T}^{2}\\mathbf{I})\\,\\approx\\,q(\\mathbf{x}_{T})$ and the reverse transition in the DDPM manner is ", "page_idx": 18}, {"type": "equation", "text": "$$\np_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})=\\mathcal{N}\\left(\\mathbf{x}_{t-1};\\mu_{\\theta}(\\mathbf{x}_{t},t)+\\frac{\\overline{{\\sigma}}_{t-1}^{2}}{\\overline{{\\sigma}}_{t}^{2}}(\\mathbf{x}_{t}-\\mu_{\\theta}(\\mathbf{x}_{t},t)),\\frac{\\overline{{\\sigma}}_{t-1}^{2}(\\overline{{\\sigma}}_{t}^{2}-\\overline{{\\sigma}}_{t-1}^{2})}{\\overline{{\\sigma}}_{t}^{2}}\\mathbf{I}\\right),\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "for $t\\geq2$ , which matches the condition probability ", "page_idx": 18}, {"type": "equation", "text": "$$\nq(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})=\\mathcal{N}\\left(\\mathbf{x}_{t-1};\\mathbf{x}_{0}+\\frac{\\overline{{\\sigma}}_{t-1}^{2}}{\\overline{{\\sigma}}_{t}^{2}}(\\mathbf{x}_{t}-\\mathbf{x}_{0}),\\frac{\\overline{{\\sigma}}_{t-1}^{2}(\\overline{{\\sigma}}_{t}^{2}-\\overline{{\\sigma}}_{t-1}^{2})}{\\overline{{\\sigma}}_{t}^{2}}\\mathbf{I}\\right).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "And we assume the last sampling step is set to be ", "page_idx": 18}, {"type": "equation", "text": "$$\np_{\\pmb\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})=\\mathcal{N}(\\mathbf{x}_{0};\\pmb{\\mu}_{\\pmb\\theta}(\\mathbf{x}_{1},1),\\delta_{0}^{2}\\mathbf{I}),\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "for some small $\\delta_{0}$ . ", "page_idx": 18}, {"type": "text", "text": "Thus the ELBO is derived as the same in DDPM [2]. ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\log p_{\\theta}(\\mathbf{x}_{0})=\\log\\int_{t=1}^{T}p_{\\theta}(\\mathbf{x}_{0:T})\\frac{q(\\mathbf{x}_{1:T}|\\mathbf{x}_{0})}{q\\left(\\mathbf{x}_{1:T}|\\mathbf{x}_{0}\\right)}\\mathrm{d}\\mathbf{x}_{1:T}}\\\\ &{\\qquad\\qquad\\geq c-D_{K L}(q(\\mathbf{x}_{T}|\\mathbf{x}_{0})||p_{\\theta}(\\mathbf{x}_{T}))+\\mathbb{E}_{q(\\mathbf{x}_{1}|\\mathbf{x}_{0})}\\log p_{\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})}\\\\ &{\\qquad\\qquad\\qquad-\\displaystyle\\sum_{t=2}^{T}\\mathbb{E}_{q(\\mathbf{x}_{t}|\\mathbf{x}_{0})}D_{K L}(q(\\mathbf{x}_{t-1}|\\mathbf{x}_{t},\\mathbf{x}_{0})||p_{\\theta}(\\mathbf{x}_{t-1}|\\mathbf{x}_{t})).}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "$D_{K L}(q(\\mathbf{x}_{T}|\\mathbf{x}_{0})||p_{\\theta}(\\mathbf{x}_{T}))\\approx0$ , and $\\begin{array}{r}{\\log p_{\\pmb\\theta}(\\mathbf{x}_{0}|\\mathbf{x}_{1})=c_{1}\\!-\\!\\frac{1}{2\\delta_{0}^{2}}||\\mathbf{x}_{0}\\!-\\!\\mu_{\\theta}(\\mathbf{x}_{1},1)||^{2}}\\end{array}$ . The KL divergence between $q(\\mathbf{x}_{t-1}\\vert\\mathbf{x}_{t},\\mathbf{x}_{0})$ and $p_{\\theta}\\big(\\mathbf{x}_{t-1}\\big|\\mathbf{x}_{t}\\big)$ is ", "page_idx": 18}, {"type": "equation", "text": "$$\nD_{K L}(q({\\bf x}_{t-1}|{\\bf x}_{t},{\\bf x}_{0})|p_{\\theta}({\\bf x}_{t-1}|{\\bf x}_{t}))=c_{2}+\\frac{\\overline{{\\sigma}}_{t}^{2}-\\overline{{\\sigma}}_{t-1}^{2}}{2\\overline{{\\sigma}}_{t-1}^{2}\\overline{{\\sigma}}_{t}^{2}}||{\\bf x}_{0}-\\mu_{\\theta}({\\bf x}_{t},t)||^{2},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/bb4d5f780af114bd009c438d9ef6cb4e61aae667af0c0271474d8efb17a75df7.jpg", "table_caption": ["Table 5: Noise-free restoration on ImageNet dataset. LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "for $t\\geq2$ . Then by reparameterization, we get the Evidence Lower Bound as ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\operatorname{ELBO}_{\\operatorname{VE}}=C-\\sum_{t=1}^{T}s(t)\\mathbb{E}_{\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}||\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{0}+\\overline{{\\sigma}}_{t}\\epsilon,t)||^{2},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "with ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r}{s(t)=\\left\\{\\begin{array}{l l}{\\frac{1}{2\\delta_{0}^{2}}}&{t=1;}\\\\ {\\overline{{\\sigma}}_{t}^{2}\\!-\\!\\overline{{\\sigma}}_{t-1}^{2}}&{2\\leq t\\leq T.}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Sampling $t\\sim\\mathcal{U}\\left\\{1,2,\\ldots,T\\right\\}$ , $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ , and truncating the gradient through $\\pmb{\\mu_{\\theta}}$ as in the VP setting, a stochastic gradient for $\\mathrm{-ELBO_{VE}}$ (for minimization) is ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}=\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{0}+\\overline{{\\sigma}}_{t}\\epsilon,t).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then the iteration step of the ProjDiff (noise-free) in the VE setting is ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r}{(\\mathrm{ProjDiff~for~VE})\\;\\mathbf{x}_{0}\\xleftarrow{}\\mathcal{P}_{\\mathbf{A},\\mathbf{y}}\\left(\\mathbf{x}_{0}-\\eta\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $\\eta$ is the step size. ", "page_idx": 19}, {"type": "text", "text": "The RED-diff [24] algorithm in the VE setting can be derived similarly. In the source separation and partial generation tasks, we use these forms as the implementation of our ProjDiff and RED-diff [24] algorithms. ", "page_idx": 19}, {"type": "text", "text": "Remark: For VE diffusion, the Restricted Encoding method involves fixing the initial noise $\\epsilon_{0}\\sim$ $\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ and reparameterizing the sampling of $\\mathbf{x}_{t}$ as $\\mathbf{x}_{t}=\\mathbf{x}_{0}+\\xi\\epsilon_{0}+\\sqrt{\\overline{{\\sigma}}_{t}^{2}-\\xi^{2}}\\epsilon$ for $\\pmb{\\epsilon}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ . Specifically, we set $\\xi=\\overline{{\\sigma}}_{t-1}$ in partial generation tasks. ", "page_idx": 19}, {"type": "text", "text": "C Additional experiments for image restoration ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "C.1 Additional results ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Here, we present the omitted experiments for image restoration tasks. The results for noise-free restoration tasks on ImageNet are shown in Table 5, the results for noise-free and noisy restoration tasks on CelebA are shown in Table 6 and 7, respectively, and the results for nonlinear high dynamic range (HDR) task are in Table 8. On the CelebA dataset, we further compare ProjDiff with more diffusion based rithms, including \u03a0GDM [22], DMPS [52], Resample [34], and DiffPIR [53]. ProjDiff demonstrates highly competitive performance on all these tasks. ", "page_idx": 19}, {"type": "text", "text": "C.2 Ablation study ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Metrics balance in the super-resolution task. An interesting observation is the trade-off between objective metrics and perceptual metrics in the super-resolution task. DPS achieves the best perceptual metrics but performs poorly on objective metrics, while RED-diff performs well in objective metrics ", "page_idx": 19}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/bfb2a64d0d0492e55533d1f24b3ea007094bb17bf8cadb72ab2bfbe6ab49335b.jpg", "table_caption": ["Table 6: Noise-free restoration on CelebA dataset. LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/379fe2fe152d4cbc6f658270fca5b307246312d1daae12021e85b4101722143a.jpg", "table_caption": ["Table 7: Noisy restoration on CelebA dataset with $\\sigma=0.05$ . LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/7c8f0c1985b0a5c5a79cf51afb57dbf8eef6d09166373b61216c8313a70a88d5.jpg", "table_caption": ["Table 8: HDR results. For noisy observation, the standard deviation is $\\sigma=0.1$ . The LPIPS metric is multiplied by 100. "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "Table 9: Noise-free restoration with 20 steps on ImageNet. The LPIPS metrics are multiplied by 100. ", "page_idx": 20}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/178864f5e4de87d72c7aab466f7de465b8b321f0f809a4323a1aa72672cc4c98.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "Table 10: Noisy restoration with 20 steps on ImageNet $(\\sigma=0.05)$ ). The LPIPS metrics are multiplied by 100. ", "page_idx": 20}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/e1a394f13cd18b83855fb9ee562070bd6e70de4115e48260c53d52100eccd8a3.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/0e5c1e10c9d9c9e9e154a8e8ed0db6f3914a6c947c6aad517cc380e423acabd6.jpg", "img_caption": ["Figure 4: Noise-free super-resolution results on ImageNet. The red lines show the variation of PSNR v.s. FID and LPIPS of ProjDiff algorithm. "], "img_footnote": [], "page_idx": 21}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/2dccd6027c430547f3e860652e31f9a582a5395021a1ef3baa6622f72dd907af.jpg", "table_caption": ["Table 11: Phase retrieval results. The LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "for noise-free super-resolution but declines on perceptual metrics. We find that in the noise-free super-resolution task, the step size of ProjDiff controls the balance between objective and perceptual metrics. Figure 4 presents ProjDiff\u2019s FID-PSNR curve and LPIPS-PSNR curve in the super-resolution task on ImageNet, with step sizes ranging from [1.2, 1.9]. Note that lower values of LPIPS and FID and higher values of PSNR indicate better restoration results, thus the top left corner represents the ideal performance. The red lines demonstrate the variation in objective and perceptual metrics of ProjDiff by adjusting the step size. Also note that ProjDiff exhibits superior performance compared to DDRM, DDNM, DPS and RED-diff. ", "page_idx": 21}, {"type": "text", "text": "Fewer steps. DDRM [20] and DDNM [21] can both address image restoration with fewer steps (20 steps). Here we test the performance of the proposed ProjDiff with fewer steps on ImageNet. Table 9 and Table 10 show comparisons of ProjDiff with DDRM and DDNM in three linear restoration tasks under noise-free and noisy observations, respectively. ProjDiff also demonstrates highly competitive performance across multiple metrics, indicating its potential to perform image restoration with fewer steps. ", "page_idx": 21}, {"type": "text", "text": "Four trials for the phase retrieval task. It is noted in [23] that in the phase retrieval task, DPS requires sampling four times for each image and selecting the best result to achieve satisfactory performance. Therefore, we compare the performance of DPS and ProjDiff with four independent samplings. We also report the performance of the ER, HIO, and OSS algorithms with four samplings as baselines. The best image is selected as the sample with the highed PSNR metric. The results are shown in Table 11. Both DPS and ProjDiff show performance improvements with four trials, with ProjDiff in particular exhibiting much better performance, reaching a PSNR of 41.58dB in the noise-free case. ", "page_idx": 21}, {"type": "text", "text": "The impact of the gradient truncation method used in ProjDiff. We compared ProjDiff with and without the gradient truncation method on the CelebA dataset, as shown in Table 12. ProjDiff without gradient truncation is denoted as ProjDiff-FG. The results indicates that there is some performance loss when using gradient truncation compared to not using it, while the efficiency increases by nearly three times. Considering that using gradient truncation has already achieved satisfactory performance, we accept the trade-off of some performance loss for the gain in efficiency. ", "page_idx": 21}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/a8b3f1d40a0087707cd7cebf44746d6eabeb67b4ff7e43538356ebe64345757a.jpg", "table_caption": ["Table 12: Ablation study of the gradient truncation method in ProjDiff on noise-free tasks on CelebA. "], "table_footnote": [], "page_idx": 22}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/c20bb660706e90788d3a0910360251f616076907343be62b4fd7d27a1183822f.jpg", "table_caption": ["Table 13: Using gradient descent to approximate the projection operator. "], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "Using gradient descent to approximate the projection operation for nonlinear tasks. We claim that for general nonlinear tasks, ProjDiff can be applied by using gradient descent to approximate the projection operation. Here we verify this method in the phase retrieval task (ProjDiff-GD in Table 13). The results indicate that approximating the projection operator of $\\mathbf{x}_{\\mathrm{0}}$ with respect to the observation equation by minimizing $||\\mathbf{\\dot{y}}-\\mathcal{A}(\\mathbf{x})||^{\\frac{2}{2}}$ starting from $\\mathbf{x}_{\\mathrm{0}}$ can also achieve satisfactory performance, which suggests that ProjDiff has generalizability for general nonlinear inverse problems. ", "page_idx": 22}, {"type": "text", "text": "Sensitivity tests for the hyperparameters. We conduct the sensitivity tests for the step size $\\eta_{1}$ and noise level $\\sigma_{0}$ in ProjDiff on noisy super-resolution task on CelebA, as shown in Table 14. $\\backprime\\times a'$ denotes that we perturb the input standard deviation of ProjDiff by multiplying $a$ . The results indicate that ProjDiff exhibits a certain degree of robustness to the step size and noise level. This also demonstrates that retaining the equivalent noise level as an adjustable hyperparameter is feasible when it cannot be directly calculated. ", "page_idx": 22}, {"type": "text", "text": "RED-diff with random initialization. The RED-diff algorithm is observed to accidentally fail in the $50\\%$ random inpainting task. Here we demonstrate that by adopting the random initialization method proposed in this work, RED-diff achieves more reasonable results. We compare REDdiff\u2019s performance on ImageNet for both noise-free and noisy inpainting tasks when using random initialization (denoted as \u2018RED-diff with random init\u2019) and using degraded images for initialization as proposed in [24]. The results are shown in Table 15. RED-diff\u2019s performance is significantly improved when using random initialization. ", "page_idx": 22}, {"type": "text", "text": "D Additional results for source separation and partial generation ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "D.1 Results on MSDM model ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Two models were trained in [45]: one is MSDM which models the joint distribution among the four instruments, and the other is ISDM which models the distribution of each instrument independently. ISDM performs better than MSDN in the source separation task as reported in [45]. We have presented ProjDiff\u2019s performance on ISDM in the main text, and here we supplement the experiment on MSDM. The $\\mathrm{SI-SDR_{i}}$ metrics of ProjDiff, RED-diff, MSDM-Gaussian, and MSDM-Dirac are shown in Table 16. ProjDiff also demonstrates the best performance on the MSDM model. ", "page_idx": 22}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/d86947e8a1110fffe04cbf130a47de74aff83e14fff7d0d1d1b4afe1d0a8af6f.jpg", "table_caption": ["Table 14: Ablation study of the hyperparameters in ProjDiff on noisy super-resolution task on CelebA. "], "table_footnote": [], "page_idx": 22}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/0fc189cf3064721e2590091a35cb7bd77c2a8aabd41837f107675a948b2d0b4e.jpg", "table_caption": ["Table 15: Comparison of RED-diff with and without random initialization on ImageNet inpainting task. LPIPS metrics are multiplied by 100. "], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/1531c3f059dcfe34898295b21b139d4110cbd1da2be0e147e63ba446196006f1.jpg", "table_caption": ["Table 16: SI-SDRi metrics on MSDM (higher is better). "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "D.2 Ablation study ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Repetition steps. ProjDiff repeats $N=5$ times on each time step as we state in Section 3.3 in the source separation task, while MSDM-Gaussian and MSDM-Dirac [45] only repeat twice using the correction steps method in [19]. A natural doubt is whether the performance improvement arises from more function evaluations. We test MSDM-Dirac algorithm with more steps, and the results are shown in Table 17. When increasing the correction steps from 2 to 5 which matches the function evaluations of ProjDiff, the performance of MSDM-Dirac declines. This verifies that ProjDiff\u2019s advantage does not simply arise from more function evaluations. Moreover, we test ProjDiff\u2019s performance with more repetitions using the MSDM model, namely 10, 25, and 50 times with the step size adjusting accordingly to stabilize convergence. The step size is set to $0.5/N$ , where $N$ is the number of repetitions. The results are shown in Table 18. Further increasing the number of repetitions leads to even better metrics for ProjDiff. ", "page_idx": 23}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/66467d410ead3e37a777379d748e6d6d06c1543f7b2ce7e0157d079c968d91cf.jpg", "table_caption": ["Table 17: More correction steps for MSDM-Dirac (higher is better). "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Momentum mechanism. We use Polyak momentum in the source separation task. Here we conduct experiments to validate the effectiveness of the momentum mechanism. The results with different momentum hyperparameter $\\beta$ ranging from 0 to 0.9 are shown in Table 19. Setting $\\beta$ to 0.5 yields the best performance. We infer that a certain level of momentum can accelerate convergence, while over large momentum may cause oscillations at small time steps and thus affect the results. This explains why the performance is relatively poor when $\\beta=0.9$ in the source separation task. ", "page_idx": 23}, {"type": "text", "text": "Weak observation problem and Restricted Encoding. Here we further explain why the partial generation task is a weak observation problem. The partial generation task aims to generate the tracks of other instruments based on some instruments, e.g., generating drums, piano, and guitar based on bass. The constraint provided by the observations is very weak, which is because in a musical ensemble, the correlation between different instruments exists but is not significant, and a composer can freely create the melodies of other instruments based on certain instruments\u2019 melodies. Therefore, this is more of a generation task than a restoration task, and we refer to this type of problem as the \u201cweak observation problem\u201d where the constraints provided by the observations are weak. ", "page_idx": 23}, {"type": "text", "text": "Now we verify the effectiveness of the proposed Restricted Encoding method in the partial generation task. While keeping other parameters unchanged, we switch the sampling method of $\\mathbf{x}_{t}$ in ProjDiff from Restricted Encoding to sampling directly from the forward process $q(\\mathbf{x}_{t}|\\mathbf{x}_{0})$ (denoted as \u2018w/o Restricted Encoding\u2019). The results are shown in Table 20. Without Restricted Encoding, the performance of ProjDiff significantly declines. This indicates the importance of Restricted Encoding for the weak observation problem. ", "page_idx": 23}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/3c6e8db8fe4801d200a86d96a8022c80046694326ff80b296a84f0cff5d05778.jpg", "table_caption": ["Table 18: More repetition steps for ProjDiff (higher is better). "], "table_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/c8c67cb323321d3b7971a2739a1c93ee6d41d31899cb25ee9fca62130f4fb5d3.jpg", "table_caption": ["Table 19: Different momentum for ProjDiff (higher is better). "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "Visualization of the waveforms. In the partial generation tasks, an observation is that as the number of generated instruments decreases, the advantage of ProjDiff becomes smaller. We point out this is because the sub-FAD metric considers the combination of the generated and given tracks. Therefore, in cases where more instruments are provided, the combined track is closer to the ground truth, and the difference among different algorithms would be smaller. This can also explain why ProjDiff performs slightly worse than MSDM and RED-diff when generating only the tracks of guitar. This may be because ProjDiff tends to aggressively create new musical segments, thus resulting in a lower similarity to the ground truth set. We present some waveform samples in Figure 5 to verify this claim. The samples are randomly selected and the same row shares the same ID. ProjDiff\u2019s results have larger amplitudes while RED-diff and MSDM\u2019s results tend to remain silent. ", "page_idx": 24}, {"type": "text", "text": "Moreover, following the conventions in acoustics researches, we include some audio samples of ProjDiff in the supplementary materials for subjective evaluation. ", "page_idx": 24}, {"type": "text", "text": "E Experimental details ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "E.1 Inverse problem settings ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Source separation. Denote the tracks of piano, drums, guitar, and bass as ${\\bf x}_{1},{\\bf x}_{2},{\\bf x}_{3},{\\bf x}_{4}\\,\\in\\,\\mathbb{R}^{{\\bf n}}$ , where n represents the length of the sequences. The observation function for source separation is $\\begin{array}{r}{{\\bf y}=\\left((1,\\stackrel{\\cdot}{1},\\stackrel{\\cdot}{1},1)({\\bf x}_{1},{\\bf x}_{2},{\\bf x}_{3},{\\bf x}_{4})^{T}\\right)^{T}=\\stackrel{\\cdot}{\\bf x}_{1}+{\\bf x}_{2}+{\\bf x}_{3}+{\\bf x}_{4}.}\\end{array}$ ", "page_idx": 24}, {"type": "text", "text": "Partial generation. The observation matrix for partial generation is a diagonal matrix with elements of either zero or one, i.e., $\\mathbf{A}=\\operatorname{diag}(a_{11},a_{22},a_{33},a_{44})$ with $a_{11},a_{22},a_{33},a_{44}\\in\\{0,1\\}$ . 0 represents that the corresponding instruments are to be generated while 1 represents that the instrument is provided as the condition. The observation is $\\mathbf{y}=\\left(\\mathbf{A}(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})^{T}\\right)^{T}$ . ", "page_idx": 24}, {"type": "text", "text": "Super-Resolution. The super-resolution task uses $4\\times4$ average pooling as the degradation function, which is quite similar to the source separation task. Consider a $4\\times4$ image block, with elements $\\mathbf{x}_{i,j}\\,\\in\\,\\mathbb{R}^{3},i,j\\,=\\,1,2,3,4$ . The dimension of 3 represents the RGB channels. The observation equation is thus given by $\\begin{array}{r}{\\mathbf{y}=\\frac{1}{16}\\sum_{i,j=1}^{4}\\mathbf{x}_{i,j}}\\end{array}$ . For the entire image, the calculation can be paralleled for all $4\\times4$ blocks using matrix operations in PyTorch. ", "page_idx": 24}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/61fc04b7565180289ebc6696a11786f42f26dbb8c3f3409d3d74a015ca1a2d65.jpg", "table_caption": ["Table 20: Comparison of ProjDiff with and without Restricted Encoding (lower is better). "], "table_footnote": [], "page_idx": 24}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/955ec278cfa3ef58782722fec330b3a5dc262d51dbc31083f80af5c7dcda6e36.jpg", "img_caption": ["Figure 5: Samples of the partial generation results. The results from ProjDiff (left) have larger amplitude, while results from RED-diff (middle) and MSDM (right) have more silent periods. "], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "Random inpainting. The observations matrix for random inpainting is a diagonal matrix of zeros and ones, $\\mathbf{A}={\\bar{\\mathrm{diag}}}\\{a_{k k}\\}$ for $1\\leq k\\leq\\mathrm{n}$ where $\\mathbf{n}$ is the total number of pixels in an image, specifically $256\\times256$ in this work. The diagonal elements $a_{k k}$ have a $50\\%$ chance to be 0 and a $50\\%$ chance to be 1. ", "page_idx": 25}, {"type": "text", "text": "Gaussian deblurring. We follow the settings from [20, 21] for Gaussian deblurring, with a 1D Gaussian kernel of size 5 and a standard deviation of 10. The observation equation is in the form of convolution. Efficient SVD proposed in [20] can be used for calculating the projection operator. ", "page_idx": 25}, {"type": "text", "text": "Phase retrieval. Our experimental setup for phase retrieval follows [23]. The observation is the amplitude spectrum of the original image. However, as the phase retrieval task is highly ill-posed, it is nearly impossible to recover the image directly from the amplitude spectrum. Therefore, we follow the standard practices [54, 55, 23] by first padding the image with zeros and then computing the amplitude spectrum. This increases the spectral resolution and provides more information for retrieval. Thus the observation equation for phase retrieval is $\\mathbf{y}=\\left|\\bar{\\mathbf{D}}\\mathrm{FT}(\\mathbf{P}\\mathbf{x})\\right|$ , where $\\mathbf{P}$ represents the padding operation, which is a linear operator. The original image is $256\\times256$ , and the padding is done with size 64 in four directions, resulting in a padded image of $384\\times384$ . Note that one significant difference between the phase retrieval experiment in this paper and in [23] lies in that [23] reported the best results from 4 independent runs for each image, while we perform all the algorithms once for each image. ", "page_idx": 25}, {"type": "text", "text": "High dynamic range. The observation for the high dynamic range task can be written element-wise as ", "page_idx": 25}, {"type": "equation", "text": "$$\nf(\\mathbf{x}_{i})=\\left\\{\\!\\!\\begin{array}{l l}{-1}&{2\\mathbf{x}_{i}\\leq-1;}\\\\ {2\\mathbf{x}_{i}}&{-1<2\\mathbf{x}_{i}<1;}\\\\ {1}&{2\\mathbf{x}_{i}\\geq1,}\\end{array}\\!\\!\\right.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "i.e., first multiplying all the pixels by 2 and then clipping them within $[-1,1]$ . ", "page_idx": 25}, {"type": "text", "text": "E.2 Hyperparameters for the compared algorithms ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "DDRM. DDRM uses the recommended parameters from [20], i.e. $\\eta=0.85$ and $\\eta_{b}=1.0$ . ", "page_idx": 26}, {"type": "text", "text": "DDNM. DDNM uses the recommended parameter $\\eta=0.85$ from [21]. For noisy tasks, we report the performance of the $\\mathrm{DDNM+}$ algorithm [21]. ", "page_idx": 26}, {"type": "text", "text": "DPS. Following the settings in [23], the step size is set to $\\xi_{t}=\\xi/\\left|\\left|\\mathbf{y}-\\mathcal{A}(\\mu_{\\theta}(\\mathbf{x}_{t}))\\right|\\right|_{2}$ . On ImageNet, $\\xi$ is set to 1 for super-resolution and inpainting tasks, and 0.4 for Gaussian deblurring. Since [23] did not conduct experiments on CelebA, we conducted task-by-task parameter tuning for the learning rate in DPS and reported the results, ensuring a fair comparison. For phase retrieval and high dynamic range tasks, $\\xi=0.4$ . ", "page_idx": 26}, {"type": "text", "text": "RED-diff. First, in the image restoration tasks, we follow the settings in [24] using the Adam optimizer with momentum pairs of (0.9, 0.99). RED-diff requires a balancing parameter $\\lambda$ and a step size lr. $\\lambda$ is set to 0.25 for all image restoration tasks, and the step size lr is set to 0.25 for the super-resolution and 0.5 for all other tasks. However, in the source separation and partial generation tasks, we find that the Adam optimizer yields poor results. Therefore, we run RED-diff with the same parameters used in ProjDiff and set $\\lambda=1.0$ which is tuned to the best. Thus in the source separation task, the momentum is set to 0.5 and the step size is set to 0.1 with 5 repetitions. In the partial generation task, the momentum is set to 0.9 and the step size is set to 0.05 with no repetitions. ", "page_idx": 26}, {"type": "text", "text": "\u03a0GDM. We carefully conducted hyperparameter searches for each task using the first eight images with the average PSNR as the metric. Except for Noisy Gaussian Deblur task, we avoided using other algorithms to initialize \u03a0GDM to ensure a fair comparison. Specifically, we first use the forward transition to map the degraded image to the noise level corresponding to the 500th step, and then use 100 steps of \u03a0GDM to solve the inverse problem. We find that this approach is much better than starting directly from white noise (i.e. 1000th step). For Noisy Gaussian Deblur task, \u03a0GDM without initialization from other algorithms struggled to achieve satisfactory results. Therefore, we use $\\mathrm{DDNM+}$ to obtain the sample at the 500th step and then switch to \u03a0GDM to complete the solution. ", "page_idx": 26}, {"type": "text", "text": "DMPS. The step size hyperparameter $\\lambda$ was searched for each task using the first eight images with the average PSNR as the metric. ", "page_idx": 26}, {"type": "text", "text": "Resample. The weight hyperparameter $\\gamma$ was searched for each task using the first eight images with the average PSNR as the metric. ReSample was originally designed for Latent Diffusion, thus in our experiments, we consider the encoder-decoder as identity mappings. ", "page_idx": 26}, {"type": "text", "text": "DiffPIR. The weight hyperparameter $\\lambda$ was searched for each task using the first eight images with the average PSNR as the metric. ", "page_idx": 26}, {"type": "text", "text": "MSDM/ISDM-Gaussian/Dirac for source separation. Following [45], the algorithms use the $\\ensuremath\\mathrm{{S}}_{\\mathrm{churn}}$ mechanism [56], with $\\mathrm{S_{churn}}=20$ for the MSDM model and 40 for the ISDM model. Correction steps [19] are set to 2. ", "page_idx": 26}, {"type": "text", "text": "MSDM for partial generation. Similarly, $\\ensuremath\\mathrm{{S}}_{\\mathrm{churn}}=10$ and no correction steps are used. ", "page_idx": 26}, {"type": "text", "text": "E.3 Details for metrics calculation ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Here we provide the details of how we calculate the metrics for replication and fair comparison. ", "page_idx": 26}, {"type": "text", "text": "For image restoration, we first save the generated results in the png format. When all results are generated, we read them back in to calculate the metrics. For PSNR and SSIM, we use peak_signal_noise_ratio and structural_similarity methods from the skimage library4. When calculating SSIM, the parameter \u2018data_range\u2019 is set to \u2018data_range=generated_image.max()- generated_image.min()\u2019. For LPIPS, we use the LPIPS library5. Note that before calculating LPIPS, pixel values are normalized to $[-1,1]$ . And for FID, we use the torch-fidelity library6. ", "page_idx": 26}, {"type": "text", "text": "For the $\\mathrm{SI-SDR_{i}}$ metric used in source separation, the calculation is as described in [45]: ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathrm{SI-SDR}_{\\mathrm{i}}=\\mathrm{SI-SDR}(\\mathbf{x}_{\\mathrm{n}},\\hat{\\mathbf{x}}_{\\mathrm{n}})-\\mathrm{SI-SDR}(\\mathbf{x}_{\\mathrm{n}},\\mathbf{y}),}\\\\ {\\mathrm{SI-SDR}(\\mathbf{x}_{\\mathrm{n}},\\hat{\\mathbf{x}}_{\\mathrm{n}})=10\\log_{10}\\frac{||\\alpha\\mathbf{x}_{\\mathrm{n}}||^{2}+\\epsilon}{||\\alpha\\mathbf{x}_{\\mathrm{n}}-\\hat{\\mathbf{x}}_{\\mathrm{n}}||^{2}+\\epsilon},}\\end{array}\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "where $\\mathbf{x}_{\\mathrm{n}}$ is the ground truth sequence, $\\mathbf{y}$ represents the ground truth summation of the four instruments, and $\\hat{\\mathbf{x}}_{\\mathrm{n}}$ is the estimated track from the algorithm. $\\begin{array}{r}{\\alpha=\\frac{\\mathbf{x}_{\\mathrm{n}}^{T}\\hat{\\mathbf{x}}_{\\mathrm{n}}+\\epsilon}{||\\mathbf{x}_{\\mathrm{n}}||^{2}+\\epsilon}}\\end{array}$ and $\\epsilon=10^{-8}$ to prevent numerical errors. ", "page_idx": 27}, {"type": "text", "text": "For the sub-FAD metric in the partial generation tasks, we first calculate the summation of the generated tracks and the corresponding conditional tracks and save the mixtures in the wav format. Then we use the frechet_audio_distance library7 to compute the FAD metrics between the generated mixtures and the ground truth mixtures. ", "page_idx": 27}, {"type": "text", "text": "F Implemention details of ProjDiff ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "F.1 Initialization for noisy observation with non-integer $t_{a}$ ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "In the case of noisy observations, we aim to initialize $\\mathbf{x}_{\\mathrm{0}}$ using the optimized ${\\bf x}_{t_{a}}$ as $\\mu_{\\theta}(\\mathbf{x}_{t_{a}},t_{a})$ . However, note that $t_{a}$ may not correspond exactly to any discretized time step in practice. In such instance, we assume $t_{0}\\,\\in\\,[1,2,\\ldots,T]$ such that $t_{0}\\,\\leq\\,t_{a}\\,\\leq\\,t_{0}+1$ , and consequently we can first perform a forward transition as $\\begin{array}{r}{\\hat{\\mathbf{x}}_{t_{0}+1}=\\sqrt{\\overline{{\\alpha}}_{t_{0}+1}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{x}_{t_{a}}+\\sqrt{1-\\overline{{\\alpha}}_{t_{0}+1}/\\overline{{\\alpha}}_{t_{a}}}\\mathbf{\\epsilon}}\\end{array}$ for some $\\mathbf{\\epsilon}\\epsilon\\sim\\mathcal{N}(\\bar{\\mathbf{0}},\\mathbf{I})$ , and then initialize $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\hat{\\mathbf{x}}_{t_{0}+1},t_{0}+1)$ . ", "page_idx": 27}, {"type": "text", "text": "F.2 Details for linear observations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "The projection operator for source separation is ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\mathcal{P}(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})=(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})+\\frac{1}{4}\\left(\\mathbf{y}-(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})(1,1,1,1)^{T}\\right)(1,1,1,1).\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "The projection operator for partial generation is ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{P}(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})=(\\mathbf{x}_{1},\\mathbf{x}_{2},\\mathbf{x}_{3},\\mathbf{x}_{4})(\\mathbf{I}-\\mathbf{A})+\\mathbf{y}\\mathbf{A}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Super-resolution and random inpainting are similar to source separation and partial generation, respectively. The projection operators of these problems can be obtained without SVD. Regarding equivalent variance, for $4\\times4$ super-resolution, based on the average of independent Gaussian variables, the equivalent variance is $16\\sigma^{2}$ with $\\sigma^{2}$ being the variance of the noise adding to the observation. For inpainting, the equivalent noise should enjoy the same variance as the noise on the observations. ", "page_idx": 27}, {"type": "text", "text": "Gaussian deblurring task is a bit more complex. The projection operator is ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\mathcal{P}(\\mathbf{x}_{0})=(\\mathbf{I}-\\mathbf{A}^{\\dagger}\\mathbf{A})\\mathbf{x}_{0}+\\mathbf{A}^{\\dagger}\\mathbf{y},\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "where $\\mathbf{A}^{\\dagger}$ is the Moore-Penrose pseudo-inverse of $\\mathbf{A}$ . The element-wise equivalent noise can be handled using the SVD. ", "page_idx": 27}, {"type": "text", "text": "F.3 Details for nonlinear observations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Phase retrieval. For the phase retrieval task, consider the observation $\\mathbf{y}=\\left|\\mathrm{DFT}(\\mathbf{P}\\mathbf{x})\\right|$ . Given input $\\mathbf{x}_{\\mathrm{0}}$ and observations $\\mathbf{y}$ , first we calculate $\\mathbf{z}=\\mathrm{DFT}(\\mathbf{P}\\mathbf{x}_{0})$ , and compute the projection operator of $\\mathbf{y}=\\left|\\mathbf{z}\\right|$ with respect to $\\mathbf{z}$ , which is $\\tilde{\\mathbf{z}}=\\mathbf{y}\\odot\\mathbf{z}/|\\mathbf{z}|$ where the division is element-wise and $\\odot$ denotes the Hadamard product. Next, we map $\\tilde{\\mathbf{z}}$ back to the original pixel space. As DFT is invertible and the $\\mathbf{P}$ is the padding matrix, we define the inverse transformation matrix corresponding to $\\mathbf{P}$ as $\\mathbf{P}_{1}$ that extract the central $256\\times256$ pixels from a $384\\times384$ image. Thus the inverse mapping can be written as $\\widetilde{\\mathbf{x}}=\\mathbf{P}_{1}\\mathrm{DFT}^{-1}(\\widetilde{\\mathbf{z}})$ . Finally, as the resulting $\\tilde{\\bf x}$ is in the complex space, we project it onto the real space, namely ${\\bf x}_{\\mathrm{proj}}=\\mathrm{real}(\\tilde{\\bf x})$ , where the real $(\\cdot)$ operator takes the real part of a complex tensor. ", "page_idx": 27}, {"type": "table", "img_path": "2fiYzs3YkH/tmp/7f2045ce2287ce15c31eb4da9198bb5b2a3596b8562188dea600827d43e3187a.jpg", "table_caption": ["Table 21: Optimal step sizes for ProjDiff. "], "table_footnote": [], "page_idx": 28}, {"type": "text", "text": "", "page_idx": 28}, {"type": "text", "text": "Regarding equivalent noise, we use the principle of energy equality in the space domain and in the frequency domain. The energy of observation noise is $\\tilde{\\mathrm{n}}_{1}^{2}\\sigma^{\\underline{{{s}}}}$ where $\\mathrm{n_{1}}=384$ is the size of the spectrum image. Assuming the variance of the effective noise is $\\sigma_{\\mathrm{eff}}$ , the noise energy in the space domain is $\\mathrm{n^{2}\\bar{\\sigma_{e f f}^{2}}}$ with $\\mathrm{n=256}$ . Equating both energy yields $\\sigma_{\\mathrm{eff}}=\\mathrm{n}_{1}\\sigma/\\mathrm{n}=1.5\\sigma$ . ", "page_idx": 28}, {"type": "text", "text": "High dynamic range. The regular projection operator of the HDR task can be expressed element-wise as follows ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{P}(\\mathbf{x}_{i},\\mathbf{y}_{i})=\\left\\{\\begin{array}{l l}{\\mathbf{y}_{i}/2}&{-1<\\mathbf{y}_{i}<1;}\\\\ {0.5}&{\\mathbf{y}_{i}=1\\;\\mathrm{and}\\;\\mathbf{x}_{i}\\leq0.5;}\\\\ {-0.5}&{\\mathbf{y}_{i}=-1\\;\\mathrm{and}\\;\\mathbf{x}_{i}\\geq-0.5;}\\\\ {\\mathbf{x}_{i}}&{\\mathrm{else}.}\\end{array}\\right.}\\end{array}\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "This formulation applies to the noise-free case. Nonetheless, we discover an adjusted version of the projection operator that can further accommodate noisy observations, which is ", "page_idx": 28}, {"type": "equation", "text": "$$\n\\mathcal{P}_{\\mathrm{noisy}}(\\mathbf{x}_{i},\\mathbf{y}_{i})=\\left\\{\\begin{array}{l l}{\\mathbf{y}_{i}/2}&{-0.5<\\mathbf{y}_{i}<0.5;}\\\\ {\\mathbf{y}_{i}/2}&{\\mathbf{y}_{i}\\geq1\\;\\mathrm{and}\\;\\mathbf{x}_{i}\\leq0.5;}\\\\ {\\mathbf{y}_{i}/2}&{\\mathbf{y}_{i}\\leq-1\\;\\mathrm{and}\\;\\mathbf{x}_{i}\\geq-0.5;}\\\\ {\\mathbf{x}_{i}}&{\\mathrm{else}.}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 28}, {"type": "text", "text": "This adjusted form is more adept at handling uncertainty in the observation values within the intervals $[-1,-0.5]$ and [0.5, 1] induced by the observation noise. We employ this modified projection operator in the noisy HDR task. The equivalent noise variance can be simply approximated as $\\sigma_{\\mathrm{eff}}^{2}=\\dot{(\\sigma/2)}^{2}$ ", "page_idx": 28}, {"type": "text", "text": "F.4 Hyperparameters. ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "In all experiments, ProjDiff uses SGDM as the optimizer. The momentum is set to 0.5 for the source separation task and 0.9 for the partial generation task. The step size is set to 0.1 for source separation with 5 repetition steps and 0.05 for partial generation with no repetition. For all image restoration tasks, the momentum is set to 0, and $\\eta_{2}$ for the noisy observations is fixed to 1.0. The DDIM variance \u03c3\u02dct is set to 0 for t \u2264ta and to \u03c3\u02dct = \u03c3t = 11\u2212\u03b1t\u03b1\u2212t1 $\\begin{array}{r}{\\tilde{\\sigma}_{t}\\,=\\,\\sigma_{t}\\,=\\,\\sqrt{\\frac{1-\\overline{{\\alpha}}_{t\\,-1}}{1-\\overline{{\\alpha}}_{t}}}\\sqrt{1-\\frac{\\overline{{\\alpha}}_{t}}{\\overline{{\\alpha}}_{t\\,-1}}}}\\end{array}$ for $t\\,>\\,t_{a}$ . No repetitions are applied. Other tuned optimal step sizes are shown in Table 21. The time step schedule follows [45] for the source separation and partial generation tasks, and follows [20, 21] for the image restoration tasks. ", "page_idx": 28}, {"type": "text", "text": "G Discussion about the MAP framework ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "ProjDiff shares similarities with the Maximum A Posteriori (MAP) estimation method. Theoretically, in noisy situations, it is only necessary to use a Gaussian likelihood, i.e., $p(\\mathbf{y}|\\mathbf{x}_{0})=\\mathcal{N}(\\mathbf{y};\\mathbf{x}_{0},\\sigma^{2}\\mathbf{I})$ , to solve the inverse problems. However, ProjDiff introduces a new auxiliary variable, which leads to better experimental outcomes than the MAP framework. Here, we present some qualitative discussion towards this experimental result. ", "page_idx": 28}, {"type": "text", "text": "On one hand, if we are given perfectly accurate priors and likelihoods, and have sufficient computational capability, we could obtain the exact posterior and also its gradients. Within the MAP framework, this should lead to the ideal results. However, in practice, the priors provided by diffusion models are not entirely accurate, and the weight coefficients between the priors and the likelihood cannot always be perfectly set. Moreover, dealing with the priors in diffusion models relies on stochastic optimization methods. These factors imply that the MAP framework often fails to achieve the desired solution. In such cases, further exploring the information or capabilities within the diffusion model can provide substantial assistance in solving inverse problems and enhance performance. This is one of the reasons why ProjDiff may have a performance advantage over the original MAP framework. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "On the other hand, MAP methods utilize gradient descent to leverage the information from the observation, while ProjDiff transforms this into a projection operation by introducing noisy auxiliary variables. This approach offers numerous advantages: there is no need to consider the step size of gradient descent (at least for the likelihood term); there is no need to consider the weight coefficients between the likelihood and prior terms; and it ensures consistency between noisy samples and observations (the role of this consistency has also been confirmed in the noise-free scenario). Moreover, the introduction of this auxiliary variable indicates that ProjDiff can actually be viewed as simultaneously recovering clean data and the noise added to the observations, which can yield more accurate results than merely characterizing the noise prior with a Gaussian distribution. These transformations are all thanks to ProjDiff\u2019s utilization of both the clean prior and noisy prior modeled by diffusion models (i.e., the prior modeled by the diffusion model and its denoising capability). ", "page_idx": 29}, {"type": "text", "text": "H Algorithm blocks ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Here, we present additional algorithm blocks for ProjDiff used in the experiments. Algorithm 2 is used for noise-free restoration tasks. Algorithm 3 and Algorithm 4 are used in the source separation task and partial generation task, respectively. ", "page_idx": 29}, {"type": "text", "text": "Algorithm 2 ProjDiff for VP diffusion (noise-free). ", "page_idx": 30}, {"type": "text", "text": "Require: Observation y, observation function A, pre-trained diffusion model $\\pmb{\\mu}_{\\pmb{\\theta}}$ , step size $\\eta$ , total   \nsteps $T$ , noise schedule $\\overline{{\\alpha}}_{1}\\ldots\\overline{{\\alpha}}_{T}$ .   \n1: Sample $\\epsilon_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n2: Initialize $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\epsilon_{T},T)$ ;   \n3: for $t=T$ to 1 do   \n4: Sample $\\boldsymbol{\\epsilon}_{t}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n5: Calculate the approximate stochastic gradient: $\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}=\\mathbf{x}_{0}-\\mu_{\\theta}\\big(\\sqrt{\\overline{{\\alpha}}_{t}}\\mathbf{x}_{0}+\\sqrt{1-\\overline{{\\alpha}}_{t}}\\epsilon_{t},t\\big)$ ;   \n6: Update $\\mathbf{x}_{0}\\mathbf{:x}_{0}\\gets\\mathcal{P}_{\\mathbf{A},\\mathbf{y}}(\\mathbf{x}_{0}-\\eta\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t})$ ;   \n7: end for   \n8: return $\\mathbf{x}_{\\mathrm{0}}$ ", "page_idx": 30}, {"type": "text", "text": "Algorithm 3 ProjDiff for VE diffusion (noise-free). ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Require: Observation $\\mathbf{y}$ , observation function $\\mathbf{A}$ , pre-trained diffusion model $\\pmb{\\mu_{\\theta}}$ , step size $\\eta$ ,   \nmomentum $\\beta$ , total steps $T$ , iterations per step $N$ , noise schedule $\\overline{{\\sigma}}_{1}\\ldots\\overline{{\\sigma}}_{T}$ .   \n1: Sample $\\epsilon_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ ;   \n2: Initialize $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\overline{{\\sigma}}_{T}\\epsilon_{T},T)$ ;   \n3: $\\mathbf{v}\\gets\\mathbf{0}$ ;   \n4: for $t=T$ to 1 do   \n5: for $k=0$ to $N-1$ do   \n6: Sample $\\pmb{\\epsilon}_{t,k}\\sim\\mathbf{N}(\\mathbf{0,I})$ ;   \n7: Calculate the approximate stochastic gradient: $\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}=\\mathbf{x}_{0}-\\mu_{\\theta}(\\mathbf{x}_{0}+\\overline{{\\sigma}}_{t}\\epsilon_{t,k},t)$ ;   \n8: Update momentum: $\\mathbf{v}\\leftarrow\\beta\\mathbf{v}+(1-\\beta)\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}$ ;   \n9: Update $\\mathbf{x}_{0};\\,\\mathbf{x}_{0}\\gets\\mathcal{P}_{\\mathbf{A},\\mathbf{y}}(\\mathbf{x}_{0}-\\eta\\mathbf{v})$ ;   \n10: end for   \n11: end for   \n12: return $\\mathbf{x}_{\\mathrm{0}}$ ", "page_idx": 30}, {"type": "text", "text": "Algorithm 4 ProjDiff for VE diffusion with restricted encoding (noise-free). ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Require: Observation y, observation function A, pre-trained diffusion model $\\pmb{\\mu_{\\theta}}$ , step size $\\eta$ ,   \nmomentum $\\beta$ , total steps $T$ , iterations per step $N$ , noise schedule $\\overline{{\\sigma}}_{1}\\ldots\\overline{{\\sigma}}_{T}$ .   \n1: Sample $\\epsilon_{T},\\epsilon_{0}\\sim\\mathcal{N}(0,\\mathbf{I})$ ;   \n2: Initialize $\\mathbf{x}_{0}\\gets\\mu_{\\theta}(\\overline{{\\sigma}}_{T}\\epsilon_{T},T)$ ;   \n3: $\\mathbf{v}\\gets\\mathbf{0}$ ;   \n4: for $t=T$ to 1 do   \n5: for $k=0$ to $N-1$ do   \n6: Sample $\\epsilon_{t,k}\\sim\\mathcal{N}(0,\\mathbf{I})$ ;   \n7: Calculate the approximate stochastic gradient: $\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}\\ =\\ \\mathbf{x}_{0}\\ -\\ \\mu_{\\theta}(\\mathbf{x}_{0}\\,+\\,\\overline{{\\sigma}}_{t-1}\\epsilon_{0}\\ +$   \n$\\sqrt{\\overline{{\\sigma}}_{t}^{2}-\\overline{{\\sigma}}_{t-1}^{2}}\\epsilon_{t,k},t);$   \n8: Update momentum: $\\mathbf{v}\\leftarrow\\beta\\mathbf{v}+(1-\\beta)\\tilde{\\mathbf{d}}_{\\mathbf{x}_{0},t}$ ;   \n9: Update $\\mathbf{x}_{0};\\,\\mathbf{x}_{0}\\gets\\mathcal{P}_{\\mathbf{A},\\mathbf{y}}(\\mathbf{x}_{0}-\\eta\\mathbf{v})$ ;   \n10: end for   \n11: end for   \n12: return $\\mathbf{x}_{\\mathrm{0}}$ ", "page_idx": 30}, {"type": "text", "text": "I Visualization results of image restoration ", "text_level": 1, "page_idx": 30}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/f767106a7b3e6a8171ec4fac09824c1d6d8cff4207548d9e30041f226c3cbead.jpg", "img_caption": ["Figure 6: Noise-free results on ImageNet. Baseline means $\\hat{\\mathbf{x}}_{0}=\\mathbf{A}^{\\dagger}\\mathbf{y}$ . "], "img_footnote": [], "page_idx": 31}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/a3294d3c78edb9b084ddb26096eea656f48904229facba5218a822865e723813.jpg", "img_caption": ["Figure 7: Noisy results on ImageNet $\\sigma=0.05$ . Baseline means $\\hat{\\mathbf{x}}_{0}=\\mathbf{A}^{\\dagger}\\mathbf{y}$ . "], "img_footnote": [], "page_idx": 31}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/8ad340515d07e3aa5abfcc6de42428947b71ab91903d2f9cbdd03247a9f47460.jpg", "img_caption": ["Figure 8: Noise-free results on CelebA. Baseline means $\\hat{\\mathbf{x}}_{0}=\\mathbf{A}^{\\dagger}\\mathbf{y}$ . "], "img_footnote": [], "page_idx": 32}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/e1bf69f374950c0a977bd251a59871dc5d28725e5c95f8f13e72da59de31ee27.jpg", "img_caption": ["Figure 9: Noisy results on CelebA $\\sigma=0.05$ . Baseline means $\\hat{\\mathbf{x}}_{0}=\\mathbf{A}^{\\dagger}\\mathbf{y}$ . "], "img_footnote": [], "page_idx": 32}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/ecde700d880728ea5345e32dfb60bbf40609e857b18a5208d3cdc7d93b6dd95a.jpg", "img_caption": ["Figure 10: Noise-free nonlinear restoration on FFHQ $(\\sigma=0)$ ). "], "img_footnote": [], "page_idx": 33}, {"type": "image", "img_path": "2fiYzs3YkH/tmp/8489eafa16919ce5695b2adf11003a92fdfe07447be3c4badadc5dee1f2cb9da.jpg", "img_caption": ["Figure 11: Noisy nonlinear restoration on FFHQ $\\sigma=0.05)$ ). "], "img_footnote": [], "page_idx": 34}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: The claims made in the abstract and introduction are consistent with this paper\u2019s main contributions and scope, and have been verified through extensive experiments and ablation studies. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 35}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Justification: See section 5. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 35}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Justification: See Appendix A and B. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 36}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Justification: The code is included in the supplemental materials and the experiment details are presented. See Appendix E and F. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 36}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 37}, {"type": "text", "text": "Justification: The code and instructions are included in the supplemental materials. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 37}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Justification: All of the experiment details and implemention details are presented. See Appendix E and F. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 37}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 37}, {"type": "text", "text": "Answer: [No] ", "page_idx": 37}, {"type": "text", "text": "Justification: Following the convention of inverse problem research, we report the performance comparison of all algorithms with a fixed random seed. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 37}, {"type": "text", "text": "", "page_idx": 38}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: All of the experiments are conducted on a single NVIDIA 3090ti GPU. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 38}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: We have read the NeurIPS Code of Ethics in detail and conformed with it in this paper. ", "page_idx": 38}, {"type": "text", "text": "Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 38}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 38}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 38}, {"type": "text", "text": "Justification: This paper focuses on designing algorithms for inverse problems, without underlying social impact. ", "page_idx": 38}, {"type": "text", "text": "Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 38}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 39}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 39}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 39}, {"type": "text", "text": "Justification: No datasets or models are proposed and there is no such risk of misuse. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 39}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: All databases, models, and toolkits used in this paper are cited from the original papers or URLs. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 39}, {"type": "text", "text": "", "page_idx": 40}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 40}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 40}, {"type": "text", "text": "Justification: The code provided in the supplementary materials is anonymized and well documented with the running details. ", "page_idx": 40}, {"type": "text", "text": "Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 40}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 40}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 40}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 40}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 40}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 40}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 40}, {"type": "text", "text": "", "page_idx": 41}]