[{"figure_path": "A3hxp0EeNW/figures/figures_1_1.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the Constrained Graph Discrete Diffusion framework proposed in the paper.  The framework consists of a forward diffusion process (where noise is progressively added to the graph) and a reverse diffusion process (where the noise is removed to generate a new graph). The key innovation is the inclusion of a 'projector' that ensures generated graphs always adhere to specified structural constraints (in this case, acyclicity).  The forward process uses an edge-absorbing noise model, and the reverse process uses a GNN to predict and insert edges while the projector removes any edge insertions which would violate the constraints.", "section": "3 Constrained Graph Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_3_1.jpg", "caption": "Figure 2: Projector operator. At each iteration, we start by sampling a candidate graph Gt-1 from the distribution pe(Gt-1|Gt) provided by the diffusion model. Then, the projector step inserts in an uniformly random manner the candidate edges, discarding those that violate the target property, P, i.e., acyclicity in this illustration. In the end of the reverse step, we find a graph Gt-1 that is guaranteed to comply with such property.", "description": "This figure illustrates the projector operator used in ConStruct's reverse process.  It shows how, given a noisy graph Gt and a candidate denoised graph Gt-1 sampled from the diffusion model, the projector iteratively inserts candidate edges, discarding any that would violate the target property (e.g., acyclicity, as shown in the example). This ensures that the final sampled graph Gt-1 is guaranteed to satisfy the property. The gray components highlight which parts are responsible for preserving the desired property. ", "section": "3.2 Constrained Graph Discrete Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_28_1.jpg", "caption": "Figure 4: Extraction of a cell subgraph (center) from a WSI graph (left). From this cell subgraph, we can then compute the TLS embedding based on the classification of the edges into different categories, shown on the right. We can observe a cluster of B-cells surrounded by some support T-cells, characteristic of a high TLS content.", "description": "This figure shows the process of extracting a subgraph representing tertiary lymphoid structures (TLSs) from a larger whole-slide image (WSI) graph. The left panel displays the full WSI graph, where nodes represent cells and edges represent cell-cell interactions. A specific region containing a TLS is highlighted in a circle. The middle panel shows the extracted subgraph, focusing on the cells and interactions within the TLS. The right panel illustrates the TLS embedding, which quantifies the TLS content based on edge types (interactions between different cell types). The different colors represent different cell types, with the presence of a cluster of B-cells surrounded by supporting T-cells indicating a high TLS content.", "section": "4.2 Digital Pathology Cell Graphs"}, {"figure_path": "A3hxp0EeNW/figures/figures_29_1.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the ConStruct framework for constrained graph generation using discrete diffusion models. The forward process involves progressively adding noise to a graph by deleting edges and potentially changing node types.  The reverse process then recovers a clean graph, but with the crucial addition of a 'projector' which ensures the generated graphs adhere to pre-defined structural constraints (e.g., no cycles, planarity). The projector acts by rejecting any edge additions that would violate these constraints during the reverse diffusion process.", "section": "3 Constrained Graph Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_29_2.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the ConStruct framework for constrained graph generation using discrete diffusion models.  The forward process involves progressively adding noise to a graph by deleting edges and potentially changing node types. The reverse process then aims to reconstruct a clean graph, but with the constraint that the generated graph always satisfies a given property (e.g., acyclicity in the example).  The projector operator ensures the generated graph stays within the allowed domain throughout this reverse process.", "section": "3 Constrained Graph Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_34_1.jpg", "caption": "Figure 12: Visualizations of intermediate graphs throughout the reverse process. The notation follows the one of the rest of the paper: we obtain Gt-1 after applying the projector on \u011ct\u22121, which in turn is obtained from Gt through the diffusion model. From the new edges obtained in Gt-1, we color them in green when they do not break the constraining property and in red otherwise. We can observe that the red edges are rejected. To better emphasize the edge rejection by the projector, we do not use a fully trained model and use a trajectory length, T, smaller than usual, resulting in less accurate edge predictions.", "description": "This figure visualizes intermediate steps in the reverse process of the ConStruct model for three different types of graphs: planar, tree, and lobster.  Each row represents a graph type.  Each column shows the graph at different stages of the reverse process, starting from a noisy graph (t=T) on the left and ending with a clean graph (t=1) on the right.  Green edges represent edges added by the diffusion model that satisfy the constraints, while red edges are discarded by the projector because they would violate the constraints.", "section": "I.2 Visualizing Intermediate Graphs (Before and After Projector)"}, {"figure_path": "A3hxp0EeNW/figures/figures_34_2.jpg", "caption": "Figure 11: Reverse processes for generation of low (top) and high (bottom) TLS content graphs using ConStruct. We start from a graph without any edge on the left (t = T) and progressively build the graph, as a consequence of the absorbing noise model. The node types switch along the trajectory due to the marginal noise model. On the right, we have a fresh new sample (t = 0). The phenotypes color key is presented in Figure 4.", "description": "This figure shows the reverse process of ConStruct for generating low and high TLS content graphs.  The process begins with a graph having no edges (t=T) and gradually adds edges in the reverse diffusion process (moving from t=T to t=0). The color of nodes indicates different cell phenotypes, demonstrating how the noise model affects node types and the projector ensures that generated graphs maintain the correct structure.", "section": "I.1.2 Digital Pathology"}, {"figure_path": "A3hxp0EeNW/figures/figures_35_1.jpg", "caption": "Figure 11: Reverse processes for generation of low (top) and high (bottom) TLS content graphs using ConStruct. We start from a graph without any edge on the left (t = T) and progressively build the graph, as a consequence of the absorbing noise model. The node types switch along the trajectory due to the marginal noise model. On the right, we have a fresh new sample (t = 0). The phenotypes color key is presented in Figure 4.", "description": "This figure visualizes the reverse process of ConStruct for generating low and high TLS content graphs. It starts with a graph having no edges (t=T) and iteratively adds edges during the reverse diffusion process. The node types also change throughout this process. The right side shows the final generated graph (t=0).", "section": "I.1.2 Digital Pathology"}, {"figure_path": "A3hxp0EeNW/figures/figures_35_2.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the ConStruct framework for constrained graph generation using discrete diffusion models.  The forward process involves progressively adding noise to a graph by deleting edges and potentially changing node types. The reverse process uses a neural network and a projector operator to reconstruct a clean graph from the noisy version, while simultaneously ensuring that the generated graphs satisfy the specified constraints. The example shown highlights the generation of cycle-free graphs.", "section": "3 Constrained Graph Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_35_3.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the ConStruct framework for constrained graph generation using discrete diffusion models.  The forward diffusion process involves an edge-absorbing noise model that progressively deletes edges from the graph.  Node types may also change during this forward process.  The reverse process reconstructs the graph from noise. A key component is the projector, which ensures that all sampled graphs during the reverse process adhere to the specified structural constraints (in this example, the absence of cycles). The grayed components highlight the parts of the model that specifically maintain the constraints.", "section": "3 Constrained Graph Diffusion Models"}, {"figure_path": "A3hxp0EeNW/figures/figures_36_1.jpg", "caption": "Figure 12: Visualizations of intermediate graphs throughout the reverse process. The notation follows the one of the rest of the paper: we obtain Gt-1 after applying the projector on \u011ct-1, which in turn is obtained from Gt through the diffusion model. From the new edges obtained in Gt-1, we color them in green when they do not break the constraining property and in red otherwise. We can observe that the red edges are rejected. To better emphasize the edge rejection by the projector, we do not use a fully trained model and use a trajectory length, T, smaller than usual, resulting in less accurate edge predictions.", "description": "This figure visualizes the intermediate steps during the reverse process of the ConStruct model for three different types of graphs (planar, tree, and lobster).  It demonstrates how the projector component of the model works by accepting or rejecting candidate edges based on whether they violate the specified structural constraints (planarity, acyclicity, or lobster components).  Green edges are accepted, while red edges are rejected because they would violate the constraints. The use of a less-than-fully trained model and a shorter trajectory length (T) was intentional to make the effect of the edge rejection more visually apparent.", "section": "I.2 Visualizing Intermediate Graphs (Before and After Projector)"}, {"figure_path": "A3hxp0EeNW/figures/figures_37_1.jpg", "caption": "Figure 1: Constrained graph discrete diffusion framework. The forward process consists of an edge deletion process driven by the edge-absorbing noise model, while the node types may switch according to the marginal noise model. At sampling time, the projector operator ensures that sampled graphs remain within the constrained domain throughout the entire reverse process. In the illustrated example, the constrained domain consists exclusively of graphs with no cycles. We highlight in gray the components responsible for preserving the constraining property.", "description": "This figure illustrates the ConStruct framework, which is a novel method for generating graphs with specific structural properties.  It depicts the forward and reverse diffusion processes. The forward process involves progressively adding noise to a graph by deleting edges and changing node types. The reverse process then aims to recover the original graph by removing noise, but with a crucial constraint: the projector operator ensures that at each step, the generated graphs satisfy the desired structural property (in this case, acyclicity\u2014no cycles). The gray areas highlight the components designed to maintain these constraints throughout the entire process.", "section": "3 Constrained Graph Diffusion Models"}]