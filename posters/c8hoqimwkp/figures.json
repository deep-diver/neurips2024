[{"figure_path": "c8HOQIMwKP/figures/figures_1_1.jpg", "caption": "Figure 1: An illustration of UnSeg pipeline which transforms images into unlearnable examples with mask prompt to prevent the exploitation of segmentation models.", "description": "This figure illustrates the UnSeg pipeline.  It shows how UnSeg takes clean images and a mask prompt (specifying which object to protect). It then uses UnSeg to generate an unlearnable version of the image, where the specified object has been modified to make it difficult for segmentation models to learn from. The result is a \"protected dataset.\" When segmentation models are trained on this protected dataset, their performance on a test image is significantly degraded (low performance) compared to models trained on the original, clean dataset (high performance).", "section": "1 Introduction"}, {"figure_path": "c8HOQIMwKP/figures/figures_3_1.jpg", "caption": "Figure 2: An overview of our proposed UnSeg framework. It finetunes an interactive unlearnable noise generator from the pre-trained SAM to generate unlearnable noise (\u03b4u) that can minimize the training error of a surrogate model (a re-initialized SAM) via bilevel min-min optimization. After fine-tuning, only the unlearnable noise generator is kept.", "description": "This figure illustrates the UnSeg framework, which consists of two main components: an interactive unlearnable noise generator and a surrogate model. The noise generator, finetuned from a pre-trained Segment Anything Model (SAM), generates unlearnable noise (\u03b4u) that is added to the input image.  The surrogate model, a re-initialized SAM trained from scratch, learns to minimize the training loss by incorporating this noise. The bilevel optimization process iteratively trains these two models, with only the noise generator retained after training.  The framework is designed to generate unlearnable noise efficiently and effectively for protecting downstream images against image segmentation.", "section": "3.1 The UnSeg Framework"}, {"figure_path": "c8HOQIMwKP/figures/figures_4_1.jpg", "caption": "Figure 3: The training loss of UnSeg with/without EG and the validation results on Pascal VOC2012 using DeepLabV1 as target model.", "description": "This figure shows the training loss curves for UnSeg with and without epsilon generalization (EG) on the Pascal VOC 2012 dataset.  The left y-axis represents the training loss of the UnSeg model, while the right y-axis shows the mean Intersection over Union (mIoU) achieved by the DeepLabV1 model trained on the resulting unlearnable images.  The blue bar represents the mIoU on the clean dataset. The orange bar represents the mIoU when EG is not used. The purple bar shows the mIoU when EG is used.  The figure demonstrates that epsilon generalization improves the stability of the training process and leads to significantly better performance, reducing the mIoU of DeepLabV1 much more effectively.", "section": "3.2 Training the Unlearnable Noise Generator"}, {"figure_path": "c8HOQIMwKP/figures/figures_6_1.jpg", "caption": "Figure 4: (a) The mIoU of DeepLabV1 trained on unlearnable Pascal VOC. (b) The mIoU of DeepLabV3 trained on unlearnable Pascal VOC. (3) The PQ of Mask2Former trained on unlearnable Cityscapes. The values were shown over different training epochs/iterations of the models.", "description": "This figure compares the performance of three different image segmentation models (DeepLabV1, DeepLabV3, and Mask2Former) trained on datasets containing images modified by UnSeg, against those trained on clean datasets.  The models' performance (mIoU for DeepLabV1 and DeepLabV3, PQ for Mask2Former) is plotted against the number of training epochs or iterations.  The results show UnSeg's effectiveness in significantly reducing the performance of these models.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_7_1.jpg", "caption": "Figure 5: (a) The mIoU on 4 datasets of SAM-HQ [29] trained on unlearnable HQSeg-44k [29]. (b) The mAP on 3 datasets of RSPrompter [7] trained on their unlearnable training sets. (c) The IoU on 2 datasets [2, 27] of UNet++ [67] trained on their unlearnable training sets with 5 different backbones.", "description": "This figure demonstrates the effectiveness and transferability of UnSeg across various vision tasks and datasets.  It shows the results of three different models (SAM-HQ for interactive segmentation, RSPrompter for remote sensing segmentation, and UNet++ for medical image segmentation) trained on datasets protected by UnSeg. The significant performance drops in each task (mIoU, mAP, and IoU) indicates that UnSeg successfully generated unlearnable images that reduced the model's ability to learn effective segmentation.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_15_1.jpg", "caption": "Figure 2: An overview of our proposed UnSeg framework. It finetunes an interactive unlearnable noise generator from the pre-trained SAM to generate unlearnable noise (\u03b4u) that can minimize the training error of a surrogate model (a re-initialized SAM) via bilevel min-min optimization. After fine-tuning, only the unlearnable noise generator is kept.", "description": "The figure illustrates the UnSeg framework, which consists of an unlearnable noise generator and a surrogate model. The unlearnable noise generator is fine-tuned from a pre-trained Segment Anything Model (SAM) to produce unlearnable noise that minimizes the training error of the surrogate model (another SAM trained from scratch).  Both models are trained alternately using a bilevel optimization approach. After training, only the unlearnable noise generator is retained for generating unlearnable noise.", "section": "3.1 The UnSeg Framework"}, {"figure_path": "c8HOQIMwKP/figures/figures_16_1.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure shows the results of applying the UnSeg method on the Pascal VOC 2012 dataset.  The left column (a) displays the original, clean images. The middle column (b) presents the images after UnSeg has added unlearnable noise, making them less useful for training image segmentation models. The right column (c) visualizes the unlearnable noise itself that UnSeg generated and added to the original images in column (a). The figure demonstrates that UnSeg successfully modifies images without making visually obvious changes, while the noise added is imperceptible to the human eye but disruptive to model training.", "section": "4.4 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_16_2.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure visualizes the results of the UnSeg method on the Pascal VOC 2012 dataset. It shows three columns: (a) original clean images; (b) the same images but with unlearnable noise added by the UnSeg method to make them unusable for training image segmentation models; (c) the unlearnable noise itself which was generated by UnSeg and added to images in column (b).  The purpose is to demonstrate the effectiveness of UnSeg in protecting images by making them unrecognizable to image segmentation models.", "section": "4.4 Additional Analyses"}, {"figure_path": "c8HOQIMwKP/figures/figures_17_1.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure shows a comparison of clean images from the Pascal VOC 2012 dataset with their corresponding unlearnable versions generated by the UnSeg model.  The unlearnable images are created by adding unlearnable noise to the original images, which is also visualized separately. The purpose of this comparison is to illustrate the changes introduced by the UnSeg model to render images unusable for training image segmentation models. The difference between the clean and unlearnable images is subtle to the human eye but significant enough to affect model performance.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_17_2.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure shows a comparison of clean images from the Pascal VOC 2012 dataset with their corresponding unlearnable versions generated by the UnSeg model. It also displays the unlearnable noise added to the original images to create the unlearnable examples. This visualization helps illustrate the effect of the UnSeg model on transforming images to make them unusable for training image segmentation models.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_17_3.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure presents a comparison of clean images from the Pascal VOC 2012 dataset with their corresponding unlearnable counterparts generated by the UnSeg model.  The unlearnable images are created by adding unlearnable noise to the original images; this noise is also visualized separately. The figure aims to show the visual effect of UnSeg's noise generation process and its impact on the original images.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_18_1.jpg", "caption": "Figure 2: An overview of our proposed UnSeg framework. It finetunes an interactive unlearnable noise generator from the pre-trained SAM to generate unlearnable noise (\u03b4u) that can minimize the training error of a surrogate model (a re-initialized SAM) via bilevel min-min optimization. After fine-tuning, only the unlearnable noise generator is kept.", "description": "This figure illustrates the UnSeg framework, which uses a pre-trained Segment Anything Model (SAM) to create a universal unlearnable noise generator.  The framework involves a bilevel optimization process where the noise generator and a surrogate model (another SAM, trained from scratch) are trained alternately to minimize the surrogate model's training error. The result is a noise generator that can transform any image into an unlearnable version by adding carefully designed noise.", "section": "3.1 The UnSeg Framework"}, {"figure_path": "c8HOQIMwKP/figures/figures_18_2.jpg", "caption": "Figure 1: An illustration of UnSeg pipeline which transforms images into unlearnable examples with mask prompt to prevent the exploitation of segmentation models.", "description": "This figure illustrates the UnSeg pipeline.  It shows how clean images are processed. First, a mask is created to specify the region of interest to be protected. Then, the UnSeg framework adds noise to this selected region of the image. The result is an image that is expected to perform poorly when used to train a segmentation model. The goal is to prevent unauthorized use of private data. The figure visually compares the high performance of a segmentation model trained on clean data versus the low performance of a model trained on the noise-added images, highlighting the effectiveness of UnSeg in protecting images.", "section": "1 Introduction"}, {"figure_path": "c8HOQIMwKP/figures/figures_18_3.jpg", "caption": "Figure 8: Visualization results on the Pascal VOC 2012 dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure shows a comparison of clean images from the Pascal VOC 2012 dataset with their unlearnable counterparts generated by the UnSeg method. It also displays the unlearnable noise added to the clean images to create the unlearnable versions. The figure visually demonstrates the effect of UnSeg in making images unusable for training image segmentation models.", "section": "4.2 Main Results"}, {"figure_path": "c8HOQIMwKP/figures/figures_19_1.jpg", "caption": "Figure 13: Visualization results on the WHU dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure visualizes the results of applying the UnSeg method on the WHU dataset. It showcases three columns: the first column shows clean images from the WHU dataset; the second column displays the corresponding images after adding unlearnable noise generated by UnSeg; and the third column visualizes the noise added to the original images by UnSeg. This figure demonstrates the effectiveness of UnSeg in transforming images to be unlearnable for downstream image segmentation models.", "section": "A.4 Visualization"}, {"figure_path": "c8HOQIMwKP/figures/figures_19_2.jpg", "caption": "Figure 16: Visualization results on the Lung segmentation dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure visualizes the results of applying the UnSeg method to the Lung segmentation dataset.  It shows three columns: (a) the original clean images from the dataset, (b) the same images after UnSeg has added unlearnable noise, and (c) a visualization of the unlearnable noise itself that was added. This allows for a visual comparison of the original images, the modified images, and the specific noise pattern introduced by the UnSeg method. The purpose is to demonstrate the method's ability to modify images in a way that is imperceptible to the human eye, but still significantly impacts the performance of downstream image segmentation models.", "section": "A.4 Visualization"}, {"figure_path": "c8HOQIMwKP/figures/figures_19_3.jpg", "caption": "Figure 17: Visualization results on the Kvasir-seg dataset. (a) Clean images. (b) Unlearnable examples generated by UnSeg. (c) Unlearnable noise generated by UnSeg.", "description": "This figure shows a comparison of clean images from the Kvasir-seg dataset, their corresponding unlearnable versions generated by the UnSeg algorithm, and the unlearnable noise added to the images.  The images are from a medical image segmentation dataset and show examples of endoscopic images of the gastrointestinal tract. The unlearnable examples show how the addition of unlearnable noise makes the image unsuitable for training a segmentation model without significantly altering its visual appearance.", "section": "A.4 Visualization"}]