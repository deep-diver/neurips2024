[{"figure_path": "hkBhX5ABjk/figures/figures_3_1.jpg", "caption": "Figure 1: The conceptual workflow of the multi-agent domain calibration framework. The orange arrow represents the simulated data flow in the source domain, with the transition function T(s's, a, \u03be), while the blue represents the offline data in the target domain, with the transition function T(s's, a, \u03be*). The subscripts \u201csrc\u201d and \u201ctar\u201d are used to distinguish between the source and target domains, respectively. After learning the grouping scheme, we use the red arrow to represent the process of domain calibration by MARL value decomposition methods.", "description": "This figure illustrates the Madoc framework.  It begins with an imperfect source domain and offline data from the target domain.  The source domain data is used to train a VAE which clusters similar physics parameters into groups, represented by different agents. These agents cooperatively learn calibration policies using MARL to adjust the source domain parameters, aiming to match the target trajectory distribution. The calibrated source domain is then used to train a final policy via an online RL algorithm, which can then be directly deployed in the target domain.", "section": "4 Method"}, {"figure_path": "hkBhX5ABjk/figures/figures_5_1.jpg", "caption": "Figure 2: The Pearson correlation between the critic value of the gravity coefficient and the absolute calibration error. Each dot represents a sampled action, which is then fed into the corresponding critic to compute the critic value. When the parameters output by the calibration actor are closer to the target parameters (indicating a smaller absolute calibration error), the evaluation value output by a \"good\" critic should be higher.", "description": "This figure shows the Pearson correlation between the critic value for the gravity coefficient and the absolute calibration error.  Each point represents a sampled action, where the critic value is computed by feeding the action into the corresponding critic.  The plot demonstrates that a stronger negative correlation exists between critic value and absolute calibration error for the multi-agent (MA) method, indicating that the multi-agent approach is better at identifying and reducing errors than the single-agent (SA) approach.", "section": "4.2 Multi-Agent Domain Calibration"}, {"figure_path": "hkBhX5ABjk/figures/figures_8_1.jpg", "caption": "Figure 3: (a) The visualization results of the automatic grouping technique. The left part is a schematic of the Hopper robot, each point on it representing a physics parameter to be calibrated, and different colors indicate the final grouping results. For example, the four parameters encircled by the yellow rectangle are clustered into one group in the embedding space on the right part. (b) The normalized average return of Madoc and Madoc-S on the Ant environment. We can observe that as the parameter dimension of the source domain increases, the performance gap between them (indicated by the black shadow) becomes more pronounced.", "description": "This figure visualizes the automatic grouping of physics parameters in the Madoc algorithm and compares the performance of Madoc and its single-agent counterpart (Madoc-S).  (a) shows how similar parameters are grouped together based on their effect on the robot's dynamics. (b) demonstrates the performance gap between Madoc and Madoc-S increases with the number of parameters to be calibrated, highlighting the efficiency of Madoc's multi-agent approach.", "section": "5.3 Effectiveness of Different Components"}, {"figure_path": "hkBhX5ABjk/figures/figures_9_1.jpg", "caption": "Figure 4: The generalization ability of Madoc compared to the baselines under different conditions.", "description": "This figure shows the performance of Madoc and several baseline algorithms across datasets of varying sizes and with different initial parameter ranges of the source domain.  Subfigure (a) compares the performance on the NeoRL benchmark using small, medium, and large datasets; demonstrating Madoc's robustness to data size. Subfigure (b) shows performance variations when different initial ranges (hard, normal, easy) for the domain parameters are used, highlighting Madoc's ability to handle varying degrees of parameter uncertainty.", "section": "5 Experiments"}, {"figure_path": "hkBhX5ABjk/figures/figures_18_1.jpg", "caption": "Figure 1: The conceptual workflow of the multi-agent domain calibration framework. The orange arrow represents the simulated data flow in the source domain, with the transition function T(s, a, \u03be), while the blue represents the offline data in the target domain, with the transition function T(s, a, \u03be*). The subscripts \u201csrc\u201d and \u201ctar\u201d are used to distinguish between the source and target domains, respectively. After learning the grouping scheme, we use the red arrow to represent the process of domain calibration by MARL value decomposition methods.", "description": "This figure illustrates the Madoc framework's workflow.  It shows how simulated data from a source domain and offline data from a target domain are used to calibrate the source domain's parameters.  The process involves using a variational autoencoder (VAE) for parameter grouping and multi-agent reinforcement learning (MARL) for calibration.", "section": "4 Method"}, {"figure_path": "hkBhX5ABjk/figures/figures_22_1.jpg", "caption": "Figure 3: (a) The visualization results of the automatic grouping technique. The left part is a schematic of the Hopper robot, each point on it representing a physics parameter to be calibrated, and different colors indicate the final grouping results. For example, the four parameters encircled by the yellow rectangle are clustered into one group in the embedding space on the right part. (b) The normalized average return of Madoc and Madoc-S on the Ant environment. We can observe that as the parameter dimension of the source domain increases, the performance gap between them (indicated by the black shadow) becomes more pronounced.", "description": "Figure 3(a) visualizes the automatic grouping of physics parameters in the Hopper robot, showing how parameters with similar effects are clustered. Figure 3(b) compares the performance of Madoc and its single-agent variant (Madoc-S) on the Ant environment, demonstrating Madoc's improved efficiency with increasing parameter dimensions.", "section": "5.3 Effectiveness of Different Components"}, {"figure_path": "hkBhX5ABjk/figures/figures_23_1.jpg", "caption": "Figure 3: (a) The visualization results of the automatic grouping technique. The left part is a schematic of the Hopper robot, each point on it representing a physics parameter to be calibrated, and different colors indicate the final grouping results. For example, the four parameters encircled by the yellow rectangle are clustered into one group in the embedding space on the right part. (b) The normalized average return of Madoc and Madoc-S on the Ant environment. We can observe that as the parameter dimension of the source domain increases, the performance gap between them (indicated by the black shadow) becomes more pronounced.", "description": "This figure visualizes the automatic grouping technique used in Madoc and compares its performance with a single-agent approach (Madoc-S).  Panel (a) shows how physics parameters of the Hopper robot are clustered into groups based on their similar effects on the dynamics. Panel (b) demonstrates that the multi-agent approach (Madoc) outperforms the single-agent approach (Madoc-S), especially as the number of parameters increases, highlighting the efficiency and fidelity gains achieved by the multi-agent strategy.", "section": "5.3 Effectiveness of Different Components"}, {"figure_path": "hkBhX5ABjk/figures/figures_23_2.jpg", "caption": "Figure 1: The conceptual workflow of the multi-agent domain calibration framework. The orange arrow represents the simulated data flow in the source domain, with the transition function T(s, a, \u03be), while the blue represents the offline data in the target domain, with the transition function T(s, a, \u03be*). The subscripts \u201csrc\u201d and \u201ctar\u201d are used to distinguish between the source and target domains, respectively. After learning the grouping scheme, we use the red arrow to represent the process of domain calibration by MARL value decomposition methods.", "description": "This figure illustrates the Madoc framework for multi-agent domain calibration.  It shows the flow of simulated data from the source domain and offline data from the target domain.  The source domain is calibrated using a multi-agent reinforcement learning approach (MARL) to match the target trajectory distribution.  Different colors represent simulated data, offline data, and the calibration process. The agents cooperate to adjust multiple parameters simultaneously.", "section": "4 Method"}]