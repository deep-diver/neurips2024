[{"figure_path": "wZigMVFURk/figures/figures_8_1.jpg", "caption": "Figure 2: Optimization of canonical PINN [36] on the 1D-Reaction under different region sizes. To highlight the region size change, we adopt the moving average over time and mark the temporal standard deviation with shadow. The steep training loss is caused by the learning difficulty of PDE.", "description": "This figure shows the results of experiments on the 1D-Reaction benchmark using canonical PINN.  Different initial trust region sizes (r) were tested, and the plots show how the trust region size, training loss, and test rMSE (root mean squared error) evolve over training iterations. The moving average of the trust region size is displayed, with the standard deviation shaded.  The plots illustrate how RoPINN adjusts the trust region size and impacts the model's convergence and generalization.", "section": "4.2 Algorithm Analysis"}, {"figure_path": "wZigMVFURk/figures/figures_8_2.jpg", "caption": "Figure 2: Optimization of canonical PINN [36] on the 1D-Reaction under different region sizes. To highlight the region size change, we adopt the moving average over time and mark the temporal standard deviation with shadow. The steep training loss is caused by the learning difficulty of PDE.", "description": "This figure shows the results of training a canonical PINN on the 1D-Reaction problem using different initial region sizes for the RoPINN algorithm.  It demonstrates how RoPINN adjusts the trust region size over training iterations to find a balance between training stability and generalization. The plots show the trust region size, training loss, and test rMSE for various initial region sizes.  The shadow around the region size curves indicates the temporal standard deviation, providing insight into the dynamic adjustments made by RoPINN.", "section": "4.2 Algorithm Analysis"}, {"figure_path": "wZigMVFURk/figures/figures_9_1.jpg", "caption": "Figure 1: Comparison between previous methods and ours. Previous point optimization methods train PINNs via the loss on selected points, which is different from our region optimization paradigm.", "description": "This figure compares point optimization methods with the proposed region optimization method.  Point optimization methods use the loss function evaluated at a finite set of scattered points to train the physics-informed neural network (PINN). The authors propose region optimization, which extends the optimization process from these individual points to their surrounding continuous regions.  This is illustrated visually by showing how the optimization process differs\u2014the loss is calculated over a set of points in point optimization, but it's calculated over a region surrounding each point in region optimization.", "section": "3 Method"}, {"figure_path": "wZigMVFURk/figures/figures_9_2.jpg", "caption": "Figure 1: Comparison between previous methods and ours. Previous point optimization methods train PINNs via the loss on selected points, which is different from our region optimization paradigm.", "description": "This figure compares different PINN training methods.  Point optimization methods, shown on the left, focus on minimizing loss at specific, selected points within the problem domain.  In contrast, the authors' proposed region optimization method, shown on the right, expands the optimization to encompass the continuous neighborhood around each point, leading to a more robust and generalized solution.  This expansion aims to address the inherent limitations of using only scattered points for training models intended to solve continuous problems.", "section": "1 Introduction"}, {"figure_path": "wZigMVFURk/figures/figures_9_3.jpg", "caption": "Figure 1: Comparison between previous methods and ours. Previous point optimization methods train PINNs via the loss on selected points, which is different from our region optimization paradigm.", "description": "This figure compares different training methods for Physics-Informed Neural Networks (PINNs).  Previous methods, shown on the left, optimize the PINN loss function only at a small number of discrete, selected points within the solution domain.  In contrast, the authors' proposed method (ROPINN), shown on the right, optimizes the loss function across entire regions surrounding each selected point, rather than just the points themselves.  This regional optimization approach is intended to improve the accuracy and generalization ability of the PINN model.", "section": "3 Method"}, {"figure_path": "wZigMVFURk/figures/figures_25_1.jpg", "caption": "Figure 1: Comparison between previous methods and ours. Previous point optimization methods train PINNs via the loss on selected points, which is different from our region optimization paradigm.", "description": "This figure compares different PINN training methods.  The left side shows typical point optimization methods, which focus on calculating the loss at specific, selected points. The right side shows the proposed region optimization method, which instead calculates the loss over continuous regions surrounding the selected points.  This extension from points to regions is the core difference and is intended to improve the accuracy and generalization of the PINN model by better representing the continuous nature of PDEs.", "section": "3 Method"}, {"figure_path": "wZigMVFURk/figures/figures_28_1.jpg", "caption": "Figure 8: Hyperparameter analyses for To in RoPINN based on PINN [36] and PINNsFormer [58] on different benchmarks. We change To in {1, 5, 10, 15, 20, 25, 30} and record the rMSE.", "description": "The figure shows the effect of the hyperparameter To (number of past iterations retained to estimate the trust region) on the performance of RoPINN.  Four subfigures illustrate the results for different model-benchmark combinations (1D-Reaction PINN, 1D-Wave PINN, Convection PINN, and Convection PINNsFormer).  It demonstrates that RoPINN consistently outperforms vanilla PINN across various To values but suggests a potential optimal range for To that balances training stability and generalization.", "section": "4.2 Algorithm Analysis"}, {"figure_path": "wZigMVFURk/figures/figures_29_1.jpg", "caption": "Figure 1: Comparison between previous methods and ours. Previous point optimization methods train PINNs via the loss on selected points, which is different from our region optimization paradigm.", "description": "This figure compares different optimization methods for Physics-Informed Neural Networks (PINNs).  The typical approach, point optimization, trains the PINN by minimizing the loss function calculated at only a few selected points.  This is contrasted with the novel region optimization method proposed in the paper, which expands the optimization process from isolated points to their surrounding continuous neighborhood regions. This visual helps illustrate the key difference between the established methodology and the author's proposed improvement.", "section": "3 Method"}]