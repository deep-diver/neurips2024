[{"figure_path": "jImXgQEmX3/figures/figures_1_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure illustrates the finite state machine (FSM) based reasoning logic of AMOR.  Each box represents a state in the FSM, and each arrow represents a transition between states based on the output of the module executed in the current state.  Special tokens, like [NEXT] indicate whether additional steps are needed or if the task is complete. The diagram shows how AMOR proceeds through a series of steps to answer a question, using different modules for tasks such as question decomposition, document retrieval, relevance judgment, passage retrieval, and answer extraction. This FSM structure allows for process-based feedback, enabling human supervision and adaptability.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_3_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure is a state transition diagram illustrating the workflow of AMOR. Each box represents a state in the finite state machine, and each arrow represents a transition to the next state based on the results of a specific module's operation.  The modules themselves represent different processes, like question decomposition, document retrieval, or answer extraction. Branch tokens, such as [NEXT], indicate different execution results and guide the transition between states.  Essentially, it visualizes how AMOR moves through the process of answering a complex question by breaking it down into simpler modules and making decisions based on each module's output.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_8_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows a state transition diagram illustrating the workflow of the AMOR model. Each box represents a state in the finite state machine (FSM), and each arrow indicates a transition between states based on the output of a specific module.  The modules represent different steps in the reasoning process, such as question decomposition, document retrieval, and answer extraction. The branch tokens, like [NEXT], control the transitions based on the results of each module. This allows for a flexible and adaptive reasoning process controlled by the FSM.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_14_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows the workflow of AMOR, which is based on a finite state machine. Each state represents a step in the reasoning process, and each module represents a specific task or operation. The transitions between states are determined by the output of the modules, which are indicated by branch tokens. For example, the [NEXT] token indicates that more information is needed, and the [FINISH] token indicates that the task is complete. This design allows for human supervision by providing feedback to individual modules.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_17_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows the workflow of AMOR, which is based on a finite state machine (FSM). Each state represents a step in the reasoning process, and each module corresponds to a specific task (e.g., document retrieval, relevance judgment, answer extraction).  The transitions between states are determined by the output of the modules, which may include special tokens indicating the next step in the process. The figure visually depicts how AMOR progresses through the different stages of question answering, making its reasoning logic clear and understandable.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_18_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows the workflow of AMOR, which is based on a finite state machine (FSM). Each state represents a specific task or module, and the transitions between states depend on the outputs of the modules. The modules can be either tools or LLMs. The special branch tokens, such as [NEXT] and [FINISH], determine the next state in the FSM.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_18_2.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows the workflow of AMOR using a finite state machine (FSM). Each state represents a specific step in the reasoning process and each transition is triggered by the result of the corresponding module. There are six main states: Question Decomposition, Document Retrieval, Relevance Judgement, Passage Retrieval, Answer Extraction, and Task Completion.  The figure illustrates how the agent moves between states based on the outputs of various modules, which include LLMs and external tools. The use of branch tokens ([NEXT], [FINISH], [RELEVANT], [IRRELEVANT], [ANSWERABLE], [UNANSWERABLE]) facilitates the transition to the next relevant state in the FSM and directs the execution of the appropriate module.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_23_1.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure illustrates the workflow of AMOR, showing how it uses a finite-state machine (FSM) to solve problems. Each state represents a step in the problem-solving process, and each transition represents a module execution. Different modules can be involved depending on the current state and the outcome of previous modules. Branch tokens, such as [NEXT], help control the flow. ", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_23_2.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure shows the state transition diagram of the AMOR agent framework.  Each box represents a state in the finite state machine (FSM), and each state has a corresponding module that is executed. The modules may produce various outputs, categorized by special branch tokens (e.g., \n[NEXT], [FINISH], etc.).  Based on these tokens, the system transitions to the next state. The overall process details the flow of actions in solving a question by decomposing it into sub-queries, retrieving documents and passages, judging relevance, extracting answers, and finally completing the task.", "section": "3 AMOR agent"}, {"figure_path": "jImXgQEmX3/figures/figures_23_3.jpg", "caption": "Figure 1: AMOR'S state transition diagram. Each box represents a state and the corresponding module that is executed when entering the state. There may be multiple categories of execution results distinguished by special branch tokens such as \u201c[NEXT].\u201d Then AMOR determines the next state based on the branch tokens.", "description": "This figure is a state transition diagram showing how AMOR works. Each box represents a state in the process, and each arrow represents a transition between states based on the output of a module. The modules are responsible for different tasks, such as document retrieval, relevance judgment, and answer extraction. The branch tokens indicate the type of output produced by a module, and this determines which state the agent transitions to next.  The diagram shows how AMOR uses these modules and transitions to solve a complex question-answering task through a series of steps.", "section": "3 AMOR agent"}]