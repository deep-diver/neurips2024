[{"figure_path": "ykACV1IhjD/figures/figures_5_1.jpg", "caption": "Figure 1: Annealing strategy. When \u03b3 < 0, it facilitates exploration by reducing the non-convexity of the objective function. As \u03b3 increases, it promotes optimal discrete solutions by smoothing away suboptimal continuous ones.", "description": "This figure illustrates the annealing process used in the Continuous Relaxation Annealing (CRA) strategy.  It shows how the penalty parameter \u03b3 dynamically shifts the focus of the optimization process.  When \u03b3 < 0, the penalty term smooths the non-convex objective function, allowing for broader exploration of the continuous solution space. As \u03b3 increases towards 0 and then becomes positive, the penalty term increasingly enforces discreteness, guiding the solution towards the optimal discrete solution.  The three panels represent different stages of the annealing process, visually depicted as surfaces with contour lines representing the loss function. The red dots on the surfaces illustrate the solution path during the annealing.", "section": "3 Continuous relaxation annealing for UL-based solvers"}, {"figure_path": "ykACV1IhjD/figures/figures_7_1.jpg", "caption": "Figure 4: (Right) computational runtime (in seconds) of the CRA-PI-GNN solvers with the GraphSage and Conv architectures on 100-RRG with varying numbers of nodes N. Error bars represent the standard deviations of the results.", "description": "This figure shows the computational runtime of the CRA-PI-GNN solver using two different Graph Neural Network (GNN) architectures, GraphSage and Conv, on 100-regular random graphs (RRGs) with varying numbers of nodes (N).  The y-axis represents the solution runtime in seconds, and the x-axis represents the number of nodes (N). Error bars indicate the standard deviations of the results, showing the variability in runtime across different runs. The figure aims to demonstrate the scalability of the CRA-PI-GNN solver as the problem size increases.  The near-linear scaling of the runtime suggests good scalability.", "section": "5.2 MIS problems"}, {"figure_path": "ykACV1IhjD/figures/figures_8_1.jpg", "caption": "Figure 5: The dynamics of cost function for MIS problems on RRGs with N = 10,000 nodes varying degrees d as a function of the number of parameters updates NEPOCH.", "description": "This figure shows the training curves of the cost function f(x;C) for the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with 10,000 nodes. Different lines represent different degree values (d = 3, 5, 20, 100), and the curves for the PI-GNN (original method) and CRA-PI-GNN (with two different initial values of \u03b3) are shown.  The plots illustrate how the cost function changes over training epochs for the four different scenarios. This highlights the performance differences between PI-GNN and CRA-PI-GNN, and the effect of the annealing parameter \u03b3 on the training process, particularly concerning the avoidance of local optima.", "section": "3.2 Continuous relaxation annealing"}, {"figure_path": "ykACV1IhjD/figures/figures_8_2.jpg", "caption": "Figure 6: ApR on DBM problems.", "description": "This figure shows the approximation ratio (ApR) achieved by PI-GNN and CRA-PI-GNN on 27 diverse bipartite matching (DBM) problem instances.  The results demonstrate that CRA-PI-GNN consistently outperforms PI-GNN across all instances, indicating the effectiveness of the CRA approach in enhancing solution quality for practical, non-graph based combinatorial optimization problems.", "section": "5.4 Diverse bipartite matching"}, {"figure_path": "ykACV1IhjD/figures/figures_17_1.jpg", "caption": "Figure 7: The top graph shows the independent set density for MIS problems (left) and the cut ratio for MaxCut problems (right) as a function of degree d using the PI-GNN solver with varying system size N. Each data point represents the average result of five different graph instances, with the error bars indicating the standard deviation of those results. The bottom graph shows the cost as a function of the number of parameter updates NEPOCH, for N = 10000 MIS problems on 5-RRG and 20-RRG. The histogram represents the relaxed vector distribution with varying numbers of parameter updates NEPOCH. Each point in the bottom-left plot is linked to the corresponding bottom-right histogram.", "description": "This figure compares the performance of the PI-GNN solver for the Maximum Independent Set (MIS) and MaxCut problems on random regular graphs (RRGs) with varying degrees (d) and number of nodes (N). The top plots show the independent set density (MIS) and cut ratio (MaxCut) as functions of d, illustrating how the PI-GNN solver struggles to find optimal solutions in denser graphs (higher d). The bottom plots show the dynamics of the cost function for MIS problems on 5-RRG and 20-RRG, highlighting how the solver gets trapped in local optima, especially for denser graphs.", "section": "Numerical validation of practical issues presented in Section 3.1"}, {"figure_path": "ykACV1IhjD/figures/figures_21_1.jpg", "caption": "Figure 9: (Left) Independent set density as a function of curveture rate \u03b1 in Eq. (5). (Right) Cut ratio as a function of curveture rate \u03b1 in Eq. (5). Error bars represent the standard deviations of the results", "description": "This figure displays the impact of the curve rate (\u03b1) parameter on the performance of the CRA method for two different problems: Maximum Independent Set (MIS) and MaxCut.  The left panel shows the independent set density for MIS problems with degrees d=5 and d=20, indicating that higher curve rates lead to lower density but varying effects across different degrees.  The right panel shows the cut ratio for MaxCut problems with degrees d=5 and d=35.  Here, the cut ratio appears to be less sensitive to changes in the curve rate compared to MIS.", "section": "3.2 Continuous relaxation annealing"}]