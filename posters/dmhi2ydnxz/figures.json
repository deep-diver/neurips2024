[{"figure_path": "dmhi2ydnXZ/figures/figures_7_1.jpg", "caption": "Figure 1: Top: sOPTICS's graphs on L1, L2, cosine, JS on Mnist. sOPTICS runs within 3 seconds while scikit-learn OPTICS requires 1.5 hours on L2. Bottom: AMI of DBSCAN variants on L1, L2, cosine, JS over the range of \u025b suggested by sOPTICS. Cosine and JS give the highest AMI.", "description": "This figure shows the results of applying sOPTICS and several DBSCAN variants to the MNIST dataset. The top part displays the sOPTICS reachability plots for four different distance metrics: L1, L2, cosine, and Jensen-Shannon (JS). These plots visualize the density-based clustering structure and help guide the selection of the epsilon parameter for DBSCAN.  The bottom part shows the Adjusted Mutual Information (AMI) scores for different DBSCAN variants across a range of epsilon values suggested by sOPTICS for each distance metric.  The results show that sOPTICS is much faster than the scikit-learn OPTICS implementation and that the cosine and JS distance metrics generally provide the highest AMI scores.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_9_1.jpg", "caption": "Figure 1: Top: sOPTICS's graphs on L1, L2, cosine, JS on Mnist. sOPTICS runs within 3 seconds while scikit-learn OPTICS requires 1.5 hours on L2. Bottom: AMI of DBSCAN variants on L1, L2, cosine, JS over the range of \u025b suggested by sOPTICS. Cosine and JS give the highest AMI.", "description": "This figure shows a comparison of sOPTICS and the scikit-learn version of OPTICS, highlighting the significant speed improvement achieved by sOPTICS (3 seconds vs. 1.5 hours for L2). The bottom part displays the Adjusted Mutual Information (AMI) scores for various DBSCAN algorithms across different distance metrics (L1, L2, cosine, JS) over a range of epsilon (\u025b) values determined by sOPTICS. The results indicate that the cosine and Jensen-Shannon (JS) distances yield the highest AMI scores.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_9_2.jpg", "caption": "Figure 3: NMI comparison of DBSCAN variants on L2, cosine, \u03c7\u00b2, and JS and kernel k-means on Mnist8m over a wide ranges of \u025b suggested by sOPTICS. sDBSCAN and sDBSCAN-1NN runs within 10 mins and 15 mins while sngDBSCAN demands nearly 1 hour. Kernel k-means (k = 10) [21] runs in 15 mins on a supercomputer of 32 nodes, each has 64 threads and 128 GB of DRAM.", "description": "The figure compares the performance of different DBSCAN variants and kernel k-means on the Mnist8m dataset.  The Normalized Mutual Information (NMI) is plotted against the epsilon (\u03b5) parameter, which is a key parameter in DBSCAN.  sOPTICS was used to suggest a range of relevant epsilon values.  The figure highlights that sDBSCAN and its 1-Nearest Neighbor (1NN) variant achieve comparable performance to kernel k-means, a significantly more resource-intensive method, while running significantly faster than other DBSCAN variants.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_16_1.jpg", "caption": "Figure 4: Reachability-plot dendrograms of OPTICS and sOPTICS over L2 and L1 on Mnist. While sOPTICS needs less than 30 seconds, scikit-learn OPTICS requires 1.5 hours on L2 and 0.5 hours on L1.", "description": "This figure compares the reachability plots generated by the OPTICS algorithm (from the scikit-learn library) and the proposed sOPTICS algorithm on the MNIST dataset.  The plots visualize the density-based clustering structure for both L1 and L2 distance metrics.  The key observation is the significant time difference:  sOPTICS produces its results in under 30 seconds, while the standard OPTICS takes 1.5 hours for L2 and 0.5 hours for L1. The similarity in the shape of the curves indicates that sOPTICS effectively approximates the results of the original OPTICS algorithm.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_18_1.jpg", "caption": "Figure 4: Reachability-plot dendrograms of OPTICS and sOPTICS over L2 and L1 on Mnist. While sOPTICS needs less than 30 seconds, scikit-learn OPTICS requires 1.5 hours on L2 and 0.5 hours on L1.", "description": "This figure compares the reachability plots generated by the standard OPTICS algorithm and the proposed sOPTICS algorithm for L1 and L2 distance metrics on the MNIST dataset.  It highlights the significant speedup achieved by sOPTICS (less than 30 seconds) compared to the much longer runtime of the standard OPTICS algorithm (1.5 hours for L2 and 0.5 hours for L1). The reachability plots themselves visually represent the density-based clustering structure of the data, with valleys indicating cluster boundaries.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_18_2.jpg", "caption": "Figure 4: Reachability-plot dendrograms of OPTICS and sOPTICS over L2 and L1 on Mnist. While sOPTICS needs less than 30 seconds, scikit-learn OPTICS requires 1.5 hours on L2 and 0.5 hours on L1.", "description": "The figure shows four reachability-plot dendrograms generated by OPTICS and sOPTICS algorithms on the MNIST dataset using L1 and L2 distances.  The plots visualize the density-based clustering structure of the dataset.  The key observation is that sOPTICS achieves comparable results to OPTICS significantly faster; sOPTICS takes less than 30 seconds, while the scikit-learn implementation of OPTICS takes 1.5 hours for L2 and 0.5 hours for L1.", "section": "A OPTICS and SOPTICS"}, {"figure_path": "dmhi2ydnXZ/figures/figures_20_1.jpg", "caption": "Figure 7: SDBSCAN's NMI on L1 and L2 with various \u03c3 on Pamaps with k = 10, m = minPts = 50. Each runs in less than 20 seconds.", "description": "The figure shows the impact of the parameter \u03c3 (sigma) on the Normalized Mutual Information (NMI) scores achieved by the SDBSCAN algorithm.  Two different distance metrics (L1 and L2) are used, and different values of \u03c3 are tested (50, 100, 200, 400). The x-axis represents the epsilon (\u03b5) parameter, and the y-axis represents the NMI.  Each data point in the graph represents a single run of SDBSCAN, which took less than 20 seconds to complete. The purpose is to show how sensitive the performance of SDBSCAN is to the parameter \u03c3 and to determine the optimal \u03c3 values for both L1 and L2 distances.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_20_2.jpg", "caption": "Figure 8: SOPTICS's graphs on L1 with various \u03c3 on Pamaps with k = 10, m = minPts = 50. Each runs in less than 2 minutes.", "description": "This figure shows the reachability plots generated by sOPTICS on the Pamap2 dataset using the L1 distance metric.  Different plots represent different values of the parameter \u03c3 used in the random kernel feature mapping. The x-axis represents the point index in the linear ordering produced by sOPTICS, and the y-axis represents the reachability distance. The plots illustrate how the choice of \u03c3 affects the shape of the reachability plot and, consequently, the identification of clusters.  The caption indicates that each plot was generated in under 2 minutes.", "section": "4.2 Comparison on million-point data sets: Pamap2 and Mnist8m"}, {"figure_path": "dmhi2ydnXZ/figures/figures_20_3.jpg", "caption": "Figure 4: Reachability-plot dendrograms of OPTICS and sOPTICS over L2 and L1 on Mnist. While sOPTICS needs less than 30 seconds, scikit-learn OPTICS requires 1.5 hours on L2 and 0.5 hours on L1.", "description": "The figure shows the reachability-plot dendrograms generated by OPTICS and sOPTICS algorithms for L2 and L1 distances on the MNIST dataset.  It highlights the significant difference in computation time between the two methods; sOPTICS is substantially faster. The visual similarity of the dendrograms suggests that sOPTICS effectively approximates the results of OPTICS.", "section": "C.1 SOPTICS vs. scikit-learn OPTICS on Mnist over L1 and L2"}, {"figure_path": "dmhi2ydnXZ/figures/figures_20_4.jpg", "caption": "Figure 7: SDBSCAN's NMI on L1 and L2 with various \u03c3 on Pamaps with k = 10, m = minPts = 50. Each runs in less than 20 seconds.", "description": "This figure shows the Normalized Mutual Information (NMI) scores achieved by the sDBSCAN algorithm on the Pamap2 dataset using L1 and L2 distances.  The experiment varies the parameter \u03c3 (sigma) in the random kernel mappings, while keeping k (number of closest/furthest random vectors) at 10 and m (number of closest/furthest points to each random vector) at 50 (equal to minPts).  Each experimental run took less than 20 seconds to complete, demonstrating the efficiency of the sDBSCAN approach. The plots illustrate the sensitivity of the algorithm's performance to the \u03c3 parameter and its optimal range for achieving high NMI scores on both L1 and L2 distance metrics.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_21_1.jpg", "caption": "Figure 11: sOPTICS's graphs on x\u00b2 and JS with d' = {3d, 5d} on Mnist with k = 5, m = minPts = 50. Each runs in less than 3 seconds.", "description": "This figure shows the reachability plots generated by sOPTICS for the chi-squared (x\u00b2) and Jensen-Shannon (JS) distance measures on the MNIST dataset.  Two different values of d' (the dimensionality of the random feature embedding) are compared: 3d and 5d, where d is the original dimensionality of the data. The plots visualize the reachability distance for each point, which helps to identify clusters and determine appropriate parameter settings for DBSCAN. The key observation is that sOPTICS with different values of d' produce similar reachability plots, indicating the robustness of the method across varying embedding dimensionalities. Each plot was generated in under 3 seconds, showcasing the efficiency of the sOPTICS algorithm.", "section": "3.1 SDBSCAN: A simple and scalable density-based clustering"}, {"figure_path": "dmhi2ydnXZ/figures/figures_21_2.jpg", "caption": "Figure 12: sDBSCAN's NMI on L1 with various k, m on Pamaps with minPts = 50.", "description": "The figure shows the impact of parameters k and m on the Normalized Mutual Information (NMI) achieved by sDBSCAN on the Pamap2 dataset using the L1 distance.  The parameter k represents the number of closest and furthest random vectors considered for each point, while m represents the number of closest and furthest points associated with each random vector.  The figure presents two subplots: (a) k = 5 and (b) k = 10. Each subplot illustrates the NMI obtained by sDBSCAN with different values of m (50, 100, 200, 400) and varying epsilon (\u03b5).  The results demonstrate how choices for k and m affect the accuracy of sDBSCAN on this dataset. The x-axis represents the epsilon values, and the y-axis shows the NMI scores.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_22_1.jpg", "caption": "Figure 4: Reachability-plot dendrograms of OPTICS and sOPTICS over L2 and L1 on Mnist. While sOPTICS needs less than 30 seconds, scikit-learn OPTICS requires 1.5 hours on L2 and 0.5 hours on L1.", "description": "The figure shows the reachability plots generated by OPTICS and sOPTICS algorithms on the MNIST dataset using L1 and L2 distances.  The plots visualize the density-based clustering structure.  The key observation is the significant speedup achieved by sOPTICS (less than 30 seconds) compared to the scikit-learn implementation of OPTICS (1.5 hours for L2 and 0.5 hours for L1).  The plots illustrate the differences in the reachability distances for different algorithms and distances, highlighting the efficiency of sOPTICS.", "section": "A OPTICS and sOPTICS"}, {"figure_path": "dmhi2ydnXZ/figures/figures_22_2.jpg", "caption": "Figure 2: AMI comparison of DBSCAN variants on L1, L2 and cosine on Pamap2 over a wide range of \u03b5 suggested by sOPTICS. sDBSCAN runs within 0.3 mins, nearly 10\u00d7,10\u00d7,45\u00d7,100\u00d7 faster than sngDBSCAN, uDBSCAN++, kDBSCAN++, and DBSCAN. L1 gives the highest AMI.", "description": "The figure compares the Adjusted Mutual Information (AMI) scores of different DBSCAN variants (sDBSCAN, DBSCAN, uDBSCAN++, kDBSCAN++, sngDBSCAN) on the Pamap2 dataset for L1, L2, and cosine distances across a range of epsilon (\u03b5) values suggested by sOPTICS.  The results show that sDBSCAN consistently achieves higher AMI scores than other algorithms, with L1 distance showing the highest AMI.  Significantly, sDBSCAN demonstrates a significant speed improvement over the other variants, achieving a 10-100x speedup.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_23_1.jpg", "caption": "Figure 5: sOPTICS's graphs on L1, L2 and cosine distances on Pamap2. Each runs within 2 minutes. scikit-learn OPTICS could not finish in 4 hours.", "description": "This figure shows the results of running sOPTICS on the Pamap2 dataset using L1, L2, and cosine distances. The key takeaway is that sOPTICS is significantly faster than the scikit-learn implementation of OPTICS, completing its analysis in just 2 minutes, while scikit-learn OPTICS failed to finish within 4 hours. This highlights the scalability of sOPTICS for large datasets.", "section": "4.2 Comparison on million-point data sets: Pamap2 and Mnist8m"}, {"figure_path": "dmhi2ydnXZ/figures/figures_23_2.jpg", "caption": "Figure 16: sDBSCAN's NMI on L2, cosine, x\u00b2, and JS on Mnist8m with k = 10, m = minPts = 100. Each runs within 20 minutes.", "description": "This figure compares the normalized mutual information (NMI) scores achieved by four different algorithms (sDBSCAN-1NN, sDBSCAN, Kernel k-means, and sngDBSCAN) on the MNIST8m dataset using four different distance measures (L2, cosine, chi-squared, and Jensen-Shannon).  The x-axis represents the epsilon (\u03b5) parameter, and the y-axis represents the NMI score.  The figure shows the performance of each algorithm across various values of \u03b5 for each distance measure. Each run took around 20 minutes.", "section": "C.4 Detailed comparison on Pamap2"}, {"figure_path": "dmhi2ydnXZ/figures/figures_23_3.jpg", "caption": "Figure 1: Top: SOPTICS\u2019s graphs on L1, L2, cosine, JS on Mnist. SOPTICS runs within 3 seconds while scikit-learn OPTICS requires 1.5 hours on L2. Bottom: AMI of DBSCAN variants on L1, L2, cosine, JS over the range of \u025b suggested by sOPTICS. Cosine and JS give the highest AMI.", "description": "The figure shows the results of applying sOPTICS and DBSCAN variants to the MNIST dataset using four different distance metrics (L1, L2, cosine, and Jensen-Shannon). The top part displays the reachability plots generated by sOPTICS, highlighting the efficiency of sOPTICS compared to the scikit-learn OPTICS (which takes significantly longer to produce similar results). The bottom part compares the Adjusted Mutual Information (AMI) scores of various DBSCAN implementations across the different distance metrics, showing that cosine and Jensen-Shannon distances yield the highest AMI scores.", "section": "4 Experiment"}, {"figure_path": "dmhi2ydnXZ/figures/figures_24_1.jpg", "caption": "Figure 1: Top: SOPTICS's graphs on L1, L2, cosine, JS on Mnist. SOPTICS runs within 3 seconds while scikit-learn OPTICS requires 1.5 hours on L2. Bottom: AMI of DBSCAN variants on L1, L2, cosine, JS over the range of \u03b5 suggested by sOPTICS. Cosine and JS give the highest AMI.", "description": "This figure shows the results of applying sOPTICS and comparing different DBSCAN variants. The top part displays reachability plots generated by sOPTICS for various distance measures (L1, L2, cosine, and Jensen-Shannon) on the MNIST dataset.  It highlights the speed advantage of sOPTICS over scikit-learn OPTICS. The bottom part presents a comparison of the Adjusted Mutual Information (AMI) scores for several DBSCAN variants (sDBSCAN, DBSCAN, uDBSCAN++, kDBSCAN++, and sngDBSCAN) across the different distance measures.  The epsilon (\u03b5) values used were guided by the sOPTICS results. The results show that cosine and Jensen-Shannon distances yield the highest AMI scores.", "section": "4 Experiment"}]