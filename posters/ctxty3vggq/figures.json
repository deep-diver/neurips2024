[{"figure_path": "ctxtY3VGGq/figures/figures_5_1.jpg", "caption": "Figure 1: Visualization of the interface between the fractional and integral algorithms", "description": "This figure visualizes a single step in the interaction between the fractional and integral algorithms.  It shows how the integral algorithm maintains an instance of the fractional algorithm (ONF), along with a probability distribution over valid cache states.  Upon a page request, the fractional algorithm updates its solution, and the integral algorithm adjusts its probability distribution to remain consistent and balanced (also illustrated is the process of handling samples).", "section": "3 Algorithmic Framework and Analysis Overview"}, {"figure_path": "ctxtY3VGGq/figures/figures_5_2.jpg", "caption": "Figure 1: Visualization of the interface between the fractional and integral algorithms", "description": "This figure visualizes a single step in the interaction between the fractional and integral algorithms. It shows how the fractional algorithm maintains a probability distribution over cache states and uses this to guide the integral algorithm's decision-making.  The integral algorithm maintains consistency with the fractional algorithm's solution and ensures that the probability distribution maintains balance. When the fractional algorithm demands a sample, the integral algorithm provides one. The figure also showcases how the algorithm handles requests (by fetching the requested page if necessary, adjusting the fractional solution, and updating the probability distribution), and demonstrates the communication between the fractional and integral components, especially the exchange of samples and updates to the confidence bounds.", "section": "3 Algorithmic Framework and Analysis Overview"}, {"figure_path": "ctxtY3VGGq/figures/figures_6_1.jpg", "caption": "Figure 2: Example of a rebalancing step", "description": "This figure visualizes a single step in the REBALANCESUBSETS procedure. Subfigure (a) shows the distribution of anti-cache states prior to this step; specifically, the x-axis is the probability measure, and the y-axis is the number of pages of class i and above in the anti-cache, i.e., m := |S\u2229P>i|. The red line is Yi, which through consistency, is the expectation of m; the blue dotted lines are thus the allowed values for m, which are [Yi], [Yi]]. The total striped area in the figure is the imbalance measure, formally defined in Definition B.2. Subfigure (b) shows a single rebalancing step; we choose the imbalanced anti-cache S that maximizes |m - Yi|; in our case, m > Yi, and thus we match its measure with an identical measure of anti-cache states that are below the upper blue line, i.e., can receive a page without increasing imbalance. Then, a page of class i is handed from S to every matched state S'; note that every matched state might get a different page from S, but some such page in S \\ S' is proven to exist. Finally, Subfigure (c) shows the state after the page transfer; note the decrease in imbalance that results. The REBALANCESUBSETS procedure performs such steps until there is no imbalance; then, the procedure would advance to class i - 1.", "section": "Randomized Rounding"}, {"figure_path": "ctxtY3VGGq/figures/figures_18_1.jpg", "caption": "Figure 1: Visualization of the interface between the fractional and integral algorithms", "description": "This figure visualizes a single step in the process of handling a page request. The fractional algorithm maintains a fractional solution, and the integral algorithm maintains a probability distribution over valid integral cache states. The fractional algorithm provides samples to the integral algorithm whenever the total fraction of a page evicted reaches an integer. The integral algorithm provides samples to the fractional algorithm whenever it requires one.", "section": "3 Algorithmic Framework and Analysis Overview"}]