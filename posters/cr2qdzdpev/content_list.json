[{"type": "text", "text": "Robust Reinforcement Learning from Corrupted Human Feedback\u2217 ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Alexander Bukharin1 Ilgee Hong1 Haoming Jiang2 Zichong Li1 Qingru Zhang1 ", "page_idx": 0}, {"type": "text", "text": "Zixuan Zhang1 Tuo Zhao1 ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Reinforcement learning from human feedback (RLHF) provides a principled framework for aligning AI systems with human preference data. For various reasons, e.g., personal bias, context ambiguity, lack of training, etc, human annotators may give incorrect or inconsistent preference labels. To tackle this challenge, we propose a robust RLHF approach \u2013 $\\mathbf{\\dot{\\calR}^{3}}M$ , which models the potentially corrupted preference label as sparse outliers. Accordingly, we formulate the robust reward learning as an $\\ell_{1}$ -regularized maximum likelihood estimation problem. Computationally, we develop an efficient alternating optimization algorithm, which only incurs negligible computational overhead compared with the standard RLHF approach. Theoretically, we prove that under proper regularity conditions, $R^{3}M$ can consistently learn the underlying reward and identify outliers, provided that the number of outlier labels scales sublinearly with the preference sample size. Furthermore, we remark that $R^{3}M$ is versatile and can be extended to various preference optimization methods, including direct preference optimization (DPO). Our experiments on robotic control and natural language generation with large language models (LLMs) show that $R^{3}M$ improves robustness of the reward against several types of perturbations to the preference data. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "As artificial intelligence (AI) systems continue to advance and become increasingly sophisticated, ensuring their alignment with human values and preferences has emerged as a paramount concern, particularly for recent large language models [37, 28]. One promising approach to achieving this alignment is Reinforcement Learning from Human Feedback (RLHF), which involves training AI systems through a process of reward modeling based on human-provided feedback and preferences [13, 3, 50]. ", "page_idx": 0}, {"type": "text", "text": "A significant challenge in RLHF, however, arises from the inherent uncertainty present in the preference data provided by human evaluators [17, 4]. Since RLHF often targets highly complex scenarios where defining precise preference standards is difficult, if not impossible, annotators may provide undesirable or inconsistent preference labels, especially when they lack sufficient experience or training. In the case of a robotics system designed to assist with household tasks, an untrained annotator might label actions that complete the task efficiently but in a manner that could potentially cause property damage or compromise safety as preferable, overlooking the importance of safe and responsible operation. ", "page_idx": 0}, {"type": "text", "text": "An even more concerning scenario is that some human evaluators may maliciously assign incorrect preference labels [44, 32]. Personal prejudices, agendas, or lack of understanding about the true goals of the system could lead some annotators to intentionally mislabel examples, which could undermine the entire RLHF process and cause the model to learn undesirable or misaligned behaviors, posing a significant risk to the robustness and reliability of the AI system. Despite its critical importance for AI system alignment, this issue has received limited attention in the existing literature. For example, when training an AI system for automated content moderation on social media platforms, malicious annotators could mislabel examples of hate speech, misinformation, or harmful content as desirable, leading the model to learn to allow the proliferation of toxic and dangerous online behaviors. Despite its critical importance for AI system alignment, the robustness of RLHF has only received limited attention in the existing literature [9]. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "To address this challenge, we propose a robust Reinforcement Learning from Human Feedback (RLHF) approach \u2013 $R^{\\bar{3}}M$ (Robust Reward Modeling for RLHF) to handle partially corrupted preference labels. Specifically, we assume that a subset of incorrect (corrupted) labels exists as outliers in the preference data used for training the reward model.2 To model the label corruption, we introduce an instance-specific perturbation factor to the Bradley-Terry (BT) model for human preference [6]. We then learn the reward model and perturbation factors simultaneously by maximizing an $\\ell_{1}$ -regularized likelihood of the preference data. Theoretically, we prove that under proper regularity conditions, our approach can consistently learn the underlying ground truth reward and identify potential outliers, provided that the number of incorrect labels scales sublinearly with the preference sample size. Computationally, we show that the additional computational overhead of involving the perturbation factor in training is negligible: The log-likelihood is strictly convex and univariate with respect to each perturbation factor, and we can obtain its closed-form update at each iteration. ", "page_idx": 1}, {"type": "text", "text": "To demonstrate the effectiveness of our proposed method, we apply $R^{3}M$ to robotic control [39]. Specifically, we consider different types of corruptions to the preference data, including irrational flipping, stochastic flipping, and myopic flipping. We train robust reward models with $\\boldsymbol{R}^{3}\\boldsymbol{M}$ and optimize the policy based on the learned reward. We observe that $R^{3}M$ outperforms the standard RLHF method for all tasks under all preference models. ", "page_idx": 1}, {"type": "text", "text": "Moreover, $R^{3}M$ can be further generalized to other preference optimization methods. For example, we incorporate $R^{3}M$ into direct preference optimization (DPO) [29] and evaluate its performance on two natural language generation tasks \u2013 dialogue and summarization. We adopt Llama-2 7B [41] and use Claude 3 as the judge. We find that $\\bar{R}^{3}M$ -DPO outperforms DPO in policy learning for both tasks, and our results suggest that the training data of both tasks are very likely to have a small percentage of corruptions. Besides, we also consider random flipping for corrupting the preference data, and the results also show that $R^{3}M$ -DPO outperforms DPO. ", "page_idx": 1}, {"type": "text", "text": "2 Related works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Robust reward modeling. Research on robust reward modeling for RLHF remains limited, though some prior works have explored various types of robustness: The most relevant results are from [12] and [25]. They consider partially corrupted preference labels and propose to filter corrupted data based on the label confidence; [10] address robustness to diverse human preferences by learning a mixture of reward models; [48] focus on robustness to sampling temperature and length bias, and develop an iterative version of DPO; [14] consider reward overoptimization and employ a reward model ensemble. ", "page_idx": 1}, {"type": "text", "text": "While not explicitly framed as robustness, several other methods relate to this challenge: The [2] approach modifies DPO\u2019s loss function to avoid overfitting from weak regularization. [14] also explore reward ensembles; [18] develop a nonconvex human-aware loss, which downweighs training samples for reward learning when preference labels cannot be correctly predicted by reward models. ", "page_idx": 1}, {"type": "text", "text": "Robust classification. The reward learning problem in RLHF is related to classification, as both involve learning functions that map inputs to class labels or preference labels. However, in classification, the goal is to accurately predict class labels, while in RLHF, the goal is to learn a reward function that assigns scalar rewards to inputs, which are then used to optimize a policy or model. Despite these differences, the robustness literature in classification offers valuable insights for robust reward learning in RLHF. ", "page_idx": 1}, {"type": "text", "text": "The existing literature on robust classification has explored several directions. For instance, [46] and follow-up works [5] have focused on developing nonconvex loss functions that are robust to outliers. Additionally, [27] and subsequent works [19] have investigated instance-dependent calibration of nonconvex loss functions, which requires some prior knowledge of label noise. Other works propose iteratively filtering data based on uncertainties of labels or losses [47], which can be viewed as a relaxation of some nonconvex loss functions. [23] and follow-up works [34] have concentrated on robustness to distribution shifts. More recently, [21] and subsequent works [24, 26, 49] have explored adversarial robustness against the worse-case perturbation to the input. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "3 Robust reinforcement learning from corrupted human feedback ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We first introduce the problem setup on corrupted preference data, and then present $R^{3}M$ for robust reward modeling. Lastly, we develop an efficient optimization algorithm for $\\dot{R}^{3}M$ and further extend $R^{3}M$ to direct preference optimization. ", "page_idx": 2}, {"type": "text", "text": "3.1 Corruption to human feedback ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We consider a Markov Decision Process (MDP) $\\mathcal{M}\\,=\\,(\\mathcal{S},\\mathcal{A},P,r,\\gamma)$ with state $s\\ \\in\\ S$ , action $a\\in A$ , state transition kernel $P$ , discount factor $\\gamma$ , and the reward function $r:S\\times A\\to\\mathbb{R}$ , which is assumed to be aligned with human preferences. To learn such a reward function, we collect a (potentially corrupted) human preference dataset $\\mathcal{D}_{0}$ by some behavior policy $\\pi_{\\mathrm{ref}}$ , which contains $n$ pairs of trajectory segments $\\bar{D_{0}}=(z_{w,i},z_{\\ell,i})_{i=1}^{n}$ . Here, a trajectory segment $z$ of length $m$ denotes a sequence of consecutive state and action pairs $\\{(s_{t},a_{t})\\}_{t=1}^{m}$ sampled according to some behavior policy, and $z_{w,i}$ and $z_{\\ell,i}$ denote the trajectory segments preferred and dispreferred by the human annotators, respectively. ", "page_idx": 2}, {"type": "text", "text": "Different from the conventional RLHF approach, we assume that the human preference follows a distribution perturbed by potential corruption: ", "page_idx": 2}, {"type": "equation", "text": "$$\np(\\boldsymbol{z}_{w,i}\\succ\\boldsymbol{z}_{\\ell,i};\\boldsymbol{r}^{*},\\boldsymbol{\\delta}_{i}^{*})=\\sigma(\\boldsymbol{r}^{*}(\\boldsymbol{z}_{w,i})-\\boldsymbol{r}^{*}(\\boldsymbol{z}_{\\ell,i})+\\boldsymbol{\\delta}_{i}^{*}),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $r^{*}$ denotes the ground truth reward function when applied to the trajectory segment, $r^{*}(z):=$ $\\textstyle\\sum_{t=1}^{m}\\gamma^{t}r^{*}(s_{t},a_{t})$ with discount factor $\\gamma\\in(0,1],\\sigma(x)\\overset{\\cdot\\cdot}{=}1/(1+\\exp(-x))$ denotes the sigmoid function, and $\\delta_{i}^{*}$ is a deterministic perturbation modeling the annotator\u2019s bias. Note that when $\\delta_{i}^{*}=0$ , (3.1) is reduced to the standard Bradley-Terry (BT) model; when $\\delta_{i}^{*}\\ll r^{*}(z_{\\ell,i})-r^{*}(z_{w,i})$ , the annotator is very likely to give an incorrect preference. For notational simplicity, we denote $\\delta^{*}=[\\delta_{1}^{*},...,\\delta_{n}^{*}]^{\\intercal}\\in\\mathbb{R}^{n}$ , and we consider the case where $\\delta^{*}$ is a sparse vector, i.e., the annotators\u2019 biases and mistakes only happen to a fraction of the preference data. ", "page_idx": 2}, {"type": "text", "text": "Remark 3.1. Note that the perturbation factors $\\delta_{i}$ \u2019s are assumed to be deterministic and arbitrary. They can be intentionally introduced to mislead or confuse the reward learning process. This is in general more challenging than the setting of stochastic outliers, where the labels are filpped according to certain distribution. ", "page_idx": 2}, {"type": "text", "text": "3.2 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We next develop the estimators of the ground truth reward $r^{*}$ and the sparse $\\delta^{*}$ . To encourage the sparsity of $\\delta$ , we propose to minimize an $\\ell_{1}$ -regularized negative log-likelihood of $r$ and $\\delta_{i}$ \u2019s over the preference data: ", "page_idx": 2}, {"type": "equation", "text": "$$\n(\\widehat{r},\\widehat{\\delta})=\\underset{r,\\delta}{\\mathrm{argmin}}\\,\\mathcal{F}_{\\mathrm{pref}}(r,\\delta)=-\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\log p(z_{w,i}\\succ z_{\\ell,i};r,\\delta)\\right]+\\lambda\\|\\delta\\|_{1},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\lambda\\in(0,1)$ is a tuning parameter, and $\\textstyle\\|\\delta\\|_{1}=\\sum_{i=1}^{n}|\\delta_{i}|$ denotes the $\\ell_{1}$ norm of $\\delta$ . The $\\ell_{1}$ regularizer has been widely used in the existing literatu re on sparse estimation, such as Lasso [38]. It can be viewed as a convex relaxation of the $\\ell_{0}$ norm of $\\delta$ , i.e., $\\begin{array}{r}{\\|\\delta\\|_{0}=\\sum_{i=1}^{n}\\mathbb{1}(\\delta_{i}\\neq0)}\\end{array}$ . By tuning $\\lambda$ from large to small, we can control the number of nonzero entries in $\\delta$ from small to large. ", "page_idx": 2}, {"type": "text", "text": "Remark 3.2. The standard preference loss function is more susceptible to the influence of outliers in the training data. Therefore, the model may exhibit underftiting on the inlier (clean) data points, as it attempts to minimize the impact of the outliers on the overall loss. This eventually can distort the decision boundary, leading to suboptimal performance on the majority of the inlier data. ", "page_idx": 2}, {"type": "text", "text": "Once the reward is learned, we further apply Proximal Policy Optimization (PPO, [33]) to find a policy $\\widehat{\\pi}$ , which maximizes the expected sum of discounted rewards, ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\widehat{\\pi}=\\underset{\\pi}{\\arg\\operatorname*{max}}\\,\\mathbb{E}_{(s_{t},a_{t})\\sim\\mathcal{D}_{\\pi}}\\big[\\sum_{t=1}^{\\infty}\\gamma^{t}\\widehat{r}(s_{t},a_{t})\\big],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where ${\\mathcal{D}}_{\\pi}$ denotes the stationary distribution of the state-action pair induced by $\\pi$ . ", "page_idx": 2}, {"type": "text", "text": "3.3 Alternating optimization ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We present an efficient alternating optimization algorithm for solving (3.2). Suppose we parameterize the reward model $r$ as a neural network with parameter $\\phi$ . At the $k$ -th iteration, we have the iterate $\\phi^{(k)}$ , and we sample a pair of trajectory segments $z_{w,i}$ and $z_{\\ell,i}$ . We first fix $\\phi^{(k)}$ and minimize the loss with respect to $\\delta_{i}$ by ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\delta_{i}^{(k+1)}=\\operatorname*{argmin}_{\\delta_{i}}-\\log(\\sigma(r(z_{w,i};\\phi^{(k)})-r(z_{\\ell,i};\\phi^{(k)})+\\delta_{i}))+\\lambda|\\delta_{i}|.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "By examining the optimality condition of (3.3), ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\sigma(r(z_{w,i};\\phi^{(k)})-r(z_{\\ell,i};\\phi^{(k)})+\\delta_{i})-1+\\lambda\\xi_{i}=0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\xi_{i}\\in\\partial|\\delta_{i}^{(k+1)}|$ , we can obtain a closed-form solution ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\delta_{i}^{(k+1)}=\\operatorname*{max}\\{\\log(1/\\lambda-1)-r(z_{w,i};\\phi^{(k)})+r(z_{\\ell,i};\\phi^{(k)}),0\\}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Denote $\\ell_{i}(\\phi,\\delta_{i})=-\\log(\\sigma(r(z_{w,i};\\phi)\\!-r(z_{\\ell,i};\\phi)\\!+\\!\\delta_{i}))\\!+\\!\\lambda|\\delta_{i}|,$ update $\\phi$ by a stochastic gradient descent step given \u03b4i(k+1) ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\phi^{(k+1)}=\\phi^{(k)}-\\eta_{\\phi}\\nabla_{\\phi}\\ell_{i}(\\phi^{(k)},\\delta_{i}^{(k+1)}),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\eta_{\\phi}$ is the learning rate. ", "page_idx": 3}, {"type": "text", "text": "3.4 Extension to direct preference optimization (DPO) ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Our proposed $R^{3}M$ approach is generic and can be extended to DPO [29], which is another popular method for policy learning from human preferences. DPO directly learns the policy in supervised manner using the preference data of state-action pairs $D_{0}=(s_{i},a_{w,i},a_{\\ell,i})_{i=1}^{n}$ . This approach forgoes the need to learn the reward function explicitly by reparameterizing the reward function $r$ with respect to its optimal policy $\\pi_{r}$ : Recall that $\\pi_{\\mathrm{ref}}$ denotes the behavior policy, we have ", "page_idx": 3}, {"type": "equation", "text": "$$\nr(s,a)=\\beta\\log\\left(\\frac{\\pi_{r}(a|s)}{\\pi_{\\mathrm{ref}}(a|s)}\\right)+\\beta\\log Z(s),\\quad\\mathrm{where~}Z(s)=\\sum_{a}\\pi_{\\mathrm{ref}}(a|s)\\exp\\left(\\frac{r(s,a)}{\\beta}\\right),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "$\\beta>0$ is a tuning parameter controlling the KL divergence between $\\pi_{\\mathrm{ref}}$ and $\\pi_{\\mathrm{ref}}$ . By plugging in (3.6) back into (3.2), we have the policy optimization problem ", "page_idx": 3}, {"type": "equation", "text": "$$\n(\\widehat{\\pi},\\widehat{\\delta})=\\mathop{\\mathrm{argmin}}_{\\pi,\\delta}\\mathcal{F}_{\\mathrm{DPO}}(\\pi)=-\\frac{1}{n}\\sum_{i=1}^{n}\\log\\big(\\sigma\\left(\\beta r_{\\pi}(a_{w,i}|s)-\\beta r_{\\pi}(a_{\\ell,i}|s)+\\delta_{i}\\right)\\big)+\\lambda\\|\\delta\\|_{1},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $r_{\\pi}(a|s)=\\log\\left(\\pi(a|s)/\\pi_{\\mathrm{ref}}(a|s)\\right)$ denotes the log-probability ratio. ", "page_idx": 3}, {"type": "text", "text": "4 Theoretical analysis ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We next establish the statistical guarantees for $R^{3}M$ on the reward recovery. Specifically, we prove that the reward function learned by $R^{3}M$ from corrupted human feedback can be as accurate as its counterpart without outliers. ", "page_idx": 3}, {"type": "text", "text": "To better convey our theoretical insights, we consider a bandit setting, i.e., MDP with a horizon of one, mirroring the setup in DPO (see Section 3.4). The preference data of state-action pairs are given as $\\mathcal{D}_{0}=\\{(s_{i},\\bar{a_{1,i}},a_{2,i},y_{i})\\}_{i=1}^{N}$ , where $y_{i}=\\mathbb{1}(a_{1,i}\\succ a_{2,i})$ denotes whether $a_{1,i}$ is preferred to $a_{2,i}$ Such a setting is common in real-world LLM applications such as (single-turn) question-answering or text summarization task, where $a_{1,i}$ and $a_{2,i}$ denote two different responses corresponding to the same prompt $s_{i}$ .To ease the theoretical analysis, we consider a tabular setting, where the number of states $|{\\cal S}|$ and the number of actions $|{\\mathcal{A}}|$ are finite. For notational simplicity, we denote the true reward as a vector $R^{*}=[r^{*}(s,a)]\\in\\mathbb{R}^{|S||A|}$ , which concatenates the rewards of all state-action pairs, $r^{*}(s,a)$ with $s\\in S$ and $a\\in{\\mathcal{A}}$ . ", "page_idx": 3}, {"type": "text", "text": "Before we proceed with our main results, we first present the statistical guarantees of standard RLHF on the reward recovery, when there is no outlier in preference data $\\left\\langle\\delta^{*}\\right.=0$ ). Specifically, we can adapt Lemma 3.1 in Zhu et al. [51] to our setting: The Maximum Likelihood Estimator (MLE)R attains the following statistical rate of convergence: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\|\\widehat{R}-R^{*}\\|_{\\Sigma_{0}}^{2}=\\mathcal{O}\\left(\\frac{|S||A|}{n}\\right),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "with overwhelming probability. Here, $\\begin{array}{r}{\\Sigma_{0}=\\frac{1}{n}\\sum_{i=1}^{n}x_{i}x_{i}^{\\top}}\\end{array}$ is a positive semi-definite matrix depending on the training dataset $\\mathcal{D}_{0}$ with $x_{i}=\\mathbb{1}\\big(\\overset{\\cdot}{s}=s_{i},a=a_{1,i}\\big)-\\mathbb{1}\\big(s=s_{i},a=a_{2,i}\\big)\\in\\mathbb{R}^{|S||A|}$ , and $\\|\\cdot\\|_{\\Sigma_{0}}$ is the matrix norm defined as $\\Vert\\boldsymbol{v}\\Vert_{\\Sigma_{0}}^{2}=\\boldsymbol{v}^{\\top}\\Sigma_{0}\\boldsymbol{v}$ for any vector $\\boldsymbol{v}\\in\\mathbb{R}^{|\\boldsymbol{S}||\\boldsymbol{A}|}$ . ", "page_idx": 3}, {"type": "text", "text": "Remark 4.1. As has been shown in Zhu et al. [51], given (4.1), one can further prove the desirable regret bound for the learnt policy. Therefore, our theoretical analysis only focuses on the statistical guarantees on the reward recovery. ", "page_idx": 4}, {"type": "text", "text": "We then impose the following two assumptions on the problem. ", "page_idx": 4}, {"type": "text", "text": "Assumption 4.2. The perturbation $\\delta^{*}$ only has $s\\geq0$ non-zero entries, i.e. $\\lVert\\delta^{*}\\rVert_{0}\\leq s$ . Moreover, there exists a constant $C>0$ such that $\\|\\delta^{*}\\|_{\\infty}\\leq C$ . ", "page_idx": 4}, {"type": "text", "text": "Assumption 4.3. Let $B>0$ be some constant. We have $r^{*}\\in\\mathcal{R}_{B}$ , where ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{R}_{B}=\\left\\{r:\\ensuremath{\\mathcal{S}}\\times\\ensuremath{\\mathcal{A}}\\to\\mathbb{R}\\;\\big|\\;\\sum_{s\\in\\ensuremath{\\mathcal{S}},a\\in\\ensuremath{\\mathcal{A}}}r(s,a)=0,\\|R\\|_{2}^{2}=\\sum_{s\\in\\ensuremath{\\mathcal{S}},a\\in\\ensuremath{\\mathcal{A}}}(r(s,a))^{2}\\leq B\\right\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that $s$ is allowed to scale with $(n,|S|,|A|)$ , but $C$ and $B$ are not. This is mainly due to technical reasons to ensure the model identifiability. Accordingly, we adopt a constrained MLE formulation: ", "page_idx": 4}, {"type": "equation", "text": "$$\n(\\widehat{r},\\widehat{\\delta})=\\underset{r,\\delta}{\\mathrm{argmin}}-\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\log p(s_{i},a_{1,i},a_{2,i},y_{i};r,\\delta)\\right]+\\lambda\\|\\delta\\|_{1}\\quad\\mathrm{subject}\\;\\mathrm{to}\\;r\\in\\mathcal{R}_{B},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $p(s_{i},a_{1,i},a_{2,i},y_{i};r,\\delta)$ is defined under the bandit setting as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{p(s_{i},a_{1,i},a_{2,i},y_{i};r,\\delta)=\\mathbb{1}(y_{i}=1)\\sigma(r(s_{i},a_{1,i})-r(s_{i},a_{2,i})+\\delta_{i})}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad+\\,\\mathbb{1}(y_{i}=0)\\sigma(r(s_{i},a_{2,i})-r(s_{i},a_{1,i})+\\delta_{i}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that we add the constraint $r\\in\\mathcal{R}_{B}$ in (4.2) also due to the technical reason under the tabular setting. In practice, the reward model with function approximation is usually trained with proper regularization, and therefore $r$ can be bounded without any constraint. ", "page_idx": 4}, {"type": "text", "text": "Theorem 4.4. Suppose Assumptions 4.2 and 4.3 hold. Let $\\widehat{R}=[\\widehat{r}(s,a)]$ and $\\widehat\\delta$ be the minimizer of (4.2). Given $\\lambda=1/n$ , there exists universal constants $C_{0}>0$ and $\\gamma$ , such that we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\|\\widehat{R}-R^{*}\\|_{\\Sigma_{0}}^{2}+\\frac{1}{n}\\|\\widehat{\\delta}-\\delta^{*}\\|_{2}^{2}\\leq\\frac{4}{\\gamma^{2}}\\left(\\frac{4s}{n}+\\frac{C_{0}|S||A|}{n}\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "with overwhelming probability. ", "page_idx": 4}, {"type": "text", "text": "Proof Sketch. Due to space limit, we only present a proof sketch here. The technical proof of the lemmas can be found in Appendix A. For notational simplicity, we denote \u2206R =R  \u2212R\u2217and $\\Delta\\delta=\\widehat{\\delta}-\\delta^{*}$ , and denote the negative log-likelihood function on $\\mathcal{D}_{0}$ as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}(R,\\delta)=-\\displaystyle\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\log p(s_{i},a_{1,i},a_{2,i},y_{i};r,\\delta)\\right]}\\\\ &{\\quad\\quad\\quad=-\\displaystyle\\frac{1}{n}\\sum_{i=1}^{n}\\left[\\log\\left(\\mathbb{1}(y_{i}=1)\\sigma(\\langle x_{i},R\\rangle+\\delta_{i})+\\mathbb{1}(y_{i}=0)\\sigma(-\\langle x_{i},R\\rangle+\\delta_{i})\\right)\\right],}\\\\ &{\\mathrm{we~use~}\\langle x_{i},R\\rangle=\\langle\\mathbb{1}(s=s_{i},a=a_{1,i})-\\mathbb{1}(s=s_{i},a=a_{2,i}),R\\rangle=r(s_{i},a_{1,i})-r(s_{i},a_{2,i}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where Since $\\widehat{r}\\in\\mathcal{R}_{B}$ and $\\widehat\\delta$ are the minimizers of (4.2) and $r^{*}\\in\\mathcal{R}_{B}$ by Assumption 4.3, we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}(\\widehat{R},\\widehat{\\delta})+\\lambda\\|\\widehat{\\delta}\\|_{1}\\leq\\mathcal{L}(R^{*},\\delta^{*})+\\lambda\\|\\delta^{*}\\|_{1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The next Lemma proves the strong convexity of $\\mathcal{L}$ in $R$ and $\\delta$ at $(R^{*},\\delta^{*})$ and $(\\widehat{R},\\delta^{*})$ , respectively. ", "page_idx": 4}, {"type": "text", "text": "Lemma 4.5. Suppose Assumptions 4.2 and 4.3 hold. Let $\\gamma=1/(2\\!+\\!\\exp(-\\sqrt{2}B\\!-\\!C)\\!+\\!\\exp(\\sqrt{2}B\\!+$ $C)$ ). $\\mathcal{L}$ is strong convex with respect to $R$ at $(R^{*},\\delta^{*})$ with parameter $\\gamma$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}(R^{*}+\\Delta R,\\delta^{*})-\\mathcal{L}(R^{*},\\delta^{*})-\\langle\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}),\\Delta R\\rangle\\geq\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Moreover, $\\mathcal{L}$ is $\\gamma/n$ -strong convex with respect to $\\delta$ at $(\\widehat{R},\\delta^{*})$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}(\\widehat{R},\\delta^{*}+\\Delta\\delta)-\\mathcal{L}(\\widehat{R},\\delta^{*})-\\langle\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*}),\\Delta\\delta\\rangle\\geq\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Given the index set $S=\\{i\\in\\{1,2,\\ldots,n\\}|\\delta_{i}^{*}\\neq0\\}$ and $S^{c}=\\{1,2,\\ldots,n\\}\\setminus S$ , we can decompose any $\\delta\\in\\mathbb{R}^{n}$ by the index set $\\boldsymbol{S}$ and $S^{c}$ as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\delta=\\delta_{S}+\\delta_{S^{c}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Here $\\delta_{S}$ has the same non-zero entries as $\\delta^{*}$ . Now we apply the strong convexity of $\\mathcal{L}$ to (4.3), use Cauchy-Schwartz inequality to bound the inner product, and use decomposability of $\\delta$ to obtain the following result. ", "page_idx": 4}, {"type": "text", "text": "Lemma 4.6. Given the strong convexity of $\\mathcal{L}$ in (4.4) and (4.5), let $\\lambda\\geq\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}$ , we have ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}\\leq2\\lambda\\|\\Delta\\delta_{\\mathcal{S}}\\|_{1}+\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The above inequality suggests that we can control the estimation error of $\\delta$ by only $\\Delta\\delta_{S}$ , which can be regarded as the projection of $\\Delta\\delta$ onto the subspace $\\{\\delta\\in\\mathbb{R}^{n}|\\delta_{j}=0$ , for all $j\\not\\in{\\cal S}\\}$ . The next lemma bounds the gradient of $\\mathcal{L}$ with respect to $\\delta$ : ", "page_idx": 5}, {"type": "text", "text": "Lemma 4.7. For any $R\\in\\mathbb{R}^{|S||A|}$ and $\\delta\\in\\mathbb{R}^{n}$ , we have $\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}\\leq1/n$ . ", "page_idx": 5}, {"type": "text", "text": "Therefore, it suffices to take $\\lambda=1/n$ . Furthermore, in the proof of Lemma 3.1 of Zhu et al. [51] (See Section B.1 of Zhu et al. [51]), the gradient of $\\mathcal{L}$ with respect to $R$ can be bounded as following: ", "page_idx": 5}, {"type": "text", "text": "Lemma 4.8. There exists a universal constant $C_{1}>0$ , such that we have ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\leq C_{1}\\sqrt{\\frac{|S||A|+\\log(1/\\epsilon)}{n}}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "with probability at least $1-\\epsilon$ . ", "page_idx": 5}, {"type": "text", "text": "Finally, we combine Lemma 4.6 and the upper bounds of gradients in Lemma 4.7 and 4.8 to get ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{1}{n}\\|\\Delta\\delta\\|_{2}^{2}\\leq\\frac{4}{\\gamma^{2}}\\left(\\frac{4s}{n}+C_{1}^{2}\\frac{|S||A|+\\log(1/\\epsilon)}{n}\\right),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "which holds with probability at least $1-\\epsilon$ . ", "page_idx": 5}, {"type": "text", "text": "We make the following remarks about Theorem 4.4: ", "page_idx": 5}, {"type": "text", "text": "Remark 4.9. When the data perturbation is sufficiently sparse, i.e. $s\\leq|S||A|$ , the convergence rate of estimating the reward under the presence of corrupted data is dominated by $|S||A|/n$ . Notably, it is of the same order as that using clean data, which is presented in (4.1). In other words, even there is contamination in data, the learned reward can still be as accurate as its counterpart without outliers. However, if the ground-truth perturbation $\\delta^{*}$ is not very sparse, i.e. $s\\gg|{\\cal S}||{\\cal{A}}|$ , it can hurt the statistical rate of convergence. ", "page_idx": 5}, {"type": "text", "text": "Remark 4.10. In our analysis, we estimate rewards for each state-action pair under the tabular bandit setting. However, our results can be extended to infinite-state and infinite-action case with reward function approximation, following Zhu et al. [51]. Specifically, our results work for the scenario where reward functions can be linearly approximated [51]. Moreover, when the reward function is smooth, it can be approximated by neural networks and our analysis for convergence rate of reward recovery under corrupted preference data can apply as well [11]. ", "page_idx": 5}, {"type": "text", "text": "5 Experiment ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we demonstrate the effectiveness of our proposed robust loss function through its application in robotic control and natural language generation tasks. Due to space limit, we defer some less important results and explanations to Appendix C. ", "page_idx": 5}, {"type": "text", "text": "5.1 Robotic control ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Experiment setup. We evaluate the robustness of $R^{3}M$ across three robotic control tasks within the PyBullet [15] environments: HalfCheetah, Ant, and Hopper. To simulate noisy human preference, we consider three noise models of human preferences as follows: ", "page_idx": 5}, {"type": "text", "text": "1. Stochastic noise model: For a pair of trajectory segments $(z_{1},z_{2})$ , we generate a preference label with the probability $\\sigma((r^{\\star}(z_{1})-\\dot{r}^{\\star}(z_{2}))/\\dot{\\tau})$ where $\\tau>0$ is the temperature. This model captures typical human behavior, where preferences are more likely to be corrupted when the true preference is unclear. We control the noise rate by tuning $\\tau$ in $\\{1.0,\\dot{2}.0,3.0\\}$ . As the value of $\\tau$ increases, the probability becomes closer to uniform, causing greater corruption. ", "page_idx": 5}, {"type": "text", "text": "2. Myopic noise model: For a pair of sequences of state-action pairs $z_{1}=\\{(s_{1,t},a_{1,t})\\}_{t=1}^{m}$ and $z_{2}=\\stackrel{\\cdot}{\\{}(s_{2,t},a_{2,t})\\}_{t=1}^{m}$ , we generate a preference label by ", "page_idx": 5}, {"type": "equation", "text": "$$\nz_{1}\\succ z_{2}\\quad\\mathrm{if}\\ \\sum_{t=1}^{m}\\gamma^{m-t}r^{\\star}(s_{1,t},a_{1,t})>\\sum_{t=1}^{m}\\gamma^{m-t}r^{\\star}(s_{2,t},a_{2,t})\\ \\ \\mathrm{and}\\ \\ z_{2}\\succ z_{1}\\quad\\mathrm{otherwise},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\gamma\\in\\left(0,1\\right]$ is a discount factor. This model represents shortsighted human behavior, where people may place more weight on recent observations. We control the noise rate by tuning $\\gamma$ in $\\{0.3,0.5,0.7\\}$ . In general, as the value of $\\gamma$ decreases, the importance of initial observations diminishes, which leads to greater corruption. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "3. Irrational noise model: For pairs of trajectory segments $\\{\\left(z_{1,i},z_{2,i}\\right)\\}_{i=1}^{|B|}$ in a mini-batch $B\\subset\\mathcal{D}_{0}$ where $r^{\\star}(z_{1,i})>r^{\\star}(z_{2,i})$ (i.e., $z_{1,i}$ is preferred over $z_{2,i}$ by the ground truth reward), we flip the preference labels of the top $|B|^{p}/|B|\\times100\\%$ pairs, ordered by the largest true reward difference $r^{\\star}(z_{1,i})-r^{\\star}(z_{2,i})$ . Here, $p\\in(0,1)$ represents a sublinear rate of label perturbation. This model considers extreme human errors, where people can make mistakes even on clear preference pairs. We control the noise rate by tuning $p$ in $\\{1/3,\\bar{1}/2,2/3\\}$ . As the value of $p$ increases, a larger number of preferences are corrupted. ", "page_idx": 6}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/a97ccb6769d64acb12d1247bef707dbcdc7d068cb941fa8e49286e5978e2b31f.jpg", "img_caption": ["Figure 1: Normalized returns for the baseline (cross-entropy loss) and $R^{3}M$ across all noise models and noise rates. Error bars represent the standard deviation across 10 different seeds. Learning curves and percentile plots are in Appendix C.1. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "For reward function, we use two-hidden-layer MLPs, with each hidden layer containing 64 units, which is consistent with the architecture used in both policy and value networks. Similarly with Christiano et al. [13], we repeat the following three steps for each stage: (i) We sample a set of trajectories using the policy $\\pi$ , and a reward function $\\widehat{r}$ assigns a reward to each trajectory segment. We then update $\\pi$ using proximal policy optimization   (PPO, Schulman et al. [33]). (ii) We split the trajectory segments into a training set and a testing set. From the training set, we randomly sample pairs of segments, generate preference labels using a noise model, and construct $\\mathcal{D}_{0}$ . For the testing set, we sample pairs of segments, generate preference labels using the ground truth rewards, and construct $\\mathcal{D}_{0}^{\\bar{\\prime}}$ . (iii) We train $\\widehat{r}$ on $\\mathcal{D}_{0}$ and use $\\mathcal{D}_{0}^{\\prime}$ to evaluate the preference prediction accuracy of $\\widehat{r}$ . ", "page_idx": 6}, {"type": "text", "text": "Note that we do not perturb the preferences in $\\mathcal{D}_{0}^{\\prime}$ to evaluate how effectively $R^{3}M$ recovers the ground truth rewards. We set the budget to 2 million timesteps. Every 10,000 timesteps, we evaluate the performance of the policy $\\pi$ over 20 test episodes and calculate the preference prediction accuracy of the reward function at each stage. We conduct training using 10 different random seeds. For hyperparameter tuning in both reward learning and policy optimization, we identify the best policy based on its performance (i.e., the highest return over timesteps) and then select the corresponding reward function. For evaluation metric, we follow Lee et al. [22] and use normalized returns with respect to the performance of RL using the ground truth reward: ", "page_idx": 6}, {"type": "text", "text": "Further details of implementation and hyperparameter tuning procedures are in Appendix B.1. ", "page_idx": 6}, {"type": "text", "text": "Results. We summarize the results on three PyBullet tasks as follows: ", "page_idx": 6}, {"type": "text", "text": "Figure 1 presents the results for the baseline (cross-entropy loss) and $R^{3}M$ across three different tasks and noise models (stochastic, myopic, and irrational) with varying noise rates. As can be seen, $R^{3}M$ consistently outperforms the baseline across all tasks, noise models, and noise rates, except for the case of $p=1/3$ in the irrational noise model, where only $6.25\\%$ of the training data is corrupted. Although there is some overlap in performance variability, as indicated by the error bars, the results demonstrate that $R^{3}M$ is more robust to noise in human preferences compared to ", "page_idx": 6}, {"type": "text", "text": "the standard cross-entropy loss. The improvements are particularly notable at higher noise rates.   \nAdditional details, including learning curves and percentile plots, are provided in Appendix C.1. ", "page_idx": 7}, {"type": "text", "text": "5.2 Natural Language Generation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Experiment setup. We evaluate the proposed robust extension of DPO on two natural language generation tasks: summarization and single-turn dialogue. In summarization, the policy generates sentences to summarize the main points from posts on Reddit. Following previous work [29], we conduct instruction tuning on the filtered TL;DR summarization dataset [42] to get the initial reference model. Then we use the human preferences gathered by Stiennon et al. [37] for preference optimization. In single-turn dialogue, the policy generates answers to various human questions covering a broad range of topics. We use the Anthropic Helpful and Harmless (HH) dialogue preferences dataset [3], which contains over $170\\mathrm{k}$ dialogues between human and automated-assistant. We conduct instruction tuning on the preferred responses in the dataset to get the reference model, and do the preference optimization using the original dataset. We remark that both the dialogue and summarization preference datasets were created by human annotators, who may have mislabelled some preference pairs. Therefore we apply $R^{3}M$ directly to these datasets, investigating if popular RLHF datasets can gain from corruption-robust RLHF methods. ", "page_idx": 7}, {"type": "text", "text": "For all experiments we utilize Llama-2 7B [40] as the base model. We fine-tune the entire model in the instruction tuning stage, and apply LoRA fine-tuning in the alignment stage when testing all baselines due to computational efficiency concerns. We set the rank of the LoRA adaptor to 64. ", "page_idx": 7}, {"type": "text", "text": "Baselines. We consider several preference optimization baselines: DPO [29], IPO [2], SLiC-HF [50], KTO [18], and DPO with dropout [36]. We use the Huggingface TRL implementation for all methods [43]. We also consider a data flitering baseline which first trains an initial DPO model on the full dataset, and then filters the dataset based on the learned reward difference. Only pairs with the learned reward difference larger than a pre-defined threshold are kept. Finally, another DPO model is trained on the filtered dataset. This method has twice the computation cost of $R^{3}M$ . ", "page_idx": 7}, {"type": "text", "text": "Evaluation. As human evaluation is prohibitively expensive, we use Claude 3 Sonnet [1], to automatically evaluate responses based on summary quality and response helpfulness/harmlessness for the summarization and dialogue tasks, respectively. Prior work has shown that Claude 3 and GPT-4 can effectively measure a quantitative improvement over the instruction-tuned model [16]. We split a small subset (800 prompts) from each instruction tuning dataset for testing and calculate the win rate against the instruction-tuned reference model as the evaluation metric. The percentage of instances where the response generated by policy A is preferred over policy B is referred to as the win rate of A against B. We also report winning score, which is calculated as $\\begin{array}{r}{\\frac{\\#\\operatorname{Win}-\\#\\operatorname{Lose}}{\\operatorname{Total}\\operatorname{comparisons}}+1}\\end{array}$ ", "page_idx": 7}, {"type": "text", "text": "Results on Non-Perturbed Datasets. Table 1 presents the performance of all baseline methods on the dialogue and summarization tasks. As indicated, $R^{3}\\dot{M}$ significantly outperforms all other baselines, with the exception of the Data Filtering method in the summarization task. However, it is important to note that the Data Filtering baseline incurs double the training cost compared to our method, which may be prohibitive in scenarios with limited computational resources. For the dialogue task, we find the sparsity rate to be $1.2\\%$ , while for summarization we find the sparsity rate to be $10.8\\%$ . Paired with the results, our findings suggest the datasets do contain noisy preferences, and that our method is effective in mitigating their negative effects. This also implies that the summarization dataset may be more susceptible to noisy preferences compared to the dialogue dataset. Table 1: Win rates and winning scores for dialogue and summarization tasks. Confidence intervals are over three seeds. ", "page_idx": 7}, {"type": "table", "img_path": "cR2QDzdpEv/tmp/882c38a7ed83ccd8dbd75980d510872851bb2313a7a7e79f95909940fc0c7b44.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "To better understand our method, we conduct further analysis on the learned perturbation factor $\\delta$ in Figure 2. We extract a subset from the training data and use Claude 3 to assess whether it agrees with the annotated preference labels. We can observe that Claude 3 exhibits a lower agreement rate for samples with a positive perturbation factor. This indicates that the perturbation factor effectively identifies outliers within the dataset, thereby enhancing the learning process. Figure 2 provides an example of a corrupted annotation identified in the data. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/d4680fec6af9abf6e9203f358029d3728f156a56ab6ebe43cf47c7cb01492ce5.jpg", "img_caption": ["Figure 2: (a) Comparison of the Claude 3 agreement on the annotated labels between sample pairs with zero and positive learned perturbation factors. (b) An example of corrupted annotation in the HH dataset. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Results on Perturbed Datasets. To explore how our method handles increased noise, we manually perturbed the dataset by flipping a random portion of the training labels. We then compared the winning scores of $R^{3}\\dot{M}$ with those of the DPO baseline. As depicted in Figure 3, our method consistently outperforms DPO. Notably, on the ", "page_idx": 8}, {"type": "text", "text": "summarization task, our method demonstrates a larger improvement when the labels are manually perturbed. ", "page_idx": 8}, {"type": "text", "text": "Ablation studies. In Figure 4, we examine the sensitivity of the hyperparameter $\\lambda$ . For robotic tasks, we use the myopic noise model with $\\gamma=$ 0.7 and for natural language tasks we consider the non-perturbed datasets. We can see that values of $\\lambda$ near the selected (best) ones also outperform the baseline. ", "page_idx": 8}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/9bfc9193363a522f1c789426640479ad836f6caa5f7a6a5c4a037a0c9a390a14.jpg", "img_caption": ["Figure 3: Comparison of winning scores between $R^{3}M$ and the DPO baseline across different perturbation percentages on two tasks. "], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/a6caf2a27e54f0b88f908ec8476ae0b4d0e1aa9ddd76229873a8c5038ec851ee.jpg", "img_caption": ["Figure 4: Sensitivity of the hyperparameter $\\lambda$ across Dialogue and Summarization tasks. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "6 Discussions ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Smooth Reward Modeling. In real-world reinforcement learning applications, ground truth reward models are often assumed to be smooth [35, 8], enabling effective learning by neural networks[7]. However, this assumption may not always hold, as certain applications can exhibit non-smoothness in specific regions of the state-action space. Akin to the presence of outliers, attempting to minimize the impact of these non-smooth regions on the overall loss can lead to underftiting in the smooth regions. Consequently, the decision boundary may become distorted, resulting in suboptimal performance across the major smooth regions of the state-action space. We remark that this fundamental difficulty in learning non-smooth reward models presents a challenge. Our proposed $R^{3}M$ method can mitigate this issue by modeling data from the non-smooth regions as outliers. Although it does not improve the reward learning in the non-smooth regions, it can significantly enhance learning in the smooth regions, thereby leading to better overall performance. ", "page_idx": 8}, {"type": "text", "text": "Assumption on Deterministic Perturbations. The theoretical analysis underpinning our proposed $R^{3}M$ method assumes deterministic perturbations to the preference data, a setting more challenging than specific distributional assumptions on the perturbations. Our extensive experiments further corroborate this claim, demonstrating the robustness of $R^{3}M$ against a wide range of perturbation types (some may be not even sparse) introduced to the preference data. This empirical evidence substantiates the efficacy of our approach in handling diverse forms of corruption, underscoring its practical utility in real-world reinforcement learning applications where the nature of perturbations may be unknown or difficult to characterize. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Anthropic. Claude, 2023. URL https://www.anthropic.com.   \n[2] M. G. Azar, M. Rowland, B. Piot, D. Guo, D. Calandriello, M. Valko, and R. Munos. A general theoretical paradigm to understand learning from human preferences. CoRR, abs/2310.12036, 2023.   \n[3] Y. Bai, A. Jones, K. Ndousse, A. Askell, A. Chen, N. DasSarma, D. Drain, S. Fort, D. Ganguli, T. Henighan, N. Joseph, S. Kadavath, J. Kernion, T. Conerly, S. E. Showk, N. Elhage, Z. HatfieldDodds, D. Hernandez, T. Hume, S. Johnston, S. Kravec, L. Lovitt, N. Nanda, C. Olsson, D. Amodei, T. B. Brown, J. Clark, S. McCandlish, C. Olah, B. Mann, and J. Kaplan. Training a helpful and harmless assistant with reinforcement learning from human feedback. CoRR, abs/2204.05862, 2022.   \n[4] Y. Bai, A. Jones, K. Ndousse, A. Askell, A. Chen, N. DasSarma, D. Drain, S. Fort, D. Ganguli, T. Henighan, et al. Training a helpful and harmless assistant with reinforcement learning from human feedback. arXiv preprint arXiv:2204.05862, 2022.   \n[5] J. T. Barron. A general and adaptive robust loss function. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 4331\u20134339, 2019.   \n[6] R. A. Bradley and M. E. Terry. Rank analysis of incomplete block designs: I. the method of paired comparisons. Biometrika, 39(3/4):324\u2013345, 1952.   \n[7] S. Bubeck and M. Sellke. A universal law of robustness via isoperimetry. Journal of the ACM, 70(2):1\u201318, 2023.   \n[8] A. Bukharin, Y. Li, Y. Yu, Q. Zhang, Z. Chen, S. Zuo, C. Zhang, S. Zhang, and T. Zhao. Robust multi-agent reinforcement learning via adversarial regularization: Theoretical foundation and stable algorithms. Advances in Neural Information Processing Systems, 36, 2024.   \n[9] S. Casper, X. Davies, C. Shi, T. K. Gilbert, J. Scheurer, J. Rando, R. Freedman, T. Korbak, D. Lindner, P. Freire, et al. Open problems and fundamental limitations of reinforcement learning from human feedback. arXiv preprint arXiv:2307.15217, 2023.   \n[10] S. Chakraborty, J. Qiu, H. Yuan, A. Koppel, F. Huang, D. Manocha, A. S. Bedi, and M. Wang. Maxmin-rlhf: Towards equitable alignment of large language models with diverse human preferences. arXiv preprint arXiv:2402.08925, 2024.   \n[11] M. Chen, H. Liu, W. Liao, and T. Zhao. Doubly robust off-policy learning on low-dimensional manifolds by deep neural networks. arXiv preprint arXiv:2011.01797, 2020.   \n[12] J. Cheng, G. Xiong, X. Dai, Q. Miao, Y. Lv, and F.-Y. Wang. Rime: Robust preference-based reinforcement learning with noisy preferences. arXiv preprint arXiv:2402.17257, 2024.   \n[13] P. F. Christiano, J. Leike, T. Brown, M. Martic, S. Legg, and D. Amodei. Deep reinforcement learning from human preferences. Advances in neural information processing systems, 30, 2017.   \n[14] T. Coste, U. Anwar, R. Kirk, and D. Krueger. Reward model ensembles help mitigate overoptimization. arXiv preprint arXiv:2310.02743, 2023.   \n[15] E. Coumans and Y. Bai. Pybullet, a python module for physics simulation for games, robotics and machine learning. https://pybullet.org/, 2016-2019.   \n[16] Y. Dubois, X. Li, R. Taori, T. Zhang, I. Gulrajani, J. Ba, C. Guestrin, P. Liang, and T. B. Hashimoto. Alpacafarm: A simulation framework for methods that learn from human feedback. arXiv preprint arXiv:2305.14387, 2023.   \n[17] C. Eickhoff. Cognitive biases in crowdsourcing. In Proceedings of the eleventh ACM international conference on web search and data mining, pages 162\u2013170, 2018.   \n[18] K. Ethayarajh, W. Xu, N. Muennighoff, D. Jurafsky, and D. Kiela. Kto: Model alignment as prospect theoretic optimization. arXiv preprint arXiv:2402.01306, 2024.   \n[19] B. Han, Q. Yao, X. Yu, G. Niu, M. Xu, W. Hu, I. Tsang, and M. Sugiyama. Co-teaching: Robust training of deep neural networks with extremely noisy labels. Advances in neural information processing systems, 31, 2018.   \n[20] D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[21] A. Kurakin, I. Goodfellow, and S. Bengio. Adversarial machine learning at scale. arXiv preprint arXiv:1611.01236, 2016.   \n[22] K. Lee, L. Smith, A. Dragan, and P. Abbeel. B-pref: Benchmarking preference-based reinforcement learning. In Thirty-fifth Conference on Neural Information Processing Systems Datasets and Benchmarks Track (Round 1), 2021. URL https://openreview.net/forum? id=ps95-mkHF_.   \n[23] A. Liu and B. Ziebart. Robust classification under sample selection bias. Advances in neural information processing systems, 27, 2014.   \n[24] A. Madry, A. Makelov, L. Schmidt, D. Tsipras, and A. Vladu. Towards deep learning models resistant to adversarial attacks. arXiv preprint arXiv:1706.06083, 2017.   \n[25] D. Mandal, A. Nika, P. Kamalaruban, A. Singla, and G. Radanovi\u00b4c. Corruption robust offline reinforcement learning with human feedback. arXiv preprint arXiv:2402.06734, 2024.   \n[26] T. Miyato, S.-i. Maeda, M. Koyama, and S. Ishii. Virtual adversarial training: a regularization method for supervised and semi-supervised learning. IEEE transactions on pattern analysis and machine intelligence, 41(8):1979\u20131993, 2018.   \n[27] N. Natarajan, I. S. Dhillon, P. K. Ravikumar, and A. Tewari. Learning with noisy labels. Advances in neural information processing systems, 26, 2013.   \n[28] L. Ouyang, J. Wu, X. Jiang, D. Almeida, C. L. Wainwright, P. Mishkin, C. Zhang, S. Agarwal, K. Slama, A. Ray, J. Schulman, J. Hilton, F. Kelton, L. Miller, M. Simens, A. Askell, P. Welinder, P. F. Christiano, J. Leike, and R. Lowe. Training language models to follow instructions with human feedback. In NeurIPS, 2022.   \n[29] R. Rafailov, A. Sharma, E. Mitchell, S. Ermon, C. D. Manning, and C. Finn. Direct preference optimization: Your language model is secretly a reward model. arXiv preprint arXiv:2305.18290, 2023.   \n[30] A. Raffin. Rl baselines3 zoo. https://github.com/DLR-RM/rl-baselines3-zoo, 2020.   \n[31] A. Raffin, A. Hill, A. Gleave, A. Kanervisto, M. Ernestus, and N. Dormann. Stable-baselines3: Reliable reinforcement learning implementations. Journal of Machine Learning Research, 22 (268):1\u20138, 2021. URL http://jmlr.org/papers/v22/20-1364.html.   \n[32] M. Sabou, K. Bontcheva, L. Derczynski, and A. Scharl. Corpus annotation through crowdsourcing: Towards best practice guidelines. In LREC, pages 859\u2013866. Citeseer, 2014.   \n[33] J. Schulman, F. Wolski, P. Dhariwal, A. Radford, and O. Klimov. Proximal policy optimization algorithms. arXiv preprint arXiv:1707.06347, 2017.   \n[34] S. Shafieezadeh Abadeh, P. M. Mohajerin Esfahani, and D. Kuhn. Distributionally robust logistic regression. Advances in neural information processing systems, 28, 2015.   \n[35] Q. Shen, Y. Li, H. Jiang, Z. Wang, and T. Zhao. Deep reinforcement learning with robust and smooth policy. In International Conference on Machine Learning, pages 8707\u20138718. PMLR, 2020.   \n[36] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov. Dropout: a simple way to prevent neural networks from overftiting. The journal of machine learning research, 15 (1):1929\u20131958, 2014.   \n[37] N. Stiennon, L. Ouyang, J. Wu, D. M. Ziegler, R. Lowe, C. Voss, A. Radford, D. Amodei, and P. F. Christiano. Learning to summarize from human feedback. CoRR, abs/2009.01325, 2020.   \n[38] R. Tibshirani. Regression shrinkage and selection via the lasso. Journal of the Royal Statistical Society Series B: Statistical Methodology, 58(1):267\u2013288, 1996.   \n[39] E. Todorov, T. Erez, and Y. Tassa. Mujoco: A physics engine for model-based control. In 2012 IEEE/RSJ international conference on intelligent robots and systems, pages 5026\u20135033. IEEE, 2012.   \n[40] H. Touvron, L. Martin, K. Stone, P. Albert, A. Almahairi, Y. Babaei, N. Bashlykov, S. Batra, P. Bhargava, S. Bhosale, D. Bikel, L. Blecher, C. Canton-Ferrer, M. Chen, G. Cucurull, D. Esiobu, J. Fernandes, J. Fu, W. Fu, B. Fuller, C. Gao, V. Goswami, N. Goyal, A. Hartshorn, S. Hosseini, R. Hou, H. Inan, M. Kardas, V. Kerkez, M. Khabsa, I. Kloumann, A. Korenev, P. S. Koura, M. Lachaux, T. Lavril, J. Lee, D. Liskovich, Y. Lu, Y. Mao, X. Martinet, T. Mihaylov, P. Mishra, I. Molybog, Y. Nie, A. Poulton, J. Reizenstein, R. Rungta, K. Saladi, A. Schelten, R. Silva, E. M. Smith, R. Subramanian, X. E. Tan, B. Tang, R. Taylor, A. Williams, J. X. Kuan, P. Xu, Z. Yan, I. Zarov, Y. Zhang, A. Fan, M. Kambadur, S. Narang, A. Rodriguez, R. Stojnic, S. Edunov, and T. Scialom. Llama 2: Open foundation and fine-tuned chat models. CoRR, abs/2307.09288, 2023.   \n[41] H. Touvron, L. Martin, K. Stone, P. Albert, A. Almahairi, Y. Babaei, N. Bashlykov, S. Batra, P. Bhargava, S. Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023.   \n[42] M. V\u00f6lske, M. Potthast, S. Syed, and B. Stein. Tl;dr: Mining reddit to learn automatic summarization. In NFiS@EMNLP, pages 59\u201363. Association for Computational Linguistics, 2017.   \n[43] L. von Werra, Y. Belkada, L. Tunstall, E. Beeching, T. Thrush, N. Lambert, and S. Huang. Trl: Transformer reinforcement learning. https://github.com/huggingface/trl, 2020.   \n[44] A. Wang, C. D. V. Hoang, and M.-Y. Kan. Perspectives on crowdsourcing annotations for natural language processing. Language resources and evaluation, 47:9\u201331, 2013.   \n[45] T. Wolf, L. Debut, V. Sanh, J. Chaumond, C. Delangue, A. Moi, P. Cistac, T. Rault, R. Louf, M. Funtowicz, J. Davison, S. Shleifer, P. von Platen, C. Ma, Y. Jernite, J. Plu, C. Xu, T. L. Scao, S. Gugger, M. Drame, Q. Lhoest, and A. M. Rush. Transformers: State-of-the-art natural language processing. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pages 38\u201345, Online, Oct. 2020. Association for Computational Linguistics. URL https://www.aclweb.org/anthology/ 2020.emnlp-demos.6.   \n[46] Y. Wu and Y. Liu. Robust truncated hinge loss support vector machines. Journal of the American Statistical Association, 102(479):974\u2013983, 2007.   \n[47] X. Xia, T. Liu, B. Han, M. Gong, J. Yu, G. Niu, and M. Sugiyama. Sample selection with uncertainty of losses for learning with noisy labels. arXiv preprint arXiv:2106.00445, 2021.   \n[48] W. Xiong, H. Dong, C. Ye, H. Zhong, N. Jiang, and T. Zhang. Gibbs sampling from human feedback: A provable kl-constrained framework for rlhf. arXiv preprint arXiv:2312.11456, 2023.   \n[49] H. Zhang, Y. Yu, J. Jiao, E. Xing, L. El Ghaoui, and M. Jordan. Theoretically principled trade-off between robustness and accuracy. In International conference on machine learning, pages 7472\u20137482. PMLR, 2019.   \n[50] Y. Zhao, R. Joshi, T. Liu, M. Khalman, M. Saleh, and P. J. Liu. Slic-hf: Sequence likelihood calibration with human feedback. CoRR, abs/2305.10425, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "[51] B. Zhu, M. Jordan, and J. Jiao. Principled reinforcement learning with human feedback from pairwise or $\\mathbf{k}$ -wise comparisons. In International Conference on Machine Learning, pages 43037\u201343067. PMLR, 2023. ", "page_idx": 12}, {"type": "text", "text": "A Proof of Theorem 4.4 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Before we proceed to the proof of Theorem 4.4, we present the proofs of lemmas used to prove Theorem 4.4. ", "page_idx": 13}, {"type": "text", "text": "A.1 Proof of Lemma 4.5 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "By the definition of $\\mathcal{L}(R,\\delta)$ , we can directly compute its second-order partial derivatives with respect to $R$ or $\\delta$ as ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\frac{\\partial^{\\rho-}\\mathcal{L}}{\\partial R^{2}}(R,\\delta)=}\\\\ &{\\displaystyle\\qquad\\frac{1}{n}\\sum_{i=1}^{n}\\left(\\mathbb{1}\\big(y_{i}=1\\big)\\frac{\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}{(1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i}))^{2}}+\\mathbb{1}\\big(y_{i}=0\\big)\\frac{\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}{\\big(1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})\\big)^{2}}\\right)x_{i}x_{i}^{\\top},}\\\\ &{\\displaystyle\\overset{\\mathrm{nd}}{\\partial\\delta^{2}}(R,\\delta)=}\\\\ &{\\operatorname*{liag}\\left(\\left[\\frac{1}{n}\\left(\\mathbb{1}(y_{i}=1)\\frac{\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}{\\big(1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i})\\big)^{2}}+\\mathbb{1}\\big(y_{i}=0\\big)\\frac{\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}{\\big(1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})\\big)^{2}}\\right)\\right]_{i=1}^{n}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "a ", "page_idx": 13}, {"type": "text", "text": "By Lemma A.1, for any given $R\\in\\mathcal{R}_{B}$ , we have that for any $u\\in\\mathbb{R}^{|S||A|}$ ", "page_idx": 13}, {"type": "equation", "text": "$$\nu^{\\top}\\frac{\\partial^{2}\\mathcal{L}}{\\partial R^{2}}(R,\\delta^{*})u\\geq u^{\\top}\\left(\\frac{\\gamma}{n}\\sum_{i=1}^{n}x_{i}x_{i}^{\\top}\\right)=\\gamma\\|u\\|_{\\Sigma_{0}}^{2},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\gamma=1/(2+\\exp(-\\sqrt{2}B-C)+\\exp(\\sqrt{2}B+C))$ and $\\begin{array}{r}{\\Sigma_{0}=\\frac{1}{n}\\sum_{i=1}^{n}x_{i}x_{i}^{\\top}}\\end{array}$ . For any $\\boldsymbol{v}\\in\\mathbb{R}^{n}$ , we have ", "page_idx": 13}, {"type": "text", "text": "Consequently, we can conclude that $\\mathcal{L}$ is strong convex with respect to $R$ at $(R^{*},\\delta^{*})$ , i.e. ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}(R^{*}+\\Delta R,\\delta^{*})-\\mathcal{L}(R^{*},\\delta^{*})-\\langle\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}),\\Delta R\\rangle\\geq\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Moreover, $\\mathcal{L}$ is $\\gamma/n$ -strong convex with respect to $\\delta$ at $(\\widehat{R},\\delta^{*})$ , i.e. ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}(\\widehat{R},\\delta^{*}+\\Delta\\delta)-\\mathcal{L}(\\widehat{R},\\delta^{*})-\\langle\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*}),\\Delta\\delta\\rangle\\geq\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Lemma A.1. Let $\\gamma:=1/(2+\\exp(-\\sqrt{2}B-C)+\\exp(\\sqrt{2}B+C))$ . For any $R\\,\\in\\,\\mathcal{R}_{B}$ and $\\delta$ satisfying $\\|\\delta\\|_{\\infty}\\leq C$ , we have ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\frac{\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}{(1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i}))^{2}}\\geq\\gamma,\\ \\mathrm{and}\\ \\frac{\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}{(1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i}))^{2}}\\geq\\gamma.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Proof. Recall the definition $x_{i}\\,=\\,\\mathbb{1}\\!\\left(s\\,=\\,s_{i},a\\,=\\,a_{1,i}\\right)\\,-\\,\\mathbb{1}\\!\\left(s\\,=\\,s_{i},a\\,=\\,a_{2,i}\\right)\\,\\in\\,\\mathbb{R}^{|S||A|}$ . Then applying Cauchy-Schwartz inequality, we have that for $R\\in\\mathcal{R}_{B}$ , ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{|\\langle x_{i},R\\rangle|=|r(s_{i},a_{1,i})-r(s_{i},a_{2,i})|\\leq\\sqrt{2\\left((r(s_{i},a_{1,i}))^{2}+(r(s_{i},a_{2,i}))^{2}\\right)}\\leq\\sqrt{2\\|R\\|_{2}^{2}}\\leq\\sqrt{2}B.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Together with $\\|\\delta\\|_{\\infty}\\leq C$ , we obtain $\\langle x_{i},R\\rangle+\\delta_{i}\\in[-\\sqrt{2}B-C,\\sqrt{2}B+C]$ , which gives that ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}{(1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i}))^{2}}\\geq\\frac{1}{2+\\exp(-\\sqrt{2}B-C)+\\exp(\\sqrt{2}B+C)},}\\\\ {\\frac{\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}{(1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i}))^{2}}\\geq\\frac{1}{2+\\exp(-\\sqrt{2}B-C)+\\exp(\\sqrt{2}B+C)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "A.2 Proof of Lemma 4.6 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "First, we compute the gradient of $\\mathcal{L}(R,\\delta)$ with respect to $R$ as ", "page_idx": 13}, {"type": "equation", "text": "$$\n7_{R}\\mathcal{L}(R,\\delta)=-\\frac{1}{n}\\sum_{i=1}^{n}\\left(\\mathbb{1}(y_{i}=1)\\frac{1}{1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}-\\mathbb{1}(y_{i}=0)\\frac{1}{1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}\\right)x_{i}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "For notational simplicity, denote $X=(x_{1},x_{2},\\ldots,x_{n})\\in\\mathbb{R}^{|S||A|\\times n}$ and $v=(v_{1},v_{2},\\ldots,v_{n})^{\\top}\\in$ $\\mathbb{R}^{n}$ , where $v_{i}=\\mathbb{1}(y_{i}=1)/(1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i}))-\\mathbb{1}(y_{i}=0)/(1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i}))$ . Then we can rewrite $\\Sigma_{0}$ and $\\nabla_{R}\\mathcal{L}(R,\\delta)(R,\\delta)$ as ", "page_idx": 13}, {"type": "text", "text": "Let $\\mathrm{row}(\\cdot)$ and $\\operatorname{col}(\\cdot)$ denote the row space and column space respectively of the given matrix. By ", "page_idx": 14}, {"type": "text", "text": "basic linear algebra, we notice that $\\operatorname{col}(\\Sigma_{0}^{1/2})=\\operatorname{row}(\\Sigma_{0})=\\operatorname{col}(\\Sigma_{0})=\\operatorname{col}(X)$ , and $\\nabla_{R}\\mathcal{L}(R,\\delta)\\in$ $\\operatorname{col}(X)$ , where $\\Sigma_{0}^{1/2}=U D^{1/2}U^{\\top}$ and $\\Sigma_{0}=U D U^{\\top}$ is the singular value decomposition of $\\Sigma_{0}$ with orthonormal matrix $U$ and diagonal matrix $D$ . This gives $\\nabla_{R}\\mathcal{L}(R,\\delta)\\in\\mathrm{col}(\\Sigma_{0}^{1/2})$ . ", "page_idx": 14}, {"type": "text", "text": "Let $\\Sigma_{0}^{\\dagger}$ be the pseudo-inverse of $\\Sigma_{0}$ . Then $\\Sigma_{0}^{\\dagger}$ can be written as $\\Sigma_{0}^{\\dagger}=U D^{\\dagger}U^{\\top}$ , where $D^{\\dagger}$ is obtained by replacing the nonzero values of $D$ with their multiplicative inverses. Moreover, we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\Sigma_{0}^{1/2}(\\Sigma_{0}^{1/2})^{\\dagger}\\nabla_{R}{\\mathcal L}(R,\\delta)=\\nabla_{R}{\\mathcal L}(R,\\delta),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "since $\\nabla_{R}\\mathcal{L}(R,\\delta)\\in\\mathrm{col}(\\Sigma_{0}^{1/2})$ . ", "page_idx": 14}, {"type": "text", "text": "Next, utilizing the strong convexity of $\\mathcal{L}$ presented in Lemma 4.5, we can rewrite (4.3) as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\lambda\\|\\delta^{*}\\|_{1}-\\lambda\\|\\widehat{\\delta}\\|_{1}\\geq\\mathcal{L}(\\widehat{R},\\widehat{\\delta})-\\mathcal{L}(R^{*},\\delta^{*})}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mathcal{L}(\\widehat{R},\\delta^{*}+\\Delta\\delta)-\\mathcal{L}(\\widehat{R},\\delta^{*})+\\mathcal{L}(R^{*}+\\Delta R,\\delta^{*})-\\mathcal{L}(R^{*},\\delta^{*})}\\\\ &{\\qquad\\qquad\\qquad\\geq\\langle\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}),\\Delta R\\rangle+\\langle\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*}),\\Delta\\delta\\rangle+\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Given (A.1), we can rewrite the inner product as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\langle\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}),\\Delta R\\rangle=(\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}))^{\\top}(\\Sigma_{0}^{1/2})^{\\dagger}\\Sigma_{0}^{1/2}\\Delta R\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Then by Cauchy-Schwartz inequality, we get ", "page_idx": 14}, {"type": "equation", "text": "$$\n|\\langle\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*}),\\Delta R\\rangle|\\leq\\|(\\Sigma_{0}^{1/2})^{\\dagger}\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{2}\\|\\Sigma_{0}^{1/2}\\Delta R\\|_{2}=\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Moreover, by H\u00f6lder inequality, we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\left|\\langle\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*}),\\Delta\\delta\\rangle\\right|=\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}\\|\\Delta\\delta\\|_{1}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Combining all the above pieces together, we obtain ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}\\leq\\lambda\\|\\delta^{*}\\|_{1}-\\lambda\\|\\widehat{\\delta}\\|_{1}+\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}\\|\\Delta\\delta\\|_{1}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\,\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Recall that we can decompose any $\\delta\\in\\mathbb{R}^{n}$ by the index set $\\boldsymbol{S}$ and $S^{c}$ as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\delta=\\delta_{S}+\\delta_{S^{c}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "As a result, we can derive ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\|\\widehat{\\delta}\\|_{1}=\\|\\delta^{*}+\\Delta\\delta\\|_{1}=\\|\\delta_{S}^{*}+\\Delta\\delta_{S}+\\delta_{S^{c}}^{*}+\\Delta\\delta_{S^{c}}\\|_{1}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "By construction, we observe $\\delta_{S^{c}}^{*}=0$ . Then we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|\\widehat{\\delta}\\|_{1}=\\|\\delta_{S}^{*}+\\Delta\\delta_{S}+\\Delta\\delta_{S^{c}}\\|_{1}\\geq\\|\\delta_{S}^{*}+\\Delta\\delta_{S^{c}}\\|_{1}-\\|\\Delta\\delta_{S}\\|_{1},}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where the inequality is derived from triangle inequality. Note that $\\langle\\delta_{S}^{*},\\Delta\\delta_{S^{c}}\\rangle=0$ , which gives ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|\\hat{\\delta}\\|_{1}\\geq\\|\\delta_{S}^{*}\\|_{1}+\\|\\Delta\\delta_{S^{c}}\\|_{1}-\\|\\Delta\\delta_{S}\\|_{1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Plugging it into (A.2), we can get ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}\\leq\\lambda\\|\\delta^{*}\\|_{1}-\\lambda\\|\\delta_{S}^{*}\\|_{1}-\\lambda\\|\\Delta\\delta_{S^{c}}\\|_{1}+\\lambda\\|\\Delta\\delta_{S}\\|_{1}}\\\\ &{\\hphantom{\\leq\\gamma}+\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}}+\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}(\\|\\Delta\\delta_{S}\\|_{1}+\\|\\Delta\\delta_{S^{c}}\\|_{1})}\\\\ &{\\hphantom{\\leq\\gamma}=(\\lambda+\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}})\\|\\Delta\\delta_{S}\\|_{1}-(\\lambda-\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty})\\|\\Delta\\delta_{S^{c}}\\|_{1}}\\\\ &{\\hphantom{\\leq\\gamma}+\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Furthermore, taking $\\lambda\\geq\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}$ , then we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\gamma\\|\\Delta R\\|_{\\Sigma_{0}}^{2}+\\frac{\\gamma}{n}\\|\\Delta\\delta\\|_{2}^{2}\\leq2\\lambda\\|\\Delta\\delta_{\\mathcal{S}}\\|_{1}+\\|\\nabla_{R}\\mathcal{L}(R^{*},\\delta^{*})\\|_{\\Sigma_{0}^{\\dagger}}\\|\\Delta R\\|_{\\Sigma_{0}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "A.3 Proof of Lemma 4.7 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "By the definition of $\\mathcal{L}(R,\\delta)$ , we can directly compute its gradient with respect to $\\delta$ as ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\7_{\\delta}\\mathcal{L}(R,\\delta)=\\left[-\\frac{1}{n}\\left(\\mathbb{1}(y_{i}=1)\\frac{1}{1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i})}-\\mathbb{1}(y_{i}=0)\\frac{1}{1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}\\right)\\right]_{i=1}^{n}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Since the value of exponential function is always positive, we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\|\\nabla_{\\delta}\\mathcal{L}(\\widehat{R},\\delta^{*})\\|_{\\infty}\\leq\\frac{1}{n}\\operatorname*{max}_{i=1,\\ldots,n}\\left\\{\\frac{1}{1+\\exp(\\langle x_{i},R\\rangle+\\delta_{i})},\\frac{1}{1+\\exp(-\\langle x_{i},R\\rangle+\\delta_{i})}\\right\\}\\leq\\frac{1}{n}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "B Implementation details ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "B.1 Robotic control ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Our implementations of robotic control tasks are based on the Stable-Baselines3 library [31] and the RL Zoo training framework [30]. For $R^{3}M$ and the baseline (cross-entropy loss), we tune the number of epochs in $\\{1,3,5\\}$ and the batch size in $\\{8,16,64\\}$ . We use Adam optimizer [20] and tune the learning rate in $\\left\\{1e-2,5e-3,1e-3\\right\\}$ for the Ant and HalfCheetah, and set the learning rate to $1e-2$ for the Hopper. For $R^{3}M$ , we tune the $\\lambda$ in $\\{0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9\\}$ . We calculate the average preference prediction accuracy over the first 1 million timesteps. For PPO, we reused all hyperparameters from the original paper [33] optimized for the Mujoco benchmark [39]. ", "page_idx": 15}, {"type": "text", "text": "B.2 Natural language generation ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Our implementations of natural language generation tasks are based on transformers [45] and trl training framework [43]. We conduct our experiment using eight A100 GPUs, each with 40GB of memory. Training a single model took approximately two hours. We provide more details on each task as follows: ", "page_idx": 15}, {"type": "text", "text": "B.2.1 Summarization ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "For the instruction tuning stage, we randomly select 800 data from the flitered TL;DR summarization dataset [42] for testing the policy and leave the rest for supervised tuning. In the preference optimization stage, we split the preference dataset [37] into a training and testing set to evaluate the preference accuracy. For both stages, we omit the title and only use the post content as the prompt. The prompt format follows: \"POST: post content. $\\backslash\\mathfrak{n}\\backslash\\mathfrak{n}\\mathrm{TL};\\mathrm{DR};^{\\prime\\prime}$ . ", "page_idx": 15}, {"type": "text", "text": "For $R^{3}M$ -DPO and all baselines, we set the batch size to 32 and train 1 epoch for both instruction tuning and preference optimization. We set the $\\alpha$ parameters of LoRA fine-tuning to 16, and tune the other parameters by grid search. The learning rate is tuned in $\\{5e-6,5e-5,1e-4,5e-4\\}$ . SLiC-HF, IPO and DPO include parameter $\\beta$ , which is tuned in a range of $\\{0.01,0.1,0.3,0.5\\}$ . For $R^{3}M$ -DPO, we tune the $\\lambda$ in $\\{0.65,0.75,0.85\\}$ . ", "page_idx": 15}, {"type": "text", "text": "B.2.2 Single-turn dialogue ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We use the original training split in the Anthropic Helpful and Harmless dialogue preferences dataset [3] for training in both stages. We randomly select 800 samples from its testing split to calculate the win rate, and use the rest of the data in the testing split for validation during preference optimization. We use the original data format. ", "page_idx": 15}, {"type": "text", "text": "In the dialogue task, we use the same batch size of 32 and 1 epoch for training. The learning rate is tuned in $\\{5\\bar{e}-6,5e-5,1e-4\\}$ . The parameter $\\beta$ for baselines is tuned in a range of $\\{0.01,0.\\dot{1},0.3\\}$ For $R^{3}\\dot{M}$ -DPO, we tune the $\\lambda$ in $\\{0.75,0.8,0.85\\}$ . ", "page_idx": 15}, {"type": "text", "text": "B.2.3 Evaluation prompt. ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We apply Claude 3 Sonnet for win rate judgments. Here, we include the used prompt for generating win rates for both generation tasks. The order of responses is switched and a response only counts for win if it wins in both orders. ", "page_idx": 15}, {"type": "text", "text": "Summarization win rate prompt. ", "text_level": 1, "page_idx": 15}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/854c2e3d3d779917dd83ab0bd6415f06a9b354f624e5e339cf277e1141d5946d.jpg", "img_caption": [], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "Dialogue win rate prompt. ", "text_level": 1, "page_idx": 16}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/f35ffbad47794d8261a454b20ce5a37202385e82dba0d5b24b53ae848db6ce2f.jpg", "img_caption": [], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "C Additional experiments ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In Figure 5, we present the outlier ratios for zero and positive learned perturbation factors across three noise models (stochastic, myopic, and irrational). We observe that the outlier ratios for positive learned perturbation factors are significantly higher than those for zero learned perturbation factors across all three noise models. This substantial difference indicates that $R^{3}M$ effectively identifies outliers from various sources. ", "page_idx": 16}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/d7bfd4780625783cb3ed8a2a8f8ff3b9718df4c05b1231cc29c1072ece12c68c.jpg", "img_caption": ["Figure 5: Comparison of outlier ratios between sample pairs with zero and positive learned perturbation factors for $\\tau=1.0$ , $\\gamma=0.3$ , and $p=1/3$ for the stochastic, myopic, and irrational noise models, respectively "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "C.1 Learning curves and percentile plots C.1.1 Stochastic noise model ", "text_level": 1, "page_idx": 16}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/159485e6a87c1480469b525e314cfbd92b8158fbcd7b035a00899a2e90a44884.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "Figure 6: Learning curve plots (top) and percentile plots (bottom) for the baseline (cross-entropy loss) and $R^{3}M$ . For the learning curve plots, returns at each timestep are averaged across 10 different seeds, then smoothed over timesteps using an exponential moving average (EMA) with a smoothing factor of $\\alpha=0.1$ . For the percentile plots, returns from 10 different seeds are sorted in ascending order. ", "page_idx": 17}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/91cd9021f992fa000a13a81ec02181d3bdda3af1ccb49c0978eca80050079b53.jpg", "img_caption": ["C.1.2 Myopic noise model ", "Figure 7: Learning curve plots (top) and percentile plots (bottom) for the baseline (cross-entropy loss) and $R^{3}M$ . For the learning curve plots, returns at each timestep are averaged across 10 different seeds, then smoothed over timesteps using an exponential moving average (EMA) with a smoothing factor of $\\alpha=0.1$ . For the percentile plots, returns from 10 different seeds are sorted in ascending order. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "cR2QDzdpEv/tmp/1d8ec654f68f27289b0f2bf2088f4a75a95b28b32d5e9b398ad5610f5631b61b.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "Figure 8: Learning curve plots (top) and percentile plots (bottom) for the baseline (cross-entropy loss) and $R^{3}M$ . For the learning curve plots, returns at each timestep are averaged across 10 different seeds, then smoothed over timesteps using an exponential moving average (EMA) with a smoothing factor of $\\alpha=0.1$ . For the percentile plots, returns from 10 different seeds are sorted in ascending order. ", "page_idx": 18}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: Contributions and scope are explained in the methodology section 3 and well-supported by theoretical results in Section 4 and experimental results in Section 5. ", "page_idx": 19}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The technical details of the established theoretical guarantees are deferred to Appendix A. ", "page_idx": 19}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The experiment details are included in Section 4 and Appendix C. ", "page_idx": 19}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 19}, {"type": "text", "text": "Answer: [No] ", "page_idx": 19}, {"type": "text", "text": "Justification: We will release the code after the submission deadline. ", "page_idx": 19}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The basic experiment settings are included in Section 5 and more implementation details are in Appendices B and C. ", "page_idx": 19}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: Error bars are included in the robotic control experiments to indicate variability. Additionally, percentile plots are provided to support the validity of the experimental results. See Figures 1, 6, 7 and 8 for reference. Only one seed is used for natural language tasks due to computational concerns. ", "page_idx": 19}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: See implementation details in Appendices B. ", "page_idx": 20}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: This research adheres to the NeurIPS Code of Ethics. ", "page_idx": 20}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: This paper presents work whose goal is to advance the field of Machine Learning. There are many potential societal consequences of our work, none of which we feel must be specifically highlighted. ", "page_idx": 20}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] Justification: This paper does not release data or models. ", "page_idx": 20}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: The used models and data are properly credited in experimental settings. ", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: This paper does not release new assets. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] Justification: This paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 20}]