[{"figure_path": "nN6NSd1Qds/figures/figures_1_1.jpg", "caption": "Figure 2: This figure illustrates our framework, UGC, which has three main modules a) Generation of an augmented matrix by incorporating feature and adjacency matrices while using heterophily measure a, b) Generation of coarsening matrix C using augmented features via Hashing, and c) Generation of coarsened graph Ge from C followed by its utilization in downstream tasks.", "description": "This figure illustrates the UGC framework, which consists of three main modules: 1) Generation of an augmented matrix by combining feature and adjacency matrices using the heterophily measure 'a'.  2) Generation of a coarsening matrix 'C' using the augmented features and hashing. 3) Generation of the coarsened graph 'Gc' from 'C', which is then used in downstream tasks. The figure visually shows the flow of data and processes through these three modules.", "section": "3 The Proposed Framework: Universal Graph Coarsening (UGC)"}, {"figure_path": "nN6NSd1Qds/figures/figures_1_2.jpg", "caption": "Figure 1: This figure illustrates the computational time comparison among graph coarsening methods to learn a coarsened graph over ten iterations. UGC outperforms the fastest existing methods by approximately 6\u00d7 on the Physics dataset and 9\u00d7 on the Squirrel dataset.", "description": "This figure presents a comparison of the computational time taken by different graph coarsening methods across two datasets: Physics and Squirrel. The methods are compared based on the time taken to execute ten iterations of the coarsening process.  Universal Graph Coarsening (UGC) is shown to be significantly faster than other methods, achieving a speedup of approximately 6 times for the Physics dataset and 9 times for the Squirrel dataset.", "section": "1 Introduction"}, {"figure_path": "nN6NSd1Qds/figures/figures_2_1.jpg", "caption": "Figure 3: Graph coarsening toy example, a) Coarsening matrix, b) Original graph G and corresponding coarsened graph Gc", "description": "This figure is a simple illustration of the graph coarsening process.  Part (a) shows the coarsening matrix, which maps nodes from the original graph (b) to super-nodes in the coarsened graph (b).  Nodes with similar features are grouped together into super-nodes, reducing the overall size and complexity of the graph while preserving important structural relationships.", "section": "2 Background and Problem Formulation"}, {"figure_path": "nN6NSd1Qds/figures/figures_6_1.jpg", "caption": "Figure 4: Top 100 eigenvalues of the original graph G and coarsened graph Gc at different coarsening ratios: 30%, 50%, and 70%.", "description": "This figure shows the top 100 eigenvalues of the original graph and its coarsened versions at different coarsening ratios (30%, 50%, and 70%).  It visually demonstrates the preservation of spectral properties (eigenvalues) by the UGC method, even with significant graph reduction.  The similarity in eigenvalue distributions between the original and coarsened graphs highlights the effectiveness of UGC in maintaining crucial structural information during the coarsening process.", "section": "Spectral Properties Preservation"}, {"figure_path": "nN6NSd1Qds/figures/figures_7_1.jpg", "caption": "Figure 4: Top 100 eigenvalues of the original graph G and coarsened graph Gc at different coarsening ratios: 30%, 50%, and 70%.", "description": "This figure displays the top 100 eigenvalues of both the original graph (G) and its coarsened version (Gc) at three different coarsening ratios (30%, 50%, and 70%).  It visually demonstrates the effectiveness of the Universal Graph Coarsening (UGC) method in preserving the spectral properties of the graph even after significant reduction in size.  The closeness of the eigenvalues between the original and coarsened graphs highlights the quality of the coarsening process and its ability to maintain crucial structural information.", "section": "Spectral Properties Preservation"}, {"figure_path": "nN6NSd1Qds/figures/figures_8_1.jpg", "caption": "Figure 6: a) Cora and b) Citeseer demonstrate the inverse relationship between the probability of two nodes belonging to the same super-node and the distance between them. c) plots the  values (<1) for Cora, Citeseer, and CS datasets.", "description": "This figure shows the results of an experiment that validates the theoretical results regarding the LSH scheme. Specifically, it demonstrates the inverse relationship between the probability of two nodes being assigned to the same supernode and the distance between their features. The left and middle subfigures (a and b) show this relationship for Cora and Citeseer datasets, respectively. The right subfigure (c) shows how epsilon values (a measure of similarity between the original and coarsened graphs) change with different coarsening ratios for Cora, Citeseer, and CS datasets.  The results indicate that LSH effectively groups similar nodes in the same supernode, as expected.", "section": "4 Experiments"}, {"figure_path": "nN6NSd1Qds/figures/figures_8_2.jpg", "caption": "Figure 7: Computational and accuracy gains of UGC. In the bar plot, dashed bars represent the gain or loss in accuracy when compared to the existing best-performing method, while plain bars indicate the computational gains. All datasets are coarsened down by 50%.", "description": "This figure compares the computational time and accuracy improvement achieved by UGC against existing state-of-the-art graph coarsening methods.  The left bars show the speedup (computational gain) obtained by UGC when compared to the fastest existing methods. The right bars show the improvement (or loss) in accuracy after applying graph coarsening using UGC compared to the method with highest accuracy among existing methods. The results indicate that UGC is significantly faster and generally achieves comparable or better accuracy than other methods, even with a 50% coarsening ratio. This highlights the efficiency and effectiveness of UGC for downstream tasks.", "section": "4 Experiments"}, {"figure_path": "nN6NSd1Qds/figures/figures_14_1.jpg", "caption": "Figure 1: This figure illustrates the computational time comparison among graph coarsening methods to learn a coarsened graph over ten iterations. UGC outperforms the fastest existing methods by approximately 6\u00d7 on the Physics dataset and 9\u00d7 on the Squirrel dataset.", "description": "The figure shows a bar chart comparing the computational time taken by different graph coarsening methods (Var Neigh, Var Edge, Var Clique, Heavy Edge, Algebraic JC, Affinity_GC, Kron, and UGC) to coarsen two datasets: Physics and Squirrel.  The y-axis represents the time in seconds, and the x-axis shows the different methods. The chart demonstrates that UGC significantly outperforms all other methods in terms of speed, achieving a 6x speedup on the Physics dataset and a 9x speedup on the Squirrel dataset.", "section": "Key Contributions"}, {"figure_path": "nN6NSd1Qds/figures/figures_17_1.jpg", "caption": "Figure 10: Visualization of GCN predicted nodes when training is done using the coarsened graph of Physics dataset.", "description": "This figure visualizes the predicted nodes by a Graph Convolutional Network (GCN) model trained on coarsened versions of the Physics dataset.  It showcases the impact of graph coarsening (at 30%, 50%, and 70% reduction) on the GCN's ability to correctly classify nodes. By comparing the visualization of the original graph with the coarsened ones, one can assess how well the coarsening process preserves the essential structural information needed for effective GCN training and prediction.", "section": "4 Experiments"}, {"figure_path": "nN6NSd1Qds/figures/figures_18_1.jpg", "caption": "Figure 1: This figure illustrates the computational time comparison among graph coarsening methods to learn a coarsened graph over ten iterations. UGC outperforms the fastest existing methods by approximately 6\u00d7 on the Physics dataset and 9\u00d7 on the Squirrel dataset.", "description": "The figure compares the computational time of several graph coarsening methods, including the proposed UGC method, across two datasets (Physics and Squirrel). The x-axis represents the graph coarsening method, and the y-axis represents the computation time in seconds.  The results show that UGC significantly outperforms existing state-of-the-art methods in terms of speed, achieving 6x and 9x speedups on the Physics and Squirrel datasets respectively.", "section": "1 Introduction"}, {"figure_path": "nN6NSd1Qds/figures/figures_19_1.jpg", "caption": "Figure 1: This figure illustrates the computational time comparison among graph coarsening methods to learn a coarsened graph over ten iterations. UGC outperforms the fastest existing methods by approximately 6\u00d7 on the Physics dataset and 9\u00d7 on the Squirrel dataset.", "description": "The figure compares the computational time taken by various graph coarsening methods to process graphs.  It shows that Universal Graph Coarsening (UGC) is significantly faster than other methods, achieving speedups of 6x and 9x on the Physics and Squirrel datasets respectively, when running over ten iterations.", "section": "Key Contributions"}]