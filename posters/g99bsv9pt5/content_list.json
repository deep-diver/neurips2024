[{"type": "text", "text": "Relational Concept Bottleneck Models ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Francesco Giannini Scuola Normale Superiore francesco.giannini@sns.it ", "page_idx": 0}, {"type": "text", "text": "Universit\u00e0 della Svizzera Italiana University of Cambridge barbiero@tutanota.com ", "page_idx": 0}, {"type": "text", "text": "Gabriele Ciravegna Michelangelo Diligenti Politecnico di Torino University of Siena gabriele.ciravegna@polito.it michelangelo.diligenti@unisi.it ", "page_idx": 0}, {"type": "text", "text": "Giuseppe Marra KU Leuven giuseppe.marra@kuleuven.be ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The design of interpretable deep learning models working in relational domains poses an open challenge: interpretable deep learning methods, such as Concept Bottleneck Models (CBMs), are not designed to solve relational problems, while relational deep learning models, such as Graph Neural Networks (GNNs), are not as interpretable as CBMs. To overcome these limitations, we propose Relational Concept Bottleneck Models (R-CBMs), a family of relational deep learning methods providing interpretable task predictions. As special cases, we show that R-CBMs are capable of both representing standard CBMs and message-passing GNNs. To evaluate the effectiveness and versatility of these models, we designed a class of experimental problems, ranging from image classification to link prediction in knowledge graphs. In particular we show that R-CBMs (i) match generalization performance of existing relational black-boxes, (ii) support the generation of quantified concept-based explanations, (iii) effectively respond to test-time interventions, and (iv) withstand demanding settings including out-of-distribution scenarios, limited training data regimes, and scarce concept supervisions. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Chemistry, politics, economics, traffic jams: we constantly rely on relations to describe, explain and reason on everyday life problems. For instance, we can easily deduce Bart\u2019s citizenship if we consider Homer\u2019s citizenship and his status as Bart\u2019s father (Figure 1). While relational Deep Learning (DL) models [29, 19, 32, 16] can effectively solve such problems, the design of interpretable neural models capable of relational reasoning is still an open challenge. Among DL methods, Concept Bottleneck Models (CBMs) [13] are interpretable methods explaining their predictions by first mapping input features to a set of human-understandable concepts and then using such concepts to solve the given tasks. However, current CBMs are not well-suited for addressing relational problems as they can process only one input entity at a time by construction. To solve relational problems, CBMs would need to handle concepts/tasks involving multiple entities (e.g., the concept \u201cparent\u201d which depends on both the entity \u201cHomer\u201d and \u201cBart\u201d), thus forcing CBMs to process more entities at a time. Moreover, the definition of a suitable relational bottleneck layer is generally not straightforward, as a task prediction may require complex connections among multiple relational concepts. On the other side, while existing relational DL methods, such as Graph Neural Networks (GNN), may effectively solve such problems (e.g., correctly predicting Bart\u2019s citizenship), they are still unable to explain their predictions as CBMs would do (e.g., Bart is a US citizen since Homer is a US citizen and Homer is the father of Bart). Hence, a knowledge gap persists in the existing literature: defining a DL model capable of relational reasoning (akin to a GNN), while also being interpretable (akin to a CBM). ", "page_idx": 0}, {"type": "image", "img_path": "G99BSV9pt5/tmp/a4c3e9c9e9d4dede26decdbb990f4db05ea0405a539b9216af7e91156be5ddb7.jpg", "img_caption": ["Figure 1: Relational Concept Bottleneck Models can correctly predict and explain Bart\u2019s (B) citizenship by considering Homer\u2019s (H) citizenship and his status as Bart\u2019s parent. "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "To address this gap, we propose Relational Concept Bottleneck Models (R-CBMs, Section 3), a family of concept bottleneck models where both concepts and tasks may depend on multiple entities, and that have both CBMs and GNNs as special cases. The results of our experiments (Section 4 and 5) show that R-CBMs: (i) match the generalization performance of existing relational black-boxes, (ii) support the generation of first-order logic explanations, (iii) effectively respond to test-time concept and rule interventions improving their task performance, (iv) withstand demanding test scenarios including out-of-distribution settings, limited training data regimes, and scarce concept supervisions. ", "page_idx": 1}, {"type": "text", "text": "2 Background ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Concept bottleneck models. A Concept Bottleneck Model (CBM) is a function composing: (i) a concept encoder $g:X\\to C$ mapping each entity $e$ with feature representation $\\boldsymbol{x}_{e}\\in\\dot{\\boldsymbol{X}}\\in\\mathbb{R}^{d}$ (e.g., an image) to a set of $k$ concepts $c\\in C\\subseteq[0,1]^{\\bar{k}}$ (e.g., \u201cred\u201d,\u201cround\u201d), and (ii) a task predictor $f:C\\to Y$ mapping concepts to a set of $m$ tasks $y\\in Y\\subseteq[0,1]^{m}$ (e.g., \u201capple\u201d,\u201ctomato\u201d). Each component $g_{i}$ and $f_{j}$ vehicle the prediction of the $i$ -th concept and $j$ -th task, respectively. ", "page_idx": 1}, {"type": "text", "text": "Relational languages. A relational setting can be outlined using a function-free first-order logic language $\\mathcal{L}=(\\mathcal{E},\\mathcal{V},\\mathcal{P})$ , where $\\mathcal{E}$ is a finite set of constants for specific domain entities1, $\\nu$ is a set of variables for anonymous entities, and $\\mathcal{P}$ is a set of $n$ -ary predicates for relations among entities. The central objects of a relational language are its atoms, i.e. expressions $p(\\tau_{1},\\cdot\\cdot\\cdot,\\tau_{n})$ , where $p$ is an $n$ -ary predicate and $\\tau_{1},\\dots,\\tau_{n}$ are constants or variables. In case $\\tau_{1},\\dots,\\tau_{n}$ are all constants, $p(\\tau_{1},\\cdot\\cdot\\cdot,\\tau_{n})$ is called a ground atom. Examples of atoms can be male $(B a r t)$ and $p a r e n t(u,v)$ , with $B a r t\\in\\mathcal{E}$ and $u,v\\in\\mathcal{V}$ . Given a set of atoms $\\Gamma$ defined on a joint set of variables $V=\\{v_{1},\\ldots,v_{n}\\}$ , the process of applying a substitution $\\theta_{V}\\,=\\,\\{v_{1}/e_{1},...,v_{n}/e_{n}\\}$ to $\\Gamma$ is called grounding, i.e. the substitution of all the variables $v_{i}$ with some constants $x_{i}$ , according to $\\theta_{V}$ . For example, given $\\Gamma=[p a r e n t(v_{1},v_{2}),p a r e n t(v_{2},v_{3})]$ and the substitution $\\theta=\\{v_{1}/A b e,v_{2}/H o m e r,v_{3}/B a r t\\}$ , we can obtain the ground list $\\theta\\Gamma=[p a r e n t(A b e,H o m e r),p a r e n t(H o m e r,B a r t)]$ . The set of all the ground atoms of a relational language is called its Herbrand base $(H B)$ . Logic rules are defined as usual by applying logic connectives $\\{\\neg,\\land,\\lor,\\to\\}$ and quantifiers $\\{\\forall,\\exists\\}$ on atoms. ", "page_idx": 1}, {"type": "text", "text": "Graph neural networks. The architecture of a typical GNN for node-classification tasks consists of three primary steps. For every node $i,1$ ) an incoming message $M_{j\\to i}$ is passed from a neighbor node $j\\in\\bar{\\mathcal{N}}(i)$ to $i$ , where $\\mathcal{N}(i)$ denotes the set of all the incoming neighbours of $i,2,$ ) the embedding representation of node $i$ is updated by aggregating all the incoming messages from its neighbors, 3) a readout function is applied to the node embeddings to predict the class label ${\\hat{y}}(i)$ . Steps 1)-2) are typically repeated multiple times to allow multi-hop information propagation. ", "page_idx": 1}, {"type": "text", "text": "3 Relational Concept Bottleneck Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "This work addresses a key research question: how can we bridge the gap between the interpretability of concept-based models and the reasoning capabilities of relational DL? To answer this question, we extend the notion of bottleneck to a relational setting (Section 3.1) and classic message-passing to also update atom predictions during the recursive steps (Section 3.2). Then we illustrate the learning problem that R-CBMs can solve (Section 3.3), and finally we discuss the connections of R-CBMs with both standard CBMs and GNNs (Section 3.4). ", "page_idx": 1}, {"type": "text", "text": "3.1 Relational Concept Bottlenecks ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The structure of the relational concept bottleneck can be defined as a relational structure, where each atom corresponds to a node. The dependencies among the atoms are represented as a directed hypergraph, where each hyperedge is positional, and can have multiple nodes as head, but only a single node as tail. In this regard, every hyperedge defines a relational concept bottleneck from (possibly) many source ground atoms to a destination ground atom. ", "page_idx": 2}, {"type": "text", "text": "Moreover, each hyperedge is assumed to be sufficient to carry out the prediction for the destination atom, which can however be collectively improved by merging separate predictions. Formally, an atom dependency graph for a node $A$ , is a positional, labeled hypergraph $\\mathcal{H}=(H\\ensuremath{B},\\mathcal{R})$ , whose nodes are the atoms in the Herbrand Base $H B$ of a relational language, and each hyperedge $r\\in\\mathcal{R}$ is such that $r=([A_{1},\\ldots,A_{m}],[A])$ , with $A_{1},\\ldots,A_{m},A\\in H B$ , meaning that in $\\mathcal{H}$ there is a hyperedge with source $[A_{1},\\ldots,A_{m}]$ and destination $A$ . Each hyperedge is labelled with a type identifier $l(r)$ . Given an atom $A$ , we indicate by $\\mathcal{R}(A)$ the set of hyperedges with destination $A$ , and by ${\\mathcal{N}}_{r}(A)$ the source of the hyperedge $r$ if $r\\,\\in\\,{\\mathcal{R}}(A)$ or the emptyset otherwise. Figure 2 shows an example with two hyperedges with destination $p_{4}(b)$ , where $\\begin{array}{r l}{\\overrightarrow{N}_{o r a n a e}(p_{4}(b))=}&{{}[p_{1}(b,c),p_{2}(c,b)]}\\end{array}$ $[p_{3}(b),p_{2}(a,b),p_{1}(b,a)]$ and $\\mathcal{N}_{v i o l e t}(p_{4}(b))=\\tilde{[}p_{1}(b,c),p_{2}(c,b)]$ , we used different colors to identify different hyperedges. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "image", "img_path": "G99BSV9pt5/tmp/cb29f26b541fde385bb6a54935819ce1d47aecd3dbfc542197e52092b56dba2a.jpg", "img_caption": ["Figure 2: The graph represents the dependencies among the atoms. Here, the atom $p_{4}(b)$ can be predicted either from the orange $[\\dot{p_{3}}(b),p_{2}(\\bar{a},b),p_{1}(b,a)]$ or violet tuples of neighbours. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "3.2 The Model ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Relational Concept Bottleneck Models (R-CBM) merge CBMs and GNNs into an interpretable relational setting. An R-CBM first processes the atoms of a relational language by an encoder, and then map them by a predictor (like a CBM). The final prediction is computed by aggregating all the ones from separate groups of neighbour atoms, according to a given dependency graph (like a GNN). The pipeline of R-CBMs can be described as follows: (i) the atom encoder and predictor embeds each atom into a concept embedding and prediction score, respectively (ii) message-passing is performed to refine the embeddings and scores according to the structure defined by the atom dependency graph, and (iii) the atom predictions are obtained by aggregating the predictions. ", "page_idx": 2}, {"type": "text", "text": "Atom encoder. An $n$ -ary ground atom $A$ is defined by a predicate $p$ and a tuple of entities $\\textbf{e}=$ $(e_{1},\\ldots,e_{n})$ , such that $A=p(\\mathbf{e})$ . Like in a GNN, the entities have a feature representation $\\mathbf{x_{e}}=$ $(x_{e_{1}},\\ldots,x_{e_{n}})\\in\\mathbb{R}^{d\\cdot n}$ , being $d$ the representation size. For each atom $A=p(\\mathbf{e})$ , the atom encoder $g_{p}$ computes the atom encoding $g_{p}(\\mathbf{x_{e}^{\\angle}})\\in\\mathbb{R}^{H}$ , being $H$ the embedding size. ", "page_idx": 2}, {"type": "text", "text": "Message-passing. Given the relational concept bottlenecks, the updating of the embeddings and predictions of the atoms can be expressed as a message-passing schema over the dependency graph. For each $A\\in H B$ , with $A=p(\\mathbf{e})$ , the initial embedding and prediction for $A$ are calculated by: ", "page_idx": 2}, {"type": "equation", "text": "$$\nh^{0}(A)=g_{p}(\\mathbf{x_{e}}),\\qquad y^{0}(A)=s(h^{0}(A))\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $g_{p}$ is the atom encoder and $s:\\mathbb{R}^{H}\\to[0,1]$ is a learnable predictor function working on the local (non-relational) embeddings, such as an MLP with sigmoid activation function. Assuming the message-passing is running for $T$ time steps, for every $r\\in{\\dot{\\mathcal{R}}}(A),\\,1\\leq t\\leq T,$ , we have the updates: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{h_{r}^{t}(A)=u_{l(r)}\\left(h^{t-1}(A),\\left[h^{t-1}(B)\\right]_{B\\in\\mathcal{N}_{r}(A)}\\right)}\\\\ &{y_{r}^{t}(A)=f_{l(r)}\\left(y^{t-1}(A),\\left[h_{r}^{t}(B),y^{t-1}(B)\\right]_{B\\in\\mathcal{N}_{r}(A)}\\right)}\\\\ &{h^{t}(A)=\\sum_{r\\in\\mathcal{R}(A)}h_{r}^{t}(A)}\\\\ &{y^{t}(A)=\\bigoplus_{r\\in\\mathcal{R}(A)}y_{r}^{t}(A)}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\boldsymbol{u}_{l(r)}$ and $f_{l(r)}$ are edge-type specific functions implementing, respectively: a combine/update operation that provides a refined latent representation $h_{r}^{t}(A)$ , and a local readout operation that provides a candidate prediction based on a single neighbourhood $h_{r}^{t}(A)$ . The operator $\\oplus$ aggregates the predictions over all the neighbourhoods $r\\,\\in\\,{\\mathcal{R}}(A)$ , e.g, by maximum or summation, whose selection criterion for interpretable models will be discussed in Section 3.4. ", "page_idx": 2}, {"type": "text", "text": "Relational task predictor. The final task prediction for the atom $A$ is given by $y^{T}(A)$ , via the combination of the aggregation function and the local readout $f_{l(r)}$ at time $T$ . We note that this formulation unifies and extends the role of the task predictor in CBMs and of a readout function in GNNs. In practice, each task predictor $f_{l(r)}$ can be implemented by any blackbox-like function, like the one used in GNN architectures [29] or CBM-Deep [13]. However, an interesting alternative is to use either a partially interpretable function, like in linear CBMs, or a fully interpretable function, like in Deep Concept Reasoners (DCR) [1], which constructs a logic rule combining the predictions of the incoming atoms. Further details on selectable task predictors are in App. A.4. ", "page_idx": 3}, {"type": "text", "text": "Example 3.1. Given a local neighbourhood for the atom grandparen $\\cdot(A b e,B a r t)$ , such that $\\V_{r}(g r a n d p a r e n t(A b e,B a r t))\\mathop{=}\\left[p a r e n t(A b e,H o m e r),p a r e n t(H o m e r,B a r t),p a r e n t(H o m e r,L i s a)\\right]$ a non-interpretable $f_{l(r)}$ can compute the prediction $y_{r}^{T}(g r a n d p a r e n t(A b e,B a r t))$ based on the neighbourhood. An interpretable $f_{l(r)}$ , like the one used by DCR, can also provide an explanation for the prediction, like e.g. parent(Abe, Homer) \u2227parent(Homer, Bart) \u2192grandparent $\\cdot(A b e,B a r t)$ . ", "page_idx": 3}, {"type": "text", "text": "3.3 Learning ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this paper, we use a joint (end-to-end) SGD training of the atom encoder and predictor, as the original CBM paper [13] suggests for generalization. The learning problem can be stated as follows. ", "page_idx": 3}, {"type": "text", "text": "Definition 3.2 (Learning Problem). Given: a relational language $(\\mathcal{E},\\mathcal{V},\\mathcal{P})$ with all the atoms collected in $H B$ ; a set of entities represented by their corresponding feature vectors in $X$ (i.e. the input); a dataset composed of a subset of supervised atoms ${\\bar{D}}=\\{({\\bar{A}}_{i},l_{i}):\\,A_{i}\\in H B,l_{i}\\in\\{0,1\\}\\}$ , where $l_{i}$ is the corresponding ground-truth value for $A_{i}$ ; models $g_{p},s,u_{l(r)},f_{l(r)}$ with parameters $\\pi$ and a maximum number of iterations $T$ ; an atom dependency graph determining the relational structure of all the atoms; a loss function $L$ . Find: $\\begin{array}{r}{\\operatorname*{min}_{\\pi}\\stackrel{\\cdot}{\\sum}_{(A_{i},l_{i})\\in D}\\tilde{L}(y^{T}(A_{i}),l_{i})}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "3.4 Examples of Relational Concept Bottlenecks ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To derive specific instantiations of R-CBMs, we introduce the notion of templetized hyperedge for an atom dependency graph. A templetized hyperedge $\\rho$ is defined as a standard hyperedge, but where the source and/or the destination contain one or more variables. For example, $\\rho=$ $([p_{1}(v,u),p_{2}(u,e)],p(v,e))$ is a templetized hyperedge, meaning that we have an hyperedge istance for each possible grounding to the variables occurring in the atoms (i.e. $v,u$ in the example). All the hyperedges generated by the same template are associated to the same edge label $l(r)$ , so that both model functions $u_{r(l)},f_{r(l)}$ , are shared across all instances of the same template. We omit the subscript in case there is a single templetized hyperedge in the hypergraph (e.g. one single edge type in the dependency graph). ", "page_idx": 3}, {"type": "text", "text": "Case #1: Standard CBMs. A standard (non-relational) CBM can be easily seen as an R-CBM, by making few assumptions on the relational language and the atom dependency graph it is based on: (i) all predicates are unary, and can be partitioned into two disjoint sets, i.e. the concepts $c_{1},\\ldots,c_{k}$ and tasks $t_{1},\\ldots,t_{m}$ , respectively, (ii) in the atom dependency graph any concept atom has no parents, i.e. for every atom of the form $c(\\mathbf{e})$ , we have $\\bar{\\mathcal{R}}(c(\\mathbf{e}))=\\bar{\\varnothing}$ , and for every task $t$ there is exactly one templetized hyperedge $\\rho$ whose source is composed by all the concept atoms, i.e. $\\mathcal{N}_{\\rho}(t(v))\\stackrel{{}}{=}\\left[c_{1}(v),\\dot{\\cdot}\\cdot\\cdot,c_{k}(v)\\right]$ , (iii) $T=1$ . Hence, the final prediction on an atom $A=p(\\mathbf{e})$ is obtained as $y(A)=s(g_{p}(\\mathbf{x_{e}}))$ if $p$ is a concept predicate, and $y(A)=f_{\\rho}(y(c_{1}(\\mathbf{e})),\\dots,y(c_{k}(\\mathbf{e})))$ , if $p$ is a task predicate. For instance, given the unary predicates $\\mathcal{P}=\\{r e d$ , round, tomato}, a possible concept bottleneck is given by the templetized hyperedge $N(t o m a t o(v))=[r e d(v),r o u n d(v)]$ . ", "page_idx": 3}, {"type": "text", "text": "Case #2: Node classification via GNNs. R-CBMs allow the modelling of simple relational structures, such as relation-entity graphs, which are typically used by GNNs to generate and update node embeddings. For instance, let us consider a node classification task wrt a class $p$ , and let $q$ denotes the relation in the graph. This can be represented by the templetized hyperedge $\\mathcal{N}(p(v))=\\bar{[q(v,u)]}$ . For a heterogeneous graph with $q_{1},\\ldots,q_{k}$ relations, we can instead consider the templetized hyperedge $\\mathcal{N}(p(v))\\,=\\,\\bigl[q_{1}(v,u),\\dots,q_{k}(v,u)\\bigr]$ . Message-passing and readout in GNNs are special cases of R-CBMs, as embeddings do not depend on atom predictions and readout occurs only at step $T$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{l l l}{{h^{t}(A)}}&{{=}}&{{u\\left(h^{t-1}(A),\\left[h^{t-1}(B)\\right]_{B\\in{\\mathcal N}(A)}\\right)}}\\\\ {{y^{T}(A)}}&{{=}}&{{f\\left(h^{T}(A)\\right)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "image", "img_path": "G99BSV9pt5/tmp/21b64790fa2520e27b0b09220125ffe3c7160c88b2e0b2660a6000da353c08b4.jpg", "img_caption": ["Figure 3: In R-CBMs (i) the atom encoder $g$ maps input entities to a set of ground atoms (red/green indicate the ground atom label false/true), (ii) the relational bottleneck guides the selection of concept atoms by considering all the possible variable substitutions in $\\Theta$ , (iii) the atom predictor $f$ maps the selected atoms into a task prediction, and (iv) the aggregator $\\oplus$ combines all evidence into a final task prediction. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Case study #3: Templetized relational concept bottlenecks. The templatization of standard CBMs can be further generalized, as relational bottlenecks can represent more complex interactions. ", "page_idx": 4}, {"type": "text", "text": "Definition 3.3 (Templetized relational concept bottleneck). Given an $n$ -ary predicate $p$ , and an integer $w\\ge0$ , we define a templetized relational concept bottleneck of width $w$ as the expression: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{N}(p(\\bar{v}))=b(\\bar{v},\\bar{u})\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\bar{v}=(v_{1},\\ldots,v_{n}),\\bar{u}=(u_{1},\\ldots,u_{w})$ are variables and $b(\\bar{v},\\bar{u})$ is a list of atoms with predicates in $\\mathcal{P}$ and tuples of variables taken from $\\{v_{1},\\ldots,v_{n},u_{1},\\ldots,u_{w}\\}$ . ", "page_idx": 4}, {"type": "text", "text": "For instance, assuming to partition the predicates into two disjoint sets, i.e. concepts and tasks, similarly to what considered for standard CBMs, Definition 3.3 specifies the input-output interface of a concept-based task predictor in a relational context, being $p$ a task predicate and the predicates contained in $b$ the concepts2. The following example grounds this definition in a concrete setting. ", "page_idx": 4}, {"type": "text", "text": "Example 3.4. Given the binary predicates grandparent (task) and parent (concept), $w\\,=\\,1$ and $b(v_{1},v_{2},u)=[p a r e n t(v_{1},u),p a r e n t(u,v_{2})]$ we get the templetized relational concept bottleneck: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{N}(g r a n d p a r e n t(v_{1},v_{2}))=[p a r e n t(v_{1},u),p a r e n t(u,v_{2})]\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Figure 3 illustrates the instantiation of a relational concept bottleneck $\\begin{array}{r l}{\\mathcal{N}(U S(v))}&{{}=}\\end{array}$ $[\\bar{U}S(u),p a r e n t(u,v)]$ , for $\\mathcal{E}=[W i l l i e,H o m e r,B a r t]$ . ", "page_idx": 4}, {"type": "text", "text": "We notice that by replacing the variables $\\bar{v}$ with an entity tuple in Definition 3.3 does not correspond to an univocal instantiation of a relational concept bottleneck, as the same destination atom is predicted for every substitution $\\theta$ of the variables $\\bar{u}$ . For instance if $\\mathcal{E}=[A b e,H o m e r,B a r t,L i s a]$ in Example 3.4, we have different hyperedges having grandparent $(A b e,B a r t)$ as tail: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left(g r a n d p a r e n t(A b e,B a r t)\\right)=\\lceil p a r e n t(A b e,A b e),p a r e n t(A b e,B a r t)\\rceil}&{\\left(\\theta_{u}=\\{u/A b e\\}\\right)}\\\\ &{\\left(g r a n d p a r e n t(A b e,B a r t)\\right)=\\lceil p a r e n t(A b e,H o m e r),p a r e n t(H o m e r,B a r t)\\rceil}&{\\left(\\theta_{u}=\\{u/H o m e r\\}\\right)}\\\\ &{\\left(g r a n d p a r e n t(A b e,B a r t)\\right)=\\lceil p a r e n t(A b e,B a r t),p a r e n t(B a r t,B a r t)\\rceil}&{\\left(\\theta_{u}=\\{u/B a r t\\}\\right)}\\\\ &{\\left(g r a n d p a r e n t(A b e,B a r t)\\right)=\\lceil p a r e n t(A b e,L i s a),p a r e n t(L i s a,B a r t)\\rceil}&{\\left(\\theta_{u}=\\{u/L i s a\\}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Each separate grounding of a relational concept bottleneck corresponds to a separate predicate prediction, as the same destination atom can be predicted by different bottlenecks. Taking again Example 3.4, we can assume to have also the bottleneck: $\\ N_{2}(g r a n d p a r e n t(v_{1},v_{2}))\\ =$ [grandparen $t(v_{1},u),s i s t e r(u,v_{2})]$ which also adds the hyperedge: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{N}_{2}(g r a n d p a r e n t(A b e,B a r t))\\!=\\!\\left[g r a n d p a r e n t(A b e,L i s a),s i s t e r(L i s a,B a r t)\\right]\\;(\\theta_{u}\\!=\\!\\{u/L i s a\\})}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The final prediction is obtained by aggregating all the single predictions with the $\\oplus$ operator. ", "page_idx": 4}, {"type": "text", "text": "Aggregation semantics. In standard CBMs the interpretation of the prediction solely depends on the task predictor $f$ and there is a single templetized hyperedge from concepts to any task node. However, the same atom can be predicted by different bottlenecks in R-CBMs. Indeed, different bottlenecks can represent separate dependency paths for the same atom like: $\\mathcal{N}_{1}(t(\\bar{v}))=b_{1}(\\bar{v},\\bar{u}_{1}),\\mathcal{N}_{2}(t(\\bar{v}))=$ $b_{2}(\\bar{v},\\bar{\\bar{u}}_{2}),\\dots$ Even when considering a single bottleneck, the same grounding for $\\bar{v}$ corresponds to multiple dependencies for the same atom if $w>0$ . Each ground bottleneck corresponds to a separate hyperedge in the dependency graph and it plays a fundamental role the choice of the aggregation function $\\oplus$ . In this paper, we select as $\\oplus={\\mathrm{max}}.$ , as it guarantees a sound interpretation to R-CBMs\u2019 predictio ns. Indeed, the max aggregati on corresponds to the semantics of an existential quantification on the variables $\\bar{u}$ . As a result, the final task prediction is true if the task predictor $f$ fires for at least one grounding of the extra variables. ", "page_idx": 5}, {"type": "text", "text": "Example 3.5. Following Example 3.4, we consider a task predictor $f$ as a logic conjunction $(\\land)$ between concept atoms. If we use $\\oplus={\\mathrm{max}},$ , then the final task prediction is true if at least one substitution for $u$ is true, i.e. if there exists an entity that is parent of Bart and such that $A b e$ is her/his parent. Hence, the final task prediction can be interpreted as the logic formula ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\exists u\\;p a r e n t(A b e,u)\\land p a r e n t(u,B a r t)\\rightarrow g r a n d p a r e n t(A b e,B a r t)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "In summary, assuming $\\oplus={\\mathrm{max}}$ and that each $f$ is realized as a logic rule $\\varphi$ , a relational concept bottleneck with $\\mathcal{N}(p(\\bar{v}))\\bar{)}=b(\\bar{v},\\bar{u})$ can be associated with the explanation: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\forall\\bar{v}\\ \\exists\\bar{u}\\ \\varphi(b(\\bar{v},\\bar{u}))\\rightarrow p(\\bar{v})\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\forall\\bar{v}=\\forall v_{1},\\ldots,\\forall v_{n}$ and $\\exists{\\bar{u}}=\\exists u_{1},\\dots,\\exists u_{w}$ , like done in logic programs [14]. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section we analyze the following research questions: Generalization\u2014Can standard/relational CBMs generalize well in relational tasks? Can standard/relational CBMs generalize in out-ofdistribution settings? 3 ", "page_idx": 5}, {"type": "text", "text": "Interpretability\u2014Can relational CBMs provide meaningful explanations for their predictions? Are concept/rule interventions effective in relational CBMs? Efficiency\u2014Can relational CBMs generalize in low-data regimes? Can relational CBMs correctly predict concept/task labels with scarce concept train labels? ", "page_idx": 5}, {"type": "text", "text": "Data $\\&$ task setup. We investigate our research questions using 7 relational datasets on image classification, link prediction and node classification. We introduce two simple but not trivial relational benchmarks, namely the Tower of Hanoi and Rock-Paper-Scissors (RPS), to demonstrate that standard CBMs cannot even solve very simple relational problems. The Tower of Hanoi is composed of 1000 images of disks positioned at different heights of a tower. Concepts include whether disk $i$ is larger than $j$ (or vice versa) and whether disk $i$ is directly on top of disk $j$ (or vice versa). The task is to predict for each disk whether it is well-positioned or not. The RPS dataset is composed of 200 images showing the characteristic hand-signs. Concepts indicate the object played by each player and the task is to predict whether a player wins, loses, or draws. We also evaluate our methods on real-world benchmark datasets specifically designed for relational learning: Cora, Citeseer, [30], PubMed [23] and Countries on two increasingly difficult splits [28]. Additional details can be found in App. A.1 and App. A.5. ", "page_idx": 5}, {"type": "text", "text": "Models. We compare R-CBMs against state-of-the-art concept bottleneck architectures, including CBMs with linear and non-linear task predictors (CBM-Linear and CBM-Deep) [13], a flat version (Flat-CBM) where each prediction is computed as a function of the full set of ground atoms, but also with Feedforward and Relational black-box architectures. We also compared against DeepStochLog [33], a state-of-the-art NeSy system, and other KGE specific models for the studied KGE tasks. Our relational models include an R-CBM with DCR predictor (R-DCR) and its direct variant, using only 5 supervised examples per-predicate (R-DCR-Low). We also considered a noninterpretable R-CBM version where the predictions are based on an unrestricted predictor processing the atom representations (R-CBM-Emb). In the experiments, the loss function was selected to be the standard cross-entropy loss. Further details are in App. A.2. Evaluation. We measure generalization using standard metrics, i.e., Area Under the ROC curve [9] for multi-class classification, accuracy for binary classification, and Mean Reciprocal Rank (MRR) for link prediction, MRR and Hits $\\mathbb{\\mathrm{(}}\\otimes\\Nu$ for KGE tasks. We use these metrics to measure generalization across all experiments, including out-of-distribution scenarios, low-data regimes, and interventions. We report additional experiments and further details in App. A.3. ", "page_idx": 5}, {"type": "table", "img_path": "G99BSV9pt5/tmp/2f6ed597e260bb518677b29ed91f66b08557b49558d43b3e4dd50328e2113a7b.jpg", "table_caption": ["Table 1: Models\u2019 performance on task generalization. R-CBMs generalize well in relational tasks. $\\triangle$ indicates methods that cannot be applied due to the dataset structure. OOT indicates out-of-time training due to large domains. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "G99BSV9pt5/tmp/9521e6737c01d65a60d7cf67cdf9fda3c7a374f948c2ccd564b83b97e583b593.jpg", "table_caption": ["Table 2: MRR and Hits $\\mathbb{\\@N}$ metrics on the test set of the WN18RR and FB15k-237dataset. The competitor results have been taken from Cheng et al. [2] or from the original datasets. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "5 Key Findings ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "5.1 Generalization ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Standard CBMs do not generalize in relational tasks (Table 1). Standard CBM best task performance $\\sim55\\%$ ROC-AUC is just above a random baseline. This result directly stems from the architecture of existing CBMs, which can process only one input entity at a time. The experiments validate that this design fails on relational tasks that inherently involve multiple entities. Naive attempts to address the relational setting, like Flat-CBMs, lead to a significant drop in task generalization performance ( $-17\\%$ in Hanoi), and become intractable when applied to larger datasets (e.g., Cora, Citeseer, PubMed, Countries). In RPS, instead, Flat-CBMs performance is close to random as the linear predictor for this model can not well approximate the required non-linear combination of concepts. These findings expose the limitations of existing CBMs when applied to relational tasks and justify the need for relational CBMs. ", "page_idx": 6}, {"type": "text", "text": "R-CBMs generalize well in relational tasks (Tables 1 and 2. Relational concept bottleneck models match the generalization performance of relational black-box models (GNNs and KGEs) in relational tasks. For example, R-CBMs exhibit gains of up to $7\\%$ MRR (Countries S1), and at most a $1\\%$ loss in accuracy (Citeseer) w.r.t. relational black-boxes. In larger KGEs like WN18RR , R-DCR beats standard KGEs and is competitive against state-of-the-art custom logic-based solutions, while being more general. Non-interpretable solutions R-CBM-Emb are admitted by our relational formulation when $f_{c}$ is selected to be a generic MLP blackbox. Since R-CBM-Emb and R-DCR only differ for the selection of the predictor (interpretable for R-DCR), a comparison of the results of these models on WN18RR provides a direct measurement of the performance decay due to the additional interpretability. Relational CBMs employing a simple linear layer as task predictor (R-CBM-Linear) underfit tasks demanding on non-linear combinations of concepts (e.g., RPS). In such scenarios, a deeper task predictor (e.g., R-CBMs Deep) trivially solves the issue, but it also hampers interpretability. R-DCRs address this limit providing accurate predictions while generating high-quality rule-based explanations (Table 4). It also matches generalization performance of neural symbolic system DeepStochLog [33], which is provided with ground truth rules. ", "page_idx": 6}, {"type": "table", "img_path": "G99BSV9pt5/tmp/01638788d7c7887b3459e9527e9111b25f5f04d931be03429b335fa2e78691d7.jpg", "table_caption": ["Table 3: CBMs response to interventions. R-CBMs effectively respond to human interventions. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "R-CBMs generalize in out-of-distribution settings where the number of entities changes at test time (Figure 4). R-CBMs show robust generalization performances even in out-of-distribution conditions where the number of entities varies between training and testing. To assess generalization in these extreme conditions, we use the Tower of Hanoi dataset, where test sets of increasing complexity are generated by augmenting the number of disks in a tower. We observe that a naive approach, such as Flat-CBMs, immediately breaks as soon as we introduce a new disk in a tower, as its architecture is designed for a fixed number of input entities. In contrast, R-CBMs are more resilient, as we observe a smooth performance decline from $\\sim100\\%$ ROC-AUC (with 3 disks in both training and test sets) to around $\\sim85\\%$ in the most challenging conditions (with 3 disks in the training set and 7 in the test set). ", "page_idx": 7}, {"type": "text", "text": "5.2 Interpretability ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "R-CBMs support effective interventions (Table 3). ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "CBM architectures allow human interaction with the learnt concepts to intervene on mispredicted concepts during testing to improve the final predictions. In our experiments we assess CBMs\u2019 response to interventions on the RPS and Hanoi datasets. We set up the evaluation by generating a batch of adversarial test samples that prompt concept encoders to mispredict $\\sim\\,50\\%$ of concept labels by introducing a strong random noise in the input features drawn from the uniform distribution $\\mathcal{U}(0,20)$ . In our findings, we note that R-CBMs positively respond to test-time concept interventions by increasing their task performance. This contrasts with standard CBMs, where perfect concept predictions are not enough to solve the relational task. Notably, the RPS dataset poses a significant challenge for relational CBMs equipped with linear task predictors, as the task depends on a non-linear combination of concepts. Expanding our investigation to DCRs, we expose another dimension of human-model interaction: rule interventions. Applying both concept and rule interventions, we observe that R-DCRs perfectly predict all adversarial test samples. ", "page_idx": 7}, {"type": "image", "img_path": "G99BSV9pt5/tmp/52d722ce99412cb23ab897e861a5525bb670fc2f6cec6b7c27ee9c5b71e9806d.jpg", "img_caption": ["Figure 4: Model generalization on Hanoi OOD on the number of disks. Only R-CBMs are able to generalize effectively to settings larger than the ones they are trained on. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Relational Concept Reasoners discover semantically meaningful rules (Table 4). Among CBMs, a key advantage of DCRs lies in the dual role of generating rules which serve for both generating and explaining task predictions. Table 4 shows instances of R-DCR explanations, confirming that R-DCR discovers rules aligned with known ground truths across diverse datasets (e.g., $w i n s({\\bar{X}})\\gets$ $\\neg r o c k(X)\\wedge p a p e r(X)\\wedge\\stackrel{\\cdot}{\\neg}s c i s s o r s(X)\\wedge r\\bar{o}c k(Y)\\wedge\\neg p a p e r(Y)\\wedge\\neg s c i s s o r s(Y)$ in RPS). Notably, R-DCR discovers meaningful rules even in low data regimes (R-DCR-Low) and when the correct rules are unknown, such as in Cora, Citeseer and PubMed. ", "page_idx": 7}, {"type": "table", "img_path": "G99BSV9pt5/tmp/79429c016a7d54eed107ae97e00d8cd9ea4159d499debd0a61c46e20829b2b86.jpg", "table_caption": ["Table 4: Rules extracted by relational DCRs. In Hanoi, we remove negative atoms for brevity. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "G99BSV9pt5/tmp/fb51af0c5ec9b269e7eccf912063d4ebc728b062877009022c2c3aedf9f56cf8.jpg", "table_caption": ["Table 5: Data efficiency (Citeseer dataset). Relational CBMs are more robust than an equivalent relational black-box when reducing the amount of supervised training nodes. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.3 Low data regimes ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "R-CBMs generalize better than relational black-boxes in low-data regimes (Table 5). The ability of relational CBMs and relational black box models was compared on the Citeseer dataset as the number of labeled nodes decreased to $75\\%$ , $50\\%$ , and $25\\%$ . While no significant difference was observed with ample training data, a growing advantage for relational CBMs over relational black box models emerged in scenarios of scarce data. The intermediate predictions related to incoming atoms likely have a crucial regularization effect, particularly in scenarios with limited data. ", "page_idx": 8}, {"type": "text", "text": "R-DCR accurately makes interpretable predictions with very few atom supervisions (Table 1). R-DCR-Low is able to learn an interpretable relational predictor when reducing the training data to 5 labeled atoms for each predicate. Indeed, the supervisions are crucial to establish an alignment between human knowledge and the model on the semantics of logical explanations. The alignment can be perfectly achieved in RPS, where the predictions are mutually exclusive. On the Hanoi dataset, learning the relational binary concepts larger and top from 5 examples is challenging, leading to slightly decreased overall performance. ", "page_idx": 8}, {"type": "text", "text": "6 Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Related work on CBMs. Concept bottleneck models [13] inspired several works focusing on improved generalization [15, 5, 31], explanations [3, 1] and robustness [17, 10, 36, 11]. Despite these efforts, the application of CBMs to relational domains remains unexplored. Filling this gap, our framework allows relational CBMs to (i) effectively solve relational tasks, and (ii) generalize the explanatory capabilities of these models from propositional to relational. ", "page_idx": 8}, {"type": "text", "text": "Related work on GNNs. R-CBMs and relational black-boxes (such as GNNs) share similarities in considering the relationships between multiple entities when solving a given task. The prediction computation of R-CBMs is based on a message passing paradigm which is similar to message-passing in graph neural networks [7], which is a special case of the proposed architecture. However, relational CBMs can also define aggregations based on a semantically meaningful concepts, allowing the extraction of explanations, which can not be done by GNNs. ", "page_idx": 8}, {"type": "text", "text": "Related work on ILP. Among our considered R-CBMs, R-DCR is the only one learning a set of logic rules, hence we can draw some parallels with some algorithmic solutions defined in Inductive Logic Programming (ILP) [21]. R-DCR bottlenecks are connected to ILP mode declarations or metarules [22], which define the search space. However, while ILP involves searching through a hypothesis space of possible logical rules, guided by principles like consistency, coverage, and simplicity, R-DCR is different as it searches this space via gradient descent over a continuous relaxation of the logic, and the logic formulas are learnt by exploiting neural architectures. ", "page_idx": 8}, {"type": "text", "text": "Related work on Neuro-Symbolic AI. Neural Theorem Provers (NTP) [27] and their more scalable variations [20] combine formal proof proving with neural networks for efficiency via a trainable heuristic search. However, R-CBMs are more general than NTP \u2013or other specific rule learners\u2013 indeed their interpretability is not restricted to rule learning, but rather rely on concept interventions. Moreover, unlike NTP, when dealing with logic rules the R-CBM framework is not limited to Horn clauses, and it can be applied in classic CBMs setups where inputs are not symbolic, but images. Moreover, R-CBMs\u2019 templates can represent all the rules using a (subset of a) specified list of atoms in the body at the same time, and the embeddings will be used to determine which actual rule to instantiate in each given context (like in R-DCR). On the other hand, NTP\u2019s approach to rule learning is to enumerate all possible rules and let the learning decide which rules are useful. Please note that this approach is not scalable to larger KGs because of the combinatorial explosion of the number of rules when there are many predicates in the dataset. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Limitations. A limitation of relational CBMs consists in their limited scalability to very large domains. This limitation is shared with all existing relational systems, and most relational models have to rely on simplifying heuristics to scale to large relational structures like knowledge graphs [37, 26]. Another limitation of R-CBMs lays in the need for the definition of a relational concept bottlenecks, which acts as an architectural inductive bias, restricting the search space. Future extensions of relational CBMs can relax the need of an external template definition by including an automatic calibration of template widths, the construction of reduced set of variables\u2019 substitutions, or the automatic generation of the relational templates. ", "page_idx": 9}, {"type": "text", "text": "Conclusions. This work presents R-CBMs, a family of concept bottleneck models designed for relational tasks. The results of our experiments show that R-CBMs: (i) match the generalization performance of existing relational black-boxes, (ii) support the generation of quantified conceptbased explanations, (iii) effectively respond to test-time interventions, and (iv) withstand demanding settings including out-of-distribution scenarios, and low data regimes. R-CBMs represent a significant extension of standard CBMs, and pave the way to further investigations using CBMs to improve interpretability in GNNs and to explain KGE predictions. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "PB acknowledges support from SNSF project TRUST-ME (No. 205121L_214991). This research has also received funding from the KU Leuven Research Fund (STG/22/021, CELSA/24/008) and from the Flemish Government under the \"Onderzoeksprogramma Artifici\u00eble Intelligentie (AI) Vlaanderen\" programme. FG has been supported by the Partnership Extended PE00000013 - \u201cFAIR - Future Artificial Intelligence Research\u201d - Spoke 1 \u201cHuman-centered AI\u201d. MD was supported by TAILOR and HumanE-AI-Net, projects funded by EU Horizon 2020 research and innovation programme under GA No 952215 and No 952026, respectively. This project has also be partially supported by the EU Framework Program for Research and Innovation Horizon under the Grant Agreement No 101073307 (MSCA-DN LeMuR). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Pietro Barbiero, Gabriele Ciravegna, Francesco Giannini, Mateo Espinosa Zarlenga, Lucie Charlotte Magister, Alberto Tonda, Pietro Li\u00f3, Frederic Precioso, Mateja Jamnik, and Giuseppe Marra. Interpretable neural-symbolic concept reasoning. In International Conference on Machine Learning, pages 1801\u20131825. PMLR, 2023.   \n[2] Kewei Cheng, Jiahao Liu, Wei Wang, and Yizhou Sun. Rlogic: Recursive logical rule learning from knowledge graphs. In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 179\u2013189, 2022.   \n[3] Gabriele Ciravegna, Pietro Barbiero, Francesco Giannini, Marco Gori, Pietro Li\u00f3, Marco Maggini, and Stefano Melacci. Logic explained networks. Artificial Intelligence, 314:103822, 2023.   \n[4] Michelangelo Diligenti, Francesco Giannini, Stefano Fioravanti, Caterina Graziani, Moreno Falaschi, and Giuseppe Marra. Enhancing embedding representations of biomedical data using logic knowledge. In 2023 International Joint Conference on Neural Networks (IJCNN), pages 1\u20138. IEEE, 2023.   \n[5] Mateo Espinosa Zarlenga, Pietro Barbiero, Gabriele Ciravegna, Giuseppe Marra, Francesco Giannini, Michelangelo Diligenti, Zohreh Shams, Frederic Precioso, Stefano Melacci, Adrian Weller, Pietro Li\u00f3, and Mateja Jamnik. Concept embedding models: Beyond the accuracyexplainability trade-off. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 21400\u201321413. Curran Associates, Inc., 2022.   \n[6] Shantanu Ghosh, Ke Yu, Forough Arabshahi, and Kayhan Batmanghelich. Dividing and conquering a blackbox to a mixture of interpretable models: route, interpret, repeat. In Proceedings of the... International Conference on Machine Learning. International Conference on Machine Learning, volume 202, page 11360. NIH Public Access, 2023.   \n[7] Justin Gilmer, Samuel S Schoenholz, Patrick F Riley, Oriol Vinyals, and George E Dahl. Neural message passing for quantum chemistry. In International conference on machine learning, pages 1263\u20131272. PMLR, 2017.   \n[8] Petr H\u00e1jek. Metamathematics of fuzzy logic, volume 4. Springer Science & Business Media, 2013.   \n[9] David J Hand and Robert J Till. A simple generalisation of the area under the roc curve for multiple class classification problems. Machine learning, 45:171\u2013186, 2001.   \n[10] Marton Havasi, Sonali Parbhoo, and Finale Doshi-Velez. Addressing leakage in concept bottleneck models. Advances in Neural Information Processing Systems, 35:23386\u201323397, 2022.   \n[11] Eunji Kim, Dahuin Jung, Sangha Park, Siwon Kim, and Sungroh Yoon. Probabilistic concept bottleneck models. arXiv preprint arXiv:2306.01574, 2023.   \n[12] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[13] Pang Wei Koh, Thao Nguyen, Yew Siang Tang, Stephen Mussmann, Emma Pierson, Been Kim, and Percy Liang. Concept bottleneck models. In International conference on machine learning, pages 5338\u20135348. PMLR, 2020.   \n[14] John W Lloyd. Foundations of logic programming. Springer Science & Business Media, 2012.   \n[15] Anita Mahinpei, Justin Clark, Isaac Lage, Finale Doshi-Velez, and Weiwei Pan. Promises and pitfalls of black-box concept learning models. arXiv preprint arXiv:2106.13314, 2021.   \n[16] Robin Manhaeve, Sebastijan Dumancic, Angelika Kimmig, Thomas Demeester, and Luc De Raedt. Deepproblog: Neural probabilistic logic programming. Advances in neural information processing systems, 31, 2018.   \n[17] Emanuele Marconato, Andrea Passerini, and Stefano Teso. Glancenets: Interpretable, leak-proof concept-based models. Advances in Neural Information Processing Systems, 35:21212\u201321227, 2022.   \n[18] Giuseppe Marra, Michelangelo Diligenti, and Francesco Giannini. Relational reasoning networks. arXiv preprint arXiv:2106.00393, 2021.   \n[19] Alessio Micheli. Neural network for graphs: A contextual constructive approach. IEEE Transactions on Neural Networks, 20(3):498\u2013511, 2009.   \n[20] Pasquale Minervini, Matko Bosnjak, Tim Rockt\u00e4schel, and Sebastian Riedel. Towards neural theorem proving at scale. arXiv preprint arXiv:1807.08204, 2018.   \n[21] Stephen Muggleton and Luc De Raedt. Inductive logic programming: Theory and methods. The Journal of Logic Programming, 19:629\u2013679, 1994.   \n[22] Stephen Muggleton. Inverse entailment and progol. New generation computing, 13:245\u2013286, 1995.   \n[23] Galileo Namata, Ben London, Lise Getoor, Bert Huang, and U Edu. Query-driven active surveying for collective classification. In 10th international workshop on mining and learning with graphs, volume 8, page 1, 2012.   \n[24] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. arXiv preprint arXiv:1912.01703, 2019.   \n[25] Fabian Pedregosa, Ga\u00ebl Varoquaux, Alexandre Gramfort, Vincent Michel, Bertrand Thirion, Olivier Grisel, Mathieu Blondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, et al. Scikitlearn: Machine learning in python. the Journal of machine Learning research, 12:2825\u20132830, 2011.   \n[26] Meng Qu, Junkun Chen, Louis-Pascal Xhonneux, Yoshua Bengio, and Jian Tang. Rnnlogic: Learning logic rules for reasoning on knowledge graphs. In International Conference on Learning Representations, 2020.   \n[27] Tim Rockt\u00e4schel and Sebastian Riedel. Learning knowledge base inference with neural theorem provers. In Proceedings of the 5th workshop on automated knowledge base construction, pages 45\u201350, 2016.   \n[28] Tim Rockt\u00e4schel and Sebastian Riedel. End-to-end differentiable proving. Advances in neural information processing systems, 30, 2017.   \n[29] Franco Scarselli, Marco Gori, Ah Chung Tsoi, Markus Hagenbuchner, and Gabriele Monfardini. The graph neural network model. IEEE transactions on neural networks, 20(1):61\u201380, 2008.   \n[30] Prithviraj Sen, Galileo Namata, Mustafa Bilgic, Lise Getoor, Brian Galligher, and Tina EliassiRad. Collective classification in network data. AI magazine, 29(3):93\u201393, 2008.   \n[31] Johanna Vielhaben, Stefan Bluecher, and Nils Strodthoff. Multi-dimensional concept discovery (mcd): A unifying framework with completeness guarantees. Transactions on Machine Learning Research, 2023.   \n[32] Quan Wang, Zhendong Mao, Bin Wang, and Li Guo. Knowledge graph embedding: A survey of approaches and applications. IEEE Transactions on Knowledge and Data Engineering, 29(12):2724\u20132743, 2017.   \n[33] Thomas Winters, Giuseppe Marra, Robin Manhaeve, and Luc De Raedt. Deepstochlog: Neural stochastic logic programming. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 36, pages 10090\u201310100, 2022.   \n[34] Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. Embedding entities and relations for learning and inference in knowledge bases. arXiv preprint arXiv:1412.6575, 2014.   \n[35] Chih-Kuan Yeh, Been Kim, Sercan Arik, Chun-Liang Li, Tomas Pfister, and Pradeep Ravikumar. On completeness-aware concept-based explanations in deep neural networks. Advances in neural information processing systems, 33:20554\u201320565, 2020.   \n[36] Mateo Espinosa Zarlenga, Pietro Barbiero, Zohreh Shams, Dmitry Kazhdan, Umang Bhatt, Adrian Weller, and Mateja Jamnik. Towards robust metrics for concept representation evaluation. arXiv preprint arXiv:2301.10367, 2023.   \n[37] Yuyu Zhang, Xinshi Chen, Yuan Yang, Arun Ramamurthy, Bo Li, Yuan Qi, and Le Song. Efficient probabilistic logic reasoning with graph neural networks. In ICLR, 2020. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Datasets ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1.1 Rock-Paper-Scissors ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "We build the Rock-Paper-Scissors (RPS) dataset by downloading images from Kaggle: https://www.kaggle.com/datasets/drgfreeman/rockpaperscissors? resource $=$ download. The dataset contains images representing the characteristic handsigns annotated with the usual labels \"rock\", \"paper\", and \"scissors\". To build a relational dataset we randomly select 200 pairs of images and defined the labels wins/ties/loses according to the standard game-play. To train the models we select an embedding size of 10. ", "page_idx": 12}, {"type": "text", "text": "A.1.2 Tower of Hanoi ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "We build the Tower of Hanoi (Hanoi) dataset by generating disk images with matplotlib. We randomly generate 1000 images representing disks of different sizes in [1, 10] and at different heights of the tower in [1, 10]. We annotate the concepts $t o p(u,v)$ , larger $(u,v)$ using pairs of disks according to the usual definitions. We define the task label of each disk according to whether the disk is well positioned following the usual definition that a disk is well positioned if the disk below (if any) is larger, and the disk above (if any) is smaller. To train the models we select an embedding size of 50. ", "page_idx": 12}, {"type": "text", "text": "A.1.3 Cora, Citeseer, PubMed, Countries ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "For the experiments in Table 1, we exploit the standard splits of the Planetoid Cora, Citeseer and PubMed citation networks, as defined in Pytorch Geometric https://pytorch-geometric. readthedocs.io/en/latest/modules/datasets.html. The classes of documents are used both for tasks and concepts ", "page_idx": 12}, {"type": "text", "text": "The Countries dataset (ODbL licence) 4 defines a set of countries, regions and sub-regions as basic entities. We used splits and setup from Rocktaschel et al. [28], which reports the basic statistics of the dataset and also defines the tasks S1, S2 used in this paper. ", "page_idx": 12}, {"type": "text", "text": "A.2 Baselines ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.2.1 Exploiting prior knowledge ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Additionally, we can use prior knowledge to optimize the template and the aggregation by excluding concept atoms in $b(\\bar{v},\\bar{u})$ and groundings in $\\Theta$ that are not relevant to predict the task. This last simplification is crucial anytime we want to impose a locality bias, and it is also at the base of the heuristics that are commonly used in extension of knoweldge graph embeddings with additional knowledge [26, 37, 4]. ", "page_idx": 12}, {"type": "text", "text": "A.2.2 Cora, Citeseer, PubMed ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Slash notation $a/b/c$ indicates parameters for cora/citeseer/pubmed when different. ", "page_idx": 12}, {"type": "text", "text": "R-CBMs exploit the same concept encoder $g_{i}$ , which corresponds to an MLP with 2 hidden layers of size $32/16/16$ followed by an output layer of size $6/7/3$ classes. Activation functions are LeakyReLu. The blackbox feedforward network is equivalent to the one of the CBM models. The blackbox relational model is a GCN with 2 layers of size 16. Node features for R-CBM models are initialized with the last embeddings of the GCN. R-CMB Deep task predictor exploits a 2 layer MLP with 1 hidden layers of size $32/16/16$ followed by an output layer of size 1. Activation functions are LeakyReLu. R-DCR exploits, as $f i l t e r$ and sign functions a linear layer of size $32/16/16$ . DeepStochLog exploits the same concept encoder as neural predicate. It exploits also the pretraining using a GCN. As task predictor, it exploits a SDCG grammar implementing the rule $c i t{\\bar{e}}(v_{1},v_{2})\\stackrel{*}{\\to}c l a s s_{i}(v_{1})\\iff c l a s s_{i}(v_{2})$ . ", "page_idx": 12}, {"type": "text", "text": "A.2.3 Countries ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "The DistMult Knowledge Graph Embeddings (KGE) [34] was used as BlackBox relational baseline for the Countries S1 and S2 datasets. We varied the embedding sizes in the set $\\{10,20,50,100,200,300\\}$ and selected the best results on the validation set. The DistMult KGE was used as a basic concept encoder for CMBs. The R-CBM-Linear computes the concepts via linear layer followed by the KGE output layer. The R-CBM-Deep computes the concepts via an MLP with 2 hidden layers followed by a KGE output layer. Activation functions are ReLu. ", "page_idx": 13}, {"type": "text", "text": "A.3 Experimental Details and Additional experiments ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "All experiments have been carried out on a machine with a Intel i7 CPU, 128GB RAM. Running times for all experiments are within 1 hour, with the exception of the link prediction experiment on WN18RR, which took $14\\mathrm{h};20\\mathrm{m}$ . ", "page_idx": 13}, {"type": "text", "text": "A.3.1 Training Hyperparameters ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In all synthetic tasks, we generate datasets with 3,000 samples and use a traditional $70\\%{-}10\\%{-}20\\%$ random split for training, validation, and testing datasets, respectively. During training, we then set the weight of the concept loss to $\\lambda=0.1$ across all models. We then train all models for 3000 epochs using full batching and a default Adam [12] optimizer with learning rate $10^{-4}$ . KGE experiments have used the Complex and Rotate KGE encoder and scorer function for $g_{r},s$ in the Countries and WN18RR datasets, respectively. ", "page_idx": 13}, {"type": "text", "text": "A.3.2 Data Efficiency ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "As explained in Section A.2.2, the relational CBMs exploits the features obtained by pretraining on a GNN on the same data split. Such pretraining is beneficial only in high-data settings (i.e. $100\\%$ , $75\\%$ and $50\\%$ ). On low data regime (i.e. $25\\%$ ), pretrained features are worse than original features. In these cases, we train the different baselines from scratch by using directly the low level features of the documents. ", "page_idx": 13}, {"type": "text", "text": "For training R-CBM models on the WN18RR dataset, we used the heuristic, commonly employed in the NeSy community, of instantiating only hyperedges where all source atoms are observed in the training set [37]. ", "page_idx": 13}, {"type": "text", "text": "A.3.3 Countries ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "The task consists of predicting the unknown locations of a country, given the evidence in form of country neighbourhoods and some known country/region locations. The entities are divided into the $C,R,W$ domains referring to the countries, regions and continents, respectively. The predicate $l o c I n(v_{1},v_{2})$ determines the location of a country in a region or continent, with the variables $(v_{1},v_{2})\\in C\\times R\\cup W$ or $(v_{1},v_{2})\\in R\\times W$ . The country neighbourhoods are determined by the predicate $n e i g h O f(v_{1},v_{3})$ with the variables $v_{1},v_{3}\\in C$ . ", "page_idx": 13}, {"type": "text", "text": "The entities in the dataset are a set of countries, regions and continents represented by their corresponding feature vectors as computed by a DistMult KGE (see baselines). The concept datasets are respectively the set $D_{c_{l o c I n}}\\stackrel{-}{=}(C\\times\\dot{R})\\cup(R\\times W)$ and $D_{c_{n e i g h O f}}=C\\times C$ . The task dataset $D_{y_{l o c I n}}=C\\times W$ is formed by queries about the location of some countries within a continent. The templetized relational concept bottleneck is defined as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{N}(l o c I n(v_{1},v_{2}))=[l o c I n(v_{1},u_{1}),l o c I n(u_{1},v_{2}),n e i g h O f(v_{1},u_{2}),l o c I n(u_{2},v_{2})]\\;.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Finally, the cross entropy loss was used both for functions for concepts. ", "page_idx": 13}, {"type": "text", "text": "A.3.4 Hard-to-classify samples ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "R-CBMs can also be used to find easy/hard samples, similar to what done for standard CBMs in [6]. In our framework, we consider as hard examples the ones whose prediction is highly uncertain when using a CBM with a propositional template (see CBM-Deep rows in Table 6. When using a relational template, instead, we verified that the distribution of the prediction uncertainty significantly decreases. We show this in Figure 5, where the prediction uncertainty decreases when transitioning from a propositional to a relational template. Table 6 shows the concept/task activation for the hardest example to classify using the propositional template (high uncertainty) and the corresponding predictions when using the relational template (low uncertainty). ", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "image", "img_path": "G99BSV9pt5/tmp/e5af08cb7107b85341cbd584914fa9ef2349828dac81da1bd2a0728c29d67a93.jpg", "img_caption": ["Figure 5: Distribution of class prediction uncertainty comparing CBMs using relational vs propositional bottlenecks. "], "img_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "G99BSV9pt5/tmp/e600da74707ea78529b3e3d37a31fc467b2835eb55f09d09815c141630678ce3.jpg", "table_caption": ["Table 6: Examples of hard to classify examples using a propositional bottleneck (used by CBM-Deep) which become easy to classify when using a relational bottleneck (used by R-CBM-Deep). "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "A.3.5 Completeness scores ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "While Table 5 reported an evaluation of concept efficiency, here we report the completeness scores of each concept-based model wrt the relational baseline, following Equation 1 in [35]. The results are shown in Table 7. ", "page_idx": 14}, {"type": "table", "img_path": "G99BSV9pt5/tmp/d2525db45cdd12dc5cba2bc99b12e09e7bfa1246f5deabf860579046a6dc47aa.jpg", "table_caption": [], "table_footnote": ["Table 7: Completeness scores of each concept-based model wrt the relational black-box baseline. "], "page_idx": 14}, {"type": "text", "text": "A.4 Relational Task Predictors ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In standard CBMs, a wide variety of task predictors $f$ have been proposed on top of the concept encoder $g$ , defining different trade-offs between model accuracy and interpretability. In the following, we resume how we adapted a selection of representative models for $f$ to be applicable in a relational setting (fixing for simplicity $o=0$ ). These are the models that we will compare in the experiments (Section 4 and 5). ", "page_idx": 14}, {"type": "text", "text": "Relational Concept Bottleneck Model Linear (R-CBM-Linear) The most basic task predictor employed in standard CBMs is represented by a single linear layer [13]. This choice guarantees a high-degree of interpretability, but may lack expressive power and may significantly underperform whenever the task depends on a non-linear combination of concepts. In the relational context, we define it as following: ", "page_idx": 15}, {"type": "equation", "text": "$$\nf(\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u}))=W\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u})+w_{0}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Deep Relational Concept Bottleneck Model (Deep R-CBM) To solve the linearity issue of R-CBM, one can increase the number of layers employed by the task predictor (as also proposed in [13]). In the relational context we can define a Deep R-CBM as following: ", "page_idx": 15}, {"type": "equation", "text": "$$\nf(\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u}))=\\varphi(\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u})),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where we indicate with $M L P$ a multi-layer perceptron. However, the interpretability between concept and task predictions is lost, since MLPs are not transparent. Further, the ability of a Deep R-CBM to make accurate predictions is totally depending on the existence of concepts that univocally represent the tasks, hence being possibly very inefficacy. ", "page_idx": 15}, {"type": "text", "text": "Relational Deep Concept Reasoning (R-DCR) [5] proposed to encode concepts by employing concept embeddings (instead of just concept scores), improving CBMs generalization capabilities, but affecting their interpretability. Then [1] proposed to use these concept embeddings to generate a symbolic rule which is then executed on the concept scores, providing a completely interpretable prediction. We adapt this model in the relational setting: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathrm{R:}\\quad f(\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u}))=\\varphi(\\theta_{\\bar{u}}b({\\bar{x}},\\bar{u})),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\varphi$ indicates the rule generated by a neural module working on the concept embeddings. For further details on how $\\varphi$ is learned, please refer to [1]. Since the logical operations in R-DCR are governed by a semantics specified by a t-norm fuzzy logic [8], whenever we use this model we require the aggregation operation $\\bigoplus$ used in Eq. 3.2 to correspond to a fuzzy OR. The max operator corresponds to the OR within the G\u00f6del fuzzy logic. ", "page_idx": 15}, {"type": "text", "text": "Relational Deep Embedding Reasoning (R-CBM-Emb) [18] proposes a latent relational process, which computes the atom representations using the presentations of other atoms that co-occur in the same ground formula. The final readout is based on an MLP processing the final atom representation. This model can exploit the rich reletional representations developed as atom embeddings, but it acts as a blackbox in terms of explanations of how the decision process takes form. This model can be implemented in our general model structure by restricting the $f_{c}$ function to only process the $h_{c}^{t}$ embeddings as input, such that: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r c l}{{h_{c}^{t}(A)}}&{{=}}&{{u_{r(l)}\\left(h^{t-1}(A),\\left[h^{t-1}(B)\\right]_{B\\in{\\cal N}_{c}(A)}\\right)}}\\\\ {{y_{c}^{t}(A)}}&{{=}}&{{M L P\\left(h_{c}^{t}(A)\\right)\\;.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "R-DCR-Low R-DCR-Low is a version of R-DCR that is trained by providing the atom supervisions for only 5 incoming hyperedges. Its architecture and learning is entirely identical to DCR except for two variants: ", "page_idx": 15}, {"type": "text", "text": "\u2022 Since DCR strongly depends on crisp concepts prediction for learning good and interpretable rule, in absence of sufficient supervision, we need a different way to obtain crisp predictions. To this end we substitute the standard sigmoid and softmax activation functions for concept predictors $g_{i}$ with discrete differentiable sample from a bernoulli or categorial distributions. The differentiability is obtained by using the Straight Through estimators provided by PyTorch.   \n\u2022 Since the backward signal from DCR can be very noisy at the beginning of the learning, we add a parallel task predictor (and a corresponding loss term), completely identical to the one of a R-CBM-Deep model. Such predictor only guides the learning of the concepts during training by a cleaner backward signal but is discarded during test, leaving a standard DCR architecture. ", "page_idx": 15}, {"type": "text", "text": "Flat Concept Bottleneck Model (Flat-CBM) assumes each prediction to be computed as a function of the full set of ground atoms. This model has limited scalability but it is introduced for comparison reasons in the experimental section. ", "page_idx": 15}, {"type": "text", "text": "A.5 Code, Licences, Resources ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Libraries For our experiments, we implemented all baselines and methods in Python 3.7 and relied upon open-source libraries such as PyTorch 1.11 [24] (BSD license) and Scikit-learn [25] (BSD license). To produce the plots seen in this paper, we made use of Matplotlib 3.5 (BSD license). We will release all of the code required to recreate our experiments in an MIT-licensed public repository. ", "page_idx": 16}, {"type": "text", "text": "Resources All of our experiments were run on a private machine with 8 Intel(R) Xeon(R) Gold 5218 CPUs (2.30GHz), 64GB of RAM, and 2 Quadro RTX 8000 Nvidia GPUs. We estimate that approximately 50-GPU hours were required to complete all of our experiments. ", "page_idx": 16}, {"type": "text", "text": "Ethical Statement ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "There are no ethical issues. ", "page_idx": 16}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The claimed contributions in the abstract and introduction reflect the main contributions of the paper in terms of model definition, analysis and experimental results. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 17}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 17}, {"type": "text", "text": "[Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: This is done in the discussion section (6). ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 17}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 18}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Limited details are given in Sections 4 and 5, with the remaining details provided in Appendix. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 18}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 18}, {"type": "text", "text": "Answer: [No] ", "page_idx": 19}, {"type": "text", "text": "Justification: We will make the code public after publication. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 19}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: These details are given in the Appendix. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 19}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We provide the standard-deviations over multiple seedsall for most experiments. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We reported the details of the machines exploited in the experiments in the Appendix. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 20}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: Our research does not raise any ethical issue. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 20}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve an immediate societal impact. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 21}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: We mentioned and respected all the licences of software and data in the Appendix. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 21}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 22}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 22}, {"type": "text", "text": "Justification: The code and the related licenses will be released upon publication of the paper. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 22}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 22}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 22}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 22}]