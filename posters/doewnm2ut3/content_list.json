[{"type": "text", "text": "Neural Combinatorial Optimization for Robust Routing Problem with Uncertain Travel Times ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Pei Xiao1, Zizhen Zhang1\u2217, Jinbiao Chen1, Jiahai Wang1, Zhenzhen Zhang ", "page_idx": 0}, {"type": "text", "text": "School of Computer Science and Engineering, Sun Yat-sen University, P.R. China 1 School of Economics and Management, Tongji University, P.R. China 2 xiaop39@mail2.sysu.edu.cn, zhangzzh7@mail.sysu.edu.cn chenjb69@mail2.sysu.edu.cn, wangjiah@mail.sysu.edu.cn zhenzhenzhang@tongji.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We consider the robust routing problem with uncertain travel times under the min-max regret criterion, which represents an extended and robust version of the classic traveling salesman problem (TSP) and vehicle routing problem (VRP). The general budget uncertainty set is employed to capture the uncertainty, which provides the capability to control the conservatism of obtained solutions and covers the commonly used interval uncertainty set as a special case. The goal is to obtain a robust solution that minimizes the maximum deviation from the optimal routing time in the worst-case scenario. Given the significant advancements and broad applications of neural combinatorial optimization methods in recent years, we present our initial attempt to combine neural approaches for solving this problem. We propose a dual multi-head cross attention mechanism to extract problem features represented by the inputted uncertainty sets. To tackle the built-in maximization problem, we derive the regret value by invoking a pre-trained model, subsequently utilizing it as the reward during the model training. Our experimental results on the robust TSP and VRP demonstrate the efficacy of our neural combinatorial optimization method, showcasing its ability to efficiently handle the robust routing problem of various sizes within a shorter time compared with alternative heuristic approaches. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The classic Traveling Salesman Problem (TSP) and Vehicle Routing Problem (VRP) represent fundamental NP-hard combinatorial optimization challenges. In these routing problems, an agent commences from a designated node and fulfills specific task requisites. The primary objective is to minimize the total travel time or cost of access. However, the classic routing problem is mathematically simplified and idealized, lacking the necessary robustness to handle the complexities of the real world. In actual scenarios, the existence of various uncertain factors may significantly impact the final outcome. For example, considering the travel time between two nodes, it is not only affected by objective factors such as traffic conditions, road quality, and weather, but also by subjective factors such as the traveler\u2019s status and mood. When planning a trip and estimating travel time, uncertainty about the actual travel conditions may arise. To ensure a satisfactory travel experience, it is sensible to adopt a robust approach, which involves seeking a solution that is less vulnerable to adverse conditions, even in the worst-case scenario. ", "page_idx": 0}, {"type": "text", "text": "While there are several robust routing formulations in the literature, this study primarily focuses on classic robust routing problems featuring a budget uncertainty set. The underlying idea is that the uncertainty support set is represented by a set of interval data, but usually not all arcs are affected to achieve their worst values simultaneously in one realistic scenario. More concretely, the travel time between two nodes is given by a range with upper and lower values, and a parameter $\\Gamma$ is used to specify the number of affected arcs. In addition, the min-max regret criterion (also known as robust deviation criterion [1]) is generally considered, which avoids overconservatism while considering certain degree of robustness. It aims to minimize the maximum deviation from the optimal route over the realization of edge costs in all scenarios. Detailed definition of such criterion will be provided in Section 3. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "To tackle the robust routing problem, traditional robust optimization methods have been employed, including both exact and heuristic approaches. These methods treat the problem instances individually and aim to generate optimal or near-optimal robust solutions within a reasonable computation time. However, their efficiency diminishes when dealing with a large set of instances that exhibit similar interval uncertainty structures. Specifically, the uncertain travel time of edges in different instances may share comparable upper and lower limits, following certain hourly or daily patterns. To overcome these limitations, we can leverage advanced neural techniques to exploit the underlying patterns and similarities in the data, thus enabling the derivation of more efficient solutions. ", "page_idx": 1}, {"type": "text", "text": "In summary, this paper attempts to explore the neural combination optimization methods to address the robust routing problem with uncertain travel times characterized by budget uncertainty set. The contributions of our work can be highlighted as follows. ", "page_idx": 1}, {"type": "text", "text": "\u2022 We introduce the robust routing problem with the general budget uncertainty set, which covers the interval uncertainty set as a special case, and treat the problem from the perspective of deep reinforcement learning.   \n\u2022 We propose an end-to-end neural model to capture the features of robust routing problem, and use a pre-trained neural model to efficiently calculate the reward with respect to the worst-case scenario during training.   \n\u2022 We conduct extensive experiments on Robust Traveling Salesman Problem (RTSP) and Robust Capacitated Vehicle Routing Problem (RVCRP) instances. The results substantiate the efficacy of our approach in efficiently handling robust routing problems across diverse scales within shorter computation time. ", "page_idx": 1}, {"type": "text", "text": "The remainder of the paper is structured as follows. In Section 2, we provide an overview of existing works related to robust optimization and neural combinatorial optimization, respectively. In Section 3, taking the Robust Traveling problem as an example, we describe the problem definition of RTSP in detail. In Section 4, we elaborate the proposed neural combinatorial optimization method. In Section 5, we provide experimental results for different RTSP and RCVRP instances. In Section 6, we conclude our work with possible future directions. 1 ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Robust Optimization. As early as the 1950s, Bellman and Zadeh [2] initiated research on uncertainty optimization. Robust optimization, as introduced by Ben-Tal et al. [3], adopts a conservative approach based on worst-case optimization, ensuring that the obtained solution remains feasible for any possible realization of uncertain parameters. The formulation of robust optimization models varies significantly depending on the choice of uncertainty sets and robustness standards. Uncertainty sets encompass various types, including interval sets [3], ellipsoid sets [4, 3], polyhedron sets [5], budget sets [6], and more. Robustness standards encompass criteria such as the normal min-max standard, min-max-regret standard [1], adjustable robustness [7], etc. Considering the literature of RTSP, Montemanni et al. [8] proposed exact algorithms for RTSP with interval uncertainty sets, employing the robust deviation criterion. Chassein and Goerigk [9] introduced a recoverable robust model that allows a tour to modify a limited number of edges once a scenario becomes known. Lu et al. [10] proposed a heuristic method based on simulated annealing and the LKH algorithm to solve RTSP with the min-max regret criterion and interval uncertainty sets. Additionally, Hasegawa and Wu [11] presented an intriguing heuristic edge generation algorithm to tackle this problem. On the issue of Robust VRP, Sungur et al. [12] applied the MTZ model to the traditional CVRP problem and robustly modeled demand uncertainty. Subsequently, Solano-Charris et al. [13] introduced a metaheuristic algorithm based on local search to address the lexicographic min-max criterion. Eufinger et al. [14] proposed a heuristic algorithm for solving the $k$ -adaptability min-max-min criterion. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Neural Combinatorial Optimization. Neural combinatorial optimization methods for end-to-end solving of the Vehicle Routing Problem (VRP) can be broadly categorized into supervised learning (SL) and deep reinforcement learning (DRL) approaches [15]. While SL requires high-quality solutions to the VRP as training labels [16\u201318], DRL methods are divided into value-based [19\u2013 21] and policy-based techniques. Given the complexity of routing policies, policy-based DRL approaches have become the mainstream choice, achieving notable success in various combinatorial optimization problems [22\u201324], including routing [25\u201328]. In recent years, advancements have continued. For example, Zhang et al. [29] introduced a DRL method employing an edge-based graph attention network for solving the practical Vehicle Routing Problem with Time Windows (VRPTW). Additionally, Kwon et al. [30] designed a neural model utilizing cross attention to handle matrix inputs, while Zhou et al. [31] presented a general meta-learning framework that considers the generalization of size and distribution in vehicle routing problems. These studies collectively contribute to the advancement of neural combinatorial optimization methods, showcasing their ability to tackle various types of routing problems. ", "page_idx": 2}, {"type": "text", "text": "Neural Methods for Robust Optimization. In recent studies, there have been initial attempts to apply neural methods to the field of robust optimization. Jacobs et al. [32] employed reinforcement learning to solve min-max robust optimization problems. They precisely solved the inner minimization problem and utilized the DQN method to handle the outer problem. Dumouchelle et al. [33] proposed an efficient machine-learning-driven instantiation of the column-and-constraint generation algorithm for two-stage min-max-min robust optimization problems. Our approach differs in that we solely train a neural model capable of rapidly constructing high-quality solutions through inference. By focusing on training a neural model, we aim to provide a novel perspective on addressing the robust routing problem. ", "page_idx": 2}, {"type": "text", "text": "3 Problem Description ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In the subsequent discussion, we employ RTSP as a paradigmatic illustration of the robust routing problem for comprehensive exposition. More detailed formulations of RTSP and RCVRP can be referenced in Appendix 7.3. ", "page_idx": 2}, {"type": "text", "text": "3.1 Nominal TSP ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The traveling salesman problem is a classic combinatorial optimization problem mathematically defined as follows. Given a complete symmetric graph $G=(V,E)$ , where $V=\\{1,2...,n\\}$ is the node set, $t_{i j}$ , as a nominal value, denote the expected travel time of edge $(i,j)\\in\\dot{E}$ . Here, $x_{i j}$ is a binary variable that indicates whether the edge $(\\bar{i},j)$ is selected for the route, with 1 for selection and 0 for non-selection. The objective is to find a close route with the minimum total travel time. ", "page_idx": 2}, {"type": "text", "text": "For simplicity, we hereinafter use $\\mathbb{S}$ to represent the solution space, which is the set of all feasible TSP routes. ", "page_idx": 2}, {"type": "text", "text": "3.2 Robust TSP ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Based on historical data, it is relatively straightforward to determine the fluctuation range $[t_{i j}^{-},t_{i j}^{+}]$ of travel time for each edge $(i,j)$ , where $t_{i j}^{-}$ and $t_{i j}^{+}$ denote the lower and upper bounds of possible values, respectively. The interval uncertainty set is defined as $\\mathbb{U}_{i n t e r v a l}=\\{t|t_{i j}\\in[t_{i j}^{-},t_{i j}^{+}],\\forall(i,j)\\in$ $E\\}=\\{t|t_{i j}=t_{i j}^{-}+\\hat{t}_{i j}\\eta_{i j},0\\le\\eta_{i j}\\le1,\\forall(i,j)\\in E\\}$ , where $\\hat{t}_{i j}=t_{i j}^{+}-t_{i j}^{-}$ . To provide flexibility to control the conservatism of obtained solutions, the budget uncertainty set is usually considered, which is defined as $\\begin{array}{r}{\\mathbb{U}_{b u d g e t}=\\{t|t_{i j}=t_{i j}^{-}+\\hat{t}_{i j}\\eta_{i j},0\\le\\eta_{i j}\\le1,\\forall(i,j)\\in E;\\sum_{(i,j)\\in E}\\eta_{i j}\\le\\Gamma\\}}\\end{array}$ Here, the parameter $\\Gamma$ controls the number of affected edges. It is apparent that the budget uncertainty set simplifies to the interval uncertainty set when $\\Gamma\\geq\\bar{(}_{2}^{n})$ and to the deterministic version when $\\Gamma=0$ . Hence, the budget uncertainty set demonstrates a certain level of generalization. ", "page_idx": 2}, {"type": "text", "text": "To specify the objective of RTSP, the min-max-regret criterion is adopted. For better understanding, we first introduce the concept of regret. ", "page_idx": 3}, {"type": "text", "text": "Definition 3.1 (regret). Given a TSP solution $x$ and a scenario $u$ , the regret value denotes the difference between the objective value of $x$ and the optimal solution under $u$ . ", "page_idx": 3}, {"type": "equation", "text": "$$\nr e g r e t(x,u)=\\sum_{(i,j)\\in E}t_{i j}^{u}x_{i j}-\\operatorname*{min}_{y\\in\\mathbb{S}}\\sum_{(i,j)\\in E}t_{i j}^{u}y_{i j},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $t_{i j}^{u}$ is the actual travel time of edge $(i,j)$ under scenario u. $y$ is the 0-1 decision variable of nominal TSP under scenario $u$ . ", "page_idx": 3}, {"type": "text", "text": "Definition 3.2 (min-max-regret criterion). It aims to find a TSP solution that minimizes the maximum regret over all realizations of edge costs. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{x\\in\\mathbb{S}}\\operatorname*{max}_{u\\in\\mathbb{U}}r e g r e t(x,u),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where U is the uncertainty set including all possible scenarios. ", "page_idx": 3}, {"type": "text", "text": "From Equation (2), it is evident that RTSP is difficult to solve directly due to its triple optimality judgment. However, it is worth mentioning that in Montemanni et al. [8], a theorem regarding the derivation of the worst-case scenario in budget uncertainty set is proposed under the min-max-regret criterion. By leveraging this theorem, the complexity of RTSP can be significantly reduced. ", "page_idx": 3}, {"type": "text", "text": "Theorem 1. Given a TSP solution $x$ , the worst-case scenario in budget uncertainty set for solution $x$ (i.e., the scenario that maximizes the regret of solution $x$ ) is the one where exactly $\\Gamma$ edges with the largest upper bound in x takes its upper bound (i.e., $\\eta_{i j}=1$ and $t_{i j}=t_{i j}^{-}+\\hat{t}_{i j})$ , and the remaining edges take its lower bound (i.e., $\\eta_{i j}=0$ and $t_{i j}=t_{i j}^{-},$ ) . ", "page_idx": 3}, {"type": "text", "text": "Proof. See Appendix 7.1. ", "page_idx": 3}, {"type": "text", "text": "Given that the interval uncertainty set is a special case of the budget uncertainty set with $\\Gamma\\geq\\binom{n}{2}$ , a corollary can be outlined as follows. ", "page_idx": 3}, {"type": "text", "text": "Corollary 1. Given a TSP solution $x$ , the worst-case scenario in interval uncertainty set for solution $x$ (i.e., the scenario that maximizes the regret of solution $x$ ) is the one where all the traversed edge of solution x reach their upper bound limit and the remaining edges reach their lower bound limit. ", "page_idx": 3}, {"type": "text", "text": "Taking the interval uncertainty for example, let $w c(x)$ denote the worst-case scenario for solution $x$ Its associated travel time tiwjc $t_{i j}^{w c(x)}$ is given by: ", "page_idx": 3}, {"type": "equation", "text": "$$\nt_{i j}^{w c(x)}=x_{i j}t_{i j}^{+}+(1-x_{i j})t_{i j}^{-},\\quad\\forall(i,j)\\in E\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Therefore, the formulation of RTSP can be simply expressed as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{x\\in\\mathbb{S}}\\{\\sum_{(i,j)\\in E}t_{i j}^{+}x_{i j}-\\operatorname*{min}_{y\\in\\mathbb{S}}\\sum_{(i,j)\\in E}t_{i j}^{w c(x)}y_{i j}\\}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In Figure 1, we give a specific example to illustrate the solution process of RTSP with interval uncertainty. There are 4 nodes and 6 edges. Each edge is associated with an uncertainty interval (see Figure 1a). Assuming that a feasible solution $x$ is $^{\\ast}1\\rightarrow2\\rightarrow3\\rightarrow4\\rightarrow1^{\\ast}$ represented by the green edges, its nominal total time is $5+9+4+4=22$ . According to Corollary 1, we can obtain the worst-case scenario $w c(x)$ with respect to $x$ , as indicated by the edge values in Figure 1b. In this case, we can determine the optimal solution under the scenario $w c(x)$ , represented by the red edges in Figure 1c, with a total time $5+1+4+4=14$ . The max-regret value for $x$ is then calculated as $22-14=8$ . By obtaining the max-regret for every feasible solution, the final optimal solution is the one with the minimum max-regret. ", "page_idx": 3}, {"type": "text", "text": "4 Methodology ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The objective of the robust routing problem is to discover a robust route that minimizes the maxregret. Only when a route is complete can we calculate its max-regret value. This observation bears resemblance to the concept of delayed reward in deep reinforcement learning. We propose employing the neural combinatorial optimization method to construct such route in an end-to-end manner. To elaborate on our approach, we also employ RTSP with interval uncertainty for the study. ", "page_idx": 3}, {"type": "image", "img_path": "DoewNm2uT3/tmp/95b230998b7c31c3db93b881af2a5bf6dfa624fb864d158fdcedd3b23bfd84dd.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 1: An instance of RTSP with interval uncertainty. (a) Interval support set. (b) Worst case scenario $w c(x)$ corresponding to route $x$ . (c) Optimal TSP solution under scenario $w c(x)$ . ", "page_idx": 4}, {"type": "text", "text": "4.1 Solution Framework ", "text_level": 1, "page_idx": 4}, {"type": "image", "img_path": "DoewNm2uT3/tmp/d9aa0e190ecda280a75e08cd412624c2429cbfbffedf19017b3d4232294155a9.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 2: The complete solution framework of our method. Variable $a$ represents the action of selecting the next node according to the probability distribution. The reward $r$ is a sparse variable that takes its max-regret value only in the complete sequence, while being set to zero for all other time steps. ", "page_idx": 4}, {"type": "text", "text": "The overall solution framework, as illustrated in Figure 2, is based on the encoder-decoder model. In this model, the encoder component receives the input data and exploits a series of neural networks to extract embeddings that represent the problem features. These embeddings are then utilized by the decoder component to compute probabilities for node selection and construct a complete solution in an autoregressive manner. Specifically, the model trains a stochastic policy $p(\\pi|s)$ to generate a solution $x$ , or a permutation $\\pi$ equivalently, for an instance $s$ . It is parameterized by $\\theta$ as: ", "page_idx": 4}, {"type": "equation", "text": "$$\np_{\\theta}(\\pi|s)=\\prod_{t=1}^{n}p_{\\theta}(\\pi_{t}|s,\\pi_{1:t-1}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that the input data consists of a dual-weighted graph, where each edge is associated with an upper value and a lower value. Taking inspiration from MatNet [30], we treat the input as two matrices: one composed of the upper range values (\u201cUp_Matrix\u201d), and the other composed of the lower range values (\u201cLow_Matrix\u201d). These matrices are then fed into the encoder. ", "page_idx": 4}, {"type": "text", "text": "Furthermore, the model requires a reward signal for adjusting the network weight parameters. Once all the decoding steps are complete, we obtain a nominal solution $\\pi$ for the instance $s$ . The loss function is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\nL(\\theta|s)=\\mathbb{E}_{p_{\\theta}(\\pi|s)}[R(\\pi)],\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $R(\\pi)$ is the expectation of the robustness of $\\pi$ , or its (negative) reward, given by ", "page_idx": 4}, {"type": "equation", "text": "$$\nR(\\pi)=t^{+}(\\pi)-T S P^{*}(w c(\\pi)).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Equation (7) is originated from Equation (4), where $t^{+}(\\pi)$ is the total travel time of solution $\\pi$ using the upper range value. $T S P^{*}(w c(\\pi))$ calculates the optimal TSP route under the worst-case scenario with respect to solution $\\pi$ . Because a large number of samples has to be generated to train the model, we need to find a solver to tackle TSP efficiently. In fact, it is not necessary to exactly solve TSP in the training stage due to the expectation of $R(\\pi)$ and high complexity of TSP. We turn to approximate optimal solutions by using a pre-trained TSP model detailed in Section 4.3. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "4.2 Model Architecture ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.2.1 Encoder ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The encoder takes two matrices (\u201cUp_Matrix\" and \u201cLow_Matrix\") as the input. Each matrix can be regarded as a bipartite graph $\\boldsymbol{G}=(\\Phi,\\Psi,D)$ , where $\\Phi=(\\phi_{1},\\ldots,\\phi_{n})$ is the set of nodes with outgoing edges, $\\Psi=(\\psi_{1},\\ldots,\\psi_{n})$ is the set of nodes with incoming edges, and $D=[d_{i j}]_{n\\times n}$ gives the edge values by the corresponding matrix. ", "page_idx": 5}, {"type": "text", "text": "We extract the feature embeddings of $\\Phi$ and $\\Psi$ , denoted as $h_{\\Phi}$ and $h_{\\Psi}$ , using MatNet [30] (detailed architecture can be found in Appendix 7.7). To achieve this, we initialize the initial embedding $h_{\\phi_{i}}^{0}$ for each $\\phi_{i}\\in\\Phi$ as a zero vector, enabling the model to support variable-sized inputs. For each ${\\psi}_{j}\\in\\Psi$ , the initial embedding $h_{\\psi_{j}}^{0}$ is initialized as a one-hot vector to obtain discriminative first attention layer representations. Next, these initial embeddings are combined with the corresponding matrix $D$ and passed through $L$ attention layers to iteratively update the embeddings. It should be noted that the encoding process for sets $\\Phi$ and $\\Psi$ is performed mutually. Specifically, for the encoding process of set $\\Phi$ , $h_{\\Phi}$ serves as the query vector, $h_{\\psi}$ acts as the key-value vector, and the matrix $D$ is utilized for weighted fusion. Therefore, we obtain the updated embedding $h_{\\Phi}^{\\prime}$ as the output of the MatNet: $h_{\\Phi}^{\\prime}=\\bar{\\mathrm{MatNet}}(h_{\\Phi},h_{\\Psi},D)$ . Conversely, for the encoding process of set $\\Psi$ , we swap the roles of $h_{\\Phi}$ and $h_{\\Psi}$ and employ the transpose of matrix $D$ . Consequently, we have $h_{\\Psi}^{\\prime}=\\mathrm{MatNet}(h_{\\Psi},h_{\\Phi},D^{T})$ . ", "page_idx": 5}, {"type": "text", "text": "Since there are two matrices involved, we use $h_{\\Phi}^{+}$ and $h_{\\Psi}^{+}$ to denote the output embeddings for \u201cUp_Matrix\u201d. Similarly, we use $h_{\\Phi}^{-}$ and $h_{\\Psi}^{-}$ to denote the output embeddings for \u201cLow_Matrix\u201d. Finally, the graph embeddings, denoted as a pair $(\\overline{{h_{\\Phi}}},\\overline{{h_{\\Psi}}})$ , are obtained by fusing the features of \u201cUp_Matrix\u201d and \u201cLow_Matrix\u201d. We simply perform the summation on their embeddings: $\\overline{{h_{\\Phi}}}=h_{\\Phi}^{+}+h_{\\Phi}^{-}$ , $\\overline{{h_{\\Psi}}}=h_{\\Psi}^{+}+h_{\\Psi}^{-}$ . ", "page_idx": 5}, {"type": "text", "text": "4.2.2 Decoder ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The decoder module generates a complete solution in an autoregressive manner based on the graph embeddings $(\\overline{{h_{\\Phi}}},\\overline{{h_{\\Psi}}})$ obtained from the encoder. ", "page_idx": 5}, {"type": "text", "text": "The key component of the decoder is the masked multi-head cross attention mechanism. At each decoding step $t$ , it utilizes $\\overline{{h_{\\psi_{j}}}}\\left(j=1,\\ldots,n\\right)$ as the key/value vector ( $k/v$ for short), and a context vector $h_{c}$ as the query vector ( $\\mathit{\\Delta}_{\\mathit{g}}$ for short), which is formed by concatenating $\\overline{{h_{\\Phi}}}$ with the first and last nodes of the current solution, i.e., $h_{c}=[\\overline{{h_{\\phi_{1}}}},\\overline{{h_{\\phi_{\\pi_{t}}}}}]$ . The multi-head cross attention operation is then performed and mask nodes that have already been visited. ", "page_idx": 5}, {"type": "text", "text": "After calculating the compatibilities $u_{(c)j}$ ( $c$ symbolizes the current context node), the decoder proceeds to compute the probabilities for the remaining unmasked nodes. This probability computation is accomplished using a single-head attention mechanism. To scale the compatibility results within the range of $[-\\zeta,\\zeta]$ $\\zeta=10)$ ), the tanh function is applied. Subsequently, a softmax function is utilized to calculate the final output probability vector. ", "page_idx": 5}, {"type": "equation", "text": "$$\nu_{(c)j}=\\left\\{\\zeta*\\operatorname{tanh}(\\frac{q_{(c)}k_{j}^{T}}{\\sqrt{d_{k}}}),\\right.\\,\\,\\,\\mathrm{if~}j\\mathrm{~not~masked};\n$$", "text_format": "latex", "page_idx": 5}, {"type": "equation", "text": "$$\np_{j}=p_{\\theta}(\\pi_{t}=j|s,\\pi_{1:t-1})=\\frac{e^{u_{(c)j}}}{\\sum_{j^{\\prime}=1}^{n}e^{u_{(c)j^{\\prime}}}}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "At last, the decoder selects a node according to the probability vector and proceeds to the next decoding step. ", "page_idx": 5}, {"type": "text", "text": "4.3 Training ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "To train the model for RTSP, we adopt a combination of the classic REINFORCE [34] policy gradient algorithm and the POMO training approach [27], which primarily exploits the solution symmetry. We utilize Monte Carlo methods to sample $n$ solution trajectories for each instance, with each trajectory using a different starting node. The reward is computed for each of these $n$ trajectories, and the average reward of the $n$ trajectories is used as a shared baseline within a mini-batch. To maximize the expected return $J$ , we employ gradient ascent to approximate $J$ , and the Adam optimizer [35] is used to optimize the policy network parameters. ", "page_idx": 6}, {"type": "text", "text": "In the following equations, $\\pi_{i}$ represents the generated solution in the $i$ -th sampled trajectory, and $R(\\pi)$ denotes the reward of the solution as defined in Equation (7). ", "page_idx": 6}, {"type": "text", "text": "To efficiently calculate the reward $R(\\pi)$ , a pretrained \u201cMatNet\u201d is used as a TSP solver. Since a TSP instance can also be represented by a bipartite graph, it is inputted into the MatNet ", "page_idx": 6}, {"type": "text", "text": "to construct a TSP route. Multiple greedy trajectories with different starting nodes and instance augmentation are utilized to generate TSP solutions. ", "page_idx": 6}, {"type": "text", "text": "Input: Sample set $S$ , number of epochs $E$ , number of   \nsteps per epoch $T$ , batch size $B$ , total number of starting   \nnodes per instance $n$   \nInitialization: policy network parameter $\\theta$   \n1: for epoch $\\gets1$ to $E$ do   \n2: for $s t e p\\gets1$ to $T$ do   \n3: 4: $\\begin{array}{r l}&{s_{i}+\\mathrm{{Samplenstance}}(S)\\quad\\forall i\\in\\{1,\\ldots,B\\},}\\\\ &{\\left\\{s_{i}^{U_{i}},s_{i}^{U_{i}},\\dotsc,s_{i}^{U_{i}}\\right\\}\\quad\\cdot\\mathrm{{Samplendses}}(s_{i})}\\\\ &{\\forall i\\in\\{1,\\ldots,B\\},}\\\\ &{\\pi_{i}^{\\prime}\\in\\mathcal{S}\\mathrm{ampleRolt}(s_{i}^{U_{i}},s_{i},p_{\\theta})}\\\\ &{\\forall i\\in\\{1,\\ldots,B\\},\\forall j\\in\\{1,\\ldots,n\\}.}\\\\ &{w c_{i}^{j}\\in\\mathrm{WouscrostCor}(\\overline{{s}})}\\\\ &{\\forall i\\in\\{1,\\ldots,B\\},\\forall j\\in\\{1,\\ldots,n\\}.}\\\\ &{R(q)\\in\\{1,\\ldots,m c_{i}^{j},q_{i}^{j}-\\mathrm{PertanedrSP}(w c_{i}^{j})}\\\\ &{\\forall i\\in\\{1,\\ldots,B\\},\\forall j\\in\\{1,\\ldots,n\\}.}\\\\ &{b_{i}\\in\\sum_{j=1}^{N}R(q_{i}^{j})\\quad\\forall i\\in\\{1,\\ldots,B\\}.}\\\\ &{\\forall i\\in\\{1,\\ldots,B\\},}\\\\ &{\\overline{{b}}_{i}\\in\\mathcal{S}\\mathrm{mplends}\\quad\\forall i\\in\\{1,\\ldots,B\\}.}\\\\ &{\\frac{1}{B}\\sum_{j=1}^{B}\\sum_{j=1}^{n}(R(\\pi_{i}^{j})-b_{i})\\nabla_{\\theta}\\log p_{\\theta}(\\pi_{i}^{j}).}\\end{array}$   \n5:   \n6:   \n7:   \n8:   \n9:   \n10:   \n11: end for   \n12: end for ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}J(\\theta)\\approx\\frac{1}{n}\\sum_{i=1}^{n}(R(\\pi_{i})-b(s))\\nabla_{\\theta}\\log_{p_{\\theta}}(\\pi_{i}|s),\\qquad b(s)=\\frac{1}{n}\\sum_{i=1}^{n}R(\\pi_{i}).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Finally, Algorithm 1 outlines the training process for RTSP. In line 7, we feed the worst-case scenario corresponding to the current solution into the pre-trained TSP model, which provides us with a near-optimal TSP solution as feedback. ", "page_idx": 6}, {"type": "text", "text": "4.4 Inference ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Once the RTSP model is trained, it can be used to make fast inference on a batch of instances.   \nAlgorithm 2 presents the overall inference process. ", "page_idx": 6}, {"type": "text", "text": "We use the POMO inference approach to sample multi-start solutions. Instance augmentation [30] during inference can also be adjusted to improve the solution quality. Concretely, we employ multiple independent randomizations on the initial one-hot node embeddings $h_{\\psi_{j}}^{0}$ for each instance to explore various paths towards the optimal solution. Since two matrices are inputted to our model, they share the same randomized one-hot vector. Ultimately, the best solution is selected from the multiple generated solutions. ", "page_idx": 6}, {"type": "text", "text": "Recall that our proposed method is still an approximate approach. To ensure a fair and accurate comparison of the final results during the experimental sessions, we adopt a consistent approach by utilizing an exact TSP solver, namely Gurobi2 , to determine the target value achieved through different methods (line 8). ", "page_idx": 6}, {"type": "text", "text": "model Input: instance $s$ , augmentation factor $K$ , policy $p_{\\theta}$ , total number of starting nodes per instance $n$ Output: target solution $\\pi^{*}$ , target objective value $o b j^{*}$   \n1: $\\{s_{1},...,s_{K}\\}\\leftarrow$ Augment_Onehot_Embeddings(s).   \n2: $\\{s t_{k}^{1},...,s t_{k}^{n}\\}\\gets$ StartNodes $(s_{k})$ $\\forall k\\in\\{1,...,K\\}$ .   \n3: $\\pi_{k}^{j}\\leftarrow\\mathrm{GreedyRollout}(s t_{k}^{j},s,p_{\\theta})$ $\\forall j\\in\\{1,...,n\\},\\forall k\\in\\{1,...,K\\}.$ .   \n4: $w c_{k}^{j}\\leftarrow\\mathrm{WorstCaseTSP}(\\pi_{k}^{j})$ $\\forall\\ddot{j}\\in\\{1,...,n\\},\\forall k\\in\\{\\ddot{1},...,K\\}$ .   \n5: $\\begin{array}{r}{R(\\pi_{k}^{j})\\leftarrow\\sum w c_{k}^{j}\\pi_{k}^{j}}\\end{array}$ - Pretrained $\\mathrm{USP}(w c_{k}^{j}$ ) $\\forall j\\in\\{1,...,n\\}$ , $\\ddot{\\forall k}\\in\\{1,...,K\\}$ .   \n6: kmax, $j_{m a x}\\gets a r g m a x_{k,j}R(\\pi_{k}^{j})$ .   \n7: \u03c0\u2217\u2190\u03c0kmax.   \n8: $o b j^{*}\\leftarrow\\sum^{\\prime\\prime\\leftarrow}w c(\\pi^{*})\\pi^{*}-G u r o b i(w c(\\pi^{*})).$ .   \n9: return $\\pi^{*},o b j^{*}$ . ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Our proposed approach was programmed with Pytorch. All the experiments were conducted on a workstation with Intel(R) Core(TM) i5-4590 CPU $@$ 3.30GHz, 8.0 GB RAM and TITAN Xp GPU. ", "page_idx": 7}, {"type": "text", "text": "5.1 Experimental Setup of RTSP ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Experimental Data. The experimental data in this study was generated following the work of Montemanni et al. [8]. The data generation process follows a specific rule: a \u201cR- $N{-}M^{\\circ}$ type problem is considered, where $N$ represents the number of nodes, and $M$ is a range threshold (for the upper bounds). The control parameter is set to $\\Gamma\\geq\\binom{n}{2}$ . In this case, the upper bound travel time for each pair of nodes, denoted as $t_{i j}^{+}$ , is randomly selected from set $\\{0,1,2,...,M\\}$ . The lower bound travel time, denoted as $t_{i j}^{-}$ , is randomly chosen from set $\\{0,1,...,t_{i j}^{+}\\}$ . To maintain consistency, the distance values of the upper and lower bounds are then normalized using a scale factor of $M$ . In addition, we ensure the upper and lower bound values to satisfy the triangle inequality, respectively. ", "page_idx": 7}, {"type": "text", "text": "Hyper-parameters. During the training process, we follow specific configurations based on the scale of the problem. For small-scale instances with 20 and 30 nodes, training is conducted on a single GPU. The batch size is set to 200 and 100, respectively. We use the Adam optimizer with a learning rate $\\alpha=4\\times10^{-4}$ . Each epoch consists of training on 1000 instances. For larger-scale instances with 40 and 50 nodes, training is performed on two and three GPUs, respectively. The batch size is adjusted to 64 and 32, respectively, to accommodate the GPU memory limitations. The learning rate for the Adam optimizer is set to $\\alpha=2\\times10^{-4}$ . Each GPU handles 400 training instances per epoch. For the built-in TSP models, they are trained for 2000 epochs to ensure their effectiveness and convergence. ", "page_idx": 7}, {"type": "text", "text": "Baselines. We have collected typical algorithms for solving RTSP as our baselines. These algorithms can be further categorized into exact and heuristic approaches. ", "page_idx": 7}, {"type": "text", "text": "\u2022 Exact approaches: Branch-and-Cut (BC) and Benders Decomposition (BD) are exact algorithms proposed by Montemanni et al. [8] for solving RTSP. We have implemented these algorithms using the Python programming language and the Gurobi optimizer. For small-scale problems, such as those with 20 nodes, these two algorithms exhibit fast solution speeds. However, as the problem size increases, for example, with 50 nodes, the computation time required to obtain a solution is significantly increased.   \n\u2022 Heuristic approaches: There are three heuristic baselines introduced for comparisons: heuristic algorithms based on simulated annealing (SA-based) [10], iterated dual substitution method (iDS) [36], and edge generation algorithm (EGA) [11]. To ensure fairness, we utilize the source codes provided by the authors, with the exception of SA-based, which we reimplemented ourselves. Furthermore, we maintain most of the original settings of these algorithms. ", "page_idx": 7}, {"type": "text", "text": "The time limit of all above algorithms are set to 3600 seconds for every instance, except that the SA-based method has a time limit of $15n$ due to the limitation of repeated calls of the LKH algorithm. Nevertheless, some algorithms may stop earlier when reaching their termination criteria. ", "page_idx": 7}, {"type": "text", "text": "For the experimental setting of RCVRP, please refer to Appendix 7.5. ", "page_idx": 7}, {"type": "text", "text": "5.2 Results and Discussions ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In the following reported tables, \u201cObj\u201d represents the average objective value accurately computed using Gurobi to solve the worst-case routing scenario. \u201cGap\u201d indicates the relative difference between the objective value obtained by each algorithm and the best-known optimal value, expressed as a percentage: ObjO\u2212bjObjbest\u00d7 100%. \u201cTime\u201d represents the average solving time per instance. ", "page_idx": 7}, {"type": "text", "text": "Comparison Results of RTSP. Table 1 presents the main results of our trained model and other methods on randomly generated instances. The methods are categorized into three groups: exact methods, heuristic methods, and our proposed methods. The results of our methods are reported for three versions: no augmentation, augmentation with 8 instances, and augmentation with 128 instances (except 64 instances for 50 nodes due to memory limitations). ", "page_idx": 7}, {"type": "table", "img_path": "DoewNm2uT3/tmp/3799b33f0e2387ad96b82fb8f0560bbac52efe96a9a0ca6f65cc1a7be3a1df52.jpg", "table_caption": ["Table 1: Computational results on generated RTSP instances. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "From Table 1, it is evident that our approach consistently achieves high-quality solutions in significantly small time. Without instance augmentation, the gaps obtained by our method are consistently below $2.6\\%$ . When utilizing instance augmentation, our method can obtain approximately accurate or even exact solutions for small scales (such as 20 nodes). For larger scales, our method also produces solutions with gaps less than $0.7\\%$ . In terms of runtime, under both scenarios with and without instance augmentation, our approach has a large and significant advantage over exact methods and heuristics, taking only a fraction of a second. The results verify the effectiveness of our approach. ", "page_idx": 8}, {"type": "text", "text": "Generalization Results of RTSP. ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We conduct experiments to evaluate the generalization ability of our model, specifically its performance on test instances that are outside the training distribution. To illustrate this, we consider an example where $M=100$ and the augmentation involves 8 instances. We evaluate our models, trained with varying numbers of nodes, on test data with different node sizes. The results are depicted in Figure 3. As expected, the model trained on the corresponding node size achieves the best performance on the test data. Moreover, the model trained on 50 nodes demon", "page_idx": 8}, {"type": "image", "img_path": "DoewNm2uT3/tmp/0a696b383e2917f841c4571579aa38c90755e38226ca6bf9ba5f0af09198d9e4.jpg", "img_caption": ["Figure 3: Performance on varying-scale problems. Gap is relative to the test results of the models trained on the consistent scales. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "strates competitive results when tested on the other three scales $(N\\,=\\,20,30,40)$ , suggesting a strong generalization capability. Conversely, the models trained on smaller scales exhibit weaker generalization capability. ", "page_idx": 8}, {"type": "table", "img_path": "DoewNm2uT3/tmp/194540c2d72382667dfe827b3df51e2d5d24e2b273ae8465d85edaebc73f670e.jpg", "table_caption": ["Table 2: Results of different encoding methods for the uncertainty sets\u2019 upper and lower bounds on R-40-100. "], "table_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "DoewNm2uT3/tmp/08e6c7cce5999bb23cac956581c04d8ce68f6e7d585855049cccd6b1999d1b2a.jpg", "table_caption": ["Table 3: Computational results for RCVRP. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Ablation Studies of RTSP. We investigate the impact of different designs for feature encoding of the uncertainty support set. We explore three encoding methods, namely \u201cours\", \u201cblended\"(a blended matrix is computed by the weighted sum of the upper and lower bound matrices, which is then encoded by MatNet) and \u201cfusion\"(two distance matrices and attention scores are fused through an MLP in the multi-head mixed score attention layer of the encoder), with their architectures depicted in Figure 5 in Appendix 7.4. ", "page_idx": 9}, {"type": "text", "text": "We compare these encoding methods on R-40-100 with 20 random instances. As shown in Table 2, our method outperforms both \u201cblended\u201d and \u201cfusion\u201d methods in all cases, including scenarios without instance augmentation, as well as those with $\\times8$ and $\\times128$ instance augmentation. ", "page_idx": 9}, {"type": "text", "text": "Comparison Results of RCVRP. Table 3 shows the comparison results between our method and the exact algorithm. The results are all obtained using the Gurobi solver in a uniform manner. To our knowledge, this specific type of RCVRP has never been discussed before. The results show that our algorithm still achieves high solution quality and has a clear advantage in the solution time of RCVRP. On a 20-node scale, our gap is around $0.5\\%$ . On a 50-node scale, our gap is below $4.5\\%$ . In terms of time consumption, we only need a few tenths of a second to dozens of seconds. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusions ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This paper focuses on addressing the robust routing problem with uncertain travel times, relevant to real-world scenarios. We introduce a neural combinatorial optimization approach, employing an end-to-end model with attention mechanism for automatic policy learning. Leveraging a pre-trained model, experimental results demonstrate that our method can generate near-optimal solutions much faster than exact and heuristic approaches. However, due to hardware memory limitations and constraints of the POMO algorithm used in training, our method is currently limited in scale and to problems satisfying the max-regret theorem. Moving forward, we aim to expand our approach to handle larger-scale problems and tackle a broader range of robust optimization problems. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported by the National Natural Science Foundation of China (62072483) and Guangdong Natural Science Funds (2024A1515010871). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Panos Kouvelis and Gang Yu. Robust discrete optimization and its applications, volume 14. Springer Science & Business Media, 2013.   \n[2] Richard E Bellman and Lotf iAsker Zadeh. Decision-making in a fuzzy environment. Management science, 17(4):B\u2013141, 1970.   \n[3] Aharon Ben-Tal, Laurent El Ghaoui, and Arkadi Nemirovski. Robust optimization, volume 28. Princeton university press, 2009.   \n[4] Stephen P Boyd and Lieven Vandenberghe. Convex optimization. Cambridge university press, 2004.   \n[5] Dimitris Bertsimas and Aur\u00e9lie Thiele. Robust and data-driven optimization: modern decision making under uncertainty. In Models, methods, and applications for innovative decision making, pages 95\u2013122. INFORMS, 2006.   \n[6] Dimitris Bertsimas and Melvyn Sim. The price of robustness. Operations research, 52(1): 35\u201353, 2004.   \n[7] Aharon Ben-Tal, Alexander Goryashko, Elana Guslitzer, and Arkadi Nemirovski. Adjustable robust solutions of uncertain linear programs. Mathematical programming, 99(2):351\u2013376, 2004.   \n[8] Roberto Montemanni, J\u00e1nos Barta, Monaldo Mastrolilli, and Luca Maria Gambardella. The robust traveling salesman problem with interval data. Transportation Science, 41(3):366\u2013381, 2007.   \n[9] Andr\u00e9 Chassein and Marc Goerigk. On the recoverable robust traveling salesman problem. Optimization Letters, 10:1479\u20131492, 2016.   \n[10] Chung-Cheng Lu, Shih-Wei Lin, and Kuo-Ching Ying. Minimizing worst-case regret of makespan on a single machine with uncertain processing and setup times. Applied Soft Computing, 23:144\u2013151, 2014.   \n[11] K Hasegawa and W Wu. A heuristic approach for the robust traveling salesman problem. In 2022 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM), pages 0561\u20130565. IEEE, 2022.   \n[12] Ilgaz Sungur, Fernando Ord\u00f3nez, and Maged Dessouky. A robust optimization approach for the capacitated vehicle routing problem with demand uncertainty. Iie Transactions, 40(5):509\u2013523, 2008.   \n[13] Elyn Solano-Charris, Christian Prins, and Andr\u00e9a Cynthia Santos. Local search based metaheuristics for the robust vehicle routing problem with discrete scenarios. Applied Soft Computing, 32:518\u2013531, 2015.   \n[14] Lars Eufinger, Jannis Kurtz, Christoph Buchheim, and Uwe Clausen. A robust approach to the capacitated vehicle routing problem with uncertain costs. INFORMS Journal on Optimization, 2(2):79\u201395, 2020.   \n[15] Aigerim Bogyrbayeva, Meraryslan Meraliyev, Taukekhan Mustakhov, and Bissenbay Dauletbayev. Machine learning to solve vehicle routing problems: A survey. IEEE Transactions on Intelligent Transportation Systems, 2024.   \n[16] Marijn Van Knippenberg, Mike Holenderski, and Vlado Menkovski. Complex vehicle routing with memory augmented neural networks. In 2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS), volume 1, pages 303\u2013308. IEEE, 2020.   \n[17] Chaitanya K Joshi, Thomas Laurent, and Xavier Bresson. An efficient graph convolutional network technique for the travelling salesman problem. arXiv preprint arXiv:1906.01227, 2019.   \n[18] Chaitanya K Joshi, Quentin Cappart, Louis-Martin Rousseau, and Thomas Laurent. Learning the travelling salesperson problem requires rethinking generalization. Constraints, 27(1):70\u201398, 2022.   \n[19] Elias Khalil, Hanjun Dai, Yuyu Zhang, Bistra Dilkina, and Le Song. Learning combinatorial optimization algorithms over graphs. Advances in neural information processing systems, 30, 2017.   \n[20] Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A Rusu, Joel Veness, Marc G Bellemare, Alex Graves, Martin Riedmiller, Andreas K Fidjeland, Georg Ostrovski, et al. Human-level control through deep reinforcement learning. nature, 518(7540):529\u2013533, 2015.   \n[21] Martin Riedmiller. Neural fitted q iteration\u2013first experiences with a data efficient neural reinforcement learning method. In Machine learning: ECML 2005: 16th European conference on machine learning, Porto, Portugal, October 3-7, 2005. proceedings 16, pages 317\u2013328. Springer, 2005.   \n[22] Oriol Vinyals, Meire Fortunato, and Navdeep Jaitly. Pointer networks. Advances in Neural Information Processing Systems, 28, 2015.   \n[23] Irwan Bello, Hieu Pham, Quoc V Le, Mohammad Norouzi, and Samy Bengio. Neural combinatorial optimization with reinforcement learning. arXiv preprint arXiv:1611.09940, 2016.   \n[24] Mohammadreza Nazari, Afshin Oroojlooy, Lawrence Snyder, and Martin Tak\u00e1c. Reinforcement learning for solving the vehicle routing problem. Advances in neural information processing systems, 31, 2018.   \n[25] Wouter Kool, Herke Van Hoof, and Max Welling. Attention, learn to solve routing problems! arXiv preprint arXiv:1803.08475, 2018.   \n[26] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.   \n[27] Yeong-Dae Kwon, Jinho Choo, Byoungjip Kim, Iljoo Yoon, Youngjune Gwon, and Seungjai Min. Pomo: Policy optimization with multiple optima for reinforcement learning. Advances in Neural Information Processing Systems, 33:21188\u201321198, 2020.   \n[28] Zizhen Zhang, Hong Liu, MengChu Zhou, and Jiahai Wang. Solving dynamic traveling salesman problems with deep reinforcement learning. IEEE Transactions on Neural Networks and Learning Systems, 34(4):2119\u20132132, 2021.   \n[29] Yongxin Zhang, Jiahai Wang, and Zizhen Zhang. Edge-based formulation with graph attention network for practical vehicle routing problem with time windows. In 2022 International Joint Conference on Neural Networks (IJCNN), pages 01\u201308. IEEE, 2022.   \n[30] Yeong-Dae Kwon, Jinho Choo, Iljoo Yoon, Minah Park, Duwon Park, and Youngjune Gwon. Matrix encoding networks for neural combinatorial optimization. Advances in Neural Information Processing Systems, 34:5138\u20135149, 2021.   \n[31] Jianan Zhou, Yaoxin Wu, Wen Song, Zhiguang Cao, and Jie Zhang. Towards omni-generalizable neural methods for vehicle routing problems. arXiv preprint arXiv:2305.19587, 2023.   \n[32] Tobias Jacobs, Francesco Alesiani, and G\u00fclcin Ermis. Reinforcement learning for route optimization with robustness guarantees. In IJCAI, pages 2592\u20132598, 2021.   \n[33] Justin Dumouchelle, Esther Julien, Jannis Kurtz, and Elias B Khalil. Neur2ro: Neural two-stage robust optimization. arXiv preprint arXiv:2310.04345, 2023.   \n[34] Ronald J Williams. Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine learning, 8:229\u2013256, 1992.   \n[35] Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.   \n[36] Wei Wu, Manuel Iori, Silvano Martello, and Mutsunori Yagiura. An iterated dual substitution approach for binary integer programming problems under the min-max regret criterion. INFORMS Journal on Computing, 34(5):2523\u20132539, 2022.   \n[37] Clair E Miller, Albert W Tucker, and Richard A Zemlin. Integer programming formulation of traveling salesman problems. Journal of the ACM (JACM), 7(4):326\u2013329, 1960.   \n[38] Keld Helsgaun. An effective implementation of the lin\u2013kernighan traveling salesman heuristic. European journal of operational research, 126(1):106\u2013130, 2000.   \n[39] Nikolaus Hansen. The cma evolution strategy: A tutorial. arXiv preprint arXiv:1604.00772, 2016. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "7 Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "7.1 Proof of Theorem 1 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof. To provide a coherent description of the proof process, we first introduce a shorthand notation for certain equations. ", "page_idx": 13}, {"type": "text", "text": "1. The optimal tour under scenario $u$ is denoted as $y^{*}(u)$ .   \n2. The worst case scenario obtained by solution $x$ according to the theorem is denoted as $w c(x)$ .   \n3. The tour length of solution $x$ under scenario $u$ is denoted as $C(u,x)$ . By the definition of regret, the value of regret for solution $x$ under scenario $u$ has the equation: regret $\\boldsymbol{\\cdot}(u,x)=$ $\\boldsymbol{C}(\\boldsymbol{u},\\boldsymbol{x})-\\boldsymbol{C}(\\boldsymbol{u},\\boldsymbol{y}^{*}(\\boldsymbol{u}))$ . ", "page_idx": 13}, {"type": "text", "text": "We then outline a concise proof procedure. Assume that we have a solution $x$ , our goal is to prove that the regret value under scenario $w c(x)$ is greater than or equal to the regret value under any other scenario, i.e., $r e g r e t(u,x)\\leq r e g r e t(\\overleftarrow{w c}(x),x).$ . Here, ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{r e g r e t(u,x)=C(u,x)-C(u,y^{*}(u))}\\\\ &{\\qquad\\qquad=\\displaystyle\\sum_{(i,j)\\in x}t_{i j}^{u}-\\sum_{(i,j)\\in y^{*}(u)}t_{i j}^{u}}\\\\ &{\\qquad\\qquad=\\displaystyle\\sum_{(i,j)\\in x\\backslash y^{*}(u)}t_{i j}^{u}-\\sum_{(i,j)\\in y^{*}(u)\\backslash x}t_{i j}^{u}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Based on the definition of $w c(x)$ , it is evident that when $(i,j)\\in x\\setminus y^{*}(u),t_{i j}^{w c(x)}\\geq t_{i j}^{u}$ . Similarly, $(i,j)\\in y^{*}(u)\\setminus x,t_{i j}^{w c(x)}\\leq t_{i j}^{u}$ . We have: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{r e g r e t(u,x)=C(u,x)-C(u,y^{*}(u))}}\\\\ &{\\leq\\displaystyle\\sum_{(i,j)\\in\\mathcal{N}}\\frac{t_{i^{\\alpha}(\\alpha)}^{\\alpha(\\alpha)}}{(i,j)\\in\\mathcal{V}^{*}(u)}-\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i^{\\alpha}(\\alpha)}^{\\alpha(\\alpha)}}\\\\ &{=\\displaystyle\\sum_{(i,j)\\in\\mathcal{E}}t_{i^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}}-\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}}-\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i_{j}^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}}}\\\\ &{=\\displaystyle\\sum_{(i,j)\\in\\mathcal{E}}t_{i^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}}-\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i_{j}^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}}+\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i_{j}^{\\alpha}(\\alpha)}^{\\mu_{\\alpha^{(\\alpha)}}})}\\\\ &{=\\displaystyle\\sum_{(i,j)\\in\\mathcal{E}}t_{i^{\\alpha^{(\\alpha)}}}^{\\mu_{\\alpha^{(\\alpha)}}}-\\sum_{(i,j)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}t_{i_{j}^{\\alpha^{(\\alpha)}}}^{\\mu_{\\alpha^{(\\alpha)}}}}\\\\ &{=\\displaystyle\\sum_{(i,j)\\in\\mathcal{E}}(\\sum_{u)\\in\\mathcal{V}^{*}(u)\\setminus\\mathcal{D}}(\\sum_{d=2}^{\\infty}(\\sum_{d=2}^{\\infty}(\\sum_{d=2}^{\\infty}(u))}\\\\ &{=C(w c(x),x)-C(w c(x),y^{*}(u))}\\\\ &{\\leq C(w c(x),x)-C(w c(x),y^{*}(w c(x)))}\\\\ &{=r e g r e t(w\\{c(x),x\\}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Therefore, the proof of Theorem 1 is concluded. ", "page_idx": 13}, {"type": "text", "text": "7.2 RTSP Example with budget uncertainty ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In Figure 4, we provide a specific example to illustrate the solution process of RTSP with budget uncertainty while $\\Gamma=\\left\\lfloor{\\frac{\\binom{n}{2}}{4}}\\right\\rfloor$ . Recall that the budget uncertainty set is defined as $\\mathbb{U}_{b u d g e t}=\\{t|t_{i j}=$ $\\begin{array}{r}{t_{i j}^{-}+\\hat{t}_{i j}\\eta_{i j},0\\leq\\eta_{i j}\\leq1,\\forall(i,j)\\in E;\\sum_{(i,j)\\in E}\\eta_{i j}\\leq\\Gamma\\}}\\end{array}$ . where $\\hat{t}_{i j}=t_{i j}^{+}-t_{i j}^{-}$ . Figure 4 depicts a graph with 4 nodes and 6 edges. Suppose the values of $t_{i j}^{-}$ of each edge are as shown in Figure 4a. For simplicity, let\u2019s assume that all $\\hat{t}_{i j}$ values are set to the same value 2, though in a real ", "page_idx": 13}, {"type": "image", "img_path": "DoewNm2uT3/tmp/ff8cf35b6a1a5b5b3b899501fc48e660c8ce6b289feb7ba66d9dc9a89a92a3c7.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Figure 4: An instance of RTSP with budget uncertainty and $\\Gamma\\,=\\,\\left\\lfloor{\\frac{\\binom{n}{2}}{4}}\\right\\rfloor$ . (a) $t_{i j}^{-}$ . (b) Worst case scenario $w c(x)$ corresponding to route $x$ . (c) Optimal TSP solution under scenario $w c(x)$ . ", "page_idx": 14}, {"type": "text", "text": "implementation, these values would differ. Consider a feasible solution $^{\\cdot}1\\rightarrow2\\rightarrow3\\rightarrow4\\rightarrow1^{\\cdot}$ highlighted by the green edges in Figure 4b, under the given $\\Gamma$ ,the worst scenario corresponding to this solution is also shown in Figure 4b, with a nominal total time is $1+2+3+6=12.$ . The optimal solution in this scenario, highlighted in red in Figure 4c, is either the route $1\\rightarrow2\\rightarrow4\\rightarrow3\\rightarrow1$ or $1\\rightarrow3\\rightarrow4\\rightarrow2\\rightarrow1$ , both of which have a total cost of 10. The max-regret value for the original solution is calculated as $12-10=2$ . By evaluating the max-regret for each feasible solution, the final optimal solution is identified as the one with the smallest max-regret value. ", "page_idx": 14}, {"type": "text", "text": "7.3 Formulations of Robust Routing Problems ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "RTSP Formulation Based on the TSP formulation and Corollary 1, we present the following mathematical model for RTSP with the min-max-regret criterion. This modeling serves as the foundation for both exact algorithms and heuristic algorithms in this field. ", "page_idx": 14}, {"type": "text", "text": "The mathematical scenario for RTSP is defined as follows. Given a complete symmetric graph $G=(V,E)$ , where $V=\\{1,2,...,n\\}$ is the set of nodes. The travel time (cost) of an edge $(i,j)$ is defined by an interval uncertainty set $[t_{i j}^{-},t_{i j}^{+}]$ , where $t_{i j}^{-}$ and $t_{i j}^{+}$ denote the lower and upper bounds of possible values, respectively. ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l l}{\\displaystyle\\operatorname*{min}_{\\boldsymbol{(i,j)}\\in E}t_{i j}^{+}x_{i j}-r}\\\\ {\\mathrm{s.t.}}&{r\\leq\\displaystyle\\sum_{\\boldsymbol{(i,j)}\\in E}y_{i j}t_{i j}^{-}+\\sum_{\\boldsymbol{(i,j)}\\in E}y_{i j}\\big(t_{i j}^{+}-t_{i j}^{-}\\big)x_{i j},\\quad\\forall\\boldsymbol{y}\\in\\mathbb{S}}\\\\ &{x\\in\\mathbb{S}}\\\\ &{r\\in\\mathcal{R}}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "In the above model, $x_{i j}$ are the decision variables for the RTSP solution, while $y_{i j}$ serves as temporary auxiliary decision variables representing the decision variable for TSP in the worst-case scenario corresponding to each $x$ . To establish the nonlinear interaction between $x_{i j}$ and $y_{i j}$ , a free variable $r$ is introduced. ", "page_idx": 14}, {"type": "text", "text": "The objective function in Equation (13) aims to minimize the maximum regret value, while Constraint (14) ensures the maximization of regret. We define the set of all feasible TSP solutions as $\\mathbb{S}$ , which is ", "page_idx": 14}, {"type": "text", "text": "bounded by the following constraints. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\sum_{i\\in V,i\\not=j}x_{i j}=1,}}&{\\forall j\\in V}\\\\ &{}&{\\sum_{j\\in V,j\\not=i}x_{i j}=1,}\\\\ &{}&{\\sum_{i,j\\in S}x_{i j}\\leq|S|-1,\\quad\\forall S\\subseteq V,S\\not=\\emptyset}\\\\ &{}&{x_{i j}\\in\\{0,1\\},\\qquad\\forall(i,j)\\in E}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Constraint (15) guarantee the feasibility of $x_{i j}$ as a TSP solution. It is important to note that $y_{i j}$ must also be a feasible and valid TSP solution, and thus we have $y\\in\\mathbb S$ in Equation (14). ", "page_idx": 15}, {"type": "text", "text": "RCVRP Formulation CVRP is an extension of TSP that additionally considers vehicle capacity constraints. Similar to RTSP, we can use the mathematical model of the nominal CVRP and Corollary 1 to extend the mathematical model of RCVRP. ", "page_idx": 15}, {"type": "text", "text": "The RCVRP scenario is defined as follows. We have a fleet of vehicles with a capacity of $Q$ per vehicle, and $n$ customers distributed geographically. Each customer has its own demand $d_{i}$ (where $i=1,2,...,n)$ . Each customer can only be served by one vehicle, and there is no limit on the number of available vehicles. Let $V$ be the set of $n$ demand nodes and a single depot, represented as node 0. The set $E$ represents the edge connections between nodes. Similar to RTSP, we consider the robust scenario where the travel time is subject to interval uncertainty. The travel time (cost) of an edge $(i,j)$ is within the interval $[t_{i j}^{-},t_{i j}^{+}]$ , where $t_{i j}^{-}$ and $t_{i j}^{+}$ represent the lower and upper bounds of possible values, respectively. Note that in our setting, we assume that $t_{i j}=t_{j i}$ , meaning that the travel time matrix is symmetric. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l l}{\\displaystyle\\operatorname*{min}_{\\boldsymbol{(i,j)}\\in E}t_{i j}^{+}x_{i j}-r}\\\\ {\\mathrm{s.t.}}&{r\\leq\\displaystyle\\sum_{\\boldsymbol{(i,j)}\\in E}y_{i j}t_{i j}^{-}+\\sum_{\\boldsymbol{(i,j)}\\in E}y_{i j}\\big(t_{i j}^{+}-t_{i j}^{-}\\big)x_{i j},\\quad\\forall\\boldsymbol{y}\\in\\mathbb{S}}\\\\ &{x\\in\\mathbb{S}}\\\\ &{r\\in\\mathcal{R}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The model is the same as the one described in Section 7.3. It should be noted that $\\mathbb{S}$ is defined as the set of all feasible solutions for CVRP, subject to the following constraints. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{\\underset{i\\in V,i\\not=j}{\\sum}x_{i j}=1,}&{\\forall j\\in V\\setminus\\{0\\}}\\\\ &{\\underset{j\\in V,j\\not=i}{\\sum}x_{i j}=1,}&{\\forall i\\in V\\setminus\\{0\\}}\\\\ &{u_{j}-u_{i}+Q(1-x_{i j})\\geq d_{j},}&{\\forall i,j\\in V\\setminus\\{0\\},i\\not=j}\\\\ &{d_{i}\\leq u_{i}\\leq Q,}&{\\forall i\\in V\\setminus\\{0\\}}\\\\ &{x_{i j}\\in\\{0,1\\},}&{\\forall(i,j)\\in E}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The main difference between CVRP and TSP lies in the consideration of capacity constraints. In CVRP, it is crucial to ensure that the total demand of customers served on each route does not exceed the vehicle\u2019s capacity. To address this, the Miller-Tucker-Zemlin (MTZ) constraint [37] introduces continuous variables $u_{i}$ for every $i\\in V\\setminus\\{0\\}$ , which represent the flow in the vehicle after it visits customer $i$ . Constraints (27)\u2013(28) enforce both the capacity and connectivity requirements of feasible routes. ", "page_idx": 15}, {"type": "text", "text": "7.4 Additional Results of RTSP ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Generalization on the Threshold Value. In addition to considering the generalization on dimension $N$ , as depicted in Figure 3, we also test the generalization ability on dimension $M$ . The models trained with different ranges of $M$ are respectively used to test the instances across all ranges of $M$ . As shown in the Table 4, it can be seen that a model trained within a specific threshold value can achieve relatively ideal experimental results within other threshold values. This shows that under the premise of fixed $N$ , our model can achieve good generalization results for different $M$ values. ", "page_idx": 15}, {"type": "table", "img_path": "DoewNm2uT3/tmp/18f338066d2ef0f631ac5460f563744f7b4abfd2a4c869b147c187eb7034a720.jpg", "table_caption": ["Table 4: Performance on varying M-threshold problems among instances of $N\\,=\\,20$ , with $\\times8$ instance augmentation. "], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "DoewNm2uT3/tmp/ef468bd71ad4589e72de9470f13b31f6e2448fece18edcde1511038ccd23e78c.jpg", "table_caption": ["Table 5: Results of various built-in TSP solving algorithms on R-20-100. The training time refers to the average training time per epoch. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "Effects of the Encoding Approaches. In Figure 5(a) (labeled as \"ours\"), our proposed approach is depicted. It involves encoding the upper and lower bound matrices separately using MatNet and then adding the embeddings of the corresponding nodes. In Figure 5(b) (labeled as \"blended\"), a blended matrix is computed by taking the weighted sum of the upper and lower bound matrices, represented as $D=w*\\dot{D^{u p}}+(\\dot{1.0}-w\\big)*D^{l o w}$ . Here, $w$ is initialized to 0.5 and serves as a learnable parameter. The blended matrix is subsequently encoded using MatNet.Figure 5(c) (labeled as \"fusion\") illustrates the third approach, which involves fusing the two matrices and attention scores through a multi-layer perceptron (MLP) in the multi-head mixed-score attention layer within the MatNet encoder. ", "page_idx": 16}, {"type": "text", "text": "Effects of the Built-in TSP Solvers. We also explore different built-in TSP solvers under the worst-case scenario. In addition to the pre-trained TSP model used in our method, we further consider the well-known heuristic algorithms like LKH [38] and CMA-ES [39]. The optimality gap and training time are reported in Table 5. ", "page_idx": 16}, {"type": "text", "text": "Even though LKH is the state-of-the-art TSP solver that can almost find the optimal solution in small-size cases, it has no superiority with regard to solution quality for training an RTSP model and even spends more training time. On the other hand, although CMA-ES evolutionary algorithm could be accelerated through parallelization techniques in a large number of model training processes, it faced a trade-off between solving speed and solution quality. As can be seen, the pre-trained TSP model used in our method exhibits almost the smallest optimality gap and the shortest training time compared with other methods. ", "page_idx": 16}, {"type": "text", "text": "Training Details. In Figure 6, we present the training progress curves that illustrate the loss and objective values for \u201cR-50-100\u201d instances, serving as an illustrative example. The figure demonstrates that the training loss steadily converges, and the training score is minimized after 1000 epochs. These observations indicate that the model successfully learns the implicit features of RTSP during the training process. ", "page_idx": 16}, {"type": "text", "text": "7.5 Experimental Setup of RCVRP ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Data Generation We generate random instances of RCVRP for two different sizes: $n=20$ and $n=50$ . The control parameter is set to $\\Gamma\\geq N$ . The following settings are used. ", "page_idx": 16}, {"type": "text", "text": "\u2022 The vehicle capacity is fixed at $Q=1.0$ . ", "page_idx": 16}, {"type": "image", "img_path": "DoewNm2uT3/tmp/96b9a4ac40c70c9bcc27ac938b83678e4ce8c19b55f3af8a654105996ad47d5f.jpg", "img_caption": ["Figure 5: Different encoding methods for the uncertainty set. (a) ours. (b) blended. (c) fusion. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "\u2022 The demand $d_{i}$ for each node $i$ is determined by dividing a uniformly sampled value $\\hat{d}_{i}$ from the set $\\{1,2,...,9\\}$ by a value $D$ . For $n=20$ , $D$ is set to 30, while for $n=50$ , $D$ is set to 40.   \n\u2022 The uncertain variable $t_{i j}$ represents the travel time between nodes $i$ and $j$ . The upper bound   \ntravel time $t_{i j}^{+}$ is randomly selected from the set $\\{0,1,2,...,M\\}$ , while the lower bound   \ntravel time $t_{i j}^{-}$ is randomly chosen from the set $\\{0,1,...,t_{i j}^{+}\\}$ .   \n\u2022 To ensure consistency, the distance values of the upper and lower bounds are normalized using a scale factor of $M$ . ", "page_idx": 17}, {"type": "text", "text": "In the data generation process, we also consider the triangle inequality. This inequality is independently applied to both the upper bound and lower bound. For example, for each triplet $(i,j,k)$ in the upper bound, we check if $t_{i k}^{+}+t_{k j}^{+}>t_{i j}^{+}$ is violated. If the inequality is violated, we replace $t_{i j}^{+}$ with $t_{i k}^{+}+t_{k j}^{+}$ to ensure that the triangle inequality holds. ", "page_idx": 17}, {"type": "text", "text": "Hyper-parameters During the training process, we adopt specific configurations based on the problem scale. For small-scale instances with 20 nodes, training is conducted on a single GPU. The batch size is set to 200. We utilize the Adam optimizer with a learning rate of $\\alpha=4\\stackrel{\\cdot}{\\times}10^{-4}$ . Each epoch involves training on 1000 instances. ", "page_idx": 17}, {"type": "image", "img_path": "DoewNm2uT3/tmp/0348af88d9bd04603698375b3b3a7eea6cd8100020d2f0aa901d68826e9c0cca.jpg", "img_caption": ["Figure 6: The training loss and score curves for R-50-100 instances. The horizontal axis represents epochs, while the vertical axis represents the values of loss or score (i.e. the objective value). (a) Training loss. (b) Training score. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "For larger-scale instances with 50 nodes, training is performed on three GPUs. The batch size is adjusted to 25 to accommodate the GPU memory limitations. The learning rate for the Adam optimizer is set to $\\alpha=2\\times10^{-4}$ . Each GPU handles 400 training instances per epoch. The models are uniformly trained for 4000 epochs. ", "page_idx": 18}, {"type": "text", "text": "As for the built-in CVRP models, they are trained for 5000 epochs to ensure their effectiveness and convergence. ", "page_idx": 18}, {"type": "text", "text": "7.6 Effectiveness of Budget Uncertainty Set ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "The hyperparameter $\\Gamma$ can be leveraged to adjust the robustness of the budget uncertainty set. Nevertheless, we conducted supplementary experiments to validate the effectiveness of our approach under general budget uncertainty conditions. Table 6 presents the comparative results for different values. Our method shows highly promising outcomes within a remarkably short time, especially when compared to the leading solver, EGA. ", "page_idx": 18}, {"type": "table", "img_path": "DoewNm2uT3/tmp/b1451c3b3c5ea9d349d9589ff864758bc923db6d7acbaeb2bd2b2fe38415362d.jpg", "table_caption": ["Table 6: Comparison result of different $\\Gamma$ on $N=20$ . "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "7.7 Architecture of MatNet ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "MatNet [30] is a graph attention network model designed for data objects that can be partitioned into two sets of nodes in a bipartite graph. To facilitate the description, we refer to the set of nodes acting as the heads of edges as $\\Phi$ , and the set of nodes acting as the tails of edges as $\\Psi$ . The framework diagram of MatNet is depicted in Figure 7. MatNet consists of a stack of $L$ attention layers. Each attention layer comprises two sub-layers: the multi-head mixed-score cross-attention layer and the fully connected feed-forward (FF) layer. Both sub-layers incorporate skip connections and batch normalization. In the FF sub-layer, a hidden layer dimension of 512 and a ReLU activation function are employed. The multi-head mixed-score cross-attention sub-layer calculates attention scores between each node in one set and all nodes in the other set. This mechanism enables the learning of association features between the two sets of nodes. ", "page_idx": 18}, {"type": "text", "text": "The update of two node sets $\\Phi$ and $\\Psi$ is performed in a dual manner, where the roles of queries and keys/values are exchanged, accompanied by the transposition of the matrix. Taking the update of $h_{\\phi i}^{l^{\\phantom{\\dagger}}}$ as an example, where $l$ denotes the current encoder layer being updated, and $h_{\\phi i}$ represents the embedding representation of node $i$ in the node set $\\Phi$ . We define the query $q_{i}$ for each node $i$ in the set $\\Phi$ by projecting the embedding $h_{\\phi i}^{l-1}$ . Simultaneously, we obtain the key $k_{j}$ and value $v_{j}$ from the embedding $h_{\\psi j}^{l-1}$ . ", "page_idx": 18}, {"type": "equation", "text": "$$\nq_{i}=W^{Q}h_{\\phi i}^{l-1},k_{j}=W^{K}h_{\\psi j}^{l-1},v_{j}=W^{V}h_{\\psi j}^{l-1},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "The compatibility $u_{i j}$ is calculated using $q_{i}$ and $k_{j}$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\nu_{i j}=\\frac{q_{i}k_{j}^{T}}{\\sqrt{d_{k}}},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $d_{k}$ is the dimensions of the attention vector $k$ and $v$ . ", "page_idx": 19}, {"type": "text", "text": "During the feature update process of the nodes in the attention layer, edge weight information represented by a matrix is added with a multi-layer perceptron (MLP) in addition to the network output of the previous layer. ", "page_idx": 19}, {"type": "equation", "text": "$$\nw e i g h t s=s o f t m a x\\big(\\big(w_{s2}\\big(R e L u\\big(w_{s1}s c o r e s^{T}+b_{s1}\\big)\\big)+b_{s2}\\big)^{T}\\big),\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $s c o r e s_{i j}=u_{i j}\\|d_{i j}$ , and $d_{i j}$ denotes the corresponding distance matrix element. ", "page_idx": 19}, {"type": "text", "text": "Next, update the corresponding node embedding. ", "page_idx": 19}, {"type": "equation", "text": "$$\n{h_{\\phi i}^{l-1}}^{\\prime}=\\sum_{j}w e i g h t s_{i j}v_{j},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then, proceed through the multi-head sub-layer and the feed-forward sub-layer sequentially to obtain the updated embedding representation for the next layer. ", "page_idx": 19}, {"type": "equation", "text": "$$\nM H A_{\\phi i}^{l}(h_{\\phi i}^{l-1},\\{h_{\\psi1}^{l-1},..,h_{\\psi N}^{l-1}\\})=\\sum_{m=1}^{M}W_{m}^{O}{h_{\\phi i m}^{l-1}}^{'},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{h}_{\\phi i}^{l}=B N_{\\phi i}^{l}(h_{\\phi i}^{l-1}+M H A_{\\phi i}^{l}(h_{\\phi i}^{l-1},\\{h_{\\psi1}^{l-1}..,h_{\\psi N}^{l-1}\\})),}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "equation", "text": "$$\nh_{\\phi i}^{l}=B N_{\\phi i}^{l}(\\hat{h}_{\\phi i}^{l}+F F_{\\phi i}^{l}(\\hat{h}_{\\phi i}^{l})),\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "As depicted in Figure 7, the final node feature embedding representation for the two node sets can be obtained y repeating the above process $L$ times. ", "page_idx": 19}, {"type": "image", "img_path": "DoewNm2uT3/tmp/75ebe58c3e14791e6cce9fd5873cfc6606c50188c655dfd1778150c1cdfc4e3e.jpg", "img_caption": ["Figure 7: The schematic of MatNet for a single bipartite graph. $D$ is the corresponding matrix representation of the bipartite graph. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We describe our problem scenario in the abstract and also describe our outstanding contributions to this problem. We consider the robust routing problem with uncertain travel times under the min-max regret criterion. The contributions of our work can be highlighted as follows: We introduce Robust routing problem with the general budget uncertainty set which covers the interval uncertainty set as a special case, and treat the problem from the perspective of deep reinforcement learning. We propose an end-to-end neural model to capture the features of Robust routing problem, and use a pre-trained routing model to efficiently calculate the reward with respect to the worst-case scenario during training. We conduct extensive experiments on RTSP and RCVRP instances. The results substantiate the efficacy of our approach in efficiently handling robust routing problems across diverse scales within shorter computation time. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 20}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: Due to the limitations of hardware memory and the limitations of the POMO algorithm used in the training process, our method can currently only be solved within the range of 20 for small scale and 50 for large scale. Our method is theoretically applicable to all problems that satisfy the max-regret theorem, but it is also limited to solving problems that satisfy this theorem. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size. ", "page_idx": 20}, {"type": "text", "text": "\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness. \u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Our question is based on an important theorem assumption1, for which we have also given a complete proof, which can be found in the appendix 7.1. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 21}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: We describe the experimental settings in the subsection 5.1 and 7.5. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm.   \n(b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully.   \n(c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).   \n(d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We will make the relevant code and data public on GitHub after we organize them. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 22}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We describe the experimental settings in the subsection 5.1 and 7.5. The training and test details is described in the subsection 4.3 and 4.4. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 22}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We report the main experiment results in table1 and 3. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our proposed approach was programmed with Pytorch. All the experiments were conducted on a246 workstation with Intel(R) Core(TM) i5-4590 CPU $@$ 3.30GHz, 8.0 GB RAM and TITAN Xp GPU. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 23}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: our reasearch conducted follow the NeuIPS Code of Ethics. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. \u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. ", "page_idx": 23}, {"type": "text", "text": "\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: The paper does not explicitly discuss both potential positive and negative societal impacts of the work performed. This could be due to a primary focus on the technical aspects of addressing the robust routing problem using neural combinatorial optimization, without delving into the broader societal implications. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 24}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: For previous existing works, we have cited relevant references. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 25}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 25}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] Justification: Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}]