[{"type": "text", "text": "Slack-Free Spiking Neural Network Formulation for Hypergraph Minimum Vertex Cover ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Tam Ngoc-Bang Nguyen1, Anh-Dzung Doan1, Zhipeng $\\mathbf{Cai}^{2}$ , Tat-Jun Chin1 ", "page_idx": 0}, {"type": "text", "text": "1 Australian Institute for Machine Learning, The University of Adelaide, 2 Intel Labs   \n{tam.nb.nguyen,dzung.doan,tat-jun.chin}@adelaide.edu.au zhipeng.cai@intel.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Neuromorphic computers open up the potential of energy-efficient computation using spiking neural networks (SNN), which consist of neurons that exchange spike-based information asynchronously. In particular, SNNs have shown promise in solving combinatorial optimization. Underpinning the SNN methods is the concept of energy minimization of an Ising model, which is closely related to quadratic unconstrained binary optimization (QUBO). Thus, the starting point for many SNN methods is reformulating the target problem as QUBO, then executing an SNN-based QUBO solver. For many combinatorial problems, the reformulation entails introducing penalty terms, potentially with slack variables, that implement feasibility constraints in the QUBO objective. For more complex problems such as hypergraph minimum vertex cover (HMVC), numerous slack variables are introduced which drastically increase the search domain and reduce the effectiveness of the SNN solver. In this paper, we propose a novel SNN formulation for HMVC. Rather than using penalty terms with slack variables, our SNN architecture introduces additional spiking neurons with a constraint checking and correction mechanism that encourages convergence to feasible solutions. In effect, our method obviates the need for reformulating HMVC as QUBO. Experiments on neuromorphic hardware show that our method consistently yielded high quality solutions for HMVC on real and synthetic instances where the SNN-based QUBO solver often failed, while consuming measurably less energy than global solvers on CPU. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Neuromorphic computing research aims to develop computational models inspired by neural architectures found in nature. Spiking neural networks (SNN), in which a network of processing units (neurons) asynchronously transmit spike-based messages to each other [34], is a notable representative of the neuromorphic paradigm. Through parallelism, stochastic behavior, event-driven computing and other biologically-inspired properties, SNNs promise higher energy efficiency than conventional computing, which includes the successful artificial neural networks (ANN) [16]. ", "page_idx": 0}, {"type": "text", "text": "The advent of neuromorphic computing hardware that can implement SNNs has boosted research in the area. Notable examples include IBM TrueNorth [25] and Intel Loihi [12, 30, 35]. Rigorous benchmarking [13] indicate the promise of SNNs in delivering energy efficient computations, which not only benefti edge computing applications, but also reducing the energy consumption of data centers. The recent introduction of Intel Hala Point [1], the world\u2019s largest neuromorphic supercomputer with 1.15 billion neurons and 138.2 billion synapses, is a testament of confidence in the technology. ", "page_idx": 0}, {"type": "text", "text": "Two major classes of problems have been explored for SNNs: machine learning and combinatorial optimization [13]. Representative approaches in the former include training SNNs using asynchronous variants of backpropagation, and converting pre-trained ANNs into equivalent SNNs for deployment on neuromorphic hardware. Works in the latter develop SNNs to solve specific optimization problems, where the spike-based temporal information processing is exploited to achieve computational beneftis over classical methods. Our work focuses on combinatorial optimization. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "The concept of energy minimization of the Ising model underpins SNN techniques for combinatorial optimization. The task is closely related to quadratic unconstrained binary optimization (QUBO) ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{{\\bf z}\\in\\{0,1\\}^{N}}{\\bf z}^{T}{\\bf Q z},\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where ${\\bf Q}\\in\\mathbb{Z}^{N\\times N}$ is a symmetric coefficient matrix (we restrict $\\mathbf{Q}$ to integers to facilitate the SNN treatment; integers are sufficient nonetheless for the targeted combinatorial problem). Several SNNs have been developed to solve QUBO [6, 14, 3, 32]; Sec. 3.2 will describe such a method. To bring such SNNs to bear on other combinatorial problems, the problems must first be reformulated into QUBO [11, 22]. For problems with feasibility constraints, penalty terms and often slack variables will be added to the QUBO objective to implement the constraints. Examples are provided below. ", "page_idx": 1}, {"type": "text", "text": "Problem 1 (Minimum vertex cover (MVC)). Let $G\\;=\\;(V,E)$ be a graph with vertices $V\\,=$ $\\{1,\\ldots,N\\}$ and edges $E=\\{e_{1},\\ldots,e_{K}\\}$ , where each $e_{k}=\\langle i^{(k)},j^{(k)}\\rangle\\subset V$ connects two vertices. A vertex cover of $G$ is a subset $Z$ of $V$ such that every edge is incident with at least a vertex in $Z$ . The goal of MVC is to find the vertex cover with the smallest number of vertices. Let ", "page_idx": 1}, {"type": "equation", "text": "$$\n{\\mathbf z}=[z_{1},\\dots,z_{N}]^{T}\\in\\{0,1\\}^{N}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "be a binary vector whose role is to select a subset of $V$ , where $z_{i}=1$ indicates that the $i$ -th vertex is selected, and $z_{i}=0$ means otherwise. MVC can be expressed as ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\underset{{\\bf z}\\in\\{0,1\\}^{N}}{\\operatorname*{min}}}&{\\|{\\bf z}\\|_{1}}&\\\\ {\\mathrm{s.t.}}&{(1-z_{i^{(k)}})(1-z_{j^{(k)}})=0,}&{\\forall k=1,\\ldots,K.}\\end{array}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Note that $\\|\\mathbf{z}\\|_{1}=\\|\\mathbf{z}\\|_{2}$ for binary ${\\bf z}$ and the equality constraints in (3) are quadratic in ${\\bf z}$ . Rewriting the equality constraints as penalty terms, we obtain the QUBO ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{z}\\in\\{0,1\\}^{N}}\\quad\\|\\mathbf{z}\\|_{2}^{2}+\\lambda\\sum_{k=1}^{K}\\bigl(1-z_{i^{(k)}}\\bigr)\\bigl(1-z_{j^{(k)}}\\bigr).\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Intuitively, solutions ${\\bf z}$ that violate the constraints in (3) will raise the total cost in (4) and hence be penalized. The quantity $\\lambda\\in\\mathbb{Z}$ is the penalty weight that controls the degree of penalization due to constraint violations. Note that while (4) is not exactly in the form (1) due to the existence of a constant, the remaining steps to rearrange (4) to (1) are minor; see supplementary material. \u518f\u53e3 ", "page_idx": 1}, {"type": "text", "text": "Problem 2 (Hypergraph minimum vertex cover (HMVC)). Let $H\\,=\\,(V,F)$ be an $r$ \u2212uniform hypergraph with vertices $V=\\{1,\\ldots,N\\}$ and hyperedges $F=\\{f_{1},\\ldots,\\dot{f}_{K}\\}$ , where each $f_{k}\\subset V$ is incident with exactly $r$ vertices, $r\\geq2$ . A vertex cover of $H$ is a subset $Z$ of $V$ such that every hyperedge is incident with at least a vertex in $Z$ . The goal of HMVC is to find the vertex cover with the smallest number of vertices. Note that HMVC reduces to MVC if $r=2$ . For each hyperedge $f_{k}$ , define a binary vector ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathbf{b}^{(k)}=[b_{1}^{(k)},\\ldots,b_{N}^{(k)}]^{T}\\in\\{0,1\\}^{N},\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\|\\mathbf{b}^{(k)}\\|_{1}=r$ , and $b_{i}^{(k)}=1$ means that vertex $i$ is incident to $f_{k}$ and $b_{i}^{(k)}=0$ means otherwise. HMVC can then be written as ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\begin{array}{c l}{\\displaystyle\\operatorname*{min}_{\\mathbf{z}\\in\\{0,1\\}^{N}}}&{\\|\\mathbf{z}\\|_{1}}\\\\ {\\mathrm{s.t.}}&{\\mathbf{b}^{(k)^{T}}\\mathbf{z}\\geq1,\\quad\\forall k=1,\\ldots,K,}\\end{array}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "which is a 0-1 integer linear program (ILP). Since $r$ variables $\\left.T\\geq2\\right]$ ) exist in each linear inequality constraint, in general it is not possible to express it as a quadratic equality constraint, $c f$ . (3). Instead, the path to QUBO will involve converting each inequality into an equality constraint ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathbf{b}^{(k)^{T}}\\mathbf{z}-\\mathbf{1}_{r^{\\prime}}^{T}\\mathbf{y}^{(k)}=1,\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "which requires introducing $r^{\\prime}$ binary slack variables for each $f_{k}$ ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbf{y}^{(k)}=[y_{1}^{(k)},\\dots,y_{r^{\\prime}}^{(k)}]^{T}\\in\\{0,1\\}^{r^{\\prime}},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $r^{\\prime}=r-1$ and $\\mathbf{1}_{r^{\\prime}}$ is a column vector of 1 of size $r^{\\prime}$ . Installing the equality constraints as quadratic penalty terms, we obtain the QUBO ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{z}\\in\\{0,1\\}^{N},\\{\\mathbf{y}^{(k)}\\}_{k=1}^{K}\\in\\{0,1\\}^{r^{\\prime}\\times K}}\\quad\\|\\mathbf{z}\\|_{2}^{2}+\\lambda\\sum_{k=1}^{K}\\left(\\mathbf{b}^{(k)^{T}}\\mathbf{z}-\\mathbf{1}_{r^{\\prime}}^{T}\\mathbf{y}^{(k)}-1\\right)^{2},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\lambda\\in\\mathbb{Z}$ is the penalty weight. See supp. material for rewriting the QUBO in form (1). ", "page_idx": 2}, {"type": "text", "text": "A major difference between the QUBO reformulations for MVC and HMVC is that the latter requires slack variables, the quantity of which scales linearly with the number $K$ and degree $r$ of hyperedges. This significantly increases the search space and difficulty of the optimization. As we will show in Sec. 5, the established SNN-based QUBO solver [3] is unable to satisfactorily solve HMVC based on (9). This presents an obstacle towards applying SNNs to a combinatorial problem with many practical applications, e.g., computational biology [9], computer network security [19], resource allocation [7] and social network analysis [23]. Fundamentally, HMVC is a general optimization problem that encompasses several related formulations, such as set cover, hitting set, and traversal [5], giving it wide applicability. The issue calls for a more effective SNN for HMVC. ", "page_idx": 2}, {"type": "text", "text": "1.1 Contributions ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "To solve HMVC more effectively, we propose an SNN that is composed of a mix of non-equilibrium Boltzmann machine (NEBM) spiking neurons [32] and a custom feedback spiking neuron. One feedback neuron is introduced for each constraint in (6) to check for constraint violations and encourage the overall state to return to feasibility. A major benefit of our handcrafted SNN is obviating the need to reformulate HMVC as QUBO based on the penalty method, which not only avoids the usage of slack variables, but also removes the necessity to tune the penalty weight. ", "page_idx": 2}, {"type": "text", "text": "Results on Intel Loihi 2 [30] indicate that our SNN significantly outperformed the QUBO approach on HMVC, in that our method consistently yielded high-quality solutions on synthetic and real problem instances where the SNN-based QUBO solver [3] often failed to return feasible results. Moreover, our SNN consumed measurably much less energy than global solvers on CPU. ", "page_idx": 2}, {"type": "text", "text": "Our work follows the spirit of other handcrafted SNNs for combinatorial optimization [8, 31, 17, 21, 36]. However, such works have mainly been targeted at constraint satisfaction problems, whereas our SNN is aimed at a graph-based optimization problem, i.e., HMVC (more details in Sec. 2). ", "page_idx": 2}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Previous studies have shown that an SNN with a topology corresponding to the matrix $\\mathbf{Q}$ can efficiently solve QUBO [3, 6, 14]. This enables neuromorphic computing to solve combinatorial problems that can be encoded as QUBO, such as graph partitioning [26]. In addition, via the penalty method [29, Chap. 17], other combinatorial problems with constraints can be reformulated into QUBO [15]. Problem 1 has discussed this for MVC, which has been evaluated on a neuromorphic processor [11]. Other works that employed QUBO reformulation include [32, 22] who solved maximum independent set and ILP. However, more complex problems will require the introduction of slack variables, which increases the search space and difficulty for an SNN solution. Problem 2 has illustrated this for HMVC. ", "page_idx": 2}, {"type": "text", "text": "The majority of handcrafted SNNs for combinatorial optimization aim to solve constraint satisfaction problems (CSPs). Jonke et al. [21] proposed a stochastic SNN for traveling salesman problem. Since then, several SNN solvers have been proposed for CSPs, such as, Sudoku [8, 31], graph coloring [17], and Boolean satisfiability problem [21, 36]. These existing approaches share a common strategy: constructing a specific SNN topology that is strongly tailored to the constraints of each CSP. This is to ensure that these SNN solvers can seek valid values for a set of variables that satisfy the specified constraints. In other words, the primary objective of these handcrafted SNNs is to find feasible solutions to the combinatorial optimization problem. Although our approach shares a similar spirit to these handcrafted SNNs in that we directly construct SNN topology using constraints, our SNN topological graph is specifically designed to seek not only a feasible solution but also the optimal one. ", "page_idx": 2}, {"type": "image", "img_path": "4A5IQEjG8c/tmp/7d1be1d40790ff5083de8e792a520236b952d72044b17e18f5d750f208ddc868.jpg", "img_caption": ["Figure 1: (a) HMVC input hypergraph: a 3-uniform hypergraph with 4 vertices and 3 hyperedges. (b) SNN for QUBO (9) derived from (a). Both the variables $z_{i}$ and introduced slack variables are NEBM neurons. The edge weights are omitted for brevity. (c) The SNN from our method for input (a). NEBM and FB neurons are in orange and green resp. Dashed circles indicate self-connections. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "The QUBO formulation is amenable to Ising-specific analog and digital hardware solvers, including spintronics, memristors, and quantum annealers [27]. However, given our focus on SNNs, we leverage the state-of-the-art Loihi 2 neuromorphic accelerator to implement the SNN solutions for both QUBO and our method, due to its high flexibility in SNN design and programmable neuron model. For a comprehensive overview of Loihi 2\u2019s capabilities, we refer readers to [24, 32, 35]. ", "page_idx": 3}, {"type": "text", "text": "There is a large body of work on SNNs for machine learning; we refer to [13] for a thorough survey. While SNNs are usually less accurate than ANNs [28], under certain temporal dynamics, SNNs can surpass ANNs. SNNs have also been used for robotics. For instance, [24] implemented their SNN-based quadratic programming solver for model predictive control on Loihi 2, achieving two orders-of-magnitude gains in energy-delay product compared to CPU solvers. Another study demonstrated the applications of SNN in optical flow estimation for event cameras [33], which showed significant potential for real-time operations. In addition, SNNs have been applied to depth estimation for event sensors [10], where their method computed the optical flow on the neuromorphic chip and integrated the optical flow with camera velocity to estimate depth. ", "page_idx": 3}, {"type": "text", "text": "3 Preliminaries ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "An SNN can be viewed as a \u201cprogram\u201d for a neuromorphic computer [34]. Formally, an SNN comprises a set of spiking neurons $\\bar{\\mathcal{N}}=\\{n_{i}\\}_{i=1}^{N}$ and synapses, where each synapse connects a pair of neurons. The interconnections can be summarized by a matrix $\\mathbf{W}=[w_{i j}]\\in\\mathbb{Z}^{N\\times N}$ , where the element $w_{i j}$ indicates the strength of connection between $n_{i}$ and $n_{j}$ , and $w_{i j}=0$ signifies an absence of connection between the pair. The architecture of an SNN and the model of the spiking neuron define the behavior of the program. Here, we describe the NEBM spiking neuron model (Sec. 3.1) and the NEBM-based SNN for QUBO (Sec. 3.2) [32]. ", "page_idx": 3}, {"type": "text", "text": "3.1 NEBM ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "NEBM neurons produce outputs probabilistically based on the Boltzmann distribution [32]. An NEBM neuron $n_{i}$ contains a binary state $s_{i}~\\in~\\{0,1\\}$ that indicates whether the neuron is firing $(s_{i}=1)$ ) or not $\\mathbf{\\Delta}_{s_{i}}=0$ ), and an internal state $u_{i}\\in\\mathbb{Z}$ that accumulates outputs from connected neurons. ", "page_idx": 3}, {"type": "text", "text": "While in theory spiking neurons operate asynchronously, practical neuromorphic computers such as Intel Loihi are fully digital devices [12]. The continuous time dynamics of a spiking neuron are approximated using fixed-size discrete timesteps $t$ . It should be reminded that $t$ relates to the algorithmic time of the computation rather than the time of a global synchronous clock. ", "page_idx": 3}, {"type": "text", "text": "Based on the algorithmic time formalism, at timestep $t$ , an NEBM neuron $n_{i}$ accumulates inputs from connected neurons into its internal state ", "page_idx": 4}, {"type": "equation", "text": "$$\nu_{i}^{(t)}=u_{i}^{(t-1)}+\\sum_{j\\neq i}w_{i j}\\Delta s_{j}^{(t-1)},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\Delta s_{j}^{(t-1)}$ is the output spike of neuron $n_{j}$ from the previous timestep. The internal state of $n_{i}$ is then converted to a switching probability ", "page_idx": 4}, {"type": "equation", "text": "$$\nP\\Big(s_{i}^{(t)}=1\\Big)=\\frac{1}{1+e^{u_{i}^{(t)}/T}},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $T$ is the temperature. If the switching probability (11) exceeds a randomly generated threshold $\\theta_{i}\\in[0,1]$ , $s_{i}$ is set to 1. From here, an output or delta spike is calculated ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\Delta s_{i}^{(t)}=s_{i}^{(t)}-s_{i}^{(t-1)}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "If $\\Delta s_{i}^{(t)}$ takes a non-zero value, $i.e.$ , the state $s_{i}$ changes from the previous timestep, $n_{i}$ propagates a delta spike to all its connected neurons and enters a refractory period for $r_{i}$ timesteps. Within the refractory period, the binary state $s_{i}$ remains unchanged. Note that temperature $T$ and length of the refractory period $r_{i}$ are hyperparameters of NEBM neurons. For more details of NEBM, its hyperparameters and how it is implemented on Loihi 2 given hardware constraints (i.e. no division operator), we refer readers to [32]. ", "page_idx": 4}, {"type": "text", "text": "3.2 NEBM-based SNN for QUBO ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The energy encoded by the neuronal states in an SNN is ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{E}=\\sum_{i=1}^{N}s_{i}u_{i}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Following [32], the NEBM-based SNN algorithm to minimize the energy is summarized in Alg. 2 (see Appendix). Intuitively, the method repeatedly samples and explores the neuronal states guided by the structure of the synapses and evolving state values [21]. The algorithm is executed on the neuromorphic hardware for $M$ algorithmic timesteps, and the state configurations probed at the $M$ timesteps are returned. The state configurations are evaluated off-chip, with the best one returned as the solution. Note that we employ an early version of NEBM where $T$ is kept constant in Alg. 2, though $T$ can be annealed to fine-tune the search. We refer interested readers to [32] for recent advancements of NEBM and NEBM-based QUBO solver. ", "page_idx": 4}, {"type": "text", "text": "To enable Alg. 2 to solve QUBO, following [32], we perform the following mapping: ", "page_idx": 4}, {"type": "text", "text": "\u2022 Assign each binary variable $z_{i}$ to a neuron $n_{i}$ , and equating the state $s_{i}$ with the value of $z_{i}$ . \u2022 Associate the quadratic coefficients ${\\bf Q}=[q_{i j}]\\in\\mathbb{Z}^{N\\times N}$ with the synapse weights W, i.e., $\\mathbf Q=\\mathbf W$ This also implies the existence of self connections for the neurons, where $q_{i i}=w_{i i}$ is the strength of the self connection for neuron $n_{i}$ . ", "page_idx": 4}, {"type": "text", "text": "Fig. 1b illustrates the mapping. Note that the \u201cmapping\u201d does not imply that $\\mathcal{E}$ equates to the QUBO cost; rather, the minimization of $\\mathcal{E}$ by Alg. 2 tends to lead to the minimization of the QUBO cost. In this sense, the SNN is a heuristic method to solve QUBO. ", "page_idx": 4}, {"type": "text", "text": "4 Slack-free SNN formulation for HMVC ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Instead of converting HMVC to QUBO following the derivations in Problem 2 and applying the SNN described in Sec. 3.2, we develop a novel slack-free SNN that directly solves HMVC. Referring to the 0-1 ILP (6), we construct our SNN, named $S F$ -HMVC, as follows: ", "page_idx": 4}, {"type": "text", "text": "\u2022 As before, each binary variable $z_{i}$ is encoded as the state $s_{i}$ of an NEBM neuron $n_{i}$ . \u2022 Each $k$ -th constraint $\\mathbf{b}^{(k)^{T}}\\mathbf{z}\\geq1$ is represented by a neuron $m_{k}$ , whose dynamics are governed by a custom neuron model called feedback or $F B$ (more details below). ", "page_idx": 4}, {"type": "text", "text": "Algorithm 1 Our proposed SF-HMVC (note: the algorithm is executed for each NEBM neuron $n_{i}$ and FB neuron $m_{k}$ on the neuromorphic hardware in a parallel way; see [13] for details). ", "page_idx": 5}, {"type": "text", "text": "Require: Co-occurrence matrix $\\mathbf{F}$ , adjacency matrix A, temp. $T$ and refract. period $r_{i}$ .   \n1: Initialize $s_{i}^{(0)}\\gets0$ , $\\Delta s_{i}^{(0)}\\gets0$ 0, u $\\bar{u_{i}^{(0)}}\\leftarrow-f_{i i}$ , refract_counte ${\\bf\\chi}_{i}^{(0)}\\leftarrow0$   \n2: for each timestep $t$ do   \n3: $\\begin{array}{l}{{u_{i}^{(t)}\\gets u_{i}^{(t-1)}+\\displaystyle\\sum_{j\\neq i}^{N}f_{i j}\\Delta s_{j}^{(t-1)}+\\displaystyle\\sum_{k=1}^{K}a_{i k}\\Delta c_{k}^{(t-1)}}}\\\\ {{p_{i}^{(t)}\\gets\\displaystyle\\frac{1}{1+\\exp(u_{i}^{(t)}/T)}}}\\\\ {{\\theta_{i}\\gets r a n d(0,1)}}\\end{array}$   \n4:   \n5:   \n6: if neuron $n_{i}$ is not in refractory period then   \n7: 8: $\\begin{array}{r}{\\mathfrak{M}\\;p_{i}^{\\mathrm{~\\tiny~\\textnormal~{~\\rightmoon~}~}}\\ge\\theta_{i}\\;\\mathfrak{L}}\\\\ {s_{i}^{(t)}\\leftarrow1}\\\\ {\\mathfrak{e l s e}_{s_{i}^{(t)}\\leftarrow0}}\\end{array}$ if $p_{i}^{(t)}\\geq\\theta_{i}$ then NEBM   \n9: neuron   \n10:   \n11: else   \n12: s   \n13: refrac _counter(t) \u2190max(refract_counteri(t\u22121)\u22121, 0)   \n14: \u2206s (t) s(t) s(t\u22121)   \n15: send $\\Delta s_{i}^{(t)}$ to connected neurons   \n16: if $\\Delta s_{i}^{(t)}\\neq0$ then   \n17: neuron $n_{i}$ enters refractory period   \n18: refract_counte $\\mathbf{\\Phi}_{i}^{(t)}\\leftarrow r_{i}$   \nRequire: Adjacency matrix A.   \n1: for each timestep $t$ do   \n2: $v_{k}^{(t)}\\gets\\sum_{i=1}^{N}a_{i k}s_{i}^{(t)}$   \n3: $v_{k}^{(t)}=0$ then   \n4: $\\ddot{c}_{k}^{(t)}\\gets1,\\Delta c_{k}^{(t)}\\gets-1$ FB   \n5: else neuron   \n6: if ck $c_{k}^{(t-1)}=0$ then   \n7: $\\ddot{c}_{k}^{(t)}\\gets0,\\Delta c_{k}^{(t)}\\gets0$   \n8: else   \n9: $\\bar{c}_{k_{\\setminus}}^{(t)}\\leftarrow0,\\Delta c_{k}^{(t)}\\leftarrow1$   \n10: send $\\Delta c_{k}^{(i)}$ to connected neurons ", "page_idx": 5}, {"type": "text", "text": "\u2022 The weight matrix of our SNN which consists of $N+K$ neurons $\\left[s_{1},\\ldots,s_{N},m_{1},\\ldots,m_{K}\\right]$ is ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbf{W}=\\left[\\underset{\\mathbf{A}^{T}}{\\mathbf{F}}\\quad\\;\\;\\mathbf{A}\\\\ {\\mathbf{A}^{T}}\\quad\\mathbf{0}_{K\\times K}\\right]\\in\\mathbb{Z}^{(N+K)\\times(N+K)},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where ${\\bf0}_{K\\times K}$ is a $K\\times K$ matrix of zeros, ", "page_idx": 5}, {"type": "text", "text": "\u2013 $\\mathbf{A}=[\\mathbf{b}^{(1)}\\cdot\\cdot\\cdot\\mathbf{b}^{(K)}]\\in\\{0,1\\}^{N\\times K}$ is the adjacency matrix between NEBM and FB neurons (intuitively, the $k$ -th FB neuron $m_{k}$ is connected to the NEBM neurons corresponding to $z_{i}$ \u2019s that appear in the $k$ -th constraint); and   \n\u2013 $\\mathbf{F}=[f_{i j}]=\\mathbf{A}\\mathbf{A}^{T}\\in\\mathbb{Z}^{N\\times N}$ is the co-occurrence matrix of the NEBM neurons (intuitively, $f_{i j}$ is high if $z_{i}$ and $z_{j}$ appear frequently together in the constraints, while $f_{i i}$ is high if $z_{i}$ appear in many constraints). ", "page_idx": 5}, {"type": "text", "text": "Fig. 1c illustrates the proposed SNN construction, while Alg. 1 summarizes the associated algorithm. ", "page_idx": 5}, {"type": "text", "text": "Note that Alg. 1 involves two types of neurons that implement different dynamics, and the neurons are executed in parallel on the neuromorphic hardware [13]. The internal state for $m_{k}$ is ", "page_idx": 6}, {"type": "equation", "text": "$$\nv_{k}^{(t)}=\\sum_{i=1}^{N}a_{i k}s_{i}^{(t)}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $a_{i k}$ is the element of $i$ -th row and $k$ -th column of matrix A. An FB neuron $m_{k}$ is deterministically activated (i.e., its binary state $c_{k}$ becomes 1) whenever the connected NEBM neurons are all inactive (i.e., $v_{k}=0$ ), and vice versa. Then, a negative spike $\\Delta c_{k}$ is generated if the value of $c_{k}$ is 1, so as to send excitatory signals to the connected NEMB neurons to attempt to satisfy the constraint; otherwise no spikes are generated. The point here is not to over-excite NEBM neurons. Then, the internal state of an NEBM neuron $n_{i}$ accumulates inhibitory signals from the connected NEBM neurons and excitatory signals from the connected FB neurons, $i.e.$ ., ", "page_idx": 6}, {"type": "equation", "text": "$$\nu_{i}^{(t)}=u_{i}^{(t-1)}+\\sum_{j\\neq i}^{N}f_{i j}\\Delta s_{j}^{(t-1)}+\\sum_{k=1}^{K}a_{i k}\\Delta c_{k}^{(t-1)}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Similar to Alg. 2, Alg. 1 is executed on the neuromorphic hardware for $M$ algorithmic timesteps, and the best state configuration probed and evaluated off-chip is taken as the solution. Note that the probing mechanism incurs significant overhead in the execution time of current implementation [10], and an on-chip evaluation strategy could be implemented to address this bottleneck [24, 32]. ", "page_idx": 6}, {"type": "text", "text": "Scalability analysis Based on the construction of the QUBO-based SNN and the proposed SFHMVC, we can model the number of spiking neurons required to encode each SNN: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\bullet\\ n_{\\mathrm{neurons}}(\\mathrm{QUBO})=N+(r-1)K}\\\\ &{\\bullet\\ n_{\\mathrm{neurons}}(\\mathrm{SF-HMVC})=N+K}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "As $N,K$ and $r$ collectively define the size of the input problem, we can conclude that SF-HMVC scales linearly whereas the QUBO-based SNN scales quadratically with respect to the problem size. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Implementation Our method SF-HMVC was implemented on the Loihi assembly language through Lava framework [2] and deployed on the neuromorphic chip of Intel Loihi 2 [30] with $M=1000$ algorithmic timesteps (denoted as SF-HMVC-Loihi). Using grid search, we selected temperature $T$ from the range [2, 4, 8, 16, 24, 32], refractory period $r_{i}$ from the range [8, 16, 32, 64, 128] (note that all NEBM neurons were given the same refractory period). We set $\\lambda=2$ for QUBO ( 4) (same as [11]) and grid search $\\lambda=[1,10,100,1000]$ for QUBO ( 9). Note that we were unable to change the seed of the random number generator on Intel Loihi 2, which prevented us from repeatedly executing SNNs to obtain error bars in the solution quality. Also, we noticed that energy consumption and runtime of our method and all competitors remained fairly consistent across different runs. ", "page_idx": 6}, {"type": "text", "text": "5.1 MVC ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Dataset We employed the DIMACS benchmark dataset [20]. DIMACS includes graph instances that are both synthetically generated and sourced from real-world applications, including coding theory, fault diagnosis, Keller\u2019s conjecture, etc. The original DIMACS graphs were for maximum clique problems; we converted these to MVC instances by taking the complement graphs. Only 15 MVC instances where the corresponding SNN for SF-HMVC could fit on Loihi 2 were selected. ", "page_idx": 6}, {"type": "text", "text": "Competitors SF-HMVC-Loihi was compared to the following methods: ", "page_idx": 6}, {"type": "text", "text": "\u2022 ILP-CPU: MVC was solved using the ILP (3) with Gurobi [18] and evaluated on CPU.   \n\u2022 QUBO-CPU: MVC was solved using QUBO (4) with Gurobi [18] and evaluated on CPU. We set $\\lambda=2$ (same as [11]).   \n\u2022 QUBO-Loihi: MVC was solved using QUBO (4) with NEBM-based SNN (see Sec. 3.2) and evaluated on Intel Loihi 2. We set $T=16,r_{i}=64,\\lambda=2$ . ", "page_idx": 6}, {"type": "table", "img_path": "4A5IQEjG8c/tmp/0a95d34ddb6c7f413e31ba018019eb8f644f1bcf2342ea7a7c443ec3106071e9.jpg", "table_caption": ["Table 1: Solution quality $\\|\\mathbf{z}\\|_{1}$ of the MVC methods for all DIMACS MVC instances. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "4A5IQEjG8c/tmp/519423c1635da6b6c05124ca8118aea8a7bcd8221f9e49457ffc0f828f36c74d.jpg", "table_caption": ["Table 2: Runtime (in seconds) and energy usage (in Joules) of MVC methods. Note that $\\infty$ indicates that the energy was too high for pyJoules to measure. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "All hyperparameters of the competitors were selected using grid search. The configuration that demonstrated consistent performance across all problem instances was selected for each method. For SF-HMVC-Loihi, we set $T=4,r_{i}=8$ . ", "page_idx": 7}, {"type": "text", "text": "Metrics Solution quality, runtime (in seconds), and energy consumption (in Joules) were reported for all methods. Runtime and energy consumption on Intel Loihi 2\u2019s Oheo Gulch board were measured through the built-in profiler of Lava-Loihi $\\mathrm{v}0.6.0$ extension. Runtime on CPU was recorded using built-in functions of Gurobi and the energy usage was recorded using pyJoules [4] on a workstation with an Intel Core i7-11700K CPU $@$ 3.6GHz and 32GB RAM running Ubuntu 20.04.6 LTS. ", "page_idx": 7}, {"type": "text", "text": "Results Tabs. 1 and 2 display the results. Overall, SF-HMVC-Loihi was comparable to QUBO-Loihi in all three aspects: solution quality, runtime, and energy usage (the discrepancy between them will be clearer in the next experiment). ILP-CPU and QUBO-CPU outperformed SF-HMVC-Loihi in terms of solution quality (see Tab. 1), since both ILP-CPU and QUBO-CPU were globally optimal methods. The equal solution quality of the global methods also indicated the existence of a suitable penalty weight for QUBO (4) in the grid search range of $\\lambda$ . On runtime (see Tab. 2), though ILP-CPU and QUBO-CPU solved many instances in under 1 s, a few instances took them minutes to hours to solve. In contrast, SF-HMVC-Loihi consistently solved all instances within $10\\;\\mathrm{s}$ . Also, on energy usage, our method significantly outperformed ILP-CPU and QUBO-CPU. ", "page_idx": 7}, {"type": "text", "text": "Table 3: Solution quality $\\lVert\\mathbf{z}\\rVert_{1}$ of the HMVC methods for all synthetic HMVC instances. Infeasible solutions are indicated in red, with number of constraint violations in brackets. N/A means that the SNN was not able to be embedded into the Loihi 2 due to capacity limitations. ", "page_idx": 8}, {"type": "table", "img_path": "4A5IQEjG8c/tmp/03258c79ce94a70de92905c7458cf5640dbb992ccc8780a1a3ded47ef4d0b368.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.2 HMVC ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Dataset We generated 11 synthetic HMVC instances as follows: first, a set of $N$ vertices $V$ were created, then a set of $K$ degree- ${\\bf\\nabla}r$ hyperedges $F$ were randomly generated. The values of $N$ , $K$ and $r$ were selected to ensure that the SNN (for SF-HMVC) could fit on Loihi 2. ", "page_idx": 8}, {"type": "text", "text": "Competitors SF-HMVC-Loihi was compared to the following methods: ", "page_idx": 8}, {"type": "text", "text": "\u2022 ILP-CPU: HMVC was solved using the ILP Eq. (6) with Gurobi [18] and evaluated on CPU.   \n\u2022 QUBO-CPU: HMVC was solved using QUBO Eq. (9) with Gurobi [18] and evaluated on CPU. We set $\\lambda=10$ .   \n\u2022 QUBO-Loihi: HMVC was solved using QUBO Eq. (9) with NEBM-based SNN (see Sec. 3.2) and evaluated on Intel Loihi 2 [30]. We set $T=32$ , $r_{i}=8,\\lambda=10$ . ", "page_idx": 8}, {"type": "text", "text": "All hyperparameters of these competitors were selected using grid search. The configuration that demonstrated consistent performance across all problem instances was selected for each method. For SF-HMVC-Loihi, we set $T=8,r_{i}=8$ . ", "page_idx": 8}, {"type": "text", "text": "Results Tabs. 3 and 4 display the results. As expected, ILP-CPU outperformed SF-HMVC-Loihi in solution quality, since ILP-CPU was a global method. Interestingly, our method occasionally found better solutions than QUBO-CPU. This was probably because, as the problem difficulty (number of variables) increases, it became more challenging for QUBO-CPU. Note that SF-HMVC-Loihi handled all instances reasonably well. In contrast, QUBO-Loihi either could not find feasible solutions, or correspoding SNN could not be embedded onto Loihi 2. This suggests that the introduction of slack variables in QUBO-Loihi made the search space and/or problem size too large. ", "page_idx": 8}, {"type": "text", "text": "As presented in Table 4, while ILP-CPU performed better than SF-HMVC-Loihi in terms of runtime, our method was more efficient in terms of energy consumption. Furthermore, our method significantly surpassed QUBO-CPU and QUBO-Loihi in both runtime and energy efficiency. ", "page_idx": 8}, {"type": "text", "text": "6 Limitations and conclusions ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Several limitations of our work can be identified: ", "page_idx": 8}, {"type": "text", "text": "L1: The capacity of the neuromorphic computer available to us (a single Intel Loihi 2 chip [30] which has 128 neuromorphic cores) was relatively low, which prevented testing of large problem instances.   \nL2: There is a lack of public benchmarks on HMVC problems. L1 and L2 together precluded an assessment of the generalizability of the methods more practical problem instances.   \nL3: Changing the seed of the random number generator on Intel Loihi 2 was inaccessible to us, which precluded error bars in solution quality. ", "page_idx": 8}, {"type": "table", "img_path": "4A5IQEjG8c/tmp/1d705635fd55e555cbc5ef3d238dd3c3011d6978f40e5de1278c83d8faa00784.jpg", "table_caption": ["Table 4: Runtime (in seconds) and energy usage (in Joules) of HMVC methods. Note that $\\infty$ indicates that the energy was too high for pyJoules to measure, while $\\mathtt{N}/\\mathtt{A}$ indicates the instance could not be embedded into Loihi 2 due to capacity limitations. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "L4: SNNs are ultimately heuristic algorithms, which complicate theoretical analyses on solution quality and runtime complexity. ", "page_idx": 9}, {"type": "text", "text": "Despite the limitations above, the results showed clear trends of the greater scalability of the proposed method SF-HMVC, in that it was able to solve HMVC problem instances where the existing method could not. Moreover, SF-HMVC on Loihi 2 exhibited measurably lower energy consumption than global solvers on CPU, further supporting neuromorphic computing as an energy-efficient alternative. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We would like to thank Intel Labs and the Intel Neuromorphic Research Community (INRC) for providing access to Loihi 2. We thank Philipp Stratmann from the Neuromorphic Computing Lab for the documentation related to NEBM and Loihi 2. We also thank all the members of Neuromorphic Computing Lab for their support on technical issues. Tat-Jun Chin is SmartSat CRC Professorial Chair of Sentient Satellites. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Intel Builds World\u2019s Largest Neuromorphic System to Enable More Sustainable AI. https://www.intel.com/content/www/us/en/newsroom/news/ intel-builds-worlds-largest-neuromorphic-system.html.   \n[2] Lava: A software framework for Neuromorphic Computing, Intel Corporation. https:// github.com/lava-nc/lava.   \n[3] Quadratic Unconstrained Binary Optimization (QUBO) with Lava, Intel Corporation. https://github.com/lava-nc/lava-optimization/blob/main/tutorials/ tutorial_02_solving_qubos.ipynb.   \n[4] Spirals, 2019. pyjoules. https://pyjoules.readthedocs.io/en/latest/.   \n[5] Vertex cover in hypergraphs, Wikipedia. https://en.wikipedia.org/wiki/Vertex_ cover_in_hypergraphs.   \n[6] M. Z. Alom, B. V. Essen, A. T. Moody, D. P. Widemann, and T. M. Taha. Quadratic unconstrained binary optimization (qubo) on neuromorphic computing system. In International Joint Conference on Neural Networks, 2017.   \n[7] N. Bansal and S. Khot. Inapproximability of hypergraph vertex cover and applications to scheduling problems. In S. Abramsky, C. Gavoille, C. Kirchner, F. Meyer auf der Heide, and P. G. Spirakis, editors, Automata, Languages and Programming, pages 250\u2013261, Berlin, Heidelberg, 2010. Springer Berlin Heidelberg.   \n[8] J. Binas, G. Indiveri, and M. Pfeiffer. Spiking analog vlsi neuron assemblies as constraint satisfaction problem solvers. In IEEE International Symposium on Circuits and Systems, 2016.   \n[9] C. Chauve, M. Patterson, and A. Rajaraman. Hypergraph covering problems motivated by genome assembly questions. In T. Lecroq and L. Mouchard, editors, Combinatorial Algorithms, pages 428\u2013432. Springer Berlin Heidelberg, 2013.   \n[10] S. Chiavazza, S. M. Meyer, and Y. Sandamirskaya. Low-latency monocular depth estimation using event timing on neuromorphic hardware. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4071\u20134080, 2023.   \n[11] K. Corder, J. V. Monaco, and M. M. Vindiola. Solving vertex cover via ising model on a neuromorphic processor. In IEEE International Symposium on Circuits and Systems, 2018.   \n[12] M. Davies, N. Srinivasa, T.-H. Lin, G. Chinya, Y. Cao, S. H. Choday, G. Dimou, P. Joshi, N. Imam, S. Jain, Y. Liao, C.-K. Lin, A. Lines, R. Liu, D. Mathaikutty, S. McCoy, A. Paul, J. Tse, G. Venkataramanan, Y.-H. Weng, A. Wild, Y. Yang, and H. Wang. Loihi: A neuromorphic manycore processor with on-chip learning. IEEE Micro, 38(1):82\u201399, 2018.   \n[13] M. Davies, A. Wild, G. Orchard, Y. Sandamirskaya, G. A. F. Guerra, P. Joshi, P. Plank, and S. R. Risbud. Advancing neuromorphic computing with loihi: A survey of results and outlook. Proceedings of the IEEE, 109(5):911\u2013934, 2021.   \n[14] Y. Fang and A. S. Lele. Solving quadratic unconstrained binary optimization with collaborative spiking neural networks. In IEEE International Conference on Rebooting Computing, 2022.   \n[15] F. Glover, G. Kochenberger, R. Hennig, and Y. Du. Quantum bridge analytics i: a tutorial on formulating and using qubo models. Annals of Operations Research, 2022.   \n[16] I. Goodfellow, Y. Bengio, and A. Courville. Deep Learning. MIT Press, 2016. http: //www.deeplearningbook.org.   \n[17] G. A. F. Guerra and S. B. Furber. Using stochastic spiking neural networks on spinnaker to solve constraint satisfaction problems. Frontiers in neuroscience, 2017.   \n[18] Gurobi. https://www.gurobi.com/. Accessed: 2024-05-22.   \n[19] A. Guzzo, A. Pugliese, A. Rullo, and D. Sacc\u00e0. Intrusion detection with hypergraph-based attack models. In M. Croitoru, S. Rudolph, S. Woltran, and C. Gonzales, editors, Graph Structures for Knowledge Representation and Reasoning, pages 58\u201373. Springer International Publishing, 2014.   \n[20] D. S. Johnson and M. A. Trick. Cliques, coloring, and satisfiability: second DIMACS implementation challenge, October 11-13, 1993, volume 26. American Mathematical Soc., 1996.   \n[21] Z. Jonke, S. Habenschuss, and W. Maass. Solving constraint satisfaction problems with networks of spiking neurons. Frontiers in neuroscience, 10:156676, 2016.   \n[22] A. Kumar and L. Vijaykumar. On neuromorphic computing: A case study on radio resource allocation with lava software framework. 2023.   \n[23] J. Leskovec, A. Krause, C. Guestrin, C. Faloutsos, J. M. VanBriesen, and N. S. Glance. Costeffective outbreak detection in networks. In P. Berkhin, R. Caruana, and X. Wu, editors, Proceedings of the 13th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, San Jose, California, USA, August 12-15, 2007, pages 420\u2013429. ACM, 2007.   \n[24] A. R. Mangalore, G. A. Fonseca, S. R. Risbud, P. Stratmann, and A. Wild. Neuromorphic quadratic programming for efficient and scalable model predictive control: Towards advancing speed and energy efficiency in robotic control. IEEE Robotics & Automation Magazine, 2024.   \n[25] P. Merolla, J. V. Arthur, R. Alvarez-Icaza, A. S. Cassidy, J. Sawada, F. Akopyan, B. L. Jackson, N. Imam, C. Guo, Y. Nakamura, B. Brezzo, I. Vo, S. K. Esser, R. Appuswamy, B. Taba, A. Amir, M. Flickner, W. P. Risk, R. Manohar, and D. S. Modha. A million spiking-neuron integrated circuit with a scalable communication network and interface. Science, 345:668 \u2013 673, 2014.   \n[26] S. M. Mniszewski. Graph partitioning as quadratic unconstrained binary optimization (qubo) on spiking neuromorphic hardware. In Proceedings of the International Conference on Neuromorphic Systems.   \n[27] N. Mohseni, P. L. McMahon, and T. Byrnes. Ising machines as hardware solvers of combinatorial optimization problems. Nature Reviews Physics, 4(6):363\u2013379, 2022.   \n[28] T. Moraitis, A. Sebastian, and E. Eleftheriou. Optimality of short-term synaptic plasticity in modelling certain dynamic environments. arXiv preprint arXiv:2009.06808, 2020.   \n[29] J. Nocedal and S. J. Wright. Numerical Optimization. Springer New York, New York, NY, 2006.   \n[30] G. Orchard, E. P. Frady, D. B. D. Rubin, S. Sanborn, S. B. Shrestha, F. T. Sommer, and M. Davies. Efficient neuromorphic signal processing with Loihi 2. In IEEE Workshop on Signal Processing Systems (SiPS), pages 254\u2013259, 2021.   \n[31] C. Ostrau, C. Klarhorst, M. Thies, and U. R\u00fcckert. Comparing neuromorphic systems by solving sudoku problems. In International Conference on High Performance Computing & Simulation, 2019.   \n[32] A. Pierro, P. Stratmann, G. A. F. Guerra, S. Risbud, T. Shea, A. R. Mangalore, and A. Wild. Solving qubo on the loihi 2 neuromorphic processor. arXiv preprint arXiv:2408.03076, 2024.   \n[33] Y. Schnider, S. Woz\u00b4niak, M. Gehrig, J. Lecomte, A. Von Arnim, L. Benini, D. Scaramuzza, and A. Pantazi. Neuromorphic optical flow and real-time implementation with event cameras. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4128\u20134137, 2023.   \n[34] C. D. Schuman, S. R. Kulkarni, M. Parsa, J. P. Mitchell, B. Kay, et al. Opportunities for neuromorphic computing algorithms and applications. Nature Computational Science, 2(1):10\u2013 19, 2022.   \n[35] S. B. Shrestha, J. Timcheck, P. Frady, L. Campos-Macias, and M. Davies. Efficient video and audio processing with loihi 2. In ICASSP 2024-2024 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 13481\u201313485. IEEE, 2024. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "[36] C. Yakopcic, N. Rahman, T. Atahary, T. M. Taha, and S. Douglass. Leveraging the manycore architecture of the Loihi spiking processor to perform quasi-complete constraint satisfaction. In International Joint Conference on Neural Networks, 2020. ", "page_idx": 12}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Algorithm 2 NEBM-based SNN for energy minimization (note: the algorithm is executed for each neuron $n_{i}$ on the neuromorphic hardware in a parallel way; see [13] for details). ", "page_idx": 13}, {"type": "text", "text": "Require: Weight matrix W, temperature $T$ and length of refractory period $r_{i}$ .   \n1: Initialize si(0) $\\bar{s_{i}^{(0)}}\\gets0$ , $\\Delta s_{i}^{(0)}\\gets0$ \u21900, ui $u_{i}^{(0)}\\gets-w_{i i}$ , refract_counter $\\bar{\\mathbf{\\rho}}_{i}^{(0)}\\leftarrow0$   \n2: for each timestep $t$ do   \n3: $\\begin{array}{l}{{\\displaystyle u_{i}^{(t)}\\gets u_{i}^{(t-1)}+\\sum_{\\substack{j\\neq i}}^{N}w_{i j}\\Delta s_{j}^{(t-1)}}}\\\\ {{\\displaystyle p_{i}^{(t)}\\gets\\frac{1}{1+\\exp(u_{i}^{(t)}/T)}}}\\\\ {{\\displaystyle\\theta_{i}\\gets r a n d(0,1)}}\\end{array}$   \n4:   \n5:   \n6: if neuron $n_{i}$ is not in refractory period then   \n7: $\\begin{array}{r}{\\mathbf{if}\\,p_{i}^{(\\iota)}\\geq\\theta_{i}\\,\\mathbf{t}]}\\\\ {s_{i}^{(t)}\\leftarrow1}\\\\ {\\mathbf{else}_{s_{i}^{(t)}\\leftarrow\\,0}}\\end{array}$ hen   \n8:   \n9:   \n10:   \n11: else   \n12: ${s_{i}^{(t)}\\gets s_{i}^{(t-1)}}$   \n13: refract_counteri(t)\u2190max(refract_count i er(t\u22121)\u22121, 0)   \n14: $\\Delta s_{i}^{(t)}\\gets\\bar{s_{i}^{(t)}}-s_{i}^{(t^{\\underline{{\\iota}}}-1)}$   \n15: send $\\Delta s_{i}^{(t)}$ to connected neurons   \n16: if $\\Delta s_{i}^{(t)}\\neq0$ then   \n17: neuron $n_{i}$ enters refractory period   \n18: refract_counte $\\mathbf{\\Phi}_{i}^{(t)}\\leftarrow r_{i}$ ", "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: A novel SNN is introduced to solve HMVC. The derivation in Sec. 4 show the proposed SNN does not require new slack variables, as claimed in the abstract and introduction. The experimental results align with the claims that the proposed SNN consistently yields high quality solutions on synthetic and real HMVC instances where the established method mostly fails (to reach feasibility), and that the proposed SNN measurably consumed less energy on the neurmorphic hardware than the CPU solution. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: Sec. 6 discusses the limitations of the work (see L1 to L4). ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: [NA] Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We have provided a detailed methodology description and pseudo code in Sec. 4. The data generation process and the experiment setup are fully described in Sec. 5. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: We will release all MVC and HMVC problem instances after the peer reviewing period. Release of source code is not possible at the moment due to internal organizational policy and contractual restrictions. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 16}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: We have specified all experiment details in Sec. 5. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 16}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 16}, {"type": "text", "text": "Answer: [No] ", "page_idx": 16}, {"type": "text", "text": "Justification: Error bars are not available due to hardware limitations (see L3 in Sec. 6). Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 16}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 17}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Please refer to Sec. 5 for details. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 17}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We have reviewed and followed the Code of Ethics. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 17}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 17}, {"type": "text", "text": "Justification: The paper focuses on combinatorial optimization at the fundamental level, which does not have immediate societal impacts. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 17}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: High risk data or models are not involved in this research. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 18}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have properly referenced all relevant data, code and papers. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We have provided the pseudo code of the algorithm and all implementation details of the method. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: No crowdsourcing involved. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: No crowdsourcing or research with human subjects involved. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}]