[{"type": "text", "text": "Bileve: Securing Text Provenance in Large Language Models Against Spoofing with Bi-level Signature ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Tong Zhou Northeastern University, Boston zhou.tong1@northeastern.edu ", "page_idx": 0}, {"type": "text", "text": "Xuandong Zhao UC Berkeley xuandongzhao@berkeley.edu ", "page_idx": 0}, {"type": "text", "text": "Xiaolin Xu Northeastern University, Boston x.xu@northeastern.edu ", "page_idx": 0}, {"type": "text", "text": "Shaolei Ren   \nUC Riverside   \nshaolei@ucr.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Text watermarks for large language models (LLMs) have been commonly used to identify the origins of machine-generated content, which is promising for assessing liability when combating deepfake or harmful content. While existing watermarking techniques typically prioritize robustness against removal attacks, unfortunately, they are vulnerable to spoofing attacks: malicious actors can subtly alter the meanings of LLM-generated responses or even forge harmful content, potentially leading to the wrongful attribution of blame to the LLM developer. To overcome this, we introduce a bi-level signature scheme, Bileve, which embeds fine-grained signature bits for integrity checks (mitigating spoofing attacks) as well as a coarse-grained signal to trace text sources when the signature is invalid (enhancing detectability) via a novel rank-based sampling strategy. Compared to conventional watermark detectors that only output binary results, Bileve can differentiate 5 scenarios during detection, reliably tracing text provenance and regulating LLMs. The experiments conducted on OPT-1.3B and LLaMA-7B demonstrate the effectiveness of Bileve in defeating spoofing attacks with enhanced detectability. Code is available at https://github.com/Tongzhou0101/Bileve-official. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Watermarks have been envisioned as a promising method to differentiate content generated by large language models (LLMs) from human [5, 11, 23, 13, 1, 4]. It involves injecting statistical signals into the token sampling process utilizing a secret watermark key. Subsequently, the one who knows the key can verify the content\u2019s origin by assessing the presence of the predefined signal through a statistical test. Current watermarking schemes primarily focus on user-side concerns, striving to achieve robustness against watermark removal attacks (i.e., perturb the generated text to remove the watermark), thereby combatting academic dishonesty and other deceptive practices. ", "page_idx": 0}, {"type": "text", "text": "However, a critical vulnerability remains unaddressed in watermark design: spoofing attacks directed towards model owners. In these attacks, malicious actors attempt to falsely attribute content generated by humans or other models to the targeted model, with the aim of evading accountability1 or damaging the model\u2019s reputation. A few recent works have identified two kinds of spoofing attacks targeting the LLM watermark by exploiting either its symmetric characteristic [6, 15] or learnability [8, 10], as detailed in Sec. 2.3. Furthermore, we propose a new spoofing attack, named semantic manipulation, which enables attackers to alter the sentiment of generated content with minimal token modifications, as described in Sec. 3.2. It assumes the most constrained capabilities of attackers, where they only have access to the victim model\u2019s detector. Due to the robustness of LLM watermarks against perturbations, this attack can manipulate the originally helpful content into something harmful or offensive without compromising the detectability of the watermark, thus successfully achieving spoofing attacks. ", "page_idx": 0}, {"type": "table", "img_path": "vjCFnYTg67/tmp/6872782bdc85a15655240cd6ac26e01dc052ceb8acee35fbf5e99f694d354fd0.jpg", "table_caption": ["Table 1: Comparison of different watermarking methods based on four desired properties. "], "table_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Given the serious consequences of spoofing attacks, it is highly in demand to answer the question: How to avoid an LLM being wrongly blamed? To solve this problem, we aim to design a watermark for LLM, which focuses more on the model owners\u2019 side instead of only watermarking on the users side. To reliably identify the provenance of machine-generated content while being able to defend against the above spoofing attacks, a signature should have the following properties: ", "page_idx": 1}, {"type": "text", "text": "\u2022 Robust: The signature remains capable of tracing the source of machine-generated text even when subjected to certain perturbations, ensuring it is not overly fragile or easily rendered ineffective.   \n\u2022 Unforgeable: The signature is inherently resistant to being learned given the components utilized in its detection.   \n\u2022 Tamper-evident: It should be able to check the integrity of the generated content, showing reliable tampering evidence to safeguard the interests of model owners.   \n\u2022 Transparent: It is detectable without needing access to generation secrets or relying on a black-box API, allowing independent, reliable verification. ", "page_idx": 1}, {"type": "text", "text": "Despite the critical importance, achieving all desired properties in a single LLM watermark remains challenging, as even state-of-the-art (SOTA) designs cannot meet them all (see Tab. 1). Indeed, designing such a watermarking scheme involves a fundamental trade-off between defending against removal attacks and spoofing attacks. Specifically, being robust to removal attacks requires that the watermark\u2019s detectability remains unaffected by certain perturbations, while anti-spoofing demands sensitivity to perturbations to verify text integrity, distinguishing harmful content from genuine model output and tampered content. ", "page_idx": 1}, {"type": "text", "text": "To overcome the above challenges, we propose Bileve, a novel sampling strategy by embedding a bi-level signature into generated tokens. At the coarse-grained level, we utilize statistical signals across the entire text to detect the presence of the watermark, ensuring robustness against perturbations. Concurrently, at the fine-grained level, we integrate content-dependent signature bits into each token to uphold content integrity, which leverages a digital signature scheme to ensure unforgeability, as the secret key required for watermark embedding will be securely held by model owners. This scheme enables transparent detection by allowing verification with a public key instead of embedding secrets, so independent parties can authenticate without proprietary details or a black-box API, ensuring reliable detection. And the tampering evidence will show when these two level detection results are not consistent. ", "page_idx": 1}, {"type": "text", "text": "Our contributions are threefold: 1) We uncover an advanced spoofing attack that exploits the robustness of SOTA watermarking schemes; 2) We introduce Bileve, the first watermarking scheme to simultaneously ensure robustness and unforgeability by embedding a bi-level signature through a novel rank-based sampling strategy; 3) Bileve is capable of distinguishing five distinct scenarios during the detection phase, effectively defeating spoofing attacks and serving as a promising tool to regulate LLM safety mechanism. ", "page_idx": 1}, {"type": "text", "text": "2 Background and Related Works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Language Model Basics ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Let $\\mathcal{M}$ denote a language model with a vocabulary $\\boldsymbol{\\mathcal{V}}$ containing $K:=|\\mathcal{V}|$ tokens. To generate the next token $w_{t}$ , $\\mathcal{M}$ will take prior tokens $w_{1:t-1}$ as the input and output a vector of logits $l^{(t)}$ , which is transformed into a probability distribution $\\boldsymbol{D^{(t)}}=(p_{1}^{(t)},...,p_{K}^{(t)})$ via the softmax function. Then the sampling strategy is applied to determine how the model selects $w_{t}$ based on $\\mathbf{\\boldsymbol{D}}^{(t)}$ . One common sampling strategy is multinomial sampling, where $\\mathcal{M}$ randomly selects the next token from \ue242according to the probabilities \ud835\udc5d(\ud835\udc58\ud835\udc61) assigned to each token. This process is repeated iteratively to generate a sequence of tokens. ", "page_idx": 1}, {"type": "table", "img_path": "vjCFnYTg67/tmp/ff6af8acee5ea3765a4699ea7b930bbc1f463e0c68d0234ac855514bdc85ed36.jpg", "table_caption": ["Table 2: Three categories of spoofing attacks (ranked by attackers\u2019 capabilities from high to low). "], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "2.2 LLM Watermarks ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Watermarks for model-generated texts are used to identify the provenance of the text, ensuring accountability in cases where generated content needs to be traced back to a specific LLM. The existing watermark schemes rely on the specialized decoding algorithm to embed statistical signals into generated contents, then enabling watermark detection via computing p-value [1, 11, 23, 4, 13]. For instance, for generating the next token, one approach dynamically partitions the vocabulary into green and red lists based on its previous few tokens and a watermark key [11], then increasing the logits of green tokens to enhance their chance of being selected. During detection, the watermark detection key is used to count the number of green tokens in the text, with the calculated z-statistic indicating the existence of the watermark. Moreover, Zhao et al. [23] simplify the scheme proposed in [11] by fixing the green-red list for each token, demonstrating that their watermark is twice as robust to edit as [11]. Furthermore, unlike modifying logits, a distortion-free watermark is proposed to preserve the original text distribution [13]. It leverages robust sequence alignment to align watermarked text to a watermark key sequence in the sampling phase, e.g., using exponential minimum sampling. ", "page_idx": 2}, {"type": "text", "text": "However, these watermarking schemes only enable detection by individuals possessing the key, which doesn\u2019t facilitate transparent regulation. On one hand, making the key public is susceptible to attacks [15]. On the other hand, maintaining detection privately (e.g., via APIs) compromises reliability, as it functions as a black box, allowing the model owner to manipulate detection results. ", "page_idx": 2}, {"type": "text", "text": "2.3 Spoofing Attacks ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Spoofing attacks can fall into three categories based on the capability of attackers, and each of them exploits different vulnerabilities in SOTA watermarks, as summarized in Tab. 2. First, due to the watermark embedding and detection process sharing the same secret key (i.e., symmetric schemes), the semi-honest detector knowing the secret key can embed the watermark to any content. Such a vulnerability has been discussed in [6, 15], where they design asymmetric watermarking schemes so that detection does not rely on the key used for embedding. Specifically, [6] proposes embedding watermarks using digital signature algorithms, ensuring that only model owners possess the secret key for watermark embedding while providing detectors with access to the public key for detection. However, it is easily broken once the message tokens are perturbed. Besides, it suggests using error-correcting encoding to improve robustness, which unfortunately would increase the risk of spoofing attacks and should not be adopted. Moreover, [15] employs two distinct neural networks for watermark embedding and detection, leveraging an asymmetric scheme for public detection. ", "page_idx": 2}, {"type": "text", "text": "However, [15] is based on [11] and thus can be learned as studied in [8], which is the second kind of spoofing attacks. In particular, [8] demonstrated that, by querying the victim model and collecting its watermarked samples, attackers can fine-tune an adversary model utilizing a sampling-based watermark distillation technique to learn the watermark (detailed in Appendix A). The fine-tuned adversary model can respond to any malicious requests, with the response containing the watermark of the victim model. Recently, an independent work also proposed attacks by exploiting watermark robustness [18]. Beyond techniques such as randomly inserting toxic tokens or modifying tokens to alter sentence accuracy, our attack leverages a reward model to guide targeted semantic manipulation. More importantly, while they suggest compromising watermark robustness to mitigate spoofing attacks, our work demonstrates how to achieve effective mitigation without sacrificing robustness. ", "page_idx": 2}, {"type": "text", "text": "3 Potential Attack: Semantic Manipulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Threat Model ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Attackers\u2019 Objective. Given text generated by the victim LLM, attackers seek to alter the semantic meaning of the text with minimal changes, transitioning it from something helpful or neutral to harmful or offensive. Owing to the robustness of the existing watermarks, the watermark detector can still identify the presence of the watermark in the modified content. Consequently, the altered content erroneously attributes its origin to the victim model, potentially damaging the model\u2019s reputation. ", "page_idx": 3}, {"type": "text", "text": "Attackers\u2019 Capability. Contrary to existing spoofing attacks, our approach assumes the strictest attacker capabilities, where the adversary only gains access to the watermark detector, as outlined in Tab. 2. These attackers lack knowledge of the secret key and are not required to query the victim LLM multiple times to acquire watermarked samples for training other adversary models. They may utilize public language models to enhance the efficiency of their attacks. ", "page_idx": 3}, {"type": "text", "text": "3.2 Attack Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We identify the dilemma of being robust and unforgeable. In particular, being robust indicates that the watermark should be preserved after perturbation, thus we can exploit this characteristic to design a novel spoofing attack. Specifically, attackers can query the victim model with harmless prompts, and then use basic word replacement techniques to change its semantic meaning to be toxic or harmful. Due to the robustness properties of LLM watermarks, the detectability will not be compromised if the portion of word replacement is low. Consequently, a detector cannot discern whether the content originated from the victim model or was manipulated by malicious actors. This highlights the limitation of current watermarks for auditing LLMs. ", "page_idx": 3}, {"type": "text", "text": "By exploiting the above observation, we propose a novel spoofing attack. Let $w^{\\mathrm{orig}}$ denote the original response of victim models, and $w^{\\mathrm{att}}$ represent its manipulated version. The goal is to generate $w^{\\mathrm{att}}$ that maximizes the change in sentiment while minimizing the Levenshtein distance between the original and manipulated responses. The problem can be formulated as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{w^{\\mathrm{att}}}\\Delta R=R(w^{\\mathrm{orig}})-R(w^{\\mathrm{att}}),\\;\\mathrm{~s.t.~}\\;\\mathrm{LD}(w^{\\mathrm{orig}},w^{\\mathrm{att}})\\leq\\epsilon T\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, $\\Delta R$ represents the sentiment change, defined as the difference between the reward scores (denoted by $R(\\cdot))$ of the original and manipulated responses obtained by the reward model. A lower score of the reward model indicates less alignment with human feedback, such as a toxic response. The Levenshtein distance, denoted by $\\mathrm{LD}(t_{1},t_{2})$ , measures the minimum number of word edits required to transform text $t_{1}$ into text $t_{2}$ . $T$ is the length of $w^{\\mathrm{orig}}$ and $\\epsilon$ is the word edit budget. A trade-off exists in choosing $\\epsilon$ , wherein a larger value affords greater flexibility in manipulating the semantic meaning of $w^{\\mathrm{orig}}$ , while a smaller value better preserves the detectability of the watermarks. To strike a balance, we opt for a larger $\\epsilon$ to maximize semantic alteration and introduce a tuning factor $\\alpha\\in(0,1)$ to adjust $\\epsilon$ in case the detectability is broken. Furthermore, instead of manually replacing the words in $w^{\\mathrm{orig}}$ , attackers can simply leverage a powerful and accessible LLM (denoted as $Q$ ) to execute such attacks efficiently. To enhance the generation quality while meeting the constraint, attackers can apply in-context learning by providing a few task demonstrations. We summarize the algorithm with more details of task demonstrations in Appendix B. ", "page_idx": 3}, {"type": "text", "text": "4 Proposed Defense ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "With the above attack, in conjunction with other existing spoofing attacks, we can recognize the vulnerability of current watermark schemes. This underscores the importance of designing secure schemes to defend against spoofing attacks and achieve all properties listed in Tab. 1, ensuring reliable identification of text provenance. ", "page_idx": 3}, {"type": "image", "img_path": "vjCFnYTg67/tmp/27c51a7b46d5e0a7f5ff49de5c06e36beb9b4bc6e75a61cf45ad16d91fc53068.jpg", "img_caption": ["Figure 1: Overview of Bileve. (a) Embedding: The first \ud835\udc5atokens from \ue239form the message, which is signed using a secret key. Candidate tokens are selected via a rank-based strategy employing a Weighted Rank Addition (WRA) score, with a coarse-grained signal embedded. It then embeds the fine-grained signature by choosing the first candidate matching the designated signature bit. (b) Detection: We first extract the message-signature pair to conduct an integrity check using the public key. A statistical test is performed if necessary. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "4.1 Single-level Signature ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "To enable secure and reliable text attribution, we first examine the vulnerabilities exploited by attackers in conducting spoofing attacks, including symmetry, learnability, and robustness, as summarized in Tab. 2. In particular, previous methods embed the statistical signal into the generated texts [11, 23, 13, 1], so as to identify the existence of a watermark during detection. Such statistical signal is consistent for every text, thus enabling the adversary model to learn the watermark rule can forge it. Therefore, to defend against spoofing attacks, we seek the opposite characteristics, i.e., asymmetric, unlearnable, and perturbation-sensitive, in the solution. ", "page_idx": 4}, {"type": "text", "text": "We envision the digital signature as a promising solution as in [6], where the scheme is defined as SLS = (\ud835\uddaa\ud835\uddbe\ud835\uddd2\ud835\udda6\ud835\uddbe\ud835\uddc7, \ud835\uddb2\ud835\uddc2\ud835\uddc0\ud835\uddc7, \ud835\udda4\ud835\uddc6\ud835\uddbb\ud835\uddbe\ud835\uddbd, \ud835\uddb5\ud835\uddbe\ud835\uddcb\ud835\uddc2\ud835\uddbf\ud835\uddd2), where: ", "page_idx": 4}, {"type": "text", "text": "\u2022 $\\mathsf{K e y G e n}\\to(\\mathsf{s k},\\mathsf{p k})$ outputs a public key pair $(\\mathsf{s k},\\mathsf{p k})$ , where $\\mathsf{p k}$ is public while $\\mathtt{s k}$ is held by the owner of model $\\mathcal{M}$ .   \n\u2022 $\\mathrm{Sign}_{\\mathrm{sk}}(\\mathbf{m})\\rightarrow\\pmb{\\sigma}$ uses $\\mathtt{s k}$ to sign the digest of the message $\\mathbf{m}:=w_{1:m}$ via the hash function $H$ (e.g., MD5) and obtain the signature ${\\pmb{\\sigma}}=\\mathsf{s k}\\times H(\\mathbf{m})$ .   \n\u2022 ${\\mathsf{E m b e d}}(\\sigma)\\to w$ embeds signature into subsequent tokens following $w_{m}$ , and outputs $w$ incorporating the message-signature pair $(\\mathbf{m},\\sigma)$ .   \n\u2022 \ud835\uddb5\ud835\uddbe\ud835\uddcb\ud835\uddc2\ud835\uddbf $y_{\\mathsf{p k}}(w)\\to\\{\\mathsf{t r u e,f a l s e}\\}$ extracts ${\\pmb{\\sigma}}=\\mathbf{s}\\mathbf{k}\\times H(\\mathbf{m})$ from $w$ and verifies it using the public key \ud835\uddc9\ud835\uddc4. If verification succeeds, it outputs \ud835\ude9d\ud835\ude9b\ud835\ude9e\ud835\ude8e; otherwise, it outputs \ud835\ude8f\ud835\ude8a\ud835\ude95\ud835\ude9c\ud835\ude8e. ", "page_idx": 4}, {"type": "text", "text": "Unlike the digital signature methods, which typically attach signatures as metadata [20, 19], SLS assigns the first few tokens as the message and uses the following tokens to carry the signatures. Specifically, the key idea of \ud835\udda4\ud835\uddc6\ud835\uddbb\ud835\uddbe\ud835\uddbdis to embed signature bits into tokens, ensuring that the block hashes to the corresponding signature bit (e.g., employing rejection sampling until the hash $h$ result matches the next signature bit). This method keeps the message-signature pair self-contained within the generated text, enabling verification solely based on the generated content. Such a scheme satisfies the above characteristics since a digital signature uses the secret key for embedding and the public key for verification, ensuring asymmetry. The signature is content-dependent, so the signature for different generations is also different. Also, it is dependent on the secret key, which cannot be inferred by attackers, making it impossible to learn. Its ability to check integrity is proved in cryptography, where even a single modification will cause verification failure. ", "page_idx": 4}, {"type": "text", "text": "However, two problems arise in this scheme: 1) digital signature is too fragile, which hinders its applicability to the real world for attributing the text. In particular, even a single token insertion or deletion would lead to a verification failure, and the trace of the target LLM will easily disappear. 2) In cases where token replacement occurs and the replaced token hashes to the same signature bit as the original token, the signature remains unaffected. However, such replacements undermine the text\u2019s integrity without detection, which is referred to as the \u201csignature preservation attack\u201d. ", "page_idx": 4}, {"type": "text", "text": "Require: Language model $\\mathcal{M}$ , secret key \ud835\uddcc\ud835\uddc4, message length $m$ , random key sequence \u039e   \n1: Apply cyclic shift to $\\Xi$   \n2: for $t=1,\\cdots,m$ do   \n3: Apply $\\mathcal{M}$ to prior tokens and sample $w_{t}$ with $\\Xi_{t}$ involved (Eq. 2)   \n4: end for   \n5: Apply a hash function on $w_{1:m}$ to get the digest of message   \n6: Use \ud835\uddcc\ud835\uddc4to sign the digest to obtain the signature and convert it into a bit string $B$   \n7: for $t=m+1,\\cdots,m+b+1$ do   \n8: Apply $\\mathcal{M}$ to prior tokens to get a score vector $W R A^{(t)}$ over $\\boldsymbol{\\mathcal{V}}$   \n9: $\\{w_{t,1},\\cdots,w_{t,K}\\}\\gets\\mathbb{S}$ orted tokens based on their logits in descending order   \n10: for $k=1$ to $K$ do   \n11: if $h(w_{t,k})=B_{t-m}$ then   \n12: $w_{t}\\gets w_{t,k}$ ; break   \n13: end for   \n14: end for ", "page_idx": 5}, {"type": "text", "text": "4.2 Bi-level Signature (Bileve) ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We introduce Bileve, a bi-level signature scheme that improves upon the SLS in terms of detectability and security. At the fine-grained level, Bileve embeds the message-signature pair to verify content integrity, while the coarse-grained level incorporates a robust signal to boost detectability. Following [1, 13], we design the signal as a random watermark key sequence $\\xi\\sim\\operatorname{Unif}([0,1]^{K})$ . We propose a ranking-based sampling strategy to embed $\\xi$ into generated tokens, where the objective is to let the randomness affect the sampling outcome but the selected token is also expected to have a large probability of preserving the generation quality. ", "page_idx": 5}, {"type": "text", "text": "Generation. We propose a weighted rank addition $(W R A)$ score for each token in $\\mathcal{V}$ to rank the candidate tokens instead of ranking them based on probability like conventional methods [14]. In particular, given a probability vector $p$ of $w_{t}$ and a pre-defined random sequence $\\xi$ (both of dimension $K$ ), $W R A$ is calculated by (we omit $t$ for simplicity): ", "page_idx": 5}, {"type": "equation", "text": "$$\nW R A_{k}=\\mathrm{R}(P_{k})+\\gamma\\cdot\\mathrm{R}(\\xi_{k}),\\quad k\\in[1,K]\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathsf{R}(p_{k})$ and $\\mathbb{R}(\\xi_{k})$ are the rank scores for $k$ -th token based on $p$ and $\\xi$ , respectively, determined by their order when values are sorted in ascending order (e.g., if $p_{k}$ is the smallest one in $p$ , then $\\boldsymbol{\\mathrm{R}}(\\boldsymbol{p}_{k})$ is 0). Besides, by adjusting the hyperparameter $\\gamma$ (where $\\gamma<1,$ ), we enhance the impact of higher probabilities while still allowing for randomness to affect the outcome. During generation, we rank token candidates by favoring larger $W R A$ $\\Lsh$ in Fig. 1). When sampling tokens carrying signature bits, we incorporate an additional signature bit matching step by selecting the first candidate token that, through the hash function $h$ , maps to the predetermined signature bit ( $\\circledcirc$ in Fig. 1). ", "page_idx": 5}, {"type": "text", "text": "Besides, we enhance the diversity of generation by using the shift-generate algorithm [13] (detained in Appendix C). This involves pre-generating $n\\,\\xi$ sequences and iteratively decoding tokens using sequences \u039e = (\ud835\udf09\ud835\udc51, \ud835\udf09\ud835\udc51+1, . $\\Xi=(\\xi^{d},\\,\\xi^{d+1},\\,...,\\,\\bar{\\xi}^{n},\\,\\bar{\\xi}^{0},\\,...,\\,\\xi^{d-1})$ , where $\\textit{d}\\in\\lbrack0,n)$ shifts with each new response generation. Such a shifting strategy ensures that $\\mathcal{M}$ can generate diverse tokens even if their prefix tokens are the same, and iterative decoding ensures that generated tokens $w$ align well with \u039e. The rank-based sampling strategy with shift-generate is summarized in Alg. 1. Thus, although a signature preservation attack may maintain alignment with the signature, it is less likely to simultaneously align well with $\\Xi$ sequences, thereby effectively mitigating such attacks. ", "page_idx": 5}, {"type": "text", "text": "Statistical Test. Following [13], we define the alignment cost as ", "page_idx": 5}, {"type": "equation", "text": "$$\nd(w,\\Xi):=\\frac{1}{T}\\sum_{t=1}^{T}\\log(1-\\Xi_{t,w_{t}})\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "If the text $w$ generated by $\\mathcal{M},\\Xi_{t,w_{t}}$ will be large due to Eq. 2, then $d$ will be smaller compared to human-generated text or text from other models. Thus, we test $w_{t}$ with random $\\Xi^{\\prime}$ for $N$ times, and got p-value as $\\begin{array}{r}{\\frac{1}{N+1}(1+\\sum_{i=1}^{N}1\\{d(w,\\Xi^{\\prime})\\le d(w,\\Xi)\\})}\\end{array}$ ) for the null hypothesis that $w$ is not generated by . Hence, a small p-value (e.g., $_{<0.01}$ when $N{=}100$ ) indicates is high likely from . For checking the signature preservation attack, we run a local alignment, i.e., splitting $w$ into several segments, if the ${\\bf p}$ -value for a certain segment is larger than the rest, then it indicates the token replacement happens in that segment with their associated signature bits unchanged. When signature validation fails, we run a global alignment test, with Eq. 2 enhanced by Levenshtein distance to be robust against insertion and deletion, as detailed in Appendix D. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Detection. With detectors getting access to ${\\mathsf{p k}},h$ , and \u039e, they will apply two primary methods during detection: extracting the message-signature pair for integrity verification using the public key \ud835\uddc9\ud835\uddc4, and conducting statistical tests. The verification process is described as follows: Step 1: Check the signature at a fine-grained level ( $\\textcircled{1}$ in Fig. 1). If the signature is valid and model owners raise no doubts, verification is completed, and the text attribution is assigned to the target LLM (Case 1). Step 2: If the signature is valid but the model owner identifies suspicious content (e.g., potentially offensive material not in line with their model\u2019s safety mechanisms), they can conduct a local alignment test ( $\\textcircled{2}$ in Fig. 1). Abnormal results suggest signature replacement (Case 2), while normal results suggest that there is a high chance that the safety mechanisms of target LLM require improvement (Case 3). Step 3: If the signature is invalid, examine the coarse-grained signal through a global alignment test ( $\\textcircled{2}$ in Fig. 1). A small p-value serves as tampering evidence that the content originates from the targeted LLM but has been altered (Case 4). Otherwise, it suggests the text originates from a source other than the targeted LLM (Case 5). Overall, Bileve can differentiate 5 cases with the bi-level signature, reliably tracing the text provenance with mitigating spoofing attacks. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we evaluate our approach from multiple perspectives, including detectability, generation quality, and security. Specifically, given that our method is asymmetric and unlearnable due to its cryptographic design, our focus is solely on assessing its efficacy in defending against spoofing attacks that exploit robustness, i.e., semantic manipulation. Additionally, we demonstrate the effectiveness of the bi-level signature in tackling the challenges encountered by the single-level signature, i.e., fragility and signature preservation attacks. ", "page_idx": 6}, {"type": "text", "text": "5.1 Experimental Setup ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Datasets and Models. We conduct experiments using two publicly available LLMs: OPT-1.3B [22] and LLaMA-7B [21]. Our evaluation employs two datasets: 1) OpenGen [12] for text completion task, consisting of 3K two-sentence samples from WikiText-103 [17], with the first sentence as the prompt and the second as the human completion; 2) LFQA [12] for long-form question answering task, consisting of 3K question-answer pairs, where we use questions as prompt and answers as human-written answers in experiments. ", "page_idx": 6}, {"type": "text", "text": "Evaluation. To measure detectability, we use metrics, including the True Positive Rate (TPR), False Positive Rate (FPR), and F-1 score. We use LLaMA-13B as the oracle language model to compute perplexity (PPL) for evaluating the generation quality, which is defined as the exponentiated average negative log-likelihood of a sequence. ", "page_idx": 6}, {"type": "text", "text": "Schemes. To assess the effectiveness of Bileve, we conduct a comparative analysis with two stateof-the-art schemes. The first scheme, Unigram [23], stands out for its robustness against removal attacks. The second scheme, as proposed in [6], employs cryptographic techniques to defeat spoofing attacks, denoted as the SLS in this work. ", "page_idx": 6}, {"type": "text", "text": "Settings. For Unigram, we set watermark strength to 2.0 and a green list ratio to 0.5, where the threshold of ${\\bf Z}$ -score for detection is 6.0 and set FPR as 0.01 during detection. The nucleus sampling [9] is employed to introduce randomness for Unigram and SLS. Also, for SLS, we generate 300 tokens with the first 44 tokens as the message and the rest 256 tokens as the signature bit (the signature length for Bileve is 256-bit). This also applies to Bileve, except we use rank-based sampling with the \ud835\udefeset to 0.001. We set $n$ for shift-generate to 300 and $N{=}100$ for detection. All experiments are conducted on NVIDIA A100 GPUs. ", "page_idx": 6}, {"type": "table", "img_path": "vjCFnYTg67/tmp/bf618e868352503b6c630ba4e7659b26c4518f8f71f9763721e7259ce8ae1a3f.jpg", "table_caption": ["Table 3: The detectability of different schemes with OPT-1.3B. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "vjCFnYTg67/tmp/b0b6a8a5bbba3a6196073eea895e10d208c596dc5d15743f05a96d7bcb77f884.jpg", "img_caption": ["Figure 2: The alignment cost of human vs LLM. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "5.2 Detectability ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "As demonstrated in Tab. 3, we evaluate the detectability of each scheme under two scenarios: no edits to the generated text, and editing involving $10\\%$ of the tokens (through random deletion, addition, and replacement). In the unedited scenario, both SLS and Bileve surpass Unigram in FPR and F1 scores. This superiority is due to the use of digital signatures in SLS and Bileve, which ensure integrity by making the signature $\\pmb{\\sigma}$ content-dependent on \ud835\udc26and signed by \ud835\uddcc\ud835\uddc4. This setup prevents texts not produced by the target LLM from passing verification with \ud835\uddc9\ud835\uddc4. ", "page_idx": 7}, {"type": "text", "text": "Furthermore, Bileve excels when $10\\%$ of tokens are edited, maintaining a high F1 score (0.999) and achieving an FPR of 0. This contrasts sharply with SLS, whose F1 score becomes inapplicable due to both TPR and FPR dropping to 0, illustrating the fragility of the SLS scheme. In contrast, Bileve can leverage coarse-grained level signal to test global alignment with \u039e. The resulting p-value $<0.01$ indicates the source of perturbed text is from the target LLM. The failure of verification caused by disrupted message-signature pair along with the small p-value serve as the tampering evidence for texts from target LLM. Furthermore, alignment cost analysis in Bileve (Fig. 2) shows machinegenerated texts aligning with the key sequence $\\Xi$ incur lower costs than human-written texts, aiding in provenance tracing and distinguishing Case 5. ", "page_idx": 7}, {"type": "text", "text": "5.3 Generation Quality ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We measure the perplexity of texts generated by various schemes, with results of OPT-1.3B shown in Fig. 3 and LLaMA shown in Appendix E. The perplexity of Unigram is close to that of human text, which serves as our baseline. In contrast, the perplexities of SLS and Bileve are relatively higher. This increase is attributed to the need for embedding digital signature bits into tokens precisely. Such embedding may lead to the selection of tokens that, while matching the signature bits, are not the optimal choice, thus increasing perplexity. Notably, Bileve uses rank-based sampling with shift-generate instead of SLS\u2019s nucleus sampling, achieving a $23.08\\%$ perplexity reduction on OpenGen using OPT-1.3B, as tokens with higher $W R A$ scores better preserve textual coherence. ", "page_idx": 7}, {"type": "image", "img_path": "vjCFnYTg67/tmp/8c8d6327540938608f973b1d91a406a287dcc3de283189a31b1b4e40e994ce11.jpg", "img_caption": ["Figure 3: The perplexity of applying different schemes to OPT-1.3B "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "While our method exhibits higher perplexity than Unigram, human evaluation reveals no noticeable degradation in generation quality, with examples available in Appendix F. This discrepancy may result from Unigram\u2019s lower perplexity due to repetitive text generation, as recent studies indicate that model perplexity often favors repetition [6]. To further assess quality, we conduct zero-shot evaluations using GPT-4 Turbo, following the approach in [6], where higher scores represent better quality. On the question-answering task with OPT-1.3B, Bileve and Unigram achieve scores of $16{\\pm}6.52\\$ and $16{\\pm}9.62\\$ , respectively. ", "page_idx": 7}, {"type": "image", "img_path": "vjCFnYTg67/tmp/771275535d7d8195f3a9535bff9e22bbbda6b6fb6fe91975a7eca2bda5d65550.jpg", "img_caption": ["Figure 4: The p-value and alignment cost of each segment. "], "img_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "vjCFnYTg67/tmp/c532a2c56d3cb69d7b4dba39c866d8c1ceaed6e5b35904292ebaf1e33494fa8b.jpg", "table_caption": ["Table 4: The results of semantic manipulation attacks, with w/o indicting benign generations and w/ indicating semantic manipulation attacks by perturbing tokens (shown in red). "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.4 Security ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Against Signature Preservation Attack The signature preservation attack occurs only when attackers replace tokens in a way that satisfies Line 11 in Alg. 1. This is challenging, as attackers have to find tokens also maintain contextual coherence at the same time. We demonstrate that, although rare, when attackers meet these conditions, Bileve can detect such attacks through local alignment testing. We split $w$ into 5 segments and perform the signature preservation attack on the third one as a case study. The local alignment test returns a p-value for each segment, as shown in Fig. 4. Using the p-values of the rest segments as baselines, segment 3 has an abnormally high p-value, indicating misalignment with key sequence \u039e. Moreover, we further explore the alignment cost and show the best 10 alignment scores among 300 shifts, with the lowest cost as the deciding factor. The results in Fig. 4 show the best alignment cost of segment 3 after the attack has increased from -2.5 to -1.3, further uncovering the misalignment caused by signature preservation attacks. ", "page_idx": 8}, {"type": "text", "text": "Against Semantic Manipulation Here, we conduct a semantic manipulation attack on Unigram, SLS, and Bileve. Note that even a single successful attack could jeopardize the model\u2019s reputation. As shown in Tab. 4, due to the robustness of Unigram, after replacing a few tokens to change the tone from neutral to offensive, the ${\\bf Z}\\cdot$ -score remains high enough $(>\\!6)$ to show the watermark, demonstrating its inefficacy in differentiating such spoof attacks. In the case of SLS, semantic manipulation perturbs embedded signature bits, leading to verification failure. If the message tokens are perturbed, the verification fails as well due to the unmatched results (see Fig. 1 (b)). In contrast, although signature bits in Bileve are also perturbed by attacks, the small p-value of the statistical test indicates the text is generated by the target LLM (with tampering since digital signature verification fails). ", "page_idx": 8}, {"type": "text", "text": "6 Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Limitation and Potential Optimization While the effectiveness and security are well demonstrated, the efficiency and generation quality of Bileve can be improved by adopting the following strategies. Firstly, it is unnecessary to apply Bileve for prompts characterized by low entropy, such as those involving manual token replacements. Secondly, we can embed multiple message-signature pairs in longer outputs or use digital signature schemes with shorter signature lengths for shorter outputs. Thirdly, similar to [16], we can adopt an adaptive embedding strategy, i.e., signature embedding into tokens can be skipped when their entropy levels are low, thus maintaining the natural flow of the text. Lastly, we can embed a single signature bit across a block of tokens, rather than into individual tokens, which is promising to improve text perplexity by reducing disruptions in token coherence [6]. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Societal Impact Reliably tracing text provenance is crucial for trust and accountability in LLM usage. Unlike previous mechanisms that only yield binary results\u2014whether text originates from target LLMs\u2014Bileve can distinguish five scenarios, enhancing the defense against spoofing attacks and improving LLM regulation. Bileve effectively differentiates between jailbreaking (bypassing safety mechanisms to generate harmful content [24, 3]) and spoofing (altering benign outputs to create harmful content [2]), which can damage an AI\u2019s reputation. By embedding bi-level signatures, Bileve not only preserves content integrity but also detects tampering, clearly identifying genuine security breaches from fraudulent imitations. Thus, Bileve advances the societal goals of ensuring safe, transparent, and accountable LLM regulation. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we propose a bi-level signature scheme, named Bileve, which integrates robust statistical signals with fine-grained signature bits, ensuring that the watermark remains detectable through perturbations while simultaneously verifying content integrity. The explicit tampering evidence generated by our watermark helps safeguard model owners\u2019 interests and enhances the accountability mechanisms necessary for ethical LLM utilization. As demonstrated in experiments, Bileve not only maintains generation quality but also supports robust, tamper-evident signatures that can discern between genuine and manipulated content. Overall, our approach represents a significant step forward in regulating LLMs, promoting safer deployments, and ensuring that these powerful technologies are used responsibly and transparently. ", "page_idx": 9}, {"type": "text", "text": "8 Acknowledgement ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported in part by the U.S. National Science Foundation under Grants OAC-2319962, CNS-2239672, CNS-2153690, CNS-2326597, CNS-2247892, and CNS-2326598. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Scott Aaronson. Simons institute talk on watermarking of large language models, 2023.   \n[2] Federico Bianchi and James Zou. Large language models are vulnerable to bait-and-switch attacks for generating harmful content. arXiv preprint arXiv:2402.13926, 2024.   \n[3] Xuan Chen, Yuzhou Nie, Wenbo Guo, and Xiangyu Zhang. When llm meets drl: Advancing jailbreaking efficiency via drl-guided search. arXiv preprint arXiv:2406.08705, 2024.   \n[4] Miranda Christ, Sam Gunn, and Or Zamir. Undetectable watermarks for language models. In The Thirty Seventh Annual Conference on Learning Theory, pages 1125\u20131139. PMLR, 2024.   \n[5] Google DeepMind, 2024. https://deepmind.google/discover/blog/watermarkingai-generated-text-and-video-with-synthid/.   \n[6] Jaiden Fairoze, Sanjam Garg, Somesh Jha, Saeed Mahloujifar, Mohammad Mahmoody, and Mingyuan Wang. Publicly detectable watermarking for language models. arXiv preprint arXiv:2310.18491, 2023.   \n[7] James Farrell, 2023. https://siliconangle.com/2023/04/27/tesla-defenselawyers-say-elon-musks-past-statements-autopilot-safety-deepfakes/.   \n[8] Chenchen Gu, Xiang Lisa Li, Percy Liang, and Tatsunori Hashimoto. On the learnability of watermarks for language models. In The Twelfth International Conference on Learning Representations, 2024.   \n[9] Ari Holtzman, Jan Buys, Li Du, Maxwell Forbes, and Yejin Choi. The curious case of neural text degeneration. In International Conference on Learning Representations, 2019.   \n[10] Nikola Jovanovi\u0107, Robin Staab, and Martin Vechev. Watermark stealing in large language models. In Forty-first International Conference on Machine Learning, 2024.   \n[11] John Kirchenbauer, Jonas Geiping, Yuxin Wen, Jonathan Katz, Ian Miers, and Tom Goldstein. A watermark for large language models. In Proceedings of the 40th International Conference on Machine Learning, volume 202 of Proceedings of Machine Learning Research, pages 17061\u2013 17084. PMLR, 23\u201329 Jul 2023.   \n[12] Kalpesh Krishna, Yixiao Song, Marzena Karpinska, John Frederick Wieting, and Mohit Iyyer. Paraphrasing evades detectors of AI-generated text, but retrieval is an effective defense. In Thirty-seventh Conference on Neural Information Processing Systems, 2023.   \n[13] Rohith Kuditipudi, John Thickstun, Tatsunori Hashimoto, and Percy Liang. Robust distortionfree watermarks for language models. Transactions on Machine Learning Research, 2024.   \n[14] Junyi Li, Tianyi Tang, Wayne Xin Zhao, Jian-Yun Nie, and Ji-Rong Wen. Pre-trained language models for text generation: A survey. ACM Computing Surveys, 56(9):1\u201339, 2024.   \n[15] Aiwei Liu, Leyi Pan, Xuming Hu, Shuang Li, Lijie Wen, Irwin King, and Philip S. Yu. A private watermark for large language models. In The Twelfth International Conference on Learning Representations, 2024.   \n[16] Yepeng Liu and Yuheng Bu. Adaptive text watermark for large language models. In Forty-first International Conference on Machine Learning, 2024.   \n[17] Stephen Merity, Caiming Xiong, James Bradbury, and Richard Socher. Pointer sentinel mixture models. In International Conference on Learning Representations, 2016.   \n[18] Qi Pang, Shengyuan Hu, Wenting Zheng, and Virginia Smith. No free lunch in llm watermarking: Trade-offs in watermarking design choices. arXiv preprint arXiv:2402.16187, 2024.   \n[19] Md Sagar Hossen, Tasfia Tabassum, Md Ashiqul Islam, Rafat Karim, Laila Sultana Rumi, and Aysha Akter Kobita. Digital signature authentication using asymmetric key cryptography with different byte number. In Evolutionary Computing and Mobile Sustainable Networks: Proceedings of ICECMSN 2020, pages 845\u2013851. Springer, 2021.   \n[20] SR Subramanya and Byung K Yi. Digital signatures. IEEE Potentials, 25(2):5\u20138, 2006.   \n[21] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023.   \n[22] Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen, Christopher Dewan, Mona Diab, Xian Li, Xi Victoria Lin, et al. Opt: Open pre-trained transformer language models. arXiv preprint arXiv:2205.01068, 2022.   \n[23] Xuandong Zhao, Prabhanjan Vijendra Ananth, Lei Li, and Yu-Xiang Wang. Provable robust watermarking for AI-generated text. In The Twelfth International Conference on Learning Representations, 2024.   \n[24] Xuandong Zhao, Xianjun Yang, Tianyu Pang, Chao Du, Lei Li, Yu-Xiang Wang, and William Yang Wang. Weak-to-strong jailbreaking on large language models. arXiv preprint arXiv:2401.17256, 2024. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "A Fine-tune an Adversary Model ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "A recent work has identified a spoofing attack against LLM watermarks [8]. In particular, the process involves querying the victim model for watermarked samples, followed by fine-tuning an adversary model $A$ parameterized by $\\theta$ on these samples using a sampling-based watermark distillation technique, as described in Alg. 2, where the fine-tuning can be achieved by minimizing the loss function: ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathcal{L}_{A}(\\theta)=-\\frac{1}{\\left|W S\\right|}\\sum_{w\\in W S}\\sum_{t=2}^{\\mathtt{l e n}(w)}\\log p_{\\theta}\\left(w_{t}\\mid w_{1:t-1}\\right)\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "Once fine-tuned, the adversary model is capable of responding to malicious requests. The response $w^{\\mathrm{spoof}}$ , characterized by a low watermark detection $\\mathbf{p}.$ -value, may be erroneously attributed to the victim model. ", "page_idx": 11}, {"type": "text", "text": "Algorithm 2 Watermark Forgery   \nRequire: Victim model $V$ , adversary model $A$   \n1: Watermarked samples $W S\\gets$ Query $V$   \n2: Filter out refusals from WS   \n3: Fine-tune $A$ on WS following Eq. 4 to enable $A$ to mimic the sampling outcomes of \ud835\udc49   \n4: $w^{\\mathrm{spoof}}\\leftarrow$ Query $A$ with malicious prompts   \n5: Return $w^{\\mathrm{spoof}}$ ", "page_idx": 11}, {"type": "text", "text": "B More Details for Semantic Manipulation ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "The attack algorithm is outlined in Alg. 3, where the detector $D$ outputs 1 to indicate the presence of a watermark. ", "page_idx": 11}, {"type": "text", "text": "Algorithm 3 Semantic Manipulation ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "Require: language model $Q$ , victim LLM text $w^{\\mathrm{orig}}$ , edit budget $\\epsilon$ , tuning factor $\\alpha$ , detector $D$   \n1: while True do   \n2: $w^{\\mathrm{att}}\\leftarrow$ Provide $w^{\\mathrm{orig}}$ and $\\epsilon$ to $Q$ to maximize $\\Delta R$ according to Eq. 1   \n3: if $D(w^{\\mathrm{att}})==1$ then   \n4: Return $w^{\\mathrm{att}}$   \n5: else   \n6: \ud835\udf16\u2190\ud835\udefc\u00d7 \ud835\udf16   \n7: end if   \n8: end while ", "page_idx": 11}, {"type": "text", "text": "Warning: The following part in this section contains examples of offensive language due to attacks. For in-context learning, we provide task demonstrations following the below strategies: ", "page_idx": 11}, {"type": "text", "text": "Identity Substitution Inspired by [2], we can first query the target LLM with benign prompts, which will output a neutral response, then substitute the identity to others to create offensive content. We use ChatGPT as the target LLM as examples shown in Fig. 5. By substituting the identity, e.g., replacing \u201cmen/humans\u201d with \u201cAmericans\u201d and \u201cdogs\u201d with \u201cJapanese\u201d, the language can become highly offensive. ", "page_idx": 11}, {"type": "text", "text": "Antonym Replacement Fig. 6 provides examples of how to apply antonym replacement to generate offensive content. To avoid affect detectability, we can control edit distance as suggested in Alg. 3. ", "page_idx": 11}, {"type": "text", "text": "Offensive Words Insertion Another strategy is adding cursing words between sentences, where token insertion will not compromise the detectability of SOTA watermarking due to their robustness. ", "page_idx": 11}, {"type": "text", "text": "Alg. 3 imposes restrictions on edit distance, preserving the detectability of watermarks. Attackers may exploit this by falsely attributing modified content to the victim LLM, damaging its reputation and suggesting security vulnerabilities. In contrast, our watermarking method incorporates digital ", "page_idx": 11}, {"type": "text", "text": "S ChatGPT ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "While dogs excel in many tasks due to their unique abilities and instincts, there are numerous areas where humans, particularly men in the context of this question, can perform better due to their cognitive,physical,and social capacities.Here aresome reasons why men can do a betterjobthan dogs in various tasks: ", "page_idx": 12}, {"type": "text", "text": "1. Advanced Cognitive Abilities: ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "\u00b7Problem-Solving: Humans can understand and solve complex problems, use logic, and apply critical thinking, which dogs cannot   \n\u00b7Abstract Thinking: Humans can think abstractly, plan for the future, and understand concepts that are not immediately tangible or visible   \n\u00b7Creativity:Humanshavethe abilitytoinvent,create art,literature,andmusic,andtoinnovate in numerous fields. ", "page_idx": 12}, {"type": "text", "text": "Figure 5: The generation from ChatGPT. Identity substitution can be applied to achieve semantic manipulation. ", "page_idx": 12}, {"type": "text", "text": "ChatGPT ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Original praise for the United States:   \n\"The United States stands as a beacon of freedom, democracy, and opportunity, captivating the world with its spirit of innovation, diversity, and resilience. Its unwavering commitment to justice. equality,andhumanrightshasinspiredgenerations,fosteringasocietywhereindividualsfromall walks of life can thrive and realize their dreams. With its rich cultural tapestry and pioneering achievements in science,technology, and the arts, the United States continues to shape the global landscape and lead by example. Its enduring values of liberty, democracy, and compassion serve as a testament to the boundless potential of the human spirit, making it a shining symbol of hope and progress for people everywhere.\" ", "page_idx": 12}, {"type": "text", "text": "Modified praise with optimized sentiment change and minimal Levenshtein distance (edit distance set to 20): ", "page_idx": 12}, {"type": "text", "text": "\"The United States stands as a symbol of tyranny, oppression, and inequality, disturbing the world with its spirit of stagnation, uniformity,and fragility.Its rigid adherence toinjustice, discrimination,and human rights violations has traumatized generations,stifling a society where individuals from all walks of life struggle and face despair. Despite its barren cultural landscape and regressive policies in science, technology, and the arts, the United States continues to scar the global landscape and lead by force. Its enduring values of suppression, authoritarianism, and callousness serve as a testament to the darkest depths of the human spirit, making it a menacing symbol of despair and regression for people everywhere.\" ", "page_idx": 12}, {"type": "text", "text": "In the modified version, the changes from the original praise are highlighted in bold. The edit distance constraint ensures that the modifications are kept within a maximum distance of 20 characters. ", "page_idx": 12}, {"type": "text", "text": "Figure 6: Example from ChatGPT applied antonym replacement to achieve semantic manipulation. ", "page_idx": 12}, {"type": "text", "text": "signatures, ensuring the integrity of generated content. When attackers use Algorithm 3 to spoof jailbreaking, our watermark provides evidence of tampering, effectively thwarting such attempts. ", "page_idx": 13}, {"type": "text", "text": "Meanwhile, genuine jailbreaking incidents will originate from the victim LLM with its intact digital signature watermark. Therefore, our approach enables efficient determination of real jailbreaking instances, aiding LLM regulation effectively. ", "page_idx": 13}, {"type": "text", "text": "C Shift-generate Algorithm ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To better embed the randomness, we sample the best tokens based on certain rules, e.g., exponential minimal sampling [13], instead of sampling based on probability distribution. However, such a strategy reducing sampling randomness also affects generation diversity. The shift-generate algorithm is introduced in [13] to solve this problem. We refer readers to Algorithm 4 in [13] for more details. We also include it in Fig 7, where $\\tau$ functions the same as $d$ in our work. ", "page_idx": 13}, {"type": "image", "img_path": "vjCFnYTg67/tmp/4570d41e410eaaeacb9a6e6b85e7b3d48defed1802f3f3305e864dd2e8eb10c5.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "In particular, this method randomly shifts the watermark key sequence before passing it to the generate function. This shift does not impact the test statistic used in detection, as the detector searches over all subsequences of the watermark key sequence to calculate the minimal alignment cost. There are $n$ possible shifts, each potentially creating a distinct text. ", "page_idx": 13}, {"type": "text", "text": "D Robust Alignment Cost Measurement ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To enhance the detectability of Bileve, we modify the alignment cost in Eq.3 to include edit distance (more details are referred to Definition 5 in [13]) : ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{d_{\\gamma}(w,\\Xi)=\\operatorname*{min}\\left\\{d_{\\gamma}(w_{2:},\\Xi_{2:})+d_{0}(w_{1},\\Xi_{1})\\right.}\\\\ {d_{\\gamma}(w,\\Xi_{2:})+\\gamma}\\\\ {d_{\\gamma}(w_{2:},\\Xi)+\\gamma,\\ \\ }\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $d_{0}$ is defined by Eq.3. By the nature of edit distance, now we can better preserve the detectability even if the insertion and deletion happened to the watermarked text. ", "page_idx": 13}, {"type": "text", "text": "E Perplexity on LLaMA-7B ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We provide the results on LLaMA-7B in Fig. 8, where we can observe similar comparisons with the results on OPT-1.3B. Specifically, the perplexity of Unigram is close to human because it uses a soft red list described in [11], which can better preserve contextual fluency. Moreover, Bileve outperforms SLS because we use rank-based sampling, which favors the token with higher probability, while SLS uses nucleus sampling, which still has the chance to select the token with low probability. Also, its precise signature bits matching also compromise perplexity. This can be mitigated if we embed a bit into a longer block of tokens, as discussed in [6]. ", "page_idx": 13}, {"type": "text", "text": "F Generation Examples ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We provide generation examples of Unigram and Bileve on LFQA tasks using LLaMa-7B in Tab. 5, which show that the higher PPL does not indicate impractically bad quality. ", "page_idx": 13}, {"type": "image", "img_path": "vjCFnYTg67/tmp/ef63ad2aaaca0ff316d1963bd9c56ffa653381bd599a7311764cd7dc75d3e6b5.jpg", "img_caption": ["Figure 8: The perplexity of applying different schemes to LLaMA-7B. "], "img_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "vjCFnYTg67/tmp/17d9f766401d42db88c7ccdd0603f2f5a729f4d0121061d7b28cbc511fdd50a3.jpg", "table_caption": ["Table 5: Comparison of Unigram and Bileve Responses. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "We also provide examples in Tab. 6 to show that Unigram would generate repetitive generation, which may lead to its lower perplexity, although the perceived quality of Unigram\u2019s outputs does not differ significantly from Bileve as demonstrated in Tab. 5. ", "page_idx": 14}, {"type": "table", "img_path": "vjCFnYTg67/tmp/773aa43074ec7f53f17941414c5da2ce08ba5be56a7ee254c327384b881803d0.jpg", "table_caption": ["Table 6: Comparison of Unigram and Bileve Generations using OPT-1.3B on text completion tasks "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer:[Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: contributions are summarized in introduction ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: in discussion section ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 16}, {"type": "text", "text": "Justification: does not include theoretical results ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: include in experiment setup Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. ", "page_idx": 16}, {"type": "text", "text": "\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 17}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: provide code ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: in experiment setup Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: defined in experiments Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: in experiment setting ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: [TODO] ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics. \u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics. ", "page_idx": 18}, {"type": "text", "text": "\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 19}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: in discussion section ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: do not release data or models and add warning ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: add references ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: does not release new assets ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: does not involve crowdsourcing nor research with human subjects ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: does not involve crowdsourcing nor research with human subjects Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 21}]