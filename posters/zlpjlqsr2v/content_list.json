[{"type": "text", "text": "Generalizable Implicit Motion Modeling for Video Frame Interpolation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zujin Guo, Wei Li, Chen Change Loy S-Lab, Nanyang Technological University {zujin.guo, wei.l, ccloy}@ntu.edu.sg https://gseancdat.github.io/projects/GIMMVFI ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Motion modeling is critical in flow-based Video Frame Interpolation (VFI). Existing paradigms either consider linear combinations of bidirectional flows or directly predict bilateral flows for given timestamps without exploring favorable motion priors, thus lacking the capability of effectively modeling spatiotemporal dynamics in real-world videos. To address this limitation, in this study, we introduce Generalizable Implicit Motion Modeling (GIMM), a novel and effective approach to motion modeling for VFI. Specifically, to enable GIMM as an effective motion modeling paradigm, we design a motion encoding pipeline to model spatiotemporal motion latent from bidirectional flows extracted from pre-trained flow estimators, effectively representing input-specific motion priors. Then, we implicitly predict arbitrary-timestep optical flows within two adjacent input frames via an adaptive coordinate-based neural network, with spatiotemporal coordinates and motion latent as inputs. Our GIMM can be easily integrated with existing flow-based VFI works by supplying accurately modeled motion. We show that GIMM performs better than the current state of the art on standard VFI benchmarks. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Video Frame Interpolation (VFI) is a fundamental task in computer vision, which involves generating intermediate frames between two adjacent video frames. This technique is crucial for various practical applications, including novel view synthesis [57, 14, 30], video generation [47], and video compression [52]. This task is highly challenging due to the complex motions typically found in real-world videos. To address this, recent research [29, 55, 42, 40, 20] has focused on flow-based frameworks, which have shown substantial success. Generally, these frameworks for VFI involve two main phases: 1) transforming the input frames based on estimated optical flows, and 2) merging and enhancing the warped frames to produce intermediate frames. Consequently, the accuracy of flow estimation is crucial for the fidelity of the synthesized frames. ", "page_idx": 0}, {"type": "text", "text": "Accurately modeling flow from two distant frames is challenging due to the complexities of capturing subtle and dynamic movements caused by varying motion speeds, object occlusions, and lighting conditions. A commonly used approach in the literature combines bidirectional flows derived from input frames [22, 40, 45, 53, 39] (Figure 1(a)). This method assumes overlapped and linear motion for flow estimation, which does not accurately reflect real-world dynamics. Several studies [20, 29, 55, 42] directly predict bilateral flows based on intermediate discrete timestamps (Figure 1(b)). These approaches model the correlation between frame motions and timestamps without leveraging motion priors within input frames; they thus fall short of capturing complex spatial-temporal changes and handling occluded regions and unexpected deformations. Moreover, this discrete-time-based modeling paradigm is ineffective for arbitrary-time interpolation. ", "page_idx": 0}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/1f18f33066c452b1de7897d7cec8ffaea2bc2a385b2f67470c8f2c3d4f54d0d5.jpg", "img_caption": ["Figure 1: Schematic of motion modeling paradigms in video frame interpolation. (a) A na\u00efve linear combination of bidirectional flows $F_{0\\rightarrow1}$ , $F_{1\\rightarrow0}$ (i.e., flows between input frames) may lead to ambiguous and coarse motion estimation due to strong overlapped and linear assumptions. $({\\bf b})$ A time-condition-based modeling approach may predict suboptimal bilateral flows $F_{t\\to0},F_{t\\to1}$ (i.e., flows between estimated and input frames), capturing spatiotemporal changes for moving objects ineffectively. (c) Our generalizable implicit motion modeling properly represents spatiotemporal dynamics across videos and predict better bilateral flows via an adaptive coordinate-based neural network. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "In this study, we explore a more effective and generalizable implicit approach to motion modeling for VFI. Inspired by the success of implicit neural representations [48] in encoding complex highdimensional data such as 2D images [5], 3D scenes [34], and videos [3], we propose to implicitly model optical flows between two adjacent video frames using coordinate-based neural networks. This implicit paradigm can directly take arbitrary spatiotemporal coordinates as inputs and effectively decode the desired space-time outputs, making it a promising framework for learning highly dynamic optical flows in real-world videos. However, leveraging implicit neural networks for effective motion modeling poses challenges. First, standard implicit neural networks typically perform per-instance modeling, optimizing model parameters for a single specific input. This limitation restricts their applicability across different input video frames. Therefore, we need to develop a more adaptive implicit model capable of capturing motions in any given video. Second, efficiently integrating spatiotemporal information within implicit neural networks is complex, especially when dealing with the intricate motions occurring between two video frames. This necessitates designing appropriate implicit neural architectures that can accurately predict and represent both the spatial and temporal dynamics in videos. ", "page_idx": 1}, {"type": "text", "text": "To this end, we propose a novel generalizable implicit flow encoding for motion modeling in VFI, called Generalizable Implicit Motion Modeling (GIMM) (Figure 1(c)). Our method only assumes the availability of bidirectional flows $(F_{0\\rightarrow1},F_{1\\rightarrow0}\\;)$ ) of two input frames obtained from a pre-trained optical flow estimator (e.g., RAFT [50], FlowFormer [19]). The input flows can be noisy as this prior will be refined to estimate the bilateral flows $(F_{t\\to0},F_{t\\to1})$ between arbitrary intermediate timestamps. Our method is unique in that it can represent input-specific motion priors effectively. For instance, it can accurately capture the complex dynamics of a somersault. This is achieved by introducing a motion encoding pipeline to extract spatiotemporal motion latent from the bidirectional flows. Our method can further enable frame interpolation at arbitrary timestamps, thanks to the adaptive coordinate-based neural network that takes spatiotemporal coordinates and motion latent as inputs. This capability allows our method to generate frames at various temporal granularities, providing flexibility and precision in video frame interpolation. ", "page_idx": 1}, {"type": "text", "text": "Our contributions are summarized as follows: We present an effective motion modeling paradigm for video frame interpolation characterized by a novel generalizable implicit motion modeling framework. Our GIMM is capable of accurately predicting optical flow for arbitrary timesteps between two adjacent video frames at any resolution, allowing seamless integration with existing flow-based VFI methods. We demonstrate the advantages of our GIMM in motion modeling for arbitrary-timestep VFI tasks, achieving state-of-the-art performances on various benchmarks. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Video frame interpolation. Conventional VFI studies primarily rely on either direct frame synthesis via convolutional networks [11, 1, 24] or interpolation using dynamic kernels with learnable weights and offsets [37, 38, 41, 9, 8, 12, 28]. Recent approaches have shifted towards flow-based methods to synthesize frames at desired timesteps, where motion modeling plays a crucial role [20, 29, 54, 26, 49, 17]. Some flow-based methods combine estimated bidirectional flows between input frames [22, 40, 45, 53, 39, 1], often leading to inaccurate motion predictions, especially in occluded areas. This simplistic combination results in ambiguous and coarse motion estimation, causing object shifts in interpolated frames. Several recent approaches [20, 29, 55, 20, 32] address these issues by directly predicting the desired motion within an end-to-end framework conditioned on timesteps, showing impressive results in synthesized frames. However, these methods mainly rely on discrete-time-based fitting of variable relationships between motion and timesteps, making it challenging to achieve consistent, continuous interpolation outcomes. ", "page_idx": 2}, {"type": "text", "text": "Implicit neural representations. Implicit Neural Representations (INRs) have been shown effective in modeling complex, high-dimensional data for various applications, including video compression [3], novel view synthesis [34, 30], and image super-resolution [5]. Typically, INRs learn a continuous mapping from a set of coordinates to a specific signal using a coordinate-based neural network to encode data implicitly. The flexible and expressive modeling capabilities of INRs motivate us to explore their use to encode intricate motions and capture subtle, dynamic movements of objects in real-world videos. A recent work related to ours is IFE [13]. While both approaches consider implicit flow encoding, our method significantly differs from IFE. Unlike IFE, which focuses on per-scene encoding\u2014where each coordinate-based network is parameterized by a specific video instance\u2014we aim to develop a generalizable motion modeling approach that can be applied across different videos. ", "page_idx": 2}, {"type": "text", "text": "Generalizable INRs. Recent works [5, 44, 10, 21, 15, 7, 4] further extend INRs for generalizable encoding by conditioning coordinate-based neural networks with additional instance-specific inputs. For example, some approaches [6, 27, 25] employ Transformers [51] as meta-learners to predict instance-specific weights or modulation features for coordinate-based neural networks at high computational costs. Several notable studies [4, 7, 45] leverage generalizable INRs for video encoding to facilitate video interpolation and super-resolution, mainly focusing on directly learning implicit space-time continuous neural representations from video. In contrast, we aim to explore effective motion modeling paradigms to improve intermediate frame synthesis for flow-based VFI. To our knowledge, we make the first attempt to utilize generalizable INRs for motion modeling in the context of VFI. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Given a pair of adjacent video frames $I_{0},I_{1}\\in\\mathbb{R}^{H\\times W\\times3}$ with timesteps $\\{0,1\\}$ , a general flow-based video frame interpolation process is defined as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{{\\boldsymbol{F}}_{t}={\\mathcal{G}}(I_{0},I_{1},t),}\\\\ &{{\\boldsymbol{I}}_{t}={\\mathcal{H}}({\\boldsymbol{F}}_{t},I_{0},I_{1}),\\forall t\\in[0,1],}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathcal{G}$ denotes a motion modeling (or flow estimation) module, and $\\mathcal{H}$ indicates a frame interpolation process under the guidance of estimated motion $F_{t}$ at a timestep of $t\\in[0,1]$ for input frames $I_{0}$ and $I_{1}$ . In this work, we mainly focus on studying an effective motion modeling framework $\\mathcal{G}$ for flow-based VFI. ", "page_idx": 2}, {"type": "text", "text": "3.1 Generalizable Implicit Motion Modeling ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The goal of GIMM is to estimate bilateral flows $F_{t\\to0},F_{t\\to1}$ for any timestep $t\\in[0,1]$ , deriving from initial bidirectional flows $F_{0\\rightarrow1},F_{1\\rightarrow0}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\nF_{t\\rightarrow0},F_{t\\rightarrow1}=\\mathcal{G}(F_{0\\rightarrow1},F_{1\\rightarrow0},t),\\forall t\\in[0,1],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $F_{0\\rightarrow1},F_{1\\rightarrow0}$ are predicted from a pre-trained optical flow estimator (e.g., RAFT [50], FlowFormer [19]) with input frames $I_{0}$ and $I_{1}$ . Figure 2 depicts the overall generalizable motion modeling framework of GIMM. Motivated by the great success of INRs in modeling complex video data [7, 4, 13, 34], GIMM uses an adaptive coordinate-based neural network for continuous motion ", "page_idx": 2}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/87b4bd8499c76a478a4daeee6b5c88ce56383b218b6c051c5270b6d7d6d51130.jpg", "img_caption": [], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Figure 2: Our GIMM first transforms initial bidirectional flows $F_{0\\rightarrow1},F_{1\\rightarrow0}$ as normalized flows $V_{0},V_{1}$ . The motion encoder extracts motion features $K_{0},K_{1}$ from $V_{0},V_{1}$ , respectively. $K_{0},K_{1}$ are then forward warped at a given timestep $t$ using bidirectional flows to obtain the warped features $K_{t\\rightarrow0},K_{t\\rightarrow1}$ . We pass the warped and initial motion features into a Latent Refiner that outputs motion latent $L_{t}$ , representing motion information at $t$ . Conditioned on $L_{t}(x,y)$ , the coordinate-based network $g_{\\boldsymbol{\\theta}}$ predicts the corresponding normalized flow $V_{t}$ with 3D coordinates $\\mathbf{x}=(x,y,t)$ . For interpolation usage, $V_{t}$ is then transferred into bilateral flows $F_{t\\to0},F_{t\\to1}$ through denormalization. ", "page_idx": 3}, {"type": "text", "text": "modeling. Unlike the existing IFE [13] that performs per-scene optimization and requires test-time learning for different videos, our GIMM takes additional instance-specific motion latent inputs $L_{t}$ to enhance model generalizability across various input videos. ", "page_idx": 3}, {"type": "text", "text": "Flow normalization. Following IFE [13], we perform normalization for the initial bidirectional flows as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{V_{0}=\\phi(F_{0\\to1}),V_{1}=\\phi(-F_{1\\to0}),}\\\\ &{V_{t}=\\phi(F_{t\\to1}-F_{t\\to0}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\phi$ is a scale operator. This reversible normalization process aligns the scale and temporal direction of input bidirectional flows $F_{0\\rightarrow1},F_{1\\rightarrow0}$ with output bilateral flows $F_{t\\to0},F_{t\\to1}$ , allowing the normalized flows $V_{i}\\,\\in\\,[0,1]^{H\\times W\\times2},\\bar{i}\\in\\bar{0},\\bar{1}$ to be effectively encoded in subsequent implicit motion modeling in GIMM. ", "page_idx": 3}, {"type": "text", "text": "Motion latent. To achieve generalizable implicit modeling of motion dynamics, we learn implicit neural representations for motions with conditions on instance-specific motion latent inputs $\\bar{L}_{t}(\\bar{x},y)$ , which provides instance-specific motion priors at spatiotemporal coordinates $\\mathbf{x}=(x,y,t)$ for target motion $V_{t}(x,y)$ . Specifically, we introduce a Motion Encoder to extract motion features $K_{i}$ from normalized flows $V_{i}$ . To maintain spatiotemporal consistencies of modeled motion, we derive timedependent motion features $K_{t}$ for given timestep $t$ from both motion features $K_{0}$ and $K_{1}$ . To realize this, we apply forward warping $\\overrightarrow{\\omega}$ process to map every location of motion features $K_{i}$ to the target timestep $t$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\nK_{i\\rightarrow t}=\\overrightarrow{\\omega}(K_{i},F_{i\\rightarrow t},Z_{i}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, $K_{i\\to t}$ are warped features with timesteps $i\\in\\{0,1\\}$ that integrate the correspondences from source (input) timesteps to the target timestep, $Z_{i}$ represents splatting weights, and $F_{i\\to t}$ denotes scaled bidirectional flows at timestep $t$ . We compute scaled bidirectional flows $F_{i\\to t}$ as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\nF_{i\\to t}=\\left\\{(t-0)\\cdot F_{0\\to1},\\ \\ {\\mathrm{if}}\\ i=0\\right.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "To mitigate warping errors in multi-to-one cases or occluded regions, we calculate splatting weights $Z_{i}$ using flow consistency $U_{f l o w}^{i}$ and variance $U_{v a r}^{i}$ metrics [35, 36] as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\nZ_{i}=\\frac{1}{1+\\alpha_{f l o w}\\cdot U_{f l o w}^{i}}+\\frac{1}{1+\\alpha_{v a r}\\cdot U_{v a r}^{i}},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\alpha_{f l o w}$ and $\\alpha_{v a r}$ are learnable parameters. To obtain the final motion latent $L_{t}$ , we concatenate the warped features Concat $(K_{0\\rightarrow t},K_{1\\rightarrow t})$ as the coarse motion latent at timestep $t$ and further refine via a Latent Refiner module to deal with potential information loss and ambiguous motion in the forward warping process. Both the Latent Refiner and the Motion Encoder mentioned above are structured as shallow convolutional networks. We provide their network configurations and detailed calculations for two flow metrics $U_{f l o w}^{i}$ and $U_{v a r}^{i}$ in the supplementary. ", "page_idx": 3}, {"type": "text", "text": "Figure 3: An overview of GIMM-VFI architecture. GIMM-VFI employs a pre-trained flow estimator, $\\mathcal{E}$ , to predict bidirectional flows $(F_{0\\rightarrow1},F_{1\\rightarrow0})$ and extracts context features $A$ as well as correlation features $C$ from the input frames $(I_{0},I_{1})$ . Given the timestep $t$ , a generalizable implicit motion modeling (GIMM) module $\\mathcal{G}$ (detailed in Figure 2) takes the bidirectional flows as inputs and predicts bilateral flows $(F_{t\\to0},F_{t\\to1})$ , which are then passed into a frame synthesis module $\\boldsymbol{S}$ , together with extracted features $(A,C)$ , to synthesize the target frame $I_{t}$ . ", "page_idx": 4}, {"type": "text", "text": "Implicit motion prediction. To realize INRs for generalizable motion modeling, we devise an adaptive coordinate-based network $g_{\\boldsymbol{\\theta}}$ for implicit and continuous motion encoding, which maps spatiotemporal coordinates $\\mathbf{x}\\in[-1,1]^{H\\times W\\times\\mathbf{\\hat{3}}}$ along with the corresponding $D$ -dimension motion latent code $L_{t}\\in\\mathbb{R}^{H\\times W\\times D}$ to predicted normalized flows $\\hat{V_{t}}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{V}_{t}=g_{\\theta}(\\mathbf{x},L_{t}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The predicted normalized flow $V_{t}$ can be converted into predicted bilateral flows $F_{t\\to0},F_{t\\to1}$ via the reverse flow normalization process for VFI. See the supplementary for the details of the coordinatebased network. ", "page_idx": 4}, {"type": "text", "text": "Optimization. In practice, we optimize the GIMM module by minimizing a Mean-Square-Error (MSE) loss between predicted $(\\hat{V}_{t})$ and ground-truth $(V_{t})$ normalized optical flows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{g i m m}(V_{t},\\hat{V}_{t})=\\frac{1}{H\\times W}\\sum_{k=0}^{H-1}\\sum_{l=0}^{W-1}||V_{t}(k,l)-\\hat{V}_{t}(k,l)||_{2}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "3.2 Integrating GIMM with Frame Interpolation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "GIMM-VFI. Given two adjacent video frames $I_{i}$ with $i\\in\\{0,1\\}$ , we start with a pre-trained optical flow estimator (e.g., RAFT [50], FlowFormer [19]) to extract context features $A_{i}$ , correlation features $C_{i}$ , and initial bidirectional flows $F_{0\\rightarrow1}$ and $F_{1\\rightarrow0}$ . We first predict bilateral flows $F_{t\\rightarrow i}$ for a given timestep $t$ from initial bidirectional flows using a pre-trained GIMM module. The predicted bilateral flows $F_{t\\rightarrow i}$ , context features $A_{i}$ , and correlation features $C_{i}$ are then passed into a frame synthesis module $\\boldsymbol{S}$ (adapted from the AMT [29]), which refines the input flows and generates warping masks $M_{t}\\,\\in\\,[0,1]^{H\\times W}$ . Following previous flow-based VFI studies [29, 55, 42, 20], we obtain warped images $I_{t\\to i}$ via backward warping $\\{\\overline{{\\omega}}$ under the guidance of predicted bilateral flows $F_{t\\rightarrow i}$ from input frames $I_{0}$ and $I_{1}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{I_{t\\rightarrow i}=\\overleftarrow{\\boldsymbol{\\wp}}(I_{i},F_{t\\rightarrow i}),}\\\\ &{I_{t\\rightarrow i}(x,y)=I_{i}(x+F_{t\\rightarrow i}^{h}(x,y),y+F_{t\\rightarrow i}^{v}(x,y)),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $F_{t\\to i}^{h},F_{t\\to i}^{v}$ represents horizontal and vertical motion of $F_{t\\rightarrow i}$ , respectively. To generate the final interpolated image ${\\hat{I}}_{t}$ , the warped images $I_{t\\to0},I_{t\\to1}$ are fused with the warping mask $M_{t}$ as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{I}_{t}=M_{t}\\cdot I_{t\\rightarrow0}+(1-M_{t})\\cdot I_{t\\rightarrow1}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "See the supplementary for the details of the frame synthesis module. ", "page_idx": 4}, {"type": "text", "text": "Overall objectives. We use the following objective function for VFI: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{i n t e r p}(I_{t},\\hat{I}_{t})=\\mathcal{L}_{l a p}(I_{t},\\hat{I}_{t})+\\mathcal{L}_{c h a r}(I_{t},\\hat{I}_{t})+\\mathcal{L}_{c e n s u s}(I_{t},\\hat{I}_{t}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathcal{L}_{l a p}$ , ${\\mathcal{L}}_{c h a r}$ , and $\\mathcal{L}_{c e n s u s}$ denote the Laplacian loss [55, 36], Charbonnier loss [29, 2] , and census loss [29, 33], respectively. In addition, to preserve the motion modeling in the pre-trained ", "page_idx": 4}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/a73f3a5ce9801f72800c963525070fc9e101f621cc52d58df8779d2d18e2e6f9.jpg", "table_caption": ["Table 1: Comparisons of different motion modeling methods. We assess the modeled motion on Vimeo-Triplet-Flow (VTF) and Vimeo-Septuplet-Flow (VSF) by employing PSNR and EPE metrics. Additionally, we demonstrate their impact on the interpolation task by presenting the PSNR values of their interpolation results on the \u2018hard\u2019 split of the SNU-FILM-arb dataset. We denote the calculated PSNR values as $\\mathrm{PSNR_{\\mathrm{f}}}$ for optical flows in the motion assessment and $\\mathrm{PSNR_{i}}$ for interpolated images in the interpolation task. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "GIMM module, we reconstruct and supervise the flows $\\hat{V_{0}},\\hat{V_{1}}$ with pseudo ground truth $V_{0},V_{1}$ . This objective $\\mathcal{L}_{r e c}$ is defined as $||V_{0}-\\hat{V_{0}}\\bar{|}|_{2}+||V_{1}-\\hat{V_{1}}||_{2}$ . The overall objective $\\mathcal{L}$ is as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathcal{L}_{i n t e r p}(I_{t},\\hat{I}_{t})+\\lambda_{r e c}\\mathcal{L}_{r e c},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\lambda_{r e c}$ is the hyperparameter. We optimize the entire GIMM-VFI model that contains the pre-trained flow estimator, pre-trained GIMM module, and frame synthesis module. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We present quantitative and qualitative evaluations of our motion modeling method GIMM in Section 4.1, and the corresponding interpolation method (GIMM-VFI) in Section 4.4. Specifically, we evaluate both motion quality and performance on the downstream interpolation task. We compare GIMM-VFI with current state-of-the-art VFI methods on arbitrary-timestep interpolation. ", "page_idx": 5}, {"type": "text", "text": "Implementation details. We train the GIMM model on the training split of Vimeo90K [54] triplets dataset using optical flows extracted by off-the-shelf flow estimators. Our GIMM-VFI is trained on the complete Vimeo90K septuplet dataset. Specifically, we implement two variants of GIMM-VFI, using two different flow estimators: the RAFT [50] and FlowFormer [19], designated as GIMM-VFI-R and GIMM-VFI-F, respectively. More details are provided in the supplementary materials. ", "page_idx": 5}, {"type": "text", "text": "4.1 Motion Modeling ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "VTF and VSF benchmarks. To assess the modeled motion quality with GIMM, we use Flowformer [19] to produce pseudo ground truth motion. Specifically, we establish two motion evaluation benchmarks: Vimeo-Triplet-Flow (VTF) and Vimeo-Septuplet-Flow (VSF). These benchmarks are derived from the triplet and septuplet splits of the Vimeo90K [54] test set, tailored for evaluating 2X and 6X motion modeling, respectively. ", "page_idx": 5}, {"type": "text", "text": "Baselines. We compare GIMM with other motion modeling approaches, including Linear, Forward Warp, End-to-End, and BMBC [39]. Specifically, Linear replaces our GIMM module with the linear approximation strategy [22]. Similarly, Forward Warp substitutes GIMM with a forward warping strategy [35]. Meanwhile, the End-to-End denotes the strategy that directly predicts motion at arbitrary timesteps through an end-to-end ftiting. In this end-to-end setting, we select the current stateof-the-art EMA-VFI [55] as the representative method. Additionally, we make further comparisons with BMBC [39], which is supposed to model complex motion effectively through several stages of motion predictions and motion refinements. For fair comparisons, we employ RAFT [50] as the flow estimator for different motion modeling methods. ", "page_idx": 5}, {"type": "text", "text": "Evaluation settings. We measure the modeled motion quality on both VTF and VSF benchmarks by calculating PSNR on normalized flows and End-Point-Error (EPE) on the unscaled flows. For the downstream interpolation task, we calculate PSNR on the \u2018hard\u2019 split of the SNU-FILM-arb benchmark (SNU-FILM-arb-Hard). Details about SNU-FILM-arb are presented in Section 4.4. ", "page_idx": 5}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/c3b813ed46b00c43624cce154bab5d94e80cac4b91ae111ed2bb8ab2ee294c17.jpg", "img_caption": ["Figure 4: Qualitative comparisons of different motion modeling methods on SNU-FILM-arb-Hard. All the results are predicted at $t=0.75$ , and ground truth flows are obtained by FlowFormer [19]. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Results. We provide quantitative comparisons of our GIMM and baselines in Table 1. We first report the results of motion quality on VTF and VSF. We find that GIMM can continuously model motions in videos. GIMM predicts the best flows on both the VTF benchmark (37.56dB PSNR/ 0.34 EPE) and the VSF benchmark (30.45dB PSNR/ 2.68 EPE) that involves unseen timesteps during training. Moreover, our study highlights the importance of motion priors in both motion modeling and the downstream interpolation task. The Linear, Forward Warp, and our GIMM methods that leverage motion priors from RAFT [50] can provide better motion and interpolation performances than the End-to-End and BMBC [39] across all benchmarks. Notably, GIMM benefits the interpolation task the most and achieves the highest PSNR of 32.62 dB on SNU-FILM-arb-Hard. While motion modeling plays a critical role in interpolation, other modules also impact interpolation outcomes. The End-to-End method has a narrower performance gap with other advanced motion modeling approaches on the interpolation benchmark than on motion modeling benchmarks, likely due to its more complex and extensive feature extraction and frame synthesis modules. ", "page_idx": 6}, {"type": "text", "text": "Visualizations. Besides the quantitative evaluation of motion modeling, we also qualitatively evaluate them on SNU-FILM-arb-Hard, as shown in Figure 4. Since SNU-FILM-arb-Hard requires 8X interpolation for input frames of large motion, classical methods like BMBC [39] may struggle to model the intermediate motion. In contrast, we observe the capacity of GIMM for accurate motion modeling at arbitrary timesteps. Take the Somersault in Figure 4 for example, the ankle flow and the corresponding interpolation generated by GIMM have the best consistency with the ground truth, pointing to the same direction. Moreover, GIMM is capable of reducing ambiguities when interpolating moving objects. We can observe clearer silhouettes with fewer blurs in both the \u2018dog-leg\u2019 and \u2018dog-head\u2019 cases in Figure 4. ", "page_idx": 6}, {"type": "text", "text": "4.2 Ablation Study on Motion Model Choices ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "As our core contribution, we present an effective motion modeling paradigm for video frame interpolation, characterized by a novel generalizable implicit motion modeling framework (GIMM). In this section, we further investigate the necessity of implicit neural representations (INRs) and approaches to generalizable INRs. The experiments are conducted on the motion modeling benchmarks, i.e., Vimeo-Triplet-Flow (VTF) and Vimeo-Septuplet-Flow (VSF). ", "page_idx": 6}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/c005a1e3e0ab8a4ccc412e7058d30f81117a5d70e0189240c3456eba5c7a0430.jpg", "table_caption": ["Table 2: Quantitative comparisons of different motion model choices. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Necessity of INRs. A straightforward replacement of INRs in our GIMM is a timestep-conditioned U-Net as in diffusion literature [43]. We substitute the INRs with a U-Net of a comparable number of channels to ensure fair comparisons. In Table 2, replacing INR with U-Net results in worse performance, especially on the 6X motion modeling benchmark VSF. This demonstrates the strong continuous modeling ability of INR. Besides, GIMM with INR has a much lighter architecture, improving efficiency. Therefore, it is necessary and proper to use INR for our motion modeling. ", "page_idx": 7}, {"type": "text", "text": "Approaches to generalizable INRs. To realize generalizable implicit modeling, an alternative way is to modulate the weights of INRs with meta-learners [6, 25]. Following [25], we employ Transformers [51] as the meta-learner. Compared to GIMM, this meta-learning approach performs significantly worse across all benchmarks while introducing a model with over 170X more parameters. ", "page_idx": 7}, {"type": "text", "text": "4.3 Ablation Study on GIMM ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we investigate the effectiveness of model designs in GIMM in Table 3. The experiments are conducted on the VTF and VSF benchmarks. ", "page_idx": 7}, {"type": "text", "text": "Forward warping. We substitute forward warping operation in GIMM with a straightforward linear combination of the input motion features (Non-Fwarp). In Table 3, we observe a significant performance drop with this modification. For example, the EPE on VSF increases by 0.20. This result highlights the importance of forward warping for GIMM\u2019s continuous motion modeling. ", "page_idx": 7}, {"type": "text", "text": "Implicit modeling. In GIMM, the motion can be modeled even without the presence of implicit modeling. We conduct experiments without using any coordinates (Non-Imp). In Table 3, this variant yields performance gains, with reductions of 0.05 and 0.13 in the EPEs on VTF and VSF respectively, highlighting the importance of implicit modeling in GIMM. ", "page_idx": 7}, {"type": "text", "text": "Motion encoder. We leverage the motion encoder in our GIMM to extract features from flows, alleviating the negative impacts brought by the possible bias and noises in the estimated flows. To justify this design, we remove the motion encoder for a direct comparison (Non-ME). As a result, we observe increases in error on both benchmarks, e.g., the EPE on VSF rises 0.17. Therefore, the motion encoder benefits the motion modeling in GIMM. ", "page_idx": 7}, {"type": "text", "text": "Latent refinement. To validate the efficacy of latent refinement in GIMM, we conducted experiments excluding the latent refiner (Non-Refiner). This leads to notable declines of $0.53\\;\\mathrm{dB}$ and $0.43\\;\\mathrm{dB}$ in PSNRs across both benchmarks. Thus, refining the motion latent proves essential for accurate motion modeling. ", "page_idx": 7}, {"type": "text", "text": "Spatial coordinates. Since the modeled motion consists of spatiotemporal changes, we use 3D spatiotemporal coordinates in the implicit modeling of GIMM. To assess the necessity of spatial coordinates, we replace 3D coordinates with temporal coordinates (T-coord only). This removal causes a 0.16 dB drop of PSNR on Vimeo-Triplet-Flow and a 0.06 increase of EPE on Vimeo-Septuplet-Flow. This emphasizes the crucial role of spatial coordinates in implicit modeling. ", "page_idx": 7}, {"type": "text", "text": "4.4 Arbitrary-timestep Video Frame Interpolation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "SNU-FILM-arb benchmark. We introduce the SNU-FILM-arb benchmark for a more generalized evaluation, to facilitate research on the arbitrary-timestep frame interpolation task. Specifically, we incorporate the SNU-FILM dataset [11] that encompasses 310 clips from 31 videos captured at 240 fps, with heights ranging from 384 to 1280 pixels and widths from 368 to 720 pixels. Different from its original setting of 2X interpolation, we conduct 4X, 8X, and 16X interpolation evaluations on the original \u2018Medium\u2019, \u2018Hard\u2019, and \u2018Extreme\u2019 subsets of SNU-FILM, respectively. ", "page_idx": 7}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/57c03c2f5fc0e5363ed7f957444dcb3ee69a9210b71d2ddd6163dc8c06712897.jpg", "table_caption": ["Table 3: Quantitative comparisons of different model variants. For each model variant, we evaluate its motion modeling performance on Vimeo-Triplet-Flow and Vimeo-Septuplet-Flow, respectively. We adopt EPE and PSNR as the metrics for motion quality. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/dc57de144abd0c50d9653d59a96d3c5c4dd7e6552c91fbc0a9d1b2480b20f71f.jpg", "table_caption": ["Table 4: Quantitative results for arbitrary-timestep interpolation. We report the quantitative metrics reported as PSNR\u2191/LPIPS\u2193/FID\u2193, with the best results highlighted in boldface and the second best results in underline. The analysis categorizes methods into two groups: non-INR methods (first half) and INR-based methods (second half). We employ a \u2018-\u2019 symbol to denote \u2018out-of-memory\u2019 scenarios, and a dagger $(^{\\leftarrow}\\dag^{\\bullet})$ to indicate that the results are drawn from prior studies [20, 18, 55]. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Evaluation settings. We calculate PSNR and perceptual indicators, e.g., LPIPS [56], FID [16], on both SNU-FILM-arb and X4K-1000FPS (XTest) [46]. XTest comprises 15 clips from 15 videos for 8X interpolation. Following the established protocol from prior studies [18, 55], we assess interpolation quality at both 2K and 4K resolutions. For fair comparisons, we disable test-time augmentations during evaluations. ", "page_idx": 8}, {"type": "text", "text": "Current advanced VFI methods. We compare GIMM-VFI with various advanced interpolation methods. For non-INR methods, we include RIFE [20], IFRNet [26], M2M [18], AMT [29], UPRNet [23], and EMA-VFI [55]. We also make comparisons with the INR-based method CURE [45]. ", "page_idx": 8}, {"type": "text", "text": "Results. We present the quantitative results of GIMM-VFI on arbitrary-timestep interpolation benchmarks in Table 4. Our proposed method achieves high-quality continuous interpolation across various timesteps (i.e., 4X, 8X, 16X). In terms of PSNR, we observe that our RAFT-based [50] method GIMM-VFI-R achieves significant improvements of 0.18 dB on XTest-2K, 0.67 dB on XTest-4K, and approximately 0.30 dB on each subset of the SNU-FILM-arb, in comparison with the previous state-of-the-art method EMA-VFI [55]. For perceptual metrics, i.e., LPIPS and FID, our proposed GIMM-VFI still outperforms previous methods on most benchmarks, delivering competitive performance. These observations demonstrate that our GIMM can offer effective motion modeling for the arbitrary-timestep VFI task. ", "page_idx": 8}, {"type": "text", "text": "Visualizations. Besides the quantitative evaluations, we further qualitatively compare both GIMMVFI-R and GIMM-VFI-F with existing VFI techniques, as illustrated in Figure 5. Our methods achieve better interpolation across various timesteps. For example, our methods maintain the integrity of moving object silhouettes (3rd case). Moreover, GIMM-VFI-R and GIMM-VFI-F preserve detailed textures within both occluded regions and moving objects from significant deformations, e.g., the rectangle pole tag(1st case), truck (2nd case), swing (3rd case). ", "page_idx": 8}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/51f1c2e77488a3f27d7778552ad845cb400ec75fc4c41cb5edc7fed223451740.jpg", "img_caption": ["Figure 5: Qualitative comparisons of arbitrary-timestep interpolation on XTest-2K [46]. Positions pointed by the yellow arrow indicate the distinct performance of our method. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "5 Limitation ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "There are several known limitations to our method. First of all, the GIMM-VFI is closely related to the pre-trained flow estimator, which estimates bidirectional flows and extracts image features. Therefore, GIMM-VFI inherits the limitations of the chosen pre-trained flow estimators, which may include high computational costs. Additionally, GIMM-VFI only accepts two consecutive frames as inputs, which is not favorable for frame interpolations where larger and nonlinear motion exists. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We propose a novel motion modeling method, GIMM, which performs continuous motion modeling for video frame interpolation. Our proposed GIMM is the first attempt to learn generalizable implicit neural representations for continuous motion modeling. The method can properly predict arbitrarytimestep optical flows within two adjacent video frames at any resolution, and be easily integrated with existing flow-based VFI approaches (e.g., AMT [29]) without further modifications by supplying accurately modeled motion. Extensive experiments on the VFI benchmarks show that our GIMM can effectively perform generalizable motion modeling across videos. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement. This study is supported under the RIE2020 Industry Alignment Fund \u2013 Industry Collaboration Projects (IAF-ICP) Funding Initiative, as well as cash and in-kind contributions from the industry partner(s). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Wenbo Bao, Wei-Sheng Lai, Chao Ma, Xiaoyun Zhang, Zhiyong Gao, and Ming-Hsuan Yang. Depth-aware video frame interpolation. In CVPR, 2019.   \n[2] Pierre Charbonnier, Laure Blanc-Feraud, Gilles Aubert, and Michel Barlaud. Two deterministic half-quadratic regularization algorithms for computed imaging. In ICIP, 1994.   \n[3] Hao Chen, Bo He, Hanyu Wang, Yixuan Ren, Ser Nam Lim, and Abhinav Shrivastava. NeRV: Neural representations for videos. In NeurIPS, 2021.   \n[4] Yi-Hsin Chen, Si-Cun Chen, Yen-Yu Lin, and Wen-Hsiao Peng. MoTIF: Learning motion trajectories with local implicit neural functions for continuous space-time video super-resolution. In ICCV, 2023.   \n[5] Yinbo Chen, Sifei Liu, and Xiaolong Wang. Learning continuous image representation with local implicit image function. In CVPR, 2021.   \n[6] Yinbo Chen and Xiaolong Wang. Transformers as meta-learners for implicit neural representations. In ECCV, 2022.   \n[7] Zeyuan Chen, Yinbo Chen, Jingwen Liu, Xingqian Xu, Vidit Goel, Zhangyang Wang, Humphrey Shi, and Xiaolong Wang. VideoINR: Learning video implicit neural representation for continuous space-time super-resolution. In CVPR, 2022.   \n[8] Xianhang Cheng and Zhenzhong Chen. Video frame interpolation via deformable separable convolution. In AAAI, 2020.   \n[9] Xianhang Cheng and Zhenzhong Chen. Multiple video frame interpolation via enhanced deformable separable convolution. IEEE TPAMI, 2021.   \n[10] Julian Chibane, Thiemo Alldieck, and Gerard Pons-Moll. Implicit functions in feature space for 3d shape reconstruction and completion. In CVPR, 2020.   \n[11] Myungsub Choi, Heewon Kim, Bohyung Han, Ning Xu, and Kyoung Mu Lee. Channel attention is all you need for video frame interpolation. In AAAI, 2020.   \n[12] Tianyu Ding, Luming Liang, Zhihui Zhu, and Ilya Zharkov. CDFI: Compression-driven network design for frame interpolation. In CVPR, 2021.   \n[13] Pedro Figueir\u00eado, Avinash Paliwal, and Nima Khademi Kalantari. Frame interpolation for dynamic scenes with implicit flow encoding. In WACV, 2023.   \n[14] John Flynn, Ivan Neulander, James Philbin, and Noah Snavely. DeepStereo: Learning to predict new views from the world\u2019s imagery. In CVPR, 2016.   \n[15] Kyle Genova, Forrester Cole, Avneesh Sud, Aaron Sarna, and Thomas Funkhouser. Local deep implicit functions for 3d shape. In CVPR, 2020.   \n[16] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. In NeurIPS, 2017.   \n[17] Xinyu Hou, Liming Jiang, Rui Shao, and Chen Change Loy. Video infilling with rich motion prior. In BMVC, 2023.   \n[18] Ping Hu, Simon Niklaus, Stan Sclaroff, and Kate Saenko. Many-to-many splatting for efficient video frame interpolation. In CVPR, 2022.   \n[19] Zhaoyang Huang, Xiaoyu Shi, Chao Zhang, Qiang Wang, Ka Chun Cheung, Hongwei Qin, Jifeng Dai, and Hongsheng Li. FlowFormer: A transformer architecture for optical flow. In ECCV, 2022.   \n[20] Zhewei Huang, Tianyuan Zhang, Wen Heng, Boxin Shi, and Shuchang Zhou. Real-time intermediate flow estimation for video frame interpolation. In ECCV, 2022.   \n[21] Chiyu Jiang, Avneesh Sud, Ameesh Makadia, Jingwei Huang, Matthias Nie\u00dfner, and Thomas Funkhouser. Local implicit grid representations for 3d scenes. In CVPR, 2020.   \n[22] Huaizu Jiang, Deqing Sun, Varun Jampani, Ming-Hsuan Yang, Erik Learned-Miller, and Jan Kautz. Super SloMo: High quality estimation of multiple intermediate frames for video interpolation. In CVPR, 2018.   \n[23] Xin Jin, Longhai Wu, Jie Chen, Youxin Chen, Jayoon Koo, and Cheul-Hee Hahm. A unified pyramid recurrent network for video frame interpolation. In CVPR, 2023.   \n[24] Tarun Kalluri, Deepak Pathak, Manmohan Chandraker, and Du Tran. FLAVR: Flow-agnostic video representations for fast frame interpolation. In WACV, 2023.   \n[25] Chiheon Kim, Doyup Lee, Saehoon Kim, Minsu Cho, and Wook-Shin Han. Generalizable implicit neural representations via instance pattern composers. In CVPR, 2023.   \n[26] Lingtong Kong, Boyuan Jiang, Donghao Luo, Wenqing Chu, Xiaoming Huang, Ying Tai, Chengjie Wang, and Jie Yang. IFRNet: Intermediate feature refine network for efficient frame interpolation. In CVPR, 2022.   \n[27] Doyup Lee, Chiheon Kim, Minsu Cho, and Wook-Shin Han. Locality-aware generalizable implicit neural representation. In NeurIPS, 2023.   \n[28] Hyeongmin Lee, Taeoh Kim, Tae-Young Chung, Daehyun Pak, Yuseok Ban, and Sangyoun Lee. AdaCoF: Adaptive collaboration of flows for video frame interpolation. In CVPR, 2020.   \n[29] Zhen Li, Zuo-Liang Zhu, Ling-Hao Han, Qibin Hou, Chun-Le Guo, and Ming-Ming Cheng. AMT: All-pairs multi-field transforms for efficient frame interpolation. In CVPR, 2023.   \n[30] Zhengqi Li, Simon Niklaus, Noah Snavely, and Oliver Wang. Neural scene flow fields for space-time view synthesis of dynamic scenes. In CVPR, 2021.   \n[31] Chengxu Liu, Huan Yang, Jianlong Fu, and Xueming Qian. TTVFI: Learning trajectory-aware transformer for video frame interpolation. IEEE TIP, 2023.   \n[32] Liying Lu, Ruizheng Wu, Huaijia Lin, Jiangbo Lu, and Jiaya Jia. Video frame interpolation with transformer. In CVPR, 2022.   \n[33] Simon Meister, Junhwa Hur, and Stefan Roth. UnFlow: Unsupervised learning of optical flow with a bidirectional census loss. In AAAI, 2018.   \n[34] Ben Mildenhall, Pratul P. Srinivasan, Matthew Tancik, Jonathan T. Barron, Ravi Ramamoorthi, and Ren Ng. NeRF: Representing scenes as neural radiance fields for view synthesis. In ECCV, 2020.   \n[35] Simon Niklaus, Ping Hu, and Jiawen Chen. Splatting-based synthesis for video frame interpolation. In WACV, 2023.   \n[36] Simon Niklaus and Feng Liu. Softmax splatting for video frame interpolation. In CVPR, 2020.   \n[37] Simon Niklaus, Long Mai, and Feng Liu. Video frame interpolation via adaptive convolution. In CVPR, 2017.   \n[38] Simon Niklaus, Long Mai, and Feng Liu. Video frame interpolation via adaptive separable convolution. In ICCV, 2017.   \n[39] Junheum Park, Keunsoo Ko, Chul Lee, and Chang-Su Kim. BMBC: Bilateral motion estimation with bilateral cost volume for video interpolation. In ECCV, 2020.   \n[40] Junheum Park, Chul Lee, and Chang-Su Kim. Asymmetric bilateral motion estimation for video frame interpolation. In ICCV, 2021.   \n[41] Tomer Peleg, Pablo Szekely, Doron Sabo, and Omry Sendik. Im-net for high resolution video frame interpolation. In CVPR, 2019.   \n[42] Fitsum Reda, Janne Kontkanen, Eric Tabellion, Deqing Sun, Caroline Pantofaru, and Brian Curless. FILM: Frame interpolation for large motion. In ECCV, 2022.   \n[43] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. High-resolution image synthesis with latent diffusion models. In CVPR, 2022.   \n[44] Shunsuke Saito, Zeng Huang, Ryota Natsume, Shigeo Morishima, Angjoo Kanazawa, and Hao Li. PIFu: Pixel-aligned implicit function for high-resolution clothed human digitization. In ICCV, 2019.   \n[45] Wentao Shangguan, Yu Sun, Weijie Gan, and Ulugbek S Kamilov. Learning cross-video neural representations for high-quality frame interpolation. In ECCV, 2022.   \n[46] Hyeonjun Sim, Jihyong Oh, and Munchurl Kim. XVFI: extreme video frame interpolation. In ICCV, 2021.   \n[47] Uriel Singer, Adam Polyak, Thomas Hayes, Xi Yin, Jie An, Songyang Zhang, Qiyuan Hu, Harry Yang, Oron Ashual, Oran Gafni, Devi Parikh, Sonal Gupta, and Yaniv Taigman. Make-A-Video: Text-to-video generation without text-video data. arXiv preprint arXiv:2209.14792, 2022.   \n[48] Vincent Sitzmann, Julien Martel, Alexander Bergman, David Lindell, and Gordon Wetzstein. Implicit neural representations with periodic activation functions. In NeurIPS, 2020.   \n[49] Li Siyao, Shiyu Zhao, Weijiang Yu, Wenxiu Sun, Dimitris Metaxas, Chen Change Loy, and Ziwei Liu. Deep animation video interpolation in the wild. In CVPR, 2021.   \n[50] Zachary Teed and Jia Deng. RAFT: Recurrent all-pairs field transforms for optical flow. In ECCV, 2020.   \n[51] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In NeurIPS, 2017.   \n[52] Chao-Yuan Wu, Nayan Singhal, and Philipp Krahenbuhl. Video compression through image interpolation. In ECCV, 2018.   \n[53] Xiangyu Xu, Li Siyao, Wenxiu Sun, Qian Yin, and Ming-Hsuan Yang. Quadratic video interpolation. In NeurIPS, 2019.   \n[54] Tianfan Xue, Baian Chen, Jiajun Wu, Donglai Wei, and William T Freeman. Video enhancement with task-oriented flow. IJCV, 2019.   \n[55] Guozhen Zhang, Yuhan Zhu, Haonan Wang, Youxin Chen, Gangshan Wu, and Limin Wang. Extracting motion and appearance via inter-frame attention for efficient video frame interpolation. In CVPR, 2023.   \n[56] Richard Zhang, Phillip Isola, Alexei A Efros, Eli Shechtman, and Oliver Wang. The unreasonable effectiveness of deep features as a perceptual metric. In CVPR, 2018.   \n[57] Tinghui Zhou, Shubham Tulsiani, Weilun Sun, Jitendra Malik, and Alexei A Efros. View synthesis by appearance flow. In ECCV, 2016. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "7 Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this supplementary material, we first provide details of our method in Section 7.1, including descriptions of flow metrics and reverse flow normalization. Besides, we present the network architectures of both the GIMM module and frame synthesis module in Section 7.2. Moreover, we provide details of our implementation and the corresponding training hyperparameters in Section 7.3 and Section 7.4 respectively. We show qualitative results of motion modeled by GIMM and its model variants in Section 7.5. Furthermore, we present integrations with other flow-based VFI methods in Section 7.6. Finally, we discuss the potential broader impacts in Section 7.7. ", "page_idx": 13}, {"type": "text", "text": "7.1 Method Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Flow metrics. Following Splatting-based Synthesis [35], the implementation of the forward warping operation within our GIMM module leverages flow metrics to enhance its accuracy. More precisely, we employ flow consistency $U_{f l o w}^{i}$ , and flow variance $U_{v a r}^{i}$ . For illustrative purposes, taking $F_{0\\rightarrow1}$ as a representative example, we compute its associated metrics as follows: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{U_{f l o w}^{0}=||F_{0\\rightarrow1}+\\overleftarrow{\\omega}(F_{1\\rightarrow0},F_{0\\rightarrow1})||_{1},}\\\\ &{U_{v a r}^{0}=||\\sqrt{G((F_{0\\rightarrow1})^{2})-G(F_{0\\rightarrow1})^{2}}||,}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\leftleftarrows$ is the backward warping operator, and $G(\\cdot)$ denotes a $3\\times3$ Gaussian filter. ", "page_idx": 13}, {"type": "text", "text": "Reverse flow normalization. In GIMM-VFI, we employ reverse flow normalization to convert the predicted normalized flow, $V_{t}$ , into bilateral flows for interpolation purposes. This transformation is expressed through the following equations: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{l}{F_{t\\rightarrow0}=-t\\cdot\\phi^{-1}(V_{t}),}\\\\ {F_{t\\rightarrow1}=(1-t)\\cdot\\phi^{-1}(V_{t}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "In this context, $\\phi^{-1}$ represents the scaling operation that extends the value range from $[0,1]$ to $\\mathbb{R}$ using an instance-specific scaling factor. This reverse flow normalization operation is identical to the one used in IFE [13]. ", "page_idx": 13}, {"type": "text", "text": "7.2 Network Architecture ", "text_level": 1, "page_idx": 13}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/1149a7e45773616213e2c7ca32c1230b48078ac7e4b853efaf8a17d8c06aaaa2.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 6: Details of the network architectures within the GIMM Module. The numbers in parentheses denote the output channel count for convolutional layers or the dimensionality shift from input to output for linear layers. ", "page_idx": 13}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/5aa415e105b4cafaf50826a816da288c291ec4c332ae86a43bbad84f9739e0aa.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Figure 7: Overview of the frame synthesis module. The frame synthesis module conducts multiscale flow refinements and predicts warping masks for interpolation, including the intermediate warping mask $M_{t}^{\\prime}$ predicted by the initial decoder. It integrates the images and their pyramid features $A_{0}^{l},A_{1}^{l}|l\\in1,2$ during decoding, updating predictions with correlation information from the Bidirectional Correlation Volume, which is constructed with correlation features $(C_{0},C_{1})$ . Ultimately, we use the outputs from the Final Decoder to perform the final interpolation of $I_{t}$ through the Multi-field Refinement block. This block is adapted from AMT-G [29]. Modified components are highlighted in green for clarity. ", "page_idx": 14}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/f25d0eb633cd5a741705fa50c4236eb05b60c56983a78183dc74470b1a257455.jpg", "img_caption": ["Figure 8: The network architectures of the modified decoders within the frame synthesis module. Unless specifically noted, each convolutional layer is activated by a PReLU function. The Deeper IFRBlock (highlighted in red) is based on the decoder architecture (IFRBlock) introduced in IFRNet [26]. In particular, we enhance the original IFRBlock by adding two additional residual blocks to create the Deeper IFRBlock. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "GIMM module. The architectural details of the networks used in GIMM are shown in Fig. 6. The Motion Encoder and Latent Refiner use a similar convolutional network architecture with residual units. Each Residual Unit consists of two convolutional layers with a skip connection. The major differences between them are the number of channels and residual units. On the other hand, the coordinate-based network $g_{\\boldsymbol{\\theta}}$ is designed as a five-layer SIREN [48], incorporating the motion latent $L_{t}$ as an auxiliary input. ", "page_idx": 14}, {"type": "text", "text": "Frame synthesis module. Adapted from AMT-G [29], the framework of the Frame synthesis module is illustrated in Fig. 7. This module integrates two unique decoding stages: an adapted initial decoder and a revised final decoder, while the rest of the module\u2019s architecture remains unchanged from AMT-G. The architectural specifics of these modified decoders are shown in Fig. 8. ", "page_idx": 14}, {"type": "text", "text": "7.3 Implementation Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In addition to experiments in the main text, we present more detailed implementations of GIMM and GIMM-VFI in this section. ", "page_idx": 14}, {"type": "text", "text": "GIMM training. We begin by extracting optical flows from the training split of the Vimeo90K triplets dataset [54] using Flowformer [19]. With these extracted flows, we train GIMM, randomly cropping the flows to a resolution of $256\\times256$ . For each batch during training, we randomly select a timestep $t$ from the set $\\{0,0.5,1\\}$ to supervise. We set the batch size to 64, and train the model for 240 epochs with a learning rate of $1\\times\\bar{1}0^{-4}$ , using 2 NVIDIA V100 GPUs. ", "page_idx": 14}, {"type": "text", "text": "GIMM-VFI training. We integrate the pre-trained GIMM module and flow estimator into the GIMM-VFI model for end-to-end training on the arbitrary-timestep interpolation task. We implement two variants of GIMM-VFI, using two different flow estimators: the RAFT [50] and FlowFormer [19], designated as GIMM-VFI-R and GIMM-VFI-F, respectively. However, both versions of GIMM-VFI share the same training process. Similar to previous works [55, 20], we train our model on the complete Vimeo90K septuplet split [54] for 60 epochs with a batch size of 32 and a learning rate of $8\\times\\dot{1}0^{-5}$ . We randomly select triple subsets for training from each septuplet, following the same sampling strategy as previous research [55, 20]. We resize and randomly crop each frame into a resolution of $224\\times224$ and perform a series of augmentations including rotation, filpping, temporal order reversing and channel order reversing. We train our model on 8 NVIDIA V100 GPUs. ", "page_idx": 15}, {"type": "text", "text": "7.4 Training hyperparameters ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In addition to the implementation details in Sec. 7.3, we summarize the training settings for both GIMM and GIMM-VFI in Tab. 5. ", "page_idx": 15}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/12e460a12e0f013208744f48aaaf336e52bdaf8ab9026583aa97dcc160fcb81a.jpg", "table_caption": ["Table 5: Training settings for GIMM and GIMM-VFI. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "7.5 Qualitative Results of GIMM Motion Modeling ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We present additional qualitative results of GIMM motion modeling in Figure 9. The visualization showcases the modeled motion of GIMM and variants in the ablation study. Our observation confirms the effectiveness of GIMM\u2019s design and is consistent with the results from the ablation study in the main text. For example, the head motion in Figure 9 significantly deteriorates with noises across all timesteps when forward warping is replaced or latent refinement is skipped. ", "page_idx": 15}, {"type": "text", "text": "7.6 Integration with other flow-based VFI methods ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Our method GIMM focuses on continuous motion modeling, which further enables frame interpolation at arbitrary timesteps. We additionally integrate GIMM with other existing flow-based VFI approaches (e.g., TTVFI [31], IFRNet [26]), by supplying accurately modeled motion. For evaluations, we calculate PSNRs on arbitrary-timestep interpolation benchmark SNU-FILM-arb in Table 6. We observed that integrating the GIMM module resulted in significant improvements. This further demonstrates the effectiveness of GIMM for continuous motion modeling when integrated with existing flow-based VFI works. ", "page_idx": 15}, {"type": "text", "text": "7.7 Broader Impacts ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Our proposed method, GIMM-VFI, demonstrates strong performance in continuous frame interpolation, with applications spanning real-world scenarios such as creating cinematic special effects and producing slow-motion videos. This technique not only enhances these use cases but also opens doors for further research in video technology. At its core, GIMM-VFI employs the GIMM module for continuous motion modeling in video frame interpolation, a feature that could also be adapted for related tasks like video compression and predictive video analysis. Despite its strengths, our approach shares limitations with other frame interpolation methods and, in some cases, may introduce artifacts that could pollute visual data on the Internet. ", "page_idx": 15}, {"type": "image", "img_path": "ZlpJLQsr2v/tmp/ea8dc6b963a731df11a2e83a787da3fd157566a0e2f9a7d18dd438d2c275d2e2.jpg", "img_caption": ["Figure 9: Visual comparisons for 6X motion modeling on the Vimeo-septuplet-flow. We compare GIMM with its model variants mentioned in the ablation study of the main text. "], "img_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "ZlpJLQsr2v/tmp/b040ea3470710c2046d516b51f54951b57ec86ab6d155667c4bf0f9d68c05c7d.jpg", "table_caption": ["Table 6: Integrating GIMM with TTVFI and IFRNet. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "The checklist is designed to encourage best practices for responsible machine learning research, addressing issues of reproducibility, transparency, research ethics, and societal impact. Do not remove the checklist: The papers not including the checklist will be desk rejected. The checklist should follow the references and follow the (optional) supplemental material. The checklist does NOT count towards the page limit. ", "page_idx": 17}, {"type": "text", "text": "Please read the checklist guidelines carefully for information on how to answer these questions. For each question in the checklist: ", "page_idx": 17}, {"type": "text", "text": "\u2022 You should answer [Yes] , [No] , or [NA] .   \n\u2022 [NA] means either that the question is Not Applicable for that particular paper or the relevant information is Not Available.   \n\u2022 Please provide a short (1\u20132 sentence) justification right after your answer (even for NA). ", "page_idx": 17}, {"type": "text", "text": "The checklist answers are an integral part of your paper submission. They are visible to the reviewers, area chairs, senior area chairs, and ethics reviewers. You will be asked to also include it (after eventual revisions) with the final version of your paper, and its final version will be published with the paper. ", "page_idx": 17}, {"type": "text", "text": "The reviewers of your paper will be asked to use the checklist as one of the factors in their evaluation. While \"[Yes] \" is generally preferable to \"[No] \", it is perfectly acceptable to answer \"[No] \" provided a proper justification is given (e.g., \"error bars are not reported because it would be too computationally expensive\" or \"we were unable to find the license for the dataset we used\"). In general, answering \"[No] \" or \"[NA] \" is not grounds for rejection. While the questions are phrased in a binary way, we acknowledge that the true answer is often more nuanced, so please just use your best judgment and write a justification to elaborate. All supporting evidence can appear either in the main paper or the supplemental material, provided in appendix. If you answer [Yes] to a question, in the justification please point to the section(s) where related material for the question can be found. ", "page_idx": 17}, {"type": "text", "text": "IMPORTANT, please: ", "page_idx": 17}, {"type": "text", "text": "\u2022 Delete this instruction block, but keep the section heading \u201cNeurIPS paper checklist\", \u2022 Keep the checklist subsection headings, questions/answers and guidelines below. \u2022 Do not modify the questions and only use the provided macros for your answers. ", "page_idx": 17}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: We have made clear claims in the abstract and introduction that accurately reflect our paper\u2019s contributions to the studied problem. Please refer to the abstract and introduction for more detailed information. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 17}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We have discussions on the limitations of our proposed GIMM-VFI method in Section 5 of the main text. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 18}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our work does not include theoretical results. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 18}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We provide the implementation details and training hyperparameters in the supplementary materials. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 19}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 19}, {"type": "text", "text": "Answer: [No] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: We are unable to provide our code upon submission, but releasing the code to the public in the future is our plan. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why. ", "page_idx": 19}, {"type": "text", "text": "\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable). \u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 20}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We provide the general training information and evaluation settings in the main text. The full implementation details and training hyperparameters are presented in the supplementary materials. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 20}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [No] ", "page_idx": 20}, {"type": "text", "text": "Justification: This paper does not report error bars. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 20}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We provide the type and the number of GPUs used in our experiments. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 21}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We carefully follow the NeurIPS Code of Ethics. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 21}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We discuss the potential impacts in the supplementary materials. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 21}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: Our paper focuses on the problem of motion modeling in the video frame interpolation task, and poses no such risks. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 22}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: In our paper, we have cited the related papers. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 22}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 22}, {"type": "text", "text": "Justification: In our paper, we propose a new method GIMM-VFI. Upon submission, we do not provide the source code. But we will make the code public in the future after acceptance. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 22}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "page_idx": 22}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 23}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 23}]