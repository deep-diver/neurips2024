[{"type": "text", "text": "Imprecise Label Learning: A Unified Framework for Learning with Various Imprecise Label Configurations ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Hao Chen1,\u2217 Ankit Shah1, Jindong Wang2, Ran Tao1, Yidong Wang3, Xiang $\\mathrm{Li^{1}}$ Xing Xie2, Masashi Sugiyama4,5, Rita Singh1, Bhiksha Raj1,6 ", "page_idx": 0}, {"type": "text", "text": "1Carnegie Mellon University, 2Microsoft Research,3Peking University, 4 RIKEN AIP, 5The University of Tokyo, 6MBZUAI ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Learning with reduced labeling standards, such as noisy label, partial label, and supplementary unlabeled data, which we generically refer to as imprecise label, is a commonplace challenge in machine learning tasks. Previous methods tend to propose specific designs for every emerging imprecise label configuration, which is usually unsustainable when multiple configurations of imprecision coexist. In this paper, we introduce imprecise label learning (ILL), a framework for the unification of learning with various imprecise label configurations. ILL leverages expectation-maximization (EM) for modeling the imprecise label information, treating the precise labels as latent variables. Instead of approximating the correct labels for training, it considers the entire distribution of all possible labeling entailed by the imprecise information. We demonstrate that ILL can seamlessly adapt to partial label learning, semi-supervised learning, noisy label learning, and, more importantly, a mixture of these settings, with closed-form learning objectives derived from the unified EM modeling. Notably, ILL surpasses the existing specified techniques for handling imprecise labels, marking the first practical and unified framework with robust and effective performance across various challenging settings. We hope our work will inspire further research on this topic, unleashing the full potential of ILL in wider scenarios where precise labels are expensive and complicated to obtain. Code is available at: https: //github.com/Hhhhhhao/General-Framework-Weak-Supervision. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "One of the critical challenges in machine learning is the collection of annotated data for model training [1\u20136]. Ideally, every data instance would be fully annotated with precise labels. However, collecting such data can be expensive, time-consuming, and error-prone. Often, the labels can be intrinsically difficult to ascertain precisely. Factors such as a lack of annotator expertise and privacy concerns can also negatively affect the quality and completeness of the annotations. ", "page_idx": 0}, {"type": "text", "text": "In an attempt to circumvent this limitation, several methods have been proposed to permit model learning from the data annotated with reduced labeling standards, which are generally easier to obtain. We will refer to such labels as imprecise. Fig. 1 illustrates some typical mechanisms of label imprecision that are commonly addressed in the literature. Label imprecision requires a modification of the standard supervised training mechanism to build models for each specific case. For instance, partial label learning (PLL) [7\u201313] allows instances to have a set of candidate labels, instead of a single definitive one. Semi-supervised Learning (SSL) [14\u201323] seeks to enhance the generalization ability when only a small set of labeled data is available, supplemented by a larger unlabeled set. ", "page_idx": 0}, {"type": "image", "img_path": "0Lr9HQijA1/tmp/420aee8e892ba003f3e7a8f9410130061d499f600f9ddd6f01854ac0db3ebe88.jpg", "img_caption": ["Figure 1: Illustration of the full label and imprecise label configurations. We use an example dataset of 4 training instances and 3 classes. (a) Full label, the annotation is a single true label; (b) Partial label, the annotation is a label candidate set containing true label; (c) Semi-supervised, only part of the dataset is labeled, and the others are unlabeled; (d) Noisy label, the annotation is mislabeled. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Noisy label learning (NLL) [24\u201337] deals with noisy scenarios where the labels are corrupted or incorrect. There is a greater variety of other forms of label imprecision, including crowd-sourcing [38, 39], programmable weak supervision [40, 41], and bag-level supervision [42\u201347], among others. ", "page_idx": 1}, {"type": "text", "text": "While prior arts have demonstrated success in handling individual configurations of label imprecision, their approaches often differ substantially. They are tailored to a specific form of imprecision, as depicted in Fig. 2. Such specificity not only imposes the necessity of devising a solution for emerging types of label imprecision scenarios, but also complicates the deployment in practical settings, where the annotations can be highly complex and may involve multiple coexisting and interleaved imprecision configurations. For instance, considering a scenario where both noisy labels and partial labels appear together, it might be challenging to adapt previous methods in NLL or PLL to this scenario since they either rely on the assumption of definite labels [39] or the existence of the correct label among label candidates [48], thus requiring additional algorithmic design. In fact, a few recent works have attempted to address the combinations of imprecise labels in this way, such as partial noisy label [49, 50] and semi-supervised partial label learning [51, 52]. However, simply utilizing a more sophisticated or ad-hoc design can hardly scale to other settings. In addition, most of these approaches attempt to infer the correct labels given the imprecise information (e.g. through consistency with adjacent data [14, 53, 54], iterative refinement [55, 56], average over given labels [57, 58], etc., to train the model, which inevitably accumulates error during training. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we formulate the problem from a different perspective: rather than taking the imprecise label information provided as a potentially noisy or incomplete attempt at assigning labels to instances, we treat it generically as the information that imposes a deterministic or statistical restriction of the actual applicable true labels. We then train the model over the distribution of all possible labeling entailed by the given imprecise information. More specifically, for a dataset with samples $X$ and imprecise label information $I$ , we treat the inaccessible full and precise labels $Y$ as a latent variable. The model is then trained to maximize the likelihood of the provided information $I$ . Since the likelihood computed over the joint probability $\\begin{array}{r}{P(X,I;\\theta)=\\sum_{Y}\\^{\\cdot}P(X,I,Y;\\theta)}\\end{array}$ must marginalize out $Y$ , the actual information $I$ provided could permit a potent ially exponential number of labeling. To deal with the resulting challenge of maximizing the logarithm of an expectation, we use the common approach of expectation-maximization (EM) [59], where the $\\mathrm{E}$ -step computes the expectation of $\\bar{P}(X,I,Y;\\theta)$ given the posterior of current belief $P(Y|X,I;\\theta^{t})$ at time step $t$ and the M-step maximizes the tight variational lower bound over $P(X,I;\\theta)$ . The overall framework is thus largely agnostic to the various nature of label imprecision, with the imprecise label only affecting the manner in which the posterior $P(Y|X,I;\\theta^{t})$ is computed. In fact, current approaches designed for various imprecise label scenarios can be treated as specific instances of our framework. Our approach can serve as a solution towards a unified and generalized view for learning with various imprecise labels. ", "page_idx": 1}, {"type": "text", "text": "While there exist earlier attempts on generalized or EM solutions for different (other) imprecise supervisions or fuzzy observations [60\u201364, 45, 65\u201367], they usually require additional assumptions and approximations on the imprecise information for learnablility [48, 68], thus presenting limited scalability on practical settings [62]. On the contrary, the unified framework we propose subsumes all of these and naturally extends to the more practical \u201cmixed\u201d style of data, where different types of imprecise labels coexist. Moreover, for noisy labels, our framework inherently enables the learning of a noise model, as we will show in Section 3.2. Through comprehensive experiments, we demonstrate that the proposed imprecise label learning (ILL) framework not only outperforms previous methods ", "page_idx": 1}, {"type": "text", "text": "Figure 2: Baseline model pipelines for various imprecise label configurations. (a) PiCO [13] for partial label learning. (b) FixMatch [18] for semi-supervised learning. (c) SOP [69] for noisy label learning. (d) The proposed unified framework. It accommodates any imprecise label configurations and also mixed imprecise labels with an EM formulation. ", "page_idx": 2}, {"type": "text", "text": "for dealing with single imprecise labels of PLL, NLL, and SSL, but also presents robustness and effectiveness for mixed imprecise label learning (MILL) settings, leveraging the full potential to more challenging scenarios. Our contributions are summarized as follows: ", "page_idx": 2}, {"type": "text", "text": "\u2022 We propose an EM framework towards the unification of learning from various imprecise labels. \u2022 We establish scalable and consistent state-of-the-art (SOTA) performance with the proposed method on partial label learning, semi-supervised learning, and noisy label learning, demonstrating our method\u2019s robustness in more diverse, complex label noise scenarios. \u2022 To the best of our knowledge, our work is the first to show the robustness and effectiveness of a single unified method for handling the mixture of various imprecise labels. ", "page_idx": 2}, {"type": "text", "text": "2 Preliminary ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we illustrate the notations and baselines from different imprecise label settings that adopt various solutions. We will show later how our proposed method generalize and subsumes these prior arts. Let $\\mathcal{X}$ denote the input space, and $\\mathcal{V}=[\\bar{C}]:=\\{1,\\dots,C\\}$ represent the label space with $C$ distinct labels. A fully annotated training dataset of size $N$ is represented as $\\begin{array}{r}{\\mathcal{D}=\\{(\\mathbf{x}_{i},\\bar{y}_{i})\\}_{i\\in[N]}}\\end{array}$ Learning with imprecise labels involves approximating the mapping function $f\\circ g:\\mathcal{X}\\to\\mathcal{Y}$ from a training dataset where the true label $y$ is not fully revealed from the annotation process. Here $f$ is the backbone for feature extraction, $g$ refers to the classifier built on top of the features, and the output from $f\\circ g$ is the predicted probability $\\mathbf{p}(y|\\mathbf{x};\\theta)$ , where $\\theta$ is the learnable parameter for $f\\circ g$ . In this study, we primarily consider three imprecise label configurations (as illustrated in Fig. 1) and their corresponding representative learning paradigms (as shown in Fig. 2), namely partial label learning, semi-supervised learning, and noisy label learning. ", "page_idx": 2}, {"type": "text", "text": "Partial label learning (PLL). PLL aims to learn with a candidate label set s $\\subset\\mathcal{V}$ , where the ground truth label $y\\,\\in\\,\\mathcal{V}$ is concealed in s. The training data for partial labels thus becomes $\\bar{\\mathcal{D}}_{\\mathrm{PLL}}=\\left\\{\\left(\\mathbf{x}_{i},\\mathbf{s}_{i}\\right)\\right\\}_{i\\in[N]}$ . PiCO [13] is a recent contrastive method that employs class prototypes to enhance label disambiguation (as shown in Fig. 2(a)). It optimizes the cross-entropy $\\textstyle(\\mathrm{CE})^{2}$ loss between the prediction of the augmented training sample $\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x})$ and the disambiguated labels $\\hat{\\bf s}$ . PiCO learns a set of class prototypes from the features associated with the same pseudo-targets. A contrastive loss, based on MOCO [70], is employed to better learn the feature space, drawing the projected and normalized features $\\mathbf{z}_{\\mathrm{w}}$ and $\\mathbf{z}_{\\mathrm{s}}$ of the two augmented versions of data $\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x})$ and $A_{\\mathrm{s}}(\\mathbf{x})$ 3 closer. The objective of PiCO is formulated as: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{PiCO}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x});\\theta),\\hat{\\mathbf{s}}\\right)+\\mathcal{L}_{\\mathrm{Cont}}\\left(\\mathbf{z}_{\\mathrm{w}},\\mathbf{z}_{\\mathrm{s}},\\mathcal{M}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Semi-supervised learning (SSL). For SSL, we can define the labeled dataset as $\\begin{array}{r l}{\\mathcal{D}_{\\mathrm{SSL}}^{\\mathrm{L}}}&{{}=}\\end{array}$ $\\{(\\mathbf{x}_{i}^{1},y_{i}^{1})\\}_{i\\in[N^{\\mathrm{L}}]}$ , and the unlabeled dataset as $\\mathcal{D}^{\\mathrm{U}}\\;=\\;\\{\\mathbf{x}_{j}^{\\mathrm{u}}\\}_{j\\in[N^{\\mathrm{L}}+1,N^{\\mathrm{L}}+N^{\\mathrm{U}}]}$ , with $N^{\\mathrm{L}}\\ll N^{\\mathrm{U}}$ . A general confidence-thresholding based self-training [53, 18] pipeline for SSL is shown in Fig. 2(b). Consider FixMatch [18] as an example; there are usually two loss components: the supervised CE loss on labeled data and the unsupervised CE loss on unlabeled data. For the unsupervised objective, the pseudo-labels $\\hat{y}^{\\mathrm{u}}$ from the network itself are used to train on the unlabeled data. A \u201cstrong-weak\u201d augmentation [53] is commonly adopted. To ensure the quality of the pseudo-labels, only the pseudo-labels whose confidence scores $\\hat{p}^{\\mathrm{u}}$ are greater than a threshold $\\tau$ are selected to participate in training: ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{Fix}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x}^{1});\\theta),y^{1}\\right)+\\mathbb{1}\\left(\\hat{p}^{\\mathrm{u}}\\geq\\tau\\right)\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{s}}(\\mathbf{x}^{\\mathrm{u}});\\theta),\\hat{y}^{\\mathrm{u}}\\right).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Noisy label learning (NLL). NLL aims at learning with a dataset of corrupted labels, $\\mathcal{D}_{\\mathrm{NLL}}=$ $\\{(\\mathbf{x}_{i},\\hat{y}_{i})\\}_{i\\in[N]}$ . We illustrate the NLL pipeline (in Fig. 2(c)) with the recent sparse overparameterization (SOP) model [69], where a sparse noise model consisting of parameters $\\mathbf{u}_{i},\\mathbf{v}_{i}\\in$ $[-1,1]^{C}$ for each sample is adopted. The noise model transforms the network prediction from the true label distribution into the noisy label distribution. A CE loss and a mean-squared-error (MSE) loss optimize parameter $\\{{\\mathbf{u}}_{i}\\}$ and $\\left\\{\\mathbf{v}_{i}\\right\\}$ respectively: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{SOP}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\phi\\left(\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x});\\theta)+\\mathbf{m}\\right),\\hat{y}\\right)+\\mathcal{L}_{\\mathrm{MSE}}\\left(\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x});\\theta)+\\mathbf{m},\\hat{y}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\phi$ denotes the $L_{\\infty}$ normalization and $\\mathbf{m}_{i}=\\mathbf{u}_{i}\\odot\\mathbf{u}_{i}\\odot\\hat{\\mathbf{y}}_{i}^{\\mathrm{oh}}-\\mathbf{v}_{i}\\odot\\mathbf{v}_{i}\\odot\\left(1-\\hat{\\mathbf{y}}_{i}^{\\mathrm{oh}}\\right)$ , with $\\hat{\\mathbf{y}}_{i}^{\\mathrm{oh}}$ referring to the one-hot version of $y_{i}$ . Consistency regularization with strong-weak augmentation and entropy class-balance regularization are additionally utilized for better performance in SOP [69]. ", "page_idx": 3}, {"type": "text", "text": "3 Imprecise Label Learning ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Although current techniques demonstrate potential in addressing particular forms of imprecise labels, they frequently fall short in adaptability and transferability to more complicated and more realistic scenarios where multiple imprecise label types coexist and interleave. This section first defines the proposed expectation-maximization (EM) formulation for learning with various imprecise labels. Then, we demonstrate that our unified framework seamlessly extends to partial label learning, semisupervised label learning, noisy label learning, and the more challenging setting of mixed imprecise label learning. Connections and generalization to previous pipelines can also be drawn clearly under the proposed EM framework. ", "page_idx": 3}, {"type": "text", "text": "3.1 A Unified Framework for Learning with Imprecise Labels ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Exploiting information from imprecise labels. The challenge of learning with imprecise labels lies in learning effectively with inaccurate or incomplete annotation information. Per the analysis above, prior works catering to specific individual imprecise labels either explicitly or implicitly attempt to infer the precise labels from the imprecise label information. For example, partial label learning concentrates on the disambiguation of the ground truth label from the label candidates [13, 71, 50] or averaging equally over the label candidates [72]. In semi-supervised learning, after the model initially learns from the labeled data, the pseudo-labels are treated as correct labels and utilized to conduct self-training on the unlabeled data [73, 18]. Similarly, for noisy label learning, an integral part that helps mitigate overftiting to random noise is the implementation of an accurate noise model capable of identifying and rectifying the incorrect labels [33, 69], thereby ensuring the reliability of the learning process. However, inferring the correct labels from the imprecise labels or utilizing the imprecise labels directly can be very challenging and usually leads to errors accumulated during training [73, 74], which is also known as the confirmation bias. In this work, we take a different approach: we consider all possible labeling along with their likelihood that the imprecise labels fulflil to train the model, rather than using a single rectified label from the imprecise information. Such an approach also eliminates the requirements for designing different methods for various imprecise labels and provides a unified formulation instead, where closed-form solutions can be derived. ", "page_idx": 3}, {"type": "text", "text": "A unified framework for learning with imprecise labels (ILL). Let $\\{\\mathbf{x}_{i}\\}_{i\\in[N]}$ represent the features as realizations from $X$ and $\\{y_{i}\\}_{i\\in[N]}$ represent their precise labels as realizations from $Y$ for the training data. Ideally, $Y$ would be fully specified for $X$ . In the imprecise label scenario, however, $Y$ is not provided; instead we obtain imprecise label information $I$ . We view $I$ not as labels, but more abstractly as a variable representing the information about the labels. From this perspective, the actual labels $Y$ would have a distribution $P(\\boldsymbol{Y}|I)$ , and $I$ can present in various forms. When the information $I$ provided is the precise true label of the data, $P(\\boldsymbol{Y}|I)$ would be a delta distribution, taking a value 1 at the true label, and 0 elsewhere. If $I$ represents partial labels, then $P(\\boldsymbol{Y}|I)$ would have non-zero value over the candidate labels, and be 0 elsewhere. When $I$ represents a set of noisy labels, $P(\\boldsymbol{Y}|I)$ would represent the distribution of the true labels, given the noisy labels. When $I$ does not contain any information, i.e., unlabeled data, $Y$ can take any value. ", "page_idx": 3}, {"type": "text", "text": "By the maximum likelihood estimation (MLE) principle, we must estimate the model to maximize the likelihood of the data/information we have been provided, namely $X$ and $I$ . Let $P(X,I;\\theta)$ represent a parametric form for the joint distribution of $X$ and $I^{4}$ Explicitly considering the labels $Y$ , we have $\\begin{array}{r}{\\bar{P(X,I;\\theta)}=\\sum_{Y}P(X,\\bar{Y},I;\\theta)}\\end{array}$ . The maximum likelihood principle requires us to find: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\theta^{*}=\\operatorname{arg\\,max}_{\\theta}\\ \\log P(X,I;\\theta)=\\operatorname{arg\\,max}_{\\theta}\\ \\log\\sum_{Y}P(X,Y,I;\\theta),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "with $\\theta^{*}$ denotes the optimal value of $\\theta$ . Eq. (4) features the log of an expectation and cannot generally be solved in closed-form, and requires iterative hill-climbing solutions. Of these, arguably the most popular is the expectation-maximization (EM) algorithm [59], which iteratively maximizes a tight variational lower bound on the log-likelihood. In our case, applying it becomes: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\theta^{t+1}=\\underset{\\theta}{\\arg\\operatorname*{max}}\\,\\mathbb{E}_{Y|X,I;\\theta^{t}}\\left[\\log P(X,Y,I;\\theta)\\right]\\,}\\\\ &{\\qquad=\\underset{\\theta}{\\arg\\operatorname*{max}}\\,\\mathbb{E}_{Y|X,I;\\theta^{t}}\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\theta^{t}$ is the $t^{\\mathrm{th}}$ estimate of the optimal $\\theta$ . Note that $P(X;\\theta)$ is omitted from Eq. (5) since $P(X)$ does not rely on $\\theta$ . The detailed derivation of the variational lower bound is shown in Appendix C.1. There are several implications from Eq. (5). (i) The expectation over the posterior $P(Y|X,I;\\theta^{t})$ equates to considering all labeling entailed by the imprecise label information $I$ , rather than any single (possibly corrected) choice of label. For independent instances setting mostly studied in this paper, we can derive closed-form training objectives from this formulation as shown in Section 3.2. (ii) The property of the second term $\\log P(I|X,Y;\\theta)$ is dependent on the nature of imprecise label $I$ If $I$ is derivable from true labels $Y$ , such as the actual labels or the label candidates, it can be reduced to $P(I|Y)$ , i.e., the probability of $I$ is no longer dependent on $X$ or $\\theta$ and thus can be ignored from Eq. (5). If $I$ represents the noisy labels, $P(I|X,Y;\\theta)$ instead includes a potentially learnable noise model. (iii) It is a general framework towards the unification of any label configuration, including full labels, partial labels, low-resource labels, noisy labels, etc. In this work, we specialize the proposed EM framework to PLL, SSL, NLL, and the mixture of them in the following. ", "page_idx": 4}, {"type": "text", "text": "3.2 Instantiating the Unified EM Formulation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We illustrate how to seamlessly expand the formulation from Eq. (5) to partial label learning, semisupervised learning, noisy label learning, and mixture settings, with derived closed-form loss function5 for each setting here. The actual imprecise labels only affect the manner in which the posterior $P(Y|X,I;\\theta^{t})$ is computed for each setting. We show that all learning objectives derived from Eq. (5) naturally include a consistency term with the posterior as the soft target. We also demonstrate that the proposed unified EM framework closely connects with the prior arts, which reveals the potential reason behind the success of these techniques. Note that while we only demonstrate the application of the proposed framework to four settings here, it can also be flexibly extended to other settings. More details of derivation below are shown in Appendix C. ", "page_idx": 4}, {"type": "text", "text": "Partial label learning (PLL). The imprecise label $I$ for partial labels is defined as the label candidate sets $S$ containing the true labels. These partial labels indicate that the posterior $P(Y|X,S;\\theta^{t})$ can only assign its masses on the candidate labels. Since $S$ can be derived from true labels $Y$ , $P(S|X;Y;\\theta)$ reduces to $P(S|Y)$ , and thus can be ignored. We also demonstrate with instance dependent partial labels that maintains $P(S|X,Y;\\theta)$ in Appendix D.2.2. Defining the label candidates as $\\{\\mathbf{s}_{i}\\}_{i\\in[N]}$ and substituting it in Eq. (5), we have the loss function of PLL derived using ILL framework: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{PLL}}=-\\sum_{Y\\in[C]}P(Y|X,S;\\theta^{t})\\log P(Y|X;\\theta)\\equiv\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{s}}(\\mathbf{x});\\theta),\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x}),\\mathbf{s};\\theta^{t})\\right),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathbf{p}(y|\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x}),\\mathbf{s};\\theta^{t})$ is the normalized probability that $\\begin{array}{r}{\\sum_{k\\in C}p_{k}\\ =\\ 1}\\end{array}$ , and $p_{k}\\;=\\;0,\\forall k\\;\\in$ s. Eq. (6) corresponds exactly to consistency regularization  [53], with the normalized predicted probability as the soft pseudo-targets. We use $\\mathcal{A}_{s}$ and $\\mathcal{A}_{w}$ to denote the strong and weak augmentation as stated earlier. This realization on PLL shares similar insights as [12] which exploits a gradually induced loss weight for PLL on multiple augmentations of the data. However, our framework is much simpler and more concise as shown in Appendix D.2.2, which does not require additional techniques. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Semi-supervised learning (SSL) In SSL, the input $X$ consists of the labeled data $X^{\\mathrm{L}}$ and the unlabeled data $X^{\\mathrm{U}}$ . The imprecise label for SSL is realized as the limited number of full labels $Y^{\\mathrm{L}}$ for $X^{\\mathrm{L}}$ . The labels $Y^{\\mathrm{U}}$ for unlabeled $X^{\\mathrm{U}}$ are unknown and become the latent variable. Interestingly, for the unlabeled data, there is no constraint on possible labels it can take. The posterior $P(Y^{\\mathrm{{U}}}|X^{\\mathrm{{L}}},X^{\\mathrm{{U}}},Y^{\\mathrm{{L}}};\\theta)$ , which is the actual prediction from the network, can be directly utilized as soft targets for self-training. Since $Y^{\\mathrm{L}}$ is conditionally independent with $Y^{\\mathrm{U}}$ given $X$ , the second term of Eq. (5): $P(Y^{\\mathrm{L}}|X^{\\mathrm{L}},X^{\\mathrm{U}},Y^{\\mathrm{U}};\\theta)$ , is reduced to $P(\\tilde{Y}^{\\mathrm{L}}|X^{\\mathrm{L}};\\theta)$ , which corresponds to the supervised objective on labeled data. The loss function for SSL thus becomes: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{SSL}}=-\\displaystyle\\sum_{Y\\in[C]}P(Y^{\\mathrm{U}}|X^{\\mathrm{U}},X^{\\mathrm{L}},Y^{\\mathrm{L}};\\theta^{t})\\log P(Y^{\\mathrm{U}}|X^{\\mathrm{U}},X^{\\mathrm{L}};\\theta)-\\log P(Y^{\\mathrm{L}}|X^{\\mathrm{L}};\\theta)}\\\\ &{\\quad\\quad\\equiv\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{s}}(\\mathbf{x}^{\\mathrm{u}});\\theta),\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x}^{\\mathrm{u}});\\theta^{t})\\right)+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x}^{\\mathrm{l}});\\theta),y^{\\mathrm{l}}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The first term corresponds to the unsupervised consistency regularization usually employed in SSL, and the second term refers to the supervised CE loss only on labeled data. Eq. (7) has several advantages over the previous methods. It adopts the prediction as soft-targets of all possible labeling on unlabeled data, potentially circumventing the confirmation bias caused by pseudo-labeling and naturally utilizing all unlabeled data which resolves the quantity-quality trade-off commonly existing in SSL [18, 23]. It also indicates that previous pseudo-labeling with confidence threshold implicitly conducts the EM optimization, where the maximal probable prediction approximates the expectation, and the degree of the approximation is determined by the threshold $\\tau$ , rationalizing the effectiveness of dynamic thresholding. ", "page_idx": 5}, {"type": "text", "text": "Noisy label learning (NLL). Things become more complicated here since the noisy labels $\\hat{Y}$ do not directly reveal the true information about $Y$ , thus $P(\\hat{Y}|Y,X;\\theta)$ inherently involves a noise model that needs to be learned. We define a simplified instance-independent6 noise transition model $\\mathcal{T}(\\hat{Y}|Y;\\omega)$ with parameters $\\omega$ , and take a slightly different way to formulate the loss function for NLL from the ILL framework: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{NLL}}=-\\displaystyle\\sum_{Y\\in[C]}P(Y|X,\\hat{Y};\\theta^{t},\\omega^{t})\\log P(Y|X,\\hat{Y};\\theta,\\omega^{t})-\\log P(\\hat{Y}|X;\\theta,\\omega)}\\\\ &{\\quad\\quad\\quad\\equiv\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|A_{\\mathrm{s}}(\\mathbf{x}),\\hat{y};\\theta,\\omega^{t}),\\mathbf{p}(y|A_{\\mathrm{w}}(\\mathbf{x}),\\hat{y};\\theta^{t},\\omega^{t})\\right)+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(\\hat{y}|A_{\\mathrm{w}}(\\mathbf{x});\\theta,\\omega),\\hat{y}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where the parameters $\\omega$ and $\\theta$ are learned end-to-end. The first term corresponds to the consistency regularization of prediction conditioned on noisy labels and the second term corresponds to the supervised loss on noisy predictions that are converted from the ground truth predictions. Both quantities are computed using the noise transition model given the noisy label $\\hat{y}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbf{p}(y|\\mathbf{x},\\hat{y};\\theta,\\omega^{t})\\propto\\mathbf{p}(y|\\mathbf{x};\\theta)\\mathcal{T}(\\hat{y}|y;\\omega^{t}),\\mathrm{and~}\\mathbf{p}(\\hat{y}|\\mathbf{x};\\theta,\\omega)=\\sum_{y\\in[C]}\\mathbf{p}(y|\\mathbf{x};\\theta)\\mathcal{T}(\\hat{y}|y;\\omega).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Mixture imprecise label learning (MILL). We additionally consider a more practical setting, mixture of imprecise label learning, with partial labels, noisy labels, and unlabeled data interleaved together. On the unlabeled data, the unsupervised objective is the same as the unsupervised consistency regularization of SSL as shown in Eq. (7). The labeled data here present partial and noisy labels $\\hat{\\bf s}$ Thus the noisy supervised objective in Eq. (9) becomes the supervised consistency regularization as in Eq. (6) of partial label setting to train the noise transition model, and the noisy unsupervised objective becomes the consistency regularization of the prediction conditioned on noisy partial labels. Thus we have the loss function for MILL derived as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{MIL}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}\\left(\\boldsymbol{y}\\mid\\mathcal{A}_{\\mathrm{s}}(\\mathbf{x}^{l}),\\hat{\\mathbf{s}}^{l};\\boldsymbol{\\theta},\\omega^{t}\\right),\\mathbf{p}\\left(\\boldsymbol{y}\\mid\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x}^{l}),\\hat{\\mathbf{s}}^{l};\\boldsymbol{\\theta}^{t},\\omega^{t}\\right)\\right)}\\\\ &{\\quad\\quad\\quad+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}\\left(\\boldsymbol{\\hat{y}}\\mid\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x}^{l});\\boldsymbol{\\theta},\\omega\\right),\\hat{\\mathbf{s}}^{l}\\right)}\\\\ &{\\quad\\quad\\quad+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(\\boldsymbol{y}|\\mathcal{A}_{\\mathrm{s}}(\\mathbf{x}^{\\mathrm{u}});\\boldsymbol{\\theta}),\\mathbf{p}(\\boldsymbol{y}|\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x}^{\\mathrm{u}});\\boldsymbol{\\theta}^{t})\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/06aeeac921d4ab210375fa2b66378c6c0f14260412bf7f9a1cb93d2cd47b1d91.jpg", "table_caption": ["Table 1: Accuracy of different partial ratio $q$ on CIFAR-10, CIFAR-100, and CUB-200 for partial label learning. The best and the second best results are indicated in bold and underline respectively. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "We can compute both quantity through the noise transition model: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathbf{p}(y|\\mathbf{x},\\hat{\\mathbf{s}};\\boldsymbol{\\theta},\\omega^{t})\\propto\\mathbf{p}(y|\\mathbf{x};\\boldsymbol{\\theta})\\prod_{\\hat{y}\\in\\hat{\\mathbf{s}}}T(y|\\hat{y};\\omega^{t}),\\mathrm{and}\\;\\mathbf{p}(\\hat{y}|\\mathbf{x};\\boldsymbol{\\theta},\\omega)=\\sum_{y\\in[C]}\\mathbf{p}(y|\\mathbf{x};\\boldsymbol{\\theta})T(\\hat{y}|y;\\omega).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we conduct extensive experiments to evaluate ILL. Albeit simple, the ILL framework achieves comparable state-of-the-art performance regarding previous methods on partial label learning, semi-supervised learning, and noisy label learning. Moreover, our experiments show that ILL could be easily extended to a more practical setting with a mixture of various imprecise label configurations. For all settings, we additionally adopt an entropy loss for balancing learned cluster sizes [75, 76], similarly as [69, 22]. Experiments are conducted with three runs using NVIDIA V100 GPUs. ", "page_idx": 6}, {"type": "text", "text": "4.1 Partial Label Learning ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Setup. Following [13], we evaluate our method on partial label learning setting using CIFAR-10 [77], CIFAR-100 [77], and CUB-200 [78]. We generate partially labeled datasets by filpping negative labels to false positive labels with a probability $q$ , denoted as a partial ratio. The $C-1$ negative labels are then uniformly aggregated into the ground truth label to form a set of label candidates. We consider $q\\in\\{0.1,0.3,0.5\\}$ for CIFAR-10, $q\\in\\{0.01,0.05,0.1\\}$ for CIFAR-100, and $q=0.05$ for CUB-200. We choose six baselines for PLL using ResNet-18 [1]: LWS [11], PRODEN [55], CC [9], MSE and EXP [79], and PiCO [13]. The detailed hyper-parameters, comparison with the more recent method R-CR [12] that utilizes a different training recipe and model [80], and comparison with instance-dependent partial labels [81] are shown in Appendix D.2.2. ", "page_idx": 6}, {"type": "text", "text": "Results. The results for PLL are shown in Table 1. Our method achieves the best performance compared to the baseline methods. Perhaps more surprisingly, on CIFAR-10 and CIFAR-100, our method even outperforms the fully-supervised reference, indicating the potential better generalization capability using the proposed framework, sharing similar insights as in Wu et al. [12]. While PiCO adopts a contrastive learning objective, our method still surpasses PiCO by an average of $\\mathbf{2.13\\%}$ on CIFAR-10 and $\\mathbf{2.72\\%}$ on CIFAR-100. Our approach can be further enhanced by incorporating contrastive learning objectives, potentially leading to more significant performance. ", "page_idx": 6}, {"type": "text", "text": "4.2 Semi-Supervised Learning ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Setup. For experiments of SSL, we follow the training and evaluation protocols of USB [82] on image and text classification. To construct the labeled dataset for semi-supervised learning, we uniformly select $l/C$ samples from each class and treat the remaining samples as the unlabeled dataset. We present the results on CIFAR-100 and STL-10 [77] for image classification, and IMDB [83] and Amazon Review [84] for text classification. We compare with the current methods with confidence thresholding, such as FixMatch [18], AdaMatch [85], FlexMatch [20], FreeMatch [22], and SoftMatch [23]. We also compare with methods with the contrastive loss, CoMatch [86] and SimMatch [87]. A full comparison of the USB datasets and hyper-parameters is shown in Appendix D.3. ", "page_idx": 6}, {"type": "text", "text": "Results. We present the results for SSL on Table 2. Although no individual SSL algorithm dominates the USB benchmark [82], our method still shows competitive performance. Notably, our method performs best on STL-10 with 40 labels and Amazon Review with 250 labels, outperforming the previous best by $\\mathbf{0.68\\%}$ and $\\mathbf{1.33\\%}$ . In the other settings, the performance of our method is also very close to the best-performing methods. More remarkably, our method does not employ any thresholding, re-weighting, or contrastive techniques to achieve current results, demonstrating a significant potential to be further explored. ", "page_idx": 6}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/ff983d517fe97079f14c4300ef855fb6512dc77864986e48779073e0afd26154.jpg", "table_caption": ["Table 2: Error rate of different number of labels $l$ on CIFAR-100, STL-10, IMDB, and Amazon Review datasets for semi-supervised learning. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/5b4ffadd001b4bb92fcfb6f9fb5be95f8cb38cc4063f1572ba8075eebe1c5d23.jpg", "table_caption": ["Table 3: Accuracy of synthetic noise on CIFAR-10 and CIFAR-100 and instance noise on Clothing1M and WebVision for noisy label learning. We use noise ratio of $\\{0.2,0.5,0.8\\}$ for synthetic symmetric noise and 0.4 for asymmetric label noise. The instance noise ratio is unknown. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "4.3 Noisy Label Learning ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Setup. We conduct the experiments of NLL following SOP [69] on both synthetic symmetric/asymmetric noise on CIFAR-10 and CIFAR-100, and more realistic and larger-scale instance noise on Clothing1M [88], and WebVision [89]. To introduce the synthetic symmetric noise to CIFAR-10 and CIFAR-100, we uniformly filp labels for a probability $\\eta$ into other classes. For asymmetric noise, we only randomly filp the labels for particular pairs of classes. The introduced noise is then treated as ground truth labels to train the model. We mainly select three previous best methods as baselines: DivideMix [33]; ELR [32]; and SOP [69]. We also include the normal cross-entropy (CE) training and mixup [90] as baselines. More comparisons of other methods [91, 28] and on CIFAR-10N [92] with training details and more baselines [93, 28] are shown in Appendix D.4. ", "page_idx": 7}, {"type": "text", "text": "Results. We present the noisy label learning results in Table 3. The proposed method is comparable to the previous best methods. On synthetic noise of CIFAR-10, our method demonstrates the best performance on both symmetric noise and asymmetric noise. On CIFAR-100, our method generally produces similar results comparable to SOP. One may notice that our method shows inferior performance on asymmetric noise of CIFAR-100; we argue this is mainly due to the oversimplification of the noise transition model. Our method also achieves the best results on WebVision, outperforming the previous best by $\\mathbf{2.05\\%}$ . On Clothing1M, our results are also very close to DivideMix, which trains for 80 epochs compared to 10 epochs in ours. ", "page_idx": 7}, {"type": "text", "text": "4.4 Mixed Imprecise Label Learning ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Setup. We evaluate on CIFAR-10 and CIFAR-100 in a more challenging and realistic setting, the mixture of various imprecise label configurations, with unlabeled, partially labeled, and noisy labeled data existing simultaneously. We first sample the labeled dataset and treat other samples as the unlabeled. On the labeled dataset, we generate partial labels and randomly corrupt the true label of the partial labels. We set $l\\in\\{1000,50\\bar{0}00,5000\\bar{0}\\}$ for CIFAR-10, and $l\\in\\{5000,\\bar{1}0000,50000\\}$ for ", "page_idx": 7}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/ca0452c9052f70e850e49f885691d1b8b46e6443c8051c9baa589e7f519cb534.jpg", "table_caption": ["Table 4: Accuracy comparison of mixture of different imprecise labels. We report results of full labels, partial ratio $q$ of 0.1 (0.01) and 0.3 (0.05) for CIFAR-10 (CIFAR-100), and noise ratio $\\eta$ of 0.1, 0.2, and 0.3 for CIFAR-10 and CIFAR-100. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/8617c69e18b300d9773325508a944c26cd0f5c1a385ccc382cfff9b24468eb36.jpg", "table_caption": ["Table 5: Robust test accuracy results of our method on more mixture of imprecise label configurations. l, $q$ and $\\eta$ are the number of labels, partial, and noise ratio. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "CIFAR-100. For partial labels, we set $q\\in\\{0.1,0.3,0.5\\}$ for CIFAR-10, and $q\\in\\{0.01,0.05,0.1\\}$ for CIFAR-100. For noisy labels, we set $\\eta\\in\\{0,0.1,0.2,0.3\\}$ for both datasets. Since there is no prior work that can handle all settings all at once, we compare on partial noisy label learning with $\\mathrm{PiCO+}$ [94], IRNet [71], and DALI [50]. Although there are also prior efforts on partial semi-supervised learning [51, 52], they do not scale on simple dataset even on CIFAR-10. Thus, we did not include them in comparison. We conduct additional validation of our method on more complex settings for partial noisy labels with unlabeled data to demonstrate its robustness to various imprecise labels. ", "page_idx": 8}, {"type": "text", "text": "Results. We report the comparison with partial noisy label learning methods in Table 4. Compared to previous methods, the proposed method achieves the best performance. Despite the simplicity, our method outperforms $\\mathrm{PiCO+}$ and DALI with mixup, showing the effectiveness of dealing with mixed imprecise labels. We also report the results of our methods on more mixed imprecise label configurations in Table 5. Our method demonstrates significant robustness against various settings of the size of labeled data, partial ratio, and noise ratio. Note that this is the first work that naturally deals with all three imprecise label configurations simultaneously, with superior performance than previous methods handling specific types or combinations of label configurations. This indicates the enormous potential of our work in realistic applications for handling more practical and complicated data annotations common in real world applications. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We present the imprecise label learning (ILL) framework, a unified and consolidated solution for learning from all types of imprecise labels. ILL effectively employs an expectation-maximization (EM) algorithm for maximum likelihood estimation (MLE) of the distribution over the latent ground truth labels $Y$ , imprecise label information $I$ , and data $X$ . It naturally extends and encompasses previous formulations for various imprecise label settings, achieving promising results. Notably, in scenarios where mixed configurations of imprecise labels coexist, our method exhibits substantial robustness against diverse forms of label imprecision. The potential broader impact of the ILL framework is substantial. It stands poised to transform domains where obtaining precise labels poses a challenge, offering a simple, unified, and effective approach to such contexts. Beyond the three imprecise label configurations we have demonstrated in this study, the ILL framework shows promise for an extension to more intricate scenarios such as multi-instance learning [42] and multi-label crowd-sourcing learning [38]. However, it is also crucial to acknowledge the limitations of the ILL framework. Although its effectiveness has been substantiated on relatively smaller-scale datasets, additional empirical validation is necessary to assess its scalability to larger datasets. Furthermore, our study only considers balanced datasets; thus, the performance of the ILL framework when dealing with imbalanced data and open-set data still remains an open area for future exploration. We hope that our study will constitute a significant stride towards a comprehensive solution for imprecise label learning and catalyze further research in this crucial field. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Acknowledge ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Masashi Sugiyama was supported by the Institute for AI and Beyond, UTokyo. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 770\u2013778, 2016.   \n[2] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in Neural Information Processing Systems (NeurIPS), 30, 2017.   \n[3] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.   \n[4] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. arXiv preprint arXiv:2010.11929, 2020.   \n[5] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In Proceedings of the International Conference on Machine Learning (ICML), pages 8748\u20138763. PMLR, 2021.   \n[6] OpenAI. Gpt-4 technical report. 2023.   \n[7] Timothee Cour, Ben Sapp, and Ben Taskar. Learning from partial labels. The Journal of Machine Learning Research, 12:1501\u20131536, 2011.   \n[8] Jie Luo and Francesco Orabona. Learning from candidate labeling sets. Advances in Neural Information Processing Systems (NeurIPS), 2010.   \n[9] Lei Feng, Jiaqi Lv, Bo Han, Miao Xu, Gang Niu, Xin Geng, Bo An, and Masashi Sugiyama. Provably consistent partial-label learning. ArXiv, abs/2007.08929, 2020.   \n[10] Dengbao Wang, Min-Ling Zhang, and Li Li. Adaptive graph guided disambiguation for partial label learning. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44:8796\u20138811, 2019.   \n[11] Hongwei Wen, Jingyi Cui, Hanyuan Hang, Jiabin Liu, Yisen Wang, and Zhouchen Lin. Leveraged weighted loss for partial label learning. In Proceedings of the International Conference on Machine Learning (ICML), pages 11091\u201311100. PMLR, 2021.   \n[12] Dong-Dong Wu, Deng-Bao Wang, and Min-Ling Zhang. Revisiting consistency regularization for deep partial label learning. In Kamalika Chaudhuri, Stefanie Jegelka, Le Song, Csaba Szepesvari, Gang Niu, and Sivan Sabato, editors, Proceedings of the International Conference on Machine Learning (ICML), volume 162 of Proceedings of Machine Learning Research, pages 24212\u201324225. PMLR, 17\u201323 Jul 2022.   \n[13] Haobo Wang, Ruixuan Xiao, Yixuan Li, Lei Feng, Gang Niu, Gang Chen, and Junbo Zhao. PiCO: Contrastive label disambiguation for partial label learning. In International Conference on Learning Representations (ICLR), 2022.   \n[14] Dong-Hyun Lee et al. Pseudo-label: The simple and efficient semi-supervised learning method for deep neural networks. In Workshop on challenges in representation learning, ICML, page 896, 2013.   \n[15] Laine Samuli and Aila Timo. Temporal ensembling for semi-supervised learning. In International Conference on Learning Representations (ICLR), page 6, 2017.   \n[16] David Berthelot, Nicholas Carlini, Ian Goodfellow, Nicolas Papernot, Avital Oliver, and Colin A Raffel. Mixmatch: A holistic approach to semi-supervised learning. Advances in Neural Information Processing Systems (NeurIPS), 32, 2019.   \n[17] David Berthelot, Nicholas Carlini, Ekin D Cubuk, Alex Kurakin, Kihyuk Sohn, Han Zhang, and Colin Raffel. Remixmatch: Semi-supervised learning with distribution matching and augmentation anchoring. In International Conference on Learning Representations (ICLR), 2019.   \n[18] Kihyuk Sohn, David Berthelot, Nicholas Carlini, Zizhao Zhang, Han Zhang, Colin A Raffel, Ekin Dogus Cubuk, Alexey Kurakin, and Chun-Liang Li. Fixmatch: Simplifying semisupervised learning with consistency and confidence. Advances in Neural Information Processing Systems (NeurIPS), 33, 2020.   \n[19] Qizhe Xie, Minh-Thang Luong, Eduard Hovy, and Quoc V Le. Self-training with noisy student improves imagenet classification. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 10687\u201310698, 2020.   \n[20] Bowen Zhang, Yidong Wang, Wenxin Hou, Hao Wu, Jindong Wang, Manabu Okumura, and Takahiro Shinozaki. Flexmatch: Boosting semi-supervised learning with curriculum pseudo labeling. Advances in Neural Information Processing Systems (NeurIPS), 34, 2021.   \n[21] Xudong Wang, Zhirong Wu, Long Lian, and Stella X Yu. Debiased learning from naturally imbalanced pseudo-labels. In Proceedings of the IEEE/CVF International Conference on Computer Vision (CVPR), pages 14647\u201314657, 2022.   \n[22] Yidong Wang, Hao Chen, Qiang Heng, Wenxin Hou, Yue Fan, , Zhen Wu, Jindong Wang, Marios Savvides, Takahiro Shinozaki, Bhiksha Raj, Bernt Schiele, and Xing Xie. Freematch: Self-adaptive thresholding for semi-supervised learning. In International Conference on Learning Representations (ICLR), 2023.   \n[23] Hao Chen, Ran Tao, Yue Fan, Yidong Wang, Jindong Wang, Bernt Schiele, Xing Xie, Bhiksha Raj, and Marios Savvides. Softmatch: Addressing the quantity-quality trade-off in semisupervised learning. In International Conference on Learning Representations (ICLR), 2023.   \n[24] Tong Xiao, Tian Xia, Yi Yang, Chang Huang, and Xiaogang Wang. Learning from massive noisy labeled data for image classification. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 2691\u20132699, 2015.   \n[25] Alan Joseph Bekker and Jacob Goldberger. Training deep neural-networks based on unreliable labels. In 2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 2682\u20132686, 2016.   \n[26] Jacob Goldberger and Ehud Ben-Reuven. Training deep neural-networks using a noise adaptation layer. In International Conference on Learning Representations (ICLR), 2016.   \n[27] Aritra Ghosh, Himanshu Kumar, and P. Shanti Sastry. Robust loss functions under label noise for deep neural networks. In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), 2017.   \n[28] Bo Han, Quanming Yao, Xingrui Yu, Gang Niu, Miao Xu, Weihua Hu, Ivor Wai-Hung Tsang, and Masashi Sugiyama. Co-teaching: Robust training of deep neural networks with extremely noisy labels. Advances in Neural Information Processing Systems (NeurIPS), 2018.   \n[29] Zhilu Zhang and Mert Sabuncu. Generalized cross entropy loss for training deep neural networks with noisy labels. Advances in Neural Information Processing Systems (NeurIPS), 31, 2018.   \n[30] Junnan Li, Yongkang Wong, Qi Zhao, and M. Kankanhalli. Learning to learn from noisy labeled data. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 5046\u20135054, 2018.   \n[31] Yisen Wang, Xingjun Ma, Zaiyi Chen, Yuan Luo, Jinfeng Yi, and James Bailey. Symmetric cross entropy for robust learning with noisy labels. Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV), pages 322\u2013330, 2019.   \n[32] Sheng Liu, Jonathan Niles-Weed, Narges Razavian, and Carlos Fernandez-Granda. Earlylearning regularization prevents memorization of noisy labels. Advances in Neural Information Processing Systems (NeurIPS), 33, 2020.   \n[33] Junnan Li, Richard Socher, and Steven C.H. Hoi. Dividemix: Learning with noisy labels as semi-supervised learning. In International Conference on Learning Representations (ICLR), 2020.   \n[34] Xingjun Ma, Hanxun Huang, Yisen Wang, Simone Romano, Sarah Monazam Erfani, and James Bailey. Normalized loss functions for deep learning with noisy labels. In Proceedings of the International Conference on Machine Learning (ICML), 2020.   \n[35] Qi Wei, Haoliang Sun, Xiankai Lu, and Yilong Yin. Self-filtering: A noise-aware sample selection for label noise with confidence penalization. In European Conference on Computer Vision, pages 516\u2013532. Springer, 2022.   \n[36] Yivan Zhang, Gang Niu, and Masashi Sugiyama. Learning noise transition matrix from only noisy labels via total variation regularization. In Proceedings of the International Conference on Machine Learning (ICML), 2021.   \n[37] Qi Wei, Lei Feng, Haoliang Sun, Ren Wang, Chenhui Guo, and Yilong Yin. Fine-grained classification with noisy labels. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11651\u201311660, 2023.   \n[38] Shahana Ibrahim, Tri Nguyen, and Xiao Fu. Deep learning from crowdsourced labels: Coupled cross-entropy minimization, identifiability, and regularization. In International Conference on Learning Representations (ICLR), 2023.   \n[39] Jiaheng Wei, Zhaowei Zhu, Tianyi Luo, Ehsan Amid, Abhishek Kumar, and Yang Liu. To aggregate or not? learning with separate noisy labels. Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, Aug 2023.   \n[40] Jieyu Zhang, Cheng-Yu Hsieh, Yue Yu, Chao Zhang, and Alexander Ratner. A survey on programmatic weak supervision, 2022.   \n[41] Renzhi Wu, Shen-En Chen, Jieyu Zhang, and Xu Chu. Learning hyper label model for programmatic weak supervision. In International Conference on Learning Representations (ICLR), 2023.   \n[42] Maximilian Ilse, Jakub Tomczak, and Max Welling. Attention-based deep multiple instance learning. In International Conference on Machine Learning (ICML), pages 2127\u20132136. PMLR, 2018.   \n[43] Nan Lu, Gang Niu, Aditya Krishna Menon, and Masashi Sugiyama. On the minimal supervision for training any binary classifier from only unlabeled data. arXiv preprint arXiv:1808.10585, 2018.   \n[44] Clayton Scott and Jianxin Zhang. Learning from label proportions: A mutual contamination framework. Advances in Neural Information Processing Systems (NeurIPS), 33:22256\u201322267, 2020.   \n[45] Y. Zhang, N. Charoenphakdee, Z. Wu, and M. Sugiyama. Learning from aggregate observations. pages 7993\u20138005, 2020.   \n[46] Saurabh Garg, Yifan Wu, Alex Smola, Sivaraman Balakrishnan, and Zachary C. Lipton. Mixture proportion estimation and pu learning: A modern approach, 2021.   \n[47] Lei Feng, Senlin Shu, Nan Lu, Bo Han, Miao Xu, Gang Niu, Bo An, and Masashi Sugiyama. Pointwise binary classification with pairwise confidence comparisons. In International Conference on Machine Learning, pages 3252\u20133262. PMLR, 2021.   \n[48] Andrea Campagner. Learnability in \u201clearning from fuzzy labels\u201d. In 2021 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE), pages 1\u20136. IEEE, 2021.   \n[49] Zheng Lian, Mingyu Xu, Lan Chen, Licai Sun, Bin Liu, and Jianhua Tao. Arnet: Automatic refinement network for noisy partial label learning. arXiv preprint arXiv:2211.04774, 2022.   \n[50] Mingyu Xu, Zheng Lian, Lei Feng, Bin Liu, and Jianhua Tao. Dali: Dynamically adjusted label importance for noisy partial label learning, 2023.   \n[51] Qian-Wei Wang, Yu-Feng Li, and Zhi-Hua Zhou. Partial label learning with unlabeled data. In IJCAI, pages 3755\u20133761, 2019.   \n[52] Wei Wang and Min-Ling Zhang. Semi-supervised partial label learning via confidencerated margin maximization. Advances in Neural Information Processing Systems (NeurIPS), 33:6982\u20136993, 2020.   \n[53] Qizhe Xie, Zihang Dai, Eduard Hovy, Thang Luong, and Quoc Le. Unsupervised data augmentation for consistency training. Advances in Neural Information Processing Systems (NeurIPS), 33, 2020.   \n[54] Yu Yao, Tongliang Liu, Mingming Gong, Bo Han, Gang Niu, and Kun Zhang. Instancedependent label-noise learning under a structural causal model. Advances in Neural Information Processing Systems, 34:4409\u20134420, 2021.   \n[55] Jiaqi Lv, Miao Xu, Lei Feng, Gang Niu, Xin Geng, and Masashi Sugiyama. Progressive identification of true labels for partial-label learning. In Proceedings of the International Conference on Machine Learning (ICML), pages 6500\u20136510. PMLR, 2020.   \n[56] Chidubem Arachie and Bert Huang. Constrained labeling for weakly supervised learning. In Uncertainty in Artificial Intelligence, pages 236\u2013246. PMLR, 2021.   \n[57] Eyke H\u00fcllermeier and Weiwei Cheng. Superset learning based on generalized loss minimization. In Machine Learning and Knowledge Discovery in Databases: European Conference, ECML PKDD 2015, Porto, Portugal, September 7-11, 2015, Proceedings, Part II 15, pages 260\u2013275. Springer, 2015.   \n[58] Jiaqi Lv, Biao Liu, Lei Feng, Ning Xu, Miao Xu, Bo An, Gang Niu, Xin Geng, and Masashi Sugiyama. On the robustness of average losses for partial-label learning. IEEE Transactions on Pattern Analysis and Machine Intelligence, page 1\u201315, 2023.   \n[59] Arthur P Dempster, Nan M Laird, and Donald B Rubin. Maximum likelihood from incomplete data via the em algorithm. Journal of the royal statistical society: series B (methodological), 39(1):1\u201322, 1977.   \n[60] Thierry Den\u0153ux. Maximum likelihood estimation from fuzzy data using the em algorithm. Fuzzy sets and systems, 183(1):72\u201391, 2011.   \n[61] Eyke H\u00fcllermeier. Learning from imprecise and fuzzy observations: Data disambiguation through generalized loss minimization. International Journal of Approximate Reasoning, 55(7):1519\u20131534, 2014.   \n[62] Benjamin Quost and Thierry Denoeux. Clustering and classification of fuzzy data using the fuzzy em algorithm. Fuzzy Sets and Systems, 286:134\u2013156, 2016.   \n[63] Brendan Van Rooyen and Robert C Williamson. A theory of learning with corrupted labels. J. Mach. Learn. Res., 18(1):8501\u20138550, 2017.   \n[64] Chen Gong, Jian Yang, Jane You, and Masashi Sugiyama. Centroid estimation with guaranteed efficiency: A general framework for weakly supervised learning. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44(6):2841\u20132855, 2020.   \n[65] Chao-Kai Chiang and Masashi Sugiyama. Unified risk analysis for weakly supervised learning. arXiv preprint arXiv:2309.08216, 2023.   \n[66] Zixi Wei, Lei Feng, Bo Han, Tongliang Liu, Gang Niu, Xiaofeng Zhu, and Heng Tao Shen. A universal unbiased method for classification from aggregate observations. In Andreas Krause, Emma Brunskill, Kyunghyun Cho, Barbara Engelhardt, Sivan Sabato, and Jonathan Scarlett, editors, Proceedings of the 40th International Conference on Machine Learning, volume 202 of Proceedings of Machine Learning Research, pages 36804\u201336820. PMLR, 23\u201329 Jul 2023.   \n[67] Zheng Xie, Yu Liu, Hao-Yuan He, Ming Li, and Zhi-Hua Zhou. Weakly supervised auc optimization: A unified partial auc approach. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2024.   \n[68] Andrea Campagner. Learning from fuzzy labels: Theoretical issues and algorithmic solutions. International Journal of Approximate Reasoning, page 108969, 2023.   \n[69] Sheng Liu, Zhihui Zhu, Qing Qu, and Chong You. Robust training under label noise by over-parameterization. In Kamalika Chaudhuri, Stefanie Jegelka, Le Song, Csaba Szepesvari, Gang Niu, and Sivan Sabato, editors, Proceedings of the International Conference on Machine Learning (ICML), volume 162 of Proceedings of Machine Learning Research, pages 14153\u2013 14172. PMLR, 17\u201323 Jul 2022.   \n[70] Kaiming He, Haoqi Fan, Yuxin Wu, Saining Xie, and Ross Girshick. Momentum contrast for unsupervised visual representation learning. Proceedings of IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), Jun 2020.   \n[71] Zheng Lian, Mingyu Xu, Lan Chen, Licai Sun, Bin Liu, and Jianhua Tao. Irnet: Iterative refinement network for noisy partial label learning, 2022.   \n[72] Eyke H\u00fcllermeier and J\u00fcrgen Beringer. Learning from ambiguously labeled examples. Intelligent Data Analysis, 10(5):419\u2013439, 2006.   \n[73] Eric Arazo, Diego Ortego, Paul Albert, Noel E O\u2019Connor, and Kevin McGuinness. Pseudolabeling and confirmation bias in deep semi-supervised learning. In 2020 International Joint Conference on Neural Networks (IJCNN), pages 1\u20138. IEEE, 2020.   \n[74] Baixu Chen, Junguang Jiang, Ximei Wang, Jianmin Wang, and Mingsheng Long. Debiased pseudo labeling in self-training. arXiv preprint arXiv:2202.07136, 2022.   \n[75] David MacKay John Bridle, Anthony Heading. Unsupervised classifiers, mutual information and \u2019phantom targets. Advances in Neural Information Processing Systems (NeurIPS), 1991.   \n[76] Armand Joulin and Francis Bach. A convex relaxation for weakly supervised classifiers. In Proceedings of the International Conference on Machine Learning (ICML). PMLR, 2012.   \n[77] Alex Krizhevsky et al. Learning multiple layers of features from tiny images. 2009.   \n[78] Peter Welinder, Steve Branson, Takeshi Mita, Catherine Wah, Florian Schroff, Serge Belongie, and Pietro Perona. Caltech-ucsd birds 200. 2010.   \n[79] Lei Feng, Takuo Kaneko, Bo Han, Gang Niu, Bo An, and Masashi Sugiyama. Learning with multiple complementary labels. In Proceedings of the International Conference on Machine Learning (ICML), pages 3072\u20133081. PMLR, 2020.   \n[80] Sergey Zagoruyko and Nikos Komodakis. Wide residual networks. In British Machine Vision Conference (BMVC). British Machine Vision Association, 2016.   \n[81] Ning Xu, Congyu Qiao, Xin Geng, and Min-Ling Zhang. Instance-dependent partial label learning. Advances in Neural Information Processing Systems, 34:27119\u201327130, 2021.   \n[82] Yidong Wang, Hao Chen, Yue Fan, Wang Sun, Ran Tao, Wenxin Hou, Renjie Wang, Linyi Yang, Zhi Zhou, Lan-Zhe Guo, Heli Qi, Zhen Wu, Yu-Feng Li, Satoshi Nakamura, Wei Ye, Marios Savvides, Bhiksha Raj, Takahiro Shinozaki, Bernt Schiele, Jindong Wang, Xing Xie, and Yue Zhang. Usb: A unified semi-supervised learning benchmark. In Advances in Neural Information Processing Systems (NeurIPS), 2022.   \n[83] Andrew Maas, Raymond E Daly, Peter T Pham, Dan Huang, Andrew Y Ng, and Christopher Potts. Learning word vectors for sentiment analysis. In Proceedings of the 49th annual meeting of the association for computational linguistics: Human language technologies, pages 142\u2013150, 2011.   \n[84] Julian McAuley and Jure Leskovec. Hidden factors and hidden topics: understanding rating dimensions with review text. In Proceedings of the 7th ACM conference on Recommender systems, pages 165\u2013172, 2013.   \n[85] David Berthelot, Rebecca Roelofs, Kihyuk Sohn, Nicholas Carlini, and Alex Kurakin. Adamatch: A unified approach to semi-supervised learning and domain adaptation. International Conference on Learning Representations (ICLR), 2021.   \n[86] Junnan Li, Caiming Xiong, and Steven CH Hoi. Comatch: Semi-supervised learning with contrastive graph regularization. In Proceedings of the IEEE/CVF International Conference on Computer Vision (CVPR), pages 9475\u20139484, 2021.   \n[87] Mingkai Zheng, Shan You, Lang Huang, Fei Wang, Chen Qian, and Chang Xu. Simmatch: Semi-supervised learning with similarity matching. arXiv preprint arXiv:2203.06915, 2022.   \n[88] Tong Xiao, Tian Xia, Yi Yang, Chang Huang, and Xiaogang Wang. Learning from massive noisy labeled data for image classification. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 2691\u20132699, 2015.   \n[89] Wen Li, Limin Wang, Wei Li, Eirikur Agustsson, and Luc Van Gool. Webvision database: Visual learning and understanding from web data, 2017.   \n[90] Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical risk minimization. arXiv preprint arXiv:1710.09412, 2017.   \n[91] Giorgio Patrini, Alessandro Rozza, Aditya Krishna Menon, Richard Nock, and Lizhen Qu. Making deep neural networks robust to label noise: A loss correction approach. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 2233\u20132241, 2016.   \n[92] Jiaheng Wei, Zhaowei Zhu, Hao Cheng, Tongliang Liu, Gang Niu, and Yang Liu. Learning with noisy labels revisited: A study using real-world human annotations. arXiv preprint arXiv:2110.12088, 2021.   \n[93] Lu Jiang, Zhengyuan Zhou, Thomas Leung, Li-Jia Li, and Li Fei-Fei. Mentornet: Learning data-driven curriculum for very deep neural networks on corrupted labels. In International conference on machine learning, pages 2304\u20132313. PMLR, 2018.   \n[94] Haobo Wang, Ruixuan Xiao, Yixuan Li, Lei Feng, Gang Niu, Gang Chen, and Junbo Zhao. Pico+: Contrastive label disambiguation for robust partial label learning, 2022.   \n[95] Ekin D Cubuk, Barret Zoph, Jonathon Shlens, and Quoc V Le. Randaugment: Practical automated data augmentation with a reduced search space. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops (CVPR), pages 702\u2013703, 2020.   \n[96] Min-Ling Zhang and Fei Yu. Solving the partial label learning problem: An instance-based approach. In IJCAI, pages 4048\u20134054, 2015.   \n[97] Chen Gong, Tongliang Liu, Yuanyan Tang, Jian Yang, Jie Yang, and Dacheng Tao. A regularization approach for instance-based superset label learning. IEEE transactions on cybernetics, 48(3):967\u2013978, 2017.   \n[98] Ning Xu, Jiaqi Lv, and Xin Geng. Partial label learning via label enhancement. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 33, pages 5557\u20135564, 2019.   \n[99] Zhenguo Wu, Jiaqi Lv, and Masashi Sugiyama. Learning with proper partial labels. Neural Computation, 35(1):58\u201381, Jan 2023.   \n[100] Nam Nguyen and Rich Caruana. Classification with partial labels. In Proceedings of the 14th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 551\u2013559, 2008.   \n[101] Min-Ling Zhang, Bin-Bin Zhou, and Xu-Ying Liu. Partial label learning via feature-aware disambiguation. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pages 1335\u20131344, 2016.   \n[102] Liping Liu and Thomas Dietterich. A conditional multinomial mixture model for superset label learning. Advances in Neural Information Processing Systems (NeurIPS), 25, 2012.   \n[103] Antti Tarvainen and Harri Valpola. Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results. Advances in Neural Information Processing Systems (NeurIPS), 30, 2017.   \n[104] Takeru Miyato, Shin-ichi Maeda, Masanori Koyama, and Shin Ishii. Virtual adversarial training: a regularization method for supervised and semi-supervised learning. IEEE transactions on Pattern Analysis and Machine Intelligence, 41(8):1979\u20131993, 2018.   \n[105] Yi Xu, Lei Shang, Jinxing Ye, Qi Qian, Yu-Feng Li, Baigui Sun, Hao Li, and Rong Jin. Dash: Semi-supervised learning with dynamic thresholding. In Proceedings of the International Conference on Machine Learning (ICML), pages 11525\u201311536. PMLR, 2021.   \n[106] Ahmet Iscen, Giorgos Tolias, Yannis Avrithis, and Ondrej Chum. Label propagation for deep semi-supervised learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops (CVPR), 2019.   \n[107] Hieu Pham, Zihang Dai, Qizhe Xie, and Quoc V Le. Meta pseudo labels. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 11557\u201311568, 2021.   \n[108] Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding deep learning requires rethinking generalization, 2016.   \n[109] Chiyuan Zhang, Samy Bengio, Moritz Hardt, Benjamin Recht, and Oriol Vinyals. Understanding deep learning (still) requires rethinking generalization. Communications of the ACM, 64(3):107\u2013115, 2021.   \n[110] Hwanjun Song, Minseok Kim, Dongmin Park, Yooju Shin, and Jae-Gil Lee. Learning from noisy labels with deep neural networks: A survey. IEEE Transactions on Neural Networks and Learning Systems, page 1\u201319, 2022.   \n[111] Xingjun Ma, Hanxun Huang, Yisen Wang, Simone Romano, Sarah Erfani, and James Bailey. Normalized loss functions for deep learning with noisy labels. In Proceedings of the International Conference on Machine Learning (ICML), 2020.   \n[112] Yaodong Yu, Kwan Ho Ryan Chan, Chong You, Chaobing Song, and Yi Ma. Learning diverse and discriminative representations via the principle of maximal coding rate reduction, 2020.   \n[113] Tongliang Liu and Dacheng Tao. Classification with noisy labels by importance reweighting. In IEEE Transactions on pattern analysis and machine intelligence, pages 447\u2013461, 2016.   \n[114] Curtis Northcutt, Lu Jiang, and Isaac Chuang. Confident learning: Estimating uncertainty in dataset labels. Journal of Artificial Intelligence Research, 70:1373\u20131411, Apr 2021.   \n[115] Yivan Zhang, Gang Niu, and Masashi Sugiyama. Learning noise transition matrix from only noisy labels via total variation regularization. In Proceedings of the International Conference on Machine Learning (ICML), pages 12501\u201312512. PMLR, 2021.   \n[116] Yingbin Bai, Erkun Yang, Bo Han, Yanhua Yang, Jiatong Li, Yinian Mao, Gang Niu, and Tongliang Liu. Understanding and improving early stopping for learning with noisy labels, 2021.   \n[117] Junnan Li, Caiming Xiong, and Steven CH Hoi. Learning from noisy data with robust representation learning. In Proceedings of the IEEE/CVF International Conference on Computer Vision (CVPR), pages 9485\u20139494, 2021.   \n[118] Shikun Li, Xiaobo Xia, Shiming Ge, and Tongliang Liu. Selective-supervised contrastive learning with noisy labels. 2022 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), Jun 2022.   \n[119] Daiki Tanaka, Daiki Ikami, Toshihiko Yamasaki, and Kiyoharu Aizawa. Joint optimization framework for learning with noisy labels. 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), Jun 2018.   \n[120] Kun Yi and Jianxin Wu. Probabilistic end-to-end noise correction for learning with noisy labels. 2019 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), Jun 2019.   \n[121] Hwanjun Song, Minseok Kim, and Jae-Gil Lee. SELFIE: Refurbishing unclean samples for robust deep learning. In Kamalika Chaudhuri and Ruslan Salakhutdinov, editors, Proceedings of the International Conference on Machine Learning (ICML), volume 97 of Proceedings of Machine Learning Research, pages 5907\u20135915. PMLR, 09\u201315 Jun 2019.   \n[122] Eric Arazo, Diego Ortego, Paul Albert, Noel E. O\u2019Connor, and Kevin McGuinness. Unsupervised label noise modeling and loss correction, 2019.   \n[123] Vinay Shukla, Zhe Zeng, Kareem Ahmed, and Guy Van den Broeck. A unified approach to count-based weakly-supervised learning. In ICML 2023 Workshop on Differentiable Almost Everything: Differentiable Relaxations, Algorithms, Operators, and Simulators, jul 2023.   \n[124] Massih-Reza Amini and Patrick Gallinari. Semi-supervised logistic regression. In ECAI, volume 2, page 11, 2002.   \n[125] Ning Xu, Jiaqi Lv, Biao Liu, Congyu Qiao, and Xin Geng. Progressive purification for instance-dependent partial label learning, 2022.   \n[126] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A largescale hierarchical image database. In 2009 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 248\u2013255, 2009.   \n[127] Patrick Helber, Benjamin Bischke, Andreas Dengel, and Damian Borth. Eurosat: A novel dataset and deep learning benchmark for land use and land cover classification. IEEE Journal of Selected Topics in Applied Earth Observations and Remote Sensing, 2019.   \n[128] Adam Coates, Andrew Ng, and Honglak Lee. An analysis of single-layer networks in unsupervised feature learning. In Proceedings of the fourteenth international conference on artificial intelligence and statistics, pages 215\u2013223. JMLR Workshop and Conference Proceedings, 2011.   \n[129] Jiancheng Yang, Rui Shi, and Bingbing Ni. Medmnist classification decathlon: A lightweight automl benchmark for medical image analysis. In IEEE 18th International Symposium on Biomedical Imaging (ISBI), pages 191\u2013195, 2021.   \n[130] Jiancheng Yang, Rui Shi, Donglai Wei, Zequan Liu, Lin Zhao, Bilian Ke, Hanspeter Pfister, and Bingbing Ni. Medmnist v2: A large-scale lightweight benchmark for 2d and 3d biomedical image classification. arXiv preprint arXiv:2110.14795, 2021.   \n[131] Jong-Chyi Su and Subhransu Maji. The semi-supervised inaturalist-aves challenge at fgvc7 workshop. arXiv preprint arXiv:2103.06937, 2021.   \n[132] Yelp dataset: http://www.yelp.com/dataset_challenge.   \n[133] Xiang Zhang, Junbo Zhao, and Yann LeCun. Character-level convolutional networks for text classification. Advances in Neural Information Processing Systems (NeurIPS), 28:649\u2013657, 2015.   \n[134] Ming-Wei Chang, Lev-Arie Ratinov, Dan Roth, and Vivek Srikumar. Importance of semantic representation: Dataless classification. In AAAI, volume 2, pages 830\u2013835, 2008.   \n[135] Hao Cheng, Zhaowei Zhu, Xingyu Li, Yifei Gong, Xing Sun, and Yang Liu. Learning with instance-dependent label noise: A sample sieve approach. arXiv preprint arXiv:2010.02347, 2020. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "A Notation ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "We present the notation table for each symbol used in this paper in Table 6. ", "page_idx": 18}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/04ee138300ba6fed7913bd0ee3b5811f564119a5f3cd289fcdeff8fa6e8bb2c9.jpg", "table_caption": ["Table 6: Notation Table "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "B Related Work ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Many previous methods have been proposed for dealing with the specific types and some combinations of imprecise label configurations. We revisit the relevant work in this section, especially the state-ofthe-art popular baselines for learning with individual and mixture imprecise label configurations. ", "page_idx": 18}, {"type": "text", "text": "Partial label learning (PLL). The prior arts can be roughly divided into identification-based for label disambiguation [96\u201399] or average-based for utilizing all candidate labels [72, 7, 58]. The traditional average-based methods usually treat all candidate labels equally, which may involve the misleading false positive labels into training. To overcome these limitations, researchers have explored identification-based methods, viewing the ground-truth label as a latent variable. They seek to maximize its estimated probability using either the maximum margin criterion [100, 101] or the maximum likelihood criterion [102]. Deep learning techniques have recently been incorporated into identification-based methods, yielding promising results across multiple datasets. For example, PRODEN [55] proposed a self-training strategy that disambiguates candidate labels using model outputs. CC [9] introduced classifier-consistent and risk-consistent algorithms, assuming uniform candidate label generation. LWS [11] relaxed this assumption and proposed a family of loss functions for label disambiguation. More recently, Wangt et al. [13] incorporated contrastive learning into PLL, enabling the model to learn discriminative representations and show promising results under various levels of ambiguity. RCR involves consistency regularization into PLL recently [12]. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "Semi-supervised learning (SSL). SSL is a paradigm for learning with a limited labeled dataset supplemented by a much larger unlabeled dataset. Consistency regularization and self-training, inspired by clusterness and smoothness assumptions, have been proposed to encourage the network to generate similar predictions for inputs under varying perturbations [103, 15, 104]. Self-training [14, 73, 18] is a widely-used approach for leveraging unlabeled data. Pseudo Label [14, 73], a well-known self-training technique, iteratively creates pseudo labels that are then used within the same model. Recent studies focus largely on generating high-quality pseudo-labels. MixMatch [16], for instance, generates pseudo labels by averaging predictions from multiple augmentations. Other methods like ReMixMatch [17], UDA [53], and FixMatch [18] adopt confidence thresholds to generate pseudo labels for weakly augmented samples, which are then used to annotate strongly augmented samples. Methods such as Dash [105], FlexMatch [20], and FreeMatch [22] dynamically adjust these thresholds following a curriculum learning approach. SoftMatch [23] introduces a novel utilization of pseudo-labels through Gaussian re-weighting. SSL has also seen improvements through the incorporation of label propagation, contrastive loss, and meta learning [106, 107, 86, 87, 82]. ", "page_idx": 19}, {"type": "text", "text": "Noisy label learning (NLL). Overfitting to the noisy labels could result in poor generalization performance, even if the training error is optimized towards zero [108, 109]. Several strategies to address the noisy labels have been proposed [110]. Designing loss functions that are robust to noise is a well-explored strategy for tackling the label noise problem [29, 31, 111, 112]. Additionally, methods that re-weight loss [113] have also been explored for learning with noisy labels. Another common strategy to handle label noise involves assuming that the noisy label originates from a probability distribution that depends on the actual label. Early works [26] incorporated these transition probabilities into a noise adaptation layer that is stacked over a classification network and trained in an end-to-end fashion. More recent work, such as Forward [91], prefers to estimate these transition probabilities using separate procedures. However, the success of this method is contingent upon the availability of clean validation data [114] or additional assumptions about the data [115]. Noise correction has shown promising results in noisy label learning recently [116\u2013118, 69]. During the early learning phase, the model can accurately predict a subset of the mislabeled examples [32]. This observation suggests a potential strategy of correcting the corresponding labels. This could be accomplished by generating new labels equivalent to soft or hard pseudo-labels estimated by the model [119, 120]. Co-Teaching uses multiple differently trained networks for correcting noisy labels [28]. SELFIE [121] corrects a subset of labels by replacing them based on past model outputs. Another study in [122] uses a two-component mixture model for sample selection, and then corrects labels using a convex combination. Similarly, DivideMix [33] employs two networks for sample selection using a mixture model and Mixup [90]. ", "page_idx": 19}, {"type": "text", "text": "Mixture imprecise label settings. Various previous works have explored dealing with distinct types of imprecise labels. However, they have yet to tackle a combination of partial labels, limited labels, and noisy labels, which is a highly realistic scenario. For instance, recent attention has been paid to the issue of partial noisy label learning. $\\mathrm{PiCO+}$ [94], an extended version of PiCO [13], is tailored specifically for partial noisy labels. IRNet [71] uses two modules: noisy sample detection and label correction, transforming the scenario of noisy PLL into a more traditional PLL. DALI [50] is another framework designed to reduce the negative impact of detection errors by creating a balance between the initial candidate set and model outputs, with theoretical assurances of its effectiveness. Additionally, some work has focused on semi-supervised partial label learning [51, 52]. No existing research can effectively address the challenge of handling a combination of partial, limited, and noisy labels simultaneously, which underscores the novelty and significance of our work. ", "page_idx": 19}, {"type": "text", "text": "Previous attempts towards unification of learning from imprecise labels. There are earlier attempts for the generalized solutions of different kinds of imprecise labels/observations. Den\u0153ux [60] proposed an EM algorithm for the likelihood estimation of fuzzy data and verified the algorithm on linear regression and uni-variate normal mixture estimation. Van Rooyen et al. [63] developed an abstract framework that generically tackles label corruption via the Markov transition. Quost et al. [62] further extended the EM algorithm of fuzzy data on the finite mixture of Gaussians. Gong et al. [64] proposed a general framework with centroid estimation for imprecise supervision. A unified partial AUC optimization approach was also proposed earlier [67]. Zhang et al. [45] and Wei. et al. [66] proposed generalized solutions for aggregate observations. A unified solution based on dynamic programming for count-based weak supervision was also proposed [123] While relating to these works on the surface, ILL does not require any assumption on the imprecise information and generalizes well to more practical settings with noisy labels. Some other works for individual settings also related EM framework, but usually involved the approximation on the EM [124, 25, 13]. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "C Methods ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "C.1 Derivation of Variational Lower Bound ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Evidence lower bound (ELBO), or equivalently variational lower bound [59], is the core quantity in EM. From Eq. (5), to model $\\log P(X,I;\\theta)$ , we have: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\log P(X,I;\\theta)=\\displaystyle\\int Q(Y)\\log P(X,I;\\theta)d Y}&{}\\\\ &{=\\displaystyle\\int Q(Y)\\log P(X,I;\\theta)\\frac{P(Y|X,I;\\theta)}{P(Y|X,I;\\theta)}d Y}\\\\ &{=\\displaystyle\\int Q(Y)\\log\\frac{P(X,I,Y;\\theta)Q(Y)}{P(Y|X,I;\\theta)Q(Y)}d Y}\\\\ &{=\\displaystyle\\int Q(Y)\\log\\frac{P(X,I,Y;\\theta)}{Q(Y)}d Y-\\displaystyle\\int Q(Y)\\log\\frac{P(Y|X,I;\\theta)}{Q(Y)}d Y}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where the first term is the ELBO and the second term is the $\\mathrm{KL}$ divergence $\\mathcal{D}_{K L}(Q(Y)||P(Y|X,I;\\theta))$ . Replacing $Q(Y)$ with $P(Y|X,I;\\theta^{t})$ at each iteration will obtain Eq. (5). ", "page_idx": 20}, {"type": "text", "text": "C.2 Instantiations to Partial Label Learning ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "The imprecise label $I$ for partial labels is defined as the label candidate sets $S$ with $\\{\\mathbf{s}_{i}\\}_{i\\in[N]}$ containing the true labels. Now we can derive Eq. (6) by replacing $I$ with $S$ in Eq. (5): ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{\\mathbb{E}_{Y|X,I;\\theta^{t}}\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right]}\\quad}&{}\\\\ &{=\\mathbb{E}_{Y|X,S;\\theta^{t}}\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right]}\\\\ &{=\\displaystyle\\sum_{Y}P(Y|X,S;\\theta^{t})\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right]}\\\\ &{=\\displaystyle\\sum_{Y}P(Y|X,S;\\theta^{t})\\left[\\log P(Y|X;\\theta)\\right]+\\log P(I|X,Y;\\theta)}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Note that $P(I|Y,X;\\theta)$ can be moved out of the expectation because it is a fixed quantity to any $Y$ . Now we replace $Y,X$ , and $S$ to $y,\\,\\mathbf{x}$ , and s for each instance, and converting the maximization problem to negative log-likelihood minimization problem to drive the loss function: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{PLL}}=-\\frac{1}{N}\\sum_{i}^{N}\\mathbf{p}(y_{i}|\\mathbf{x}_{i},\\mathbf{s}_{i};\\boldsymbol{\\theta}^{t})\\log\\mathbf{p}(y_{i}|\\mathbf{x}_{i};\\boldsymbol{\\theta})-\\frac{1}{N}\\sum_{i}^{N}\\log\\mathbf{p}(\\mathbf{s}_{i}|\\mathbf{x}_{i},y_{i};\\boldsymbol{\\theta}).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "The first term is the Cross-Entropy loss we derived in Eq. (6). If $S$ is not instance-dependent, then knowing $Y$ also knows $S$ , the second term thus can be ignored in Eq. (6). If $S$ becomes instance-dependent, the second term can be maintained as a supervised term as in [12] to optimize $\\theta$ . ", "page_idx": 20}, {"type": "text", "text": "C.3 Instantiations to Semi-Supervised Learning ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In SSL, the input $X$ consists of the labeled data $X^{\\mathrm{L}}$ and the unlabeled data $X^{\\mathrm{U}}$ . The imprecise label for SSL is realized as the limited number of full labels $Y^{\\mathrm{L}}$ for $X^{\\mathrm{L}}$ . The labels $Y^{\\mathrm{U}}$ for unlabeled $X^{\\mathrm{U}}$ ", "page_idx": 20}, {"type": "text", "text": "are unknown and become the latent variable. Thus we can write: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{Y|X,I;\\theta^{t}}\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right]}\\\\ &{\\ =\\mathbb{E}_{Y^{\\mathrm{U}}|X^{\\mathrm{U}},X^{\\mathrm{L}},Y^{\\mathrm{L}};\\theta^{t}}\\left[\\log P(Y^{\\mathrm{U}}|X^{\\mathrm{U}},X^{\\mathrm{L}};\\theta)+\\log P(Y^{\\mathrm{L}}|X^{\\mathrm{L}},X^{\\mathrm{U}},Y^{\\mathrm{U}};\\theta)\\right]}\\\\ &{\\ =\\displaystyle\\sum_{Y^{\\mathrm{U}}}P(Y^{\\mathrm{U}}|X^{\\mathrm{U}};\\theta^{t})\\left[\\log P(Y^{\\mathrm{U}}|X^{\\mathrm{U}};\\theta)\\right]+\\log P(Y^{\\mathrm{L}}|X^{\\mathrm{L}};\\theta).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "The negative log-likelihood loss function for $\\{\\mathbf{x}_{i}^{l},y_{i}^{l}\\}_{i\\in[N^{L}]}$ and $\\{\\mathbf{x}^{u}\\}_{i\\in[N^{U}]}$ thus becomes: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{SSL}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|\\mathbf{x}^{\\mathrm{u}};\\boldsymbol{\\theta}),\\mathbf{p}(y|\\mathbf{x}^{\\mathrm{u}};\\boldsymbol{\\theta}^{t})\\right)+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|\\mathbf{x}^{\\mathrm{L}};\\boldsymbol{\\theta}),y^{\\mathrm{L}}\\right)\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "C.4 Instantiations to Noisy Label Learning ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We denote the given noisy labels as $\\hat{Y}$ . For noisy label learning, our method naturally supports a noise transition model $\\mathcal{T}(\\hat{Y}|Y;\\omega)$ with learnable parameter $\\omega$ , as we will show in the following: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{Y|X,I;\\theta^{t}}\\left[\\log P(Y|X;\\theta)+\\log P(I|X,Y;\\theta)\\right]}\\\\ &{=\\mathbb{E}_{Y|X,\\hat{Y};\\theta^{t}}\\left[\\log P(Y,\\hat{Y}|X;\\theta)\\right]}\\\\ &{=\\mathbb{E}_{Y|X,\\hat{Y};\\theta^{t}}\\left[\\log P(Y|\\hat{Y},X;\\theta)+\\log P(\\hat{Y}|X;\\theta)\\right]}\\\\ &{=\\displaystyle\\sum_{Y}P(Y|\\hat{Y},X;\\theta^{t})\\log P(Y|\\hat{Y},X;\\theta)+\\log P(\\hat{Y}|X;\\theta).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "The loss function is: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{ILL}}^{\\mathrm{NLL}}=\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(y|\\mathbf{x},\\hat{y};\\theta,\\omega^{t}),\\mathbf{p}(y|\\mathbf{x},\\hat{y};\\theta^{t},\\omega^{t})\\right)+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}(\\hat{y}|\\mathbf{x};\\theta,\\omega),\\hat{y}\\right)\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Note that both term is computed from the noise transition matrix as mentioned in Eq. (9). ", "page_idx": 21}, {"type": "text", "text": "C.5 Instantiations to Mixed Imprecise Label Learning ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In this setting, we have both labeled data and unlabeled data, where the labels for the labeled data are both partial and noisy. On the unlabeled data, the unsupervised objective is the same as the unsupervised consistency regularization of semi-supervised learning shown in Eq. (7). On the labeled data, it mainly follows the Eq. (9) of noisy label learning, with the noisy single label becoming the noisy partial labels \u02c6s. For noisy partial labels, the noisy supervised objective in Eq. 8 becomes the supervised consistency regularization as in Eq. 6 of partial label setting to train the noise transition model, and the noisy unsupervised objective becomes the consistency regularization of the prediction conditioned on noisy partial labels: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}\\left(y\\mid\\mathcal{A}_{\\mathrm{s}}(\\mathbf{x}),\\hat{\\mathbf{s}};\\theta,\\omega^{t}\\right),\\mathbf{p}\\left(y\\mid\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x}),\\hat{y};\\theta^{t},\\omega^{t}\\right)\\right)+\\mathcal{L}_{\\mathrm{CE}}\\left(\\mathbf{p}\\left(\\hat{y}\\mid\\mathcal{A}_{\\mathrm{w}}(\\mathbf{x});\\theta,\\omega\\right),\\hat{\\mathbf{s}}\\right)\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "We can compute both quantity through the noise transition model: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathbf{p}(y|\\mathbf{x},\\hat{\\mathbf{s}};\\boldsymbol{\\theta},\\omega^{t})\\propto\\mathbf{p}(y|\\mathbf{x};\\boldsymbol{\\theta})\\prod_{\\hat{y}\\in\\hat{\\mathbf{s}}}T(y|\\hat{y};\\omega^{t}),\\mathrm{and}\\;\\mathbf{p}(\\hat{y}|\\mathbf{x};\\boldsymbol{\\theta},\\omega)=\\sum_{y\\in[C]}\\mathbf{p}(y|\\mathbf{x};\\boldsymbol{\\theta})T(\\hat{y}|y;\\omega).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "D Experiments ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "D.1 Additional Training Details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We adopt two additional training strategies for the ILL framework. The first is the \u201cstrong-weak\u201d augmentation strategy [53]. Since there is a consistency regularization term in each imprecise label formulation of ILL, we use the soft pseudo-targets of the weakly-augmented data to train the stronglyaugmented data. The second is the entropy loss [75] for class balancing, which is also adopted in SOP [69] and FreeMatch [22]. We set the loss weight for the entropy loss uniformly for all experiments as 0.1. ", "page_idx": 21}, {"type": "text", "text": "D.2 Partial Label Learning ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "D.2.1 Setup ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Following previous work [125, 11, 13], we evaluate our method on partial label learning setting using CIFAR-10, CIFAR-100, and CUB-200 [78]. We generate partially labeled datasets by filpping negative labels to false positive labels with a probability $q$ , which is also denoted as a partial ratio. Specifically, the $C-1$ negative labels are uniformly aggregated into the ground truth label to form a set of label candidates. We consider $q\\in\\{0.1,0.3,0.5\\}$ for CIFAR-10, $q\\in\\{0.01,0.05,0.1\\}$ for CIFAR-100, and $q=0.05$ for CUB-200. For CIFAR-10 and CIFAR-100, we use ResNet-18 [1] as backbone. We use SGD as an optimizer with a learning rate of 0.01, a momentum of 0.9, and a weight decay of 1e\u22123. For CUB-200, we initialize the ResNet-18 [1] with ImageNet-1K [126] pre-trained weights. We train 800 epochs for CIFAR-10 and CIFAR-100 [77], and 300 epochs for CUB-200, with a cosine learning rate scheduler. For CIFAR-10 and CIFAR-100, we use an input image size of 32. For CUB-200, we use an input image size of 224. A batch size of 256 is used for all datasets. The choice of these parameters mainly follows PiCO [13]. We present the full hyper-parameters systematically in Table 7. ", "page_idx": 22}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/b0f30e3662d0cbff04a7e5488ab6d27afb2170ceb2b8e047e1cb3a885a337e26.jpg", "table_caption": ["Table 7: Hyper-parameters for partial label learning used in experiments. "], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "D.2.2 Discussion ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "We additionally compare our method with R-CR [12], which uses a different architecture as the results in Table 1. R-CR uses Wide-ResNet34x10 as backbone, and adopts multiple strong data augmentations. It also adjusts the loss weight along training. For fair comparison, we use the same architecture without multiple augmentation and the curriculum adjust on loss. The results are shown in Table 8, where our method outperforms R-CR on CIFAR-10 and is comparable on CIFAR-100. ", "page_idx": 22}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/b6819cff3f2f56ad8b97c425a8b13914bad41ac8900a3dfa9aee7c7eb2646a6b.jpg", "table_caption": ["Table 8: Comparison with R-CR in partial label learning "], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "We also provide the comparison of our method on instance-dependent partial label learning as proposed by Xu et al. [81, 125]. Due to the nature of instance-dependence, we maintain the term $P(S|Y,X;\\theta)$ from Eq. (5) as a supervised term for optimization. We compare our method with VALEN [81], RCR [12], PiCO [13], and POP [125] on MNIST, Kuzushiji-MNIST, Fashion-MNIST, CIFAR-10, and CIFAR-100, with synthetic instance-dependent partial labels generated according to $\\mathrm{Xu}$ et al. [125]. From the results in Table 9, we proposed method demonstrate the best performance across different datasets evaluated. ", "page_idx": 22}, {"type": "text", "text": "A recent work on PLL discussed and analyzed the robustness performance of different loss functions, especially the average-based methods [58]. We perform a similar analysis here for the derived loss function in ILL. Following the notation in [58], let s denote the candidate label set, $\\mathbf{x}$ as the training instance, $g$ as the probability score from the model, and $f$ as the classifier $f(\\pmb{x})=\\underset{i\\in\\mathcal{V}}{\\arg\\operatorname*{max}}g_{i}(\\pmb{x})$ , ", "page_idx": 22}, {"type": "text", "text": "the average-based PLL can be formulated as: ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\mathcal{L}_{a v g-P L L}(f(\\pmb{x}),\\mathbf{s})=\\frac{1}{|\\mathbf{s}|}\\sum_{i\\in\\mathbf{s}}\\ell(f(\\pmb{x}),i)\n$$", "text_format": "latex", "page_idx": 22}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/95e8f691cd4b25b20e102b0e98b01922e88a0e1cfd10d00f29ead645b42a7fbe.jpg", "table_caption": ["Table 9: Comparison on instance-dependent partial label learning "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Lv et al. [58] compared different loss functions $\\ell$ on both noise-free and noisy PLL settings, where they find both theoretically and empirically that average-based PLL with bounded loss are robust under mild assumptions. Empirical study in [58] suggests that both Mean Absolute Error and Generalized Cross-Entropy loss [29] that proposed for noisy label learning achieves the best performance and robustness for average-based PLL. ", "page_idx": 23}, {"type": "text", "text": "Our solution for PLL can be viewed as an instantiation of the average-based PLL as in [58] with: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\ell(f(\\mathbf{x}),i)=-\\bar{g}_{i}(\\mathbf{x})\\log g_{i}(\\mathbf{x})\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where $\\bar{g}$ is normalized probability over s with detached gradient. We can further show that the above loss function is bounded for $0\\;<\\;\\ell\\;\\leq\\;{\\frac{1}{e}}$ and thus bounded for summation of all classes, which demonstrates robustness, as we show in Table 4. ", "page_idx": 23}, {"type": "text", "text": "D.3 Semi-Supervised Learning ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "D.3.1 Setup ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "For experiments of SSL, we follow the training and evaluation protocols of USB [82] on image and text classification. To construct the labeled dataset for semi-supervised learning, we uniformly select $l/C$ samples from each class and treat the remaining samples as the unlabeled dataset. For image classification tasks, ImageNet-1K [126] Vision Transformers [4] are used, including CIFAR-100 [77], EuroSAT [127], STL-10 [128], TissueMNIST [129, 130], Semi-Aves [131]. For text classification tasks, we adopt BERT [3] as backbone, including IMDB [83], Amazon Review [84], Yelp Review [132], AG News [133] , Yahoo Answer [134]. The hyper-parameters strictly follow USB, and are shown in Table 10 and Table 11. ", "page_idx": 23}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/a2c45dde52edb7a434e8b1a4cb1066254f6e007d9167dbccda408bbdaca6ab76.jpg", "table_caption": ["Table 10: Hyper-parameters of semi-supervised learning used in vision experiments of USB. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "D.3.2 Results ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "In the main paper, we only provide the comparison on CIFAR-100, STL-10, IMDB, and Amazon Review. Here we provide the full comparison in Table 12 and Table 13. From the full results, similar conclusion can be drawn as in the main paper. Our ILL framework demonstrates comparable performance as previous methods. ", "page_idx": 23}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/891cd44f30b26d91efa7d4b88e39eabe41f050b1113c6613ad8d880d22744284.jpg", "table_caption": ["Table 11: Hyper-parameters of semi-supervised learning NLP experiments in USB. "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "Table 12: Error rate comparison of different number of labels on CIFAR-100, STL-10, EuroSAT, TissueMNIST, and SemiAves for semi-supervised learning. We use USB [82] image classification task results. The best results are indicated in bold. Our results are averaged over 3 independent runs. ", "page_idx": 24}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/5d41ff5873c2b0660a6b9738c3cf59c03a4a76f526d4e87d75019a49209a98c3.jpg", "table_caption": [], "table_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/0781b8328da2056eeb064206d00112a4f33c7d06e8a6a6eb216c4d4a929b998b.jpg", "table_caption": ["Table 13: Error rate comparison of different number of labels on IMDB, AG News, Amazon Review, Yahoo Answers, and Yelp Review for semi-supervised learning. We use USB [82] text classification task results. Best results are indicated in bold. Our results are averaged over 3 independent runs. "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "D.4 Noisy Label Learning ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "D.4.1 Setup ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We conduct experiments of noisy label learning following SOP [69]. We evaluate the proposed method on both synthetic symmetric/asymmetric noise on CIFAR-10 and CIFAR-100, and more realistic and larger-scale instance noise on Clothing1M and WebVision. To introduce the synthetic symmetric noise to CIFAR-10 and CIFAR-100, we uniformly filp labels for a probability $\\eta$ into other classes. For asymmetric noise, we only randomly flip the labels for particular pairs of classes. For CIFAR-10 and CIFAR-100, we train PreAct-ResNet-18 with SGD using a learning rate of 0.02, a weight decay of $1e-3$ , and a momentum of 0.9. We train for 300 epochs with a cosine learning rate schedule and a batch size of 128. For WebVision, we use InceptionResNet-v2 as the backbone and set the batch size to 32. Other settings are similar to CIFAR-10. For Clothing1M, we use ImageNet-1K pre trained ResNet-50 as the backbone. We train it using SGD with an initial learning rate of 2e-3 for a total of 10 epochs, where the learning rate is reduced by 10 after 5 epochs. In addition, we also conduct experiments on CIFAR-10N and CIFAR-100N. We present the detailed hyper-parameters in Table 14. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/d674f994d25ebcde68d60ad1f24af0c32038424edcebc0e36dbd859ba8b113d6.jpg", "table_caption": ["Table 14: Hyper-parameters for noisy label learning used in experiments. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "D.4.2 Results ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "In addition to the results regarding noisy label learning provided in the main paper, we also present comparison results on CIFAR-10N and CIFAR-100N [92] in Table 15. We include a full comparison on Clothing1M and WebVision, incorporating methods like Co-Teaching, Forward, and CORES, in Table 16. As shown in Table 15, the proposed ILL framework achieves performance comparable to the previous best method, SOP [69]. On CIFAR-10N, our method yields results very close to SOP in the Random and Aggregate case noise scenarios and surpasses SOP in the Worst case noise scenario. However, on CIFAR-100N, our method slightly underperforms previous methods, possibly due to the oversimplified noise model utilized in ILL. We believe that a more realistic noise transition model and further tuning of our method could lead to improved performance. ", "page_idx": 25}, {"type": "text", "text": "Table 15: Test accuracy comparison of instance independent label noise on CIFAR-10N and CIFAR100N for noisy label learning. The best results are indicated in bold, and the second best results are indicated in underline. Our results are averaged over three independent runs with ResNet34 as the backbone. ", "page_idx": 25}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/d3eee53ba340f9dc60ac8f55f07d70f0d1a5791cd71832db6520ae80ffe7a850.jpg", "table_caption": [], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "D.5 Mixed Imprecise Label Learning ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "D.5.1 Setup ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "To create a mixture of various imprecise label configurations, we select CIFAR-10 and CIFAR-100 as base datasets. We first uniformly sample $l/C$ labeled samples from each class to form the labeled dataset and treat the remaining samples as the unlabeled dataset. Based on the labeled dataset, we generate partially labeled datasets by flipping negative labels to false positive labels with the partial ratio $q$ . After obtaining the partial labels, we randomly select $\\eta$ percentage of samples from each class, and recreate the partial labels for them by flipping the ground truth label uniformly to another class. In this setting, unlabeled data, partially labeled data, and noisy labeled data exist simultaneously, which is very challenging and more closely resembles realistic situations. For CIFAR-10, we set $l\\;\\in\\;\\{1000,\\dot{5}000,50000\\}$ , and for CIFAR-100, we set $l\\;\\in\\;\\{5000,10000,50000\\}$ . Similarly in ", "page_idx": 25}, {"type": "text", "text": "Table 16: Test accuracy comparison of realistic noisy labels on Clothing1M and WebVision for noisy label learning. The best results are indicated in bold and the second best results are indicated in underline. Our results are averaged over 3 independent runs. For Clothing1M, we use ImageNet-1K pre trained ResNet50 as the backbone. For WebVision, InceptionResNetv2 is used as the backbone. ", "page_idx": 26}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/8ba21299e63b7a3647487e19c08d7774c2658ba729eb9ec6484f4be793c21ed9.jpg", "table_caption": [], "table_footnote": [], "page_idx": 26}, {"type": "text", "text": "the partial label setting, we set $q\\,\\in\\,\\{0.1,0.3,0.5\\}$ for CIFAR-10, and $q\\,\\in\\,\\{0.01,0.05,0.1\\}$ for CIFAR-100. For noisy labels, we set $\\eta\\in\\{0.1,0.2,0.3\\}$ for both datasets. ", "page_idx": 26}, {"type": "text", "text": "D.5.2 Results ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "We provide a more complete version of Table 4 in Table 17. On partial noisy labels of CIFAR-10 with partial ratio 0.5 and of CIFAR-100 with partial ratio 0.1, most baseline methods are more robust or even fail to perform. However, our ILL still shows very robust performance with minor performance degradation as increase of noise ratios. ", "page_idx": 26}, {"type": "text", "text": "D.6 Ablation on Strong-Augmentation and Entropy Loss ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "We provide the ablation study on the strong-augmentation and entropy loss components here, which are common techniques in each setting [18, 13, 69]. For example, in SSL, strong-weak augmentation is an important strategy for SSL algorithms widely used in existing works such as FixMatch [18] and FlexMatch [20]. Thus, it is important to adopt strong-weak augmentation to achieve better performance in SSL [22, 23, 82]. This is similar in PLL settings [13, 12]. PiCO [13, 12] also used strong augmentation). Strong-weak augmentation and entropy loss are also adopted in SOP [69] of NLL. However, we found these techniques are less important for our formulation of NLL. We provide an ablation study on the entropy loss of SSL, and both techniques for NLL and PLL here to demonstrate our discussions. ", "page_idx": 26}, {"type": "text", "text": "D.7 Runtime Analysis ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "We provide the runtime analysis on CIFAR-100 of our method on different settings, compared with the SOTA baselines. We compute the average runtime from all training iterations on CIFAR-100. The results are shown in Table 21. Our method in general present faster runtime without complex design such as contrastive loss. ", "page_idx": 26}, {"type": "text", "text": "Table 17: Test accuracy comparison of mixture of different imprecise labels. We report results of full labels, partial ratio $q$ of $\\left\\lbrace0.1,0.3,0.5\\right\\rbrace$ for CIFAR-10 and $\\{\\bar{0.}01,0.05,0.1\\}$ for CIFAR-100, and noise ratio $\\eta$ of $\\{0.1,0.2,0.3\\}$ for CIFAR-10 and CIFAR-100. ", "page_idx": 27}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/e17004b560cb5dbd310affc1ae17ee5d3437a486cc624bc26c90c17b38ff89b7.jpg", "table_caption": [], "table_footnote": [], "page_idx": 27}, {"type": "text", "text": "Table 20: NLL ablation ", "text_level": 1, "page_idx": 27}, {"type": "table", "img_path": "0Lr9HQijA1/tmp/63f1a0f09ad71500932e5a5be52ee8d885b406f9be49b209fa69ce506a22c7a8.jpg", "table_caption": [], "table_footnote": [], "page_idx": 27}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We discussed our contribution in introduction. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 28}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: We discussed our limitation in conclusion. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 28}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: All are stated in Appendix. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 29}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We present all details in both main paper and Appendix. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 29}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We use publically available data and code will be released. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 30}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: All results are obtained with 3 runs using different seeds and error bars are reported. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 30}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We report the standard deviation in the results, which are averaged over 3 independent runs across different experiments. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 30}, {"type": "text", "text": "", "page_idx": 31}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We showed in experiments. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 31}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: All behaviors follows NeurIPS Code of Ethics. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 31}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We discussed in conclusion. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake proflies, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 31}, {"type": "text", "text": "", "page_idx": 32}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: NA ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 32}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 32}, {"type": "text", "text": "Answer:[Yes] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: We discussed in experiments. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 32}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 33}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] Justification: NA Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 33}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] Justification: NA. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 33}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: NA. ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 33}]