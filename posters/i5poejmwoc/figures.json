[{"figure_path": "i5PoejmWoC/figures/figures_5_1.jpg", "caption": "Figure 9: Comparison of cell accuracy and full puzzle accuracy for fixed order training, random order training, and solver-decomposed order training", "description": "The figure shows the training curves for cell accuracy and complete puzzle accuracy using three different cell ordering methods during training: fixed order, random order, and solver-decomposed order. The solver-decomposed order, which uses a Sudoku solver to determine the order of cells, significantly outperforms the other two methods in both cell accuracy and complete puzzle accuracy.  The plot demonstrates the impact of training data ordering on the model's ability to learn complex reasoning strategies needed to solve Sudoku puzzles.", "section": "3 Experiments on Sudoku puzzles"}, {"figure_path": "i5PoejmWoC/figures/figures_8_1.jpg", "caption": "Figure 2: A failure case of the model in searching for easy-to-decode cells. The left figure shows the sudoku puzzle state when the model makes the first mistake and the right figure shows the puzzle's solution. Numbers given in the blue are provided in the puzzle. The puzzle makes a mistake by choosing to fill the red-colored cell whereas the green background cell can be easily filled.", "description": "This figure shows a failure case of the model's ability to find easy-to-decode cells.  The left panel depicts the puzzle state where the model made its first mistake (red cell). The right panel shows the correct solution.  Notice that a different cell (green cell) would have been an easier choice for the model.", "section": "4 Analysis"}, {"figure_path": "i5PoejmWoC/figures/figures_18_1.jpg", "caption": "Figure 5: Left figure: Plots the number of mistakes made after how many number of cells were filled. Right figures: Plots the number of first mistakes that are made against number of cells that were filled when it made the first mistake.", "description": "This figure shows two plots. The left plot shows the total number of mistakes made against the number of cells that had been filled when the mistakes were made. The right plot shows the number of times a model made its first mistake against the number of cells filled at the time of the first mistake. Both plots aim to visualize the relationship between the number of mistakes made and the number of cells filled in a Sudoku puzzle. It is intended to show how the difficulty in finding the correct value increases as the number of unfilled cells decreases (i.e., more mistakes are made near the end).", "section": "F Performance analysis of the model"}, {"figure_path": "i5PoejmWoC/figures/figures_19_1.jpg", "caption": "Figure 6: Complete puzzle accuracy for different difficulty Sudoku puzzles. The difficulty rating is computed as the average number of guesses the rating-solver had to make to solve the puzzle therefore, the difficulty rating is an imperfect measure of the difficulty.", "description": "This figure shows the complete puzzle accuracy for Sudoku puzzles of varying difficulty levels. The difficulty is measured by the number of guesses a solver needed to solve the puzzle.  The figure compares the complete puzzle accuracy for three different beam search widths (1, 3, and 5).  It demonstrates how the accuracy decreases as the puzzle difficulty increases,  indicating that the model struggles more with harder puzzles. The beam search width also impacts accuracy, with larger widths generally leading to better performance but at increased computational cost.", "section": "F.2 Performance analysis of the model using the difficulty of the puzzles"}, {"figure_path": "i5PoejmWoC/figures/figures_20_1.jpg", "caption": "Figure 2: A failure case of the model in searching for easy-to-decode cells. The left figure shows the sudoku puzzle state when the model makes the first mistake and the right figure shows the puzzle's solution. Numbers given in the blue are provided in the puzzle. The puzzle makes a mistake by choosing to fill the red-colored cell whereas the green background cell can be easily filled.", "description": "This figure shows a failure case of the model's search for easy-to-decode cells in a Sudoku puzzle. The left panel displays the puzzle state where the model makes its first mistake, highlighting the incorrectly filled cell in red.  The right panel shows the correct solution, indicating a readily solvable cell (in green) that the model missed. The blue numbers represent the initially given values in the puzzle.", "section": "Analysis"}, {"figure_path": "i5PoejmWoC/figures/figures_20_2.jpg", "caption": "Figure 2: A failure case of the model in searching for easy-to-decode cells. The left figure shows the sudoku puzzle state when the model makes the first mistake and the right figure shows the puzzle's solution. Numbers given in the blue are provided in the puzzle. The puzzle makes a mistake by choosing to fill the red-colored cell whereas the green background cell can be easily filled.", "description": "This figure shows an example where the model fails to identify an easy-to-solve cell in a Sudoku puzzle. The left panel displays the puzzle state when the model makes its first mistake, while the right panel shows the correct solution.  Cells with numbers in blue are pre-filled in the puzzle, the model incorrectly fills the red cell, while the green cell represents a much easier choice to solve.", "section": "4.1 Failure in search for easy-to-decode cells"}, {"figure_path": "i5PoejmWoC/figures/figures_21_1.jpg", "caption": "Figure 1: Comparison of cell accuracy and full puzzle accuracy for fixed order training, random order training and solver-decomposed reasoning order training.", "description": "This figure compares the performance of three different training methods for a Sudoku-solving model: fixed order, random order, and solver-decomposed reasoning order.  The x-axis represents the number of training steps, while the y-axis shows both the cell accuracy (percentage of correctly predicted values in individual cells) and the complete puzzle accuracy (percentage of fully solved puzzles). The plot reveals a substantial performance gap between the solver-decomposed approach and the other two methods, highlighting the importance of providing the model with a strategically ordered sequence of cells during training.", "section": "3 Experiments on Sudoku puzzles"}, {"figure_path": "i5PoejmWoC/figures/figures_22_1.jpg", "caption": "Figure 9: Comparison of cell accuracy and full puzzle accuracy for fixed order training, random order training, and solver-decomposed order training.", "description": "This figure shows the comparison of cell accuracy and complete puzzle accuracy for three different training methods: fixed order, random order, and solver-decomposed order.  The x-axis represents the number of training steps, while the y-axis shows the accuracy.  The solver-decomposed order significantly outperforms both the fixed and random order approaches in terms of both cell accuracy and complete puzzle accuracy.", "section": "3 Experiments on Sudoku puzzles"}]