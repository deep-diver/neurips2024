[{"type": "text", "text": "Deep Graph Mating ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Yongcheng Jing1 Seok-Hee Hong1 Dacheng Tao2 ", "page_idx": 0}, {"type": "text", "text": "1University of Sydney 2Nanyang Technological University {yongcheng.jing,seokhee.hong}@sydney.edu.au, dacheng.tao@ntu.edu.sg ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In this paper, we introduce the first learning-free model reuse task within the non-Euclidean domain, termed as Deep Graph Mating (GRAMA). We strive to create a child Graph Neural Network (GNN) that integrates knowledge from pretrained parent models without requiring re-training, fine-tuning, or annotated labels. To this end, we begin by investigating the permutation invariance property of GNNs, which leads us to develop two vanilla approaches for GRAMA: Vanilla Parameter Interpolation (VPI) and Vanilla Alignment Prior to Interpolation (VAPI), both employing topology-independent interpolation in the parameter space. However, neither approach has achieved the anticipated results. Through theoretical analysis of VPI and VAPI, we identify critical challenges unique to GRAMA, including increased sensitivity to parameter misalignment and further the inherent topology-dependent complexities. Motivated by these findings, we propose the Dual-Message Coordination and Calibration (DuMCC) methodology, comprising the Parent Message Coordination (PMC) scheme to optimise the permutation matrices for parameter interpolation by coordinating aggregated messages, and the Child Message Calibration (CMC) scheme to mitigate over-smoothing identified in PMC by calibrating the message statistics within child GNNs. Experiments across diverse domains, including node and graph property prediction, 3D object recognition, and large-scale semantic parsing, demonstrate that the proposed DuMCC effectively enables training-free knowledge transfer, yielding results on par with those of pre-trained models. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The remarkable progress made in deep neural networks has resulted in a growing number of pretrained models being made publicly available for the purpose of performance reproducibility and further development [64, 12, 27, 23, 61, 24]. As such, there is a mounting interest in the community on the reusability of existing pre-trained neural networks for the sake of strengthening performance, reducing model size, or alleviating training efforts, with abundant inspiring works proposed [16, 42, 46, 40, 47, 45, 63, 67]. Despite the growing interests in model reuse, current research endeavors have predominantly focused on the Euclidean domain, which are specifically designed to handle image data with regular grid structures [39, 64, 34, 12, 51, 14, 22]. ", "page_idx": 0}, {"type": "text", "text": "On the other hand, the study of reusing pre-trained Graph Neural Networks (GNNs) to tackle nonEuclidean and irregular graph data is still in its early stage and remains limited in scope. Almost all existing research on GNN reuse is established upon non-Euclidean Knowledge Distillation $(K D)$ pioneered by Yang et al. [60], where a favourable student GNN is learned from a single pre-trained teacher [11, 49, 9, 66, 29]. Subsequent research has extended the scope of Yang et al. [60] from a single-teacher to a multi-teacher context, introducing the novel task of non-Euclidean Knowledge Amalgamation (KA) [25, 15, 36]. However, all these existing approaches to GNN reuse necessitate resource-intensive re-training of the student model, imposing substantial computational burdens and memory costs. This challenge from re-training is particularly pronounced when dealing with large models and large-scale graphs [31, 7, 37, 20, 8, 26, 17]. ", "page_idx": 0}, {"type": "table", "img_path": "m4NI2yIwJA/tmp/fb0dc78f1a08cfd3dbdc14a79c6a97c52c2a66da1621be63aa18c9c3ddc0c81e.jpg", "table_caption": [], "table_footnote": ["Table 1: Comparison of various model reuse tasks in the non-Euclidean domain, tailored for GNNs. "], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "In this paper, we strive to push the boundaries of resource-efficient GNN reuse by introducing the first training-free model reuse task in the non-Euclidean domain, termed as Deep Graph Mating (GRAMA). Our objective is to derive a child GNN, without re-training or fine-tuning, from pre-trained parent GNNs, each possessing unique knowledge from different datasets, all while operating without access to human-annotated labels\u2014a common constraint in using publicly available models. The child model born from GRAMA is expected to seamlessly integrate the diverse expertise of its parent models in a completely learning-free manner. A comparative analysis of GRAMA with existing non-Euclidean model reuse approaches is presented in Tab. 1. As a pilot study of this novel task, this paper focuses on homogeneous GRAMA scenarios with identical parent architectures, and sets the stage for future investigations into the more complex cross-architecture heterogeneous GRAMA. ", "page_idx": 1}, {"type": "text", "text": "To achieve the ambitious goals of GRAMA, we first investigate the permutation invariance property of GNNs to establish correspondence between neurons in pre-trained models. This investigation guides the development of two vanilla methods: Vanilla Parameter Interpolation (VPI) and Vanilla Alignment Prior to Interpolation (VAPI). VPI involves straightforward linear interpolation of parent GNN parameters, while VAPI incorporates data-independent parameter matching before interpolation. However, the performance of both VPI and VAPI has not been as promising as expected. By analysing the mechanisms underlying these methods, we have identified and theoretically demonstrated unique challenges associated with GRAMA, including increased susceptibility to parameter misalignment and topology-dependent complexity in GNNs. These findings underscore the necessity for tailored methods that are specifically adapted to GRAMA. ", "page_idx": 1}, {"type": "text", "text": "To this end, we introduce the Dual-Message Coordination and Calibration (DuMCC) methodology, specifically tailored for GRAMA to incorporate the topological characteristics of graphs. DuMCC consists of two distinct schemes: Parent Message Coordination (PMC) and Child Message Calibration (CMC). PMC seeks to identify optimal permutation matrices for parameter matching in a topologyaware manner, by coordinating aggregated messages from parent GNNs. Although PMC shows promising results, our empirical and theoretical analyses indicate that the child GNN derived from this coordination is more prone to over-smoothing. To mitigate this issue, we propose the CMC scheme, which calibrates the message statistics of the child GNN using a specialised, learning-free message normalisation (LFNorm) layer, drawing on the statistics of the parent GNNs. Together, these two schemes contribute to a training-free and label-free GRAMA process, enabling the derivation of child GNNs that effectively embody the knowledge from their pre-trained parent models. ", "page_idx": 1}, {"type": "text", "text": "In summary, our contribution is a novel non-Euclidean model reuse paradigm that allows for the creation of a student GNN, which integrates the capabilities of pre-trained parent GNNs without requiring human-annotated labels or re-training. We evaluated our proposed approach on seven benchmarks across various tasks, including node/graph classification, object recognition, and largescale indoor semantic segmentation, and across five different GNN architectures: Graph Convolutional Network (GCN) [30], GraphSAGE [13], Graph Attention Network (GAT) [48], Graph Isomorphism Networks (GIN) [56], and Dynamic Graph CNN (DGCNN) [53]. Experimental results demonstrate that the generated child GNN is competent to handle the pre-trained tasks of parent models. We also present a discussion of the limitations, highlighting potential future research directions that can be explored based on GRAMA. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "This section briefly reviews topics relevant to GRAMA, including existing GNN reuse techniques and model merging, which, while conceptually akin to GRAMA, is confined to the Euclidean domain. Extended related work is provided in Appendix A. ", "page_idx": 1}, {"type": "text", "text": "Non-Euclidean Model Reuse. Recent advancements in graph-centric intelligence have led to the widespread availability of pre-trained models for reproducibility. Despite their availability, the exploration of their reuse for downstream tasks, particularly in the non-Euclidean domain, is still in its infancy. Existing research primarily revolves around knowledge distillation (KD) [60, 9, 66, 11, 49, 29] and knowledge amalgamation (KA) [25, 15, 36], aimed at single-GNN and multi-GNN reusing, respectively. In particular, the foundational KD research [60] introduced a method specifically designed for GNNs that conserves local structural integrity. The scheme was later expanded by KA [25] to adapt to multi-teacher settings without the need for labels, thereby enhancing GNN reuse capabilities. Extending these concepts, this paper launches GRAMA, a new GNN reuse paradigm that further boosts resource efficiency by obviating the need for re-training. ", "page_idx": 2}, {"type": "text", "text": "Model Merging. Recent years have seen a surge in interest in merging the weights of CNNs or transformers into a single model [54, 43, 1, 19, 44, 57, 33, 59, 35, 62, 38, 2, 21]. Model merging is typically categorised into two types: fine-tuned model merging and variably initialised model merging [33, 44]. Merging models fine-tuned from the same initialisation is generally straightforward as these models often reside within the same error basin, allowing for simple weight interpolation [54]. Conversely, merging models from different initialisations is more challenging due to the randomness in network channels and components [33, 43, 1]. A key issue is aligning neurons between models to establish correspondences before weight interpolation. To address this issue, Git Re-basin [1] proposes to minimise the $L_{2}$ distance between weight vectors. Singh and Jaggi [43] propose an Optimal Transport Fusion (OTFusion) method that uses the Wasserstein distance to align weight matrices prior to performing parameter fusion. The subsequent work [19] extends the application of OTFusion to Transformer-based architectures, aiming to enhance efficiency and performance through fusion. Also, Liu et al. [35] approach the challenging task of model fusion as a graph matching problem, incorporating second-order parameter similarities for improved fusion performance. ", "page_idx": 2}, {"type": "text", "text": "Addressing the fusion of pre-trained models trained on disparate tasks, Stoica et al. [44] develop ZipIt!, a novel method that utilises a \u201czip\u201d operation for layer-wise fusion based on feature redundancy, creating a versatile multi-task model without additional training. More recently, Xu et al. [57] present the Merging under Dual-Space Constraints (MuDSC) framework. This approach optimises permutation matrices by mitigating inconsistencies in unit matching across both weight and activation spaces, targeting effective model fusion in multi-task scenarios. Furthermore, Jordan et al. [28] introduce REPAIR, a method that tackles the issue of variance collapse by rescaling the hidden units in the interpolated network to restore the statistical properties of the original networks. ", "page_idx": 2}, {"type": "text", "text": "However, model merging has not yet been explored within the context of GNNs. This paper introduces GRAMA, the first formulation for weight space model merging tailored for the non-Euclidean domain. It represents the initial investigation into merging GNNs, addressing the unique challenges that arise with graph tasks. ", "page_idx": 2}, {"type": "text", "text": "3 Motivation and Problem Definition ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we begin by introducing Knowledge Amalgamation $(K A)$ , the sole existing task in multi-GNN reuse, exploring its inherent limitations, and present our novel GRAMA paradigm for resource-efficient multi-model reuse with practical applications in real-world scenarios. ", "page_idx": 2}, {"type": "text", "text": "To the best of our knowledge, KA represents the only multi-model reuse task in the non-Euclidean domain. KA is defined in the literature as follows: its objective is to learn a single, compact student GNN that integrates the diverse expertise of pre-trained teacher GNNs, without accessing human annotations [25]. Despite the promising performance, KA is inherently limited by its resourceintensive nature, requiring the re-training of a student GNN to amalgamate knowledge from existing GNNs. Furthermore, while KA ostensibly operates without ground-truth labels, it instead relies on soft labels generated by teachers, making it susceptible to the misclassification errors of teachers. ", "page_idx": 2}, {"type": "text", "text": "To mitigate these constraints of KA, this paper proposes: ", "page_idx": 2}, {"type": "text", "text": "Task 3.1 (Deep Graph Mating). Deep Graph Mating (GRAMA) is a fully learning-free model reuse task where a child GNN is derived from pre-trained parent GNNs without re-training or fine-tuning, integrating their expertise without requiring human-annotated labels. ", "page_idx": 2}, {"type": "text", "text": "In aggregate, GRAMA advances beyond KA by eliminating the need for any training or label dependency, paving the way for more widespread and versatile model reuse applications. Given the novelty and complexity of GRAMA, our initial investigation in this paper is confined to scenarios where pre-trained GNNs possess identical architectures yet are trained on separate datasets, termed as homogenous GRAMA. We reserve the exploration of more challenging heterogeneous GRAMA scenarios, where pre-trained parent models either have diverse architectures or are designed for different domain tasks, as a topic for future studies, potentially incorporating solutions like partial GRAMA inspired by the work of Stoica et al. [44]. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "The applications of homogenous GRAMA are especially crucial in contexts where full data access for training is restricted due to privacy concerns and regulatory requirements. This is common in sectors like healthcare or retail, where organisations operate across different regions, each gathering data that cannot be centrally aggregated due to local privacy regulations. The proposed homogenous GRAMA paradigm enables the seamless integration of knowledge from these isolated datasets, thereby safeguarding against the risks of privacy violations and the disclosure of sensitive data. ", "page_idx": 3}, {"type": "text", "text": "4 Vanilla Methodologies and Challenge Pre-analysis ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "4.1 Two Vanilla GRAMA Methods ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Vanilla Parameter Interpolation (VPI). To achieve the ambitious goal of GRAMA outlined in Sect. 3, the initial na\u00efve approach employs vanilla weight averaging [50, 54]. This method involves a straightforward linear interpolation of weights $W_{a}$ and $W_{b}$ from two pre-trained GNNs: $W^{(\\ell)}=$ $\\alpha W_{a}^{(\\ell)}+(1-\\alpha)W_{b}^{(\\ell)}$ W b(\u2113 ), where \u03b1 represents the interpolation weight and W (\u2113) denotes the network weights at layer $\\ell$ . ", "page_idx": 3}, {"type": "text", "text": "However, the vanilla averaging approach requires the pre-trained models to share a portion of their training trajectory and remain sufficiently close in the parameter space [33], typically achieved by fine-tuning from the same initial model. This is not applicable in our GRAMA context, where parent GNNs are trained on distinct datasets. This mismatch leads to empirically poor performance for GRAMA, as observed in our experiments. ", "page_idx": 3}, {"type": "text", "text": "Vanilla Alignment Prior to Interpolation (VAPI). To address this issue in vanilla interpolation, previous research in the Euclidean domain, based on the conjecture of the permutation invariance property of typical neural networks1, proposes aligning the neurons between pre-trained models by permuting parameter matrices before performing linear interpolation [1]. The alignment and interpolation process can be formulated as: ", "page_idx": 3}, {"type": "equation", "text": "$$\nW^{(\\ell)}=\\alpha W_{a}^{(\\ell)}+(1-\\alpha)P^{(\\ell)}W_{b}^{(\\ell)}(P^{(\\ell-1)})^{T},\\quad P^{(\\ell)}\\in{\\bf P}^{*},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathbf{P}^{*}=\\left[P^{(\\ell)}\\right]_{\\ell\\in[L]}$ represents the set of all permutation matrices $P^{(\\ell)}$ for each layer $\\ell$ of the GNN. Here, $[L]$ refers to the set of indices corresponding to all layers in the GNN. ", "page_idx": 3}, {"type": "text", "text": "However, to apply Eq. 1 to GNN-based GRAMA, it is essential to first discuss whether the permutation invariance property extends to GNNs. This property has been extensively studied in existing literature for various architectures [10, 5, 43, 1, 33, 19], including multi-layer perceptrons (MLPs), convolutional neural networks (CNNs), and Transformers. Supported by these prior studies, and given that GNNs are fundamentally built upon MLPs [58, 30], we propose: ", "page_idx": 3}, {"type": "text", "text": "Conjecture 4.1 (Permutation Invariance in GNNs). Permutation invariance for parameters in GNNs exists if and only if there exists a set of permutation matrices $P^{(\\ell)}$ for each layer \u2113such that applying these permutations to the parameters does not alter the outcome of graph-based learning task, regardless of the structure of the adjacency matrix. ", "page_idx": 3}, {"type": "text", "text": "A key subsequent issue involves searching the optimal permutation matrix $\\mathbf{P}^{*}$ for GNNs. One possible data-independent solution is to minimise the $L_{2}$ distance between the weight vectors of the pre-trained models by solving a sum of bilinear assignments problem, similar to weight matching techniques described in [1]. This method, which does not consider data distributions, could be adapted as a baseline vanilla method for our GRAMA task in the non-Euclidean domain, which is evaluated in our experiments. ", "page_idx": 3}, {"type": "text", "text": "4.2 Challenges Towards GRAMA ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "However, we empirically observed that even the Vanilla Alignment Prior to Interpolation method yielded unfavourable results for our GRAMA task. To elucidate the underlying cause of this phenomenon, we theoretically demonstrated that GNNs typically exhibit greater sensitivity to parameter mismatches than neural networks in the Euclidean domain: ", "page_idx": 4}, {"type": "text", "text": "Lemma 4.1 (Amplified Sensitivity of GNNs to Parameter Misalignment). GNNs exhibit greater sensitivity to mismatches in parameter alignment compared to CNNs, amplified by the degree of connectivity and heterogeneity of the node features in the graph topology. ", "page_idx": 4}, {"type": "text", "text": "A complete theoretical proof of Lemma 4.1 is provided in Appendix G.1. Here, we present only the final formulation of the approximated output changes resulting from weight perturbations due to mismatching, based on Taylor series approximation: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\Delta F_{i}\\approx\\sigma^{\\prime}\\left(\\sum_{j\\in\\mathcal{N}(i)}W\\cdot X_{j}\\right)\\cdot\\sum_{j\\in\\mathcal{N}(i)}\\epsilon\\cdot X_{j},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\Delta F_{i}$ refers to the change in output at node $i$ due to the perturbations $\\epsilon$ in the weights $W$ , and $\\sigma^{\\prime}$ represents the derivative of the activation function. $X_{j}$ denotes the features of the nodes within the neighbourhood $\\mathcal{N}(i)$ of node $i$ . Detailed, model-specific formulations of Eq. 2 are provided in Sect. B of the appendix. ", "page_idx": 4}, {"type": "text", "text": "Eq. 2 implies that the effect of $\\epsilon$ can be exacerbated by the potentially large and diverse neighbourhoods $\\bar{\\mathcal{N}}(i)$ , thereby making the output highly sensitive to changes in $W$ . In other words, the effect of weight perturbation can vary dramatically based on the node\u2019s connectivity and the characteristics of its neighbours. Such variability leads to significant and less predictable changes in output, illustrating the particular vulnerability of GNNs to parameter mismatches. ", "page_idx": 4}, {"type": "text", "text": "The integration of Eq. 1 with Lemma 4.1 and Eq. 2 further gives rise to the following conjecture: ", "page_idx": 4}, {"type": "text", "text": "Conjecture 4.2 (Topology-dependent Complexity in GNNs). The identification of optimal permutation matrices $\\mathbf{P}^{*}$ for GNNs presents increased complexity compared to the Euclidean domain, contingent upon the topological characteristics inherent to each graph. ", "page_idx": 4}, {"type": "text", "text": "Conjecture 4.2 highlights the essential need for developing GRAMA methods that are specifically tailored to accommodate the unique topologies of graphs, motivating the design of the proposed approach in Sect. 5. ", "page_idx": 4}, {"type": "text", "text": "5 Proposed Approach: Dual-Message Coordinator and Calibrator ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "5.1 Overview ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Motivated by Conjecture 4.2, we introduce in this section the proposed Dual-Message Coordination and Calibration (DuMCC) methodology, which is specifically designed to harness the unique topological features of input graphs for achieving GRAMA without relying on human annotations. ", "page_idx": 4}, {"type": "text", "text": "The proposed DuMCC is composed of two strategic schemes. In particular, the first Parent Message Coordination (PMC) scheme effectively integrates topological information by deriving optimal permutation matrices from layer-specific aggregation results. However, both empirical and theoretical analyses reveal a reduction in node feature variance in child GNNs, suggesting that models derived through this coordination are more susceptible to over-smoothing compared to their parent GNN counterparts. ", "page_idx": 4}, {"type": "text", "text": "To address this issue, we further propose the Child Message Calibration (CMC) scheme as our second strategic component. This scheme aims to maintain message variance consistency from the parent models, ensuring the retention of feature diversity essential for robust GNN performance. Further elaboration on each component is provided in subsequent sections. ", "page_idx": 4}, {"type": "text", "text": "5.2 Parent Message Coordination Scheme ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Motivated by Conjecture 4.2, which highlights the significance of incorporating topology information in the GRAMA process, we propose a Parent Message Coordination (PMC) scheme for identifying optimal topology-aware permutation matrices $\\mathbf{P}^{*}$ described in Eq. 1. Unlike the vanilla method of VAPI in Sect. 4 that minimises the distance between weight vectors without considering the input graphs\u2019 topologies, PMC optimises $\\mathbf{P}^{*}$ by leveraging the topology information embedded in aggregated messages from two pre-trained parent GNN models. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Assume we have two pre-trained parent GNNs, denoted by $\\mathcal{G}_{a}$ and $\\mathcal{G}_{b}$ , both sharing identical architectures. Their corresponding weight matrices are denoted by $W_{a}$ and $W_{b}$ , respectively. To establish correspondence between neurons in $W_{a}$ and $W_{b}$ as described in Eq. 1, our PMC optimises the permutation matrix $P^{(\\ell)}$ at layer $\\ell$ by aligning the aggregated messages of the two parent GNNs. To align with the notations [1, 33] used in model merging within the Euclidean domain, the associated optimisation process can be formulated as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\begin{array}{r l}&{P^{(\\ell)}=\\arg\\underset{P^{(\\ell)}\\in\\mathbf{P}^{*}}{\\operatorname*{min}}\\sideset{}{}{}\\sum_{i}\\big\\|\\underset{j\\in\\mathcal{N}(i)}{\\mathrm{Agg}}\\;\\phi\\left(W_{a}^{(\\ell-1)};X_{j,a}^{(\\ell-1)},e_{i j}\\right)}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\quad-\\left.P^{(\\ell)}\\cdot\\underset{j\\in\\mathcal{N}(i)}{\\mathrm{Agg}}\\;\\phi\\left(W_{b}^{(\\ell-1)};X_{j,b}^{(\\ell-1)},e_{i j}\\right)\\big\\|^{2},}\\end{array}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\phi$ denotes the message function that encodes both node features $X$ and edge features $e$ , and Agg represents the message aggregation function that accumulates incoming messages from $\\phi$ , acting on each node i. $\\mathcal{N}(i)$ denotes the set of neighbours of node $i$ . The minimisation problem in the form of Eq. 3 can be typically transformed into a maximisation problem to maximise an inner product (as derived from expanding Eq. 3), thereby ftiting it within the framework of a standard linear assignment problem, as also done in the works of [1, 33, 35, 44]. ", "page_idx": 5}, {"type": "text", "text": "Eq. 3 is based on the rationale that aggregated messages inherently encapsulate essential graph topologies, and that structurally similar GNNs typically generate analogous aggregated messages when tasked with similar graph operations and topologies. As such, through Eq. 3, $\\mathbf{P}^{*}$ can be determined in a topology-aware manner, matching aggregated messages to reflect the topological characteristics of the graphs. Here, we clarify that while our approach involves passing the graph data to the pre-trained model to capture the graph-specific topological characteristics by utilising $X$ , it requires only a single forward pass of the unlabelled graph data to extract messages for alignment\u2014eliminating the need for iterative training or ground-truth labels. Subsequently, child GNNs can be derived through linear parameter interpolation. ", "page_idx": 5}, {"type": "text", "text": "Despite the encouraging performance, we observe that the child GNN, derived from the proposed PMC, exhibits a reduction in the variance of node embeddings. We conjecture that this reduction stems from an averaging effect, which may smooth out the distinctive features captured by each parent model, particularly when these models have learned different structural aspects of the graph: ", "page_idx": 5}, {"type": "text", "text": "Lemma 5.1 (Variance Reduction in Interpolated Graph Embeddings). The variance of the graph embeddings in an interpolated child GNN is typically smaller than the variances of the embeddings from the individual pre-trained parent GNNs. ", "page_idx": 5}, {"type": "text", "text": "The full proof of Lemma 5.1 is detailed in Appendix G.2, providing evidence of feature homogenisation within child GNNs. In the context of GNNs, we further explore and establish the following proposition: ", "page_idx": 5}, {"type": "text", "text": "Proposition 5.1 (Increased Susceptibility to Over-Smoothing in Child GNNs). Interpolated child GNNs exhibit increased susceptibility to over-smoothing compared to their parent networks, as measured by Dirichlet energy. ", "page_idx": 5}, {"type": "text", "text": "The detailed proof of Proposition 5.1 is provided in Appendix G.3, utilising the quantitative oversmoothing measurement based on Dirichlet energy [41], where a lower value indicates greater homogeneity or smoothness among node features. In particular, our theoretical analysis in Appendix G.3 demonstrates that: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{E}(X^{\\ell})\\leq\\mathrm{max}\\left(\\mathcal{E}(X_{a}^{\\ell}),\\mathcal{E}(X_{b}^{\\ell})\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathcal{E}(X^{\\ell})$ denotes the Dirichlet energy for the node features $X^{\\ell}$ at layer $\\ell$ of the child GNN. ", "page_idx": 5}, {"type": "text", "text": "In GRAMA, the parameter $\\alpha$ is typically set to 0.5 to ensure unbiased knowledge integration from both pre-trained models. This setting promotes a balanced contribution from each model and prevents any bias toward the characteristics of one over the other. As detailed in Appendix G.3, with $\\alpha$ at this level, the Dirichlet energy of the interpolated child GNN, $\\mathcal{E}(X^{\\ell})$ , significantly decreases compared to the Dirichlet energies of the individual parent models, indicating a higher susceptibility to oversmoothing. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Corresponding to this theoretical analysis, empirical evidence is presented in Fig. 1, where 60 parent models are pre-trained on distinct partitions of the ogbn-products dataset with different random seeds. Additional implementation details are provided in the appendix. Fig. 1 further demonstrates the increased smoothing effect, which can potentially diminish the model\u2019s expressive power and discriminative capability. ", "page_idx": 6}, {"type": "image", "img_path": "m4NI2yIwJA/tmp/1587f5446630c254da321f2c9b9f62623d4ddfbb4c857db82b28795e816573b9.jpg", "img_caption": ["Figure 1: Comparison of Dirichlet energies between pre-trained parent GNNs and the corresponding child from PMC. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "5.3 Child Message Calibration Scheme ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To mitigate the over-smoothing issue identified in Proposition 5.1, one potential solution involves leveraging established methods designed to address over-smoothing, such as PairNorm [65] and residual connections [32]. However, to the best of our knowledge, all these existing solutions typically require re-training the model. This requirement contradicts the fundamental principle of our GRAMA approach, which aims for training-free model reuse. ", "page_idx": 6}, {"type": "text", "text": "To address this issue, we introduce a Child Message Calibration (CMC) scheme designed to refine the message statistics of the obtained child GNN without the need for re-training or ground-truth labels. Central to this scheme is our Learning-Free Message Normalisation (LFNorm) layer specifically tailored for our GRAMA task, inspired by [28]. This layer is intended to enhance the discriminative power and representational capacity of the child GNN by promoting a more diverse node feature distribution. ", "page_idx": 6}, {"type": "text", "text": "According to Proposition 5.1, while the shift in mean node features is typically less problematic than variance reduction, it is noted in [6] that mean statistics in GNNs also carry vital graph structural information. Therefore, our approach aims to simultaneously refine both mean and variance statistics in the child GNN, ensuring a comprehensive enhancement of topological representation. ", "page_idx": 6}, {"type": "text", "text": "Towards this end, we first process the raw graph through the parent GNNs to compute the target message mean and variance intended for alignment in the child GNN. Subsequently, we integrate the LFNorm layer into the child GNN to refine the message statistics using the derived mean and variance from the parent models: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\tilde{m}_{i j}=\\sqrt{\\frac{\\mathrm{Var}(m_{i j}^{a})+\\mathrm{Var}(m_{i j}^{b})}{2}}\\cdot\\left(\\frac{m_{i j}-\\mu_{\\mathcal{N}(i)}}{\\sigma_{\\mathcal{N}(i)}}\\right)+\\frac{\\mathrm{E}(m_{i j}^{a})+\\mathrm{E}(m_{i j}^{b})}{2},\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where mij = \u03c6j\u2208N(i)(W (\u2113\u22121); Xj(\u2113\u22121), represents the messages from node $j$ to node $i$ , as specified in Eq. 3. In this setup, $\\tilde{m}_{i j}$ denotes the statistically calibrated message within the child GNN, while $\\mu_{\\mathcal{N}(i)}$ and $\\sigma_{\\ensuremath{\\mathcal{N}}(i)}$ represent the mean and standard deviation, respectively, of the messages directed to node $i$ in the child GNN. ", "page_idx": 6}, {"type": "text", "text": "Eq. 5 ensures that the normalised messages in the interpolated child model maintain a balanced representation of central tendencies from both pre-trained parent models. This method effectively reduces the risk of over-smoothing in child GNNs by preserving essential topological statistics from the parent models. ", "page_idx": 6}, {"type": "text", "text": "A more detailed algorithmic procedure is outlined in Alg. 1. In practice, we find that incorporating a single LFNorm layer and aligning the overall message mean and variance of the parent GNNs is typically sufficient to achieve favourable performance while minimising computational costs. ", "page_idx": 6}, {"type": "text", "text": "6 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate the performance of DuMCC across seven benchmarks spanning five GNN architectures. More ablation studies and sensitivity analyses, additional results and implementation details, as well as more visualisations, are detailed in Secs. D and E of the appendix. ", "page_idx": 6}, {"type": "text", "text": "Input: Pre-trained Parent GNNs $\\mathcal{G}_{a}$ and $\\mathcal{G}_{b}$ , interpolation factor $\\alpha$ .   \nOutput: Child GNN $\\mathcal{G}$ that integrates the expertise of $\\mathcal{G}_{a}$ and $\\mathcal{G}_{b}$ in a learning-free manner.   \n// Parent Message Coordination   \nforeach layer \u2113from 1 to $L$ do Extract weights $W_{a}^{(\\ell)}$ from $\\mathcal{G}_{a}$ ; Extract weights $W_{b}^{(\\ell)}$ from $\\mathcal{G}_{b}$ // Compute permutation matrix for current layer with aggregated messages $\\begin{array}{r}{\\begin{array}{r l}&{P^{(\\ell)}\\gets\\overline{{\\operatorname*{arg}_{P^{(\\ell)}\\in\\mathbf{P}^{*}}}}\\sum_{i}\\|\\underset{j\\in\\mathcal{N}(i)}{\\mathrm{\\Agg~}}\\phi\\left(W_{a}^{(\\ell-1)};X_{j,a}^{(\\ell-1)},e_{i j}\\right)}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\quad-\\left.P^{(\\ell)}\\cdot\\underset{j\\in\\mathcal{N}(i)}{\\mathrm{Agg~}}\\phi\\left(W_{b}^{(\\ell-1)};X_{j,b}^{(\\ell-1)},e_{i j}\\right)\\|^{2}}\\end{array}}\\end{array}$ // Interpolate weights for current layer $W^{(\\ell)}\\gets\\alpha W_{a}^{(\\ell)}+(1-\\alpha)P^{(\\ell)}W_{b}^{(\\ell)}(P^{(\\ell-1)})^{T}$ ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "end ", "text_level": 1, "page_idx": 7}, {"type": "equation", "text": "$$\n\\mathcal{G}\\leftarrow\\{W^{(\\ell)}\\}_{\\ell=1}^{L}\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "// Child Message Calibration ", "page_idx": 7}, {"type": "text", "text": "oreach layer \u2113from $(L-n)$ to $L$ do foreach edge $(i,j)$ in the graph do // Compute the messages in $\\mathcal{G}_{a}$ and $\\mathcal{G}_{b}$ $\\begin{array}{r l}&{\\underset{i j}{m}^{a^{*}}\\!\\gets\\phi_{j\\in\\mathcal{N}(i)}(W_{a}^{(\\ell-\\overline{{1}})};X_{j,a}^{(\\ell-1)},e_{i j});m_{i j}^{b}\\gets\\phi_{j\\in\\mathcal{N}(i)}(W_{b}^{(\\ell-1)};X_{j,b}^{(\\ell-1)},e_{i j})}\\\\ {\\mathrm{'/~Compute~the~\\piessage~for~\\mathcal{G}~}}\\\\ &{\\underset{m_{i j}}{m}\\gets\\phi_{j\\in\\mathcal{N}(i)}(W_{\\bullet}^{(\\ell-1)};X_{j}^{(\\ell-1)},e_{i j})}\\end{array}$ // Compute the scale and shift parameters $\\beta\\leftarrow\\sqrt{\\left(\\mathrm{Var}(m_{i j}^{a})+\\mathrm{Var}(m_{i j}^{b})\\right)/2};\\gamma\\leftarrow\\left(\\mathrm{E}(m_{i j}^{a})+\\mathrm{E}(m_{i j}^{b})\\right)/2$ // Learning-free message calibration for $\\mathcal{G}$ $\\tilde{m}_{i j}\\leftarrow\\beta\\left((m_{i j}-\\mu_{\\mathcal{N}(i)})/\\sigma_{\\mathcal{N}(i)}\\right)+\\gamma$ end foreach node i in the graph do // Aggregate the calibrated messages and update features $X_{i}^{\\ell}\\gets\\mathrm{Agg}_{j\\in\\mathcal{N}(i)}\\tilde{m}_{i j}$ end ", "page_idx": 7}, {"type": "text", "text": "end ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Implementation Details. Detailed dataset descriptions and statistics are provided in Appendix C. For multiclass classification tasks on ogbnarxiv [17], ogbn-products [4], and ModelNet40 [55], we adopt the dataset partition strategy widely used in model merging within the Euclidean domain [1, 28]. Specifically, each dataset is randomly split into two disjoint subsets: the first subset comprises $20\\%$ of the data with odd labels and $80\\%$ with even labels, while the second subset is arranged vice versa. ", "page_idx": 7}, {"type": "table", "img_path": "m4NI2yIwJA/tmp/a72327b2e9da449b3682dba604c0fdde3bbd946a6f18da2f3f0433d45ede4251.jpg", "table_caption": ["Table 2: Multi-class molecule property prediction results for parent GNNs, each pre-trained on disjoint partitions of the ogbn-arxiv and ogbn-products datasets [18]. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "For the semantic segmentation task on S3DIS [3], we train the two parent models using Areas 1, 2, 3 and Areas 2, 3, 4, 6, respectively, with Area 5 designated for testing, as also done in [32]. In the multi-label classification task on ogbn-proteins [17], one parent model is trained on nodes with odd labels and the other on nodes with even labels. Implementation follows the official codes provided by the Deep Graph Library (DGL) [52] and the original authors, including detailed architectures and hyperparameter settings. We set the interpolation factor $\\alpha$ in Eq. 1 to 0.5 for all experiments, with a sensitivity analysis provided in Sect. D of the appendix. For models originally equipped with ", "page_idx": 7}, {"type": "image", "img_path": "m4NI2yIwJA/tmp/532fa64ac5aabe9d48e937deec658952a2309a725136ea5ebbe65b13787712b1.jpg", "img_caption": ["Figure 2: The t-SNE visualisations of various methods on a subset comprising the first 10 classes of ogbn-arxiv. Additional visualisations for the remaining classes are available in Appendix E. "], "img_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "m4NI2yIwJA/tmp/001056649cc790925b3ccd9d34cf928a6b3a471d97f006ad5c431c46ef5d7b11.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Table 4: Results of the point cloud classification task on ModelNet40 [55] using DGCNN, with two parent models trained on disjoint partitions. ", "page_idx": 8}, {"type": "image", "img_path": "m4NI2yIwJA/tmp/bea9136d8bac20b482db837e5037246748666e601f2b56135fbd2585a2aedac6.jpg", "img_caption": ["Figure 3: Visualisations of feature space structures, depicted by the distances between the red point and all other points. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "normalisation layers, we recompute the running mean and running variance for the student GNN. In particular, the recomputation of statistics is performed concurrently with that of the LFNorm layer for the child GNN in CMC. More implementation details are elaborated in Sect. E of the appendix. ", "page_idx": 8}, {"type": "text", "text": "Comparison Methods. Considering the limited exploration of multi-GNN reuse in existing literature, we focus our comparison of the proposed DuMCC approach on the training-dependent KA [25] and training-free VPI [54] and VAPI [1] methods, as introduced in Sect. 4. Furthermore, in Sect. E of the appendix, we also provide the results of retraining a child model using combined parent datasets with ground-truth labels, which establish an upper bound for GRAMA\u2019s performance. ", "page_idx": 8}, {"type": "text", "text": "Node Property Prediction. Tab. 2 presents the results for the multi-class node classification task. The proposed DuMCC framework, as shown in the table, achieves a more balanced performance across all datasets. It notably outperforms the parent models on datasets that were not used for their training. Additionally, the last two lines of Tab. 2 detail an ablation study on the proposed CMC scheme, demonstrating its ability to enhance performance beyond PMC. While our method slightly lags behind KA in performance, KA involves a complex re-training process, whereas our approach is completely training-free. A sample t-SNE visualisation of the results is provided in Fig. 2. ", "page_idx": 8}, {"type": "text", "text": "We further show in Tab. 3 the results of multi-label molecule property prediction. Notably, our approach slightly outperforms KA in Tab. 3, underscoring the limitations of KA discussed in Sect. 3. These limitations stem from KA\u2019s reliance on soft labels produced by the teacher GNNs, making it vulnerable to their misclassification errors. Furthermore, we explore the potential of multi-model GRAMA by concurrently reusing three pre-trained node classification GNNs, as discussed in Sect. F of the appendix. ", "page_idx": 8}, {"type": "text", "text": "Graph Property Prediction. Tab. 3 also presents results for the graph classification task using GAT architectures. The proposed DuMCC demonstrates enhanced equilibrium in performance relative to the parent models. Notably, DuMCC slightly outperforms KA on ogbg-molbace, further illustrating that KA is vulnerable to the errors of pre-trained models. In contrast, our approach does not rely on soft labels, thus avoiding this limitation. ", "page_idx": 8}, {"type": "table", "img_path": "m4NI2yIwJA/tmp/9d874de49a8e87657a8af9275a39e2633ac069206a5c324ac632c3d611d0d67c.jpg", "table_caption": ["Table 3: Results for multi-label node classification and graph classification, indicating KA\u2019s vulnerability to misclassification errors from pre-trained models. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "m4NI2yIwJA/tmp/dfe6abad0202edfbb8d5f828265270cea657a693a5a994be2841171dc641906f.jpg", "table_caption": ["Table 5: Results of the 3D semantic segmentation task on the S3DIS dataset [3], with detailed per-class results provided. Architecture details can be found in Sect. E of the appendix. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "3D Object Recognition and Semantic Parsing. Tab. 4 and Fig. 3 illustrate the quantitative results and qualitative visualisations for the point cloud classification task, respectively. The proposed DuMCC outperforms model I on dataset J and model J on Dataset I without requiring re-training. Moreover, Tab. 4 demonstrates that our approach significantly outperforms two vanilla methods. Fig. 3 further illustrates the structure of the feature space, revealing that our method produces semantically similar structures to those achieved by KA with re-training. We also show in Tab. 5 the results for the large-scale indoor semantic segmentation task. Our method notably surpasses other learning-free GNN reuse methods VPI and VAPI. Further qualitative and quantitative results across various dataset splits and network architectures are provided in Sect. E of the appendix. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusions and Limitations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we explore a novel GRAMA task for learning-free GNN reuse. The child model from GRAMA is expected to functionally merge knowledge from pre-trained parent models. Uniquely, GRAMA establishes the first paradigm in GNN reuse that operates entirely without re-training or finetuning, while also eliminating the need for ground-truth labels. To this end, we start by developing two vanilla GRAMA approaches, which reveal specific challenges inherent to GRAMA. These challenges motivate us to develop a DuMCC framework for topology-aware model reuse, leveraging a parent message coordination scheme followed by child message calibration. Experiments on node- and graph-level tasks across various domains demonstrate the effectiveness of the proposed approach for annotation-free knowledge transfer without additional learning. ", "page_idx": 9}, {"type": "text", "text": "Despite its strengths, the proposed DuMCC is primarily designed for homogeneous GRAMA, as discussed in Sect. 3. Currently, the framework does not support cross-architecture heterogeneous GRAMA, where parent models have different architectures, such as a combination of GCN and GraphSAGE. Additionally, it does not handle scenarios where parent models address tasks at different levels, such as node-level versus graph-level tasks\u2014another aspect of heterogeneous GRAMA. These limitations primarily arise from the absence of direct correspondence between the differing architectural layers of the parent models, an issue we plan to explore in our future work. We will also explore the possibility of a fully data-independent GRAMA scheme and investigate broader applications beyond training-free model reuse, such as its use as a pre-processing step to facilitate graph-based knowledge amalgamation. Further discussions on limitations and potential solutions are provided in Sect. H of the appendix. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This research / project is supported by the National Research Foundation, Singapore, and Cyber Security Agency of Singapore under its National Cybersecurity R&D Programme and CyberSG R&D Cyber Research Programme Office, as well as Australian Research Council Discovery Project DP190103301. ", "page_idx": 10}, {"type": "text", "text": "Any opinions, findings and conclusions or recommendations expressed in these materials are those of the author(s) and do not reflect the views of National Research Foundation, Singapore, Cyber Security Agency of Singapore as well as CyberSG R&D Programme Office, Singapore. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Samuel Ainsworth, Jonathan Hayase, and Siddhartha Srinivasa. Git re-basin: Merging models modulo permutation symmetries. In ICLR, 2023.   \n[2] Takuya Akiba, Makoto Shing, Yujin Tang, Qi Sun, and David Ha. Evolutionary optimization of model merging recipes. arXiv preprint arXiv:2403.13187, 2024.   \n[3] Iro Armeni, Ozan Sener, Amir R Zamir, Helen Jiang, Ioannis Brilakis, Martin Fischer, and Silvio Savarese. 3d semantic parsing of large-scale indoor spaces. In CVPR, 2016. [4] K. Bhatia, K. Dahiya, H. Jain, P. Kar, A. Mittal, Y. Prabhu, and M. Varma. The extreme classification repository: Multi-label datasets and code, 2016. [5] Johanni Brea, Berfin Simsek, Bernd Illing, and Wulfram Gerstner. Weight-space symmetry in deep networks gives rise to permutation saddles, connected by equal-loss valleys across the loss landscape. arXiv preprint arXiv:1907.02911, 2019. [6] Tianle Cai, Shengjie Luo, Keyulu Xu, Di He, Tie-yan Liu, and Liwei Wang. Graphnorm: A principled approach to accelerating graph neural network training. In ICML, 2021.   \n[7] Ming Chen, Zhewei Wei, Zengfeng Huang, Bolin Ding, and Yaliang Li. Simple and deep graph convolutional networks. In ICML, 2020. [8] Avery Ching, Sergey Edunov, Maja Kabiljo, Dionysios Logothetis, and Sambavi Muthukrishnan. One trillion edges: Graph processing at facebook-scale. Proceedings of the VLDB Endowment, 2015.   \n[9] Xiang Deng and Zhongfei Zhang. Graph-free knowledge distillation for graph neural networks. In IJCAI, 2021.   \n[10] Rahim Entezari, Hanie Sedghi, Olga Saukh, and Behnam Neyshabur. The role of permutation invariance in linear mode connectivity of neural networks. In ICLR, 2022.   \n[11] Kaituo Feng, Changsheng Li, Ye Yuan, and Guoren Wang. Freekd: Free-direction knowledge distillation for graph neural networks. In KDD, 2022.   \n[12] Jianping Gou, Baosheng Yu, Stephen J Maybank, and Dacheng Tao. Knowledge distillation: A survey. IJCV, 2021.   \n[13] Will Hamilton, Zhitao Ying, and Jure Leskovec. Inductive representation learning on large graphs. In NeurIPS, 2017.   \n[14] Kai Han, Yunhe Wang, Hanting Chen, Xinghao Chen, Jianyuan Guo, Zhenhua Liu, Yehui Tang, An Xiao, Chunjing Xu, Yixing Xu, et al. A survey on vision transformer. TPAMI, 2022.   \n[15] Yunzhi Hao, Yu Wang, Shunyu Liu, Tongya Zheng, Xingen Wang, Xinyu Wang, Mingli Song, Wenqi Huang, and Chun Chen. Attribution guided layerwise knowledge amalgamation from graph neural networks. In ICONIP, 2023.   \n[16] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. In NIPS Deep Learning and Representation Learning Workshop, 2015.   \n[17] Weihua Hu, Matthias Fey, Hongyu Ren, Maho Nakata, Yuxiao Dong, and Jure Leskovec. Ogb-lsc: A large-scale challenge for machine learning on graphs. In NeurIPS Datasets and Benchmarks, 2021.   \n[18] Weihua Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele Catasta, and Jure Leskovec. Open graph benchmark: Datasets for machine learning on graphs. arXiv preprint arXiv:2005.00687, 2020.   \n[19] Moritz Imfeld, Jacopo Graldi, Marco Giordano, Thomas Hofmann, Sotiris Anagnostidis, and Sidak Pal Singh. Transformer fusion with optimal transport. In ICLR, 2024.   \n[20] Wei Jin, Lingxiao Zhao, Shichang Zhang, Yozen Liu, Jiliang Tang, and Neil Shah. Graph condensation for graph neural networks. In ICLR, 2022.   \n[21] Xisen Jin, Xiang Ren, Daniel Preotiuc-Pietro, and Pengxiang Cheng. Dataless knowledge fusion by merging weights of language models. In ICLR, 2023.   \n[22] Yongcheng Jing. Efficient representation learning with graph neural networks. PhD thesis, 2023.   \n[23] Yongcheng Jing, Yining Mao, Yiding Yang, Yibing Zhan, Mingli Song, Xinchao Wang, and Dacheng Tao. Learning graph neural networks for image style transfer. In ECCV, 2022.   \n[24] Yongcheng Jing, Xinchao Wang, and Dacheng Tao. Segment anything in non-euclidean domains: Challenges and opportunities. arXiv preprint arXiv:2304.11595, 2023.   \n[25] Yongcheng Jing, Yiding Yang, Xinchao Wang, Mingli Song, and Dacheng Tao. Amalgamating knowledge from heterogeneous graph neural networks. In CVPR, 2021.   \n[26] Yongcheng Jing, Yiding Yang, Xinchao Wang, Mingli Song, and Dacheng Tao. Meta-aggregator: Learning to aggregate for 1-bit graph neural networks. In ICCV, 2021.   \n[27] Yongcheng Jing, Chongbin Yuan, Li Ju, Yiding Yang, Xinchao Wang, and Dacheng Tao. Deep graph reprogramming. In CVPR, 2023.   \n[28] Keller Jordan, Hanie Sedghi, Olga Saukh, Rahim Entezari, and Behnam Neyshabur. Repair: Renormalizing permuted activations for interpolation repair. In ICLR, 2023.   \n[29] Chaitanya K Joshi, Fayao Liu, Xu Xun, Jie Lin, and Chuan-Sheng Foo. On representation knowledge distillation for graph neural networks. arXiv preprint arXiv:2111.04964, 2021.   \n[30] Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. In ICLR, 2017.   \n[31] Guohao Li, Matthias M\u00fcller, Guocheng Qian, Itzel C Delgadillo, Abdulellah Abualshour, Ali Thabet, and Bernard Ghanem. Deepgcns: Making gcns go as deep as cnns. TPAMI, 2021.   \n[32] Guohao Li, Matthias Muller, Ali Thabet, and Bernard Ghanem. Deepgcns: Can gcns go as deep as cnns? In ICCV, 2019.   \n[33] Weishi Li, Yong Peng, Miao Zhang, Liang Ding, Han Hu, and Li Shen. Deep model fusion: A survey. arXiv preprint arXiv:2309.15698, 2023.   \n[34] Sihao Lin, Hongwei Xie, Bing Wang, Kaicheng Yu, Xiaojun Chang, Xiaodan Liang, and Gang Wang. Knowledge distillation via the target-aware transformer. In CVPR, 2022.   \n[35] Chang Liu, Chenfei Lou, Runzhong Wang, Alan Yuhan Xi, Li Shen, and Junchi Yan. Deep neural network fusion via graph matching with applications to model ensemble and federated learning. In ICML, 2022.   \n[36] Haibo Liu, Di Zhang, Liang Wang, and Xin Song. Multi-teacher local semantic distillation from graph neural networks. In ADMA, 2023.   \n[37] Xin Liu, Mingyu Yan, Lei Deng, Guoqi Li, Xiaochun Ye, Dongrui Fan, Shirui Pan, and Yuan Xie. Survey on graph neural network acceleration: An algorithmic perspective. In IJCAI, 2022.   \n[38] Michael S Matena and Colin A Raffel. Merging models with fisher-weighted averaging. In NeurIPS, 2022.   \n[39] Yu Pan, Ye Yuan, Yichun Yin, Zenglin Xu, Lifeng Shang, Xin Jiang, and Qun Liu. Reusing pretrained models by multi-linear operators for efficient training. In NeurIPS, 2023.   \n[40] Adriana Romero, Nicolas Ballas, Samira Ebrahimi Kahou, Antoine Chassang, Carlo Gatta, and Yoshua Bengio. Fitnets: Hints for thin deep nets. arXiv preprint arXiv:1412.6550, 2014.   \n[41] T Konstantin Rusch, Michael Bronstein, and Siddhartha Mishra. A survey on oversmoothing in graph neural networks. SAM Research Report, 2023.   \n[42] Andrei A Rusu, Neil C Rabinowitz, Guillaume Desjardins, Hubert Soyer, James Kirkpatrick, Koray Kavukcuoglu, Razvan Pascanu, and Raia Hadsell. Progressive neural networks. arXiv preprint arXiv:1606.04671, 2016.   \n[43] Sidak Pal Singh and Martin Jaggi. Model fusion via optimal transport. In NeurIPS, 2020.   \n[44] George Stoica, Daniel Bolya, Jakob Brandt Bjorner, Pratik Ramesh, Taylor Hearn, and Judy Hoffman. Zipit! merging models from different tasks without training. In ICLR, 2024.   \n[45] Xiu Su, Shan You, Fei Wang, Chen Qian, Changshui Zhang, and Chang Xu. Bcnet: Searching for network width with bilaterally coupled network. In CVPR, 2021.   \n[46] Xiu Su, Shan You, Jiyang Xie, Fei Wang, Chen Qian, Changshui Zhang, and Chang Xu. Searching for network width with bilaterally coupled network. TPAMI, 2022.   \n[47] Xiu Su, Shan You, Jiyang Xie, Mingkai Zheng, Fei Wang, Chen Qian, Changshui Zhang, Xiaogang Wang, and Chang Xu. Vitas: Vision transformer architecture search. In ECCV, 2022.   \n[48] Petar Velic\u02c7kovic\u00b4, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. Graph attention networks. In ICLR, 2018.   \n[49] Can Wang, Zhe Wang, Defang Chen, Sheng Zhou, Yan Feng, and Chun Chen. Online adversarial distillation for graph neural networks. arXiv preprint arXiv:2112.13966, 2021.   \n[50] Hongyi Wang, Mikhail Yurochkin, Yuekai Sun, Dimitris Papailiopoulos, and Yasaman Khazaeni. Federated learning with matched averaging. In ICLR, 2020.   \n[51] Lin Wang and Kuk-Jin Yoon. Knowledge distillation and student-teacher learning for visual intelligence: A review and new outlooks. TPAMI, 2021.   \n[52] Minjie Wang, Lingfan Yu, Da Zheng, Quan Gan, Yu Gai, Zihao Ye, Mufei Li, Jinjing Zhou, Qi Huang, Chao Ma, et al. Deep graph library: Towards efficient and scalable deep learning on graphs. In ICLR Workshop, 2019.   \n[53] Yue Wang, Yongbin Sun, Ziwei Liu, Sanjay E. Sarma, Michael M. Bronstein, and Justin M. Solomon. Dynamic graph cnn for learning on point clouds. TOG, 2019.   \n[54] Mitchell Wortsman, Gabriel Ilharco, Samir Ya Gadre, Rebecca Roelofs, Raphael Gontijo-Lopes, Ari S Morcos, Hongseok Namkoong, Ali Farhadi, Yair Carmon, Simon Kornblith, et al. Model soups: averaging weights of multiple fine-tuned models improves accuracy without increasing inference time. In ICML, 2022.   \n[55] Zhirong Wu, Shuran Song, Aditya Khosla, Fisher Yu, Linguang Zhang, Xiaoou Tang, and Jianxiong Xiao. 3d shapenets: A deep representation for volumetric shapes. In CVPR, 2015.   \n[56] Keyulu Xu, Weihua Hu, Jure Leskovec, and Stefanie Jegelka. How powerful are graph neural networks? In ICLR, 2019.   \n[57] Zhengqi Xu, Ke Yuan, Huiqiong Wang, Yong Wang, Mingli Song, and Jie Song. Training-free pretrained model merging. In CVPR, 2024.   \n[58] Chenxiao Yang, Qitian Wu, Jiahua Wang, and Junchi Yan. Graph neural networks are inherently good generalizers: Insights by bridging gnns and mlps. In ICLR, 2023.   \n[59] Enneng Yang, Zhenyi Wang, Li Shen, Shiwei Liu, Guibing Guo, Xingwei Wang, and Dacheng Tao. Adamerging: Adaptive model merging for multi-task learning. In ICLR, 2024.   \n[60] Yiding Yang, Jiayan Qiu, Mingli Song, Dacheng Tao, and Xinchao Wang. Distilling knowledge from graph convolutional networks. In CVPR, 2020.   \n[61] Jingwen Ye, Zunlei Feng, and Xinchao Wang. Flocking birds of a feather together: Dual-step gan distillation via realer-fake samples. In VCIP, 2022.   \n[62] Le Yu, Bowen Yu, Haiyang Yu, Fei Huang, and Yongbin Li. Language models are super mario: Absorbing abilities from homologous models as a free lunch. arXiv preprint arXiv:2311.03099, 2023.   \n[63] Sergey Zagoruyko and Nikos Komodakis. Paying more attention to attention: Improving the performance of convolutional neural networks via attention transfer. arXiv preprint arXiv:1612.03928, 2016.   \n[64] Amir R Zamir, Alexander Sax, William Shen, Leonidas J Guibas, Jitendra Malik, and Silvio Savarese. Taskonomy: Disentangling task transfer learning. In CVPR, 2018.   \n[65] Lingxiao Zhao and Leman Akoglu. Pairnorm: Tackling oversmoothing in gnns. In ICLR, 2020.   \n[66] Sheng Zhou, Yucheng Wang, Defang Chen, Jiawei Chen, Xin Wang, Can Wang, and Jiajun Bu. Distilling holistic knowledge with graph neural networks. In ICCV, 2021.   \n[67] Xiatian Zhu, Shaogang Gong, et al. Knowledge distillation by on-the-fly native ensemble. In NeurIPS, 2018. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: The main claims in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Justification: Limitation discussions are provided in Sect. 7. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: The full set of assumptions and a complete proof are provided in Appendix G. Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The information to reproduce the experiments is provided in Appendix E. Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The code and model are provided in the supplementary material. Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 16}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: Implementation details are elaborated in Sect. E of the appendix. Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 16}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The statistical analysis is provided in Appendix E. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Computer resources needed are detailed in Sect. E of the appendix. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 17}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The research conducted in the paper conform with the NeurIPS Code of Ethics. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 17}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: Potential societal impacts of the work are discussed in Appendix I. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to ", "page_idx": 17}, {"type": "text", "text": "generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. ", "page_idx": 18}, {"type": "text", "text": "\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. \u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: The paper studies GNN reuse for resource-efficient graph representation learning and thereby, to our knowledge, poses no such risk. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 18}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The existing assets are cited and properly respected with the discussions provided in Appendix C. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 18}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: Details of the code and model are provided in the supplementary material. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 19}]