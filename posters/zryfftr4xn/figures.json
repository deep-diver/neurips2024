[{"figure_path": "ZRYFftR4xn/figures/figures_5_1.jpg", "caption": "Figure 1: Set of common points constructed by separating hyperplanes. The intersection of half-spaces defined by Hp(Q), \u2200p \u2208 [n], creates a subset of common points. The common points are in E-Core, provided that the confidence sets contain the ground-truth vertices.", "description": "This figure illustrates the geometric intuition behind the Common-Points-Picking algorithm. It shows how, by finding separating hyperplanes for each confidence set, the algorithm can identify a region (the shaded triangle) representing the common points which are guaranteed to be in the expected core (E-Core).  The key is that the confidence sets (squares) must be small enough relative to the distance between the hyperplanes to ensure that the intersection of the half-spaces is not empty.", "section": "4 Learning the Expected Core"}, {"figure_path": "ZRYFftR4xn/figures/figures_9_1.jpg", "caption": "Figure 2: Simulation with game of n \u2208 {2, ..., 10} players, where the strict convexity constant s is 0.1/n in the LHS and 0 in the RHS.", "description": "The figure shows two graphs. Each graph plots the natural logarithm of the number of rounds (T) against the number of players (n) for a cooperative game. The left-hand side (LHS) graph represents a strictly convex game where the strict convexity constant is 0.1/n. The right-hand side (RHS) graph represents a convex game where the strict convexity constant is 0.  Both graphs include the variance and growth curves for reference. The LHS graph demonstrates that the algorithm's sample complexity grows polynomially. The RHS graph shows that even when strict convexity is not satisfied, the algorithm remains robust, with sub-exponential sample complexity.", "section": "6 Experiment"}, {"figure_path": "ZRYFftR4xn/figures/figures_19_1.jpg", "caption": "Figure 2: Simulation with games of n \u2208 {2, ..., 10} players, where the strict convexity constant s is 0.1/n in the LHS and 0 in the RHS.", "description": "This figure shows the results of simulations performed to evaluate the sample complexity of the proposed Common-Points-Picking algorithm.  The left-hand side (LHS) displays results for games where the strict convexity constant (s) is 0.1/n, while the right-hand side (RHS) shows results for games with s=0 (i.e., only convex). The x-axis represents the number of players (n), and the y-axis represents the number of samples required. The plots demonstrate how the number of samples scales with the number of players under different convexity conditions. The results suggest that the algorithm's sample complexity grows sub-exponentially even when the strict convexity condition is relaxed.", "section": "Experiment"}]