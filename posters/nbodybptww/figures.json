[{"figure_path": "nBOdYBptWW/figures/figures_1_1.jpg", "caption": "Figure 1: UniTS is a unified multi-task time series model for predictive and generative tasks.", "description": "The figure is a schematic illustration of the UniTS model, highlighting its ability to handle diverse time series tasks (forecasting, imputation, anomaly detection, and classification) across various domains (weather, ECG, etc.).  It shows how UniTS processes heterogeneous time series data with varying numbers of variables and sequence lengths to provide a unified representation for different task types.", "section": "1 Introduction"}, {"figure_path": "nBOdYBptWW/figures/figures_3_1.jpg", "caption": "Figure 2: a) UNITS for forecasting; input is tokenized, and GEN tokens are un-patchified to infer the forecast horizon. b) UNITS for classification; a CLS token is used to represent class information and then compared to class tokens to get prediction class. c) Architecture of UNITS model.", "description": "This figure illustrates the UNITS model architecture and workflow for both generative (forecasting) and predictive (classification) tasks.  Panel (a) shows how the input time series is tokenized, processed by the UNITS model, and then the GEN tokens are used to reconstruct the forecast. Panel (b) shows how the input time series is tokenized, processed by the UNITS model, and then a CLS token is used to compare against class embeddings for classification.  Panel (c) provides a detailed overview of the UNITS architecture, highlighting the use of task tokens, multiple attention mechanisms, and separate GEN and CLS towers for handling different task types.", "section": "4 UNITS Model"}, {"figure_path": "nBOdYBptWW/figures/figures_8_1.jpg", "caption": "Figure 3: Direct multi-step forecasting on new forecasting lengths. UNITS achieves any new forecasting length with unified direct multi-step inference. Baseline methods use the sliding windows inference as they do not support direct multi-step inference.", "description": "This figure compares the performance of UNITS and several baseline methods on a direct multi-step forecasting task using different forecast horizons. The x-axis represents the new forecasting length added to the original trained length, and the y-axis represents the Mean Squared Error (MSE) of the prediction. The figure demonstrates that UNITS significantly outperforms all baseline methods across various forecast lengths, showcasing its ability to handle multi-step forecasting effectively.", "section": "5.3 UNITS for Direct Multi-Step Forecasting"}, {"figure_path": "nBOdYBptWW/figures/figures_21_1.jpg", "caption": "Figure 2: a) UNITS for forecasting; input is tokenized, and GEN tokens are un-patchified to infer the forecast horizon. b) UNITS for classification; a CLS token is used to represent class information and then compared to class tokens to get prediction class. c) Architecture of UNITS model.", "description": "This figure shows three parts to explain the UNITS model. The first part (a) shows the forecasting task where input time series is tokenized, and GEN tokens are used for forecasting, which is unpatchified to infer the forecast horizon. The second part (b) shows the classification task where the CLS token represents the class information and compares it to class tokens to get the prediction. The third part (c) shows the overall architecture of the UNITS model with task tokens, sample tokens, and prompt tokens.", "section": "4 UNITS Model"}, {"figure_path": "nBOdYBptWW/figures/figures_22_1.jpg", "caption": "Figure 2: a) UNITS for forecasting; input is tokenized, and GEN tokens are un-patchified to infer the forecast horizon. b) UNITS for classification; a CLS token is used to represent class information and then compared to class tokens to get prediction class. c) Architecture of UNITS model.", "description": "This figure shows three different aspects of the UniTS model. (a) illustrates the process of forecasting using tokenization and GEN tokens. (b) illustrates the classification process using CLS tokens. (c) provides a detailed architecture diagram of the UniTS model, showing its components and the flow of data.", "section": "4 UNITS Model"}, {"figure_path": "nBOdYBptWW/figures/figures_32_1.jpg", "caption": "Figure 1: UNITS is a unified multi-task time series model for predictive and generative tasks.", "description": "The figure shows the architecture of the UniTS model, a unified multi-task time series model capable of handling a broad spectrum of time series tasks including forecasting, imputation, anomaly detection, and classification.  It highlights the model's ability to integrate predictive and generative tasks into a single framework using task tokenization. The figure also illustrates the diverse dynamic patterns, sampling rates, and temporal scales of the 38 datasets used for training, spanning human activity sensors, healthcare, engineering, and finance domains. The model is designed to process heterogeneous time series data with varying numbers of variables and sequence lengths without altering the network structure. The model achieves this through task tokenization, a unified time series architecture, and support for generative and predictive tasks.", "section": "1 Introduction"}, {"figure_path": "nBOdYBptWW/figures/figures_34_1.jpg", "caption": "Figure 1: UNITS is a unified multi-task time series model for predictive and generative tasks.", "description": "The figure is a schematic illustration showing the unified multi-task time series model called UNITS. It takes as input time series data from diverse domains such as weather, ECG, and others.  The model is designed to handle both predictive and generative tasks, including forecasting, imputation, anomaly detection, and classification.  The figure highlights the model's ability to adapt to different temporal scales, sampling rates, and data domains, while employing a shared-weight architecture to unify multiple tasks within a single framework.", "section": "1 Introduction"}, {"figure_path": "nBOdYBptWW/figures/figures_35_1.jpg", "caption": "Figure 2: a) UNITS for forecasting; input is tokenized, and GEN tokens are un-patchified to infer the forecast horizon. b) UNITS for classification; a CLS token is used to represent class information and then compared to class tokens to get prediction class. c) Architecture of UNITS model.", "description": "This figure shows the UNITS model architecture and its working mechanism. (a) shows how UNITS handles forecasting tasks using GEN tokens to predict future values in the time series. (b) illustrates how UNITS performs classification tasks by comparing a CLS token representing the input with class tokens. (c) provides a comprehensive overview of the UNITS architecture, encompassing the task tokenization process, the unified time-series architecture for handling diverse data formats, and the unified GEN and CLS towers that process the tokens to generate the model's final output.", "section": "4 UNITS Model"}, {"figure_path": "nBOdYBptWW/figures/figures_35_2.jpg", "caption": "Figure 2: a) UNITS for forecasting; input is tokenized, and GEN tokens are un-patchified to infer the forecast horizon. b) UNITS for classification; a CLS token is used to represent class information and then compared to class tokens to get prediction class. c) Architecture of UNITS model.", "description": "This figure shows three parts: (a) the process of forecasting using UNITS model, (b) the process of classification using UNITS model, and (c) the overall architecture of the UNITS model.  Part (a) illustrates the tokenization of input time series, the usage of GEN tokens to represent forecast horizon, and the generation of forecast values. Part (b) shows the tokenization of the input time series, the use of CLS token to represent the class label, and the comparison with class tokens to predict the class. Part (c) presents the model architecture, including the task tokenization, unified time series architecture, and the separate GEN and CLS towers for generative and predictive tasks.", "section": "4 UNITS Model"}]