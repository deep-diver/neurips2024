[{"type": "text", "text": "INSTRUCTG2I: Synthesizing Images from Multimodal Attributed Graphs ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Bowen Jin, Ziqi Pang, Bingjun Guo, Yu-Xiong Wang, Jiaxuan You, Jiawei Han ", "page_idx": 0}, {"type": "text", "text": "Department of Computer Science University of Illinois at Urbana-Champaign bowenj4@illinois.edu https://instructg2i.github.io/ ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In this paper, we approach an overlooked yet critical task Graph2Image: generating images from multimodal attributed graphs (MMAGs). This task poses significant challenges due to the explosion in graph size, dependencies among graph entities, and the need for controllability in graph conditions. To address these challenges, we propose a graph context-conditioned diffusion model called INSTRUCTG2I. INSTRUCTG2I first exploits the graph structure and multimodal information to conduct informative neighbor sampling by combining personalized page rank and re-ranking based on vision-language features. Then, a GraphQFormer encoder adaptively encodes the graph nodes into an auxiliary set of graph prompts to guide the denoising process of diffusion. Finally, we propose graph classifier-free guidance, enabling controllable generation by varying the strength of graph guidance and multiple connected edges to a node. Extensive experiments conducted on three datasets from different domains demonstrate the effectiveness and controllability of our approach. The code is available at https://github.com/PeterGriffinJin/InstructG2I. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "This paper investigates an overlooked yet critical source of information for image generation: the pervasive graph-structured relationships of real-world entities. In contrast to the commonly adopted language conditioning in models represented by Stable Diffusion [32], graph connections have combinatorial complexity and cannot be trivially captured as a sequence. Such graph-structured relationships among the entities are expressed through \u201cMultimodal Attributed Graphs\u201d (MMAGs), where nodes are enriched with image and text information. As a concrete example (Figure 1(a)), the graph of artworks is constructed by nodes containing images (pictures) and texts (titles), as well as edges corresponding to shared genre and authorship. Such a graph uniquely depicts a piece of artwork by its thousands of peers in the graph, beyond the mere description of language. ", "page_idx": 0}, {"type": "text", "text": "To this end, we formulate and propose the Graph2Image challenge, requiring the generative models to synthesize image conditioning on both text descriptions and graph connections of a node. This task featuring the image generation on MMAGs is well-grounded in real-world applications. For instance, generating an image for a virtual artwork node in the art MMAG is akin to creating virtual artwork according to the nuanced styles of artists and genres [5] (as in Figure 1(a)). Similarly, generating an image for a product node connected to other products through co-purchase links in an e-commerce MMAG equates to recommending future products for users [24]. Without surprise, our exploiting the graph-structured information indeed improves the consistency of generated images compared to models only using texts or images as conditioning (Figure 1(b)). ", "page_idx": 0}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/56f8b87d3d32b1ef66cfe3e849e79e59b366e45f879f3c91f65a47c9e654f1bc.jpg", "img_caption": ["Figure 1: We propose a new task Graph2Image featuring image synthesis by conditioning on graph information and introduce a novel graph-conditioned diffusion model called INSTRUCTG2I to tackle this problem. (a) Graph2Image is supported by prevalent multimodal attributed graphs and is grounded in real-world applications, e.g., virtual artistry. (b) INSTRUCTG2I outperforms baseline image generation techniques, demonstrating the usefulness of graph information. (c) To accommodate realistic user queries, INSTRUCTG2I exhibits smooth controllability in utilizing text/graph information and managing the strength of multiple graph edges. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Despite the usefulness of graph information, existing methods conditioning on either text [32] or images [2, 41] are incapable of direct integration with MMAGs. Therefore, we propose a graph context-aware diffusion model INSTRUCTG2I inherited from Stable Diffusion that mitigates gaps. A most prominent challenge directly originates from the combinatorial complexity of graphs, which we term as Graph Size Explosion: inputting the entire local subgraph structure to a model, including all the images and texts, is impractical due to the exponential increase in size, especially with additional hops. Therefore, INSTRUCTG2I learns to compress the massive amounts of contexts from the graph into a set of graph conditioning tokens with fixed capacity, which functions alongside the common text conditioning tokens in Stable Diffusion. Such a compression process is enhanced with a semantic personalized pagerank-based graph sampling approach to actively select the most informative neighboring nodes based on both structural and semantic perspectives. ", "page_idx": 1}, {"type": "text", "text": "Besides the number of contexts, the graph structures in MMAGs additionally specify the proximity of entities, which is not captured in conventional text or image conditioning. This challenge of \u201cGraph Entity Dependency\u201d reflects the implicit preference of image generation: synthesizing a shirt image linked to \u201clight-colored\u201d clothing is likely to have a \u201cpastel tone\u201d (image-image dependency), and generating a picture titled \u201ca running horse\u201d should reference interconnected animal images rather than scenic ones (text-image dependency). To enable the nuanced proximity understanding on graphs, we further improve our graph conditioning tokens via a Graph-QFormer architecture learning to encode the graph information guided by texts. ", "page_idx": 1}, {"type": "text", "text": "Finally, we propose that our graph conditioning is a natural interface for controllable generation, reflecting the strength of edges in MMAGs. Take the virtual art generation (Figure 1(c)) for example: INSTRUCTG2I can flexibly offer different strengths of graph guidance and can smoothly transition between the style of Monet and Kandinsky, defined by its strength of connection with either of the two artists. Such an advantage is grounded for real-world application and is a plug-and-play test-time algorithm inspired by classifier-free guidance [18]. In sum, our contributions include: ", "page_idx": 1}, {"type": "text", "text": "\u2022 Formulation and Benchmark. We are the first to identify the usefulness of multimodal attributed graphs (MMAGs) in image synthesis and formulate the Graph2Image problem. Our formulation is supported by three benchmarks grounded in the real-world applications of art and e-commerce. \u2022 Algorithm. Methodologically, we propose INSTRUCTG2I, a context-aware diffusion model that effectively encodes graph conditional information as graph prompts for controllable image generation (as shown in Figure 1(b,c)). ", "page_idx": 1}, {"type": "text", "text": "\u2022 Experiments and Evaluation. Empirically, we conduct experiments on graphs from three different domains, demonstrating that INSTRUCTG2I consistently outperforms competitive baselines (as shown in Figure 1(b)). ", "page_idx": 2}, {"type": "text", "text": "2 Problem Formulation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "2.1 Multimodal Attributed Graphs ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Definition 1 (Multimodal Attributed Graphs (MMAGs)) A multimodal attributed graph can be defined as $\\mathcal{G}=(\\mathcal{V},\\mathcal{E},\\mathcal{P},\\mathcal{D})$ , where $\\mathcal{V},\\mathcal{E},\\mathcal{P}$ and $\\mathcal{D}$ represent the sets of nodes, edges, images, and documents, respectively. Each node $v_{i}\\in\\mathcal{V}$ is associated with some textual information $d_{v_{i}}\\in\\mathcal{D}$ and some image information $p_{v_{i}}\\in\\mathcal{P}$ . ", "page_idx": 2}, {"type": "text", "text": "For example, in an e-commerce product graph, nodes $(v\\in\\mathcal{V})$ ) represent products, edges $(e\\in\\mathcal{E})$ denote co-viewed semantic relationships, images $(p\\in\\mathcal{P})$ are product images, and documents $(d\\in\\mathcal{D})$ are product titles. Similarly, in an art graph (shown in Figure 1), nodes represent artworks, edges signify shared artists or genres, images are artwork pictures, and documents are artwork titles. ", "page_idx": 2}, {"type": "text", "text": "In this work, we focus on graphs where edges provide semantic correlations between images (nodes). For instance, in an e-commerce product graph, connected products (those frequently co-viewed by many users) are highly related. Similarly, in an art graph, linked artworks (those created by the same author or within the same genre) are likely to have similar styles. ", "page_idx": 2}, {"type": "text", "text": "2.2 Problem Definition ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this work, we explore the problem of node image generation on MMAGs. Given a node $v_{i}$ in an MMAG $\\mathcal{G}$ , our objective is to generate $p_{v_{i}}$ based on $d_{v_{i}}$ and $\\mathcal{G}$ . This problem has multiple real-world applications. For example, in e-commerce, it translates to generating the image $(p_{v_{i}})$ for a product $(v_{i})$ based on a user query $(d_{v_{i}})$ and user purchase history $(\\mathcal G)$ , which is a generative retrieval task. In the art domain, it involves generating the picture $(p_{v_{i}})$ for an artwork $(v_{i})$ based on its title $(d_{i})$ and its associated artist style or genre $(\\mathcal G)$ , which is a virtual artwork creation task. ", "page_idx": 2}, {"type": "text", "text": "Definition 2 (Node Image Generation on MMAGs) In a multimodal attributed graph $\\begin{array}{r l}{\\mathcal{G}}&{{}=}\\end{array}$ $(\\mathcal{V},\\mathcal{E},\\mathcal{P},\\mathcal{D})$ , given a node $v_{i}\\in\\mathcal{V}$ within the graph $\\mathcal{G}$ with a textual description $d_{v_{i}}$ , the goal is to synthesize $p_{v_{i}}$ , the corresponding image at $v_{i}$ , with a learned model $\\hat{p}_{v_{i}}=f(v_{i},d_{v_{i}};\\mathcal{G})$ . ", "page_idx": 2}, {"type": "text", "text": "Our evaluation emphasizes instance-level similarity, assessing how closely $\\hat{p}_{v_{i}}$ matches $p_{v_{i}}$ . We conduct evaluations on artwork graphs, e-commerce graphs, and literature graphs. More details can be found in Section 4.1. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we present our INSTRUCTG2I framework, overviewed in Figure 2. We begin by introducing graph conditions into stable diffusion models in Section 3.1. Next, we discuss semantic personalized PageRank-based sampling to select informative graph conditions in Section 3.2. Furthermore, we propose Graph-QFormer to extract dependency-aware representations for graph conditions in Section 3.3. Finally, we introduce controllable generation to balance the condition scale between text and graph guidance, as well as manage multiple graph guidances in Section 3.4. ", "page_idx": 2}, {"type": "text", "text": "3.1 Graph Context-aware Stable Diffusion ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Stable Diffusion (SD). INSTRUCTG2I is built upon Stable Diffusion (SD). SD conducts diffusion in the latent space, where an input image $x$ is first encoded from pixel space into a latent representation $\\mathbf{z}=\\operatorname{Enc}(x)$ . A decoder then transfers the latent representation $\\mathbf{z}^{\\prime}$ back to the pixel space, yielding $x^{\\prime}=\\mathsf{D e c}(\\mathbf{z}^{\\prime})$ . The diffusion model generates the latent representation $\\mathbf{z}^{\\prime}$ conditioned on a text prompt $c_{T}$ . The training objective of SD is defined as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathbb{E}_{\\mathbf{z}\\sim\\mathrm{Enc}(x),c_{T},\\epsilon\\sim\\mathcal{N}(0,1),t}\\left[\\lVert\\epsilon-\\epsilon_{\\theta}(\\mathbf{z}_{t},t,h(c_{T}))\\rVert^{2}\\right].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/d1da9473956f181865c24542a696cb75b8ac03cd37d654e92f6471b2e22ee29a.jpg", "img_caption": ["Figure 2: The overall framework of INSTRUCTG2I. (a) Given a target node with a text prompt (e.g., House in Snow) in a Multimodal Attributed Graph (MMAG) for which we want to generate an image, (b) we first perform semantic PPR-based neighbor sampling, which involves structureaware personalized PageRank and semantic-aware similarity-based reranking to sample informative neighboring nodes in the graph. (c) These neighboring nodes are then inputted into a Graph-QFormer, encoded by multiple self-attention and cross-attention layers, represented as graph tokens and used to guide the denoising process of the diffusion model, together with text prompt tokens. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "At each timestep $t$ , the denoising network $\\epsilon_{\\theta}(\\cdot)$ predicts the noise by conditioning on the current latent representation $\\mathbf{z}_{t}$ , timestep $t$ and text prompt vectors $h(c_{T})$ . To compute $\\bar{h(c_{T})}\\in\\mathbf{R}^{d\\times l_{c_{T}}}$ , where $l_{c_{T}}$ is the length of $c_{T}$ and $d$ is the hidden dimension, the text prompt $c_{T}$ is processed by the CLIP text encoder [31]: $h(c_{T})=\\mathbf{C}\\mathrm{LIP}(c_{T})$ . ", "page_idx": 3}, {"type": "text", "text": "Introducing Graph Conditions into SD. In the context of MMAGs, synthesizing the image for a node $v_{i}$ involves not only the text $d_{v_{i}}$ , but also the semantic information from the node\u2019s proximity on the graph. Therefore, we introduce an auxiliary set of graph conditioning tokens $h_{G}(c_{G})$ to the SD models (as shown in Figure 2(c)), working in parallel with the existing text conditions $h_{T}(c_{T})$ . ", "page_idx": 3}, {"type": "equation", "text": "$$\nh(c_{T},c_{G})=\\left[h_{T}(c_{T}),h_{G}(c_{G})\\right]\\in\\mathbf{R}^{d\\times(l_{c_{T}}+l_{c_{G}})},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $l_{c_{G}}$ is the length of the graph condition. The training objective then becomes: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathbb{E}_{\\mathbf{z}\\sim\\mathrm{Enc}(x),c_{T},c_{G},\\epsilon\\sim\\mathcal{N}(0,1),t}\\left[\\|\\epsilon-\\epsilon_{\\theta}(\\mathbf{z}_{t},t,h(c_{T},c_{G}))\\|^{2}\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For $h_{T}(c_{T})$ , we can directly use the CLIP text encoder as in the original SD. However, determining $c_{G}$ and $h_{G}(\\cdot)$ is more complex. We will discuss the details of $c_{G}$ and $h_{G}(\\cdot)$ in the following sections. ", "page_idx": 3}, {"type": "text", "text": "3.2 Semantic PPR-based Neighbor Sampling ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "A straightforward approach to developing $c_{G}(v_{i})$ involves using the entire local subgraph of $v_{i}$ . However, this is impractical due to the exponential growth in size with each additional hop, leading to excessively long context sequences. To address this, we leverage both graph structure and node semantics to select informative $c_{G}$ . ", "page_idx": 3}, {"type": "text", "text": "Structure Proximity: Personalized PageRank (PPR). Inspired by [10], we first adopt PPR [15] to identify related nodes from a graph structure perspective. PPR processes the graph structure to derive a ranking score $P_{i,j}$ for each node $v_{j}$ relative to node $v_{i}$ , where a higher $P_{i,j}$ indicates a greater degree of \u201csimilarity\u201d between $v_{i}$ and $v_{j}$ . Let $P\\in\\mathbf{R}^{n\\times n}$ be the PPR matrix of the graph, where each row $P_{i,}$ : represents a PPR vector toward a target node $v_{i}$ . The matrix $_{P}$ is determined by: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{P=\\beta\\hat{\\pmb{A}}P+(1-\\beta)\\pmb{I}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\beta$ is the reset probability for PPR and A\u02c6 is the normalized adjacency matrix. Once $_{P}$ is computed, we define the PPR-based graph condition $c_{G_{\\mathrm{ppr}}}$ of node $v_{i}$ as the top- $K_{\\mathrm{ppr}}$ PPR neighbors of node $v_{i}$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\nc_{G_{\\mathrm{ppr}}}(v_{i})=\\underset{c_{G_{\\mathrm{ppr}}}(v_{i})\\subset\\mathcal{V},|c_{G_{\\mathrm{ppr}}}(v_{i})|=K_{\\mathrm{ppr}}}{\\mathrm{argmax}}\\sum_{v_{j}\\in c_{G_{\\mathrm{ppr}}}(v_{i})}P_{i,j}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Semantic Proximity: Similarity-based Reranking. However, solely relying on PPR may result in a graph condition set containing images (e.g., scenery pictures) that are not semantically related to our ", "page_idx": 3}, {"type": "text", "text": "target node (e.g., a picture titled \u201crunning horse\u201d). To address this, we propose using a semantic-based similarity calculation function $\\mathrm{Sim}(d,p)$ (e.g., CLIP) to rerank $v_{j}\\in c_{G_{\\mathrm{ppr}}}(v_{i})$ based on the relatedness of $p_{v_{j}}$ to $d_{v_{i}}$ . The final graph condition $c_{G}(v_{i})$ is calculated by: ", "page_idx": 4}, {"type": "equation", "text": "$$\nc_{G}(v_{i})=\\operatorname*{argmax}_{c_{G}(v_{i})\\subset c_{G_{\\mathrm{ppr}}}(v_{i}),|c_{G}(v_{i})|=K}\\sum_{v_{j}\\in c_{G}(v_{i})}\\mathrm{Sim}(d_{v_{i}},p_{v_{j}}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "3.3 Graph Encoding with Text Conditions ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "After we derive $c_{G}(v_{i})$ from the previous step, the problem comes to how can we design $h_{G}(\\cdot)$ to extract meaningful representations from $c_{G}(v_{i})$ . Here we focus more on how to utilize the image features from $c_{G}(v_{i})$ (i.e., $\\{p_{v_{j}}|v_{j}\\in c_{G}(v_{i})\\}\\}$ since we find they are more informative for $v_{i}$ image generation compared with text features from $c_{G}(v_{i})$ (i.e., $\\{d_{v_{j}}|v_{j}\\in c_{G}(v_{i})\\})$ (shown in Section 4.3). ", "page_idx": 4}, {"type": "text", "text": "Simple Baseline: Encoding with Pretrained Image Encoders [31]. A straightforward way to obtain representations for $v_{j}\\in c_{G}(v_{i})$ is to directly apply some pretrained image encoders $g_{\\mathrm{img}}(\\cdot)$ (e.g., CLIP [31]): ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\pmb{h}_{v_{j}}=g_{\\mathrm{img}}(p_{v_{j}})\\in\\mathbf{R}^{d},\\ \\ h_{G}(c_{G}(v_{i}))=\\oplus[\\pmb{h}_{v_{j}}]_{v_{j}\\in c_{G}(v_{i})}\\in\\mathbf{R}^{d\\times l_{c_{G}}},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\circleddash$ denotes the concatenation operation. However, this simple design has two significant limitations: 1) The encoding for each $\\bar{p}_{v_{j}}\\big(v_{j}\\in c_{G}(v_{i})\\big)$ is isolated from others in $c_{G}(v_{i})$ and failed to capture the image-image graph dependency. For example, the style extraction from one picture $(p_{v_{j}})$ can benefit from the other pictures created by the same artist (in $c_{G}(v_{i}))$ . 2) The encoding for each $p_{v_{j}}$ is independent to $d_{v_{i}}$ , which fails to capture the text-image graph dependency. For example, when we are creating a picture titled \u201crunning horse\u201d $(d_{v_{i}})$ , it is desired to offer more weight on horse pictures in $c_{G}(v_{i})$ rather than scenery pictures. ", "page_idx": 4}, {"type": "text", "text": "Graph-QFormer. To address these limitations, we propose Graph-QFormer as $h_{G}(\\cdot)$ to learn representations for $c_{G}$ while considering the graph dependency information. As shown in Figure 2, Graph-QFormer consists of two Transformer [35] modules motivated by [26]: (1) a self-attention module that facilitates deep mutual information exchange between previous layer hidden states, capturing image-image dependencies and (2) a cross-attention module that weights samples in $c_{G}$ using text guidance, capturing text-image dependencies. ", "page_idx": 4}, {"type": "text", "text": "Let Hptq $\\pmb{H}_{c_{G}(v_{i})}^{(t)}\\in\\mathbf{R}^{d\\times l_{c_{G}}}$ denote the hidden states outputted by the $t$ -th Graph-QFormer layer. We use the token embeddings of $d_{v_{i}}$ as the input query embeddings to provide text guidance: ", "page_idx": 4}, {"type": "equation", "text": "$$\nH_{c_{G}(v_{i})}^{(0)}=[\\pmb{x}_{1},...,\\pmb{x}_{|d_{v_{i}}|}].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\pmb{x}_{k}$ is the $k$ -th token embedding in $d_{v_{i}}$ and $l_{c_{G}}=\\left|d_{v_{i}}\\right|$ . The multi-head self-attention layer $\\boldsymbol{(\\mathrm{{MHA}_{S A T})}}$ is calculated by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\pmb{H}_{c_{G}(v_{i})}^{\\prime(t)}=\\mathbf{M}\\mathbf{H}\\mathbf{A}_{\\mathrm{SAT}}[q=\\pmb{H}_{c_{G}(v_{i})}^{(t-1)},k=\\pmb{H}_{c_{G}(v_{i})}^{(t-1)},v=\\pmb{H}_{c_{G}(v_{i})}^{(t-1)}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\ensuremath{\\boldsymbol{q}},\\ensuremath{\\boldsymbol{k}},\\ensuremath{\\boldsymbol{v}}$ denotes query, key, and value channels in the Transformer. The output $H_{c_{G}(v_{i})}^{\\prime(t)}$ is then inputted to the multi-head cross-attention layer $\\boldsymbol{\\left(\\mathrm{MHA}_{\\mathrm{CAT}}\\right)}$ ), calculated by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\pmb{H}_{c_{G}(v_{i})}^{(t)}=\\mathbf{M}\\mathbf{H}\\mathbf{A}_{\\mathrm{CAT}}[q=\\pmb{H}_{c_{G}(v_{i})}^{\\prime(t)},k=\\pmb{Z}_{c_{G}(v_{i})},v=\\pmb{Z}_{c_{G}(v_{i})}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $Z_{c_{G}(v_{i})}=\\oplus[g_{\\mathrm{img}}(p_{v_{j}})]_{v_{j}\\in c_{G}(v_{i})}\\in\\mathbf{R}^{d\\times n}$ represents the image embeddings extracted from a fixed pretrained image encoder and $n$ is the number of embeddings. Finally we adopt $h_{G}(c_{G}(v_{i}))=$ HcpGLpqviq, where L is the number of layers in Graph-QFormer. ", "page_idx": 4}, {"type": "text", "text": "Connection between INSTRUCTG2I and GNNs. As illustrated in Figure 2, INSTRUCTG2I employs a Transformer-based architecture as the graph encoder. However, it can also be interpreted as a Graph Neural Network (GNN) model. GNN models [38] primarily use a propagation-aggregation paradigm to obtain node representations $\\mathcal N(i)$ denotes the neighbor set of $i$ ): ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathsf{t}_{i j}^{(l-1)}=\\mathrm{PROP}^{(l)}\\left(\\pmb{h}_{i}^{(l-1)},\\pmb{h}_{j}^{(l-1)}\\right),\\left(\\forall j\\in\\mathcal{N}(i)\\right);~\\pmb{h}_{i}^{(l)}=\\mathrm{AGG}^{(l)}\\left(\\pmb{h}_{i}^{(l-1)},\\{\\pmb{a}_{i j}^{(l-1)}|j\\in\\mathcal{N}(i)\\}\\right).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Similarly, in INSTRUCTG2I, Eq.(4)(5)(6) can be regarded as the propagation function $\\mathrm{PROP}^{(l)}$ , while the aggregation step $\\mathrm{AGG}^{(l)}$ corresponds to the combination of Eq.(9) and Eq.(10). ", "page_idx": 4}, {"type": "text", "text": "3.4 Controllable Generation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "The concept of classifier-free guidance, introduced by [18], enhances the performance of conditional image synthesis by modifying the noise prediction, $e_{\\theta}(\\cdot)$ , with the output from an unconditional model. This is formulated as: $\\hat{\\epsilon}_{\\theta}(\\mathbf{z}_{t},c)=\\epsilon_{\\theta}(\\mathbf{z}_{t},\\mathcal{D})+s\\cdot(\\epsilon_{\\theta}(\\mathbf{z}_{t},c)-\\epsilon_{\\theta}(\\mathbf{z}_{t},\\mathcal{D}))$ , where $s(>1)$ is the guidance scale. The intuition is that $\\epsilon_{\\theta}$ learns the gradient of the log image distribution and increasing the contribution of $\\epsilon_{\\theta}(c)-\\epsilon_{\\theta}(\\mathcal{D})$ will enlarge the convergence to the distribution conditioned on $c$ . ", "page_idx": 5}, {"type": "text", "text": "In our task, the score network $\\hat{\\epsilon}_{\\theta}(\\mathbf{z}_{t},c_{G},c_{T})$ is conditioned on both text $c_{T}\\,=\\,d_{i}$ and the graph condition $c_{G}$ . We compose the score estimates from these two conditions and introduce two guidance scales, $s_{T}$ and $s_{G}$ , to control the contribution strength of $c_{T}$ and $c_{G}$ to the generated samples respectively. Our modified score estimation function is: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\hat{\\epsilon}_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G},c_{T})=\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},\\mathcal{O})+s_{T}\\cdot(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},\\mathcal{O}))}\\\\ &{\\qquad\\qquad\\qquad+s_{G}\\cdot(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},c_{T})).}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "For cases requiring fine-grained control over multiple graph conditions (i.e., different edges), we extend the formula as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\displaystyle{\\hat{\\epsilon}}_{\\theta}({\\bf z}_{t},c_{G},c_{T})=\\epsilon_{\\theta}({\\bf z}_{t},\\mathcal{D},\\emptyset)+s_{T}\\cdot(\\epsilon_{\\theta}({\\bf z}_{t},\\mathcal{D},c_{T})-\\epsilon_{\\theta}({\\bf z}_{t},\\mathcal{D},\\emptyset))}}\\\\ {{\\displaystyle{\\qquad\\qquad+\\sum{s}_{G}^{(k)}\\cdot(\\epsilon_{\\theta}({\\bf z}_{t},c_{G}^{(k)},c_{T})-\\epsilon_{\\theta}({\\bf z}_{t},\\mathcal{D},c_{T})),}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $c_{G}^{(k)}$ is the $k$ -th graph condition. For example, to create an artwork that combines the styles of Monet and Van Gogh, the neighboring artworks by Monet and Van Gogh on the graph would be $c_{G}^{(1)}$ and $c_{G}^{(2)}$ , respectively. Further details on the derivation of our classifier-free guidance formulations can be found in Appendix A.3. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Experimental Setups ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets. We conduct experiments on three MMAGs from distinct domains: ART500K [27], Amazon [16], and Goodreads [37]. ART500K is an artwork graph with nodes representing artworks and edges indicating same-author or same-genre relationships. Each artwork node includes a title (text) and a picture (image). Amazon is a product graph where nodes represent products and edges denote co-view relationships. Each product is associated with a title (text) and a picture (image). Goodreads is a literature graph where nodes represent books and edges convey similar-book semantics. Each book node contains a title and a front cover image. Dataset statistics can be found in Appendix A.4. ", "page_idx": 5}, {"type": "text", "text": "Baselines. We compare INSTRUCTG2I with two groups of baselines: 1) Text-to-image methods: This includes Stable Diffusion 1.5 (SD-1.5) [32] and SD 1.5 fine-tuned on our datasets (SD-1.5 FT). 2) Image-to-image methods: This includes InstructPix2Pix [2] and ControlNet [41], both initialized with SD 1.5 and fine-tuned on our datasets. We use the most relevant neighbor, as selected in Section 3.2 as the input image for these baselines, allowing them to partially utilize graph information. ", "page_idx": 5}, {"type": "text", "text": "Metrics. As indicated in Section 2.2, our evaluation mainly concerns the consistency of synthesized images with the ground truth image on the node. Therefore, our evaluation adopts the CLIP [31] and DINOv2 [29] score for instance-level similarity, in addition to the conventional FID [17] metric for image generation. For the CLIP and DINOv2 scores, we utilize CLIP and DINOv2 to obtain representations for both the generated and ground truth images and then calculate their cosine similarity. For FID, we calculate the distance between the distribution of the ground truth images and the distribution of the generated images. ", "page_idx": 5}, {"type": "text", "text": "4.2 Main results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Quantitative Evaluation. The quantitative results are presented in Table 1 and Figure 3. From Table 1, we observe the following: 1) INSTRUCTG2I consistently outperforms all the baseline methods, highlighting the importance of graph information in image synthesis on MMAGs. 2) Although InstructPix2Pix and ControlNet partially consider graph context, they fail to capture the semantic signals from the graph comprehensively. In Figure 3, we plot the aver", "page_idx": 5}, {"type": "text", "text": "Table 1: Quantitative evaluation of different methods on ART500K, Amazon, and Goodreads datasets. The CLIP score denotes the image-image score. INSTRUCTG2I significantly outperforms the best baseline with $\\mathbf{p}$ -value $<0.05$ and consistently outperforms all the other common baselines in image synthesis, supporting the benefits of graph conditioning. ", "page_idx": 6}, {"type": "table", "img_path": "zWnW4zqkuM/tmp/be1922afc5541c0be26d39fbf4a34e8ea43465ad5d5c56c3f71ecda0ac344e88.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/0c72601f825317dcb625e6f44dd8a08862d892e65ae94646f8414862d6a3cf8f.jpg", "img_caption": ["Figure 4: Qualitative evaluation. Our method exhibits better consistency with the ground truth by better utilizing the graph information from neighboring nodes (\u201cSampled Neighbors\u201d in the figure). "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "age DINOv2 (x-axis, \u00d2) and FID score (y-axis, \u00d3) across the three datasets. INSTRUCTG2I outperforms most baselines on both metrics and achieves the best trade-off between them. ", "page_idx": 6}, {"type": "text", "text": "IISt ix2Pix obtains a better FID score than because it takes an in-distribution image as input, constraining the output image to stay close to the original distribution. ", "page_idx": 6}, {"type": "text", "text": "Qualitative Evaluation. We conduct a qualitative evaluation by randomly selecting some generated cases. The results are shown in Figure 4, where we provide the sampled neighbor images from the graph, text prompts, and the ground truth images. From these results, we observe that INSTRUCTG2I generates images that best fti the semantics of the text prompt and context from the graph. For instance, when generating a picture for \u201cthe crater and the clouds\u201d, the baselines either capture only the content (\u201ccrater\u201d and \u201cclouds\u201d) without the style learned from the graph (Stable Diffusion and InstructPix2Pix) or adopt a similar style but lose the desired content (ControlNet). In contrast, INSTRUCTG2I effectively learns from the neighbors on the graph and conveys the content accurately. ", "page_idx": 6}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/814addff49e7990a82dc547a4e6ae6f2e4f052a83c99657f5c00da7fb43b3f27.jpg", "img_caption": ["Figure 3: INSTRUCTG2I achieves the best trade-off between DINOv2 (\u00d2) and FID (\u00d3) scores. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "table", "img_path": "zWnW4zqkuM/tmp/143266d1538f7b7633b0a5c4caeddc065de76fcb702ab863cb9e4678df65fa18.jpg", "table_caption": ["Table 2: Ablation study on graph condition variants and Graph-QFormer. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/3e582f88eb8295fd0efa45394316ea3673a8a90b439d6c4f5d658ea9ea22ed28.jpg", "img_caption": ["Figure 5: Ablation study on semantic PPR-based neighbor sampling. The results indicate that both structural and semantic relevance proposed by our method effectively improve the image generation quality and consistency with the graph context. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Study of Graph Condition for SD Variants. In INSTRUCTG2I, we introduce graph conditions into SD by encoding the images from $c_{G}$ into graph prompts, which serve as conditions together with text prompts for SD\u2019s denoising step. In this section, we demonstrate the significance of this design by comparing it with other variants that utilize graph conditions in SD: InstructPix2Pix (IP2P) with neighbor images and SD finetuned with neighbor texts. For the first variant, we perform mean pooling on the latent representations of images in $c_{G}$ , according to the IP2P\u2019s setting, and use this as the input image representation for IP2P. This variant has the same input information as INSTRUCTG2I. For the second variant, we utilize text information from neighbors instead of images, concatenate it with the text prompt, and fine-tune the SD. The results are shown in Table 2, where INSTRUCTG2I consistently outperforms both variants. This demonstrates the advantage of leveraging image features from $c_{G}$ and the effectiveness of our model design. ", "page_idx": 7}, {"type": "text", "text": "Study of Graph-QFormer. We first demonstrate the effectiveness of Graph-QFormer by replacing it with the simple baseline mentioned in Eq.(7), denoted as \u201c- Graph-QFormer\u201d. We then compare it with graph neural network (GNN) baselines including GraphSAGE [13] and GAT [36], integrated into INSTRUCTG2I in the same manner. The results, presented in Table 2, show that INSTRUCTG2I with Graph-QFormer consistently outperforms both the ablated version and GNN baselines. This demonstrates the effectiveness of Graph-QFormer design. ", "page_idx": 7}, {"type": "text", "text": "Study of the Semantic PPR-based Neighbor Sampling. We propose a semantic PPR-based sampling method that combines structure and semantics for neighbor sampling on graphs, as detailed in Section 3.2. In this section, we demonstrate the effectiveness of this approach by conducting ablation studies that remove either or both components. The results, shown in Figure 5, indicate that our sampling methods effectively identify neighbor images that contribute most significantly to the ground truth in both semantics and style. This underscores the value of integrating both structural and semantic information in our sampling approach. ", "page_idx": 7}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/59a1cb150fa182ae65a62918217afdc05078c7ceebd83d2f2b0a0e86ca0af1f4.jpg", "img_caption": ["Figure 6: Controllable generation study. (a) The ability of INSTRUCTG2I to balance text guidance and graph guidance. (b) Study of multiple graph guidance. Generated artworks with the input text prompt \u201ca man playing piano\u201d conditioned on single or multiple graph guidance (styles of \u201cPicasso\u201d and \u201cCourbet\u201d). Please refer to Figure 1 for another example between Monet and Kandinsky. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.4 Controllable Generation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Text Guidance & Graph Guidance. In Eq.(11), we discuss the control of guidance from both text and graph conditions. To illustrate its effectiveness, we provide an example in Figure 6(a). The results show that as text guidance increases, the generated image incorporates more of the desired content. Conversely, as graph guidance increases, the generated image adopts a more desired style. This demonstrates the ability of our method to balance content and style through controlled guidance. ", "page_idx": 8}, {"type": "text", "text": "Multiple Graph Guidance: Virtual Artist. In Eq.(12), we demonstrate how multiple graph guidance can be managed for controllable image generation. We present a use case, virtual artwork creation, to showcase its effectiveness (shown in Figure 6(b)). The goal of this task is to create an image that depicts specific content (e.g., a man playing piano) in the style of one or more artists (e.g., Picasso and Courbet). This is akin to adding a new node to the graph that links to the artwork nodes created by the specified artists and generating an image for this node. The results indicate that when single graph guidance is provided, the generated artwork aligns with that artist\u2019s style. As additional graph guidance is introduced, the styles of the two artists blend together. This demonstrates that our method offers the flexibility to meet various control requirements, effectively balancing different types of graph influences. ", "page_idx": 8}, {"type": "text", "text": "4.5 Model Behavior Analysis ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Cross-attention Weight Study in Graph-QFormer. We conduct a cross-attention study for GraphQFormer to understand how different sampled neighbors on the graph are selected based on the text prompt and contribute to the final image generation. We randomly select a case with the text prompt and neighbor images and plot the cross-attention weight map shown in Figure 7. From the weight map, we can find that Graph-QFormer learns to assign higher weight to pictures 1 and 4 which are related to \u201craising\u201d and \u201cLazarus\u201d in the text prompt respectively. The results indicate that Graph-QFormer effectively learns to select the images that are most relevant to the text prompt. ", "page_idx": 8}, {"type": "text", "text": "5 Related works ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Diffusion Models. Recent advancements in diffusion models have demonstrated significant success in generative applications. Diffusion models [4, 7] generate compelling examples through a step-wise denoising process, which involves a forward process that introduces noise into data distributions and a reverse process that reconstructs the original data [19]. A notable example is the Latent Diffusion Model (LDM) [32], which reduces computational costs by applying the diffusion process in a low-resolution latent space. In the domain of diffusion models, various forms of conditioning are employed to direct the generation process, including labels [6], classifiers [8], texts [28], images [2], and scene graphs [39]. These conditions can be incorporated into diffusion models through latent concatenation [33], cross-attention [1], and gradient control [12]. However, most existing works neglect the relational information between images and cannot be directly applied to image synthesis on MMAGs. ", "page_idx": 8}, {"type": "image", "img_path": "zWnW4zqkuM/tmp/5271e5e4e10a5e156a5737e70f8547346ff3820103e553f984d3a9043b326744.jpg", "img_caption": ["Figure 7: Study of Graph-QFormer\u2019s cross-attention map. Graph-QFormer effectively learns to select the images that are most relevant to the text prompt. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Learning on Graphs. Early studies on learning on graphs primarily focus on representation learning for nodes or edges based on graph structures [3, 14]. Methods such as Deepwalk [30] and Node2vec [11] perform random walks on graphs to derive vector representation for each node. Graph neural networks (GNNs) [38, 43] are later introduced as a learnable component that incorporates both initial node features and graph structure. GNNs have been applied to various tasks, including classification [25], link prediction [42], and recommendation [21]. For instance, GraphSAGE [13] employs a propagation and aggregation paradigm for node representation learning, while GAT [36] introduces an attention mechanism into the aggregation process. Recently, research has increasingly focused on integrating text or image features with graph structures [22, 44]. For example, Patton [23] proposes pretraining language models on text-attributed graphs. However, these existing works mainly target representation learning on single-modal graphs and are not directly applicable to the image synthesis from multimodal attributed graph (MMAG) task addressed in this paper. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusions ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we identify the problem of image synthesis on multimodal attributed graphs (MMAGs). To address this challenge, we propose a graph context-conditioned diffusion model that: 1) Samples related neighbors on the graph using a semantic personalized PageRank-based method; 2) Effectively encodes graph information as graph prompts by considering their dependency with Graph-QFormer; 3) Generates images under control with graph classifier-free guidance. We conduct systematic experiments on MMAGs in the domains of art, e-commerce, and literature, demonstrating the effectiveness of our approach compared to competitive baseline methods. Extensive studies validate the design of each component in INSTRUCTG2I and highlight its controllability. Future directions include joint text and image generation on MMAGs and capturing the heterogeneous relations between image and text units on MMAGs. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by the Apple PhD Fellowship. The research also was supported in part by US DARPA INCAS Program No. HR0011-21-C0165 and BRIES Program No. HR0011-24-3-0325, National Science Foundation IIS-19-56151, the Molecule Maker Lab Institute: An AI Research Institutes program supported by NSF under Award No. 2019897, and the Institute for Geospatial Understanding through an Integrative Discovery Environment (I-GUIDE) by NSF under Award No. 2118329. Any opinions, findings, and conclusions or recommendations expressed herein are those of the authors and do not necessarily represent the views, either expressed or implied, of DARPA or the U.S. Government. The views and conclusions contained in this paper are those of the authors and should not be interpreted as representing any funding agencies. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Namhyuk Ahn, Junsoo Lee, Chunggi Lee, Kunhee Kim, Daesik Kim, Seung-Hun Nam, and Kibeom Hong. Dreamstyler: Paint by style inversion with text-to-image diffusion models. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pages 674\u2013681, 2024. 10   \n[2] Tim Brooks, Aleksander Holynski, and Alexei A Efros. Instructpix2pix: Learning to follow image editing instructions. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 18392\u201318402, 2023. 2, 6, 10   \n[3] Hongyun Cai, Vincent W Zheng, and Kevin Chen-Chuan Chang. A comprehensive survey of graph embedding: Problems, techniques, and applications. IEEE transactions on knowledge and data engineering, 30(9):1616\u20131637, 2018. 10   \n[4] Hanqun Cao, Cheng Tan, Zhangyang Gao, Yilun Xu, Guangyong Chen, Pheng-Ann Heng, and Stan Z Li. A survey on generative diffusion models. IEEE Transactions on Knowledge and Data Engineering, 2024. 9   \n[5] Eva Cetinic and James She. Understanding and creating art with ai: Review and outlook. ACM Transactions on Multimedia Computing, Communications, and Applications (TOMM), 18(2): 1\u201322, 2022. 1   \n[6] Jian Chen, Ruiyi Zhang, Tong Yu, Rohan Sharma, Zhiqiang Xu, Tong Sun, and Changyou Chen. Label-retrieval-augmented diffusion models for learning from noisy labels. Advances in Neural Information Processing Systems, 36, 2024. 10   \n[7] Florinel-Alin Croitoru, Vlad Hondru, Radu Tudor Ionescu, and Mubarak Shah. Diffusion models in vision: A survey. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2023. 9   \n[8] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780\u20138794, 2021. 10   \n[9] Rohit Gandikota, Joanna Materzynska, Jaden Fiotto-Kaufman, and David Bau. Erasing concepts from diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2426\u20132436, 2023. 14   \n[10] Johannes Gasteiger, Aleksandar Bojchevski, and Stephan G\u00fcnnemann. Predict then propagate: Graph neural networks meet personalized pagerank. arXiv preprint arXiv:1810.05997, 2018. 4   \n[11] Aditya Grover and Jure Leskovec. node2vec: Scalable feature learning for networks. In Proceedings of the 22nd ACM SIGKDD international conference on Knowledge discovery and data mining, pages 855\u2013864, 2016. 10   \n[12] Yingqing Guo, Hui Yuan, Yukang Yang, Minshuo Chen, and Mengdi Wang. Gradient guidance for diffusion models: An optimization perspective. arXiv preprint arXiv:2404.14743, 2024. 10   \n[13] Will Hamilton, Zhitao Ying, and Jure Leskovec. Inductive representation learning on large graphs. In NIPS, pages 1024\u20131034, 2017. 8, 10   \n[14] William L Hamilton, Rex Ying, and Jure Leskovec. Representation learning on graphs: Methods and applications. arXiv preprint arXiv:1709.05584, 2017. 10   \n[15] Taher H Haveliwala. Topic-sensitive pagerank. In Proceedings of the 11th international conference on World Wide Web, pages 517\u2013526, 2002. 4   \n[16] Ruining He and Julian McAuley. Ups and downs: Modeling the visual evolution of fashion trends with one-class collaborative filtering. In WWW, pages 507\u2013517, 2016. 6   \n[17] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. Advances in neural information processing systems, 30, 2017. 6   \n[18] Jonathan Ho and Tim Salimans. Classifier-free diffusion guidance. arXiv preprint arXiv:2207.12598, 2022. 2, 6   \n[19] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020. 9   \n[20] Aapo Hyv\u00e4rinen and Peter Dayan. Estimation of non-normalized statistical models by score matching. Journal of Machine Learning Research, 6(4), 2005. 14   \n[21] Bowen Jin, Chen Gao, Xiangnan He, Depeng Jin, and Yong Li. Multi-behavior recommendation with graph convolutional networks. In Proceedings of the 43rd international ACM SIGIR conference on research and development in information retrieval, pages 659\u2013668, 2020. 10   \n[22] Bowen Jin, Gang Liu, Chi Han, Meng Jiang, Heng Ji, and Jiawei Han. Large language models on graphs: A comprehensive survey. arXiv preprint arXiv:2312.02783, 2023. 10   \n[23] Bowen Jin, Wentao Zhang, Yu Zhang, Yu Meng, Xinyang Zhang, Qi Zhu, and Jiawei Han. Patton: Language model pretraining on text-rich networks. arXiv preprint arXiv:2305.12268, 2023. 10   \n[24] Wei Jin, Haitao Mao, Zheng Li, Haoming Jiang, Chen Luo, Hongzhi Wen, Haoyu Han, Hanqing Lu, Zhengyang Wang, Ruirui Li, et al. Amazon-m2: A multilingual multi-locale shopping session dataset for recommendation and text generation. Advances in Neural Information Processing Systems, 36, 2024. 1   \n[25] Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. arXiv preprint arXiv:1609.02907, 2016. 10   \n[26] Junnan Li, Dongxu Li, Silvio Savarese, and Steven Hoi. Blip-2: Bootstrapping language-image pre-training with frozen image encoders and large language models. In International conference on machine learning, pages 19730\u201319742. PMLR, 2023. 5, 16   \n[27] Hui Mao, Ming Cheung, and James She. Deepart: Learning joint representations of visual arts. In Proceedings of the 25th ACM international conference on Multimedia, pages 1183\u20131191. ACM, 2017. 6   \n[28] Alex Nichol, Prafulla Dhariwal, Aditya Ramesh, Pranav Shyam, Pamela Mishkin, Bob McGrew, Ilya Sutskever, and Mark Chen. Glide: Towards photorealistic image generation and editing with text-guided diffusion models. arXiv preprint arXiv:2112.10741, 2021. 10   \n[29] Maxime Oquab, Timoth\u00e9e Darcet, Th\u00e9o Moutakanni, Huy Vo, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel Haziza, Francisco Massa, Alaaeldin El-Nouby, et al. Dinov2: Learning robust visual features without supervision. arXiv preprint arXiv:2304.07193, 2023. 6   \n[30] Bryan Perozzi, Rami Al-Rfou, and Steven Skiena. Deepwalk: Online learning of social representations. In Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 701\u2013710, 2014. 10   \n[31] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748\u20138763. PMLR, 2021. 4, 5, 6   \n[32] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022. 1, 2, 6, 9, 14   \n[33] Shelly Sheynin, Adam Polyak, Uriel Singer, Yuval Kirstain, Amit Zohar, Oron Ashual, Devi Parikh, and Yaniv Taigman. Emu edit: Precise image editing via recognition and generation tasks. arXiv preprint arXiv:2311.10089, 2023. 10   \n[34] Anwaar Ulhaq, Naveed Akhtar, and Ganna Pogrebna. Efficient diffusion models for vision: A survey. arXiv preprint arXiv:2210.09292, 2022. 14   \n[35] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017. 5   \n[36] Petar Velickovic, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Li\u00f2, and Yoshua Bengio. Graph attention networks. In ICLR, 2018. 8, 10   \n[37] Mengting Wan, Rishabh Misra, Ndapandula Nakashole, and Julian McAuley. Fine-grained spoiler detection from large-scale review corpora. In ACL, pages 2605\u20132610, 2019. 6   \n[38] Zonghan Wu, Shirui Pan, Fengwen Chen, Guodong Long, Chengqi Zhang, and S Yu Philip. A comprehensive survey on graph neural networks. IEEE transactions on neural networks and learning systems, 32(1):4\u201324, 2020. 5, 10   \n[39] Ling Yang, Zhilin Huang, Yang Song, Shenda Hong, Guohao Li, Wentao Zhang, Bin Cui, Bernard Ghanem, and Ming-Hsuan Yang. Diffusion-based scene graph to image generation with masked contrastive pre-training. arXiv preprint arXiv:2211.11138, 2022. 10   \n[40] Hu Ye, Jun Zhang, Sibo Liu, Xiao Han, and Wei Yang. Ip-adapter: Text compatible image prompt adapter for text-to-image diffusion models. arXiv preprint arXiv:2308.06721, 2023. 16   \n[41] Lvmin Zhang, Anyi Rao, and Maneesh Agrawala. Adding conditional control to text-to-image diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 3836\u20133847, 2023. 2, 6   \n[42] Muhan Zhang and Yixin Chen. Link prediction based on graph neural networks. Advances in neural information processing systems, 31, 2018. 10   \n[43] Jie Zhou, Ganqu Cui, Shengding Hu, Zhengyan Zhang, Cheng Yang, Zhiyuan Liu, Lifeng Wang, Changcheng Li, and Maosong Sun. Graph neural networks: A review of methods and applications. AI open, 1:57\u201381, 2020. 10   \n[44] Jing Zhu, Yuhang Zhou, Shengyi Qian, Zhongmou He, Tong Zhao, Neil Shah, and Danai Koutra. Multimodal graph benchmark. arXiv preprint arXiv:2406.16321, 2024. 10   \n[45] Haomin Zhuang, Yihua Zhang, and Sijia Liu. A pilot study of query-free adversarial attack against stable diffusion. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 2384\u20132391, 2023. 14 ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Limitations ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this work, we focus on node image generation from multimodal attributed graphs, utilizing Stable Diffusion 1.5 as the base model for INSTRUCTG2I. Due to computational constraints, we leave the exploration of larger diffusion models, such as SDXL, for future work. Additionally, we model the graph as homogeneous, not accounting for heterogeneous node and edge types. Considering that different types of nodes and edges convey distinct semantics, future research could investigate how to perform Graph2Image on heterogeneous graphs. ", "page_idx": 13}, {"type": "text", "text": "A.2 Ethical Considerations ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "While stable diffusion models [32] have demonstrated advanced image generation capabilities, studies highlight several drawbacks, such as the uncontrollable generation of NSFW content [9], vulnerability to adversarial attacks [45], and being computationally intensive and time-consuming [34]. In INSTRUCTG2I, we address these challenges by introducing graph conditions into the image generation process. However, since INSTRUCTG2I employs stable diffusion as the backbone model, it remains susceptible to these limitations. ", "page_idx": 13}, {"type": "text", "text": "A.3 Classifier-free Guidance ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In Section 3.4, we discuss controllable generation to balance text and graph guidances $\\mathit{\\Pi}_{c T}$ and $c_{G}$ ) as well as managing multiple graph guidances $(c_{G}^{(k)})$ . We introduce $s_{T}$ and $s_{G}$ to control the strength of text conditions and graph conditions and have the modified score estimation shown as follows (copied from Eq.(11)): ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\hat{\\epsilon}_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G},c_{T})=\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},\\mathcal{O})+s_{T}\\cdot(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},\\mathcal{O}))}\\\\ &{\\qquad\\qquad\\qquad+s_{G}\\cdot(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{O},c_{T})).}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "In this section, we will provide mathematical derivation on how these modified score estimations are developed. Noted that INSTRUCTG2I learns $P(\\mathbf{z}|c_{G},c_{T})$ , the distribution of image latents ${\\bf z}$ conditioned on text information $c_{T}$ and graph information $c_{G}$ , which can be expressed as: ", "page_idx": 13}, {"type": "equation", "text": "$$\nP(\\mathbf{z}|c_{G},c_{T})=\\frac{P(\\mathbf{z},c_{G},c_{T})}{P(c_{G},c_{T})}=\\frac{P(c_{G}|c_{T},\\mathbf{z})P(c_{T}|\\mathbf{z})P(\\mathbf{z})}{P(c_{G},c_{T})}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "INSTRUCTG2I learns and estimates the score [20] of the data distribution, which can also be interpreted as the gradient of the log distribution probability. By taking a log on both sides of Eq.(13), we can attain the following equation: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\log(P(\\mathbf{z}|c_{G},c_{T}))=\\log(P(c_{G}|c_{T},\\mathbf{z}))+\\log(P(c_{T}|\\mathbf{z}))+\\log(P(\\mathbf{z}))-\\log(P(c_{G},c_{T})).\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "After calculating the derivation on both sides of Eq.(14), we can obtain: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\frac{\\hat{\\sigma}\\mathrm{log}(P(\\mathbf{z}|c_{G},c_{T}))}{\\hat{\\sigma}\\mathbf{z}}=\\frac{\\hat{\\sigma}\\mathrm{log}(P(c_{G}|c_{T},\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}+\\frac{\\hat{\\sigma}\\mathrm{log}(P(c_{T}|\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}+\\frac{\\hat{\\sigma}\\mathrm{log}(P(\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "This corresponds to our classifier-free guidance equation shown in Eq.(11), where $s_{T}$ controls how the data distribution shifts toward the zone where $P(c_{T}|\\mathbf{z})$ assigns a high likelihood to $c_{T}$ and $s_{G}$ determines how the data distribution leans toward the region where $\\bar{P}(c_{G}|c_{T},\\mathbf{z})$ assigns a high likelihood to $c_{G}$ . Although there are other ways to derive the modified score estimation function (e.g., switching $c_{T}$ and $s_{G}$ or making it symmetric), we empirically find that our derivation contributes to both advanced performance (since $P(c_{T}|\\mathbf{z})$ is well learned in the base model) and high efficiency (since the denoising operation only needs to be conducted three times rather than four times compared with symmetric setting). ", "page_idx": 13}, {"type": "text", "text": "If given multiple graph conditions, we utilize $s_{G}^{(k)}$ to control the strength for each of them and have the derived score estimation function as follows (copied from Eq.(12)): ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\hat{\\epsilon}_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G},c_{T})=\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{D},\\mathcal{D})+s_{T}\\cdot\\big(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{D},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{D},\\mathcal{D})\\big)}\\\\ &{\\qquad\\qquad\\qquad+\\displaystyle\\sum s_{G}^{(k)}\\cdot\\big(\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},c_{G}^{(k)},c_{T})-\\epsilon_{\\boldsymbol{\\theta}}(\\mathbf{z}_{t},\\mathcal{D},c_{T})\\big).}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "table", "img_path": "zWnW4zqkuM/tmp/396941c9c7ddf4f0c8dff5e66838380bb942f5fd2efc701110246a01e39f98ce.jpg", "table_caption": ["Table 3: Dataset Statistics "], "table_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "zWnW4zqkuM/tmp/e2c573a612e11b1b192c32f208f7e0c86b00e22ebab93e213c80e112e0b2910c.jpg", "table_caption": ["Table 4: Hyper-parameter configuration for model training. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "If multiple graph conditions are given, Eq.(13) then becomes: ", "page_idx": 14}, {"type": "equation", "text": "$$\nP(\\mathbf{z}|c_{G}^{(1)},...,c_{G}^{(M)},c_{T})=\\frac{P(\\mathbf{z},c_{G}^{(1)},...,c_{G}^{(M)},c_{T})}{P(c_{G}^{(1)},...,c_{G}^{(M)},c_{T})}=\\frac{P(c_{G}^{(1)},...,c_{G}^{(M)}|c_{T},\\mathbf{z})P(c_{T}|\\mathbf{z})P(\\mathbf{z})}{P(c_{G}^{(1)},...,c_{G}^{(M)},c_{T})},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $M$ is the total number of graph conditions. ", "page_idx": 14}, {"type": "text", "text": "Assume $c_{G}^{(k)}$ are independent from each other, then we can attain: ", "page_idx": 14}, {"type": "equation", "text": "$$\nP(\\mathbf{z}|c_{G}^{(1)},...,c_{G}^{(M)},c_{T})=\\frac{\\prod_{k}P(c_{G}^{(k)}|c_{T},\\mathbf{z})P(c_{T}|\\mathbf{z})P(\\mathbf{z})}{P(c_{G}^{(1)},...,c_{G}^{(M)},c_{T})}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Similar to Eq.(15), we can obtain: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\frac{\\hat{\\sigma}\\mathrm{log}(P(\\mathbf{z}|c_{G}^{(1)},\\ldots,c_{G}^{(M)},c_{T}))}{\\hat{\\sigma}\\mathbf{z}}=\\sum_{k}\\frac{\\hat{\\sigma}\\mathrm{log}(P(c_{G}^{(k)}|c_{T},\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}+\\frac{\\hat{\\sigma}\\mathrm{log}(P(c_{T}|\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}+\\frac{\\hat{\\sigma}\\mathrm{log}(P(\\mathbf{z}))}{\\hat{\\sigma}\\mathbf{z}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "This corresponds to the classifier-free guidance equation shown in Eq.(12), where spGkq determines how the data distribution leans toward the region where $P(c_{G}^{(k)}|c_{T},\\mathbf{z})$ assigns a high likelihood to the graph condition $c_{G}^{(k)}$ ", "page_idx": 14}, {"type": "text", "text": "A.4 Datasets ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "The statistics of the three datasets can be found in Table 3. Since Amazon and Goodreads both have multiple domains, we select one from each of them considering the graph size: Beauty domain from Amazon and Mystery domain from Goodreads. ", "page_idx": 14}, {"type": "text", "text": "A.5 Experimental Settings ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We randomly mask 1,000 nodes as testing nodes from the graph for all three datasets and serve the remaining nodes and edges as the training graph. ", "page_idx": 14}, {"type": "text", "text": "In implementing INSTRUCTG2I, we initialize the text encoder and U-Net with the pretrained parameters from Stable Diffusion 1.5 1. We use the pretrained CLIP image encoder as our fixed image encoder to extract features from raw images. For Graph-QFormer, we empirically find that initializing it with the CLIP text encoder parameters can improve performance compared with random initialization. ", "page_idx": 14}, {"type": "text", "text": "We use AdamW as the optimizer to train INSTRUCTG2I. The training of all methods including INSTRUCTG2I and baselines on ART500K and Amazon are conducted on two A6000 GPUs, while that on Goodreads is performed on four A40 GPUs. Each image is encoded as four feature vectors with the fixed image encoder following [40] and we insert one cross-encoder layer after every two self-attention layers in Graph-QFormer following [26]. The detailed hyperparameters are in Table 4. ", "page_idx": 15}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The contributions and scope is reflected in the abstract and introduction. Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 16}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: We discuss the limitations of this work in the conclusion section and Appendix section A.1. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 16}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The theoretical derivation of controllable generation is shown in Appendix A.3. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 17}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We provide the code at https://github.com/PeterGriffinJin/ InstructG2I. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 17}, {"type": "text", "text": "5. Open access to data and code ", "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Justification: We provide the code at https://github.com/PeterGriffinJin/ InstructG2I. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 18}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Detailed experimental settings are discussed in Appendix A.5. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 18}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We provide the p-value in section 4.2. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The compute resources information is given in Appendix A.5. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 19}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: We strictly follow the code of ethics. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 19}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: This is discussed in Appendix A.2. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper poses no such risks ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 20}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: The licenses for the assets are discussed in Appendix A.4. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 20}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 21}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The license is provided together with the code in https://github.com/ PeterGriffinJin/InstructG2I. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 21}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 21}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 21}]