[{"type": "text", "text": "Safe and Sparse Newton Method for Entropic-Regularized Optimal Transport ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zihao Tang School of Statistics and Management Shanghai University of Finance and Economics tangzihao@stu.sufe.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Yixuan Qiu\u2217 School of Statistics and Management Shanghai University of Finance and Economics qiuyixuan@sufe.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Computational optimal transport (OT) has received massive interests in the machine learning community, and great advances have been gained in the direction of entropic-regularized OT. The Sinkhorn algorithm, as well as its many improved versions, has become the de facto solution to large-scale OT problems. However, most of the existing methods behave like first-order methods, which typically require a large number of iterations to converge. More recently, Newton-type methods using sparsified Hessian matrices have demonstrated promising results on OT computation, but there still remain a lot of unresolved open questions. In this article, we make major new progresses towards this direction: first, we propose a novel Hessian sparsification scheme that promises a strict control of the approximation error; second, based on this sparsification scheme, we develop a safe Newton-type method that is guaranteed to avoid singularity in computing the search directions; third, the developed algorithm has a clear implementation for practical use, avoiding most hyperparameter tuning; and remarkably, we provide rigorous global and local convergence analysis of the proposed algorithm, which is lacking in the prior literature. Various numerical experiments are conducted to demonstrate the effectiveness of the proposed algorithm in solving large-scale OT problems. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In recent years, optimal transport (OT, [35]) has received massive attentions from the deep learning community, and has become a fundamental modeling tool in modern statistical machine learning [34, 22]. One major challenge of applying OT to real-life problems, the computation of large-scale OT, has also gained many progresses in the direction of approximate OT methods, especially the entropic-regularized OT [6]. ", "page_idx": 0}, {"type": "text", "text": "Consider two discrete probability measures $\\textstyle\\mu\\,=\\,\\sum_{i=1}^{n}a_{i}\\delta_{x_{i}}$ and $\\begin{array}{r}{\\nu\\,=\\,\\sum_{j=1}^{m}b_{j}\\delta_{y_{j}}}\\end{array}$ , where $a=$ $(a_{1},\\ldots,a_{n})^{T}$ and $\\boldsymbol{b}=(b_{1},\\dots,b_{m})^{T}$ are two vectors satisfying $\\begin{array}{r}{\\sum_{i=1}^{n}a_{i}=\\sum_{j=1}^{m}b_{j}=1,}\\end{array}$ $a_{i}>0$ $b_{j}>0$ , $i=1,\\hdots,n$ , $j=1,\\dots,m$ , $\\{x_{i}\\}_{i=1}^{n}$ and $\\{y_{j}\\}_{j=1}^{m}$ are two sets of data points, and $\\delta_{x}$ is the Dirac measure at position $x$ . Without loss of generality we assume that $n\\geq m$ , as their roles can be exchanged. Let $M=(M_{i j})\\in\\mathbb{R}^{n\\times m}$ be a cost matrix, whose entry $M_{i j}$ typically represents the distance between data points $x_{i}$ and $y_{j}$ . Also define $\\Pi(a,b)=\\{T\\in\\mathbb{R}^{n\\times m}:T\\mathbf{1}_{m}=a,T^{T}\\mathbf{1}_{n}=$ $b,T\\geq0\\}$ , where the inequality sign applies elementwisely. Then OT between the two measures $\\mu$ and $\\nu$ can be characterized by the following linear programming problem, ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{P\\in\\Pi(a,b)}\\langle P,M\\rangle,\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\langle A,B\\rangle=\\operatorname{tr}(A^{T}B)$ . Assuming $n=m$ , the computational complexity of solving (1) using standard linear programming solvers is typically at the order of $O(n^{3}\\mathbf{\\dot{log}}(\\dot{n_{}}))$ [28], which can be difficult even for moderate $n$ and $m$ . One approach to approximating the solution is to add an entropic penalty term to the objective function, leading to the entropic-regularized OT problem [6]: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{T\\in\\Pi(a,b)}\\,\\langle T,M\\rangle-\\eta h(T),\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\begin{array}{r}{h(T)\\,=\\,\\sum_{i=1}^{n}\\sum_{j=1}^{m}T_{i j}(1\\,-\\,\\log T_{i j})}\\end{array}$ is the entropy term, and $\\eta\\,>\\,0$ is a regularization parameter. The objective function in (2) is $\\eta$ -strongly convex on $\\Pi(a,b)$ , so (2) has a unique global solution, denoted as $T^{*}$ . The matrix $T^{*}$ is often referred to as the Sinkhorn transport plan. Problem (2) can be solved by the celebrated Sinkhorn algorithm [37, 32], which is based on efficient matrix-vector multiplication operations. Due to its computational advantage, the Sinkhorn algorithm has become the de facto solution to large-scale OT problems for a long time. ", "page_idx": 1}, {"type": "text", "text": "However, from a practical point of view, the Sinkhorn algorithm typically demonstrates a sub-linear convergence speed, thus requiring a large number of iterations for a moderately high precision. More recently, second-order methods, such as the Newton method, have attracted a growing number of researchers to rethink the solution to (2) [3, 33]. It has been shown that (2) has a dual problem (Proposition 4.4 of [29]): ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\alpha,\\beta}\\,\\mathcal{L}(\\alpha,\\beta):=\\operatorname*{max}_{\\alpha,\\beta}\\,\\alpha^{T}a+\\beta^{T}b-\\eta\\sum_{i=1}^{n}\\sum_{j=1}^{m}e^{\\eta^{-1}(\\alpha_{i}+\\beta_{j}-M_{i j})},\\quad\\alpha\\in\\mathbb{R}^{n},\\beta\\in\\mathbb{R}^{m}.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Let $\\alpha^{*}\\,=\\,(\\alpha_{1}^{*},\\ldots,\\alpha_{n}^{*})^{T}$ and $\\beta^{*}\\,=\\,(\\beta_{1}^{*},\\ldots,\\beta_{m}^{*})^{T}$ be one optimal solution to (3), and then the Sinkhorn transport plan $T^{*}$ can be recovered as $T^{*}\\;=\\;\\tau(\\alpha^{*},\\beta^{*})$ , where for two vectors $\\alpha=$ $(\\alpha_{1},\\ldots,\\alpha_{n})^{T}$ and $\\dot{\\beta}=(\\beta_{1},\\dots,\\beta_{m})^{T}$ , $\\tau(\\alpha,\\beta)$ is a matrix with entries ", "page_idx": 1}, {"type": "equation", "text": "$$\n[\\tau(\\alpha,\\beta)]_{i j}=\\exp\\left\\{\\eta^{-1}(\\alpha_{i}+\\beta_{j}-M_{i j})\\right\\}.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Remarkably, (3) is equivalent to a smooth and unconstrained convex optimization problem, so it can be solved using first-order methods such as gradient descent, or second-order methods including the Newton method. It is well known that under some smoothness assumptions on the objective function, the Newton method has a fast quadratic local convergence rate, and hence it typically requires much fewer iterations than the Sinkhorn algorithm. However, each iteration in the Newton method involves solving a dense linear system, resulting in a per-iteration cost of $O(n^{3})$ , which is nearly of the same order as that of an unregularized OT problem. To this end, [33] proposes the Sinkhorn-Newton-Sparse (SNS) algorithm, which approximates the Hessian matrix of (3) by a sparse one, so that each iteration roughly has a computational cost of $O(n^{2})$ , the same order as the Sinkhorn algorithm. ", "page_idx": 1}, {"type": "text", "text": "The SNS algorithm demonstrates promising results for solving the entropic-regularized OT, yet there remain a number of open questions. First, the SNS algorithm relies on initial Sinkhorn iterations to achieve a moderately small optimality gap, but in practice, the cost for this warm initialization also needs to be taken into account. Second, though SNS advocates using the conjugate gradient (CG) method to solve the sparse linear systems, there is no strong guarantee on the invertibility of the sparsified Hessian matrix. Third, [33] conjectures that SNS has a super-linear local convergence rate, but it is not yet proven by theoretical analysis. ", "page_idx": 1}, {"type": "text", "text": "In this article, we make major progresses on the second-order method for entropic-regularized OT by resolving the three challenges above. First, we carefully design a new sparsification algorithm that has a well-controlled approximation error, and then propose a safe Newton-type algorithm, in the sense that the linear systems for computing the search directions are always positive definite. This property addresses the invertibility issues of existing sparsified Newton methods, and is crucial for practical implementation. We also show that the proposed algorithm has a global convergence guarantee, so no initial Sinkhorn iterations are needed. Most importantly, we provide solid theoretical analysis of the proposed method, and show that it achieves a quadratic local convergence rate similar to the vanilla Newton method. ", "page_idx": 1}, {"type": "text", "text": "1. We propose a novel Hessian sparsification scheme that promises a strict control of the approximation error.   \n2. Based on this sparsification scheme, we prove that the sparsified Hessian matrix is always positive definite regardless of the sparsification parameter. This property then leads to a safe Newton-type method that is guaranteed to avoid singularity in computing the search directions.   \n3. The developed algorithm has a clear implementation for practical use, avoiding most hyperparameter tuning. An efficient implementation is included in the RegOT Python package2.   \n4. We provide rigorous global and local convergence analysis of the proposed algorithm, which is lacking in prior literature. ", "page_idx": 2}, {"type": "text", "text": "2 Background and Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Notation Throughout this article, we use $f(x),g(x)$ , and $H(x)$ to represent the objective function, gradient, and Hessian matrix at point $x$ , respectively. For a matrix $A$ , let $A_{i}$ \u00b7 be the vector of the $i$ -th row of $A$ , and $A._{j}$ be the vector of the $j$ -th column of $A$ . For a vector $v\\,=\\,(v_{1},\\ldots,v_{n})^{T}$ , let $\\tilde{v}$ denote the vector $(v_{1},\\ldots,v_{n-1})^{T}$ , and for a matrix $A=\\left(A_{\\cdot1},\\dots,A_{\\cdot n}\\right)$ , let $\\tilde{A}$ represent the matrix $(A.1,\\cdot\\cdot\\cdot,A._{,n-1})$ . The symbol $\\|\\cdot\\|$ stands for the Euclidean norm for a vector argument, and represents the operator norm for matrices. The $\\ell_{1}$ -norm and infinity norm are denote by $\\|\\cdot\\|_{1}$ and $\\|\\cdot\\|_{\\infty}$ , respectively, applying to both vectors and matrices. ", "page_idx": 2}, {"type": "text", "text": "The main objective As has been explained in Section 1, the key to the computation of entropicregularized OT is to solve its smooth dual problem (3), which is equivalent to the convex optimization problem $\\textstyle\\operatorname*{min}_{\\alpha,\\beta}-{\\mathcal{L}}(\\alpha,\\beta)$ . However, it is worth noting that the variables $(\\alpha,\\beta)$ have one redundant degree of freedom: if $(\\alpha^{*},\\beta^{*})$ is one solution to (3), then so is $(\\alpha^{*}+c{\\bf1}_{n},\\beta^{*}-c{\\bf1}_{m})$ for any $c$ Therefore, to ensure identifiability, we globally set $\\beta_{m}\\,=\\,0$ without loss of generality. In what follows, we use the vector $x=(\\alpha^{\\stackrel{.}{T}},\\tilde{\\beta}^{T})^{\\stackrel{.}{T}}\\in\\mathbb R^{\\dot{n}+m-1}$ to collect all free dual variables. Clearly, we always have $\\beta=(\\widetilde{\\beta}^{T},\\beta_{m})^{T}=(\\widetilde{\\beta}^{T},0)^{\\dot{T}}$ , so $\\tilde{\\beta}$ and $\\beta$ will be used interchangeably when we consider functions of $\\beta$ . Then the main target of this article is to efficiently solve the optimization problem ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{x\\in{\\mathbb R}^{n+m-1}}f(x):=-{\\mathcal{L}}(\\alpha,\\beta)=\\eta\\mathbf{1}_{n}^{T}{\\boldsymbol{\\tau}}(\\alpha,\\beta)\\mathbf{1}_{m}-{\\boldsymbol{\\alpha}}^{T}{\\boldsymbol{a}}-\\beta^{T}b.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "It is known that $f(x)$ is a strictly convex function, so if (4) has a solution, then it is unique. It has also been proven in the existing literature that the gradient and Hessian matrix of $f(x)$ have the following closed-form expressions (see for example [20]): ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g(x)=-\\left[\\nabla_{\\alpha}\\mathcal{L}(\\alpha,\\beta)\\right]=\\left[\\mathcal{T}\\mathbf{1}_{m}-\\alpha\\right],\\qquad T=\\tau(\\alpha,\\beta),}\\\\ &{H(x)=-\\left[\\nabla_{\\beta}\\mathcal{L}(\\alpha,\\beta)\\right]=\\left[\\bar{\\mathcal{T}}^{T}\\mathbf{1}_{n}-\\tilde{b}\\right],\\qquad T=\\tau(\\alpha,\\beta),}\\\\ &{H(x)=-\\left[\\left[\\nabla_{\\beta}\\left(\\nabla_{\\alpha}\\mathcal{L}(\\alpha,\\beta)\\right)\\right]^{T}\\qquad\\nabla_{\\tilde{\\beta}}\\left(\\nabla_{\\alpha}\\mathcal{L}(\\alpha,\\beta)\\right)\\right]=\\eta^{-1}\\left[\\mathbf{diag}(T\\mathbf{1}_{m})\\quad\\qquad\\tilde{T}\\qquad\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Computational OT There are a huge number of methods developed to solve (2) and (4). The Sinkhorn algorithm [37, 32, 6] can be interpreted as applying the block coordinate descent (BCD), also known as the alternating minimization (AM) method, to (4). Along this direction, many extensions of the Sinkhorn algorithm have been proposed. For example, [13] develops an accelerated version of AM, and a greedy variant of the Sinkhorn algorithm, named Greenkhorn, is developed in [1]. Accelerated first-order methods, such as the adaptive primal-dual accelerated gradient descent (APDAGD, [10]) and adaptive primal-dual accelerated mirror descent (APDAMD, [18]), have been proposed to solve the constrained problem (2). Moreover, since the dual problem (4) is smooth, various quasi-Newton methods, such as the limited-memory Broyden\u2013Fletcher\u2013Goldfarb\u2013Shanno (L-BFGS) method [19], have also been used [7]. Second-order methods are less common in the literature to solve (4), mainly due to the high cost of solving the linear systems, and [33] proposes a practical sparsified Newton method to approximate the true Hessian by a sparse matrix. ", "page_idx": 2}, {"type": "text", "text": "Newton-type methods The Newton method is a classical second-order optimization algorithm that has been extensively studied. Assuming $f$ is twice continuously differentiable, the Newton method generates a sequence of iterates $\\{x_{k}\\}$ using the updating formula $x_{k+1}=x_{k}-[H(x_{k})]^{-1}g(x_{k})$ . However, computing the linear system $[H(\\Bar{x_{k}})]^{-1}\\Bar{g(x_{k})}$ with a dense Hessian matrix generally costs $O(n^{3})$ of computation, so the sparsification of $H(x_{k})$ with a solid convergence guarantee is the main focus of this article. The Newton method also has many extensions, for example the regularized Newton method to solve problems with non-isolated solutions [17], and the inexact Newton method [8] that allows inexact solutions to the linear system $[H(x_{k})]^{-1}g(x_{k})$ . Our proposed method use a combination of these ideas to reduce the computational cost of the classical Newton method. ", "page_idx": 3}, {"type": "text", "text": "OT in machine learning OT is a blooming research topic in modern machine learning research. As a powerful tool to characterize the transformation of statistical distributions, OT has wide applications in deep generative models [2, 11, 14], domain adaptation and transfer learning [5, 4], and fairness in machine learning [12, 24, 31], among many others. Readers are referred to review articles such as [34, 22] for a summary of machine learning tasks and methods that utilize OT. ", "page_idx": 3}, {"type": "text", "text": "3 The Proposed Algorithm ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To complement existing second-order methods for entropic-regularized OT, in this article we propose the SSNS algorithm, short for safe and sparse Newton method for Sinkhorn-type OT. It has two central components: a new scheme to sparsify the Hessian matrix, and a Newton-type algorithm to update iterates. ", "page_idx": 3}, {"type": "text", "text": "3.1 Sparsifying the Hessian matrix ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Ideally, the sparsified Hessian matrix, denoted by $H_{\\delta}(x)$ , should meet two criteria: first, it should be close to the true $H(x)$ with a tunable approximation error; second, it needs to preserve the positive definiteness of the original Hessian matrix. The first point is to ensure that $\\bar{H}_{\\delta}(x)$ does not lose too much information of the true $H(x)$ . The second point is especially important in implementing the Newton method, since a linear system $[H_{\\delta}(x)]d=-g(x)$ needs to be solved to compute the search direction $d$ , and one needs to make sure that $H_{\\delta}(x)$ is invertible. These two points are briefly mentioned in [33] as an implementation practice, but without a strong theoretical guarantee. ", "page_idx": 3}, {"type": "text", "text": "To this end, we introduce a new adaptive method to sparsify $H(x)$ , which takes the two points above as first principles in both theoretical analysis and practical implementation. To describe the whole algorithm, first define an operator ${\\mathsf{s e l e c t\\_s m a l l}}(v,\\delta)$ , which takes a vector $v\\,=\\,(v_{1},\\ldots,v_{n})^{T}$ and a scalar $\\delta>0$ as inputs, and outputs a mask vector $\\phi=(\\phi_{1},...,\\phi_{n})^{T}$ in the following way. Suppose that $v_{\\pi(1)}\\leq v_{\\pi(2)}\\leq\\cdots\\leq v_{\\pi(n)}$ are the sorted values of $v$ , where $\\pi(s)$ is the original index of the $s$ -th smallest element in $v$ . We also define $\\pi^{-1}(\\cdot)$ to be the inverse of $\\pi(\\cdot)$ , i.e., $\\pi^{-1}(i)$ is the integer such that $\\pi(\\pi^{-1}(i))=i$ . Let $S$ be the largest integer such that $\\begin{array}{r}{\\sum_{s=1}^{S}v_{\\pi(s)}\\leq\\delta.}\\end{array}$ . Then we set $\\phi_{i}=1$ if $\\pi^{-1}(i)\\leq S$ , and $\\phi_{i}=0$ otherwise. For example, if $\\boldsymbol{v}=(2,1,3,5,2)^{T}$ and $\\delta=6$ , then we have $\\phi=(1,1,0,0,1)^{T}$ , since $1+2+2\\leq\\delta$ but $1+2+2+3>\\delta$ . ", "page_idx": 3}, {"type": "text", "text": "Next, define an operator $\\mathtt{a p p l y\\_m a s k}(v,\\phi)$ , which inputs a vector $\\boldsymbol{v}=(v_{1},\\ldots,v_{n})^{T}$ and a mask $\\phi=(\\phi_{1},...\\,,\\phi_{n})^{T}$ , and outputs a vector $\\boldsymbol{u}=(u_{1},\\ldots,\\bar{u}_{n})^{T}$ with $u_{i}=\\phi_{i}\\!\\cdot\\!v_{i}$ . For the example above, we have apply_ $\\mathtt{m a s k}(v,\\phi)=(2,1,0,0,2)^{T}$ . Then given the current dual variables $x=(\\alpha^{T},\\tilde{\\beta}^{T})^{T}$ , Algorithm 1 outputs a sparse matrix $H_{\\delta}$ as an approximation to the true Hessian matrix $H(x)$ . ", "page_idx": 3}, {"type": "text", "text": "It is worth noting that in the construction of $H_{\\delta}$ , the diagonal elements $\\mathbf{diag}(T\\mathbf{1}_{m})$ and $\\mathbf{diag}(\\tilde{T}^{T}\\mathbf{1}_{n})$ use the original $T$ matrix, whereas the off-diagonal elements are the sparsified $T_{\\delta}$ matrix, with the last column removed. In this way, Theorem 2 shows that $H_{\\delta}$ indeed has a well-controlled approximation error as requested by our first criterion. ", "page_idx": 3}, {"type": "text", "text": "Theorem 1 (Approximation error of sparsification). Let $H_{\\delta}$ be output by Algorithm $^{\\,l}$ with a given vector $x$ , and define $D=H(x)-H_{\\delta}$ . Then for any $\\delta\\geq0$ , we have $D\\geq0$ , where the inequality sign holds elementwisely, and for each $i,j=1,2,\\dots,n+m-1,$ , ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\|D_{i\\cdot}\\|_{1}\\leq\\eta^{-1}\\delta,\\quad\\|D_{\\cdot j}\\|_{1}\\leq\\eta^{-1}\\delta.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Moreover, $\\lVert D\\rVert\\leq\\eta^{-1}\\delta$ . ", "page_idx": 3}, {"type": "text", "text": "Algorithm 1 Sparsifying the Hessian matrix. ", "page_idx": 4}, {"type": "text", "text": "Input: Dual variable vector $x=(\\alpha^{T},\\tilde{\\beta}^{T})^{T}$ , threshold parameter $\\delta\\geq0$   \nOutput: Sparsified Hessian matrix $H_{\\delta}$   \n1: Initialize a zero matrix $\\Delta\\in\\mathbb{R}^{n\\times m}$ and compute $T=\\tau(\\alpha,\\beta)$   \n2: for $j=1,2,\\dots,m-1$ do   \n3: $\\phi\\leftarrow\\mathtt{s e l e c t\\_s m a l l}(T_{\\cdot j},\\delta)$ , \u2206\u00b7j \u2190apply_mask(T\u00b7j, \u03d5)   \n4: $\\begin{array}{r l}&{\\mathbf{\\Delta}_{\\mathbf{f}}\\leftarrow\\mathbf{se}_{\\mathbf{\\Delta}^{\\perp}\\mathbf{\\Xi}^{\\mathrm{c}}\\mathbf{\\Xi}^{\\mathrm{smat}}-\\mathbf{\\Xi}^{\\mathrm{smat}\\bot}(\\mathbf{\\Delta}^{\\perp}\\cdot\\mathbf{\\boldsymbol{j}},\\mathbf{\\Xi}^{0})},\\ \\ \\ \\Delta\\cdot\\mathbf{j}\\leftarrow\\mathbf{app}\\mathbf{\\Xi}^{\\mathrm{Ly}\\bot}\\mathbf{\\Xi}_{-\\mathbf{\\Xi}^{\\mathrm{mask}}(\\mathbf{\\Lambda}^{\\perp}\\cdot\\mathbf{\\boldsymbol{j}},\\mathbf{\\Xi}^{\\psi})}}\\\\ &{\\mathbf{f}\\rightarrow\\mathbf{\\Delta},2,\\ldots,n\\ \\mathbf{\\Delta}\\mathbf{do}}\\\\ &{\\ T_{\\delta}\\leftarrow\\mathbf{se}1\\mathbf{ect}\\mathbf{\\Xi}\\mathbf{smal}1(\\Delta_{i},\\delta),\\ \\ \\ \\Delta_{i}\\leftarrow\\mathbf{app}{\\mathrm{1y}}_{-\\mathbf{\\Xi}^{\\mathrm{mask}}}(\\Delta_{i},\\phi)}\\\\ &{T_{\\delta}\\leftarrow T-\\Delta}\\\\ &{H_{\\delta}\\leftarrow\\eta^{-1}\\left[\\mathbf{diag}(T\\mathbf{1}_{m})\\phantom{\\frac{\\tilde{T}^{T}}{\\tilde{T}^{T}}}\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\tilde{T}_{\\delta}\\right.}\\end{array}$   \n5:   \n6:   \n7: ", "page_idx": 4}, {"type": "text", "text": "Theorem 1 shows that all the row-wise and column-wise $\\ell_{1}$ -norms of the residual matrix $D$ is bounded by the pre-specified threshold $\\delta$ , up to a constant multiplier $\\eta^{-1}$ . More importantly, the overall operator norm of $D$ also has the same upper bound, and this property plays a key role in analyzing the convergence behavior of the SSNS algorithm later in Section 3.2. ", "page_idx": 4}, {"type": "text", "text": "Next, Theorem 2 validates our second criterion on $H_{\\delta}$ : the sparsified Hessian matrix by Algorithm 1 is guaranteed to be positive definite, regardless of the threshold parameter $\\delta$ . Therefore, it can be safely used to compute the Newton search directions. ", "page_idx": 4}, {"type": "text", "text": "Theorem 2 (Positive definiteness). Suppose that $n~\\geq~m$ . For any $\\alpha\\,\\in\\,\\mathbb{R}^{n}$ , $\\tilde{\\beta}\\ \\in\\ \\mathbb{R}^{m-1}$ , and $M\\in\\mathbb{R}^{n\\times m}$ , let $T=\\tau(\\alpha,\\beta)$ , $r=T\\mathbf{1}_{m}$ , and $c=T^{T}\\mathbf{1}_{n}$ . Then for any $\\delta\\geq0,$ , the matrix $H_{\\delta}$ output by Algorithm $^{\\,I}$ is always positive definite. Specifically, we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\sigma_{\\operatorname*{max}}(H_{\\delta})\\leq2\\eta^{-1}\\cdot\\operatorname*{max}\\{\\|r\\|_{\\infty},\\|c\\|_{\\infty}\\},\\qquad\\sigma_{\\operatorname*{min}}(H_{\\delta})\\geq\\eta^{-1}\\cdot\\frac{n-m+1}{2n}\\cdot\\operatorname*{min}_{i,j}T_{i j},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\sigma_{\\mathrm{max}}(\\cdot)$ and $\\sigma_{\\mathrm{min}}(\\cdot)$ represent the largest and smallest eigenvalues of a symmetric matrix, respectively. ", "page_idx": 4}, {"type": "text", "text": "The two features presented by Theorem 1 and Theorem 2 are crucial in designing the optimization algorithm and analyzing its theoretical properties, which we introduce in details in Section 3.2. ", "page_idx": 4}, {"type": "text", "text": "3.2 The SSNS algorithm ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In Theorem 2, we have shown that the sparsified Hessian matrix $H_{\\delta}$ is always positive definite, thus invertible. However, in actual computation, $H_{\\delta}$ may be nearly singular, thus causing numerical instability. To further stabilize the optimization procedure, we propose a safe and sparse Newton method inspired by the regularized Newton method [17] and the Levenberg\u2013Marquardt algorithm [16, 21]. ", "page_idx": 4}, {"type": "text", "text": "One of the key ingredients of SSNS is to introduce a shift parameter $\\lambda$ in solving the Newton linear system, leading to a search direction of the form $p=-(H\\dot{\\delta}+\\lambda I)^{-1}g(x)$ in each iteration. The shift parameter $\\lambda$ has multiple functions. First, it stabilizes the vanilla Newton linear system $H_{\\delta}^{-1}g(x)$ , as the matrix $H_{\\delta}+\\lambda I$ has a smaller condition number than $H_{\\delta}$ , which potentially accelerates iterative linear solves such as the CG method. Second, if we allow $\\lambda$ to vary along iterations, $\\lambda$ has the effect of adjusting the search direction when $-H_{\\delta}^{-1}g(x)$ is not a good candidate. Third, as we will later show in the convergence analysis, an adaptive $\\lambda$ plays an important role in both the global and local convergence of the algorithm. ", "page_idx": 4}, {"type": "text", "text": "On the other side, the sparsification threshold $\\delta$ is also essential to the design of the algorithm, as we need to control the approximation error of $H_{\\delta}$ during the iterations. Intuitively, when the current iterate $x_{k}$ is close to the optimum, $H_{\\delta}$ should be also close to the true Hessian matrix $H(x_{k})$ to achieve the fast convergence rate, whereas when $x_{k}$ is far away, it may be beneficial to use a large $\\delta$ , since $H_{\\delta}$ is then more sparse and leads to a faster computation of the linear system $-(H_{\\delta}+\\lambda\\bar{I})^{-1}g(x)$ . ", "page_idx": 4}, {"type": "text", "text": "Overall, in SSNS we allow $\\delta$ and $\\lambda$ to vary in each iteration, and use the notation $\\delta_{k}$ and $\\lambda_{k}$ to reflect this adaptivity. Intuitively, both $\\delta_{k}$ and $\\lambda_{k}$ cause approximation errors to the true Hessian matrix in determining the Newton search direction, so they should tend to zero when $x_{k}$ is sufficiently close to the optimum. On the other hand, we do not want $\\delta_{k}$ and $\\lambda_{k}$ to decay too fast, since otherwise they make $H_{\\delta}$ too dense and the linear system may be ill-conditioned. To this end, we set their values according to the current gradient norm $\\left\\|g(x_{k})\\right\\|$ , which can be viewed as an indicator of the distance between $x_{k}$ and the optimum $x^{*}$ . Specifically, we set $\\lambda_{k}=\\mu_{k}\\|g(x_{k})\\|$ and $\\delta_{k}=\\nu_{0}\\|g_{k}\\|^{\\gamma}$ , where $\\mu_{k}$ is a parameter that dynamically changes in each iteration, and $\\nu_{0}>0$ and $\\gamma\\geq1$ are two constants. These settings are justified by the convergence analysis later in Theorems 3 and 5. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Before presenting the full details, we first introduce a few functions and quantities that play important roles in the algorithm. In each iteration, SSNS computes a quantity $\\rho_{k}$ , ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\rho_{k}=\\frac{f(x_{k})-f(x_{k}+\\xi_{k}p_{k})}{m_{k}(0)-m_{k}(\\xi_{k}p_{k})},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\xi_{k}>0$ is a step size parameter, and the $m_{k}(\\cdot)$ function is a local quadratic approximation to the objective function: ", "page_idx": 5}, {"type": "equation", "text": "$$\nm_{k}(p)=f(x_{k})+[g(x_{k})]^{T}p+\\frac{1}{2}p^{T}H_{\\delta_{k}}p.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The quantity $\\rho_{k}$ has two functions: first, it adjusts the $\\mu_{k}$ parameter, and second, it also determines whether one should accept the proposed new iterate $x_{k}+\\xi_{k}p_{k}$ . A negative value of $\\rho_{k}$ means that the objective function actually increases at the new iterate, so one should reject the proposed point, and increase $\\lambda_{k}$ in the next iteration for a potentially better search direction. The overall SSNS algorithm is then given in Algorithm 2. ", "page_idx": 5}, {"type": "table", "img_path": "Nmmiyjw7Xg/tmp/138b08b13da9971b91d8d3087b610e35cae9c066e241373fe8e2b0b4cc98edec.jpg", "table_caption": [], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "3.3 Step size selection ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "It is worth noting that in Algorithm 2, the step size $\\xi_{k}$ can be taken an arbitrary value from a fixed interval $[c_{l},c_{u}]$ . This is quite different from typical line search methods, which require the new iterate $x_{k}+\\xi_{k}p_{k}$ to satisfy certain conditions, such as the sufficient decrease condition and the curvature condition [23]. In other words, it is one of the advantages of SSNS that the cost of step size selection is predictable: we can consider a fixed number of candidates, and select one of them according to some criterion. At one extreme, it is completely acceptable to always set $\\xi_{k}=1$ . However, in practice, we advocate Algorithm 3 to heuristically choose $\\xi_{k}$ , which considers a fixed number of candidates, and computes the objective function value for each candidate. The algorithm will early stop if a decrease in function value is found. If all candidates increase the function value, then return the step that results in the smallest function value. Based on our empirical results, setting $(\\xi_{[0]},\\xi_{[1]},\\xi_{[2]},\\xi_{[3]})=(1,0.5,0.25,0.1)$ gives reasonably good performance in most numerical experiments. ", "page_idx": 5}, {"type": "text", "text": "Algorithm 3 A practical step size selection method for Algorithm 2. ", "page_idx": 6}, {"type": "text", "text": "Input: Candidate step sizes $1=\\xi_{[0]}>\\xi_{[1]}>\\cdot\\cdot\\cdot\\xi_{[N]}>0$ , current $x_{k}$ , $p_{k}$ , objective function $f(\\cdot)$   \n1: Initialize $\\xi^{*}=1$ , $f^{*}=+\\infty$   \n2: for $i=0,1,\\ldots,N$ do   \n3: Compute $x_{\\mathrm{trial}}=x_{k}+\\xi_{[i]}p_{k}$ , $f_{\\mathrm{trial}}=f(x_{\\mathrm{trial}})$   \n4: if $f_{\\mathrm{trial}}<f^{*}$ then   \n5: $\\xi^{*}=\\xi_{[i]}$ , $f^{*}=f_{\\mathrm{trial}}$   \n6: if $f^{*}<f(x_{k})$ then   \n7: return $\\xi^{*}$ , $f^{*}$   \n8: return $\\xi^{*}$ , $f^{*}$ ", "page_idx": 6}, {"type": "text", "text": "4 Theoretical Guarantees on Convergence ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we present our major theoretical contributions to the sparsified Newton method for entropic-regularized OT. We first show that starting from an arbitrary initial point $x_{0}$ , the iterates generated by Algorithm 2 eventually converge to the unique global optimum $x^{*}$ . Therefore, SSNS does not require a warm initialization using the Sinkhorn algorithm as in [33]. ", "page_idx": 6}, {"type": "text", "text": "Theorem 3 (Global convergence guarantee). Let $\\{x_{k}\\}$ be generated by Algorithm 2, and $x^{*}$ is an optimal point of (4). Then either Algorithm 2 terminates in finite iterations, or $x_{k}$ satisfies ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{k\\to\\infty}\\|g(x_{k})\\|=0,\\quad\\operatorname*{lim}_{k\\to\\infty}\\|x_{k}-x^{*}\\|=0.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "The next theorem characterizes the behavior of SSNS when the iterates are sufficiently close to the optimum. Since in Algorithm 2, the proposed new iterate $x_{k}+\\xi_{k}p_{k}$ is rejected if $\\rho_{k}\\,\\leq\\,0$ , it is important to show that such rejections will be very rare as the algorithm proceeds. ", "page_idx": 6}, {"type": "text", "text": "Theorem 4. There exists an integer $K>0$ such that for all $k\\geq K$ , $\\rho_{k}\\geq1-\\rho_{0},\\,\\mu_{k+1}\\leq\\kappa,$ , and $x_{k+1}=x_{k}+\\xi_{k}p_{k}$ . ", "page_idx": 6}, {"type": "text", "text": "Theorem 4 indicates that eventually the parameter $\\mu_{k}$ is upper bounded by the pre-specified value $\\kappa$ , making the shift parameter of the Newton method, namely, $\\mu_{k}\\|g_{k}\\|$ , tend to zero. This is consistent with the intuition we have described in Section 3.2. More importantly, the quantity $\\rho_{k}$ will also be greater than the threshold $1-\\rho_{0}$ , so the new step proposed by the Newton direction will always be accepted, regardless of the bounds $c_{l}$ and $c_{u}$ . This makes SSNS quite flexible in picking the step sizes, unlike classical line search algorithms that pose various conditions that need to be satisfied. ", "page_idx": 6}, {"type": "text", "text": "Finally, Theorem 5 shows that SSNS indeed has a quadratic local convergence rate that matches the Newton method based on genuine and dense Hessian matrices. ", "page_idx": 6}, {"type": "text", "text": "Theorem 5 (Quadratic local convergence rate). Fix $\\xi_{k}\\equiv1$ . Then there exists an integer $K^{\\prime}>0$ and a constant $L>0$ such that for all $k\\ge K^{\\prime}$ , ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\|x_{k+1}-x^{*}\\|\\leq L\\|x_{k}-x^{*}\\|^{2}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Overall, Theorems 3 to 5 provide solid theoretical guarantees on the proposed SSNS algorithm, which are a major complement to the existing literature on solving entropic-regularized OT using realistic second-order methods. More importantly, they validate that SSNS is indeed a \u201csafe\u201d algorithm that is quite robust to the choice of initial value, step sizes, strength of sparsification, and hyperparameters. ", "page_idx": 6}, {"type": "text", "text": "5 Numerical Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we test the performance of the proposed SSNS algorithm on various numerical experiments3. There are a huge number of algorithms developed for entropic-regularized OT, and we focus on representative ones from each category of optimization methods: 1. the Sinkhorn algorithm as the default option for entropic-regularized OT, interpreted as a BCD method; 2. the APDAGD ", "page_idx": 6}, {"type": "text", "text": "algorithm for accelerated first-order method; 3. the L-BFGS algorithm for quasi-Newton method; 4.   \nthe globalized Newton method with line search; 5. the proposed SSNS algorithm. ", "page_idx": 7}, {"type": "text", "text": "We first consider three benchmark datasets to define the OT problem, each with two ways of constructing the cost matrices. More explanations of the experiment setting are given in Section A.2. ", "page_idx": 7}, {"type": "text", "text": "\u2022 (Fashion-)MNIST: OT between a pair of images from the MNIST [15] or Fashion-MNIST [36] dataset. The $a$ and $b$ vectors are flattened and normalized pixel values, and the cost matrix holds the $\\ell_{1}$ -distances or squared Euclidean distances between individual pixels. The problem size is $n=m=784$ . ", "page_idx": 7}, {"type": "text", "text": "\u2022 ImageNet: OT between two categories of images from the ImageNet dataset [9]. We use a subset of ImageNet from the Imagenette Github repository4, which contains ten classes of ImageNet images. Approximately 1000 images per category are selected. We map each image to a 30-dimensional feature vector by first passing the image to a ResNet18 network, resulting in a 512-dimensional vector, then followed by a dimension reduction by principal component analysis. Let $x_{i}\\in\\mathbb{R}^{30}$ be the feature vector of an image in the first category, $i=1,\\dots,n$ , and $\\dot{y}_{j}\\in\\mathbb{R}^{30}$ be the feature vector of an image in the second category, $j=1,\\dots,m$ . Then $a=n^{-1}{\\mathbf{1}}_{n}$ , $b=m^{-1}\\mathbf{1}_{m}$ , and the cost matrix is $M_{i j}=\\|x_{i}-y_{j}\\|_{1}$ or $M_{i j}=\\|x_{i}-y_{j}\\|^{2}$ . The problem size is $n\\approx m\\approx1000$ . ", "page_idx": 7}, {"type": "text", "text": "To make the regularization parameter $\\eta$ comparable in different settings, we normalize all cost matrices to have unit infinity norms, namely, $\\bar{M}\\leftarrow M/\\|M\\|_{\\infty}$ . Then we consider two settings of the regularization parameter, $\\eta=0.01$ and $\\eta=0.001$ . ", "page_idx": 7}, {"type": "text", "text": "For entropic-regularized OT, a commonly-used criterion to evaluate optimality is the marginal error of the estimated transport plan. Let $\\dot{x_{k}}\\:=\\:(\\alpha_{k}^{T},\\tilde{\\beta}_{k}^{T})^{T}$ be the current iterate for dual variables, and set $T_{k}\\,=\\,\\tau(\\alpha_{k},\\beta_{k})$ . Then the marginal error is given by $\\sqrt{\\|T_{k}\\mathbf{1}_{m}-a\\|^{2}+\\|T_{k}^{T}\\mathbf{1}_{n}-b\\|^{2}}$ . Coincidentally, this is exactly the current gradient norm $\\|g(x_{k})\\|$ as indicated by (5). Figure 1 shows the plots of marginal errors against iteration number or run time for different algorithms on the three benchmark datasets. ", "page_idx": 7}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/5ff2b38073953090c29556ae50d1374fe378ddb2affb94db729abdc497e22bd8.jpg", "img_caption": ["Figure 1: Top: Marginal error vs. iteration number for different algorithms on three datasets. Bottom: Marginal error vs. run time. The cost matrix is based on the $\\ell_{1}$ -distance, and $\\eta=0.01$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "From the top row of Figure 1, it is clear that second-order methods have much faster convergence speed compared to first-order and quasi-Newton methods. However, for the vanilla Newton method, this advantage is weakened by its high per-iteration cost, resulting in less competitive run time performance as shown in the bottom row of Figure 1. The SSNS algorithm avoids this issue by using sparse matrix operations, and hence for the run time results, it still shows an order of magnitude speedup for MNIST and Fashion-MNIST data. The run time for SSNS is relatively longer in the ImageNet dataset, mostly because the transport plan is more dense under $\\eta=0.01$ . We show in ", "page_idx": 7}, {"type": "text", "text": "Figure 2 that as $\\eta$ becomes smaller, the Hessian matrix can be better approximated by a sparse matrix, thus enlarging the advantage of SSNS. This point is consistent with Theorem 1 of [33], which states that smaller $\\eta$ in general results in better sparse approximation. More discussions on the impact of regularization parameter is given in Section A.3. ", "page_idx": 8}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/14f5561ef947e21d58b22c2955ba98b15302a74f639cfc582471a7bc2f950512.jpg", "img_caption": ["Figure 2: Top: Marginal error vs. iteration number for different algorithms on three datasets. Bottom: Marginal error vs. run time. The cost matrix is based on the $\\ell_{1}$ -distance, and $\\eta=0.001$ . "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "We also note that with $\\eta=0.001$ , the Newton method encounters numerical issues in solving the linear systems: the Hessian matrix is nearly singular, and the line search procedure fails along the computed search direction. Therefore, the Newton method does not generate any valid results in Figure 2. This issue further validates our intuition in Section 3.2: when $H(x)$ is nearly singular, $-[\\check{H}(x)]^{-1}g(x)$ may not be a good search direction, and the introduction of the shift parameter $\\lambda$ in SSNS may give a better candidate $-(H_{\\delta}+\\lambda I)^{-1}g(x)$ . ", "page_idx": 8}, {"type": "text", "text": "In the ImageNet experiments above, we map each image to a 30-dimensional feature vector to compute the cost matrix. To study the impact of the feature dimension, in Section A.4, we conduct additional experiments with $d=60,90,200,300,500$ , under the same setting as in Figure 2. ", "page_idx": 8}, {"type": "text", "text": "Next, we show in Figure 3 the results for cost matrices based on squared Euclidean distances. The implications are similar: the Newton method fails in the ImageNet dataset, and costs too much run time in the other two datasets. In contrast, SSNS shows great computational advantage. The experiment results for more test cases are given in Section A.5 in the appendix. ", "page_idx": 8}, {"type": "text", "text": "Finally, to study the scalability of SSNS, we consider the following synthetic OT problem that can generate data with arbitrary dimensions. ", "page_idx": 8}, {"type": "text", "text": "\u2022 Large-scale synthetic data: The basic setting is to approximate the OT between two continuous distributions: the source is an exponential distribution with mean one, and the target is a normal mixture distribution $0.2\\cdot N(1,0.2)+0.8\\cdot N(3,0.5)$ . We discretize the problem in the following way: let $x_{i}\\,=\\,5(i\\,-\\,1)/(n\\,-\\,1)$ , $i=1,\\hdots,n$ , and $y_{j}\\,=\\,5(j\\,-\\,1)/\\bar{(}m\\,-\\,1)$ , $j\\,=\\,1,\\hdots,m$ , which are equally-spaced points on [0, 5]. Define the cost matrix as $M_{i j}=(x_{i}-y_{j})^{2}$ . Let $f_{1}$ and $f_{2}$ be the density functions of the source and target distributions, respectively. Then we set $\\begin{array}{r}{\\tilde{{a}}_{i}=f_{1}(x_{i}),\\tilde{{b}}_{j}=f_{2}(y_{j}),\\,{a}_{i}=\\tilde{{a}}_{i}/\\left(\\sum_{k=1}^{n}\\tilde{{a}}_{k}\\right)}\\end{array}$ , and $\\begin{array}{r}{b_{j}=\\tilde{b}_{j}/\\left(\\sum_{k=1}^{m}\\tilde{b}_{k}\\right)}\\end{array}$ . ", "page_idx": 8}, {"type": "text", "text": "Similar to the previous experiment setting, we normalize the cost matrix, $M\\gets M/\\|M\\|_{\\infty}$ , and set $\\eta=0.001$ . We then solve the problem at the scales of $n=m=1000,5000$ , and 10000, but only considering BCD and SSNS, as other methods are too time-consuming to proceed. The results are visualized in Figure 4, whose pattern is clear: BCD demonstrates a linear-like convergence rate, and SSNS has a fast convergence speed consistent with the theoretical quadratic rate. Thanks to the Hessian sparsification, SSNS does not suffer from a high per-iteration cost, so overall it provides an efficient solver for entropic-regularized OT even on very large problems. ", "page_idx": 8}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/cdf5eeaab0a8aa714895fc28f01d9319492795991280873ded6f8026eb7cb5d2.jpg", "img_caption": ["Figure 3: Top: Marginal error vs. iteration number for different algorithms on three datasets. Bottom: Marginal error vs. run time. The cost matrix is based on the squared Euclidean distance, and $\\eta=0.001$ . "], "img_footnote": [], "page_idx": 9}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/9a562c5c7508805d08ec93952fe04e60ac2329699f27713143d6d8cbc614c053.jpg", "img_caption": ["Figure 4: Comparing BCD and SSNS on large OT problems. Top: Marginal error vs. iteration number for different problem sizes. Bottom: Marginal error vs. run time. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this article, we have carefully designed and analyzed a new variant of the sparsified Newton method for solving large-scale entropic-regularized OT problems. As demonstrated by [33], the sparsified Newton method typically enjoys visibly faster convergence speed than first-order methods, and meanwhile maintains a comparable computational cost per iteration. This paper substantially complements the existing literature on sparsified Newton method on the following aspects. First, a new Hessian sparsification method is developed, which nicely interacts with the convergence theory. Second, based on this scheme, we prove that the sparsified Hessian matrix is always positive definite, thus promising a safe Newton direction computation. Third, we have a thorough theoretical analysis of the proposed SSNS algorithm, which affirmatively answers a previous conjecture made in [33] on the convergence speed. Finally, our algorithm features an easy and clear implementation that does not require warm initialization or heavy hyperparameter tuning, thus being user-friendly for practical use. ", "page_idx": 9}, {"type": "text", "text": "Limitations A potential limitation of the proposed method is that for some specific OT problems, the transport plan may not be well approximated by a sparse matrix. In such cases, the Hessian matrix may be too dense even after the adaptive sparsification step. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "Yixuan Qiu\u2019s work was supported in part by National Natural Science Foundation of China (12101389), Shanghai Pujiang Program (21PJC056), MOE Project of Key Research Institute of Humanities and Social Sciences (22JJD110001), and Shanghai Research Center for Data Science and Decision Technology. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Altschuler, J., Niles-Weed, J., and Rigollet, P. (2017). Near-linear time approximation algorithms for optimal transport via Sinkhorn iteration. In Advances in Neural Information Processing Systems, volume 30.   \n[2] Arjovsky, M., Chintala, S., and Bottou, L. (2017). Wasserstein generative adversarial networks. In Proceedings of the 34th International Conference on Machine Learning, pages 214\u2013223.   \n[3] Brauer, C., Clason, C., Lorenz, D., and Wirth, B. (2017). A Sinkhorn-Newton method for entropic optimal transport. arXiv preprint arXiv:1710.06635.   \n[4] Courty, N., Flamary, R., Habrard, A., and Rakotomamonjy, A. (2017a). Joint distribution optimal transportation for domain adaptation. In Advances in Neural Information Processing Systems, volume 30.   \n[5] Courty, N., Flamary, R., Tuia, D., and Rakotomamonjy, A. (2017b). Optimal transport for domain adaptation. IEEE Transactions on Pattern Analysis and Machine Intelligence, 39(9):1853\u20131865.   \n[6] Cuturi, M. (2013). Sinkhorn distances: Lightspeed computation of optimal transport. In Advances in Neural Information Processing Systems, volume 26.   \n[7] Cuturi, M. and Peyr\u00e9, G. (2018). Semidual regularized optimal transport. SIAM Review.   \n[8] Dembo, R. S., Eisenstat, S. C., and Steihaug, T. (1982). Inexact Newton methods. SIAM Journal on Numerical Analysis, 19(2):400\u2013408.   \n[9] Deng, J., Dong, W., Socher, R., Li, L.-J., Kai Li, and Li Fei-Fei (2009). ImageNet: A largescale hierarchical image database. In 2009 IEEE Conference on Computer Vision and Pattern Recognition, pages 248\u2013255.   \n[10] Dvurechensky, P., Gasnikov, A., and Kroshnin, A. (2018). Computational optimal transport: Complexity by accelerated gradient descent is better than by Sinkhorn\u2019s algorithm. In Proceedings of the 35th International Conference on Machine Learning, pages 1367\u20131376.   \n[11] Genevay, A., Peyre, G., and Cuturi, M. (2018). Learning generative models with Sinkhorn divergences. In Proceedings of the Twenty-First International Conference on Artificial Intelligence and Statistics, pages 1608\u20131617.   \n[12] Gordaliza, P., Barrio, E. D., Fabrice, G., and Loubes, J.-M. (2019). Obtaining fairness using optimal transport theory. In Proceedings of the 36th International Conference on Machine Learning, pages 2357\u20132365.   \n[13] Guminov, S., Dvurechensky, P., Tupitsa, N., and Gasnikov, A. (2021). On a combination of alternating minimization and Nesterov\u2019s momentum. In Proceedings of the 38th International Conference on Machine Learning, pages 3886\u20133898.   \n[14] Huynh, V. and Phung, D. (2021). Optimal transport for deep generative models: State of the art and research challenges. In International Joint Conference on Artificial Intelligence, pages 4450\u20134457.   \n[15] Lecun, Y., Bottou, L., Bengio, Y., and Haffner, P. (1998). Gradient-based learning applied to document recognition. Proceedings of the IEEE, 86(11):2278\u20132324.   \n[16] Levenberg, K. (1944). A method for the solution of certain non-linear problems in least squares. Quarterly of Applied Mathematics, 2(2):164\u2013168.   \n[17] Li, D.-H., Fukushima, M., Qi, L., and Yamashita, N. (2004). Regularized Newton methods for convex minimization problems with singular solutions. Computational Optimization and Applications, 28(2):131\u2013147.   \n[18] Lin, T., Ho, N., and Jordan, M. I. (2022). On the efficiency of entropic regularized algorithms for optimal transport. Journal of Machine Learning Research, 23(137):1\u201342.   \n[19] Liu, D. C. and Nocedal, J. (1989). On the limited memory BFGS method for large scale optimization. Mathematical Programming, 45(1):503\u2013528.   \n[20] Luise, G., Rudi, A., Pontil, M., and Ciliberto, C. (2018). Differential properties of Sinkhorn approximation for learning with Wasserstein distance. In Advances in Neural Information Processing Systems, volume 31.   \n[21] Marquardt, D. W. (1963). An algorithm for least-squares estimation of nonlinear parameters. Journal of the Society for Industrial and Applied Mathematics, 11(2):431\u2013441.   \n[22] Montesuma, E. F., Mboula, F. N., and Souloumiac, A. (2023). Recent advances in optimal transport for machine learning. arXiv:2306.16156.   \n[23] Nocedal, J. and Wright, S. J. (2006). Numerical Optimization. Springer Series in Operation Research and Financial Engineering. Springer, second edition.   \n[24] Oneto, L., Donini, M., Luise, G., Ciliberto, C., Maurer, A., and Pontil, M. (2020). Exploiting MMD and Sinkhorn divergences for fair and transferable representation learning. In Advances in Neural Information Processing Systems, volume 33.   \n[25] Ortega, J. M. and Rheinboldt, W. C. (1970). Iterative Solution of Nonlinear Equations in Several Variables. SIAM.   \n[26] Papadakis, N. (2015). Optimal Transport for Image Processing. Thesis, Universit\u00e9 de Bordeaux ; Habilitation thesis.   \n[27] Pasechnyuk, D. A., Persiianov, M., Dvurechensky, P., and Gasnikov, A. (2023). Algorithms for Euclidean-regularised optimal transport. In International Conference on Optimization and Applications, pages 84\u201398.   \n[28] Pele, O. and Werman, M. (2009). Fast and robust earth mover\u2019s distances. In 2009 IEEE 12th International Conference on Computer Vision, pages 460\u2013467.   \n[29] Peyr\u00e9, G. and Cuturi, M. (2019). Computational optimal transport: With applications to data science. Foundations and Trends\u00ae in Machine Learning, 11(5-6):355\u2013607.   \n[30] Rockafellar, R. T. (1970). Convex Analysis. Princeton University Press.   \n[31] Silvia, C., Ray, J., Tom, S., Aldo, P., Heinrich, J., and John, A. (2020). A general approach to fairness with optimal transport. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, pages 3633\u20133640.   \n[32] Sinkhorn, R. (1964). A relationship between arbitrary positive matrices and doubly stochastic matrices. The Annals of Mathematical Statistics, 35(2):876\u2013879.   \n[33] Tang, X., Shavlovsky, M., Rahmanian, H., Tardini, E., Thekumparampil, K. K., Xiao, T., and Ying, L. (2024). Accelerating Sinkhorn algorithm with sparse Newton iterations. In The Twelfth International Conference on Learning Representations.   \n[34] Torres, L. C., Pereira, L. M., and Amini, M. H. (2021). A survey on optimal transport for machine learning: Theory and applications. arXiv:2106.01963.   \n[35] Villani, C. (2009). Optimal Transport: Old and New, volume 338 of Grundlehren Der Mathematischen Wissenschaften. Springer.   \n[36] Xiao, H., Rasul, K., and Vollgraf, R. (2017). Fashion-MNIST: a novel image dataset for benchmarking machine learning algorithms. arXiv preprint arXiv:1708.07747.   \n[37] Yule, G. U. (1912). On the methods of measuring association between two attributes. Journal of the Royal Statistical Society, 75(6):579\u2013642. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Additional Experiment Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Computing environment ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "All experiments in this article are conducted on a personal computer with an Intel i9-13900K CPU, $32\\,\\mathrm{GB}$ memory, and a Ubuntu 24.10 operating system. ", "page_idx": 12}, {"type": "text", "text": "A.2 Motivation ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "The experiments in Section 5 are designed to reflect two typical uses of OT. In the (Fashion-)MNIST experiment, images are vectorized as density vectors, and OT is a used as a tool for image morphing and interpolation [26]. We follow the experiment settings in the existing literature such as [27] and [33] to define $a,b,$ , and $M$ : given two images, let $a\\in\\mathbb{R}^{784}$ be the vectorized and normalized pixel values of the first image, and similarly define $b\\in\\mathbb{R}^{784}$ for the second image. For pixel $i$ in the first image and pixel $j$ in the second image, let $(w,h)$ and $(w^{\\prime},h^{\\prime})$ be their original coordinates in the image, respectively. Then the cost value between pixel $i$ and pixel $j$ is ", "page_idx": 12}, {"type": "equation", "text": "$$\nM_{i j}=|\\boldsymbol{w}-\\boldsymbol{w^{\\prime}}|+|\\boldsymbol{h}-\\boldsymbol{h^{\\prime}}|\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "based on the $\\ell_{1}$ -distance, or ", "page_idx": 12}, {"type": "equation", "text": "$$\nM_{i j}=(w-w^{\\prime})^{2}+(h-h^{\\prime})^{2}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "base on the squared Euclidean distance. The whole cost matrix $M\\in\\mathbb{R}^{784\\times784}$ then collects all pairwise cost values $M_{i j}$ . ", "page_idx": 12}, {"type": "text", "text": "The ImageNet experiment uses OT as a statistical distance to measure the difference between two distributions. In this setting, each image is one observation of a distribution, and we use OT to compute the (approximate) Wasserstein distance between two classes of images. Since each image is mapped to a 30-dimensional feature vector, the entries of the cost matrix are simply the $\\ell_{1}$ -distances or squared Euclidean distances between the feature vectors of two images. ", "page_idx": 12}, {"type": "text", "text": "A.3 Impact of the regularization parameter ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "In Figures 1 and 2, we have shown that the regularization parameter $\\eta$ may affect the performance of optimization algorithms. To further study this effect, we consider a series of equally-spaced $\\eta$ values in the logarithmic domain, and display the run times and number of iterations of each algorithm. For brevity, we focus on the comparison between BCD and SSNS, and the results are given in Table 1. ", "page_idx": 12}, {"type": "text", "text": "Table 1: Performance comparison between BCD and SSNS under different regularization parameters for the ImageNet experiment in Section 5. The convergence tolerance is set to $\\varepsilon_{t o l}=\\dot{1}0^{-8}$ . Left: cost matrix based on the $\\ell_{1}$ -distance. Right: cost matrix based on the squared Euclidean distance. ", "page_idx": 12}, {"type": "table", "img_path": "Nmmiyjw7Xg/tmp/a9ea16227b177c925f75fcba6409861607a3aa93ed3a0f150a7d6da8abe06c86.jpg", "table_caption": [], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "From Table 1 we can find that BCD is very sensitive to the value of $\\eta$ . When $\\eta$ is large, BCD may demonstrate some computational advantages, but when $\\eta$ is small, BCD typically fails to meet the error tolerance within 500 iterations. The pattern of SSNS shows some interesting points: when $\\eta$ becomes smaller, the number of iterations also increases, but the overall runtime of SSNS may even decrease. This is because smaller $\\eta$ values typically result in more sparse Hessian approximations, thus leading to faster sparse linear system solving. These findings are consistent with our explanations in Section 5. ", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A.4 Impact of the feature dimension ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In the ImageNet experiment in Section 5, we map each image to a 30-dimensional feature vector to compute the cost matrix. To study the impact of the feature dimension, we conduct five more experiments with $d=60$ , 90, 200, 300, 500, under the same setting as in Figure 2. The results are shown in Figure 5. The plots demonstrate similar patterns, implying that the convergence property of SSNS is robust to the feature dimension of input images. ", "page_idx": 13}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/7cad2549bf248384e279e75833a45bc9d477517d9f9212c12411a2ac54ccf340.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 5: ImageNet experiment with different feature dimensions. The cost matrix is based on the $\\ell_{1}$ -distance, and $\\eta=0.001$ . ", "page_idx": 13}, {"type": "text", "text": "A.5 Additional test cases ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Besides the numerical experiments in Section 5, here we include two more test cases from each dataset. The first test case shown in Figure 6 uses $\\ell_{1}$ -distances to construct cost matrix, and the second one, demonstrated in Figure 7, is based on squared Euclidean distances. Both test cases use the regularization parameter $\\eta=0.001$ . ", "page_idx": 13}, {"type": "text", "text": "B Proof of Theorems ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "B.1 Proof of Theorem (1) ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this proof all inequality signs hold elementwisely when applied to vectors and matrices. ", "page_idx": 13}, {"type": "text", "text": "By Algorithm (1), $T_{\\delta}=T-\\Delta$ , where each element $\\Delta_{i j}$ of $\\Delta$ is either zero, or the corresponding element $T_{i j}$ of $T$ . Clearly, we have $\\Delta\\geq0$ . Due to the selection scheme in Algorithm (1), each row sum and each column sum of $\\Delta$ is upper bounded by the threshold $\\delta$ , i.e., $\\Delta\\mathbf{1}_{m}\\,\\leq\\,\\delta\\mathbf{1}_{n}$ and $\\Delta^{T}\\mathbf{1}_{n}\\leq\\delta\\mathbf{1}_{m}$ . Since the last column of $\\Delta$ is always a zero vector by the design of the algorithm, we also easily get $\\tilde{\\Delta}\\mathbf{1}_{m-1}=\\Delta\\mathbf{1}_{m}\\leq\\delta\\mathbf{1}_{n}$ and $\\tilde{\\Delta}^{T}\\mathbf{1}_{n}^{\\bar{}}=\\tilde{d}\\leq\\delta\\mathbf{1}_{m-1}$ , where $d=\\Delta^{T}\\mathbf{1}_{n}$ . ", "page_idx": 13}, {"type": "text", "text": "Note that ", "page_idx": 13}, {"type": "equation", "text": "$$\nD=H(x)-H_{\\delta}=\\eta^{-1}\\left[\\!\\!\\begin{array}{c c}{{O}}&{{\\tilde{\\Delta}}}\\\\ {{\\tilde{\\Delta}^{T}}}&{{O}}\\end{array}\\!\\!\\right]:=\\left[\\!\\!\\begin{array}{c}{{D_{1}}}\\\\ {{D_{2}}}\\end{array}\\!\\!\\right],\n$$", "text_format": "latex", "page_idx": 13}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/f4f0bc8ab7efc884b39a411f324063eb522752848b05391e71bf7ec40b080360.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Figure 6: Additional test cases based on $\\ell_{1}$ -distances and $\\eta=0.001$ . Top: Marginal error vs. iteration number for different algorithms on three datasets. Bottom: Marginal error vs. run time. ", "page_idx": 14}, {"type": "image", "img_path": "Nmmiyjw7Xg/tmp/004141059b62d30ed8529c4bdb8546faae9a45fca6bb9ebfd0418e79025ce89e.jpg", "img_caption": ["Figure 7: Additional test cases based on squared Euclidean distances and $\\eta=0.001$ . Top: Marginal error vs. iteration number for different algorithms on three datasets. Bottom: Marginal error vs. run time. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "so $D\\geq0$ , $D_{1}\\mathbf{1}_{n+m-1}\\,=\\,\\eta^{-1}\\tilde{\\Delta}\\mathbf{1}_{m-1}\\,\\leq\\,\\eta^{-1}\\delta\\mathbf{1}_{n}$ and $D_{2}\\mathbf{1}_{n+m-1}\\,=\\,\\eta^{-1}\\tilde{\\Delta}^{T}\\mathbf{1}_{n}\\,\\leq\\,\\eta^{-1}\\delta\\mathbf{1}_{m-1}$ . Overall, we have $D\\mathbf{1}_{n+m-1}\\leq\\eta^{-1}\\delta\\mathbf{1}_{n+m-1}$ . Since $D\\geq0$ , this is equivalent to ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\|D_{i}.\\|_{1}\\leq\\eta^{-1}\\delta,\\quad i=1,2,\\ldots,n+m-1.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Since $D$ is symmetric, we also have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\|D._{j}\\|_{1}=\\|D_{j}.\\|_{1}\\leq\\eta^{-1}\\delta,\\quad j=1,2,\\ldots,n+m-1.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Let ", "page_idx": 14}, {"type": "equation", "text": "$$\nP_{k}=\\sum_{j\\neq k}|D_{k j}|,\\quad k=1,\\ldots,n+m-1,\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "and note that all diagonal elements of $D$ are zero. So by the Gershgorin circle theorem, every eigenvalue of $D$ must be smaller than or equal to the maximum of $D_{k k}+P_{k}=\\|D_{k\\cdot}\\|_{1}$ , which is upper bounded by $\\eta^{-1}\\delta$ . Therefore, $\\lVert D\\rVert=\\bar{\\sigma}_{\\mathrm{max}}(D)\\leq\\eta^{-1}\\delta$ . ", "page_idx": 14}, {"type": "text", "text": "B.2 Proof of Theorem (2) ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Consider the matrix ", "page_idx": 15}, {"type": "equation", "text": "$$\nA=\\left[\\!\\!\\begin{array}{c c}{\\mathbf{diag}(r)}&{\\tilde{T}_{\\delta}}\\\\ {\\tilde{T}_{\\delta}^{T}}&{\\mathbf{diag}(\\tilde{c})}\\end{array}\\!\\!\\right]\\in\\mathbb{R}^{(n+m-1)\\times(n+m-1)},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and suppose that $T=(T_{i j}),T_{\\delta}=(S_{i j})$ . Clearly, $S_{i j}=T_{i j}-\\Delta_{i j}\\leq T_{i j}$ . Let ", "page_idx": 15}, {"type": "equation", "text": "$$\nP_{k}=\\sum_{j\\neq k}|A_{k j}|,\\quad k=1,\\ldots,n+m-1,\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and then it is easy to find that ", "page_idx": 15}, {"type": "equation", "text": "$$\nA_{k k}+P_{k}=\\left\\{\\!\\!\\begin{array}{l l}{{r_{k}+\\sum_{j=1}^{m-1}S_{k j}\\leq2r_{k},}}&{{k=1,\\ldots,n}}\\\\ {{c_{k-n}+\\sum_{i=1}^{n}S_{i,k-n}\\leq2c_{k-n},}}&{{k=n+1,\\ldots,n+m-1}}\\end{array}\\!\\!.\\right.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Overall, we have $A_{k k}+P_{k}\\leq U:=2\\operatorname*{max}\\{\\|r\\|_{\\infty},\\|c\\|_{\\infty}\\}$ . By the Gershgorin circle theorem, every eigenvalue of $A$ must be smaller than or equal to the maximum value of $A_{k k}+P_{k}$ , which is upper bounded by $U<\\infty$ . ", "page_idx": 15}, {"type": "text", "text": "For some columns of $\\Delta$ , say, column $k$ , it may be the case that $\\Delta_{\\cdot k}\\,=\\,0$ , indicating that there is no thresholding on $T_{\\cdot k}$ . Note that if we simultaneously permute the columns of $T$ and $T_{\\delta}$ , then the eigenvalues of $A$ do not change. Therefore, without loss of generality we can assume that the first $d$ columns and the last column of $\\Delta$ are exactly zero, $0\\leq d\\leq m-1$ $\\backslash\\Delta_{\\cdot m}=0$ always holds by the Ahlagvoeri tshtrmic t1l)y.  pTohseitni vwe ee cleanm epnatrtsi.t iAonc $T_{\\delta}$ daisn $T_{\\delta}=[T^{(1)},T_{\\delta}^{(2)},T._{m}]$ ,e dw ahsere $T^{(1)}\\in\\mathbb{R}^{n\\times d}$ and $T.m\\in\\mathbb{R}^{n}$ $A$ ", "page_idx": 15}, {"type": "equation", "text": "$$\nA=\\left[\\!\\!\\begin{array}{c c c}{{\\!\\!\\mathrm{diag}(T\\mathbf{1}_{m})}}&{{T^{(1)}}}&{{T_{\\delta}^{(2)}}}\\\\ {{T^{(1)T}}}&{{\\!\\!\\mathrm{diag}(T^{(1)T}\\mathbf{1}_{n})}}&{{\\!\\!O}}\\\\ {{T_{\\delta}^{(2)T}}}&{{\\!\\!O}}&{{\\!\\!\\mathrm{diag}(T_{\\delta}^{(2)T}\\mathbf{1}_{n})}}\\end{array}\\!\\!\\right].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Consider the matrix $B=A-s v v^{T}$ , where $v\\in\\mathbb{R}^{n+m-1}$ is a vector whose first $(n+d)$ elements are ones and the remaining elements are zeros, and $s$ is a positive scalar. Define ", "page_idx": 15}, {"type": "equation", "text": "$$\nR_{k}=\\sum_{j\\neq k}|B_{k j}|,\\quad k=1,\\ldots,n+m-1,\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and suppose that $\\begin{array}{r}{s\\le\\operatorname*{min}_{1\\le i\\le n,1\\le j\\le d}T_{i j}}\\end{array}$ . Then for $k=1,\\dotsc,n$ , it is easy to find that ", "page_idx": 15}, {"type": "equation", "text": "$$\nR_{k}=(n-1)s+\\sum_{j=1}^{d}(S_{k j}-s)+\\sum_{j=d+1}^{m-1}S_{k j}=(n-d-1)s+\\sum_{j=1}^{m-1}S_{k j}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "For $k=n+1,\\ldots,n+d,$ , ", "page_idx": 15}, {"type": "equation", "text": "$$\nR_{k}=\\sum_{i=1}^{n}(T_{i,k-n}-s)+(d-1)s=\\sum_{i=1}^{n}T_{i,k-n}-(n-d+1)s.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "For $k=n+d+1,\\ldots,n+m-1$ , ", "page_idx": 15}, {"type": "equation", "text": "$$\nR_{k}=\\sum_{i=1}^{n}S_{i,k-n}=\\sum_{i=1}^{n}T_{i,k-n}-\\sum_{i=1}^{n}\\Delta_{i,k-n}<\\sum_{i=1}^{n}T_{i,k-n}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The inequality sign in (7) is strict, since we have assumed that at least one element of $\\Delta.{\\mathrm{,}}k{\\mathrm{-}}n$ is nonzero. Moreover, ", "page_idx": 15}, {"type": "equation", "text": "$$\nB_{k k}=\\left\\{\\!\\!\\begin{array}{l l}{\\sum_{j=1}^{m}T_{k j}-s,}&{k=1,\\ldots,n}\\\\ {\\sum_{i=1}^{n}T_{i,k-n}-s,}&{k=n+1,\\ldots,n+d}\\\\ {\\sum_{i=1}^{n}T_{i,k-n},}&{k=n+d+1,\\ldots,n+m-1}\\end{array}\\!,\\right.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "so overall we can obtain that ", "page_idx": 16}, {"type": "equation", "text": "$$\nB_{k k}-R_{k}=\\left\\{\\begin{array}{l l}{\\sum_{j=1}^{m-1}\\Delta_{k j}+T_{k m}-(n-d)s,}&{k=1,\\ldots,n}\\\\ {(n-d)s,}&{k=n+1,\\ldots,n+d}\\\\ {\\sum_{i=1}^{n}\\Delta_{i,k-n},}&{k=n+d+1,\\ldots,n+m-1}\\end{array}\\right..\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Now take ", "page_idx": 16}, {"type": "equation", "text": "$$\ns=\\frac{\\mathrm{min}_{1\\le i\\le n,1\\le j\\le m}\\,T_{i j}}{2n},\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and then we can verify that $s$ satisfies the condition $\\begin{array}{r}{s\\ \\leq\\ \\operatorname*{min}_{1\\leq i\\leq n,1\\leq j\\leq d}T_{i j}}\\end{array}$ . Moreover, for $k=1,\\dotsc,n$ , we have ", "page_idx": 16}, {"type": "equation", "text": "$$\nB_{k k}-R_{k}\\geq T_{k m}-n s=T_{k m}-\\frac{1}{2}\\cdot\\operatorname*{min}_{i,j}T_{i j}\\geq\\frac{1}{2}\\cdot\\operatorname*{min}_{i,j}T_{i j}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "For $k=n+1,\\ldots,n+d,$ ", "page_idx": 16}, {"type": "equation", "text": "$$\nB_{k k}-R_{k}=(n-d)s\\geq(n-m+1)s=\\frac{n-m+1}{2n}\\cdot\\operatorname*{min}_{i,j}T_{i j}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "For $k=n+d+1,\\ldots,n+m-1$ , since $\\Delta_{i,k-n}$ is either zero or $T_{i,k-n}$ , and at least one element of $\\Delta_{\\cdot,k-n}$ is nonzero, we then have ", "page_idx": 16}, {"type": "equation", "text": "$$\nB_{k k}-R_{k}=\\sum_{i=1}^{n}\\Delta_{i,k-n}\\geq\\operatorname*{min}_{1\\leq i\\leq n}T_{i,k-n}\\geq\\operatorname*{min}_{i,j}T_{i j}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Combining all the possibilities, we get ", "page_idx": 16}, {"type": "equation", "text": "$$\nB_{k k}-R_{k}\\geq L:={\\frac{n-m+1}{2n}}\\cdot\\operatorname*{min}_{i,j}T_{i j}>0\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "for all $k$ and $d$ . ", "page_idx": 16}, {"type": "text", "text": "By the Gershgorin circle theorem, every eigenvalue of $B$ must be greater than or equal to the minimum value of $B_{k k}-R_{k}$ , which is lower bounded by $L>0$ . Since $\\mathbf{\\dot{A}}=B+s v v^{T}$ and $v v^{T}$ is positive semi-definite, we have $\\sigma_{\\operatorname*{min}}(A)\\geq L>0$ , implying that $A$ is positive definite. ", "page_idx": 16}, {"type": "text", "text": "B.3 Proof of Theorem 3 ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We first introduce some necessary notation. Define the level set as $L(x_{0})=\\{x:f(x)\\leq f(x_{0})\\}$ , and let ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{f^{*}=\\operatorname*{inf}\\{f(x):x\\in L(x_{0})\\},}\\\\ &{\\beta_{1}=\\operatorname*{sup}\\{\\|g(x)\\|:x\\in L(x_{0})\\},}\\\\ &{\\beta_{2}=\\operatorname*{sup}\\{\\|H_{\\delta}(x)\\|:x\\in L(x_{0}),\\delta>0\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Define the function $\\Phi(x,d)=f(x+d)-f(x)-g(x)^{T}d$ . We then present a few technical lemmas, followed by the proof of the main theorem. ", "page_idx": 16}, {"type": "text", "text": "Lemma 6. $L(x_{0})$ is a bounded and closed convex set, $f^{*}>-\\infty,\\,\\beta_{1}<\\infty,$ , and $\\beta_{2}<\\infty$ ", "page_idx": 16}, {"type": "text", "text": "Proof. Clearly, $f(x)$ is a continuously differentiable and strictly convex function. Define $L_{c}=\\{x:$ $f(x)\\leq c\\}$ , and then $L_{c}$ is a closed convex set. ", "page_idx": 16}, {"type": "text", "text": "Lemma 1 of Dvurechensky et al. [10] shows that if $(\\alpha^{*},\\beta^{*})$ is an optimal solution to (3), then ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{j}\\beta_{j}^{*}-\\operatorname*{min}_{j}\\beta_{j}^{*}\\leq R,\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $R=\\|M\\|_{\\infty}/\\eta-\\log(\\operatorname*{min}_{i,j}\\{a_{i},b_{j}\\})$ . Since we have fixed $\\beta_{m}^{*}=0$ , we immediately obtain that $\\|\\beta^{*}\\|<\\infty$ . Given $\\beta^{*}$ , $\\alpha^{*}$ has a closed form, ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\alpha_{i}^{*}=\\eta\\log a_{i}-\\eta\\log\\left[\\sum_{j=1}^{m}e^{\\eta^{-1}(\\beta_{j}^{*}-M_{i j})}\\right],\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "so $\\|\\alpha^{*}\\|$ is also bounded. ", "page_idx": 17}, {"type": "text", "text": "Let $x^{*}=(\\alpha^{*T},\\tilde{\\beta}^{*T})^{T}$ and $f^{*}=f(x^{*})$ , and then clearly $f^{*}>-\\infty$ . Take $c=c^{*}=\\{f^{*}\\}$ , and obviously, $L_{c^{*}}$ is non-empty and bounded. Then Corollary 8.7.1 of [30] shows that $L_{c}$ is bounded for every $c$ , implying that $L(x_{0})=L_{f(x_{0})}$ is bounded. Since $g(x)$ is continuous on $L(x_{0})$ and $L(x_{0})$ is compact, it is easy to show that $\\beta_{1}<\\infty$ . ", "page_idx": 17}, {"type": "text", "text": "By Theorem 2, $\\|H_{\\delta}\\|=\\sigma_{\\operatorname*{max}}(H_{\\delta})\\leq2\\eta^{-1}\\cdot\\operatorname*{max}\\{\\|r\\|_{\\infty},\\|c\\|_{\\infty}\\}$ , where $r=T\\mathbf{1}_{m}$ and $c=T^{T}\\mathbf{1}_{n}$ . Clearly, every element of $T$ is bounded if $x$ is bounded, making $\\|r\\|_{\\infty}$ and $\\|c\\|_{\\infty}$ also bounded. As a result, $\\|H_{\\delta}\\|$ is bounded on $L(x_{0})$ , implying that $\\beta_{2}<\\infty$ . \u53e3 ", "page_idx": 17}, {"type": "text", "text": "Lemma 7. For any $\\varepsilon>0$ , there exists a constant $\\delta_{0}>0$ such that for all $\\eta\\in[c_{l},c_{u}].$ , $x\\in L(x_{0})$ , and $\\|p\\|\\leq\\delta_{0}$ satisfying $x+\\eta p\\in L(x_{0}),$ , we have ", "page_idx": 17}, {"type": "equation", "text": "$$\n|\\Phi(x,\\eta p)|\\leq\\frac{\\rho_{0}c_{l}\\varepsilon}{4}\\|p\\|.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. Since $f$ is continuously differentiable on $L(x_{0})$ , by the mean value theorem for multivariate functions, there exists some $\\psi\\in(0,1)$ such that for all $x\\in L(x_{0})$ and $x+\\eta p\\in L(x_{0})$ , ", "page_idx": 17}, {"type": "equation", "text": "$$\nf(x+\\eta p)-f(x)=g(x+\\psi\\eta p)^{T}(\\eta p).\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Therefore, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\Phi(x,\\eta p)=g(x+\\psi\\eta p)^{T}(\\eta p)-g(x)^{T}(\\eta p)=[g(x+\\psi\\eta p)-g(x)]^{T}(\\eta p).\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "By Lemma 6, $g$ is continuous on $L(x^{0})$ and $L(x^{0})$ is a compact set, so $g$ is uniformly continuous on $\\dot{L(x^{0})}$ . Therefore, for any $\\varepsilon>0$ , there exists a constant $\\delta_{0}>0$ such that whenever $\\|p\\|\\leq\\delta_{0}$ , we have ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\|g(x+\\psi\\eta p)-g(x)\\|\\leq\\frac{\\rho_{0}c_{l}\\varepsilon}{4c_{u}}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "As a result, ", "page_idx": 17}, {"type": "equation", "text": "$$\n|\\Phi(x,\\eta p)|\\leq\\|g(x+\\psi\\eta p)-g(x)\\|\\cdot\\|\\eta p\\|\\leq\\frac{\\rho_{0}c_{l}\\varepsilon}{4}\\|p\\|.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Lemma 8. Let $\\{x_{k}\\}$ be generated by Algorithm 2, and then ", "page_idx": 17}, {"type": "equation", "text": "$$\nm_{k}(0)-m_{k}(\\xi_{k}p_{k})\\geq\\frac12\\|g_{k}\\|\\cdot\\operatorname*{min}\\left\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\right\\}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. Let $f_{k}\\,=\\,f(\\boldsymbol{x}_{k})$ and $r_{k}\\,=\\,\\|\\xi_{k}p_{k}\\|$ . If we take $(p,\\lambda)\\,=\\,(\\xi_{k}p_{k},\\mu_{k}\\vert\\vert g_{k}\\vert\\vert)$ , and then we can verify that $(p,\\lambda)$ meets the following relations: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\left\\{\\begin{array}{r}{g_{k}+H_{\\delta_{k}}p+\\lambda p=0}\\\\ {\\lambda\\geq0}\\\\ {r_{k}-\\|p\\|\\geq0}\\\\ {\\lambda\\cdot\\left(r_{k}-\\|p\\|\\right)=0.}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "As $m_{k}(\\cdot)$ is a convex function, we have that $\\xi_{k}p_{k}$ is a KKT point and an optimal solution to the constrained optimization problem ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\displaystyle\\operatorname*{min}_{p}}&{{}m_{k}(p)=f_{k}+g_{k}^{T}p+\\frac{1}{2}p^{T}H_{\\delta_{k}p}}\\\\ {\\mathrm{s.t.}\\quad\\|p\\|\\leq r_{k}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Next, consider the Cauchy point defined in Chapter 4 of Nocedal and Wright [23], ", "page_idx": 17}, {"type": "equation", "text": "$$\np_{c}^{k}=-\\tau_{k}\\frac{r_{k}}{\\|g_{k}\\|}g_{k},\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\tau_{k}=\\left\\{\\!\\!\\begin{array}{l l}{1,}&{\\mathrm{if}\\;g_{k}^{T}H_{\\delta_{k}}g_{k}\\leq0}\\\\ {\\operatorname*{min}\\left\\{1,\\frac{\\Vert g_{k}\\Vert^{3}}{r_{k}g_{k}^{T}V_{k}g_{k}}\\right\\},}&{\\mathrm{if}\\;g_{k}^{T}H_{\\delta_{k}}g_{k}>0}\\end{array}\\!\\!.\\right.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Then we can obtain the following inequality by Lemma 4.3 of Nocedal and Wright [23]: ", "page_idx": 18}, {"type": "equation", "text": "$$\nm_{k}(0)-m_{k}(p_{c}^{k})\\geq\\frac{1}{2}\\|g_{k}\\|\\cdot\\operatorname*{min}\\left\\{r_{k},\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\right\\}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Meanwhile, the Cauchy point $p_{c}^{k}$ is a feasible point for the constrained problem (8), and $\\xi_{k}p_{k}$ is an optimal solution for this problem. Therefore, $m_{k}(p_{c}^{k})\\geq m_{k}(\\xi_{k}p_{k})$ , and we have ", "page_idx": 18}, {"type": "equation", "text": "$$\nm_{k}(0)-m_{k}(\\xi_{k}p_{k})\\geq\\frac{1}{2}\\|g_{k}\\|\\cdot\\operatorname*{min}\\left\\{r_{k},\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\right\\}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Lemma 9. Let $g_{k}$ and $\\mu_{k}$ be generated by Algorithm 2. If there exists a constant $\\varepsilon>0$ and an integer $K$ such that $\\|g_{k}\\|\\geq\\varepsilon$ for all $k\\geq K$ , then there must exist a sufficiently large constant $\\bar{\\mu}>0$ , such that $\\mu_{k+1}\\leq4\\bar{\\mu}$ for all $k\\geq K$ . ", "page_idx": 18}, {"type": "text", "text": "Proof. For a given $\\bar{\\mu}$ , define $I_{1}=\\{k:k\\geq K,\\mu_{k}<\\bar{\\mu}\\}$ and $I_{2}=\\{k:k\\geq K,\\mu_{k}\\geq\\bar{\\mu}\\}$ . If for some $\\bar{\\mu}$ , $I_{2}$ is finite, then it trivially holds that all $\\mu_{k}$ has a global upper bound, which leads to the desired conclusion. Therefore, we only consider the case that $I_{2}$ is infinite for all $\\bar{\\mu}>0$ . Since $\\bar{\\mu}$ can be chosen arbitrarily, $\\{\\mu_{k}\\}_{k\\in I_{2}}$ must be unbounded. ", "page_idx": 18}, {"type": "text", "text": "Then we will estimate the bound of the following quantity, ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\left|\\rho_{k}-1\\right|=\\left|\\frac{m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})}{m_{k}(0)-m_{k}(\\xi_{k}p_{k})}\\right|.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "According to Lemma 6, one has $\\|g_{k}\\|\\geq\\varepsilon$ and $\\|g_{k}\\|\\leq\\beta_{1}$ for $k\\geq K$ . Theorem 2 shows that $H_{\\delta_{k}}$ is positive definite, so ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\sigma_{\\operatorname*{min}}(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|)\\geq\\mu_{k}\\varepsilon,}\\\\ {\\|(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I)^{-1}\\|\\leq\\mu_{k}^{-1}\\varepsilon^{-1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "By Algorithm 2, we have ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\xi_{k}p_{k}=\\xi_{k}(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I)^{-1}g_{k},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "and hence for all $k\\in I_{2}$ , ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|\\xi_{k}p_{k}\\|\\leq\\xi_{k}\\left\\|(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I)^{-1}\\right\\|\\cdot\\|g_{k}\\|\\leq\\xi_{k}\\mu_{k}^{-1}\\varepsilon^{-1}\\beta_{1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Equation (9) indicates that $\\|\\xi_{k}p_{k}\\|$ , $k\\in I_{2}$ can be made arbitrarily small with a sufficiently large $\\bar{\\mu}$ . Therefore, we can choose some $\\bar{\\mu}$ such that ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\left\\|\\xi_{k}p_{k}\\right\\|\\leq\\operatorname*{min}\\left\\{\\delta_{0},\\frac{\\varepsilon}{\\beta_{2}},\\frac{\\rho_{0}c_{l}\\varepsilon}{2c_{u}\\beta_{2}}\\right\\},\\quad\\forall k\\in I_{2},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where $\\delta_{0}$ is defined in Lemma 7. Meanwhile, we know ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\vert m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})\\vert=\\bigg\\vert\\Phi(x_{k},\\xi_{k}p_{k})-\\frac{1}{2}(\\xi_{k}p_{k})^{T}H_{\\delta_{k}}(\\xi_{k}p_{k})\\bigg\\vert}&{}\\\\ {\\le\\vert\\Phi(x_{k},\\xi_{k}p_{k})\\vert+\\frac{1}{2}\\,\\vert\\vert H_{\\delta_{k}}(\\xi_{k}p_{k})\\vert\\vert\\cdot\\vert\\vert\\xi_{k}p_{k}\\vert\\vert}&{}\\\\ {\\le\\vert\\Phi(x_{k},\\xi_{k}p_{k})\\vert+\\frac{c_{u}}{2}\\vert\\vert H_{\\delta_{k}}\\vert\\vert\\cdot\\vert\\vert\\xi_{k}p_{k}\\vert\\vert\\cdot\\vert\\vert p_{k}\\vert\\vert.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Lemma 7 indicates that when $\\|\\xi_{k}p_{k}\\|\\leq\\delta_{0}$ , we have ", "page_idx": 18}, {"type": "equation", "text": "$$\n|\\Phi(x_{k},\\xi_{k}p_{k})|\\leq\\frac{\\rho_{0}c_{l}\\varepsilon}{4}\\|p_{k}\\|.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Therefore, with $p_{k}$ that satisfies (10), we obtain ", "page_idx": 18}, {"type": "equation", "text": "$$\n|m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})|\\leq\\frac{\\rho_{0}c_{l}\\varepsilon}{4}\\|p_{k}\\|+\\frac{c_{u}}{2}\\cdot\\beta_{2}\\cdot\\frac{\\rho_{0}c_{l}\\varepsilon}{2c_{u}\\beta_{2}}\\cdot\\|p_{k}\\|=\\frac{\\rho_{0}c_{l}\\varepsilon}{2}\\|p_{k}\\|.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "On the other hand, Lemma 8 indicates that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle m_{k}(0)-m_{k}(\\xi_{k}p_{k})\\geq\\frac{1}{2}\\|g_{k}\\|\\cdot\\operatorname*{min}\\bigg\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\bigg\\}}\\\\ {\\geq\\frac{1}{2}\\varepsilon\\cdot\\operatorname*{min}\\bigg\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\varepsilon}{\\beta_{2}}\\bigg\\}}\\\\ {\\displaystyle=\\frac{1}{2}\\varepsilon\\cdot\\|\\xi_{k}p_{k}\\|\\geq\\frac{c_{l}\\varepsilon}{2}\\cdot\\|p_{k}\\|,}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "so we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n|\\rho_{k}-1|=\\left|\\frac{m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})}{m_{k}(0)-m_{k}(\\xi_{k}p_{k})}\\right|\\leq\\frac{\\frac{\\rho_{0}c_{l}\\varepsilon}{2}\\|p_{k}\\|}{\\frac{c_{l}\\varepsilon}{2}\\cdot\\|p_{k}\\|}=\\rho_{0},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "which means that $\\rho_{k}\\ge1-\\rho_{0}$ for all $k\\in I_{2}$ . Then by the design of Algorithm 2, we have $\\mu_{k+1}\\leq\\mu_{k}$ for all $k\\in I_{2}$ . ", "page_idx": 19}, {"type": "text", "text": "Now we can show that $\\mu_{k+1}\\leq4\\bar{\\mu}$ for all $k\\geq K$ by induction. First, enlarge $\\bar{\\mu}$ when necessary to ensure that $\\bar{\\mu}>\\mu_{K}$ . Then by Algorithm 2, we must have $\\mu_{K+1}\\leq4\\bar{\\mu}$ . Now suppose that $\\mu_{l+1}\\leq4\\bar{\\mu}$ for some $l\\geq K$ . If $\\mu_{l+1}\\in I_{1}$ , then clearly $\\mu_{l+2}\\leq4\\bar{\\mu}$ immediately holds. Otherwise, $\\mu_{l+1}\\in I_{2}$ , so by the argument above, we have $\\mu_{l+2}\\leq\\mu_{l+1}\\leq4\\bar{\\mu}$ . In both cases, the conclusion holds. \u53e3 ", "page_idx": 19}, {"type": "text", "text": "Lemma 10. Under the same conditions as in Lemma 9, define ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r}{{\\mathcal K}=\\left\\{k:k\\geq K,\\rho_{k}\\geq\\rho_{0}\\right\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then $\\kappa$ must be a finite set. ", "page_idx": 19}, {"type": "text", "text": "Proof. We use proof by contradiction. Suppose that $\\kappa$ is an infinite set. Since ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\rho_{k}=\\frac{f(x_{k})-f(x_{k}+\\xi_{k}p_{k})}{m_{k}(0)-m_{k}(\\xi_{k}p_{k})},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "and note that $x_{k+1}=x_{k}$ if $\\rho_{k}<0$ , we have $f(x_{k+1})\\le f(x_{k}+\\xi_{k}p_{k})$ . Therefore, by Lemma 8, it holds that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{f(x_{k})-f(x_{k+1})\\geq\\rho_{0}[m_{k}(0)-m_{k}(\\xi_{k}p_{k})]\\geq\\frac{\\rho_{0}}{2}\\|g_{k}\\|\\cdot\\operatorname*{min}\\left\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\right\\}}\\\\ &{\\qquad\\qquad\\qquad\\geq\\frac{\\rho_{0}}{2}\\varepsilon\\cdot\\operatorname*{min}\\left\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\varepsilon}{\\beta_{2}}\\right\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "for all $k\\in\\mathcal{K}$ . Combined with Lemma 6, we find that $f(x_{k})$ is monotonically non-increasing with a lower bound, so $f(\\boldsymbol{x}_{k})$ has a limit, and hence ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{k\\in K,k\\to\\infty}\\|\\xi_{k}p_{k}\\|=0.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "On the other hand, $p_{k}=-(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I)^{-1}g_{k}$ , which means that $g_{k}=-(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|)p_{k}$ . Therefore, ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\varepsilon\\leq\\|g_{k}\\|=\\|(H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I)p_{k}\\|\\leq\\|H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|\\|\\cdot\\|p_{k}\\|}\\\\ {\\quad\\leq[\\|H_{\\delta_{k}}\\|+\\mu_{k}\\|g_{k}\\|]\\cdot\\|p_{k}\\|\\leq(\\beta_{2}+\\mu_{k}\\beta_{1})\\cdot\\frac{1}{c_{l}}\\cdot\\|\\xi_{k}p_{k}\\|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "In other words, ", "page_idx": 19}, {"type": "equation", "text": "$$\n0\\leq\\frac{c_{l}\\varepsilon}{\\beta_{2}+\\mu_{k}\\beta_{1}}\\leq\\|\\xi_{k}p_{k}\\|\\rightarrow0,\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "which implies that $\\mu_{k}\\rightarrow\\infty$ for $k\\in\\mathcal{K}$ , $k\\rightarrow\\infty$ . This contradicts with the fact that $\\mu_{k}\\le4\\bar{\\mu}$ as shown in Lemma 9. So to conclude, $\\kappa$ must be a finite set. \u53e3 ", "page_idx": 19}, {"type": "text", "text": "Lemma 11. Let $\\{x_{k}\\}$ be generated by Algorithm 2. Then either Algorithm 2 terminates in finite iterations, or $g(x_{k})$ satisfies ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{k\\to\\infty}\\!\\|g(x_{k})\\|=0.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Proof. We prove this lemma by contradiction. Suppose that there exist some $\\varepsilon>0$ and an integer $K$ such that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\|g_{k}\\|>\\varepsilon,\\quad\\forall k\\geq K.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Then Lemma 10 implies that the index set ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mathcal{K}=\\left\\{k:k\\geq K,\\rho_{k}\\geq\\rho_{0}\\right\\}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "is infinite. This means that there is a sufficiently large integer $K^{\\prime}$ such that $\\rho_{k}<\\rho_{0}$ for all $k\\ge K^{\\prime}$ . According to Algorithm 2, we must have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mu_{k+1}=4\\mu_{k},\\quad\\forall k\\geq K^{\\prime},\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "which means that $\\mu_{k}\\to\\infty$ . However, this contradicts with the fact that $\\mu_{k}\\leq4\\bar{\\mu}$ for some $\\bar{\\mu}>0$ as shown in Lemma 9. Therefore, we must have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{k\\to\\infty}\\operatorname*{inf}\\left\\|g_{k}\\right\\|=0.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Then we are ready to prove Theorem 3. Let $x^{*}$ be the unique global optimum of (4). Clearly, $f(x)$ and $g(x)$ are Lipschitz continuous on $L(x_{0})$ , so there exist constants $C_{1},C_{2}>0$ such that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r}{|f(x_{k})-f(x^{*})|\\leq C_{1}\\|x_{k}-x^{*}\\|,}\\\\ {\\|g(x_{k})-g(x^{*})\\|\\leq C_{2}\\|x_{k}-x^{*}\\|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "On the other hand, by taking $\\delta=0$ , Theorem 2 shows that there is a constant $c_{1}\\,>\\,0$ such that $\\sigma_{\\operatorname*{min}}(H(x))\\geq c_{1}$ for all $x\\in L(x_{0})$ , so there is a constant $c_{2}>0$ such that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\|g(x_{k})\\|=\\|g(x_{k})-g(x^{*})\\|\\geq c_{2}\\|x_{k}-x^{*}\\|.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Also by Taylor\u2019s theorem, ", "page_idx": 20}, {"type": "equation", "text": "$$\nf(x_{k})=f(x^{*})+[g(x^{*})]^{T}(x_{k}-x^{*})+\\frac{1}{2}(x_{k}-x^{*})^{T}H(z_{1})(x_{k}-x^{*}),\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where $z$ is some point between $x_{k}$ and $x^{*}$ . Since $g(x^{*})=0$ , we obtain ", "page_idx": 20}, {"type": "equation", "text": "$$\nf(x_{k})-f(x^{*})\\geq{\\frac{c_{1}}{2}}\\|x_{k}-x^{*}\\|^{2}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "By the design of Algorithm 2, $f(x_{k})$ is non-increasing and is lower bounded by $f^{*}=f(x^{*})$ , so $f(x_{k})$ must have a limit. Suppose that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{k\\to\\infty}|f(x_{k})-f^{*}|=\\varepsilon\\geq0,\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "and then (11) and (13) indicate that for sufficiently large $k$ , ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\frac{1}{2}}C_{1}^{-1}\\varepsilon\\leq C_{1}^{-1}|f(x_{k})-f(x^{*})|\\leq\\|x_{k}-x^{*}\\|\\leq c_{2}^{-1}\\|g(x_{k})\\|.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Since in Lemma (11) we have shown that $\\operatorname*{lim}\\operatorname*{inf}_{k\\to\\infty}\\left\\|g_{k}\\right\\|=0$ , $\\varepsilon$ cannot be any positive value. Therefore, $\\varepsilon=0$ . Combining (12) and (14), we have ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\frac{c_{1}}{2C_{2}^{2}}}\\|g_{k}\\|^{2}\\leq{\\frac{c_{1}}{2}}\\|x_{k}-x^{*}\\|^{2}\\leq f(x_{k})-f(x^{*})\\rightarrow\\varepsilon=0,\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "which implies that $\\begin{array}{r}{\\operatorname*{lim}_{k\\rightarrow\\infty}\\left\\|g_{k}\\right\\|=0}\\end{array}$ and $\\begin{array}{r}{\\operatorname*{lim}_{k\\rightarrow\\infty}\\|x_{k}-x^{*}\\|=0}\\end{array}$ . ", "page_idx": 20}, {"type": "text", "text": "B.4 Proof of Theorem 4 ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "For convenience, let $H_{k}=H(x_{k})$ and $B_{k}=H_{\\delta_{k}}+\\mu_{k}\\|g_{k}\\|I$ . Theorem 2 shows that for any $\\delta$ , ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\sigma_{\\operatorname*{min}}(H_{\\delta})\\geq\\eta^{-1}\\cdot\\frac{n-m+1}{2n}\\cdot\\operatorname*{min}_{i,j}T_{i j}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Note that ", "page_idx": 20}, {"type": "equation", "text": "$$\nT=\\tau(\\alpha,\\beta)=\\left(e^{\\eta^{-1}(\\alpha_{i}+\\beta_{j}-M_{i j})}\\right),\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "and each $(\\alpha_{i}+\\beta_{j})$ is bounded on $L(x_{0})$ , so each element of $T$ must be bounded below from zero on $L(x_{0})$ . Therefore, there exists a constant $0\\,<\\,C_{1}\\,<\\,\\infty$ such that $\\sigma_{\\operatorname*{min}}(H_{\\delta})\\,\\geq\\,C_{1}^{-1}$ for all $x\\in L(x_{0})$ . ", "page_idx": 21}, {"type": "text", "text": "By the design of Algorithm 2, $x_{k}\\in L(x_{0})$ for all $k$ . As a result, ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\|B_{k}^{-1}\\|=[\\sigma_{\\operatorname*{min}}(B_{k})]^{-1}\\leq[\\sigma_{\\operatorname*{min}}(H_{\\delta_{k}})]^{-1}\\leq C_{1},\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "and hence $\\|p_{k}\\|\\,=\\,\\|B_{k}^{-1}g_{k}\\|\\,\\leq\\,C_{1}\\|g_{k}\\|$ for all $k$ . Moreover, Theorem 2 shows that $\\|H_{\\delta_{k}}\\|\\;=$ $\\sigma_{\\operatorname*{max}}(H_{\\delta_{k}})\\leq\\dot{C}_{2}$ for some $C_{2}>0$ , so by Lemma 8, we have ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{m_{k}(0)-m_{k}(\\xi_{k}p_{k})\\geq\\displaystyle\\frac{1}{2}\\|g_{k}\\|\\cdot\\operatorname*{min}\\bigg\\{\\|\\xi_{k}p_{k}\\|,\\frac{\\|g_{k}\\|}{\\|H_{\\delta_{k}}\\|}\\bigg\\}}\\\\ &{\\qquad\\qquad\\qquad\\geq\\displaystyle\\frac{1}{2C_{1}}\\|p_{k}\\|\\cdot\\operatorname*{min}\\bigg\\{c_{l}\\|p_{k}\\|,\\frac{\\|p_{k}\\|}{C_{1}C_{2}}\\bigg\\}}\\\\ &{\\qquad\\qquad\\qquad\\geq\\displaystyle\\frac{\\operatorname*{min}\\{c_{l},C_{1}^{-1}C_{2}^{-1}\\}}{2C_{1}}\\cdot\\|p_{k}\\|^{2}:=C_{3}\\|p_{k}\\|^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "On the other hand, ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{|m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})|=\\bigg|f(x_{k}+\\xi_{k}p_{k})-f(x_{k})-g_{k}^{T}(\\xi_{k}p_{k})-\\frac{1}{2}(\\xi_{k}p_{k})^{T}H_{\\delta_{k}}(\\xi_{k}p_{k})^{T}\\bigg|}}\\\\ &{}&{\\leq\\bigg|f(x_{k}+\\xi_{k}p_{k})-f(x_{k})-g_{k}^{T}(\\xi_{k}p_{k})-\\frac{1}{2}(\\xi_{k}p_{k})^{T}H_{k}(\\xi_{k}p_{k})^{T}\\bigg|}\\\\ &{}&{\\qquad+\\left|\\frac{1}{2}(\\xi_{k}p_{k})^{T}(H_{k}-H_{\\delta_{k}})(\\xi_{k}p_{k})^{T}\\right|.\\qquad}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "By Taylor\u2019s theorem, ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\left|f(x_{k}+\\xi_{k}p_{k})-f(x_{k})-g_{k}^{T}(\\xi_{k}p_{k})-\\frac{1}{2}(\\xi_{k}p_{k})^{T}H_{k}(\\xi_{k}p_{k})^{T}\\right|=o(\\|\\xi_{k}p_{k}\\|^{2}).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "For the second term of (16), let $D_{k}=H_{k}-H_{\\delta_{k}}$ , and then Theorem 1 shows that $\\lVert D_{k}\\rVert\\leq\\eta^{-1}\\delta_{k}$ . By Algorithm 2, $\\delta_{k}\\leq\\nu_{0}\\|g_{k}\\|^{\\gamma}$ , so $\\begin{array}{r}{\\|H_{k}-H_{\\delta_{k}}\\|\\stackrel{\\cdot\\cdot}{\\le}\\eta^{-1}\\nu_{0}\\|g_{k}\\|^{\\gamma}}\\end{array}$ . Then ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\left|\\frac{1}{2}(\\xi_{k}p_{k})^{T}(H_{k}-H_{\\delta_{k}})(\\xi_{k}p_{k})^{T}\\right|\\leq\\frac{\\nu_{0}}{2\\eta}\\|g_{k}\\|^{\\gamma}\\cdot\\|\\xi_{k}p_{k}\\|^{2}=o(\\|\\xi_{k}p_{k}\\|^{2}).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "As a result, $|m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})|=o(\\|\\xi_{k}p_{k}\\|^{2})$ , and hence ", "page_idx": 21}, {"type": "equation", "text": "$$\n|\\rho_{k}-1|=\\left|\\frac{m_{k}(\\xi_{k}p_{k})-f(x_{k}+\\xi_{k}p_{k})}{m_{k}(0)-m_{k}(\\xi_{k}p_{k})}\\right|\\leq\\frac{o(\\|\\xi_{k}p_{k}\\|^{2})}{C_{3}\\|p_{k}\\|^{2}}\\rightarrow0.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "This implies that there is an integer $K>0$ such that for all $k\\geq K$ , $\\rho_{k}\\geq1-\\rho_{0}$ . By the design of Algorithm (2), we have $\\mu_{k+1}\\leq\\kappa$ and $x_{k+1}=x_{k}+\\xi_{k}p_{k}$ for all $k\\geq K$ . ", "page_idx": 21}, {"type": "text", "text": "B.5 Proof of Theorem 5 ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We first present a classical result derived from the mean value theorem of vector-valued functions. Lemma 12 (Theorem 3.2.12 of [25]). Let $g:D\\subset\\mathbb{R}^{n}\\rightarrow\\mathbb{R}^{m}$ be continuously differentiable on $a$ convex set $D_{0}\\subset D$ and suppose that for constants $\\alpha\\geq0$ and $p\\geq0$ , $\\nabla g$ satisfies ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\|\\nabla g(u)-\\nabla g(v)\\|\\leq\\alpha\\|u-v\\|^{p},\\quad\\forall u,v\\in D_{0}.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Then, for any $x,y\\in D_{0}$ , ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|g(y)-g(x)-\\nabla g(x)(y-x)\\|\\leq[\\alpha/(p+1)]\\cdot\\|y-x\\|^{p+1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Then we are ready to prove Theorem 5. Let $x^{*}$ be the unique global optimum of (4), and then $g(x^{*})\\,=\\,0$ . Clearly, $g(x)$ and $H(x)$ are Lipschitz continuous on $L(x_{0})$ , so there exist constants $L_{1},L_{2}>0$ such that for all $x,y\\in L(x_{0})$ , ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|g(x)-g(y)\\|\\leq L_{1}\\|x-y\\|,}\\\\ {\\|H(x)-H(y)\\|\\leq L_{2}\\|x-y\\|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "This implies that $g$ satisfies the conditions in Lemma 12 with $\\alpha=L_{2}$ and $p=1$ . By substituting $x\\gets x_{k}$ and $y\\gets x^{*}$ , we have ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\|g(x_{k})\\|=\\|g(x_{k})-g(x^{*})\\|\\leq L_{1}\\|x_{k}-x^{*}\\|,}\\\\ {|g(x^{*})-g(x_{k})-H(x_{k})(x^{*}-x_{k})\\|=\\|g(x_{k})-g(x^{*})-H(x_{k})(x_{k}-x^{*})\\|\\leq\\displaystyle\\frac{1}{2}L_{2}\\|x_{k}-x^{*}\\|^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Without loss of generality let $K^{\\prime}>K$ , and then for all $k\\geq K^{\\prime},\\mu_{k}\\leq\\kappa$ and $x_{k+1}=x_{k}+p_{k}$ . In the proof of Theorem 5, we have shown that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|H_{k}-H_{\\delta_{k}}\\|\\leq\\eta^{-1}\\nu_{0}\\|g_{k}\\|^{\\gamma},}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "so for $\\|g_{k}\\|\\leq1$ , ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\|H_{k}-B_{k}\\|\\leq\\|H_{k}-H_{\\delta_{k}}\\|+\\mu_{k}\\|g_{k}\\|\\leq(\\eta^{-1}\\nu_{0}+\\kappa)\\|g_{k}\\|\\leq L_{1}(\\eta^{-1}\\nu_{0}+\\kappa)\\|x_{k}-x^{*}\\|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Also note that $\\|B_{k}^{-1}\\|\\leq C_{1}$ from (15), and then we have ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\|x_{k+1}-x^{*}\\|=\\|x_{k}+p_{k}-x^{*}\\|=\\|x_{k}-x^{*}-B_{k}^{-1}g_{k}\\|}&{}\\\\ {=\\|B_{k}^{-1}(B_{k}(x_{k}-x^{*})-g_{k})\\|}\\\\ &{\\leq\\|B_{k}^{-1}\\|\\cdot\\|g_{k}-g(x^{*})-H_{k}(x_{k}-x^{*})+H_{k}(x_{k}-x^{*})-B_{k}(x_{k}-x^{*})\\|}\\\\ {\\leq C_{1}(\\|g_{k}-g(x^{*})-H_{k}(x_{k}-x^{*})\\|+\\|(H_{k}-B_{k})(x_{k}-x^{*})\\|)}\\\\ {\\leq C_{1}\\left(\\frac{1}{2}L_{2}\\|x_{k}-x^{*}\\|^{2}+\\|H_{k}-B_{k}\\|\\cdot\\|x_{k}-x^{*}\\|\\right)}\\\\ &{\\leq C_{1}\\left(\\frac{1}{2}L_{2}\\|x_{k}-x^{*}\\|^{2}+L_{1}(\\eta^{-1}\\nu_{0}+\\kappa)\\|x_{k}-x^{*}\\|^{2}\\right)}\\\\ &{=C_{1}\\left(\\frac{1}{2}L_{2}+L_{1}(\\eta^{-1}\\nu_{0}+\\kappa)\\right)\\|x_{k}-x^{*}\\|^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have provided detailed theoretical analyses and numerical experiments to support the claims made in the abstract. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 23}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have mentioned in the conclusion part that our proposed method relies on the approximate sparsity of the transport plan. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 23}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have clearly listed the assumptions of each theorem, and have provided the proof in the appendix. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 24}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: We have provided the code to reproduce the experiments in the article. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 24}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: All datasets used are publicly available, and we have provided the programming code. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/ guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 25}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 25}, {"type": "text", "text": "Justification: The detailed settings are reflected in the main article as well as the programming code. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 25}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: This article is mostly concerned with the optimization convergence properties instead of statistical uncertainties. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified. ", "page_idx": 25}, {"type": "text", "text": "\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates). \u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 26}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We have provided the details in Appendix A.1. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 26}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: This research does not involve human subjects, and there is no clear harmful consequence of the output of this work. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 26}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: This article is mostly a theoretical and computational work Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. ", "page_idx": 26}, {"type": "text", "text": "\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA]   \nJustification: This paper does not pose such risks. Guidelines:   \n\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We have cited the original papers that provide the datasets. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 27}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We do not release new assets. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 27}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: This article does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 28}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: This article does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 28}]