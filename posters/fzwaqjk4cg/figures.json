[{"figure_path": "FzwAQJK4CG/figures/figures_3_1.jpg", "caption": "Figure 1: (a) Example ANF formula graph from MQ problem; (b) The transformations to express the circular left shifts (\u226a), circular right shifts (\u226b), modular addition (\u7530), bitwise XOR (+), and bitwise AND (\u00b7) operations in ANF.", "description": "This figure illustrates two key aspects of the paper's approach. (a) shows how an example multi-variate quadratic (MQ) problem is represented as a graph based on the algebraic normal form (ANF).  This is a key contribution of the paper, showing how the ANF representation can be more efficient and effective than the traditional conjunctive normal form (CNF) in representing cryptographic problems for machine learning. (b) demonstrates how common operations in cryptography, like circular shifts, modular addition, XOR, and AND, can be transformed into their ANF equivalents, enabling their efficient encoding in the graph representation used by CryptoANFNet.", "section": "4 Model"}, {"figure_path": "FzwAQJK4CG/figures/figures_6_1.jpg", "caption": "Figure 2: The pipeline of the key-solving algorithm. Given a plaintext-ciphertext pair and an encryption algorithm, we first transform them into an ANF-based instance of an MQ problem. Then, for a specific key bit Ki (the i-th bit of key), we guess its value as either 0 or 1 and generate two derived SAT instances. We then employ CryptoANFNet to predict the satisfiability of each instance. The final determination of Ki is based on which instance receives a higher satisfiability score.", "description": "This figure illustrates the key-solving algorithm's workflow.  It starts with a plaintext-ciphertext pair and the encryption algorithm.  These are used to generate an Arithmetic Normal Form (ANF) representation of the problem.  Then, for each bit in the key, two versions of the ANF are created: one assuming the bit is 0 and one assuming it is 1.  These ANFs are fed into CryptoANFNet, which predicts their satisfiability.  The bit's value is decided by which ANF gets a higher satisfiability score.", "section": "4.4 Key-solving Algorithm"}, {"figure_path": "FzwAQJK4CG/figures/figures_12_1.jpg", "caption": "Figure 3: (a) A example ANF formula for changing the original ANF formula to a formula without AND operation; (b) Example ANF formula graph focusing on second-order literals", "description": "This figure illustrates two ways to represent ANF formulas as graphs.  (a) Shows how to transform an ANF formula with AND operations into an equivalent ANF formula without them by introducing new variables (U1, U2, etc.) and additional constraints to maintain the logical equivalence.  (b) Presents a graph representation focusing only on second-order literals (terms with two variables multiplied together). This representation simplifies the graph by treating second-order literals as new, independent literals.  Both illustrate different strategies for constructing ANF-based graphs for improved learning efficiency within the CryptoANFNet model.", "section": "4 Model"}]