[{"type": "text", "text": "Mixture of Experts Meets Prompt-Based Continual Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Minh Le3 An Nguyen2\u2217 Huy Nguyen1\u2217 Trang Nguyen3\u2217 Trang Pham3\u2217 Linh Van Ngo2 Nhat Ho1 ", "page_idx": 0}, {"type": "text", "text": "1 The University of Texas at Austin 2 Hanoi University of Science and Technology 3 VinAI Research ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Exploiting the power of pre-trained models, prompt-based approaches stand out compared to other continual learning solutions in effectively preventing catastrophic forgetting, even with very few learnable parameters and without the need for a memory buffer. While existing prompt-based continual learning methods excel in leveraging prompts for state-of-the-art performance, they often lack a theoretical explanation for the effectiveness of prompting. This paper conducts a theoretical analysis to unravel how prompts bestow such advantages in continual learning, thus offering a new perspective on prompt design. We first show that the attention block of pre-trained models like Vision Transformers inherently encodes a special mixture of experts architecture, characterized by linear experts and quadratic gating score functions. This realization drives us to provide a novel view on prefix tuning, reframing it as the addition of new task-specific experts, thereby inspiring the design of a novel gating mechanism termed Non-linear Residual Gates (NoRGa). Through the incorporation of non-linear activation and residual connection, NoRGa enhances continual learning performance while preserving parameter efficiency. The effectiveness of NoRGa is substantiated both theoretically and empirically across diverse benchmarks and pretraining paradigms. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Humans possess a remarkable ability to learn continuously by integrating new skills and knowledge while retaining past experiences. However, current AI models often fail to retain this ability. Unlike humans, they often suffer from catastrophic forgetting [28, 30, 32, 38], a phenomenon where they struggle to retain knowledge from previous tasks while learning new ones. Inspired by human learning, Continual Learning [2, 28, 43, 1, 12] is an ongoing field that aims to train a model across a sequence of tasks while mitigating this challenge. Traditional continual learning methods often rely on storing past data for fine-tuning, which can raise concerns about memory usage and privacy [5, 39, 51]. To address these limitations, prompt-based approaches have emerged as a promising alternative within rehearsal-free continual learning. By attaching prompts - small sets of learnable parameters - to a frozen pre-trained model, these approaches enable efficient adaptation to new tasks with minimal modifications to the underlying model [56, 26, 61]. The effectiveness of prompt-based methods has been demonstrated by several recent works achieving state-of-the-art performance on various continual learning benchmarks [49, 53, 54]. ", "page_idx": 0}, {"type": "text", "text": "While prompt-based methods have demonstrably achieved impressive results, their emphasis largely lies on prompt utility, leaving a gap in our theoretical comprehension of their effectiveness. This absence of a theoretical foundation hinders our ability to further refine and optimize these methods. In this work, we offer a new perspective by focusing on prefix tuning [26] and its connection to mixture of experts models [19, 15, 13, 11]. We demonstrate that self-attention blocks in Vision Transformers [8] implicitly encode a special mixture of experts architecture, revealing a surprising connection between these seemingly disparate concepts. Leveraging this connection, we propose that applying prefix tuning within pre-trained models can be interpreted as introducing new experts. The newly introduced experts collaborate with the pre-trained experts, facilitating efficient adaptation of the model to new tasks. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Drawing insights from this analysis, we observe that the original prefix tuning suffers from suboptimal sample efficiency, requiring a substantial amount of data for reasonable parameter estimation. To address this challenge, we propose a novel gating mechanism termed Non-linear Residual Gates (NoRGa). This architecture integrates non-linear activation functions and residual connections within the gating score functions. Our work focuses on improving within-task prediction accuracy, a key component of continual learning performance as identified in previous research [22, 49]. We posit that NoRGa can enhance this aspect, which contributes to improved overall continual learning performance while maintaining parameter efficiency. We further provide theoretical justification for this improvement, demonstrating how NoRGa accelerates parameter estimation rates. ", "page_idx": 1}, {"type": "text", "text": "Our contributions can be summarized as follows: (1) We reveal a novel connection between self-attention and a mixture of experts, providing a fresh perspective on prompt-based continual learning approaches; (2) Leveraging this insight, we propose Non-linear Residual Gates (NoRGa), an innovative gating mechanism that enhances continual learning performance while maintaining parameter efficiency, and provide a theoretical justification for this improvement; (3) Extensive experiments across various continual learning benchmarks and pre-training settings demonstrate that our approach achieves state-of-the-art performance compared to existing methods. ", "page_idx": 1}, {"type": "text", "text": "Notation. For any $n\\in\\mathbb N$ , we denote $[n]$ as the set $\\{1,2,\\ldots,n\\}$ . Next, for any set $S$ , we let $|S|$ stand for its cardinality. For any vector $u:=(u_{1},u_{2},\\ldots,u_{d})\\in\\mathbb{R}^{d}$ and $\\alpha:=(\\alpha_{1},\\alpha_{2},\\dots,\\alpha_{d})\\in\\mathbb{N}^{d}$ , we let $u^{\\alpha}=u_{1}^{\\alpha_{1}}u_{2}^{\\alpha_{2}}\\cdot\\cdot\\cdot u_{d}^{\\alpha_{d}}$ , $|u|:=u_{1}\\!+\\!u_{2}\\!+\\!\\ldots\\!+\\!u_{d}$ and $\\alpha!:=\\alpha_{1}!\\alpha_{2}!\\ldots\\alpha_{d}!$ , while $\\lVert u\\rVert$ stands for its 2-norm value. Lastly, for any two positive sequences $\\{a_{n}\\}_{n\\ge1}$ and $\\{b_{n}\\}_{n\\ge1}$ , we write $a_{n}=\\mathcal{O}(b_{n})$ or $a_{n}\\lesssim b_{n}$ if $a_{n}\\leq C b_{n}$ for all $n\\,\\in\\,\\mathbb{N}$ , where $C>0$ is some universal constant. The notation $a_{n}=\\mathcal{O}_{P}(b_{n})$ indicates that $a_{n}/b_{n}$ is stochastically bounded. ", "page_idx": 1}, {"type": "text", "text": "2 Background and Related Works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We first provide background and related works on continual learning. Then, we define the attention mechanism, followed by discussions on prompt-based continual learning and mixture of experts. ", "page_idx": 1}, {"type": "text", "text": "Continual Learning (CL) addresses the challenge of training a model incrementally on a sequence of $T$ tasks, denoted by $\\mathcal{D}=\\{\\mathcal{D}_{1},...,\\mathcal{D}_{T}\\}$ . Each task\u2019s training data $\\mathcal{D}_{t}=\\{(\\pmb{x}_{i}^{(t)},y_{i}^{(\\bar{t})})\\}_{i=1}^{N_{t}}$ contains pairs of input sample $\\pmb{x}_{i}^{(t)}\\in\\mathcal{X}^{(t)}$ , and corresponding label $y_{i}^{(t)}\\in\\mathcal{V}^{(t)}$ . Notably, the class labels are distinct for each task, i.e., $\\mathcal{V}^{(t)}\\bigcap\\mathcal{V}^{(t^{\\prime})}=\\emptyset,\\forall t\\neq t^{\\prime}$ . Consider a neural network with a backbone function $f_{\\theta}$ and an output layer $h_{\\psi}$ . The model predicts a label $\\begin{array}{r}{\\hat{y}=h_{\\psi}(f_{\\theta}(\\mathbf x))\\in\\mathcal{Y}=\\bigcup_{t=1}^{T}\\mathcal{Y}^{(t)}}\\end{array}$ , where $\\begin{array}{r}{\\pmb{x}\\in\\mathcal{X}=\\bigcup_{t=1}^{T}\\mathcal{X}^{(t)}}\\end{array}$ is an unseen test sample from arbitrary tasks. Importantly, during training on a new task, th e model can only access the current data, without access to data from previous tasks. Prior approaches often rely on storing past task samples for training on new tasks, raising concerns regarding storage and privacy [5, 6, 39, 51, 59]. ", "page_idx": 1}, {"type": "text", "text": "Our work focuses on the class-incremental learning (CIL) setting, where task identities are not provided during inference, unlike in task-incremental learning (TIL) [46]. A recent theory by [22] analyzes the CIL objective by decomposing the probability of a test sample $\\textbf{\\em x}$ of the $j$ -th class in task $t$ into two probabilities: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\begin{array}{r}{P(\\pmb{x}\\in\\mathcal{X}_{j}^{(t)}|\\mathcal{D})=P(\\pmb{x}\\in\\mathcal{X}_{j}^{(t)}|\\pmb{x}\\in\\mathcal{X}^{(t)},\\mathcal{D})P(\\pmb{x}\\in\\mathcal{X}^{(t)}|\\mathcal{D}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where the first term involves within-task prediction (WTP) and the second term pertains to taskidentity inference (TII). This equation highlights that by improving either the WTP performance or the TII, we can consequently improve the overall CIL performance, as shown in [22, 49]. ", "page_idx": 1}, {"type": "text", "text": "Attention Mechanism. Within the Transformer architecture, the attention mechanism plays a crucial role. One prevalent variant is scaled dot-product attention[47], formally defined as follows: ", "page_idx": 1}, {"type": "text", "text": "Definition 2.1 (Scaled Dot-Product Attention). Let ${\\cal K}\\in\\mathbb{R}^{N\\times d_{k}}$ be a key matrix with $N$ key vectors, and $V\\,\\in\\,\\mathbb{R}^{N\\times d_{v}}$ be a value matrix with $N$ corresponding value vectors. Given a query matrix $Q\\in\\mathbb{R}^{M\\times d_{k}}$ , Attention over $(K,V)$ is defined as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathrm{Attention}(Q,K,V)=\\mathrm{softmax}(\\frac{Q K^{\\top}}{\\sqrt{d_{k}}})V\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the softmax function acts on the rows of matrix $Q K^{\\top}\\in\\mathbb{R}^{M\\times N}$ . ", "page_idx": 2}, {"type": "text", "text": "Vision Transformer (ViT) [8] employs the same attention mechanism within multiple Multi-head Self-Attention (MSA) layers, which is formally defined as follows: ", "page_idx": 2}, {"type": "text", "text": "Definition 2.2 (Multi-head Self-Attention Layer). Let $X^{Q},X^{K},X^{V}$ denote the input query, key, and value matrix, respectively, where $X^{Q}=\\mathbf{\\dot{X}}^{K}=X^{V}=[\\pmb{x}_{1},...,\\pmb{x}_{N}]^{\\top}\\in\\mathbb{R}^{N\\times d}$ , and $N$ is the length of the input sequence. The output is expressed as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\operatorname{MSA}(X^{Q},X^{K},\\grave{X}^{V}):=\\mathrm{\\dot{Concat}}(h_{1},...,h_{m})W^{O}\\in\\mathbb{R}^{N\\times d}}\\\\ &{h_{i}:=\\mathrm{Attention}(X^{Q}W_{i}^{Q},X^{K}W_{i}^{K},X^{V}W_{i}^{V}),\\;i\\in[m].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $W^{O}\\in\\mathbb{R}^{m d_{v}\\times d},W_{i}^{Q}\\in\\mathbb{R}^{d\\times d_{k}},W_{i}^{K}\\in\\mathbb{R}^{d\\times d_{k}}$ , and $W_{i}^{V}\\in\\mathbb{R}^{d\\times d_{v}}$ are projection matrices, and $m$ is the number of heads in the MSA layer. In ViTs, they use $d_{k}=d_{v}=d/m$ . ", "page_idx": 2}, {"type": "text", "text": "Prompt-based continual learning. Prompt-based approaches have emerged as a promising alternative within rehearsal-free continual learning [61, 52, 44]. In vision tasks, prompt-based methods often leverage a pre-trained ViT as a feature extractor $f_{\\theta}$ , with its parameters $\\theta$ typically frozen. These methods enhance the model by introducing prompts, small sets of learnable parameters that influence the operations of the MSA layer [53]. Prompts are strategically injected into the query, key, and value matrices to guide the ViT in learning new tasks. We denote the prompt parameters by $\\dot{\\mathbf{p}}\\in\\mathbb{R}^{L_{p}\\times d}$ , where $L_{p}$ is the sequence length and $d$ is the embedding dimension. Previous work [53] outlines two main prompt-based approaches: Prompt Tuning (ProT) [25] and Prefix Tuning (PreT) [26]. While Prompt Tuning directly concatenates the same prompt parameter $\\textbf{\\emph{p}}$ to the query, key, and value, prefix tuning divides $\\pmb{p}$ into prefixes $\\{p^{K},p^{V}\\}\\in\\mathbb{R}^{\\frac{\\bar{L}_{p}}{2}\\times d}$ and appends it to the key and value vectors: ", "page_idx": 2}, {"type": "equation", "text": "$$\nf_{\\mathrm{prompt}}^{\\mathrm{Pre-T}}(\\boldsymbol{p},\\boldsymbol{X}^{Q},\\boldsymbol{X}^{K},\\boldsymbol{X}^{V}):=\\mathrm{MSA}\\left(\\boldsymbol{X}^{Q},\\left[\\boldsymbol{\\underline{{p}}}^{K}\\right],\\left[\\boldsymbol{\\underline{{p}}}^{V}\\right]\\right)=\\mathrm{Concat}(\\tilde{h}_{1},...,\\tilde{h}_{m})\\boldsymbol{W}^{O}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Existing prompt-based methods in CL address catastrophic forgetting by creating new adaptive prompts for each new task. During testing, the model chooses suitable prompt combinations to handle unseen data from any encountered task [49]. L2P [54] proposes a shared prompt pool for all tasks, utilizing a query-key mechanism for prompt selection. Instead of using the same prompt pool across tasks, DualPrompt [53] introduces G-Prompt and E-Prompt to capture task-agnostic and task-specific information, respectively. S-Prompt [52] focuses on learning task-specific prompts and employs a ProT strategy similar to L2P. CODA-Prompt [42] expands the prompt pool across tasks and performs a weighted summation of the prompt pool using attention factors. A recent work, HiDe-Prompt [49], achieves state-of-the-art performance by introducing a new hierarchical decomposition of CIL objectives and optimizing each component for better performance. ", "page_idx": 2}, {"type": "text", "text": "In this study, we focus on prefix tuning as our primary prompt-based methodology and follow the framework presented in HiDe-Prompt [49]. During training, HiDe-Prompt co-optimizes task-specific prompts $\\scriptstyle\\mathbf{\\delta}p_{t}$ and model\u2019s output layer parameters $\\psi$ for each new task $t$ using the WTP objective. These prompts are stored within a prompt pool $\\mathbf{P}=\\{p_{1},...,p_{T}\\}$ . At test time, a separate lightweight auxiliary output layer $\\hat{h}_{\\omega}\\,:\\,\\mathbb{R}^{D}\\,\\rightarrow\\,\\mathbb{R}^{T}$ , trained with the TII objective, takes the uninstructed representation $f_{\\boldsymbol{\\theta}}(\\boldsymbol{x})$ of a new data point $\\textbf{\\em x}$ as input to infer the task identity, guiding the selection of the most suitable prompt $\\mathbf{\\mathit{p}}_{k}$ from the prompt pool $\\mathbf{P}$ . Subsequently, the final prediction is given as $\\hat{y}=h_{\\psi}(f_{\\theta}(\\mathbf{x},p_{k}\\bar{)})$ . For further details, please refer to Appendix D. ", "page_idx": 2}, {"type": "text", "text": "Mixture of experts $\\bf{(M o E)}$ extends classical mixture models with an adaptive gating mechanism [19, 21]. An MoE model consists of a group of $N$ expert networks $f_{i}:\\mathbb{R}^{d}\\xrightarrow{}\\mathbb{R}^{d_{v}}$ , for all $i\\in[N]$ , and a gate function $G:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{N}$ . Given an input $\\pmb{h}\\in\\mathbb{R}^{d}$ , MoE computes a weighted sum of expert outputs $f_{i}(h)$ based on learned score function $s_{i}:\\mathbb{R}^{d}\\to\\mathbb{R}$ for each expert: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbf{y}:=\\sum_{j=1}^{N}G(h)_{j}\\cdot f_{j}(h):=\\sum_{j=1}^{N}\\frac{\\exp{(s_{j}(h))}}{\\sum_{\\ell=1}^{N}\\exp{(s_{\\ell}(h))}}\\cdot f_{j}(h),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "image", "img_path": "erwatqQ4p8/tmp/d30a95c4c2e6c6669a986dad32d889255a07a3927d6892e30936045ce07cd643.jpg", "img_caption": [], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Figure 1: An illustrative depiction of the relationship between self-attention and MoE. Each output vector of a head in the MSA layer can be viewed as the output of a MoE model. These MoE models share the same set of experts encoded in the value matrix. Each entry in the attention matrix corresponds to a score function within this architecture. ", "page_idx": 3}, {"type": "text", "text": "where $G(h):=\\operatorname{softmax}(s_{1}(h),\\dotsc,s_{N}(h))$ . Building on this concept, works by [10, 41] established the MoE layer as a fundamental building block to scale up model capacity efficiently. Please refer to Appendix C for a comprehensive discussion of related works. ", "page_idx": 3}, {"type": "text", "text": "3 Connection between Prefix Tuning and Mixture of Experts ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We first explore the relationship between attention and mixture of experts in Section 3.1, followed by establishing the connection between prefix tuning and the mixture of experts in Section 3.2. ", "page_idx": 3}, {"type": "text", "text": "3.1 Mixture of Experts Meets Attention ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Following the notation established in Definition 2.2, let\u2019s consider the $l$ -th head within the MSA layer. Let $\\pmb{X}=\\left[\\pmb{x}_{1}^{\\top},\\dots,\\pmb{x}_{N}^{\\top}\\right]^{\\top}\\in\\mathbb{R}^{N d}$ , which is the concatenation of input sequence embeddings into a single one-dimensional vector. We define the matrix $E_{i}\\in\\mathbb{R}^{d\\times N d}$ such that $E_{i}X:=x_{i}$ for all $i\\in[N]$ . Furthermore, we introduce an MoE architecture consisting of a group of $N$ expert networks $f_{j}:\\dot{\\mathbb{R}^{N d}}\\rightarrow\\mathbb{R}^{d_{v}}$ , $N$ gating functions $G_{i}:\\mathbb{R}^{N d}\\rightarrow\\mathbb{R}^{N}$ with the score function for the $j$ -th expert of the $i$ -th gating $s_{i,j}:\\mathbb{R}^{N d}\\to\\mathbb{R}$ , where ", "page_idx": 3}, {"type": "equation", "text": "$$\nf_{j}(\\pmb{X}):={W_{l}^{V}}^{\\top}\\pmb{E_{j}}\\pmb{X}={W_{l}^{V}}^{\\top}\\pmb{x_{j}},~s_{i,j}(\\pmb{X}):=\\frac{\\pmb{X}^{\\top}\\pmb{E_{i}^{\\top}}{W_{l}^{Q}}{W_{l}^{K}}^{\\top}\\pmb{E_{j}}\\pmb{X}}{\\sqrt{d_{v}}}=\\frac{\\pmb{x_{i}^{\\top}}{W_{l}^{Q}}{W_{l}^{K}}^{\\top}\\pmb{x_{j}}}{\\sqrt{d_{v}}}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "for $i$ and $j\\in[N]$ . From equation (4), we can express the output of the $l_{\\cdot}$ -th head as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{h_{l}=\\mathrm{softmax}\\left(\\frac{X^{Q}W_{l}^{Q}W_{l}^{K^{\\top}}X^{K^{\\top}}}{\\sqrt{d_{v}}}\\right)X^{V}W_{l}^{V}=\\left[h_{l,1},\\ldots,h_{l,N}\\right]^{\\top}\\in\\mathbb{R}^{N\\times d_{v}},}\\\\ &{h_{l,i}=\\displaystyle\\sum_{j=1}^{N}\\frac{\\exp\\left(\\frac{{\\boldsymbol{x}}_{i}^{\\top}W_{l}^{Q}W_{l}^{K^{\\top}}{\\boldsymbol{x}}_{j}}{\\sqrt{d_{v}}}\\right)}{\\sum_{k=1}^{N}\\exp\\left(\\frac{{\\boldsymbol{x}}_{i}^{\\top}W_{l}^{Q}W_{l}^{K^{\\top}}{\\boldsymbol{x}}_{k}}{\\sqrt{d_{v}}}\\right)}W_{l}^{V^{\\top}}\\boldsymbol{x}_{j}=\\displaystyle\\sum_{j=1}^{N}\\frac{\\exp\\left(s_{i,j}(X)\\right)}{\\sum_{k=1}^{N}\\exp\\left(s_{i,k}(X)\\right)}f_{j}(X),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "for $i\\in[N]$ . Expanding on equation (8), we can discern that each attention head within the MSA layer implicitly embodies a special mixture of experts architecture. This architecture encompasses $N$ MoE models, each featuring its own quadratic gating function $G_{i}$ . However, instead of employing $N^{2}$ ", "page_idx": 3}, {"type": "image", "img_path": "erwatqQ4p8/tmp/aa3648a867a92d8f9849ff269f834d8dcdd22e2604d2b938954eb75a8c5a71c2.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 2: Left: An illustrative depiction of prefix tuning as the introduction of new experts into pre-trained MoE models. Right: Visualization of NoRGa implementation, integrating non-linear activation and residual connections into the prefix tuning attention matrix. ", "page_idx": 4}, {"type": "text", "text": "separate expert networks for each model, this architecture utilizes $N$ shared linear expert networks $f_{j}$ for $j\\in[N]$ , significantly reducing the number of parameters. Notably, each expert network and its corresponding gating function process the entire input sequence directly, rather than individual embedding $\\pmb{x}_{i}$ as in traditional MoE layers [41]. This connection between self-attention and mixture of experts is depicted in Figure 1. In the subsequent section, we explore how prompt-based techniques can be viewed through this lens. ", "page_idx": 4}, {"type": "text", "text": "3.2 Prefix Tuning via the Perspective of Mixture of Experts ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Building on the connection between self-attention and mixture of experts, we propose that applying prefix tuning can be interpreted as the introduction of new experts to customize the pre-trained model for a specific task, as illustrated in Figure 2. Specifically, similar to Section 3.1, we consider the $l$ -th head within the MSA layer. We denote $\\pmb{p}^{K}=\\left[\\pmb{p}_{1}^{K},\\cdot\\cdot\\cdot,\\pmb{p}_{L}^{K}\\right]^{\\top}\\in\\mathbb{R}^{L\\times d}$ , $\\pmb{p}^{V}=\\left[\\pmb{p}_{1}^{V},\\dots,\\pmb{p}_{L}^{V}\\right]^{\\top}\\in$ $\\mathbb{R}^{L\\times d}$ , where $\\begin{array}{r}{L\\ =\\ \\frac{L_{p}}{2}}\\end{array}$ . We define new prefix experts $f_{N+j}\\;:\\;\\mathbb{R}^{N d}\\;\\rightarrow\\;\\mathbb{R}^{d_{v}}$ along with their corresponding new score functions $s_{i,N+j}:\\mathbb{R}^{N d}\\rightarrow\\mathbb{R}$ as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\nf_{N+j}(\\pmb{X}):={W_{l}^{V}}^{\\top}\\pmb{p}_{j}^{V},\\quad s_{i,N+j}(\\pmb{X}):=\\frac{\\pmb{X}^{\\top}\\pmb{E}_{i}^{\\top}\\pmb{W}_{l}^{Q}{W_{l}^{K}}^{\\top}\\pmb{p}_{j}^{K}}{\\sqrt{d_{v}}}=\\frac{\\pmb{x}_{i}^{\\top}{W_{l}^{Q}}{W_{l}^{K}}^{\\top}\\pmb{p}_{j}^{K}}{\\sqrt{d_{v}}}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "for $i\\in[N]$ and $j\\in[L]$ . Then from equation (5), the output of the $l$ -th head can be expressed as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\tilde{h}_{l}=\\mathrm{Attention}\\left(X^{Q}W_{l}^{Q},\\left[\\pmb{X}^{K}\\right]W_{l}^{K},\\left[\\pmb{N}^{V}\\right]W_{l}^{V}\\right)=\\left[\\tilde{h}_{l,1},\\ldots,\\tilde{h}_{l,N}\\right]^{\\top}\\in\\mathbb{R}^{N\\times d_{v}},}\\\\ &{\\tilde{h}_{l,i}=\\displaystyle\\sum_{j=1}^{N}\\frac{\\exp(s_{i,j}(\\pmb{X}))}{\\sum_{k=1}^{N}\\exp(s_{i,k}(\\pmb{X}))+\\sum_{k^{\\prime}=1}^{L}\\exp(s_{i,N+k^{\\prime}}(\\pmb{X}))}f_{j}(\\pmb{X})}\\\\ &{\\qquad\\qquad\\qquad+\\displaystyle\\sum_{j^{\\prime}=1}^{L}\\frac{\\exp(s_{i,N+j^{\\prime}}(\\pmb{X}))}{\\sum_{k=1}^{N}\\exp(s_{i,k}(\\pmb{X}))+\\sum_{k^{\\prime}=1}^{L}\\exp(s_{i,N+k^{\\prime}}(\\pmb{X}))}f_{N+j^{\\prime}}(\\pmb{X})}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "It\u2019s worth noting that $W_{l}^{Q},W_{l}^{K}$ , and $W_{l}^{V}$ remain fixed, with only $\\pmb{p}^{K}$ and $\\pmb{p}^{V}$ being learnable. By examining equation (8) and equation (11), we can interpret each head in a multi-head self-attention layer within a pre-trained model as a mixture of experts architecture with pre-trained experts $f_{j}$ and gating score functions $s_{i,j}$ for $i$ and $j\\in[N]$ . Prefix tuning extends this MoE by introducing $L$ additional prefix experts $f_{N+j^{\\prime}}$ defined by prefix vectors $p_{j^{\\prime}}^{V}$ and linear score functions $s_{i,N+j^{\\prime}}$ for $i\\in[N]$ and $j^{\\prime}\\in[L]$ . These new experts collaborate with the pre-trained ones within the MoE model, facilitating the model\u2019s adaptation to downstream tasks. ", "page_idx": 4}, {"type": "text", "text": "We argue that our introduction of a novel connection between self-attention, prefix tuning, and MoE offers a fresh perspective on the design of previous prompt-based continual learning methods. In the context of continual learning, the pre-trained experts serve as a knowledge base, while prefix tuning augments it with task-specific knowledge encoded in new experts. Moreover, we draw a parallel between the pre-trained experts and the G(eneral)-Prompt utilized in DualPrompt, which captures task-agnostic information [53]. Both are shared across tasks, making them useful for prediction, especially when task identification is incorrect. Notably, the new experts achieve their efficiency through simple linear gating functions and independence from the input, unlike the pre-trained experts. For simplicity, we call the MoE model (11) as linear gating prefix MoE. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Statistical suboptimality. The connection between prefix tuning and the MoE within the linear gating prefix MoE model (11) allows us to theoretically explore the statistical behavior of the prefix tuning. In Appendix A, by interpreting the linear gating prefix MoE as a regression problem with sample size $n$ , we demonstrate that the convergence rate for estimating the model parameters, e.g., prompts, can be as slow as ${\\mathcal{O}}(1/\\log^{\\tau}(n))$ where $\\tau>0$ is some constant. This suggests that a huge amount of data is required to achieve reasonable parameter estimation in the linear gating prefix MoE model, which can be discouraging in practice. To address this statistical limitation, the next section introduces a novel non-linear residual gating score function to replace the linear gating function. ", "page_idx": 5}, {"type": "text", "text": "4 Non-linear Residual Gate Meets Prefix Tuning ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "As discussed earlier, prefix tuning introduces additional experts within the MoE framework, resulting in the linear gating prefix MoE model. However, as outlined in Appendix A, this approach suffers from suboptimal sample efficiency for parameter estimation. To overcome this and enhance overall CIL performance, we propose an innovative approach that significantly improves sample efficiency while promoting WTP performance in Section 4.1 and provide theoretical explanations in Section 4.2. ", "page_idx": 5}, {"type": "text", "text": "4.1 NoRGa: Non-linear Residual Gate ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We propose a simple yet effective modification to the linear gating prefix MoE model by incorporating non-linear activation and residual connection within the score functions of prefix experts as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\widehat{s}_{i,N+j}(\\pmb{X}):=\\frac{\\pmb{X}^{\\top}\\pmb{E}_{i}^{\\top}\\pmb{W}_{l}^{Q}\\pmb{W}_{l}^{K}{\\bf\\Delta}^{\\top}\\pmb{p}_{j}^{K}}{\\sqrt{d_{v}}}+\\alpha\\cdot\\sigma\\left(\\tau\\cdot\\frac{\\pmb{X}^{\\top}\\pmb{E}_{i}^{\\top}\\pmb{W}_{l}^{Q}\\pmb{W}_{l}^{K}{\\bf\\Delta}^{\\top}\\pmb{p}_{j}^{K}}{\\sqrt{d_{v}}}\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\alpha,\\tau\\in\\mathbb{R}$ are learnable scalar factors, and $\\sigma$ is a non-linear activation function. The new score function in equation (12) consists of a linear and a non-linear component. We call the new prefix MoE model with score functions (12) as non-linear residual gating prefix MoE. ", "page_idx": 5}, {"type": "text", "text": "The use of a non-linear activation function here is motivated by the algebraic independence condition in Definition 4.2 to theoretically guarantee the optimal sample efficiency of expert and parameter estimations (cf. Theorem 4.3). It\u2019s worth noting that removing the linear component $s_{i,N+j}(X)$ in the score function (12) could potentially lead to the vanishing gradient problem during training. To mitigate this challenge, we incorporate a residual connection [14] into the formulation. Our modification introduces minimal additional parameters ( $\\alpha$ and $\\tau$ ) compared to the original score function, ensuring parameter efficiency. This is particularly crucial in continual learning scenarios where the number of parameters grows with each new task. For implementation, we define $H_{l}=$ ", "page_idx": 5}, {"type": "text", "text": "$W_{l}^{Q}W_{l}^{K^{\\top}}$ . From equation (5), the attention matrix of the $l$ -th head can then be written as: ", "page_idx": 5}, {"type": "equation", "text": "$$\nA_{l}=\\frac{X^{Q}H_{l}[{\\pmb p}^{K^{\\top}},~{\\pmb X}^{K^{\\top}}]}{\\sqrt{d_{v}}}=\\frac{[X^{Q}H_{l}{\\pmb p}^{K^{\\top}},~X^{Q}H_{l}{\\pmb X}^{K^{\\top}}]}{\\sqrt{d_{v}}}=[A_{l}^{\\mathrm{prompt}},~A_{l}^{\\mathrm{pretrain}}].\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here, $A_{l}^{\\mathrm{prompt}}$ denotes the attention score matrix for the prompts, and $A_{l}^{\\mathrm{pretrain}}$ represents the attention score matrix for the pre-trained experts. To implement NoRGa, we can directly modify the final attention matrix as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\hat{A}_{l}=[\\hat{A}_{l}^{\\mathrm{prompt}},A_{l}^{\\mathrm{pretrain}}],\n$$", "text_format": "latex", "page_idx": 5}, {"type": "equation", "text": "$$\n\\hat{A}_{l}^{\\mathrm{prompt}}=A_{l}^{\\mathrm{prompt}}+\\alpha\\cdot\\sigma(\\tau\\cdot A_{l}^{\\mathrm{prompt}}).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The implementation of NoRGa is illustrated in Figure 2. Despite its simplicity, our modification can significantly enhance sample efficiency and promote more reasonable parameter estimation, as demonstrated in our theoretical analysis in Section 4.2. Within the HiDe-Prompt framework, task-specific prompt parameters are trained using the WTP objective for each new task. Consequently, our modification leads to better parameter estimation, which directly contributes to improved WTP performance, ultimately improving overall continual learning efficacy. Importantly, NoRGa maintains the same parameter count as HiDe-Prompt, which is crucial in CL because of the memory constraint. Here, we evaluated $\\sigma$ with tanh, sigmoid, and GELU, finding tanh to perform well in most cases. ", "page_idx": 5}, {"type": "text", "text": "4.2 Theoretical Explanation for Non-linear Residual Gating Prefix MoE ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Similar to the setting in Appendix A, we prove that estimating parameters in the non-linear residual gating prefix MoE model (12) is statistically efficient in terms of the number of data. To provide a fair comparison to the linear gating prefix MoE, we focus only on the first head and its first row, namely, $l=1$ and $i=1$ in equation (12). Then, we proceed to provide a theoretical justification of our claim by viewing this row as an output of a regression setting. In particular, we assume that $(X_{1},Y_{1}),(X_{2},Y_{2}),\\hdots,(X_{n},Y_{n})\\in\\mathbb{R}^{N d}\\stackrel{\\cdot}{\\times}\\mathbb{R}$ are i.i.d. samples generated from model: ", "page_idx": 6}, {"type": "equation", "text": "$$\nY_{i}=g_{G_{*}}(X_{i})+\\varepsilon_{i},\\quad i=1,2,\\ldots,n,\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\varepsilon_{1},\\ldots,\\varepsilon_{n}$ are independent Gaussian noise variables such that $\\mathbb{E}[\\varepsilon_{i}|X_{i}]=0$ and $\\mathrm{Var}(\\varepsilon_{i}|X_{i})=$ $\\nu^{2}$ for all $1\\leq i\\leq n$ . Additionally, we assume that $X_{1},X_{2},\\ldots,X_{n}$ are i.i.d. samples from some probability distribution $\\mu$ . The regression function $g_{G_{*}}(\\cdot)$ in equation (16) then takes the form of a non-linear residual gating prefix MoE model with $N$ pre-trained experts and $L$ unknown experts, ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{G_{\\bullet}}(\\pmb{X}):=\\displaystyle\\sum_{j=1}^{N}\\frac{\\exp(\\pmb{X}^{\\top}\\pmb{B}_{j}^{0}\\pmb{X}+c_{j}^{0})}{T(\\pmb{X})}\\cdot h(\\pmb{X},\\eta_{j}^{0})}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\displaystyle\\sum_{j^{\\prime}=1}^{L}\\frac{\\exp((\\beta_{1j^{\\prime}}^{\\ast})^{\\top}\\pmb{X}+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}}^{\\ast})^{\\top}\\pmb{X})+\\beta_{0j^{\\prime}}^{\\ast})}{T(\\pmb{X})}\\cdot h(\\pmb{X},\\eta_{j^{\\prime}}^{\\ast}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\begin{array}{r}{T(\\pmb{X}):=\\sum_{k=1}^{N}\\exp(\\pmb{X}^{\\top}B_{k}^{0}\\pmb{X}+c_{k}^{0})+\\sum_{k^{\\prime}=1}^{L}\\exp((\\beta_{1k^{\\prime}}^{\\ast})^{\\top}\\pmb{X}+\\alpha\\sigma(\\tau(\\beta_{1k^{\\prime}}^{\\ast})^{\\top}\\pmb{X})+\\beta_{0k^{\\prime}}^{\\ast}),}\\end{array}$ $\\begin{array}{r}{G_{\\ast}:=\\sum_{j^{\\prime}=1}^{L}\\exp(\\beta_{0j^{\\prime}}^{\\ast})\\delta_{(\\beta_{1j^{\\prime}}^{\\ast},\\eta_{j^{\\prime}}^{\\ast})}}\\end{array}$ denotes a mixing measure, i.e., a weighted sum of Dirac measures $\\delta$ , associated with unknown parameters $(\\beta_{1j^{\\prime}}^{*},\\beta_{0j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*})_{j^{\\prime}=1}^{L}$ in $\\mathbb{R}^{N d}\\times\\mathbb{R}\\times\\mathbb{R}^{q}$ . Here, the matrix $B_{j}^{0}$ is equivalent to $(E_{1}^{\\top}W_{1}^{Q}W_{1}^{K}{}^{\\top}E_{j}/\\sqrt{d_{v}})$ in the score function $s_{1,j}(X)$ , and the vector $\\beta_{1j^{\\prime}}^{*}$ corresponds to the vector $\\big(E_{1}^{\\top}W_{1}^{Q}W_{1}^{K}{}^{\\top}p_{j^{\\prime}}^{K}/\\sqrt{d_{v}}\\big)$ in $\\hat{s}_{1,N+j^{\\prime}}(X)$ . Furthermore, the experts $h(X,\\eta_{j}^{0})$ and $h(X,\\eta_{j^{\\prime}}^{*})$ represent $f_{j}({\\cal X})$ and $f_{N+j^{\\prime}}(X)$ , respectively. In our formulation, for the generality of the ensuing theory, we consider general parametric forms of the experts $h(X,\\eta_{j}^{0})$ and $h(X,\\eta_{j^{\\prime}}^{*})$ , i.e., we do not only constrain these expert functions to be the forms of the simple experts in the aforementioned model. Similar to the setting in Appendix A, $B_{j}^{0}$ , $c_{j}^{0}$ , and the expert parameters $\\eta_{j}^{0}$ are known. Our goal is to estimate the unknown prompt-related parameters $\\beta_{1j^{\\prime}}^{*},\\beta_{0j^{\\prime}}^{*}$ , and $\\boldsymbol{\\eta}_{j^{\\prime}}^{*}$ . ", "page_idx": 6}, {"type": "text", "text": "Least squares estimation. We will use the least squares method [45] to estimate the unknown parameters $(\\beta_{0j^{\\prime}}^{*},\\beta_{1j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*})_{j_{\\cdot}^{\\prime}=1}^{L}$ or, equivalently, the ground-truth mixing measure $G^{*}$ . In particular, we take into account the estimator ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\widehat{G}_{n}:=\\underset{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}{\\arg\\operatorname*{min}}\\sum_{i=1}^{n}\\Big(Y_{i}-g_{G}(\\pmb{X}_{i})\\Big)^{2},\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where we denote $\\begin{array}{r}{\\mathcal{G}_{L^{\\prime}}(\\Theta):=\\{G=\\sum_{i=1}^{\\ell}\\exp(\\beta_{0i})\\delta_{(\\beta_{1i},\\eta_{i})}:1\\leq\\ell\\leq L^{\\prime},\\;(\\beta_{0i},\\beta_{1i},\\eta_{i})\\in\\Theta\\}}\\end{array}$ as the set of all mixing measures with at most $L^{\\prime}$ atoms. In practice, since the true number of experts $L$ is typically unknown, we assume that the number of fitted experts $L^{\\prime}$ is sufficiently large, i.e., $L^{\\prime}>L$ . ", "page_idx": 6}, {"type": "text", "text": "To begin with, we explore the convergence behavior of the regression estimator $g_{\\widehat{G}_{n}}(\\cdot)$ to the true regression function $g_{G_{*}}\\left(\\cdot\\right)$ under the $L_{2}(\\mu)$ -norm in the following theorem: ", "page_idx": 6}, {"type": "text", "text": "Theorem 4.1 (Regression Estimation Rate). Equipped with a least squares estimator ${\\widehat{G}}_{n}$ given in equation (18), the model estimation $g_{\\widehat{G}_{n}}(\\cdot)$ converges to the true model $g_{G_{*}}(\\cdot)$ at the fol lowing rate: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\lVert g_{\\widehat{G}_{n}}-g_{G_{*}}\\rVert_{L_{2}(\\mu)}=\\mathcal{O}_{P}(\\sqrt{\\log(n)/n}).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Proof of Theorem 4.1 is in Appendix B.1. The bound (19) implies that the rate for estimating the regression function $g_{G_{*}}(\\cdot)$ is of order ${\\mathcal{O}}_{P}{\\bigl(}{\\sqrt{\\log(n)/n}}{\\bigr)}$ , which is parametric on the sample size $n$ . More importantly, it also indicates that if there exists a loss function among parameters $\\mathcal{L}$ such that $\\|g_{\\widehat{G}_{n}}-g_{G_{*}}\\|_{L_{2}(\\mu)}\\gtrsim\\mathcal{L}(\\widehat{G}_{n},G_{*})$ , then we would obtain the bound $\\mathcal{L}(\\widehat{G}_{n},G_{*})=\\mathcal{O}_{P}(\\sqrt{\\log(n)/n})$ , which leads to the desired parameter and expert estimation rates. ", "page_idx": 6}, {"type": "text", "text": "We now turn our attention to the parameter and expert estimation problems. To understand how the non-linear residual gating affects these problems, we analyze the properties of the expert $h(\\cdot,\\eta)$ and the activation function $\\sigma(\\cdot)$ to determine which formulations will achieve favorable performance. ", "page_idx": 6}, {"type": "text", "text": "Definition 4.2 (Algebraic independence). We say that an expert function $h(\\cdot,\\eta)$ and an activation function $\\sigma(\\cdot)$ are algebraically independent if they are twice differentiable w.r.t their parameters, and if for any $k\\geq1$ and pair-wise distinct parameters $(\\beta_{11},\\eta_{1}),\\dots,(\\beta_{1k},\\eta_{k})$ , the following set of functions in $\\mathbf{\\deltaX}$ is linearly independent for almost every $\\pmb{X}\\in\\mathbb{R}^{N d}$ : ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\Big\\{X^{\\nu}\\Big[(1+\\sigma^{\\prime}(\\beta_{1j}^{\\top}X))^{\\lvert\\nu\\rvert}+\\mathbf{1}_{\\{\\vert\\nu\\vert=2\\}}\\sigma^{\\prime\\prime}(\\beta_{1j}^{\\top}X)\\Big]\\cdot\\frac{\\partial^{\\vert\\gamma\\vert}h}{\\partial\\eta^{\\gamma}}(X,\\eta_{j}):j\\in[k_{*}],}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\nu\\in\\mathbb{N}^{N d},\\gamma\\in\\mathbb{N}^{q}:0\\leq\\vert\\nu\\vert+\\vert\\gamma\\vert\\leq2\\Big\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "Intuitively, the algebraic independence condition ensures that there will be no interactions among parameters of the expert function $h(\\cdot,\\eta)$ and the activation function $\\sigma(\\cdot)$ . Technically, a key step in our argument is to decompose the regression discrepancy $g_{\\widehat{G}_{n}}(X)-g_{G_{*}}(X)$ into a combination of linearly independent terms by applying Taylor expansions to the product of the softmax\u2019s numerator and the expert function, i.e., $\\mathrm{exp}(\\stackrel{\\cdot}{\\beta_{1}^{\\dagger}}\\bar{\\boldsymbol{X}^{\\prime}}+\\stackrel{\\cdot}{\\alpha\\sigma}(\\tau\\beta_{1}^{\\top}\\pmb{X}))h(\\pmb{X},\\eta)$ . Thus, the above condition guarantees that all the derivative terms in the Taylor expansion are linearly independent. To exemplify the algebraic independence condition, we consider the following simple examples of the expert functions $h(\\cdot,\\eta)$ and the activation $\\sigma(\\cdot)$ that are algebraically independent. ", "page_idx": 7}, {"type": "text", "text": "Example. When the expert function $h(\\cdot,\\eta)$ is formulated as a neural network $h(\\pmb{X},(a,b))\\;=$ $\\varphi(a^{\\top}X+b)$ with the activation $\\varphi(\\cdot)\\in\\{\\mathrm{ReLU}(\\cdot),\\mathrm{GELU}(\\cdot),z\\mapsto z^{p}\\}$ , where $(a,b)\\in\\mathbb{R}^{N d}\\times\\mathbb{R}$ , and the activation function $\\sigma(\\cdot)$ is one among the functions sigmoid(\u00b7), $\\operatorname{tanh}(\\cdot)$ , GELU(\u00b7), then they satisfy the algebraic independence condition in Definition 4.2. ", "page_idx": 7}, {"type": "text", "text": "Finally, we establish the rates for estimating parameters and experts in the non-linear residual gating prefix MoE model in Theorem 4.3. Prior to presenting the theorem statement, let us design a loss function among parameters based on a notion of Voronoi cells [27], which is a commonly employed approach for the convergence analysis of expert estimation in MoE models [36, 34, 35, 33], yet tailored to the setting of this paper. In particular, the Voronoi loss used for our analysis is defined as ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\mathcal{L}}_{1}(G,G_{*}):=\\displaystyle\\sum_{j^{\\prime}\\in[L]:|V_{j^{\\prime}}|>1}\\displaystyle\\sum_{i\\in V_{j^{\\prime}}}\\exp(\\beta_{0i})\\Big[\\|\\Delta\\beta_{1i j^{\\prime}}\\|^{2}+\\|\\Delta\\eta_{i j^{\\prime}}\\|^{2}\\Big]}\\\\ {{\\mathrm{\\scriptsize~+~}\\displaystyle\\sum_{j^{\\prime}\\in[L]:|V_{j^{\\prime}}|=1}\\displaystyle\\sum_{i\\in V_{j^{\\prime}}}\\exp(\\beta_{0i})\\Big[\\|\\Delta\\beta_{1i j^{\\prime}}\\|+\\|\\Delta\\eta_{i j^{\\prime}}\\|\\Big]+\\displaystyle\\sum_{j^{\\prime}=1}^{L}\\Big|\\sum_{i\\in V_{j^{\\prime}}}\\exp(\\beta_{0i})-\\exp(\\beta_{0j^{\\prime}}^{*})\\Big|,}}\\end{array}\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "where we denote $\\Delta\\beta_{1i j^{\\prime}}:=\\beta_{1i}-\\beta_{1j^{\\prime}}^{*}$ and $\\Delta\\eta_{i j^{\\prime}}:=\\eta_{i}-\\eta_{j^{\\prime}}^{*}$ . Above, $\\mathcal{V}_{j^{\\prime}}\\equiv\\mathcal{V}_{j^{\\prime}}(G)$ , for $j^{\\prime}\\in[L]$ , is a Voronoi cell associated with the mixing measure $G$ generated by the true component $\\omega_{j}^{*}:=(\\beta_{1j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*})$ , which is defined as follows: ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{V}_{j^{\\prime}}:=\\{i\\in\\{1,2,\\dots,L^{\\prime}\\}:\\|\\omega_{i}-\\omega_{j^{\\prime}}^{*}\\|\\leq\\|\\omega_{i}-\\omega_{\\ell}^{*}\\|,\\,\\forall\\ell\\neq j^{\\prime}\\},}\\end{array}\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "where we denote $\\omega_{i}:=(\\beta_{1i},\\eta_{i})$ as a component of $G$ . Note that, the cardinality of each Voronoi cell ${\\mathcal{V}}_{j^{\\prime}}$ indicates the number of components $\\omega_{i}$ of $G$ approximating the true component $\\omega_{j^{\\prime}}^{*}$ of $G_{*}$ . Additionally, since $\\mathcal{L}_{1}(G,G_{*})=0$ if and only if $G\\equiv G_{*}$ , it follows that when $\\mathcal{L}_{1}(G,G_{*})$ becomes sufficiently small, the differences $\\Delta\\beta_{1i j^{\\prime}}$ and $\\Delta\\eta_{i j^{\\prime}}$ are also small. This observation indicates that, although $\\dot{\\cal L}_{1}(G,G_{*})$ is a proper metric as it is not symmetric, it is an appropriate loss function for measuring the discrepancy between the least square estimator ${\\widehat{G}}_{n}$ and the true mixing measures $G_{*}$ . ", "page_idx": 7}, {"type": "text", "text": "Theorem 4.3. Assume that the expert function $h(x,\\eta)$ and the activation $\\sigma(\\cdot)$ are algebraically independent, then we achieve the following lower bound for any $G\\in{\\mathcal{G}}_{L^{\\prime}}(\\Theta)$ : ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\|g_{G}-g_{G_{*}}\\|_{L_{2}(\\mu)}\\gtrsim\\mathcal{L}_{1}(G,G_{*}),\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "which together with Theorem 4.1 indicates that $\\mathcal{L}_{1}(\\widehat{G}_{n},G_{*})=\\widetilde{\\mathcal{O}}_{P}(n^{-1/2})$ ", "page_idx": 7}, {"type": "text", "text": "Proof of Theorem 4.3 is in Appendix B.2. A few comments on Theorem 4.3 are in order: (i) From the bound $\\mathcal{L}_{1}(\\widehat{G}_{n},G_{*})=\\widetilde{\\mathcal{O}}_{P}(n^{-1/2})$ , we deduce that the estimation rates for the over-specified parameters $\\beta_{1j^{\\prime}}^{*},\\eta_{1j^{\\prime}}^{*}$ , where $j^{\\prime}\\in[L]:|\\mathcal{V}_{j^{\\prime}}|>1$ , are all of order ${\\mathcal{O}}_{P}{\\bigl(}{\\sqrt[{4}]{\\log(n)/n}}{\\bigr)}$ . Since the expert $h(\\cdot,\\eta)$ is twice differentiable over a bounded domain, it is also a Lipschitz function. Thus, denote ", "page_idx": 7}, {"type": "table", "img_path": "erwatqQ4p8/tmp/a9236852e8afdb66c40f2b4d9266762e3eb7f31818d87c490fcbe59b96030f34.jpg", "table_caption": ["Table 1: Overall performance comparison on Split CIFAR-100 and Split ImageNet-R. We present Final Average Accuracy (FA), Cumulative Average Accuracy (CA), and Average Forgetting Measure (FM) of all methods under different pre-trained models. "], "table_footnote": [], "page_idx": 8}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{X}|h(X,\\widehat{\\eta}_{i}^{n})-h(X,\\eta_{j^{\\prime}}^{*})|\\lesssim\\|\\widehat{\\eta}_{i}^{n}-\\eta_{j^{\\prime}}^{*}\\|\\lesssim\\mathcal{O}_{P}(\\sqrt[4]{\\log(n)/n}).\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "The above bound indicates that if the experts $h(\\cdot,\\eta_{j}^{\\ast})$ are ftited by at least two other experts, then their estimation rates are also of order ${\\mathcal{O}}_{P}{\\bigl(}{\\sqrt[{4}]{\\log(n)/n}}{\\bigr)}$ ; (ii) For exactly-specified parameters $\\beta_{1j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*}$ , where $j^{\\prime}\\in[L]:|\\mathcal{V}_{j^{\\prime}}|=1$ , the rates for estimating them are faster than those of their over-specified counterparts, standing at order ${\\mathcal{O}}_{P}({\\sqrt{\\log(n)/n}})$ . By arguing similarly to equation (22), the experts $h(\\cdot,\\eta_{j^{\\prime}}^{*})$ also enjoy the faster estimation rate of order ${\\mathcal{O}}_{P}({\\sqrt{\\log(n)/n}})$ , which is parametric on the sample size $n$ ; (iii) It follows from the above rates that we only need a polynomial number of data (roughly $\\epsilon^{-4}$ where $\\epsilon$ is the desired approximation error) to estimate the parameters and experts of the non-linear residual gating prefix MoE. By contrast, when using the linear gating, as being demonstrated in Appendix A, it requires an exponential number of data. This highlights the statistical beneftis of using the non-linear residual gating MoE model over the linear gating prefix MoE model. ", "page_idx": 8}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Datasets. We evaluate various continual learning methods on widely used CIL benchmarks, including Split CIFAR-100 [23] and Split ImageNet-R [23], consistent with prior work [49]. We further explore the model\u2019s performance on fine-grained classification tasks with Split CUB-200 [48] and large inter-task differences with 5-Datasets [9]. Please refer to Appendix E for more details. ", "page_idx": 8}, {"type": "text", "text": "Evaluation Metrics. We utilize several established metrics described in [50]. These include: final average accuracy (FA), which represents the average accuracy after the final task; cumulative average accuracy (CA), which refers to the historical average accuracy; and average forgetting measure (FM). We give more emphasis to FA and CA due to their comprehensiveness, as noted in [42]. ", "page_idx": 8}, {"type": "text", "text": "Baselines. We compare our approach with several representative prompt-based approaches including L2P [54], DualPrompt [53], CODA-Prompt [42], S-Prompt [52], and HiDe-Prompt [49]. Additionally, we evaluate against state-of-the-art pre-trained model-based continual learning methods, including ADAM [60] and RanPAC [29]. We further extend our evaluation by applying HiDe-Prompt with parameter-efficient fine-tuning techniques like LoRA [17] and Adapters [16]. In line with [49], we utilize the checkpoints of ViT that use supervised pre-training of Imagenet-21K (denoted as Sup-21K), and some self-supervised pre-training such as iBOT-21K, iBOT-1K [62], DINO-1K [4], and MoCo-1K [7]. For implementation details, see Appendix E. ", "page_idx": 8}, {"type": "table", "img_path": "erwatqQ4p8/tmp/de2f25e95334ce70939bd7788009f4ef4ee303023f2838fbaa8c2b7dfed921f8.jpg", "table_caption": ["Table 2: Final average accuracy (FA) on Split CUB-200 and 5-Datasets. "], "table_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "erwatqQ4p8/tmp/5fe8cb6026a9dcd90ae64f5cf94d73f002ca867ef03c477c0f8d2391d009371a.jpg", "table_caption": ["Table 3: Ablation study of different activation functions, measured by final average accuracy (FA). "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Main Results. In Table 1, we evaluate several continual learning methods on Split CIFAR-100 and Split ImageNet-R using diverse pre-trained models. NoRGa achieves state-of-the-art FA and CA across all datasets and models, consistently outperforming HiDe-Prompt. On Sup-21K, NoRGa demonstrates impressive FA results on both CIFAR-100 and ImageNet-R. It also maintains the highest CA, with significant margins of $1.80\\%$ and $2.92\\%$ on CIFAR-100 and ImageNet-R, respectively, compared to HiDe-Prompt. These results highlight NoRGa\u2019s strong ability to retain knowledge and exhibit minimal forgetting, as evidenced by the low FM values on both datasets. NoRGa also surpasses HiDe-Prompt on self-supervised models, with FA improvements up to $1.95\\%$ and $3.66\\%$ . We further investigate two scenarios: fine-grained classification tasks and large inter-task differences through experiments on Split CUB-200 and 5-Datasets, respectively, as shown in Table 2. NoRGa maintains its lead, achieving FA gaps of $4.34\\%$ and $2.46\\%$ on Split CUB-200, and the highest FA on 5-Datasets. While gains in some metrics may be modest, NoRGa consistently outperforms HiDe-Prompt in either FA or CA, underscoring its robustness. For example, on Split ImageNet-R with Sup-21K weights, the FA improvement is small $75.06\\%$ vs. $75.40\\%$ ), but the CA gains are substantial ( $76.60\\%$ vs. $79.52\\%$ ), demonstrating the method\u2019s effectiveness and robustness. ", "page_idx": 9}, {"type": "text", "text": "Ablation Study. To assess the impact of non-linear activation functions on NoRGa\u2019s performance, we evaluated the model\u2019s behavior with different choices for the activation function $\\sigma$ , including tanh, sigmoid, and GELU in Table 3. The results show that NoRGa achieves state-of-the-art performance on both Split CIFAR-100 and Split CUB-200 datasets with all three activation functions. These findings suggest that NoRGa exhibits robustness to the choice of non-linear activation within a reasonable range. While all functions perform well, the tanh activation function demonstrates generally strong performance across scenarios. Further results are provided in the Appendix. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This paper presents an initial exploration of self-attention and prefix-tuning through the lens of mixture of experts. We find that applying prefix tuning can be viewed as introducing new prefix experts to adapt the pre-trained model. However, limitations in sample efficiency exist. We address this by proposing NoRGa, a novel gating mechanism to enhance continual learning performance. Our results demonstrate NoRGa\u2019s effectiveness both theoretically and empirically. While the current implementation of the expert network prioritizes simplicity, future research directions could involve investigating more intricate architectures. Furthermore, the choice of activation functions in our work requires fine-tuning, which opens avenues for future research on adaptively learning activation. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] R. Aljundi, P. Chakravarty, and T. Tuytelaars. Expert gate: Lifelong learning with a network of experts. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3366\u20133375, 2017.   \n[2] E. Belouadah, A. Popescu, and I. Kanellos. A comprehensive study of class incremental learning algorithms for visual tasks. Neural Networks, 135:38\u201354, 2021.   \n[3] Y. Bulatov. Notmnist dataset. Google (Books/OCR), Tech. Rep.[Online]. Available: http://yaroslavvb. blogspot. it/2011/09/notmnist-dataset. html, 2, 2011.   \n[4] M. Caron, H. Touvron, I. Misra, H. J\u00e9gou, J. Mairal, P. Bojanowski, and A. Joulin. Emerging properties in self-supervised vision transformers. In Proceedings of the International Conference on Computer Vision (ICCV), 2021.   \n[5] H. Cha, J. Lee, and J. Shin. Co2l: Contrastive continual learning. In Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV), pages 9516\u20139525, October 2021.   \n[6] A. Chaudhry, M. Rohrbach, M. Elhoseiny, T. Ajanthan, P. K. Dokania, P. H. S. Torr, and M. Ranzato. On tiny episodic memories in continual learning, 2019.   \n[7] X. Chen, S. Xie, and K. He. An empirical study of training self-supervised vision transformers, 2021.   \n[8] A. Dosovitskiy, L. Beyer, A. Kolesnikov, D. Weissenborn, X. Zhai, T. Unterthiner, M. Dehghani, M. Minderer, G. Heigold, S. Gelly, J. Uszkoreit, and N. Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale. ICLR, 2021.   \n[9] S. Ebrahimi, F. Meier, R. Calandra, T. Darrell, and M. Rohrbach. Adversarial continual learning. arXiv preprint arXiv:2003.09553, 2020.   \n[10] D. Eigen, M. Ranzato, and I. Sutskever. Learning factored representations in a deep mixture of experts. In ICLR Workshops, 2014.   \n[11] Z. Fan, R. Sarkar, Z. Jiang, T. Chen, K. Zou, Y. Cheng, C. Hao, Z. Wang, et al. $\\mathbf{M}^{3}$ vit: Mixtureof-experts vision transformer for efficient multi-task learning with model-accelerator co-design. Advances in Neural Information Processing Systems, 35:28441\u201328457, 2022.   \n[12] N. L. Hai, T. Nguyen, L. N. Van, T. H. Nguyen, and K. Than. Continual variational dropout: a view of auxiliary local variables in continual learning. Machine Learning, 113(1):281\u2013323, 2024.   \n[13] H. Hazimeh, Z. Zhao, A. Chowdhery, M. Sathiamoorthy, Y. Chen, R. Mazumder, L. Hong, and E. Chi. Dselect-k: Differentiable selection in the mixture of experts with applications to multi-task learning. Advances in Neural Information Processing Systems, 34:29335\u201329347, 2021.   \n[14] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition, 2015.   \n[15] N. Ho, C.-Y. Yang, and M. I. Jordan. Convergence rates for gaussian mixtures of experts. Journal of Machine Learning Research, 23(323):1\u201381, 2022.   \n[16] N. Houlsby, A. Giurgiu, S. Jastrzebski, B. Morrone, Q. De Laroussilhe, A. Gesmundo, M. Attariyan, and S. Gelly. Parameter-efficient transfer learning for nlp. In International conference on machine learning, pages 2790\u20132799. PMLR, 2019.   \n[17] E. J. Hu, Y. Shen, P. Wallis, Z. Allen-Zhu, Y. Li, S. Wang, L. Wang, and W. Chen. Lora: Low-rank adaptation of large language models. arXiv preprint arXiv:2106.09685, 2021.   \n[18] Q. Huang, Z. An, N. Zhuang, M. Tao, C. Zhang, Y. Jin, K. Xu, L. Chen, S. Huang, and Y. Feng. Harder tasks need more experts: Dynamic routing in moe models. arXiv preprint arXiv:2403.07652, 2024.   \n[19] R. A. Jacobs, M. I. Jordan, S. J. Nowlan, and G. E. Hinton. Adaptive mixtures of local experts. Neural Computation, 3, 1991.   \n[20] P. Janson, W. Zhang, R. Aljundi, and M. Elhoseiny. A simple baseline that questions the use of pretrained-models in continual learning. arXiv preprint arXiv:2210.04428, 2022.   \n[21] M. I. Jordan and R. A. Jacobs. Hierarchical mixtures of experts and the em algorithm. Neural computation, 6(2):181\u2013214, 1994.   \n[22] G. Kim, C. Xiao, T. Konishi, Z. Ke, and B. Liu. A theoretical study on solving continual learning. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 5065\u20135079. Curran Associates, Inc., 2022.   \n[23] A. Krizhevsky, G. Hinton, et al. Learning multiple layers of features from tiny images. 2009.   \n[24] Y. Lecun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-based learning applied to document recognition. Proceedings of the IEEE, 86(11):2278\u20132324, 1998.   \n[25] B. Lester, R. Al-Rfou, and N. Constant. The power of scale for parameter-efficient prompt tuning. In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages 3045\u20133059. Association for Computational Linguistics, Nov. 2021.   \n[26] X. L. Li and P. Liang. Prefix-tuning: Optimizing continuous prompts for generation, 2021.   \n[27] T. Manole and N. Ho. Refined convergence rates for maximum likelihood estimation under finite mixture models. In Proceedings of the 39th International Conference on Machine Learning, volume 162 of Proceedings of Machine Learning Research, pages 14979\u201315006. PMLR, 17\u201323 Jul 2022.   \n[28] M. McCloskey and N. J. Cohen. Catastrophic interference in connectionist networks: The sequential learning problem. In Psychology of learning and motivation, volume 24, pages 109\u2013165. Elsevier, 1989.   \n[29] M. D. McDonnell, D. Gong, A. Parvaneh, E. Abbasnejad, and A. van den Hengel. Ranpac: Random projections and pre-trained models for continual learning. Advances in Neural Information Processing Systems, 36, 2024.   \n[30] S. V. Mehta, D. Patil, S. Chandar, and E. Strubell. An empirical investigation of the role of pre-training in lifelong learning. Journal of Machine Learning Research, 24(214):1\u201350, 2023.   \n[31] Y. Netzer, T. Wang, A. Coates, A. Bissacco, B. Wu, and A. Y. Ng. Reading digits in natural images with unsupervised feature learning. In NIPS Workshop on Deep Learning and Unsupervised Feature Learning 2011, 2011.   \n[32] C. V. Nguyen, A. Achille, M. Lam, T. Hassner, V. Mahadevan, and S. Soatto. Toward understanding catastrophic forgetting in continual learning, 2019.   \n[33] H. Nguyen, P. Akbarian, and N. Ho. Is temperature sample efficient for softmax Gaussian mixture of experts? In Proceedings of the ICML, 2024.   \n[34] H. Nguyen, P. Akbarian, F. Yan, and N. Ho. Statistical perspective of top- $\\boldsymbol{\\cdot}$ sparse softmax gating mixture of experts. In International Conference on Learning Representations, 2024.   \n[35] H. Nguyen, N. Ho, and A. Rinaldo. On least square estimation in softmax gating mixture of experts. In Proceedings of the ICML, 2024.   \n[36] H. Nguyen, T. Nguyen, and N. Ho. Demystifying softmax gating function in Gaussian mixture of experts. In Advances in Neural Information Processing Systems, 2023.   \n[37] A. Panos, Y. Kobe, D. O. Reino, R. Aljundi, and R. E. Turner. First session adaptation: A strong replay-free baseline for class-incremental learning. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 18820\u201318830, 2023.   \n[38] H. Phan, A. P. Tuan, S. Nguyen, N. V. Linh, and K. Than. Reducing catastrophic forgetting in neural networks via gaussian mixture approximation. In Pacific-Asia Conference on Knowledge Discovery and Data Mining, pages 106\u2013117. Springer, 2022.   \n[39] S.-A. Rebuff,i A. Kolesnikov, G. Sperl, and C. H. Lampert. icarl: Incremental classifier and representation learning. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), July 2017.   \n[40] T. Ridnik, E. Ben-Baruch, A. Noy, and L. Zelnik-Manor. Imagenet-21k pretraining for the masses, 2021.   \n[41] N. Shazeer, A. Mirhoseini, K. Maziarz, A. Davis, Q. Le, G. Hinton, and J. Dean. Outrageously large neural networks: The sparsely-gated mixture-of-experts layer. In International Conference on Learning Representations (ICLR), 2017.   \n[42] J. S. Smith, L. Karlinsky, V. Gutta, P. Cascante-Bonilla, D. Kim, A. Arbelle, R. Panda, R. Feris, and Z. Kira. Coda-prompt: Continual decomposed attention-based prompting for rehearsal-free continual learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 11909\u201311919, June 2023.   \n[43] Q. Tran, H. Phan, K. Than, D. Phung, and T. Le. Continual learning with optimal transport based mixture model. arXiv preprint arXiv:2211.16780, 2022.   \n[44] Q. Tran, L. Tran, K. Than, T. Tran, D. Phung, and T. Le. Koppa: Improving prompt-based continual learning with key-query orthogonal projection and prototype-based one-versus-all. arXiv preprint arXiv:2311.15414, 2023.   \n[45] S. van de Geer. Empirical processes in M-estimation. Cambridge University Press, 2000.   \n[46] G. M. van de Ven, T. Tuytelaars, and A. S. Tolias. Three types of incremental learning. Nature Machine Intelligence, 4:1185\u20131197, 2022.   \n[47] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. u. Kaiser, and I. Polosukhin. Attention is all you need. In Advances in Neural Information Processing Systems, volume 30. Curran Associates, Inc., 2017.   \n[48] C. Wah, S. Branson, P. Welinder, P. Perona, and S. Belongie. The Caltech-UCSD Birds-200-2011 Dataset. California Institute of Technology, 2011.   \n[49] L. Wang, J. Xie, X. Zhang, M. Huang, H. Su, and J. Zhu. Hierarchical decomposition of prompt-based continual learning: Rethinking obscured sub-optimality. Advances in Neural Information Processing Systems, 2023.   \n[50] L. Wang, X. Zhang, H. Su, and J. Zhu. A comprehensive survey of continual learning: Theory, method and application, 2024.   \n[51] L. Wang, X. Zhang, K. Yang, L. Yu, C. Li, H. Lanqing, S. Zhang, Z. Li, Y. Zhong, and J. Zhu. Memory replay with data compression for continual learning. In International Conference on Learning Representations, 2021.   \n[52] Y. Wang, Z. Huang, and X. Hong. S-prompts learning with pre-trained transformers: An occam\u2019s razor for domain incremental learning. In Conference on Neural Information Processing Systems (NeurIPS), 2022.   \n[53] Z. Wang, Z. Zhang, S. Ebrahimi, R. Sun, H. Zhang, C.-Y. Lee, X. Ren, G. Su, V. Perot, J. Dy, et al. Dualprompt: Complementary prompting for rehearsal-free continual learning. European Conference on Computer Vision, 2022.   \n[54] Z. Wang, Z. Zhang, C.-Y. Lee, H. Zhang, R. Sun, X. Ren, G. Su, V. Perot, J. Dy, and T. Pfister. Learning to prompt for continual learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 139\u2013149, 2022.   \n[55] H. Xiao, K. Rasul, and R. Vollgraf. Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms, 2017.   \n[56] Y. Xin, S. Luo, H. Zhou, J. Du, X. Liu, Y. Fan, Q. Li, and Y. Du. Parameter-efficient fine-tuning for pre-trained vision models: A survey, 2024.   \n[57] B. Yu. Assouad, Fano, and Le Cam. Festschrift for Lucien Le Cam, pages 423\u2013435, 1997.   \n[58] J. Yu, Y. Zhuge, L. Zhang, P. Hu, D. Wang, H. Lu, and Y. He. Boosting continual learning of vision-language models via mixture-of-experts adapters. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 23219\u201323230, 2024.   \n[59] G. Zhang, L. Wang, G. Kang, L. Chen, and Y. Wei. Slca: Slow learner with classifier alignment for continual learning on a pre-trained model. In Proceedings of the IEEE/CVF International Conference on Computer Vision, 2023.   \n[60] D.-W. Zhou, Z.-W. Cai, H.-J. Ye, D.-C. Zhan, and Z. Liu. Revisiting class-incremental learning with pre-trained models: Generalizability and adaptivity are all you need. International Journal of Computer Vision, pages 1\u201321, 2024.   \n[61] D.-W. Zhou, H.-L. Sun, J. Ning, H.-J. Ye, and D.-C. Zhan. Continual learning with pre-trained models: A survey, 2024.   \n[62] J. Zhou, C. Wei, H. Wang, W. Shen, C. Xie, A. Yuille, and T. Kong. ibot: Image bert pre-training with online tokenizer. International Conference on Learning Representations (ICLR), 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "Supplement to \u201cMixture of Experts Meets Prompt-Based Continual Learning\u201d ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this supplementary material, we first analyze the statistical suboptimality of the Linear Gating Prefix MoE Model (11) in Appendix A. Appendix B provides proofs for the theoretical results presented in Section 4.2. In Appendix C, we discuss related works on mixture of experts. Appendix D outlines the training algorithm for HiDe-Prompt while Appendix E presents the experimental setup and details. Further, Appendix F presents further experiments on the task-incremental learning setting to empirically demonstrate the benefits of using our proposed Non-linear Residual Gating Prefix MoE (12) over the Linear Gating Prefix MoE Model. Appendix G and Appendix H compare NoRGa with other parameter-efficient fine-tuning techniques and pre-trained model-based methods. In Appendix I, we present the efficiency tests, while Appendix J explores the impact of learnable $\\alpha$ and $\\tau$ . Finally, Appendix K compares the training times between NoRGa and HiDe-Prompt. ", "page_idx": 14}, {"type": "text", "text": "A Statistical Suboptimality of Linear Gating Prefix MoE Model ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this appendix, we demonstrate that estimating parameters and experts in the linear gating prefix MoE model (11) can be statistically inefficient in terms of the number of data. To simplify our findings, we particularly focus on the first head, namely, $l=1$ in equation (11), and the first row of this head, namely, $i=1$ in equation (11). Then, we proceed to provide a theoretical justification of our claim for the suboptimality of the linear gating prefix MoE by viewing this row as an output of the regression setting. In particular, we assume that $(X_{1},Y_{1}),(\\check{X_{2}},Y_{2}),\\check{\\ldots},(X_{n},Y_{n})\\in\\mathbb{R}^{N\\dot{d}}\\times\\mathbb{R}$ is an i.i.d. sample generated from the following model: ", "page_idx": 14}, {"type": "equation", "text": "$$\nY_{i}=f_{G_{*}}(X_{i})+\\varepsilon_{i},\\quad i=1,2,\\ldots,n,\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\varepsilon_{1},\\ldots,\\varepsilon_{n}$ are independent Gaussian noise variables such that $\\mathbb{E}[\\varepsilon_{i}|\\pmb{X}_{i}]=0$ and $\\mathrm{Var}(\\varepsilon_{i}|X_{i})=$ $\\nu^{2}$ for all $1\\leq i\\leq n$ . Additionally, we assume that $X_{1},X_{2},\\ldots,X_{n}$ are i.i.d. samples from some probability distribution $\\mu$ . Motivated by linear gating prefix MoE model (11), the regression function $f_{G_{*}}(\\cdot)$ in equation (23) admits the form of the linear gating prefix MoE model with pre-trained $N$ experts and $L$ unknown experts, namely ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{f_{G_{*}}(X):=\\displaystyle\\sum_{j=1}^{N}\\frac{\\exp(X^{\\top}B_{j}^{0}X+c_{j}^{0})}{\\sum_{k=1}^{N}\\exp(X^{\\top}B_{k}^{0}X+c_{k}^{0})+\\sum_{k^{\\prime}=1}^{L}\\exp((\\beta_{1k^{\\prime}}^{*})^{\\top}X+\\beta_{0k^{\\prime}}^{*})}\\cdot h(X,\\eta_{j}^{0})}\\\\ &{}&{+\\displaystyle\\sum_{j^{\\prime}=1}^{L}\\frac{\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}X+\\beta_{0j^{\\prime}}^{*})}{\\sum_{k=1}^{N}\\exp(X^{\\top}B_{k}^{0}X+c_{k}^{0})+\\sum_{k^{\\prime}=1}^{L}\\exp((\\beta_{1k^{\\prime}}^{*})^{\\top}X+\\beta_{0k^{\\prime}}^{*})}\\cdot h(X,\\eta_{j^{\\prime}}^{*}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\begin{array}{r}{G_{\\ast}:=\\sum_{j^{\\prime}=1}^{L}\\exp(\\beta_{0j^{\\prime}}^{\\ast})\\delta_{(\\beta_{1j^{\\prime}}^{\\ast},\\eta_{j^{\\prime}}^{\\ast})}}\\end{array}$ denotes a mixing measure, i.e., a weighted sum of Dirac measures $\\delta$ , associated with unknown parameters $(\\beta_{1j^{\\prime}}^{*},\\beta_{0j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*})_{j^{\\prime}=1}^{L}$ in $\\mathbb{R}^{N d}\\times\\mathbb{R}\\times\\mathbb{R}^{q}$ . Here, the matrix $B_{j}^{0}$ plays the role of the matrix $\\frac{E_{1}^{\\top}W_{1}^{Q}W_{1}^{K^{\\top}}E_{j}}{\\sqrt{d_{v}}}$ in the score function $s_{1,j}(X)$ . Furthermore, the vector $\\beta_{1j^{\\prime}}^{*}$ corresponds to the vector Ei\u22a4 W lQ \u221aWd lK\u22a4pjK\u2032 in the score function s1,N+j\u2032(X). Furthermore, the experts $h(X,\\eta_{j}^{0})$ correspond to the role of $f_{j}({\\cal X})$ and $h(X,\\eta_{j^{\\prime}}^{*})$ correspond to the role of $f_{N+j^{\\prime}}(X)$ . In our formulation, we consider general parametric forms of the experts $h(X,\\eta_{j}^{0})$ and $h(X,\\eta_{j^{\\prime}}^{*})$ , i.e., we do not only constrain these expert functions to be the forms of the simple experts in the linear gating prefix MoE model. ", "page_idx": 14}, {"type": "text", "text": "Similar to the linear gating prefix MoE model (11), the matrices $B_{j}^{0}$ , the biases $c_{j}^{0}$ , and the expert parameters $\\eta_{j}^{0}$ are known. Our aim is to estimate the unknown gating parameters $\\beta_{1j^{\\prime}}^{*},\\beta_{0j^{\\prime}}^{*}$ , and $\\boldsymbol{\\eta}_{j^{\\prime}}^{*}$ that correspond to the prompts. ", "page_idx": 14}, {"type": "text", "text": "Least squares estimation: We will use the least squares method [45] to estimate the unknown parameters $(\\beta_{0j^{\\prime}}^{*},\\beta_{1j^{\\prime}}^{*},\\eta_{j^{\\prime}}^{*})_{j^{\\prime}=1}^{L}$ or, equivalently, the ground-truth mixing measure $G^{*}$ . In particular, we take into account the estimator ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\widetilde{G}_{n}:=\\underset{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}{\\arg\\operatorname*{min}}\\sum_{i=1}^{n}\\Big(Y_{i}-f_{G}(\\pmb{X}_{i})\\Big)^{2},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where we denote $\\begin{array}{r}{\\mathcal{G}_{L^{\\prime}}(\\Theta):=\\{G=\\sum_{i=1}^{\\ell}\\exp(\\beta_{0i})\\delta_{(\\beta_{1i},\\eta_{i})}:1\\leq\\ell\\leq L^{\\prime},\\;(\\beta_{0i},\\beta_{1i},\\eta_{i})\\in\\Theta\\}\\;.}\\end{array}$ as the set of all mixing measures with at most $L^{\\prime}$ atoms. In practice, since the true number of true experts is typically unknown, we assume that the number of ftited experts $L^{\\prime}$ is sufficiently large, i.e. $\\Bar{L}^{\\prime}>L$ . ", "page_idx": 15}, {"type": "text", "text": "Let us recall that our main objective in this appendix is to show that using the linear gating in the prefix MoE model is not sample efficient. To illustrate that point, we consider a simple scenario when the expert function takes the form $h(\\boldsymbol{X},(a,b))=(a^{\\top}\\boldsymbol{X}\\mathbin{\\dot{\\mathbf{\\Sigma}}}+b)^{p}$ , for some $p\\in\\mathbb N$ . Additionally, we also design a new Voronoi loss function as below to facilitate our arguments. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\hat{\\gamma}_{2,r}(G,G_{*}):=\\sum_{j=1}^{L}\\Big|\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i})-\\exp(\\beta_{0j}^{*})\\Big|+\\sum_{j=1}^{L}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i})\\Big[\\|\\Delta\\beta_{1i j}\\|^{r}+\\|\\Delta a_{i j}\\|^{r}+|\\Delta b_{i j}|^{r}\\Big]\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where we denote $\\Delta\\beta_{1i j^{\\prime}}:=\\beta_{1i}-\\beta_{1j^{\\prime}}^{*}$ and $\\Delta\\eta_{i j^{\\prime}}:=\\eta_{i}-\\eta_{j^{\\prime}}^{*}$ . ", "page_idx": 15}, {"type": "text", "text": "Now, we are ready to state the result of parameter estimation under the linear gating prefix MoE model in the following theorem: ", "page_idx": 15}, {"type": "text", "text": "Theorem A.1. Assume that the experts take the form $h(\\boldsymbol{X},(a,b))=(a^{\\top}\\boldsymbol{X}+b)^{p}$ , for some $p\\in\\mathbb N$ , then we achieve the following minimax lower bound of estimating $G_{*}$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{\\overline{{G}}_{n}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}\\operatorname*{sup}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)\\backslash\\mathcal{G}_{L-1}(\\Theta)}\\mathbb{E}_{f_{G}}[\\mathcal{L}_{2,r}(\\overline{{G}}_{n},G)]\\gtrsim n^{-1/2},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "for any $r\\geq1$ , where $\\mathbb{E}_{f_{G}}$ indicates the expectation taken w.r.t the product measure with $f_{G}^{n}$ . ", "page_idx": 15}, {"type": "text", "text": "There are two main implications of the result in Theorem A.1: ", "page_idx": 15}, {"type": "text", "text": "(i) The rates for estimating parameters $\\beta_{1j}^{*}$ , $a_{j}^{*}$ and $b_{j}^{*}$ are slower than $\\mathcal{O}_{P}(n^{-1/2r})$ , for any $r\\geq1$ . This means that they are slower than any polynomial rates, and could be of order ${\\mathcal{O}}_{P}(1/\\log(n))$ . Using the same reasoning described after equation (22), we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{sup}_{x}|\\varphi((\\widehat{a}_{i}^{n})^{\\top}X+\\widehat{b}_{i}^{n})-\\varphi((a_{j}^{*})^{\\top}X+b_{j}^{*})|\\lesssim\\cdot\\|\\widehat{a}_{i}^{n}-a_{j}^{*}\\|+|\\widehat{b}_{i}^{n}-b_{j}^{*}|.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "As a consequence, the rates for estimating experts $\\varphi((a_{j}^{*})^{\\top}X+b_{j}^{*})$ are no better than those for estimating the parameters $a_{j}^{*}$ and $b_{j}^{*}$ , and could also be as slow as $\\dot{O_{P}}(1/\\log(n))$ . ", "page_idx": 15}, {"type": "text", "text": "(ii) The above rates imply that we need an exponential number of data (roughly $\\exp(1/\\epsilon^{\\tau})$ where $\\epsilon$ is the desired approximation error) to estimate the parameters and experts of the linear gating prefix MoE. This fact demonstrates that using the linear gating in the prefix MoE model is not sample efficient from the perspective of the expert estimation problem. ", "page_idx": 15}, {"type": "text", "text": "Proof of Theorem A.1. Prior to presenting the main proof of Proposition A.1, let us introduce the following key result: ", "page_idx": 15}, {"type": "text", "text": "Lemma A.2. If the following holds for any $r\\geq1$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{\\varepsilon\\to0}\\operatorname*{inf}_{\\substack{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta):\\mathcal{L}_{2,r}(G,G_{*})\\leq\\varepsilon}}\\frac{\\|f_{G}-f_{G_{*}}\\|_{L_{2}(\\mu)}}{\\mathcal{L}_{2,r}(G,G_{*})}=0,\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "then we obtain that ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{\\overline{{G}}_{n}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}\\operatorname*{sup}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)\\backslash\\mathcal{G}_{L-1}(\\Theta)}\\mathbb{E}_{f_{G}}[\\mathcal{L}_{2,r}(\\overline{{G}}_{n},G)]\\gtrsim n^{-1/2}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Proof of Lemma A.2. Indeed, from the Gaussian assumption on the noise variables $\\epsilon_{i}$ , we obtain that $\\mathbf{\\widetilde{\\gamma}}_{i}|\\mathbf{X}_{i}\\sim\\mathcal{N}(f_{G_{*}}(\\mathbf{X}_{i}),\\sigma^{2})$ for all $i\\in[n]$ . Next, the assumption in equation (28) indicates for sufficiently small $\\varepsilon>0$ and a fixed constant $C_{1}>0$ which we will choose later, we can find a mixing measure $G_{\\ast}^{\\prime}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)$ such that $\\mathcal{L}_{2,r}(G_{*}^{\\prime},G_{*})=2\\varepsilon$ and $\\|f_{G_{*}^{\\prime}}-f_{G_{*}}\\|_{L^{2}(\\mu)}\\leq C_{1}\\varepsilon$ . From Le Cam\u2019s lemma [57], as the Voronoi loss function $\\mathcal{L}_{2,r}$ satisfies the weak triangle inequality, we obtain that ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{G_{n}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}{\\operatorname*{inf}}\\quad\\underset{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)\\backslash\\mathcal{G}_{L-1}(\\Theta)}{\\operatorname*{sup}}\\mathbb{E}_{f_{G}}[\\mathcal{L}_{2,r}(\\overline{{G}}_{n},G)]}\\\\ &{\\qquad\\qquad\\gtrsim\\frac{\\mathcal{L}_{2,r}\\left(G_{*}^{\\prime},G_{*}\\right)}{8}\\mathrm{exp}(-n\\mathbb{E}_{X\\sim\\mu}[\\mathrm{KL}(\\mathcal{N}(f_{G_{*}^{\\prime}}(\\mathbf{X}),\\sigma^{2}),\\mathcal{N}(f_{G_{*}}(\\mathbf{X}),\\sigma^{2}))])}\\\\ &{\\qquad\\gtrsim\\varepsilon\\cdot\\exp(-n\\|f_{G_{*}^{\\prime}}-f_{G_{*}}\\|_{L^{2}(\\mu)}^{2}),}\\\\ &{\\qquad\\gtrsim\\varepsilon\\cdot\\exp(-C_{1}n\\varepsilon^{2}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where the second inequality is due to the fact that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathrm{KL}(\\mathcal{N}(f_{G_{*}^{\\prime}}(X),\\sigma^{2}),\\mathcal{N}(f_{G_{*}}(X),\\sigma^{2}))=\\frac{(f_{G_{*}^{\\prime}}(X)-f_{G_{*}}(X))^{2}}{2\\sigma^{2}}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "By choosing $\\varepsilon=n^{-1/2}$ , we obtain that $\\varepsilon\\cdot\\exp(-C_{1}n\\varepsilon^{2})=n^{-1/2}\\exp(-C_{1})$ . As a consequence, we achieve the desired minimax lower bound in equation (29). \u53e3 ", "page_idx": 16}, {"type": "text", "text": "Main proof. We need to prove that the following limit holds true for any $r\\geq1$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{\\varepsilon\\to0}\\operatorname*{inf}_{\\substack{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta):\\mathcal{L}_{2,r}(G,G_{*})\\leq\\varepsilon}}\\frac{\\|f_{G}-f_{G_{*}}\\|_{L_{2}(\\mu)}}{\\mathcal{L}_{2,r}(G,G_{*})}=0.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "For that purpose, it suffices to build a sequence of mixing measures $(G_{n})_{n\\geq1}$ such that both $\\mathcal{L}_{2,r}(G_{n},\\bar{G}_{*}\\bar{)}\\rightarrow0$ and ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\frac{\\|f_{G_{n}}-f_{G_{*}}\\|_{L_{2}(\\mu)}}{\\mathcal{L}_{2,r}(G_{n},G_{*})}\\to0,\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "as $n\\to\\infty$ . To this end, we consider the sequence $\\begin{array}{r}{G_{n}=\\sum_{i=1}^{L+1}\\exp(\\beta_{0i}^{n})\\delta_{(\\beta_{1i}^{n},a_{i}^{n},b_{i}^{n})}}\\end{array}$ , where ", "page_idx": 16}, {"type": "text", "text": "As a result, the loss function $\\mathcal{L}_{2,r}\\!\\left(G_{n},G_{*}\\right)$ is reduced to ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathcal{L}_{2,r}(G_{n},G_{*})=\\frac{1}{n^{r+1}}+\\left[\\exp(\\beta_{01}^{*})+\\frac{1}{n^{r+1}}\\right]\\cdot\\frac{1}{n^{r}}=\\mathcal{O}(n^{-r}).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "which indicates indicates that $\\mathcal{L}_{2,r}(G_{n},G_{*})\\to0$ as $n\\to\\infty$ . ", "page_idx": 16}, {"type": "text", "text": "Now, we prove that $\\Vert f_{G_{n}}-f_{G_{*}}\\Vert_{L_{2}(\\mu)}/\\mathcal{L}_{2,r}(G_{n},G_{*})\\to0$ . For that purpose, let us consider the quantity ", "page_idx": 16}, {"type": "equation", "text": "$$\nQ_{n}(\\pmb{X}):=\\Big[\\sum_{i^{\\prime}=1}^{N}\\exp(\\pmb{X}^{\\top}\\pmb{B}_{i^{\\prime}}^{0}\\pmb{X}+c_{i^{\\prime}}^{0})+\\sum_{j^{\\prime}=1}^{L}\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}\\pmb{X}+\\beta_{0j^{\\prime}}^{*})\\Big]\\cdot[g_{G_{n}}(\\pmb{X})-g_{G_{*}}(\\pmb{X})].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "For simplicity, let us consider the polynomial degree $p=1$ as the arguments for other values of $p$ can be adapted accordingly. Recall from equation (46) that $Q_{n}(X)$ can be decomposed as follows: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\mathcal{J}_{n}({\\pmb X})=\\sum_{j=1}^{L}\\sum_{i\\in A_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\exp((\\beta_{1i}^{n})^{\\top}{\\pmb X})((a_{i}^{n})^{\\top}{\\pmb X}+b_{i}^{n})-\\exp((\\beta_{1j}^{*})^{\\top}{\\pmb X})((a_{j}^{*})^{\\top}{\\pmb X}+b_{j}^{*})\\Big]}}\\\\ {{\\displaystyle~~~~~-\\sum_{j=1}^{L}\\sum_{i\\in A_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\exp((\\beta_{1i}^{n})^{\\top}{\\pmb X})g_{G_{n}}({\\pmb X})-\\exp((\\beta_{1j}^{*})^{\\top}{\\pmb X})g_{G_{n}}({\\pmb X})\\Big]}}\\\\ {{\\displaystyle~~~~~~+\\sum_{j=1}^{L}\\Big(\\sum_{i\\in A_{j}}\\exp(\\beta_{0i}^{n})-\\exp(\\beta_{0j}^{*})\\Big)\\Big[\\exp((\\beta_{1j}^{*})^{\\top}{\\pmb X})((a_{j}^{*})^{\\top}{\\pmb X}+b_{j}^{*})-\\exp((\\beta_{1j}^{*})^{\\top}{\\pmb X})g_{G_{n}}({\\pmb X})\\Big]}}\\\\ {{\\displaystyle~~~~~~:=A_{n}({\\pmb X})-B_{n}({\\pmb X})+C_{n}({\\pmb X}).}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "From the definitions of $\\beta_{1i}^{n},a_{i}^{n}$ and $b_{i}^{n}$ , we can rewrite $A_{n}(X)$ as follows: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{A_{n}(\\pmb{X})=\\displaystyle\\sum_{i=1}^{2}\\frac{1}{2}\\Big[\\exp(\\beta_{01}^{*})+\\frac{1}{n^{r+1}}\\Big]\\exp((\\beta_{11}^{*})^{\\top}\\pmb{X})[((a_{i}^{n})^{\\top}\\pmb{X}+b_{i}^{n})-((a_{1}^{*})^{\\top}\\pmb{X}+b_{1}^{*})]}\\\\ &{\\qquad=\\displaystyle\\frac{1}{2}\\Big[\\exp(\\beta_{01}^{*})+\\frac{1}{n^{r+1}}\\Big]\\exp((\\beta_{11}^{*})^{\\top}\\pmb{X})[(b_{1}^{n}-b_{1}^{*})+(b_{2}^{n}-b_{1}^{*})]}\\\\ &{\\qquad=0.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Additionally, it can also be checked that $B_{n}(\\boldsymbol{X})=0$ , and $C_{n}(\\boldsymbol{X})=\\mathcal{O}(n^{-(r+1)})$ . Therefore, it follows that $C_{n}(\\boldsymbol{X})/\\mathcal{L}_{2,r}(G_{n},G_{*})\\rightarrow0$ . As a consequence, $Q_{n}(X)/{\\mathcal{L}}_{2,r}(G_{n},G_{*})\\to0$ as $n\\to\\infty$ for almost every $\\mathbf{\\deltaX}$ . ", "page_idx": 17}, {"type": "text", "text": "Since the term $\\begin{array}{r l}&{\\Big[\\sum_{i^{\\prime}=1}^{N}\\exp(X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0})+\\sum_{j^{\\prime}=1}^{L}\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}X+\\beta_{0j^{\\prime}}^{*})\\Big]}\\end{array}$ is bounded, we deduce that $[f_{G_{n}}\\mathbf{\\bar{(}}\\mathbf{X})-f_{G_{*}}(\\mathbf{X})]/\\mathcal{L}_{2,r}\\to0$ for almost every $\\mathbf{\\deltaX}$ . This result indicates that ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\|f_{G_{n}}-f_{G_{*}}\\|_{L_{2}(\\mu)}/\\mathcal{L}_{2,r}(G_{n},G_{*})\\to0\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "as $n\\to\\infty$ . Hence, the proof of claim (31) is completed. ", "page_idx": 17}, {"type": "text", "text": "B Proof of Theoretical Results ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In this appendix, we present rigorous proofs for the theoretical results introduced in Section 4, namely Theorem 4.1 and Theorem 4.3, in that order. ", "page_idx": 17}, {"type": "text", "text": "B.1 Proof of Theorem 4.1 ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "For the proof of the theorem, we first introduce some notation. Firstly, we denote by $\\mathcal{F}_{L^{\\prime}}(\\Theta)$ the set of conditional densities of all mixing measures in $\\mathcal{G}_{L^{\\prime}}(\\Theta)$ , that is, $\\mathcal{F}_{L^{\\prime}}(\\Theta):=\\{g_{G}(\\pmb{X}):G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)\\}$ . Additionally, for each $\\delta>0$ , the $\\bar{L}^{2}(\\mu)$ ball centered around the conditional density $g_{G_{*}}(Y|X)$ and intersected with the set $\\mathcal{F}_{L^{\\prime}}(\\Theta)$ is defined as ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{F}_{L^{\\prime}}(\\Theta,\\delta):=\\left\\{g\\in\\mathcal{F}_{L^{\\prime}}(\\Theta):\\|g-g_{G_{*}}\\|_{L^{2}(\\mu)}\\leq\\delta\\right\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "In order to measure the size of the above set, Geer et. al. [45] suggest using the following quantity: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathcal{I}_{B}(\\delta,\\mathcal{F}_{L^{\\prime}}(\\Theta,\\delta)):=\\int_{\\delta^{2}/2^{13}}^{\\delta}H_{B}^{1/2}(t,\\mathcal{F}_{L^{\\prime}}(\\Theta,t),\\|\\cdot\\|_{L^{2}(\\mu)})\\;\\mathrm{d}t\\vee\\delta,\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where $H_{B}(t,\\mathcal{F}_{L^{\\prime}}(\\Theta,t),\\|\\cdot\\|_{L^{2}(\\mu)})$ stands for the bracketing entropy [45] of $\\mathcal{F}_{L^{\\prime}}(\\Theta,u)$ under the $L^{2}(\\mu)$ -norm, and $t\\vee\\delta:=\\operatorname*{max}\\{t,\\delta\\}$ . By using the similar proof argument of Theorem 7.4 and Theorem 9.2 in [45] with notations being adapted to this work, we obtain the following lemma: ", "page_idx": 17}, {"type": "text", "text": "Lemma B.1. Take $\\Psi(\\delta)\\geq\\mathcal{I}_{B}\\big(\\delta,\\mathcal{F}_{L^{\\prime}}(\\Theta,\\delta)\\big)$ that satisfies $\\Psi(\\delta)/\\delta^{2}$ is a non-in\u221acreasing function of $\\delta$ . Then, for some universal constant c and for some sequence $\\left(\\delta_{n}\\right)$ such that ${\\sqrt{n}}\\delta_{n}^{2}\\geq c\\Psi(\\delta_{n})$ , we achieve that ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbb{P}\\bigg(\\|g_{\\widehat{G}_{n}}-g_{G_{*}}\\|_{L^{2}(\\mu)}>\\delta\\bigg)\\leq c\\exp\\left(-\\frac{n\\delta^{2}}{c^{2}}\\right),\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "for all $\\delta\\geq\\delta_{n}$ . ", "page_idx": 17}, {"type": "text", "text": "We now demonstrate that when the expert functions are Lipschitz continuous, the following bound holds: ", "page_idx": 17}, {"type": "equation", "text": "$$\nH_{B}(\\varepsilon,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{2}(\\mu)})\\lesssim\\log(1/\\varepsilon),\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "for any $0\\,<\\,\\varepsilon\\,\\le\\,1/2$ . Indeed, for any function $g_{G}\\;\\in\\;{\\mathcal{F}}_{L^{\\prime}}(\\Theta)$ , since the expert functions are bounded, we obtain that $h(\\pmb{X},\\eta)\\,\\leq\\,M$ for all $\\mathbf{\\deltaX}$ where $M$ is a bounded constant of the expert functions. Let $\\tau\\leq\\varepsilon$ and $\\{\\pi_{1},\\ldots,\\pi_{\\bar{N}}\\}$ be the $\\zeta$ -cover under the $L^{\\infty}$ norm of the set $\\mathcal{F}_{L^{\\prime}}(\\Theta)$ where $\\bar{N}:=N(\\zeta,{\\mathcal{F}}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{\\infty}})$ is the $\\eta$ -covering number of the metric space $(\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{\\infty}})$ . Then, we construct the brackets of the form $[L_{i}(\\pmb{X}),U_{i}(\\pmb{X})]$ for all $i\\in[\\bar{N}]$ as follows: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{L_{i}(x):=\\operatorname*{max}\\{\\pi_{i}(X)-\\zeta,0\\},}\\\\ &{U_{i}(x):=\\operatorname*{max}\\{\\pi_{i}(X)+\\zeta,M\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "From the above construction, we can validate that $\\mathcal{F}_{L^{\\prime}}(\\Theta)\\subset\\cup_{i=1}^{\\bar{N}}[L_{i}(\\pmb{X}),U_{i}(\\pmb{X})]$ and $U_{i}(\\mathbf{X})-$ $L_{i}(\\pmb{X})\\leq\\operatorname*{min}\\{2\\zeta,M\\}$ . Therefore, it follows that ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\|U_{i}-L_{i}\\|_{L_{2}(\\mu)}^{2}=\\int(U_{i}-L_{i})^{2}\\mathrm{d}\\mu(\\pmb{X})\\leq\\int4\\zeta^{2}\\mathrm{d}\\mu(\\pmb{X})=4\\zeta^{2},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "which implies that $\\|U_{i}-L_{i}\\|_{L_{2}(\\mu)}\\leq2\\zeta$ . By definition of the bracketing entropy, we deduce that ", "page_idx": 18}, {"type": "equation", "text": "$$\nH_{B}(2\\zeta,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{2}(\\mu)})\\leq\\log N=\\log N(\\zeta,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{\\infty}}).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Therefore, we need to provide an upper bound for the covering number $\\bar{N}$ . In particular, we denote $\\Delta:=\\{(\\beta_{1},\\beta_{0})\\in\\mathbb{R}^{N\\dot{d}\\times N d}\\times\\mathbb{R}^{N\\dot{d}}\\times\\mathbb{R}:(\\beta_{1},\\beta_{0},\\eta)\\in\\Theta\\}$ and $\\Omega:=\\{\\eta\\in\\mathbb{R}^{q}:(\\beta_{1},\\beta_{0},\\eta)\\in\\Theta\\}$ . Since $\\Theta$ is a compact set, $\\Delta$ and $\\Omega$ are also compact. Therefore, we can find $\\zeta$ -covers $\\Delta_{\\zeta}$ and $\\Omega_{\\zeta}$ for $\\Delta$ and $\\Omega$ , respectively. We can check that ", "page_idx": 18}, {"type": "equation", "text": "$$\n|\\Delta_{\\zeta}|\\leq\\mathcal{O}_{P}(\\tau^{-(N d+1)L^{\\prime}}),\\quad|\\Omega_{\\zeta}|\\lesssim\\mathcal{O}_{P}(\\tau^{-q L^{\\prime}}).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "For each mixing measure $\\begin{array}{r}{G=\\sum_{i=1}^{L^{\\prime}}\\mathrm{exp}(\\beta_{0i})\\delta_{(\\beta_{1i},\\eta_{i})}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}\\end{array}$ , we consider other two mixing measures: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\breve{G}:=\\sum_{i=1}^{L^{\\prime}}\\exp(\\beta_{0i})\\delta_{(\\beta_{1i},\\overline{{{\\eta}}}_{i})},\\qquad\\overline{{{G}}}:=\\sum_{i=1}^{L^{\\prime}}\\exp(\\overline{{{\\beta}}}_{0i})\\delta_{(\\overline{{{\\beta}}}_{1i},\\overline{{{\\eta}}}_{i})}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Here, $\\overline{{\\eta}}_{i}\\,\\in\\,\\Omega_{\\zeta}$ such that $\\overline{{\\eta}}_{i}$ is the closest to $\\eta_{i}$ in that set, while $(\\overline{{\\beta}}_{1i},\\overline{{\\beta}}_{0i})\\in\\Delta_{\\zeta}$ is the closest to $(\\beta_{1i},\\beta_{0i})$ in that set. From the above formulations, we get that ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\|g_{G}-g_{G}\\|_{L^{\\infty}}}\\\\ &{=\\underset{x\\in\\mathcal{X}}{\\operatorname*{sup}}\\ \\underset{j=1}{\\overset{L^{\\prime}}{\\sum}}\\frac{\\exp(\\beta_{i j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{i j}^{\\top}X)+\\beta_{0j})\\cdot|h(X,\\eta_{j})-h(X,\\eta_{j})|}{\\sum_{i=1}^{N}\\exp(X^{\\top}B_{i}^{0}X+\\epsilon_{i}^{0})+\\sum_{j=1}^{L^{\\prime}}\\exp(\\beta_{i j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{i j}^{\\top}X)+\\beta_{0j})}}\\\\ &{\\leq\\underset{j=1}{\\overset{L^{\\prime}}{\\sum}}\\underset{x\\in\\mathcal{X}}{\\operatorname*{sup}}\\ \\frac{\\exp(\\beta_{i j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{i j}^{\\top}X)+\\beta_{0j})\\cdot|h(X,\\eta_{j})-h(X,\\eta_{j})|}{\\sum_{i=1}^{N}\\exp(X^{\\top}B_{i}^{0}X+\\epsilon_{i}^{0})+\\sum_{j=1}^{L^{\\prime}}\\exp(\\beta_{i j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{i j}^{\\top}X)+\\beta_{0j})}}\\\\ &{\\leq\\underset{j=1}{\\overset{L^{\\prime}}{\\sum}}\\underset{x\\in\\mathcal{X}}{\\operatorname*{sup}}\\ \\vert h(X,\\eta_{j})-h(X,\\eta_{j})\\vert}\\\\ &{\\leq\\underset{j=1}{\\overset{L^{\\prime}}{\\sum}}\\underset{x\\in\\mathcal{X}}{\\operatorname*{sup}}\\ [L(X,\\vert\\vert\\eta_{j})-h(X,\\eta_{j})]}\\\\ &{\\leq\\underset{j=1}{\\overset{L^{\\prime}}{\\sum}}\\underset{x\\in\\mathcal{X}}{\\operatorname*{sup}}\\ [L_{1}(X)\\cdot\\vert\\vert\\eta_{j}-\\overline{{\\eta_{j}}}\\vert]}\\\\ &{\\leq L^{\\prime}\\zeta\\leq\\zeta.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Here, the second inequality occurs as the softmax weight is bounded by one, and the third inequality follows from the fact that the expert $h(X,\\cdot)$ is a Lipschitz function with some Lipschitz constant $L_{1}(X)>0$ . Next, let us denote ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{D:=\\displaystyle\\sum_{i^{\\prime}=1}^{N}\\exp(X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0})+\\displaystyle\\sum_{j^{\\prime}=1}^{L^{\\prime}}\\exp(\\beta_{1j^{\\prime}}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)+\\beta_{0j^{\\prime}}),}\\\\ &{\\overline{{D}}:=\\displaystyle\\sum_{i^{\\prime}=1}^{N}\\exp(X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0})+\\displaystyle\\sum_{j^{\\prime}=1}^{L^{\\prime}}\\exp(\\overline{{\\beta}}_{1j^{\\prime}}^{\\top}X+\\alpha\\sigma(\\tau\\overline{{\\beta}}_{1j^{\\prime}}^{\\top}X)+\\overline{{\\beta}}_{0j^{\\prime}}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Then, we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{g_{G}-g_{G}^{\\prime}||_{G^{\\infty}}}\\\\ &{=\\displaystyle\\operatorname*{sup}_{x\\in\\mathcal{K}}\\left|\\frac{1}{D}\\left(\\sum_{i=1}^{N}\\exp(X^{\\top}B_{i}^{0}X+c_{i}^{0})h(X,\\eta_{i}^{0})+\\sum_{j=1}^{L^{\\prime}}\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})h(X,\\overline{{\\eta}}_{j})\\right)\\right.}\\\\ &{\\displaystyle\\ \\ -\\left.\\frac{1}{D}\\Big(\\sum_{i=1}^{N}\\exp(X^{\\top}B_{i}^{0}X+c_{i}^{0})h(X,\\eta_{i}^{0})+\\sum_{j=1}^{L^{\\prime}}\\exp(\\overline{{\\beta}}_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\overline{{\\beta}}_{1j}^{\\top}X)+\\overline{{\\beta}}_{0j})h(X,\\overline{{\\eta}}_{j})\\Big)\\right|}\\\\ &{\\leq\\displaystyle\\left|\\frac{1}{D}-\\frac{1}{D}\\right|\\cdot\\sum_{i=1}^{N}\\operatorname*{sup}\\Big[\\exp(X^{\\top}B_{i}^{0}X+c_{i}^{0})h(X,\\eta_{i}^{0})\\Big]}\\\\ &{\\displaystyle\\ \\ +\\sum_{j=1}^{L^{\\prime}}x\\operatorname*{sup}\\left|\\frac{\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})}{D}-\\frac{\\exp(\\overline{{\\beta}}_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\overline{{\\beta}}_{1j}^{\\top}X)+\\overline{{\\beta}}_{0j})}{\\overline{{D}}}\\right|\\cdot|h(X,\\overline{{\\eta}}_{j})}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Now, we will bound two terms in the above right hand side. Firstly, since both the input space $\\mathcal{X}$ and the parameter space $\\Theta$ are bounded, we have that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\frac{1}{D}-\\frac{1}{D}\\lesssim|D-\\overline{{D}}|}&{}\\\\ &{\\qquad\\leq\\sum_{j=1}^{T}\\left[\\exp(\\beta_{1j}^{\\top}\\mathcal{K}+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}\\mathcal{K})+\\beta_{0j^{\\prime}})-\\exp(\\overline{{\\beta_{1j,j}^{\\top}}}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}\\mathcal{K})+\\overline{{\\beta_{0j^{\\prime}}}})\\right]}\\\\ &{\\qquad\\lesssim\\sum_{j=1}^{T^{\\prime}}\\left[(\\beta_{1j}-\\overline{{\\beta}}_{1j})^{\\top}X+\\alpha|\\sigma(\\tau\\beta_{1j}^{\\top}\\mathcal{K})-\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)\\right]+(\\beta_{0j}-\\overline{{\\beta}}_{0j})\\Big|}\\\\ &{\\qquad\\leq\\sum_{j=1}^{T^{\\prime}}|(\\beta_{1j}-\\overline{{\\beta}}_{1j})^{\\top}X|+|\\alpha|\\cdot|\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)-\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)|+|\\beta_{0j}-\\overline{{\\beta}}_{0j}|}\\\\ &{\\qquad\\leq\\sum_{j=1}^{T^{\\prime}}(\\beta_{1j}-\\overline{{\\beta}}_{1j})^{\\top}X|+|\\alpha|\\cdot|\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)-\\sigma(\\tau\\beta_{1j^{\\prime}}^{\\top}X)|+|\\beta_{0j}-\\overline{{\\beta}}_{0j}|}\\\\ &{\\qquad\\lesssim\\sum_{j=1}^{T^{\\prime}}\\left[\\|\\beta_{1j}-\\overline{{\\beta}}_{1j}\\|\\cdot\\|X\\|+|\\alpha\\tau|\\cdot\\|\\beta_{1j}-\\overline{{\\beta}}_{1j}\\|\\cdot\\|X\\|+|\\beta_{0j}-\\overline{{\\beta}}_{0j}|\\right]}\\\\ &{\\qquad\\leq L^{\\prime}(B+|\\alpha\\tau|B+1)\\leq C.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "As a result, we deduce that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\Big|\\frac{1}{D}-\\frac{1}{\\overline{{D}}}\\Big|\\cdot\\sum_{i=1}^{N}\\operatorname*{sup}_{X\\in\\mathcal{X}}\\ \\Big|\\exp(X^{\\top}B_{i}^{0}X+c_{i}^{0})h(X,\\eta_{i}^{0})\\Big|\\lesssim\\zeta.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Regarding the second term, note that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\frac{\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})}{D}-\\frac{\\exp(\\overline{{\\beta}}_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\overline{{\\beta}}_{1j}^{\\top}X)+\\overline{{\\beta}}_{0j})}{\\overline{{D}}}}\\\\ &{=\\displaystyle\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})\\Big(\\frac{1}{D}-\\frac{1}{\\overline{{D}}}\\Big)}\\\\ &{\\qquad+\\displaystyle\\frac{1}{\\overline{{D}}}\\Big[\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})-\\exp(\\exp(\\overline{{\\beta}}_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\overline{{\\beta}}_{1j}^{\\top}X)+\\overline{{\\beta}}_{0j}))\\Big].}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Since both the input space and the parameter space are bounded, we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\exp\\bigl(\\beta_{1j}^{\\top}{\\pmb X}+\\alpha\\sigma\\bigr(\\tau\\beta_{1j}^{\\top}{\\pmb X}\\bigr)+\\beta_{0j}\\bigr)\\Big(\\displaystyle\\frac1D-\\displaystyle\\frac1D\\Bigr)\\lesssim\\displaystyle\\frac1D-\\displaystyle\\frac1D\\lesssim\\zeta,}\\\\ {\\displaystyle\\frac1D\\Big[\\exp\\bigl(\\beta_{1j}^{\\top}{\\pmb X}+\\alpha\\sigma\\bigr(\\tau\\beta_{1j}^{\\top}{\\pmb X}\\bigr)+\\beta_{0j}\\bigr)-\\exp\\bigl(\\overline{\\beta}_{1j}^{\\top}{\\pmb X}+\\alpha\\sigma\\bigr(\\tau\\overline{\\beta}_{1j}^{\\top}{\\pmb X}\\bigr)+\\overline{\\beta}_{0j}\\bigr)}\\\\ {\\displaystyle\\qquad\\qquad\\qquad\\qquad\\lesssim(B+|\\alpha\\tau|B+1)\\zeta\\lesssim\\zeta,}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "which yields that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\displaystyle\\sum_{j=1}^{L^{\\prime}}\\operatorname*{sup}_{X\\in\\mathcal{X}}\\left\\vert\\frac{\\exp(\\beta_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\beta_{1j}^{\\top}X)+\\beta_{0j})}{D}-\\frac{\\exp(\\overline{\\beta}_{1j}^{\\top}X+\\alpha\\sigma(\\tau\\overline{\\beta}_{1j}^{\\top}X)+\\overline{\\beta}_{0j})}{\\overline{D}}\\right\\vert\\cdot\\left\\vert h(X,\\overline{\\eta}_{j})\\right\\vert}\\\\ {\\lesssim\\zeta\\displaystyle\\sum_{j=1}^{L^{\\prime}}\\operatorname*{sup}_{X\\in\\mathcal{X}}\\left\\vert h(X,\\overline{\\eta}_{j})\\right\\vert\\lesssim\\zeta.\\qquad(38)}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "From equations (36), (37) and (38), we obtain that $\\|g_{\\check{G}}-g_{\\overline{{G}}}\\|_{L^{\\infty}}\\lesssim\\zeta$ . According to the triangle inequality, we have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\|g_{G}-g_{\\overline{{G}}}\\|_{L^{\\infty}}\\leq\\|g_{G}-g_{\\check{G}}\\|_{L^{\\infty}}+\\|g_{\\check{G}}-g_{\\overline{{G}}}\\|_{L^{\\infty}}\\lesssim\\zeta.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "By definition of the covering number, we deduce that ", "page_idx": 20}, {"type": "equation", "text": "$$\nN(\\zeta,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{\\infty}})\\leq|\\Delta_{\\zeta}|\\times|\\Omega_{\\zeta}|\\leq\\mathcal{O}(n^{-(N d+1)L^{\\prime}})\\times\\mathcal{O}(n^{-q L^{\\prime}})\\leq\\mathcal{O}(n^{-(N d+1+q)L^{\\prime}}).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Combine equations (35) and (39), we achieve that ", "page_idx": 20}, {"type": "equation", "text": "$$\nH_{B}(2\\zeta,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L_{2}(\\mu)})\\lesssim\\log(1/\\tau).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Let $\\zeta=\\varepsilon/2$ , then we obtain that ", "page_idx": 20}, {"type": "equation", "text": "$$\nH_{B}(\\varepsilon,\\mathcal{F}_{L^{\\prime}}(\\Theta),\\|\\cdot\\|_{L^{2}(\\mu)})\\lesssim\\log(1/\\varepsilon).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "As a result, it follows that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mathcal{I}_{B}(\\delta,\\mathcal{F}_{L^{\\prime}}(\\Theta,\\delta))=\\int_{\\delta^{2}/2^{13}}^{\\delta}H_{B}^{1/2}(t,\\mathcal{F}_{L^{\\prime}}(\\Theta,t),\\|\\cdot\\|_{L_{2}(\\mu)})\\;\\mathrm{d}t\\vee\\delta\\lesssim\\int_{\\delta^{2}/2^{13}}^{\\delta}\\log(1/t)d t\\vee\\delta.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Let $\\Psi(\\delta)=\\delta\\cdot[\\log(1/\\delta)]^{1/2}$ , then $\\Psi(\\delta)/\\delta^{2}$ is a non-increasing function of $\\delta$ . Furthermore, equation (40) indicates that $\\Psi(\\delta)\\geq\\mathcal{I}_{B}(\\delta,\\mathcal{F}_{L^{\\prime}}(\\Theta,\\delta))$ . In addition, let $\\delta_{n}=\\sqrt{\\log(n)/n}$ , then we get that $\\sqrt{n}\\delta_{n}^{2}\\geq c\\Psi(\\delta_{n})$ for some universal constant $c$ . Finally, by applying Lemma B.1, we achieve the desired conclusion of the theorem. ", "page_idx": 20}, {"type": "text", "text": "B.2 Proof of Theorem 4.3 ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Our goal is also to demonstrate the following inequality: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)}\\|g_{G}-g_{G_{*}}\\|_{L_{2}(\\mu)}/\\mathcal{L}_{1}(G,G_{*})>0.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "For that purpose, we divide the proof of the above inequality into local and global parts in the sequel. Local part: In this part, we demonstrate that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{\\varepsilon\\to0}\\operatorname*{inf}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta):\\mathcal{L}_{1}(G,G_{*})\\leq\\varepsilon}\\|g_{G}-g_{G_{*}}\\|_{L_{2}(\\mu)}/\\mathcal{L}_{1}(G,G_{*})>0.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Assume by contrary that the above claim is not true, then there exists a sequence of mixing measures $\\begin{array}{r}{G_{n}=\\sum_{i=1}^{\\bar{L}}\\exp(\\dot{\\beta}_{0i}^{n})\\delta_{(\\beta_{1i}^{n},\\eta_{i}^{n})}}\\end{array}$ in $\\mathcal{G}_{L^{\\prime}}(\\Theta)$ such that $\\mathcal{L}_{1n}:=\\mathcal{L}_{1}(G_{n},G_{*})\\rightarrow0$ and ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\lVert g_{G_{n}}-g_{G_{*}}\\rVert_{L_{2}(\\mu)}/{\\mathcal{L}_{1n}}\\to0,\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "as $n\\to\\infty$ . Let us denote by $\\mathcal{V}_{j}^{n}:=\\mathcal{V}_{j}(G_{n})$ a Voronoi cell of $G_{n}$ generated by the $j$ -th components of $G_{*}$ . Since our arguments are asymptotic, we may assume that those Voronoi cells do not depend on the sample size, i.e., $\\upnu_{j}=\\upnu_{j}^{n}$ . Thus, the Voronoi loss ${\\mathcal{L}}_{1n}$ can be represented as ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{1n}:=\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|>1}\\displaystyle\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\|\\Delta\\beta_{1i j}^{n}\\|^{2}+\\|\\Delta\\eta_{i j}^{n}\\|^{2}\\Big]}\\\\ &{+\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|=1}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\|\\Delta\\beta_{1i j}^{n}\\|+\\|\\Delta\\eta_{i j}^{n}\\|\\Big]+\\displaystyle\\sum_{j=1}^{k_{*}}\\Big|\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{1i}^{n})-\\exp(\\beta_{1j}^{*})\\Big|,}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where we denote $\\Delta\\beta_{1i j}^{n}:=\\beta_{1i}^{n}-\\beta_{1j}^{*}$ and $\\Delta\\eta_{i j}^{n}:=\\eta_{i}^{n}-\\eta_{j}^{*}$ . ", "page_idx": 21}, {"type": "text", "text": "Since $\\mathcal{L}_{1n}\\to0$ , we get that $(\\beta_{1i}^{n},\\eta_{i}^{n})\\rightarrow(\\beta_{1j}^{*},\\eta_{j}^{*})$ and $\\begin{array}{r}{\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\to\\exp(\\beta_{0j}^{*})}\\end{array}$ as $n\\to\\infty$ for any $i\\in\\mathcal{V}_{j}$ and $j\\in[L]$ . Now, we divide the proof of the local part into three steps as follows: ", "page_idx": 21}, {"type": "text", "text": "Step 1 - Taylor expansion. In this step, we would like to decompose the quantity ", "page_idx": 21}, {"type": "equation", "text": "$$\nQ_{n}(\\pmb{X}):=\\Big[\\sum_{i^{\\prime}=1}^{N}\\exp(\\pmb{X}^{\\top}\\pmb{A}_{i^{\\prime}}^{0}\\pmb{X}+c_{i^{\\prime}}^{0})+\\sum_{j^{\\prime}=1}^{L}\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}\\pmb{X}+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}}^{*})^{\\top}\\pmb{X})+\\beta_{0j^{\\prime}}^{*})\\Big]\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "into a combination of linearly independent elements using Taylor expansion. In particular, the quantity $Q_{n}(X)$ is decomposed as follows: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\sum_{j=1}^{L}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\exp((\\beta_{1i}^{n})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1i}^{n})^{\\top}X))h(X;\\eta_{i}^{n})-\\exp((\\beta_{1j}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}X}\\\\ {\\displaystyle-\\sum_{j=1}^{L}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[\\exp((\\beta_{1i}^{n})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1i}^{n})^{\\top}X))-\\exp((\\beta_{1j}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}X))\\Big]g_{G_{n}}(X)}\\\\ {\\displaystyle+\\sum_{j=1}^{L}\\Big(\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})-\\exp(\\beta_{0j}^{*})\\Big)\\exp((\\beta_{1j}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}X))\\Big[h(X;\\eta_{j}^{*})-g_{G_{n}}(X)\\Big]}\\\\ {\\displaystyle=A_{n}(X)-B_{n}(X)+C_{n}(X).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Decomposition of $A_{n}(X)$ . Let us denote $E(\\pmb{X};\\beta_{1}):=\\exp(\\beta_{1}^{\\top}\\pmb{X}+\\alpha\\sigma(\\tau\\beta_{1}^{\\top}\\pmb{X}))$ , then $A_{n}$ can be separated into two terms as follows: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{A_{n}(\\pmb{X}):=\\displaystyle\\sum_{j:|\\nu_{j}|=1}\\sum_{i\\in\\nu_{j}}\\exp(\\beta_{0i}^{n})\\Big[E(\\pmb{X};\\beta_{1i}^{n})h(\\pmb{x};\\eta_{i}^{n})-E(\\pmb{X};\\beta_{1j}^{*})h(\\pmb{X};\\eta_{j}^{*})\\Big]}\\\\ &{\\qquad+\\displaystyle\\sum_{j:|\\nu_{j}|>1}\\sum_{i\\in\\nu_{j}}\\exp(\\beta_{0i}^{n})\\Big[E(\\pmb{X};\\beta_{1i}^{n})h(\\pmb{X};\\eta_{i}^{n})-E(\\pmb{X};\\beta_{1j}^{*})h(\\pmb{X};\\eta_{j}^{*})\\Big]}\\\\ &{\\qquad:=A_{n,1}(\\pmb{X})+A_{n,2}(\\pmb{X}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "By means of the first-order Taylor expansion, we have ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{4_{n,1}({\\pmb X})=\\displaystyle\\sum_{j:|\\gamma_{j}|=1}\\sum_{i\\in\\mathcal{V}_{j}}\\frac{\\exp(\\beta_{0i}^{n})}{\\alpha!}\\displaystyle\\sum_{|\\alpha|=1}(\\Delta\\beta_{1i j}^{n})^{\\alpha_{1}}(\\Delta\\eta_{i j}^{n})^{\\alpha_{2}}\\frac{\\partial^{|\\alpha_{1}|}{\\cal E}}{\\partial\\beta_{1}^{\\alpha_{1}}}({\\pmb X};\\beta_{1j}^{*})\\frac{\\partial^{|\\alpha_{2}|}{h}}{\\partial\\eta^{\\alpha_{2}}}({\\pmb X};\\eta_{j}^{*})+R_{n,1}({\\pmb X})}\\\\ &{\\qquad=\\displaystyle\\sum_{j:|\\gamma_{j}|=1}\\sum_{|\\alpha_{1}|+|\\alpha_{2}|=1}S_{n,j,\\alpha_{1},\\alpha_{2}}\\frac{\\partial^{|\\alpha_{1}|}{\\cal E}}{\\partial\\beta_{1}^{\\alpha_{1}}}({\\pmb X};\\beta_{1j}^{*})\\frac{\\partial^{|\\alpha_{2}|}{h}}{\\partial\\eta^{\\alpha_{2}}}({\\pmb X};\\eta_{j}^{*})+R_{n,1}({\\pmb X}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "where $R_{n,1}(X)$ is a Taylor remainder such that $R_{n,1}(X)/\\mathcal{L}_{1n}\\to0$ as $n\\to\\infty$ , and ", "page_idx": 21}, {"type": "equation", "text": "$$\nS_{n,j,\\alpha_{1},\\alpha_{2}}:=\\sum_{i\\in\\mathcal{V}_{j}}\\frac{\\exp(\\beta_{0i}^{n})}{\\alpha!}(\\Delta\\beta_{1i j}^{n})^{\\alpha_{1}}(\\Delta\\eta_{i j}^{n})^{\\alpha_{2}}.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "On the other hand, by applying the second-order Taylor expansion, we get that ", "page_idx": 21}, {"type": "equation", "text": "$$\nA_{n,2}(\\pmb{X})=\\sum_{j:|\\gamma_{j}|>1}\\sum_{1\\leq|\\alpha_{1}|+|\\alpha_{2}|\\leq2}S_{n,j,\\alpha_{1},\\alpha_{2}}\\frac{\\partial^{|\\alpha_{1}|}E}{\\partial\\beta_{1}^{\\alpha_{1}}}(\\pmb{X};\\beta_{1j}^{*})\\frac{\\partial^{|\\alpha_{2}|}h}{\\partial\\eta^{\\alpha_{2}}}(\\pmb{X};\\eta_{j}^{*})+R_{n,2}(\\pmb{X}),\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "in which $R_{n,2}(X)$ is a Taylor remainder such that $R_{n,2}(X)/\\mathcal{L}_{1n}\\rightarrow0$ as $n\\to\\infty$ . ", "page_idx": 21}, {"type": "text", "text": "Decomposition of $B_{n}$ . Recall that we have ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{B_{n}(\\pmb{X})=\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|=1}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[E(\\pmb{X};\\beta_{1i}^{n})-E(\\pmb{X};\\beta_{1j}^{*})\\Big]g_{G_{n}}(\\pmb{X})}\\\\ &{\\quad\\quad+\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|>1}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\Big[E(\\pmb{X};\\beta_{1i}^{n})-E(x;\\beta_{1j}^{*})\\Big]g_{G_{n}}(\\pmb{X})}\\\\ &{\\quad\\quad\\quad:=B_{n,1}(\\pmb{X})+B_{n,2}(\\pmb{X}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "By invoking first-order and second-order Taylor expansions to $B_{n,1}(X)$ and $B_{n,2}(X)$ , it follows that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{B_{n,1}(\\pmb{X})=\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|=1}\\sum_{|\\ell|=1}T_{n,j,\\ell}\\cdot\\frac{\\partial^{|\\ell|}E}{\\partial\\beta_{1}^{\\ell}}(\\pmb{X};\\beta_{1j}^{*})g_{G_{n}}(\\pmb{X})+R_{n,3}(\\pmb{X}),}\\\\ &{B_{n,2}(\\pmb{X})=\\displaystyle\\sum_{j:|\\mathcal{V}_{j}|>1}\\sum_{1\\leq|\\ell|\\leq2}T_{n,j,\\ell}\\cdot\\frac{\\partial^{|\\ell|}E}{\\partial\\beta_{1}^{\\ell}}(\\pmb{X};\\beta_{1j}^{*})g_{G_{n}}(\\pmb{X})+R_{n,4}(\\pmb{X}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where we define ", "page_idx": 22}, {"type": "equation", "text": "$$\nT_{n,j,\\ell}:=\\sum_{i\\in\\mathscr{V}_{j}}\\frac{\\exp(\\beta_{0i}^{n})}{\\ell!}(\\Delta\\beta_{1i j}^{n})^{\\ell}.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Additionally, $R_{n,3}(X)$ and $R_{n,4}(X)$ are Taylor remainders such that $R_{n,3}(\\pmb{X})/\\mathcal{L}_{1n}\\,\\rightarrow\\,0$ and $R_{n,3}(X)/\\dot{\\mathcal{L}}_{1n}\\rightarrow0$ as $n\\to\\infty$ . ", "page_idx": 22}, {"type": "text", "text": "Collect the above results together, we can represent $Q_{n}(x)$ as ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{Q_{n}(\\pmb{X})=\\displaystyle\\sum_{j=1}^{L}\\sum_{0\\leq\\vert\\alpha_{1}\\vert+\\vert\\alpha_{2}\\vert\\leq2}S_{n,j,\\alpha_{1},\\alpha_{2}}\\frac{\\partial^{\\vert\\alpha_{1}\\vert}E}{\\partial\\beta_{1}^{\\alpha_{1}}}(\\pmb{X};\\beta_{1j}^{*})\\frac{\\partial^{\\vert\\alpha_{2}\\vert}h}{\\partial\\eta^{\\alpha_{2}}}(\\pmb{X};\\eta_{j}^{*}),}\\\\ &{}&{-\\displaystyle\\sum_{j=1}^{L}\\sum_{0\\leq\\vert\\ell\\vert\\leq2}T_{n,j,\\ell}\\cdot\\frac{\\partial^{\\vert\\ell\\vert}E}{\\partial\\beta_{1}^{\\ell}}(\\pmb{X};\\beta_{1j}^{*})g_{G_{n}}(\\pmb{X})+\\displaystyle\\sum_{i=1}^{4}R_{n,i}(\\pmb{X}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where we define $\\begin{array}{r}{S_{n,j,\\mathbf{0}_{d\\times d},\\mathbf{0}_{q}}=T_{n,j,\\mathbf{0}_{d\\times d}}=\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})-\\exp(\\beta_{0j}^{*})}\\end{array}$ for any $j\\in[L]$ . ", "page_idx": 22}, {"type": "text", "text": "Step 2 - Non-vanishing coefficients. In this step, we demonstrate that at least one among ratios of the forms $S_{n,j,\\alpha_{1},\\alpha_{2}}/\\mathcal{L}_{1n}$ and $T_{n,j,\\ell}/\\mathcal{L}_{1n}$ goes to zero as $n$ tends to infinity. Indeed, assume by contrary that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{S_{n,j,\\alpha_{1},\\alpha_{2}}}{\\mathcal{L}_{1n}}\\to0,\\qquad\\frac{T_{n,j,\\ell}}{\\mathcal{L}_{1n}}\\to0,\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "for any $j\\in[L],0\\leq|\\alpha_{1}|,|\\alpha_{2}|,|\\ell|\\leq2$ . Then, we get ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{j=1}^{L}\\Big|\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})-\\exp(\\beta_{0j}^{*})\\Big|=\\sum_{j=1}^{L}\\Big|\\frac{S_{n,j,\\mathbf{0}_{d\\times d},\\mathbf{0}_{q}}}{\\mathcal{L}_{1n}}\\Big|\\rightarrow0.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Now, we consider indices $j\\in[L]$ such that its corresponding Voronoi cell has only one element, i.e.   \n$|\\nu_{j}|=1$ . ", "page_idx": 22}, {"type": "text", "text": "\u2022 For arbitrary $u,v\\ \\in\\ [N d]$ , let $\\alpha_{1}~\\in~\\mathbb{N}^{N d\\times N d}$ and $\\alpha_{2}~=~{\\bf0}_{q}$ such that $\\alpha_{1}^{(u v)}~=~1$ while other entries equal to zero. Then, we have $\\begin{array}{r l}{\\frac{1}{\\mathcal{L}_{1n}}\\cdot\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})|(\\Delta\\beta_{1i j}^{n})^{(u v)}|=}&{{}}\\end{array}$ $|S_{n,j,\\alpha_{1},\\alpha_{2}}|/{\\mathcal{L}}_{1n}\\,\\rightarrow\\,0$ as $n\\rightarrow\\infty$ . By taking the summation of the previous term with $u,v\\in[N d]$ , we achieve that $\\begin{array}{r}{\\frac{1}{\\mathcal{L}_{1n}}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\|\\Delta\\beta_{1i j}^{n}\\|_{1}\\to0}\\end{array}$ . Owing to the topological equivalence between norm-1 and norm-2, it follows that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\|\\Delta\\beta_{1i j}^{n}\\|\\to0.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "\u2022 For arbitrary $u\\,\\in\\,[N d]$ , let $\\alpha_{1}=\\mathbf{0}_{N d\\times N d}$ and $\\alpha_{2}\\in\\mathbb{N}^{q}$ such that \u03b1(2u)= 1 while other entries equal to zero. Then, we get $\\begin{array}{r}{\\frac{1}{\\mathcal{L}_{1n}}\\cdot\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})|(\\Delta\\eta_{i j}^{n})^{(u)}|=|S_{n,j,\\alpha_{1},\\alpha_{2}}|/\\mathcal{L}_{1n}\\rightarrow}\\end{array}$ 0 as $n\\to\\infty$ . By taking the summation of the previous term with $u\\in[q]$ , we achieve that L11n i\u2208Vj exp(\u03b20ni)\u2225\u2206\u03b7inj\u22251 \u21920, or equivalently, ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\|\\Delta\\eta_{i j}^{n}\\|\\to0.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Combine the limits in equations (49) and (50), we obtain that ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{j:|\\mathcal{V}_{j}|=1}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})[\\|\\Delta\\beta_{1i j}^{n}\\|+\\|\\Delta\\eta_{i j}^{n}\\|]\\to0,\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "as $n\\to\\infty$ . ", "page_idx": 23}, {"type": "text", "text": "Next, we consider indices $j\\in[L]$ such that its corresponding Voronoi cell has more than one element, i.e. $|\\nu_{j}|>1$ . ", "page_idx": 23}, {"type": "text", "text": "\u2022 For arbitrary $u,v\\ \\in\\ [N d]$ , let $\\alpha_{1}~\\in~\\mathbb{N}^{N d\\times N d}$ and $\\alpha_{2}~=~0_{q}$ such that $\\alpha_{1}^{(u v)}~=~2$ while other entries equal to zero. Then, we haveL11n \u00b7 $\\begin{array}{r}{\\frac{1}{\\mathcal{L}_{1n}}\\cdot\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})|(\\Delta\\beta_{1i j}^{n})^{(u v)}|^{2}=}\\end{array}$ $|S_{n,j,\\alpha_{1},\\alpha_{2}}|/{\\mathcal{L}}_{1n}\\,\\rightarrow\\,0$ as $n\\rightarrow\\infty$ . By taking the summation of the previous term with $u,v\\in[N d]$ , we achieve that ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\|\\Delta\\beta_{1i j}^{n}\\|^{2}\\to0.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "\u2022 For arbitrary $u\\in[N d]$ , let $\\alpha_{1}=\\mathbf{0}_{N d\\times N d}$ and $\\alpha_{2}\\in\\mathbb{N}^{q}$ such that $\\alpha_{2}^{(u)}=2$ while other entries equal to zero. Then, we get $\\begin{array}{r}{\\frac{1}{\\mathcal{L}_{1n}}\\!\\cdot\\!\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})|(\\Delta\\eta_{i j}^{n})^{(u)}|^{2}=|S_{n,j,\\alpha_{1},\\alpha_{2}}|/\\mathcal{L}_{1n}\\rightarrow0}\\end{array}$ as $n\\to\\infty$ . By taking the summation of the previous term with $u\\in[q]$ , we achieve that ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})\\|\\Delta\\eta_{i j}^{n}\\|^{2}\\to0.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Putting the limits in equations (49) and (50), we have ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{1}{\\mathcal{L}_{1n}}\\sum_{j:|\\mathcal{V}_{j}|>1}\\sum_{i\\in\\mathcal{V}_{j}}\\exp(\\beta_{0i}^{n})[\\|\\Delta\\beta_{1i j}^{n}\\|+\\|\\Delta\\eta_{i j}^{n}\\|]\\to0,\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "as $n\\to\\infty$ . Taking the summation of three limits in equations (48), (51) and (54), we deduce that $1=\\mathcal{L}_{1n}/\\mathcal{L}_{1n}\\to0$ as $n\\to\\infty$ , which is a contradiction. Thus, at least one among ratios of the forms $S_{n,j,\\alpha_{1},\\alpha_{2}}/\\mathcal{L}_{1n}$ and $T_{n,j,\\ell}/\\mathcal{L}_{1n}$ goes to zero as $n$ tends to infinity. ", "page_idx": 23}, {"type": "text", "text": "Step 3 - Application of Fatou\u2019s lemma. In this step, we show that all the ratios $S_{n,j,\\alpha_{1},\\alpha_{2}}/\\mathcal{L}_{1n}$ and $T_{n,j,\\ell}/{\\mathcal{L}_{1n}}^{-}$ go to zero as $n\\to\\infty$ , which contradicts to the conclusion in Step 2. In particular, by denoting $m_{n}$ as the maximum of the absolute values of those ratios. From the result of Step 2, it follows that $1/m_{n}\\neq\\infty$ . ", "page_idx": 23}, {"type": "text", "text": "Recall from the hypothesis in equation (43) that $\\|g_{G_{n}}-g_{G_{*}}\\|_{L_{2}(\\mu)}/\\mathcal{L}_{1n}\\to0$ as $n\\to\\infty$ , which indicates that $\\|g_{G_{n}}-g_{G_{*}}\\|_{L^{1}(\\mu)}/\\mathcal{L}_{1n}\\to0$ . Therefore, by applying the Fatou\u2019s lemma, we get that ", "page_idx": 23}, {"type": "equation", "text": "$$\n0=\\operatorname*{lim}_{n\\to\\infty}\\frac{\\|g_{G_{n}}-g_{G_{*}}\\|_{L^{1}(\\mu)}}{m_{n}\\mathcal{L}_{1n}}\\geq\\int\\operatorname*{lim}_{n\\to\\infty}\\frac{|g_{G_{n}}(\\boldsymbol{X})-g_{G_{*}}(\\boldsymbol{X})|}{m_{n}\\mathcal{L}_{1n}}\\mathrm{d}\\mu(\\boldsymbol{X})\\geq0.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "This result implies that $\\begin{array}{r}{\\frac{1}{m_{n}\\mathscr{L}_{1n}}\\,\\cdot\\,\\left[g_{G_{n}}(\\pmb{X})\\,-\\,g_{G_{\\ast}}(\\pmb{X})\\right]\\,\\rightarrow\\,0}\\end{array}$ as $n\\,\\rightarrow\\,\\infty$ for $\\mu$ -almost surely $\\mathbf{\\deltaX}$ . Looking at the formulation of $Q_{n}(X)$ in equation (45), since the term $\\begin{array}{r l}{\\Big[\\sum_{i^{\\prime}=1}^{k_{0}}\\exp(X^{\\top}A_{i^{\\prime}}^{0}X\\!+\\!c_{i^{\\prime}}^{0})+}&{{}}\\end{array}$ $\\begin{array}{r}{\\sum_{j^{\\prime}=1}^{k_{*}}\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}{\\pmb X}+\\sigma((\\beta_{1j^{\\prime}}^{*})^{\\top}{\\pmb X})+\\beta_{0j^{\\prime}}^{*})\\Big]}\\end{array}$ is bounded, we deduce that the term $\\frac{Q_{n}(X)}{m_{n}\\mathcal{L}_{1n}}\\rightarrow0$ for $\\mu$ -almost surely $\\mathbf{\\deltaX}$ . ", "page_idx": 23}, {"type": "text", "text": "Let us denote ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{S_{n,j,\\alpha_{1},\\alpha_{2}}}{m_{n}\\mathscr{L}_{1n}}\\rightarrow\\phi_{j,\\alpha_{1},\\alpha_{2}},\\qquad\\frac{T_{n,j,\\ell}}{m_{n}\\mathscr{L}_{1n}}\\rightarrow\\varphi_{j,\\ell},\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "with a note that at least one among them is non-zero. Then, from the decomposition of $Q_{n}(X)$ in equation (47), we have ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{j=1}^{L}\\sum_{|\\alpha_{1}|+|\\alpha_{2}|=0}^{1+1_{\\{|\\nu_{j}|>1\\}}}\\phi_{j,\\alpha_{1},\\alpha_{2}}.\\frac{\\partial^{|\\alpha_{1}|}E}{\\partial\\beta_{1}^{\\alpha_{1}}}(\\pmb X;\\beta_{1j}^{*})\\frac{\\partial^{|\\alpha_{2}|}h}{\\partial\\eta^{\\alpha_{2}}}(\\pmb X;\\beta_{j}^{*}),}\\\\ &{\\displaystyle\\qquad\\qquad\\qquad\\qquad\\qquad-\\sum_{j=1}^{L}\\sum_{|\\ell|=0}^{1+1_{\\{|\\nu_{j}|>1\\}}}\\varphi_{j,\\ell}\\cdot\\frac{\\partial^{|\\ell|}E}{\\partial\\beta_{1}^{\\ell}}(\\pmb X;\\beta_{1j}^{*})g_{G_{*}}(\\pmb X)=0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "for $\\mu$ -almost surely $\\mathbf{\\deltaX}$ . It is worth noting that the term $\\begin{array}{r}{\\frac{\\partial^{|\\alpha_{1}|}E}{\\partial\\beta_{1}^{\\alpha_{1}}}(X;\\beta_{1j}^{*})\\,\\cdot\\,\\frac{\\partial^{|\\alpha_{2}|}h}{\\partial\\eta^{\\alpha_{2}}}(X;\\eta_{j}^{*})}\\end{array}$ can be explicitly expressed as ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\bullet\\mathrm{\\boldmath~{\\cal~When~}}|\\alpha_{1}|=0,|\\alpha_{2}|=0;\\;\\exp((\\beta_{1j}^{\\ast})^{\\top}X+\\sigma((\\beta_{1j}^{\\ast})^{\\top}X))h(X;\\eta_{j}^{\\ast});}\\\\ &{\\bullet\\mathrm{\\boldmath~{\\cal~When~}~}|\\alpha_{1}|\\;\\;\\;\\mathop{=\\;\\;\\;\\;1,}|\\alpha_{2}|\\;\\;\\;\\;\\mathop{=\\;\\;\\;\\;\\;0:}\\;\\;\\;\\;\\;X^{(u)}\\Big(1\\;\\;+\\;\\;\\sigma^{\\prime}((\\beta_{1j}^{\\ast})^{\\top}X)\\Big)\\exp((\\beta_{1j}^{\\ast})^{\\top}X\\;\\;+\\;\\sigma((\\beta_{1j}^{\\ast})^{\\top}X))\\exp(-\\beta_{1j}^{\\ast}X)}\\\\ &{\\;\\;\\sigma((\\beta_{1j}^{\\ast})^{\\top}X))h(X;\\eta_{j}^{\\ast});}\\\\ &{\\bullet\\mathrm{\\boldmath~{\\cal~When~}}|\\alpha_{1}|=0,|\\alpha_{2}|=1;\\;\\exp((\\beta_{1j}^{\\ast})^{\\top}X+\\sigma((\\beta_{1j}^{\\ast})^{\\top}X))\\frac{\\partial h}{\\partial\\eta^{(w)}}(X;\\eta_{j}^{\\ast});}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "equation", "text": "$$\nx^{(u)}\\Big(1+\\sigma^{\\prime}((\\beta_{1j}^{*})^{\\top}x)\\Big)\\exp((\\beta_{1j}^{*})^{\\top}x+\\sigma((\\beta_{1j}^{*})^{\\top}x))\\frac{\\partial h}{\\partial\\eta^{(w)}}(x;\\eta_{j}^{*});\n$$", "text_format": "latex", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{X^{(u)}x^{(v)}\\Big[(1+\\sigma^{\\prime}((\\beta_{1j}^{*})^{\\top}X))^{2}\\!+\\!\\sigma^{\\prime\\prime}((\\beta_{1j}^{*})^{\\top}X)\\Big]\\exp((\\beta_{1j}^{*})^{\\top}X\\!+\\!\\sigma((\\beta_{1j}^{*})^{\\top}X))h(X;\\eta_{j}^{*})}\\\\ &{\\mathrm{When~}|\\alpha_{1}|=0,|\\alpha_{2}|=2;\\,\\exp((\\beta_{1j}^{*})^{\\top}X+\\sigma((\\beta_{1j}^{*})^{\\top}X))\\frac{\\partial^{2}h}{\\partial\\eta^{(w)}\\partial\\eta^{(w^{\\prime})}}(X;\\eta_{j}^{*}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Recall that the expert function $h$ satisfies the condition in Definition 4.2, i.e. the set ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\Big[X^{\\nu}\\Big[(1+\\sigma^{\\prime}((\\beta_{1j}^{*})^{\\top}X))^{|\\nu|}+\\mathbf{1}_{\\{|\\nu|=2\\}}\\sigma^{\\prime\\prime}((\\beta_{1j}^{*})^{\\top}X)\\Big]\\cdot\\frac{\\partial^{|\\gamma|}h}{\\partial\\eta^{\\gamma}}(X,\\eta_{j}^{*}):j\\in[L],\\ 0\\le|\\nu|+|\\gamma|\\le2\\Big]\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "is linearly independent for almost every $\\mathbf{\\deltaX}$ . Therefore, we obtain that $\\phi_{j,\\alpha_{1},\\alpha_{2}}=\\varphi_{j,\\ell}=0$ for all $j\\in[L],\\bar{0}\\leq|\\bar{\\alpha_{1}}|+|\\alpha_{2}|,|\\ell|\\leq1+\\mathbf{1}_{\\{|\\bar{\\nu}_{j}|>1\\}}$ . This result turns out to contradict the fact that at least one among them is different from zero. Hence, we achieve the inequality in equation (42). ", "page_idx": 24}, {"type": "text", "text": "Global part. It is worth noting that the inequality (42) suggests that there exists a positive constant $\\varepsilon^{\\prime}$ such that ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta):\\mathcal{L}_{1}(G,G_{*})\\leq\\varepsilon^{\\prime}}\\left\\|g_{G}-g_{G_{*}}\\right\\|_{L_{2}(\\mu)}/\\mathcal{L}_{1}(G,G_{*})>0.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Therefore, it is sufficient to prove that ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\operatorname*{inf}_{G\\in\\mathcal{G}_{L^{\\prime}}(\\Theta):\\mathcal{L}_{1}(G,G_{*})>\\varepsilon^{\\prime}}\\|g_{G}-g_{G_{*}}\\|_{L_{2}(\\mu)}/\\mathcal{L}_{1}(G,G_{*})>0.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Assume by contrary that the inequality (55) does not hold true, then we can find a sequence of mixing measures $G_{n}^{\\prime}\\in\\mathcal{G}_{L^{\\prime}}(\\Theta)$ such that $\\dot{\\mathcal{L}_{1}(G_{n}^{\\prime},G_{*})}>\\varepsilon^{\\prime}$ and ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{n\\to\\infty}\\frac{\\|g_{G_{n}^{\\prime}}-g_{G_{*}}\\|_{L_{2}(\\mu)}}{\\mathcal{L}_{1}(G_{n}^{\\prime},G_{*})}=0,\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "which indicates that $\\|g_{G_{n}^{\\prime}}-g_{G_{*}}\\|_{L_{2}(\\mu)}\\to0$ as $n\\to\\infty$ . Recall that $\\Theta$ is a compact set, therefore, we can replace the sequence $G_{n}^{\\prime}$ by one of its subsequences that converge to a mixing measure $G^{\\prime}\\in\\mathcal{G}_{L^{\\prime}}(\\bar{\\Omega})$ . Since $\\mathcal{L}_{1}(G_{n}^{\\prime},G_{*})>\\varepsilon^{\\prime}$ , we deduce that $\\overline{{\\mathcal{L}_{1}}}(G^{\\prime},G_{*})>\\varepsilon^{\\prime}$ . ", "page_idx": 24}, {"type": "text", "text": "Next, by invoking the Fatou\u2019s lemma, we have that ", "page_idx": 24}, {"type": "equation", "text": "$$\n0=\\operatorname*{lim}_{n\\to\\infty}\\|g_{G_{n}^{\\prime}}-g_{G_{*}}\\|_{L_{2}(\\mu)}^{2}\\geq\\int\\operatorname*{lim}_{n\\to\\infty}\\left|g_{G_{n}^{\\prime}}(X)-g_{G_{*}}(X)\\right|^{2}\\mathrm{d}\\mu(X).\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Thus, we get that $g_{G^{\\prime}}(X)=g_{G_{*}}(X)$ for $\\mu$ -almost surely $\\mathbf{\\deltaX}$ . From the identifiability property of the non-linear residual gating prefix MoE (cf. the end of this proof), we deduce that $G^{\\prime}\\,\\equiv\\,G_{*}$ . Consequently, it follows that $\\mathcal{L}_{1}(G^{\\prime},G_{*})\\,=\\,0$ , contradicting the fact that $\\mathcal{L}_{1}(G^{\\prime},G_{*})\\,>\\,\\varepsilon^{\\prime}\\,>\\,0$ Hence, the proof is completed. ", "page_idx": 24}, {"type": "text", "text": "Identifiability of Non-linear Residual Gating MoE. ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We now prove the identifiability of the non-linear residual gating prefix MoE. In particular, we will show that if $g_{G}(X)=g_{G_{*}}(X)$ for almost every $\\mathbf{\\deltaX}$ , then it follows that $G\\equiv G_{*}$ . ", "page_idx": 24}, {"type": "text", "text": "For ease of presentation, let us denote ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{softmax}_{G}(u):=\\frac{\\exp(u)}{\\sum_{i^{\\prime}=1}^{N}\\exp(X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0})+\\sum_{j^{\\prime}=1}^{L}\\exp((\\beta_{1j^{\\prime}})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}})^{\\top}X)+\\beta_{0j^{\\prime}}\\exp(u))}}\\\\ &{\\mathrm{oftmax}_{G_{*}}(u^{*}):=\\frac{\\exp(u^{*})}{\\sum_{i^{\\prime}=1}^{N}\\exp(X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0})+\\sum_{j^{\\prime}=1}^{L}\\exp((\\beta_{1j^{\\prime}}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}}^{*})^{\\top}X)+\\beta_{0j^{\\prime}}^{*}\\exp(u))},}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "where ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\boldsymbol{u}\\in\\left\\lbrace X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0},\\ (\\beta_{1j^{\\prime}})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}})^{\\top}X)+\\beta_{0j^{\\prime}}:i^{\\prime}\\in[N],j^{\\prime}\\in[L^{\\prime}]\\right\\rbrace,}\\\\ &{}&{\\boldsymbol{u}^{*}\\in\\left\\lbrace X^{\\top}B_{i^{\\prime}}^{0}X+c_{i^{\\prime}}^{0},\\ (\\beta_{1j^{\\prime}}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j^{\\prime}}^{*})^{\\top}X)+\\beta_{0j^{\\prime}}^{*}:i^{\\prime}\\in[N],j^{\\prime}\\in[L]\\right\\rbrace.}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Since $g_{G}(X)=g_{G_{*}}(X)$ for almost every $\\mathbf{\\deltaX}$ , we have ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\displaystyle\\sum_{i=1}^{N}\\mathrm{softmax}_{G}(X^{\\top}B_{i}X+c_{i}^{0})\\cdot h(X,\\eta_{i}^{0})+\\displaystyle\\sum_{j=1}^{L^{\\prime}}\\mathrm{softmax}_{G}\\Big((\\beta_{1j})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j})^{\\top}X)+\\beta_{0j}\\Big)\\cdot h}\\\\ {\\displaystyle=\\sum_{i=1}^{N}\\mathrm{softmax}_{G_{*}}(X^{\\top}B_{i}X+c_{i}^{0})\\cdot h(X,\\eta_{i}^{0})+\\displaystyle\\sum_{j=1}^{L}\\mathrm{softmax}_{G_{*}}\\Big((\\beta_{1j}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}X)+\\beta_{0j}^{*}\\Big).}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "As the expert function $h$ satisfies the conditions in Definition 4.2, the set $\\{h(\\pmb{X},\\eta_{i}^{\\prime}):i\\in[k^{\\prime}]\\}$ , where $\\eta_{1}^{\\prime},\\dots,\\eta_{k^{\\prime}}^{\\bar{\\prime}}$ are distinct vectors for some $k^{\\prime}\\in\\mathbb{N}$ , is linearly independent. If $L^{\\prime}\\neq L$ , then there exists some $i\\in[L^{\\prime}]$ such that $\\eta_{i}\\neq\\eta_{j}^{*}$ for any $j\\in[L]$ . This implies that $\\begin{array}{r}{\\sum_{j=1}^{L^{\\prime}}\\operatorname{softmax}_{G}\\Big((\\beta_{1j})^{\\top}X+}\\end{array}$ $\\alpha\\sigma(\\tau(\\beta_{1j})^{\\top}\\pmb{X})+\\beta_{0j}\\Big)\\cdot h(\\pmb{X},\\eta_{j})=0$ , which is a contradiction. Thus, we must have that $L=L^{\\prime}$ . As a result, ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\Big\\{\\mathrm{softmax}_{G}\\Big((\\beta_{1j})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j})^{\\top}X)+\\beta_{0j}\\Big):j\\in[L^{\\prime}]\\Big\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\Big\\{\\mathrm{softmax}_{G_{*}}\\Big((\\beta_{1j}^{*})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}X)+\\beta_{0j}^{*}\\Big):j\\in[L]\\Big\\},}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "for almost every $\\mathbf{\\deltaX}$ . WLOG, we may assume that ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\mathrm{oftmax}_{G}\\Big((\\beta_{1j})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j})^{\\top}X)+\\beta_{0j}\\Big)=\\mathrm{softmax}_{G_{\\ast}}\\Big((\\beta_{1j}^{\\ast})^{\\top}X+\\alpha\\sigma(\\tau(\\beta_{1j}^{\\ast})^{\\top}X)+\\beta_{0j}^{\\ast}\\Big)\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "for almost every $\\mathbf{\\deltaX}$ for any $j~\\in~[L]$ . Since the softmax function is invariant to translation, this result indicates that $\\beta_{1j}=\\beta_{1j}^{*}$ and $\\bar{\\beta}_{0j}=\\beta_{0j}^{*}+v_{0}$ for some $v_{0}\\in\\mathbb{R}$ for any $j\\in[L]$ . Recall from the universal assumption that $\\beta_{0L^{\\prime}}\\,=\\,\\beta_{0L}\\,=\\,0$ , we get that $\\beta_{0j}\\,=\\,\\beta_{0j}^{*}$ for any $j~\\in~[L]$ . Then, equation (56) can be rewritten as ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{j=1}^{L}\\exp(\\beta_{0j})\\exp\\Big((\\beta_{1j})^{\\top}{\\pmb X}+\\alpha\\sigma(\\tau(\\beta_{1j})^{\\top}{\\pmb X})\\Big)h({\\pmb X},\\eta_{j})}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad=\\displaystyle\\sum_{j=1}^{L}\\exp(\\beta_{0j}^{*})\\exp\\Big((\\beta_{1j}^{*})^{\\top}{\\pmb X}+\\alpha\\sigma(\\tau(\\beta_{1j}^{*})^{\\top}{\\pmb X}\\Big)h({\\pmb X},\\eta_{j}^{*}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "for almost every $\\mathbf{\\deltaX}$ . Next, we denote $P_{1},P_{2},\\dots,P_{m}$ as a partition of the index set $[L]$ , where $m\\leq L^{\\prime}$ , such that $\\exp(\\beta_{0i})=\\exp(\\beta_{0i^{\\prime}}^{*})$ for any $i,i^{\\prime}\\in P_{j}$ and $j\\in[L]$ . On the other hand, when $i$ and $i^{\\prime}$ do not belong to the same set $P_{j}$ , we let $\\exp(\\beta_{0i})\\neq\\exp(\\beta_{0i^{\\prime}})$ . Thus, we can reformulate equation (58) as ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{\\sum_{j=1}^{m}\\sum_{i\\in P_{j}}\\exp(\\beta_{0i})\\exp\\Big((\\beta_{1i})^{\\top}{\\boldsymbol X}+\\alpha\\sigma(\\tau(\\beta_{1i})^{\\top}{\\boldsymbol X}\\Big)h({\\boldsymbol X},\\eta_{i})}}\\\\ &{=\\displaystyle\\sum_{j=1}^{m}\\sum_{i\\in P_{j}}\\exp(\\beta_{0i}^{*})\\exp\\Big(({\\beta_{1i}^{*}})^{\\top}{\\boldsymbol X}+\\alpha\\sigma(\\tau(\\beta_{1i}^{*})^{\\top}{\\boldsymbol X}\\Big)h({\\boldsymbol X},\\eta_{i}^{*})\\Big)+\\beta\\Big(\\beta_{1i}^{*}\\Big)\\prod_{j=1}^{m}\\Big(\\beta_{1i}^{*}{\\boldsymbol Y}_{j},\\eta_{i}\\Big)}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "for almost every $\\mathbf{\\deltaX}$ . Recall that $\\beta_{1i}=\\beta_{1i}^{*}$ and $\\beta_{0i}=\\beta_{0i}^{*}$ for any $i\\in[L]$ , then the above equation leads to ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\{\\eta_{i}:i\\in P_{j}\\}\\equiv\\{\\eta_{i}^{*}:i\\in P_{j}\\},\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "for almost every $\\mathbf{\\deltaX}$ for any $j\\in[m]$ . As a consequence, ", "page_idx": 26}, {"type": "equation", "text": "$$\nG=\\sum_{j=1}^{m}\\sum_{i\\in P_{j}}\\exp(\\beta_{0i})\\delta_{(\\beta_{1i},\\eta_{i})}=\\sum_{j=1}^{m}\\sum_{i\\in P_{j}}\\exp(\\beta_{0i}^{*})\\delta_{(\\beta_{1i}^{*},\\eta_{i}^{*})}=G_{*}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Hence, we reach the conclusion of this proposition. ", "page_idx": 26}, {"type": "text", "text": "C Discussion of related Mixture of Experts works ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Recently, the MoE model has been employed to mitigate catastrophic forgetting in continual learning. For example, [58] focused on continual learning in vision-language models by adapting a pre-trained vision-language model to new tasks through learning a mixture of specialized adapter modules. [58] introduced an MoE structure onto a frozen CLIP, utilizing a mixture of adapters to modify the MLP block after the MSA layer. In contrast, our work centers on general continual learning with pre-trained models, leveraging the inherent MoE architecture of MSA layers. Consequently, our MoE model placement differs from that of [58]. By employing prefix tuning, we demonstrate that it is analogous to introducing new prefix experts to scale and adapt these pre-trained MoE models to downstream tasks. Furthermore, while [58] utilizes task-specific routers, our approach employs task-specific prompts that encapsulate both task-specific router and expert parameters. ", "page_idx": 26}, {"type": "text", "text": "The parameters cost is usually considered in practical memory-constrained continual learning scenarios. Dynamic routing mechanism can be employed for gating-based neural networks [18]. To improve the parameter efficiency of the final model, we can integrate this mechanism in the proposed method. Specifically, each head in the MSA layers comprises $N$ MoE models, where $N$ is the length of the input sequence. This allows for a dynamic routing mechanism to enhance parameter efficiency. For instance, [18] proposed a dynamic routing strategy that adaptively adjusts the number of activated experts based on the input. The computation for any MoE model\u2019s gating is directly correlated with the corresponding row in the attention matrix, which encapsulates the MoE model\u2019s score functions. For example, selecting the top $k$ experts via Top-K routing in the $i$ -th MoE model is equivalent to identifying the top $k$ largest values in the $i$ -th row of the attention matrix. To implement [18], we first sort the elements in the $i$ -th row from highest to lowest, then find the smallest set of experts whose cumulative probability exceeds the threshold. Consequently, unselected experts remain inactive, reducing the need to compute all elements of the value matrix within self-attention. ", "page_idx": 26}, {"type": "text", "text": "D Training Algorithm of HiDe-Prompt ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "In this appendix, we outline the detailed algorithm of HiDe-Prompt, utilizing the same notation as in Section 2. ", "page_idx": 26}, {"type": "text", "text": "Each previously encountered class $c\\in\\mathcal{Y}^{(i)},i=1,\\ldots,t-1$ has its instructed and uninstructed representations approximated by Gaussian distributions, denoted as $\\mathcal{G}_{c}$ and $\\hat{\\mathcal{G}}_{c}$ , respectively. ", "page_idx": 26}, {"type": "text", "text": "HiDe-Prompt maintains an expandable pool of task-specific prompts $e_{t}$ , each optimized for a specific task $\\mathcal{D}_{t}$ using a cross-entropy loss within the WTP objective. To prevent forgetting, previous prompts $e_{1},\\ldots,e_{t-1}$ remain frozen. Knowledge transfer across tasks is facilitated by a prompt ensemble (PE) strategy: the current prompt is initialized with the last one $\\boldsymbol e_{t}\\gets\\boldsymbol e_{t-1}$ and refined using a weighted combination of all past prompts $\\begin{array}{r}{\\pmb{p}_{t}=\\alpha\\sum_{i=1}^{t-1}\\pmb{e}_{i}+(1-\\alpha)\\pmb{e}_{t}}\\end{array}$ , where $\\alpha$ is a hyper-parameter. Notably, HiDe-Prompt incorporates contrastive regularization within the WTP objective, pushing features of the new task away from those of past tasks represented by the prototypes of old class distributions $\\mathcal{G}_{c}$ . Let $\\mathcal{H}_{t}=\\{f_{\\theta}(\\pmb{x}_{i}^{(t)},\\pmb{p}_{t})|\\;i=1,\\stackrel{\\cdot}{\\dots},N_{t}\\}$ be the embedding transformation of $\\mathcal{D}_{t}$ and $\\pmb{\\mu_{c}}$ be the mean of $\\mathcal{G}_{c}$ . The contrastive loss can be written as ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{CR}}(\\boldsymbol{p}_{t})=\\sum_{h\\in\\mathcal{H}_{t}}\\sum_{i=1}^{t-1}\\sum_{c\\in\\mathcal{Y}^{(i)}}\\log(\\frac{\\exp(h\\cdot\\mu_{c}/\\tau)}{\\sum_{h^{\\prime}\\in\\mathcal{H}_{t}}\\exp(h\\cdot h^{\\prime}/\\tau)+\\sum_{i=1}^{t-1}\\sum_{c^{\\prime}\\in\\mathcal{Y}^{(i)}}\\exp(h\\cdot\\mu_{c^{\\prime}}/\\tau)}),\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "where $\\tau$ is the temperature that is set to 0.8. The overall objective function of WTP for learning a new task $t$ is defined as ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{WTP}}(\\psi,\\pmb{p}_{t})=\\mathcal{L}_{\\mathrm{CE}}(\\psi,\\pmb{p}_{t})+\\lambda\\mathcal{L}_{\\mathrm{CR}}(\\pmb{p}_{t}),\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Algorithm 1 HiDe-Prompt\u2019s training algorithm ", "page_idx": 27}, {"type": "text", "text": "Input: Pre-trained transformer backbone $f_{\\theta}$ , training sets $\\mathcal{D}_{1},\\ldots,\\mathcal{D}_{T}$ , number of tasks $T$ , number of epochs $E$ , hyper-parameters $\\alpha,\\tau$ and $\\lambda$ .   \nOutput: Parameters $p_{1},\\dots,p_{T},\\omega$ and $\\psi$   \n1: Initialize $\\,\\!e_{1},\\omega$ and $\\psi$   \n2: for $t=1,\\dots,T$ do   \n3: for $c\\in\\mathcal{V}^{(t)}$ do   \n4: Obtain $\\hat{\\mathcal{G}}_{c}$ from $f_{\\theta}$ and $\\mathcal{D}_{t}$ \u25b7Uninstructed Representations 5: if $t>1$ then   \n6: Initialize et \u2190et\u22121   \n7: Construct $\\begin{array}{r}{\\pmb{p}_{t}=\\alpha\\sum_{i=1}^{t-1}{\\pmb{e}}_{i}+(1-\\alpha){\\pmb{e}}_{t}}\\end{array}$   \n8: else   \n9: Construct $\\pmb{p}_{t}=\\pmb{e}_{t}$   \n10: for ep $\\prime o c h=1,\\ldots,E\\,\\mathbf{d}$ o   \n11: Optimize $\\scriptstyle{\\mathbf{\\mathit{p}}}_{t}$ and $\\psi$ with $\\mathcal{L}_{\\mathrm{WTP}}$ in Eq.(60) $\\triangleright$ Within-Task Prediction 12: Optimize $\\omega$ with $\\mathcal{L}_{\\mathrm{TII}}$ in Eq.(62) \u25b7Task-Identity Inference 13: Optimize $\\psi$ with $\\mathcal{L}_{\\mathrm{TAP}}$ in Eq.(61) \u25b7Task-Adaptive Prediction 14: for $c\\in\\mathcal{V}^{(t)}$ do   \n15: Obtain $\\mathcal{G}_{c}$ from $f_{\\theta},{\\pmb p}_{t}$ and $\\mathcal{D}_{t}$ \u25b7Instructed Representations return $(p_{1},...\\,,p_{T},\\omega,\\psi)$ ", "page_idx": 27}, {"type": "text", "text": "where $\\lambda$ is a hyper-parameter. Following WTP, HiDe-Prompt performs a further refinement step on the output layer parameters $\\psi$ using a separate objective called task-adaptive prediction (TAP). TAP addresses potential classifier bias by considering the Gaussian distribution of all classes encountered so far. The final output layer $h_{\\psi}$ can be further optimized for TAP objective, ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{TAP}}(\\psi)=\\sum_{i=1}^{t}\\sum_{c\\in\\mathcal{Y}^{(i)}}\\sum_{h\\in\\mathcal{H}_{i,c}}-\\log(\\frac{\\exp(h_{\\psi}(h)[c])}{\\sum_{j=1}^{t}\\sum_{c^{\\prime}\\in\\mathcal{Y}^{(j)}}\\exp(h_{\\psi}(h)[c^{\\prime}])})\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "where $\\mathcal{H}_{i,c}$ is constructed by sampling an equal number of pseudo representations from $\\mathcal{G}_{c}$ for $c\\in\\mathcal{V}^{(i)}$ and $i=1,\\dots,t$ . ", "page_idx": 27}, {"type": "text", "text": "For TII, HiDe-Prompt leverages a lightweight auxiliary output layer $\\hat{h}_{\\omega}\\,:\\,\\mathbb{R}^{D}\\,\\rightarrow\\,\\mathbb{R}^{T}$ , to map uninstructed representations directly to task identity. This mapping is learned explicitly through a cross-entropy loss function, ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{TII}}(\\omega)=\\sum_{c\\in\\mathcal{Y}_{t}}\\sum_{\\hat{h}\\in\\hat{\\mathcal{H}}_{c}}-\\log(\\frac{\\exp(\\hat{h}_{\\omega}(\\hat{h})[c])}{\\sum_{c^{\\prime}\\in\\mathcal{Y}_{t}}\\exp(\\hat{h}_{\\omega}(\\hat{h})[c^{\\prime}]})\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "where $\\hat{\\mathcal{H}}_{c}$ is constructed by sampling an equal number of pseudo representations from $\\hat{\\mathcal{G}}_{c}$ for $c\\in\\mathcal{V}^{(i)}$ and $i=1,\\dots,t$ . Please refer to Algorithm 1 for more details. ", "page_idx": 27}, {"type": "text", "text": "E Experimental Details ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Datasets. We use commonly-used datasets in the field of continual learning, including (1) Split CIFAR-100 [23]: This dataset comprises images from 100 classes. These classes are divided randomly into 10 separate incremental tasks, with each task featuring a distinct set of classes. (2) Split ImageNet-R [23]: This dataset is composed of images from 200 classes. It includes challenging examples from the original ImageNet [40] dataset and newly gathered images representing diverse styles. These classes are also randomly divided into 10 distinct incremental tasks. (3) Split CUB-200 [48]: This dataset consists of fine-grained images of 200 different bird species. It is randomly divided into 10 incremental tasks, each comprising a unique class subset. (4) 5-Datasets [9]: This composite dataset incorporates CIFAR-10 [23], MNIST [24], Fashion-MNIST [55], SVHN [31], and notMNIST [3]. Each of these datasets is treated as a separate incremental task, permitting for the assessment of the effects of significant variations between tasks. ", "page_idx": 27}, {"type": "text", "text": "Prompt-Based Approaches. We compare NoRGa against recent prompt-based continual learning approaches: L2P [54], DualPrompt [53], CODA-Prompt [42], S-Prompt [52] and HiDe-Prompt [49]. ", "page_idx": 27}, {"type": "table", "img_path": "erwatqQ4p8/tmp/21ef5645a7fbccc7b5ce96f2c7213a754faca4039db4f67c9be93a08f8273650.jpg", "table_caption": ["Table 4: Performance comparison in task-incremental learning setting. Here we present Final Average Accuracy (FA). "], "table_footnote": [], "page_idx": 28}, {"type": "table", "img_path": "erwatqQ4p8/tmp/b573d94c932bf7b44e873037c3d89d2bf44b2c1d879b0c4f8cbf046e27a3ad34.jpg", "table_caption": ["Table 5: Performance comparison of different PEFT methods using ViT-B/16 with Sup-21K weights. Here we present Final Average Accuracy (FA). "], "table_footnote": [], "page_idx": 28}, {"type": "text", "text": "To ensure a fair comparison, we replicate these methods using the configurations reported in their respective papers. S-Prompt in the original paper trains a separate prompt and classifier head for each task. At evaluation, it infers domain id as the nearest centroid obtained by applying K-Means on the training data. To adapt S-Prompt to CIL, we use one common classifier head for all tasks. For NoRGa, we adopt the same configuration as HiDe-Prompt, which utilizes Prefix Tuning [26] as its prompt-based methodology. Learnable scalar factors $\\alpha$ and $\\tau$ are frozen after the first task\u2019s training to mitigate catastrophic forgetting. We further optimize NoRGa by selecting the best non-linear activation function $\\sigma$ via cross-validation among tanh, sigmoid, and GELU. ", "page_idx": 28}, {"type": "text", "text": "Evaluation Metric. We employ three common metrics to measure the performance the methods, including final average accuracy (FA), cumulative average accuracy (CA), and average forgetting measure (FM). Let $S_{i,t}$ denote the accuracy on the $i$ -th task after learning the $t$ -th task, and $A_{t}$ represent the average accuracy as $\\begin{array}{r}{A_{t}\\;=\\;\\frac{1}{t}\\sum_{i=1}^{t}S_{i,t}}\\end{array}$ . Upon learning all $T$ tasks, we compute $\\mathrm{FA}\\,=\\,A_{T}$ , $\\begin{array}{r}{\\mathrm{CA}=\\frac{1}{T}\\sum_{t=1}^{T}A_{t}}\\end{array}$ , and $\\begin{array}{r}{\\mathrm{{FM}}\\,=\\,\\frac{1}{T-1}\\sum_{i=1}^{T-1}\\operatorname*{max}_{t\\in\\{1,\\dots,T-1\\}}(S_{i,t}-S_{i,T})}\\end{array}$ . It\u2019s worth noting that FA and CA are prioritized over FM, as they inherently encompass both plasticity and forgetting, with FM providing supplementary context [42]. ", "page_idx": 28}, {"type": "text", "text": "Implementation Details. We train and test on one NVIDIA A100 GPU for baselines and our method. We leverage a pre-trained ViT-B/16 model as the backbone. Training employs an Adam optimizer $\\beta_{1}=0.9$ , $\\beta_{2}=0.999)$ , a batch size of 128, and a constant learning rate of 0.005 for all methods except CODA-Prompt. CODA-Prompt utilizes a cosine decaying learning rate starting at 0.001. Additionally, a grid search technique was implemented to determine the most appropriate number of epochs for effective training. ", "page_idx": 28}, {"type": "text", "text": "F Task-incremental Learning Results ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Because HiDe-Prompt optimizes prompt parameters specifically for within-task prediction (WTP), NoRGa inherently aligns with this objective, leading to generally better continual learning performance. We demonstrate this improvement through experiments in a task-incremental learning setting, where task labels are available during inference (as in Table 4). While HiDe-Prompt performs well, NoRGa shows consistent improvement across all scenarios. Notably, NoRGa with sigmoid activation achieves the highest final average accuracy in both Split CIFAR-100 and Split CUB-200 with Sup-21K training. Additionally, NoRGa demonstrates its effectiveness even with self-supervised pre-training, further solidifying its advantage over the original prefix tuning model. Overall, NoRGa variants outperform HiDe-Prompt on both datasets and under both training conditions. ", "page_idx": 28}, {"type": "text", "text": "G Comparison to Different Parameter-Efficient Fine-Tuning Methods ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "As the advantages of different parameter-efficient fine-tuning (PEFT) methods remain an open question, we briefly describe them through our revealed connection between self-attention and MoE. ", "page_idx": 28}, {"type": "table", "img_path": "erwatqQ4p8/tmp/9bfa7a93a36112b2dbec2ccbc550ca815b33007abb98a34b83235029d3945f32.jpg", "table_caption": ["Table 6: Performance comparison of pre-trained model-based continual learning methods using ViT-B/16 with Sup-21K weights. Here we present Final Average Accuracy (FA). "], "table_footnote": [], "page_idx": 29}, {"type": "table", "img_path": "erwatqQ4p8/tmp/737c2eda93cee2fa95db4783ca7d45615a8645891e27e0ee2464958162b58839.jpg", "table_caption": ["Table 7: Ablation study on the effect of learnable $\\alpha$ and $\\tau$ with Sup-21K weights. Here we present Final Average Accuracy (FA). "], "table_footnote": [], "page_idx": 29}, {"type": "text", "text": "Prefix tuning introduces additional parameters at the input of MSA layers to adapt the pre-trained model representation, contrasting with Adapter [16], which insert adaptive parameters between layers, often replacing MLP blocks. LoRA [17] approximates weight updates with low-rank matrices and adds them to the backbone weights. Our work shows that the MSA layer in a pre-trained model can be seen as a pre-trained MoE architecture. Applying LoRA to the MSA layer refines both the pre-trained experts and their corresponding score functions for downstream tasks. In contrast, prefix tuning expands the pre-trained MoE models by incorporating new experts while preserving the original components, rather than modifying the pre-trained experts like LoRA. ", "page_idx": 29}, {"type": "text", "text": "NoRGa emerges as a simple, parameter-efficient fine-tuning method and can be regarded as a distinct implementation of prompts. However, our novel perspective on the interplay between self-attention, prefix tuning, and mixture of experts enables us to theoretically substantiate the effectiveness of NoRGa as shown in Section 4. ", "page_idx": 29}, {"type": "text", "text": "For empirical comparison, we integrate the framework of HiDe-Prompt with different PEFT techniques and Sup-21K weights, evaluating performance on Split CIFAR-100 and Split CUB-200. The results are summarized in Table 5. The table shows that NoRGa consistently outperforms the other PEFT methods on both datasets, suggesting its effectiveness. Nevertheless, further investigation with LoRA and Adapter would be necessary to draw more definitive conclusions. ", "page_idx": 29}, {"type": "text", "text": "While exploring alternative PEFT methods might offer improvements in WTP performance, these approaches lack theoretical guarantees and could lead to an increased number of parameters. In contrast, our NoRGa method modifies the original score functions of prefix tuning to enhance WTP performance with theoretical rigor. Importantly, NoRGa maintains the same parameter count as HiDe-Prompt, which is crucial in CL due to memory constraints. ", "page_idx": 29}, {"type": "text", "text": "H Comparison with Pre-trained Model-based Methods ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Previous works have demonstrated that utilizing pre-trained models (PTM) significantly enhances performance for continual learning, often surpassing the performance of non-PTM-based methods. Moreover, studies have shown that first-task adaptation and simple PEFT-style tuning can achieve competitive performance [20, 37, 60, 29] with prompt-based methods. For instance, [20] demonstrated that appending a nearest class mean (NCM) classifier to a ViT model\u2019s feature outputs, can serve as a strong baseline. [37, 60] enhanced this strategy by adapting the pre-trained model to the first task using the three PEFT methods for transformer networks [60] and the FiLM method for CNNs [37]. Additionally, [29] improved NCM by incorporating second-order statistics\u2014covariance and Gram matrices. However, these methods, which fine-tune only the backbone for the initial task, may not always ensure satisfactory separation of new tasks\u2019 features. Our work focuses on continually adapting the backbone, utilizing task-specific prompts to consistently capture emerging tasks\u2019 characteristics, and proposing a novel method to enhance the CL performance of previous prompting methods. ", "page_idx": 29}, {"type": "image", "img_path": "erwatqQ4p8/tmp/12a006d82f063e8ccd1ae3ac8970e6a202aaaa05d5734f7a408e08f3caa3ad45.jpg", "img_caption": ["Figure 3: Validation loss on Split CUB-200 throughout the training of the first task. "], "img_footnote": [], "page_idx": 30}, {"type": "table", "img_path": "erwatqQ4p8/tmp/40c68b5f6fa4563a3628158de761063edf9858538f37dfe6edc44d13b1d21ce2.jpg", "table_caption": ["Table 8: Comparison of training times for HiDe-Prompt and NoRGa. All experiments were conducted on a single NVIDIA A100 GPU. "], "table_footnote": [], "page_idx": 30}, {"type": "text", "text": "", "page_idx": 30}, {"type": "text", "text": "To validate our approach, we compare it against state-of-the-art PTM-based continual learning methods, including ADAM [60] and RanPAC [29], using Split CIFAR-100 and Split CUB-200 datasets. The results are summarized in Table 6. In comparison to other PTM-based continual learning methods, NoRGa demonstrates competitive performance across both evaluated datasets. For instance, on Split CIFAR-100, NoRGa achieves an FA of $94.48\\%$ , exceeding the next best method by over $2\\%$ . Similarly, on Split CUB-200, NoRGa delivers strong results relative to other baselines. These improvements highlight the effectiveness of our method in mitigating catastrophic forgetting and preserving knowledge retention across multiple tasks. ", "page_idx": 30}, {"type": "text", "text": "I Efficiency Tests ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "We compare the validation loss of NoRGa and HiDe-Prompt throughout the first task on Split CUB-200, as illustrated in Figure 3. The results demonstrate that NoRGa consistently outperforms HiDe-Prompt throughout the training process. This empirical evidence supports the theoretical advantages of NoRGa over HiDe-Prompt. ", "page_idx": 30}, {"type": "text", "text": "J Effect of Learnable Hyperparameters ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "As described in Section 4.1 and Appendix E, in our framework, $\\alpha$ and $\\tau$ are learnable hyperparameters and optimized through backpropagation during the first task, eliminating the need for manual tuning. Additionally, our theoretical analysis of NoRGa\u2019s statistical efficiency in Section 4.2 holds for any values of $\\alpha$ and $\\tau$ , demonstrating the theoretical robustness. To further investigate, we evaluated both fixed and learnable settings for these hyperparameters. For the fixed case, we set their values to 1. We report FA on Split CUB-200 and Split CIFAR-100 with Sup-21K weights. The results are summarized in Table 7. Although performance slightly decreased with fixed hyperparameters, it still outperforms HiDe-Prompt, indicating our method\u2019s empirical robustness. ", "page_idx": 30}, {"type": "text", "text": "K Training Times ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "We utilize a single A100 GPU for all experiments. The training times are summarized in Table 8. While NoRGa exhibits slightly longer training times compared to HiDe-Prompt, it consistently achieves significantly better performance. This demonstrates the effectiveness of NoRGa while maintaining competitive training efficiency. ", "page_idx": 30}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper\u2019s contributions and scope are reflected accurately in the abstract and introduction. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 31}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Justification: We have already discussed the limitations of our work in the conclusion section. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 31}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: The full set of assumptions and proofs is given in Section 4.2 and the Appendices. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 32}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: All the experimental details for reproducibility are specified in Section 5, and Appendix E. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 32}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 33}, {"type": "text", "text": "Justification: We provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results in supplemental material. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 33}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Justification: All the experimental details are specified in Section 5, and Appendix E. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 33}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Justification: We report error bars and relevant information in Section 5, and Appendix F. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 33}, {"type": "text", "text": "", "page_idx": 34}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: We have provided sufficient information on the computer resources in Appendix E. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 34}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: We have read and followed all the NeurIPS Code of Ethics. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 34}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 34}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 34}, {"type": "text", "text": "Justification: Given the theoretical nature of the paper, we do not think there are any positive or negative societal impacts of the work performed. Experiments are conducted only for empirically justifying the theoretical results. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 34}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 35}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: Our paper does not release any data or models that have a high risk for misuse. Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 35}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: The data and models used in the paper are properly credited. See Section 5, and Appendix E for further details. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 35}, {"type": "text", "text": "", "page_idx": 36}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: Our paper does not release new assets. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 36}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 36}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 36}, {"type": "text", "text": "", "page_idx": 37}]