[{"type": "text", "text": "The Limits of Differential Privacy in Online Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Bo Li Wei Wang Peng Ye Department of Computer Science and Engineering The Hong Kong University of Science and Technology Hong Kong SAR, China bli@ust.hk, weiwa@cse.ust.hk, pyeac@connect.ust.hk ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Differential privacy (DP) is a formal notion that restricts the privacy leakage of an algorithm when running on sensitive data, in which privacy-utility trade-off is one of the central problems in private data analysis. In this work, we investigate the fundamental limits of differential privacy in online learning algorithms and present evidence that separates three types of constraints: no DP, pure DP, and approximate DP. We first describe a hypothesis class that is online learnable under approximate DP but not online learnable under pure DP under the adaptive adversarial setting. This indicates that approximate DP must be adopted when dealing with adaptive adversaries. We then prove that any private online learner must make an infinite number of mistakes for almost all hypothesis classes. This essentially generalizes previous results and shows a strong separation between private and non-private settings since a finite mistake bound is always attainable (as long as the class is online learnable) when there is no privacy requirement. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Machine learning has demonstrated extraordinary capabilities in various industries, from healthcare to finance. Yet, it could raise serious privacy concerns as it may require access to a vast amount of personal data. The data used to train machine learning models may also contain sensitive information such as medical records or financial transactions. Therefore, it is crucial to ensure that the private data is well-protected during the training process. ", "page_idx": 0}, {"type": "text", "text": "Differential privacy (DP) [24, 23] is a rigorous mathematical definition that quantifies the level of personal data leakage. In a nutshell, an algorithm is said to be differentially private if the change of any individual\u2019s data won\u2019t make the output significantly different. DP has become the standard notion of privacy and has been broadly employed [1, 6, 2]. ", "page_idx": 0}, {"type": "text", "text": "However, privacy is not a free lunch and usually comes at a cost. Simple tasks may become much harder or even intractable when privacy constraints are imposed. It is crucial to understand the cost to pay for privacy. For probably approximately correct (PAC) learning [44, 11, 43], which is the standard theoretical model of machine learning, there have been many works investigating the cost associated with privacy, which demonstrate a huge discrepancy in terms of the cost under non-private, pure private, and approximate private constraints. ", "page_idx": 0}, {"type": "text", "text": "One central requirement in PAC learning is that the data need to be i.i.d. generated and given in advance. Such assumptions fail to capture many scenarios in practice. For example, fraud detection in financial transactions often needs to be handled in real time, which prohibits access to the entire dataset. Moreover, fraudulent patterns can change over time, and new types of fraud can emerge. In such a scenario, the data are clearly not i.i.d. and can even be adaptive to the algorithm\u2019s prior predictions, in which the online learning model should be adopted. ", "page_idx": 0}, {"type": "table", "img_path": "Cqr6E81iB7/tmp/5b381f181b5340dcc7caa9d97c25009715b627fd01846145e95b2b049a5a19fe.jpg", "table_caption": ["Table 1: Separation between three types of constraints "], "table_footnote": [], "page_idx": 1}, {"type": "text", "text": "Compared with private PAC learning, the limits of private online learning are less understood. For approximate DP, algorithms for Littlestone classes were proposed [30]. But for pure DP, the only known result is the one for point functions given by Dmitriev et al. [22]. They also suggested that one could leverage existing tools of DP continual observation [26, 34] to design algorithms for finite hypothesis classes and asked if generic learners can be constructed for infinite hypothesis classes. ", "page_idx": 1}, {"type": "text", "text": "Going beyond qualitative learnability, it is worth quantitatively exploring the number of mistakes made by an online learner. Without privacy, it is possible to achieve a mistake bound of at most the Littlestone dimension of the hypothesis class [39], which is independent of the total rounds $T$ . Therefore, the number of mistakes is always bounded as $T\\rightarrow\\infty$ . However, all existing private online learning algorithms suffer from an error count that grows at least logarithmically with $T$ . It was asked by Sanyal and Ramponi [41] whether such a cost is inevitable for DP online learning. In a recent work of Cohen et al. [21], they showed that any private online learning algorithm for the class of point functions over $[T]$ must incur $\\Omega(\\log T)$ mistakes. However, it remains open whether such cost is unavoidable for generic hypothesis classes, especially for those with a smaller cardinality. ", "page_idx": 1}, {"type": "text", "text": "1.1 Main Results ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We obtain results that separate three types of constraints: no DP, pure DP, and approximate DP. ", "page_idx": 1}, {"type": "text", "text": "Separation between pure and approximate DP. We first perform a systematic study of online learning under pure DP. We prove that every pure privately PAC learnable class is also pure privately online learnable against oblivious adversaries, answering a question raised by Dmitriev et al. [22]. For the stronger adaptive adversaries, we obtain an impossibility result that the class of point functions over $\\mathbb{N}$ , which can be pure privately learned in the offline model, is not online learnable under pure DP. According to the result of Golowich and Livni [30], it is online learnable under approximate DP. Thus, our conclusion reveals a strong separation between these two privacy definitions. ", "page_idx": 1}, {"type": "text", "text": "Separation between private and non-private settings. We next quantitatively investigate the dependence on $T$ in the mistake bound. We show that for any hypothesis class $\\mathcal{H}$ , any private online learning algorithm must make $\\Omega(\\log T)$ mistakes unless $\\mathcal{H}$ contains only one single hypothesis or exactly two complementary hypotheses (see Section 4 for the definition). This largely generalizes previous results and indicates that such a separation indeed exists universally. We further improve the lower bound to $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ , where $\\operatorname{LD}({\\mathcal{H}})$ represents the Littlestone dimension of $\\mathcal{H}$ . ", "page_idx": 1}, {"type": "text", "text": "To better demonstrate our results, we consider the task of online learning point functions over $\\mathbb{N}$ in the oblivious setting and summarize in Table 1 the finiteness of mistakes and learnability under the three types of constraints. Note that for this hypothesis class, the impossibility of making finite mistakes in private online learning can also be derived from the result in [21]. However, our conclusion (Theorem 4.3) is more general \u2013 it applies to a much broader family of hypothesis classes. We choose this hypothesis class for illustration because it separates the learnability against adaptive adversaries under pure DP and approximate DP. ", "page_idx": 1}, {"type": "text", "text": "1.2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The work of [38] initialized the study of PAC learning with differential privacy. A series of subsequent works then showed that privacy constraints have a distinctive impact on the learners. The most remarkable result is the equivalence between approximate private learning and (non-private) online learning [4, 15, 5, 29]. For pure DP, the learnability is characterized by the so-called representation dimension [10]. Both results suggest that private learning is strictly harder than non-private learning. For some specific hypothesis class such as the one-dimensional threshold over finite domain, it was shown that learning with approximate DP enjoys a much lower sample complexity than with pure DP [9, 19, 28, 13, 14, 37, 20], separating these two types of privacy. Another separation result is the huge gap between properly and improperly learning point functions with pure DP [9], which does not exist in non-private and approximate private settings. ", "page_idx": 2}, {"type": "text", "text": "The problem of private online learning Littlestone classes was first studied by Golowich and Livni [30]. They proposed private online learning algorithms for hypothesis classes of finite Littlestone dimension in the realizable setting against oblivious and adaptive adversaries, further strengthening the connection between online learning and differential privacy. In contrast with the non-private setting where the mistake bound is always finite, their algorithms exhibit a cost of $\\log T$ for data streams of length $T$ . Recently, it was shown by Cohen et al. [21] that this extra cost is unavoidable for point functions over $[T]$ . Dmitriev et al. [22] also obtained similar results, but only for algorithms that satisfy certain properties. It was quest\u221aioned by Sanyal and Ramponi [41] whether an unbounded number of mistakes is necessary for $\\varepsilon\\approx{\\sqrt{T}}$ (see Section 2.2 for the definition of $\\varepsilon$ ). ", "page_idx": 2}, {"type": "text", "text": "There were also a great number of results on private parametric online learning tasks such as online predictions from experts (OPE) and online convex optimization (OCO) [36, 42, 35, 3, 8]. Most of them focus on the agnostic setting. Asi et al. [7] developed algorithms for both problems in the realizable regime with oblivious adversaries, again with a $\\log T$ overhead. Asi et al. [8] obtained some hardness results for DP-OPE against adaptive adversaries, but they require the number of experts to be larger than $T$ . ", "page_idx": 2}, {"type": "text", "text": "Another related field is differential privacy under continual observation (see, e.g., [26, 18, 34]). While the techniques can be used to design online learning algorithms, it is unclear whether lower bounds for DP continual observation can be transformed to any hardness results for private online learning (see [22] for a detailed discussion). ", "page_idx": 2}, {"type": "text", "text": "2 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Notation. Throughout this paper, we use $S=\\{z_{1},\\ldots,z_{t}\\}$ to denote a data stream of length $T$ . We write $S[t]$ to denote the data point comes at time-step $t$ , i.e., $z_{t}$ . For an algorithm $\\boldsymbol{\\mathcal{A}}$ that runs on $S$ , we use $\\bar{\\mathcal{A}}(S)_{t}$ to denote the output of $\\boldsymbol{\\mathcal{A}}$ at time-step $t$ . ", "page_idx": 2}, {"type": "text", "text": "2.1 Online Learning ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We start by defining online learning as a sequential game played between a learner and an adversary. Let $\\mathcal{H}\\subseteq\\{0,1\\}^{\\chi}$ be a hypothesis class over domain $\\mathcal{X}$ and $T$ be a positive integer indicating the total number of rounds. In the $t$ -th round, the learner outputs a hypothesis $h_{t}\\in\\{0,1\\}^{\\mathcal{X}}$ (not required to be in $\\mathcal{H}$ ) while the adversary presents a pair $\\left({{x}_{t}},{{y}_{t}}\\right)$ . The performance of the learner is measured by the expected regret, which is the expected number of additive mistakes made by the learner compared to the best (in hindsight) hypothesis in $\\mathcal{H}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\sum_{t=1}^{T}\\mathbb{I}[h_{t}(x_{t})\\neq y_{t}]-\\operatorname*{min}_{h^{\\star}\\in\\mathcal{H}}\\sum_{t=1}^{T}\\mathbb{I}[h^{\\star}(x_{t})\\neq y_{t}]\\right].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The above setting is usually referred to as the agnostic setting, where we do not make any assumptions on the data. In the realizable setting, it is guaranteed that there is some $h^{\\star}\\in\\mathcal{H}$ so that $y_{t}={\\bar{h}}^{\\star}(x_{t})$ for all $t\\,\\in\\,[T]$ . In this setting, the performance is directly measured by the expected number of mistakes made by the learner, which is called the mistake bound, defined as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\sum_{t=1}^{T}\\mathbb{I}[h_{t}(x_{t})\\neq y_{t}]\\right].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "An online learning algorithm is considered successful if it attains a sublinear regret, i.e., the regret is $o(T)$ . In this paper, we mainly focus on the realizable setting. We say a hypothesis class $\\mathcal{H}$ is online learnable if there is an online learning algorithm for $\\mathcal{H}$ that makes $o(T)$ mistakes in expectation. ", "page_idx": 3}, {"type": "text", "text": "We consider two types of adversaries: an oblivious adversary chooses the examples in advance (could depend on the learner\u2019s strategy, but not on its internal randomness), and $\\left({{x}_{t}},{{y}_{t}}\\right)$ is revealed to the learner in the $t$ -th round. An adaptive adversary instead, can choose $(x_{t},y_{t})$ based on past history, i.e., $h_{1},\\ldots,h_{t-1}$ and $(x_{1},y_{1}),\\ldots,(x_{t-1},y_{t-1})$ . ", "page_idx": 3}, {"type": "text", "text": "Without privacy, the mistake bound is exactly characterized by the Littlestone dimension [39] even with stronger adversaries that can choose $\\left({{x}_{t}},{{y}_{t}}\\right)$ after seeing $h_{t}$ . To define the Littlestone dimension, we first introduce the notion of a shattered tree. ", "page_idx": 3}, {"type": "text", "text": "Definition 2.1 (Shattered Tree). Consider a full binary tree of depth $d$ such that each node is labeled by some $x\\in\\mathscr{X}$ . Every $\\{y_{1},\\dots,y_{d}\\}\\in\\{0,1\\}^{d}$ defines a root-to-leaf path $x_{1},\\ldots,x_{d}$ obtained by starting at the root, then for each $i=2,\\ldots,d$ choosing $x_{i}$ to be the left child of $x_{i-1}$ if $y_{i-1}=0$ and to be the right child otherwise. The tree is said to be shattered by $\\mathcal{H}$ if for every root-to-leaf path defined in this way, there exists $h\\in\\mathcal H$ such that $y_{i}=h(x_{i})$ for all $\\dot{i}\\in[d]$ . ", "page_idx": 3}, {"type": "text", "text": "Definition 2.2 (Littlestone Dimension). The Littlestone dimension of $\\mathcal{H}$ , denoted by $\\operatorname{LD}({\\mathcal{H}})$ , is the maximal $d$ such that there exists a full binary tree of depth $d$ that is shattered by $\\mathcal{H}$ . ", "page_idx": 3}, {"type": "text", "text": "The problem of online prediction from experts can be viewed as a parametric version of online learning. Let $d$ be the total number of experts. In the $t$ -th round, the algorithm chooses an expert $i_{t}\\in[d]$ while the adversary selects a loss function $\\ell_{t}:[d]\\to[0,1]$ . Then $\\ell_{t}$ is revealed and a cost of $\\ell_{t}(i_{t})$ is incurred. The goal is to minimize the expected regret ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\sum_{t=1}^{T}\\ell_{t}(i_{t})-\\operatorname*{min}_{i\\in[d]}\\sum_{t=1}^{T}\\ell_{t}(i)\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Similar to online learning, an oblivious adversary chooses all $\\ell_{t}$ in advance, while an adaptive adversary determines $\\ell_{t}$ based on $i_{1},\\ldots,i_{t-1}$ and $\\ell_{1},\\dots,\\ell_{t-1}$ . In the realizable setting, it is guaranteed that there exists $i^{\\star}\\in[d]$ such that $\\ell_{t}(i^{\\star})=0$ for all $t\\in[T]$ . ", "page_idx": 3}, {"type": "text", "text": "2.2 Differential Privacy ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We first recall the standard definition of differential privacy. ", "page_idx": 3}, {"type": "text", "text": "Definition 2.3 (Differential Privacy). An algorithm $\\boldsymbol{\\mathcal{A}}$ is said to be $(\\varepsilon,\\delta)$ -differentially private if for any two sequences $S_{1}$ and $S_{2}$ that differ in only one entry and any event $O$ , we have ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[A(S_{1})\\in O]\\leq e^{\\varepsilon}\\operatorname*{Pr}[A(S_{2})\\in O]+\\delta.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "When $\\delta=0$ , we also say $\\boldsymbol{\\mathcal{A}}$ is $\\varepsilon$ -differentially private. ", "page_idx": 3}, {"type": "text", "text": "Our proofs use the packing argument [32, 9], which heavily relies on the following property of DP. ", "page_idx": 3}, {"type": "text", "text": "Fact 2.4 (Group Privacy). Let $\\boldsymbol{\\mathcal{A}}$ be an $(\\varepsilon,\\delta)$ -differentially private algorithm. Then for any two sequences $S_{1}$ and $S_{2}$ that differ in $k$ entries and any event $O$ , we have ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[A(S_{1})\\in O]\\leq e^{k\\varepsilon}\\operatorname*{Pr}[A(S_{2})\\in O]+{\\frac{e^{k\\varepsilon}-1}{e^{\\varepsilon}-1}}\\cdot\\delta.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Privacy with adaptive adversaries. When interacting with adaptive adversaries, the notion of differential privacy becomes a bit trickier.1 We adopt the definition of adpative differential privacy from [30, 34, 8]. Let $\\boldsymbol{\\mathcal{A}}$ be an online algorithm, Adv be an adversary2 who generates two sequences $S_{1}$ and $S_{2}$ adaptively such that $S_{1}$ and $S_{2}$ differ in only one entry, and $b\\in\\{1,2\\}$ be a global parameter that is unknown to $\\boldsymbol{\\mathcal{A}}$ and Adv. The interactive process $A\\circ\\mathsf{A d v}(b)$ works as follows: in each time-step $t$ , Adv generates two data points $S_{1}[t],S_{2}[t]$ based on the past history and $\\boldsymbol{\\mathcal{A}}$ gets $S_{b}[t]$ . The output of $A\\circ\\mathsf{A d v}(b)$ is defined to be the entire output of $\\boldsymbol{\\mathcal{A}}$ . We say $\\boldsymbol{\\mathcal{A}}$ satisfies $(\\varepsilon,\\delta)$ -adaptive differential privacy if for any such adversary Adv and any event $O$ , we have ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[A\\circ\\mathsf{A d v}(1)\\in O]\\leq e^{\\varepsilon}\\operatorname*{Pr}[A\\circ\\mathsf{A d v}(2)\\in O]+\\delta.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Choosing the privacy parameters. It is a commonly agreed principle that for the definition of differential privacy to be meaningful, the parameter $\\delta$ should be much less than the inverse of the dataset size [27]. In this paper, when we say an algorithm $\\boldsymbol{\\mathcal{A}}$ is private without specifying the privacy parameters, we typically refer to the set-up that $\\varepsilon$ is a small constant (say 0.01) and $\\delta=o(1/T)$ . ", "page_idx": 4}, {"type": "text", "text": "3 Learning with Pure Differential Privacy ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we study online learning under pure DP constraint. We first propose algorithms for privately offline learnable hypothesis classes against oblivious adversaries via a reduction to OPE using the tool of probabilistic representation. Then we turn to adaptive adversaries and present a hypothesis class that is privately offline learnable but not privately online learnable. Note that according to the results of [30], this class is online learnable under approximate DP with adaptive adversaries. Hence, we manifest a strong separation between pure and approximate DP. ", "page_idx": 4}, {"type": "text", "text": "3.1 Learning Against Oblivious Adversaries ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we consider an oblivious adversary. We first recall the notion of representation dimension, which was introduced by Beimel et al. [10] to characterize pure DP offline learnability. Let $\\mathcal{D}$ be a distribution over ${\\mathcal{X}}\\times\\{0,\\dot{1}\\}$ and $h\\in\\{0,\\bar{1}\\}^{\\bar{\\mathcal{X}}}$ be a hypothesis. The error of $h$ with respect to $\\mathcal{D}$ is defined as $\\mathrm{error}_{\\mathcal{D}}(h)=\\mathrm{Pr}_{(x,y)\\sim\\mathcal{D}}[h(x)\\neq y]$ . ", "page_idx": 4}, {"type": "text", "text": "Definition 3.1 (Representation Dimension). A probability distribution $\\mathcal{P}$ over hypothesis classes is said to be an $(\\alpha,\\beta)$ -probabilistic representation for $\\mathcal{H}$ if for any $h^{\\star}\\in\\mathcal{H}$ and any distribution $\\mathcal{D}$ over ${\\mathcal{X}}\\times\\{0,1\\}$ that is labeled by $h^{\\star}$ , we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}_{V\\sim{\\mathcal{P}}}[\\exists v\\in V\\;s.t.\\;\\mathrm{error}_{{\\mathcal{D}}}(v)\\leq\\alpha]\\geq1-\\beta.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Let $\\operatorname{size}(\\mathcal P)=\\operatorname{max}_{V\\in\\operatorname{supp}(\\mathcal P)}\\ln\\lvert V\\rvert$ . The representation dimension of $\\mathcal{H}$ , denoted by $\\mathtt{R e p D i m}({\\mathcal{H}})$ , is defined as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{{R e p D i m}}(\\mathcal{H})=\\operatorname*{min}_{\\substack{\\mathcal{P\\mathrm{~is~a~}(1/4,1/4)-\\mathrm{probabilistic~representation~for~}\\mathcal{H}}}}\\mathrm{size}(\\mathcal{P}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The following lemma from [10] shows that a constant probabilistic representation can be boosted to an $(\\alpha,\\beta)$ one with logarithmic cost in $1/\\alpha$ and $1/\\beta$ . ", "page_idx": 4}, {"type": "text", "text": "Lemma 3.2. There exists an $(\\alpha,\\beta)$ -probabilistic representation for $\\mathcal{H}$ with ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathrm{size}(\\mathcal P)=O(\\log(1/\\alpha)\\cdot(\\mathrm{RepDim}(\\mathcal H)+\\log\\log\\log(1/\\alpha)+\\log\\log(1/\\beta))).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We first consider the realizable setting. Let $S=\\{(x_{1},y_{1}),\\dots,(x_{T},y_{T})\\}$ be the sequence chosen by the adversary and $\\mathcal{D}_{S}$ be the empirical distribution of $S$ (i.e., $\\dot{\\mathrm{Pr}}_{(x,y)\\sim\\stackrel{\\cdot}{\\mathcal{D}_{S}}}[(x,y)=(x_{t},y_{t})]=1/\\dot{T}$ for all $t\\in[T])$ ). By sampling a hypothesis class $V$ from an $(\\alpha,\\beta)$ -probabilistic representation with $1/\\alpha<1/\\dot{T}$ , we know that it holds with probability at least $1-\\beta$ that $\\mathrm{error}_{\\mathit{\\Phi}_{S}}(\\bar{v})\\leq1/\\alpha<1/T$ for some $v\\in V$ . This further implies that $v$ is consistent with all examples in $S$ . By Lemma 3.2, $V$ is finite as long as $\\mathcal{H}$ has a finite representation dimension. Thus, it suffices to run the DP-OPE algorithm in [7] with every $v\\in V$ as an expert. ", "page_idx": 4}, {"type": "text", "text": "Theorem 3.3. Let $\\mathcal{H}$ be a hypothesis class with $\\mathtt{R e p D i m}({\\mathcal H})<\\infty$ . In the realizable setting, there exists an online learning algorithm that is $\\varepsilon$ -differentially private and has an expected mistake bound of $\\begin{array}{r}{O\\left(\\frac{\\log^{2}T(\\tt R e p D i m(\\mathcal{H})+\\bar{l}\\log\\bar{l}\\log T)^{2}}{\\varepsilon}\\right)}\\end{array}$ with an oblivious adversary. ", "page_idx": 4}, {"type": "text", "text": "The above conclusion directly extends to the agnostic setting by replacing the DP-OPE algorithm with an agnostic one [8]. ", "page_idx": 4}, {"type": "text", "text": "Theorem 3.4. Let $\\mathcal{H}$ be a hypothesis class with $\\mathtt{R e p D i m}(\\mathcal{H})<\\infty$ . In the agnostic setting, there exists\u221a an online learning algorithm that is $\\varepsilon$ -differentially private and achieves an expected regret of $\\begin{array}{r}{O\\left(\\frac{\\sqrt{T}\\log T(\\ R\\mathbf{epDim}(\\mathcal{H})+\\operatorname{log}\\log T)}{\\varepsilon}\\right)}\\end{array}$ with an oblivious adversary. ", "page_idx": 4}, {"type": "text", "text": "Note that every online learning algorithm can be transformed to a PAC learner by the online-to-batch conversion [17]. Our result reveals that pure private online learnability against oblivious adversaries is equivalent to pure private PAC learnability in both realizable and agnostic settings. ", "page_idx": 4}, {"type": "text", "text": "3.2 Learning Against Adaptive Adversaries ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We now turn to adaptive adversaries. For finite hypothesis classes, it is still feasible to employ techniques from DP-OPE [3] or DP continual observation [26, 18, 34] to devise online learning algorithms (in Appendix F, we give an algorithm with a better mistake bound in the realizable setting). One may hope that this can be extended to hypothesis class with finite representation dimension, as we did in the oblivious setting. However, it turns out that our method for oblivious adversaries is not applicable here. Since the examples are not fixed in advance, we cannot guarantee that the sampled hypothesis class $V$ contains a consistent hypothesis. Moreover, the famous oblivious-to-adaptive transformation (see, e.g., [16]), which was used by Golowich and Livni [30] to construct online learners under approximate DP, also fails to give a sublinear mistake bound. This is because pure DP only has the basic composition property, whi\u221ach yields a mistake bound that scales linearly with $T$ (for approximate DP, this can be improved to $\\sqrt{T}$ by advanced composition). Therefore, it is not clear if every offline learnable hypothesis class can also be made online learnable against adaptive adversaries under pure DP. ", "page_idx": 5}, {"type": "text", "text": "We will show that this is an impossible mission. Let $\\mathsf{P D I N T}_{d}$ be the set of point functions over $[d]$ and $\\tt P O I N T_{N}$ be the set of point functions over $\\mathbb{N}$ , where a point function $f_{x}:\\mathcal{X}\\to\\{0,1\\}$ is a function that maps $x$ to 1 and all other elements to 0. Both $\\mathsf{P O I N T}_{d}$ and $\\tt P O I N T_{N}$ have a constant representation dimension and thus are offilne learnable under pure DP [10]. In the rest of this section, we will prove that for any pure DP online learning algorithm for $\\mathtt{P O I N T}_{d}$ , an adaptive adversary can force it to make $\\Omega(\\operatorname*{min}(\\log d,T))$ errors. As a direct corollary, $\\tt P O I N T_{N}$ is not pure privately online learnable against adaptive adversaries. ", "page_idx": 5}, {"type": "text", "text": "We now illustrate the idea of our proof. Let us start by considering a simplified version, where the algorithm is constrained to be proper, i.e., $h_{t}\\,\\in\\,\\mathcal{H}\\,=\\,\\mathtt{P O I N T}_{d}$ for every $t\\,\\in\\,[T]$ . Then one can construct a series of data streams $S_{i}\\,=\\,\\{(i,1),\\ldots,(i,1)\\}$ for every $i\\,\\in\\,[d]$ . An accurate proper learner must output $f_{i}$ for most of the rounds. This allows us to use the packing argument to derive an $\\Omega(\\log d)$ lower bound for $T=\\Theta(\\log d)$ . ", "page_idx": 5}, {"type": "text", "text": "However, the above argument does not apply to the general case where the learner may be improper since a learner can simply output an all-one function that makes 0 errors on each $S_{i}$ . Therefore, we have to insert to $S_{i}$ some examples of the form $(j,0)$ where $j\\neq i$ . This prevents $h_{t}$ from taking 1 on elements other than $i$ . But when should we insert $(j,0)?$ And how do we determine the value of $j$ ? ", "page_idx": 5}, {"type": "text", "text": "Note that till now, we have not used the adversary\u2019s adaptivity. It is necessary to exploit this power since any oblivious construction can be solved by our algorithm in Theorem 3.3. When the adversary acts adaptively, the construction becomes a dual online learning game: in each round, the learner outputs $h_{t}$ as a \u201cdata point\u201d and the adversary chooses $(i,1)$ or some $(j,0)$ as the \u201chypothesis\u201d. This inspires us to leverage tools from online learning to construct the adversary. ", "page_idx": 5}, {"type": "text", "text": "We now sketch our idea. In each round, we choose $(i,1)$ as the data point with probability $1/2$ , and otherwise sample a $(j,0)$ from some probability distribution. We maintain the distribution by the multiplicative update rule, which is a widely used method in online decision making. The weight of $j$ is increased by a multiplicative factor whenever $h_{t}(j)=1$ , and the probability of selecting $j$ is proportional to its weight. We provide a detailed implementation in Algorithm 1. ", "page_idx": 5}, {"type": "text", "text": "Using the standard argument of multiplicative update, we can show that an accurate learner must predict $h_{t}(i)=1$ for most rounds and $h_{t}(j)=\\bar{1}$ for very few rounds. This allows us to apply the packing argument to obtain the following hardness result. ", "page_idx": 5}, {"type": "text", "text": "Theorem 3.5. Let $\\varepsilon\\le O(1)$ and $d\\geq2$ . Any $\\varepsilon$ -differentially private online learning algorithm for $\\mathsf{P O I N T}_{d}$ must incur a mistake bound of $\\Omega(\\operatorname*{min}(\\log d/\\varepsilon,T))$ in the adaptive adversarial setting. ", "page_idx": 5}, {"type": "text", "text": "Since $\\mathsf{P D I N T}_{d}$ is a subset of $\\tt P O I N T_{N}$ for any $d$ , the above result directly implies that $\\tt P O I N T_{N}$ is not online learnable with adaptive adversaries under pure DP. This shows a strong separation between pure DP and approximate DP. ", "page_idx": 5}, {"type": "text", "text": "Corollary 3.6. Let $\\varepsilon\\le O(1)$ . In the adaptive adversarial setting, any $\\varepsilon$ -differentially private online learning algorithm for $\\tt P O I N T_{N}$ must make $\\Omega(T)$ mistakes. ", "page_idx": 5}, {"type": "text", "text": "Input: the number of rounds $T$ ; online learning algorithm $\\boldsymbol{\\mathcal{A}}$ ; input data stream $S$   \nOutput: hypotheses $h_{1},\\ldots,h_{T}$ outputted by $\\boldsymbol{\\mathcal{A}}$   \n1 $w_{0}(j)\\gets1$ for all $j\\in[d]$   \n2 for $t=1,\\dots,T$ do   \n3 $(x_{t},y_{t})\\gets S[t]$   \n4 Set $\\begin{array}{r}{p(j)\\leftarrow\\frac{w_{t-1}(j)}{\\sum_{k\\in[d]\\setminus\\{x_{t}\\}}w_{t-1}(k)}}\\end{array}$ for $j\\in[d]\\setminus\\{x_{t}\\}$   \n5 With probability $1/2$ , sample $j\\sim p$ and set $(x_{t},y_{t})\\gets(j,0)$   \n6 Present $\\left({{x}_{t}},{{y}_{t}}\\right)$ to $\\boldsymbol{\\mathcal{A}}$ and receive $h_{t}$ from $\\boldsymbol{\\mathcal{A}}$   \n7 Update $w_{t}(j)=w_{t-1}(j)\\cdot e^{h_{t}(j)}$ for all $j\\in[d]$   \n8 end   \n9 return $h_{1},\\ldots,h_{T}$ ", "page_idx": 6}, {"type": "text", "text": "4 A General Lower Bound on the Number of Mistakes ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we prove an $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ lower bound on the number of mistakes made by any private learner for every hypothesis class $\\mathcal{H}$ that contains a pair of non-complementary hypotheses.3 This implies that as $T\\rightarrow\\infty$ , any private algorithm will make an infinite number of mistakes. Note that without privacy, the Standard Optimal Algorithm always makes at most $\\mathbb{L}\\mathbb{D}(\\mathcal{H})$ mistakes [39]. Thus, our lower bound reveals a universal separation between non-private and private models. ", "page_idx": 6}, {"type": "text", "text": "Our proof proceeds in two steps. We first show an $\\Omega(\\log T)$ lower bound in Section 4.1. Then based on this result, we prove the $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ lower bound in Section 4.2. ", "page_idx": 6}, {"type": "text", "text": "4.1 A Lower Bound for Non-complementary Hypotheses ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We first define the notion of complementary hypotheses. ", "page_idx": 6}, {"type": "text", "text": "Definition 4.1. We say two different hypotheses $f_{1}$ and $f_{2}$ over $\\mathcal{X}$ are complementary if $f_{1}(x)=$ $1-f_{2}(x)$ for all $x\\in\\mathscr{X}$ . Otherwise we say they are non-complementary. ", "page_idx": 6}, {"type": "text", "text": "It is worth noticing the following important fact about non-complementary hypotheses, where the first item directly comes from the above definition and the second is because $f_{1}$ and $f_{2}$ are different. ", "page_idx": 6}, {"type": "text", "text": "Fact 4.2. Let $f_{1}$ and $f_{2}$ be two different hypotheses over $\\mathcal{X}$ that are non-complementary. Then: ", "page_idx": 6}, {"type": "text", "text": "1. There exists some $u_{0}\\in\\mathcal X$ such that $f_{1}(u_{0})=f_{2}(u_{0}).$ ;   \n2. There exists some $u_{1}\\in\\mathcal{X}$ such that $f_{1}(u_{1})\\ne f_{2}(u_{1})$ . ", "page_idx": 6}, {"type": "text", "text": "We remark that this fact is also used by Dmitriev et al. [22] to prove a lower bound (in their work, they call it a \u201cdistinguishing tuple\u201d). However, they make a strong assumption that when running on a data stream containing $\\left(u_{0},f_{1}(u_{0})\\right)$ only, with high probability, the algorithm predicts $h_{t}(u_{1})=f_{1}(u_{1})$ simultaneously for all $t\\in[T]$ . This largely weakens their bound since most DP algorithms clearly do not have such property. ", "page_idx": 6}, {"type": "text", "text": "To see how to use Fact 4.2, consider a hypothesis class that contains a pair of non-complementary hypotheses. We will focus on $u_{0},u_{1}$ and $f_{1},f_{2}$ only and ignore all other elements and hypotheses. In our proof, we will use $\\left(u_{0},f_{1}(u_{0})\\right)=\\left(u_{0},f_{2}(u_{0})\\right)$ as a dummy input that provides no information about which hypothesis is correct. Let $S_{0}$ be a sequence that contains the dummy input only and $\\boldsymbol{\\mathcal{A}}$ be an online learning algorithm. Without loss of generality, we can assume that $\\operatorname*{Pr}[A(S_{0})\\dot{{\\boldsymbol t}}({\\boldsymbol u}_{1})=$ $f_{1}(u_{1})]\\geq1/2$ for all $t\\in[T]$ (we can make this hold for half of the rounds by swapping $f_{1}$ and $f_{2}$ , and ignore the rounds that it does not hold). We will insert $(u_{1},f_{2}(u_{1}))$ \u2019s to make algorithm error. ", "page_idx": 6}, {"type": "text", "text": "Our proof relies on the classical packing argument. For ease of presentation, we only consider pure DP here, but the proof strategy easily extends to approximate DP via group privacy under approximate DP. In the framework of packing argument, we will construct a series of input sequences $S_{1},\\ldots,S_{m}$ from $S_{0}$ and disjoint subsets of output $O_{1},\\ldots,O_{m}$ such that $S_{0}$ and $S_{i}$ differ by at most $k$ elements for every $i\\in[m]$ , and any algorithm will make $\\Omega(k)$ mistakes on $S_{i}$ . Then by group privacy, for any $\\varepsilon$ -differentially private algorithm $\\mathsf{A l g}$ we have ", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 7}, {"type": "equation", "text": "$$\n1\\geq\\sum_{i=1}^{m}\\operatorname*{Pr}[\\mathsf{A l g}(S_{0})\\in O_{i}]\\geq e^{-k\\varepsilon}\\sum_{i=1}^{m}\\operatorname*{Pr}[\\mathsf{A l g}(S_{i})\\in O_{i}].\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "Thus, a lower bound on $\\mathrm{Pr}[\\mathsf{A l g}(S_{i})\\in O_{i}]$ implies a lower bound on $k$ by the above inequality. ", "page_idx": 7}, {"type": "text", "text": "The first challenge here is the construction of $S_{i}$ . By our assumption, we can insert a $(u_{1},f_{2}(u_{1}))$ at any position of $S_{0}$ to cause a loss of $1/2$ . However, when inserting the second one, the loss may decrease by a multiplicative factor of $e^{\\varepsilon}$ . Following this argument, no matter how many $(u_{1},f_{2}(u_{1}))^{\\flat}$ s are inserted, we can only bound the expected number of mistakes by ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\frac{1}{2}\\left(1+e^{-\\varepsilon}+e^{-2\\varepsilon}+\\cdot\\cdot\\cdot\\right)=c o n s t a n t,\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "failing to give an $\\Omega(k)$ bound for $k=\\log T$ . ", "page_idx": 7}, {"type": "text", "text": "We overcome this by constructing them according to the given algorithm $\\boldsymbol{\\mathcal{A}}$ instead of arbitrary algorithms. We will assume $\\boldsymbol{\\mathcal{A}}$ has a mistake bound of ${\\cal O}(\\log T)$ and seek to derive a contradiction. We now depict our construction. For $S_{1}$ , we let $\\boldsymbol{S}\\ =\\ S_{0}$ be the initial data stream. We then go through every $t\\ \\in\\ [T]$ in an increasing order, insert a $(u_{1},f_{2}(u_{1}))$ at time-step $t$ whenever $\\operatorname*{Pr}[A(S)_{t}(u_{1})\\,=\\,f_{1}(u_{1})]\\stackrel{\\cdot}{\\geq}1/3$ , and let $S_{1}=S$ at the end. By our assumption, the number of $(u_{1},f_{2}(u_{1}))$ \u2019s should not exceed $k=3\\cdot O(\\log T)$ . Hence, $S_{1}$ and $S_{0}$ differ by at most $k=O(\\log T)$ points. Moreover, by our construction, for each $t\\in[T]$ such that $S_{1}[t]=(u_{0},f_{1}(u_{0}))$ , we must have $\\mathrm{Pr}[A(S_{1})_{t}(u_{1})=\\dot{f}_{1}(u_{1})]<1/3$ . ", "page_idx": 7}, {"type": "text", "text": "Now let us construct $S_{2}$ . We find the earliest round $t_{1}$ such that $\\mathrm{Pr}[A(S_{1})_{t_{1}}(u_{1})=f_{1}(u_{1})]<1/3$ . The property we mentioned above ensures the existence of such $t_{1}$ as long as $k<T$ . We then perform a similar procedure as in the construction of $S_{1}$ , but instead of starting from $t=1$ and going over the entire time span $[T]$ , we start from $t=t_{1}$ . The online nature of $\\boldsymbol{\\mathcal{A}}$ allows us to use $t_{1}$ to distinguish $S_{1}$ and $S_{2}$ (as well as $S_{3},\\ldots,S_{m}$ , which we will construct later) since ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[A(S_{1})_{t_{1}}(u_{1})=f_{1}(u_{1})]<1/3<1/2\\leq\\operatorname*{Pr}[A(S_{2})_{t_{1}}(u_{1})=f_{1}(u_{1})].\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "In other words, $\\boldsymbol{\\mathcal{A}}$ is more likely to predict $h_{t_{1}}(u_{1})=f_{1}(u_{1})$ on $S_{2}$ but is less likely to do so on $S_{1}$ . ", "page_idx": 7}, {"type": "text", "text": "We repeat the construction for $i=3,\\ldots,m$ . For each $i$ , we first identify the minimal $t_{i-1}$ such that $\\operatorname*{Pr}[A(S_{j})_{t_{i-1}}]<1/3$ for every $j<i$ . Then we insert $(u_{1},f_{2}(u_{1}))^{:}$ \u2019s starting from $t=t_{i-1}$ . By the same argument, $t_{i-1}$ can be used to distinguish $S_{1},\\ldots,S_{i-1}$ and $S_{i},\\ldots,S_{m}$ . We formally describe the construction procedure in Algorithm 2. ", "page_idx": 7}, {"type": "text", "text": "At the end, we will have $m$ sequences $S_{1},\\ldots,S_{m}$ and $m-1$ time-steps $t_{1},\\ldots,t_{m-1}$ such that $\\operatorname*{Pr}[A(S_{i})_{t_{j}}(u_{1})\\,=\\,f_{1}(u_{1})]\\,<\\,1/3$ for any $j\\geq i$ and $\\operatorname*{Pr}[A(S_{i})_{t_{j}}(u_{1})\\,=\\,f_{1}(u_{1})]\\,\\ge\\,1/2$ for any $j<i$ . It can be proved that $m=\\Omega(T/k)$ , which is sufficiently large for $k=O(\\log T)$ . Now we run $\\boldsymbol{\\mathcal{A}}$ on some $S=S_{i}$ . Suppose we can figure out the index $i$ , we can apply the packing argument to derive an $\\Omega(\\log m)=\\Omega(\\log T)$ lower bound. ", "page_idx": 7}, {"type": "text", "text": "Here comes the second challenge. Though we can use the output of $\\boldsymbol{\\mathcal{A}}$ to estimate $\\operatorname*{Pr}[A(S)_{t_{j}}(u_{1})=$ $f_{1}(u_{1})]$ for a given $j$ , we only have a constant success probability. To make the estimate accurate for every $\\bar{j}\\in[m-1]$ , one has to achieve a success probability of $1-1/m$ for each $j$ . This requires running $\\boldsymbol{\\mathcal{A}}$ for $O(\\log m)=O(\\log T)$ times and taking the average, which is prohibited since the resulting algorithm would be $O(\\varepsilon\\log T)$ -DP, yielding a meaningless $\\Omega(1)$ lower bound. ", "page_idx": 7}, {"type": "text", "text": "We address this issue by using binary search. We start with $\\{t_{1},\\dots,t_{m-1}\\}$ and select the middle point $t_{m i d}$ in each iteration. By averaging over multiple copies of ${\\mathcal{A}}(S)$ , we can figure out whether we should go left or go right. This can be done in ${\\bar{O}}(\\log{\\bar{m}})=O(\\log T)$ iterations, and we only require the decision made on each middle point to be correct. Thus, the number of independent copies can be reduced to $O(\\log\\log T)$ , which leads to a lower bound of $\\Omega(\\log T/\\log\\log T)$ . ", "page_idx": 7}, {"type": "text", "text": "The above approach is already sufficient to show an unbounded number of mistakes, but we can further refine our method to achieve an $\\Omega(\\log T)$ bound. The key observation here is that we do not need the probability of outputting $i$ on $S_{i}$ to be a constant. In fact, a success probability of $1/m^{1-\\Omega(1)}$ is enough to obtain $k\\geq\\Omega(\\log(m/m^{1-\\Omega(1)}))=\\Omega(\\log T)$ . ", "page_idx": 7}, {"type": "text", "text": "Input: the number of rounds $T$ ; online learning algorithm $\\boldsymbol{\\mathcal{A}}$ ; threshold $k$ ; $f_{1},f_{2}$ and $u_{0},u_{1}$   \nOutput: a single data stream $S_{i}$ , or a collection of $m$ data streams $S_{1},\\ldots,S_{m}$ along with   \n$m-1$ time-steps $t_{1},\\ldots,t_{m-1}$   \n1 $S_{0}\\gets\\{(u_{0},f_{1}(u_{0})),\\ldots,\\bar{(u_{0},f_{1}(u_{0}))}\\}$   \n2 $m\\gets\\lceil T/k\\rceil$   \n3 for $i=1,\\hdots,m$ do   \n4 $S_{i}\\leftarrow S_{0}$   \n5 Find the smallest $t_{i-1}$ such that $\\forall j\\in[i-1],\\operatorname*{Pr}[A(S_{j})_{t_{i-1}}(u_{1})=f_{1}(u_{1})]<1/3$   \n6 for $t=t_{i-1},\\ldots,T$ do   \n7 if $\\operatorname*{Pr}[A(S_{i})_{t}(u_{1})=f_{1}(u_{1})]\\ge1/3$ then   \n8 $\\begin{array}{r l}{|}&{{}S_{i}[t]\\gets(u_{1},f_{2}(u_{1}))}\\end{array}$   \n9 end   \n10 end   \n11 if $|\\{t\\in[T]:S_{i}[t]=(u_{1},f_{2}(u_{1}))\\}|>k$ then   \n12 return $S_{i}$   \n13 end   \n14 end   \n15 return $S_{1},\\ldots,S_{m}$ and $t_{1},\\ldots,t_{m-1}$ ", "page_idx": 8}, {"type": "text", "text": "We thus \u201csmooth\u201d our binary search. In each iteration, instead of going left or right deterministically, we go to the side that is more likely to be correct with some probability $p>1/2$ . We show that, by choosing $p$ appropriately, this approach will output $i$ on $S_{i}$ with probability $1/m^{1-\\Omega(1)}$ . Moreover, it only requires running the online learning algorithm $O(1)$ times, avoiding the $\\log\\log T$ blow-up of privacy parameters. The $\\Omega(\\log T)$ lower bound then follows by applying the packing argument. We illustrate this approach in Algorithm 3. ", "page_idx": 8}, {"type": "text", "text": "Theorem 4.3. Let $c\\in(0,1)$ be some constant. Suppose $\\varepsilon\\,\\geq\\,\\ln T/T^{1-c}$ and $\\delta\\leq\\varepsilon/T$ . If $\\mathcal{H}$ is a hypothesis class that contains two non-complementary hypotheses, then any $(\\varepsilon,\\delta)$ -differentially private online learning algorithm for $\\mathcal{H}$ must incur a mistake bound of $\\Omega(\\log T/\\varepsilon)$ even in the oblivious adversarial setting. ", "page_idx": 8}, {"type": "text", "text": "One may ask whether the existence of a non-complementary pair is a necessary condition for the number of mistakes to be unbounded. Note that there are only two cases that $\\mathcal{H}$ contains no noncomplementary pairs: either $|\\mathcal{H}|=1$ or $\\mathcal{H}=\\{f_{1},f_{2}\\}$ such that $f_{1}=1-f_{2}$ . The former is definitely online learnable with zero mistakes. For the latter one, we give an algorithm with a finite expected mistake bound in Appendix F, showing that the condition is indeed necessary and sufficient. ", "page_idx": 8}, {"type": "text", "text": "Algorithm 3: Distinguishing $S_{1},\\ldots,S_{m}$ ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Input: the number of rounds $T$ ; online learning algorithm $\\boldsymbol{\\mathcal{A}}$ ; time-steps $t_{1},\\ldots,t_{m-1}$ ; input data stream $S\\in\\{S_{1},\\ldots,S_{m}\\};f_{1},f_{2}$ and $u_{0},u_{1}$ used in Algorithm 2 Output: an index $i\\in[m]$ 1 Run $\\boldsymbol{\\mathcal{A}}$ on $S$ for 360 times, obtain 360 copies of output $\\{h_{1}^{(w)},\\ldots,h_{T}^{(w)}\\}$ for $w\\in[360]$ 2 $l\\gets1$ , $r\\leftarrow m$ 3 while $l<r$ do 4 $\\textstyle m i d\\leftarrow\\lfloor{\\frac{l+r}{2}}\\rfloor$ 5 if $|\\{h_{t_{m i d}}^{(w)}(u_{1})=f_{1}(u_{1}):w\\in[360]\\}|<150$ then 6 Let $r\\leftarrow m i d$ with probability $3/4$ , and $l\\leftarrow m i d+1$ otherwise 7 else 8 Let $l\\leftarrow m i d+1$ with probability $3/4$ , and $r\\leftarrow m i d$ otherwise 9 end 10 end 11 return l ", "page_idx": 8}, {"type": "text", "text": "4.2 Incorporating the Littlestone Dimension ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Building upon the $\\Omega(\\log T)$ lower bound, we are now ready to show an $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ lower bound for general hypothesis classes. Let $\\boldsymbol{\\mathcal{A}}$ be a private online learning algorithm for $\\mathcal{H}$ . Consider a shattered tree of depth $\\mathrm{LD}({\\mathcal{H}})\\geq2$ . Let $u_{0}$ denote its root and $u_{1}$ be its left child. By the definition of shattered tree, there exists $f_{1},f_{2}\\in\\mathcal{H}$ such that $f_{1}(u_{0})=f_{2}(u_{0})=0$ and $0=f_{1}(\\dot{u}_{1})\\neq f_{2}(u_{1})=1$ . Note that $f_{1},f_{2}$ and $u_{0},u_{1}$ satisfy the property mentioned in Fact 4.2. We can thus apply Theorem 4.3 to find a sequence $S_{1}$ of length $T^{\\prime}$ on which $\\boldsymbol{\\mathcal{A}}$ makes $\\Omega(\\log T^{\\prime})$ mistakes. ", "page_idx": 9}, {"type": "text", "text": "Till now, only the true labels of $u_{0}$ and $u_{1}$ are revealed to the learner. Therefore, we can go into the corresponding subtree of $u_{1}$ and reiterate the above operation. After repeating it $\\mathrm{LD}(\\mathcal{H})/\\bar{2}$ times, we obtain a series of completely non-overlapping sequences $S_{1},\\ldots,S_{\\mathrm{LD(\\mathcal{H})/2}}$ and on any one of them $\\boldsymbol{\\mathcal{A}}$ makes $\\Omega(\\log T^{\\prime})$ mistakes. By concatenating them together and setting $T^{\\prime}=T/\\mathrm{LD}(\\mathcal{H})$ , we arrive at the $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ lower bound assuming $\\bar{T}>\\mathrm{LD}(\\bar{\\mathcal{H}})^{1+c}$ . ", "page_idx": 9}, {"type": "text", "text": "Theorem 4.4. Let $c_{1}\\,\\in\\,(0,1)$ and $c_{2}>0$ be two constants. Suppose $\\varepsilon\\ge\\ln T/T^{(1-c_{1})c_{2}/(1+c_{2})}$ and $\\delta\\leq\\varepsilon/T$ . If $\\mathcal{H}$ is a hypothesis class that contains two non-complementary hypotheses, then any $(\\varepsilon,\\delta)$ -differentially private online learning algorithm for $\\mathcal{H}$ must incur a mistake bound of $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T/\\varepsilon)$ even in the oblivious adversarial setting given that $T>\\mathrm{LD}(\\mathcal{H})^{1+c_{2}}$ . ", "page_idx": 9}, {"type": "text", "text": "Note that the class of all hypotheses over $[d]$ has a Littlestone dimension of $\\lfloor\\log_{2}d\\rfloor$ . The above theorem directly implies the following lower bound for the OPE problem. This improves the lower bound in [7] by a $\\log T$ factor. ", "page_idx": 9}, {"type": "text", "text": "Corollary 4.5. Let $c_{1}\\,\\in\\,(0,1)$ and $c_{2}>0$ be two constants. Suppose $\\varepsilon\\ge\\ln T/T^{(1-c_{1})c_{2}/(1+c_{2})}$ and $\\delta\\leq\\varepsilon/T$ . In the realizable setting, any $(\\varepsilon,\\delta)$ -differentially private algorithm for OPE has $a$ regret of $\\Omega(\\log d\\log T/\\varepsilon)$ even against oblivious adversaries given that $T\\bar{>}\\,\\lfloor\\log_{2}\\dot{d}\\rfloor^{1+c_{2}}$ . ", "page_idx": 9}, {"type": "text", "text": "4.3 Comparing to the Upper Bounds ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We have shown an $\\Omega_{\\mathcal{H}}(\\log T)$ lower bound on the number of mistakes made by any private online learning algorithm. We now compare it to existing upper bounds. ", "page_idx": 9}, {"type": "text", "text": "For pure DP, we provide an upper bound of $O_{\\mathcal{H}}(\\log^{2}T\\cdot(\\log\\log T)^{2})$ . This is larger than our lower bound by a factor of $\\log T\\cdot(\\stackrel{}{\\log}\\log T)^{2}$ . In Appendix F, we show that $O_{\\mathcal{H}}(\\log{T})$ is achievable for some specific hypothesis classes. Whether $O_{\\mathcal{H}}(\\log{T})$ is attainable for generic hypothesis classes remains open. ", "page_idx": 9}, {"type": "text", "text": "For approximate DP, Golowich and Livni [30] proposed an algorithm with $O_{\\mathcal{H}}(\\log{T})$ mistakes against oblivious adversaries. Thus, our lower bou\u221and is tight assuming a constant Littlestone dimension. However, their algorithm exhibits an $O_{\\mathcal{H}}(\\sqrt{T})$ upper bound against upper bound against adaptive adversaries. Whether this can also be improved to $O_{\\mathcal{H}}(\\log{T})$ is an interesting open question. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The research was supported in part by an RGC RIF grant under the contract R6021-20, an RGC TRS grant under the contract T43-513/23N-2, RGC CRF grants under the contracts C7513, C7004- 22G, C1029-22G and C6015-23G, and RGC GRF grants under the contracts 16200221, 16207922 and 16207423. The authors would like to thank the anonymous reviewers for their feedback and suggestions. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Martin Abadi, Andy Chu, Ian Goodfellow, H Brendan McMahan, Ilya Mironov, Kunal Talwar, and Li Zhang. Deep learning with differential privacy. In Proceedings of the 23rd ACM Conference on Computer and Communications Security, pages 308\u2013318, 2016. ", "page_idx": 9}, {"type": "text", "text": "[2] John M Abowd. The U.S. Census Bureau adopts differential privacy. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, page 2867, 2018. ", "page_idx": 9}, {"type": "text", "text": "[3] Naman Agarwal and Karan Singh. The price of differential privacy for online learning. In Proceedings of the 34th International Conference on Machine Learning, volume 70, pages 32\u201340, 2017.   \n[4] Noga Alon, Roi Livni, Maryanthe Malliaris, and Shay Moran. Private PAC learning implies finite littlestone dimension. In Proceedings of the 51st Annual ACM Symposium on Theory of Computing, pages 852\u2013860, 2019. [5] Noga Alon, Mark Bun, Roi Livni, Maryanthe Malliaris, and Shay Moran. Private and online learnability are equivalent. Journal of the ACM, 69(4):1\u201334, 2022.   \n[6] Apple Differential Privacy Team. Learning with privacy at scale. Apple Machine Learning Journal, 2017.   \n[7] Hilal Asi, Vitaly Feldman, Tomer Koren, and Kunal Talwar. Near-optimal algorithms for private online optimization in the realizable regime. In Proceedings of the 40th International Conference on Machine Learning, volume 202, pages 1107\u20131120, 2023. [8] Hilal Asi, Vitaly Feldman, Tomer Koren, and Kunal Talwar. Private online prediction from experts: Separations and faster rates. In Proceedings of the 36th Annual Conference on Learning Theory, volume 195, pages 674\u2013699, 2023. [9] Amos Beimel, Hai Brenner, Shiva Prasad Kasiviswanathan, and Kobbi Nissim. Bounds on the sample complexity for private learning and private data release. Machine learning, 94(3): 401\u2013437, 2014.   \n[10] Amos Beimel, Kobbi Nissim, and Uri Stemmer. Characterizing the sample complexity of pure private learners. Journal of Machine Learning Research, 20:1\u201333, 2019.   \n[11] Anselm Blumer, Andrzej Ehrenfeucht, David Haussler, and Manfred K Warmuth. Learnability and the Vapnik-Chervonenkis dimension. Journal of the ACM, 36(4):929\u2013965, 1989.   \n[12] Nader H Bshouty, Nadav Eiron, and Eyal Kushilevitz. Pac learning with nasty noise. Theoretical Computer Science, 288(2):255\u2013275, 2002.   \n[13] Mark Bun, Kobbi Nissim, Uri Stemmer, and Salil Vadhan. Differentially private release and learning of threshold functions. In Proceedings of the 56th Annual IEEE Symposium on Foundations of Computer Science, pages 634\u2013649, 2015.   \n[14] Mark Bun, Cynthia Dwork, Guy N Rothblum, and Thomas Steinke. Composable and versatile privacy via truncated cdp. In Proceedings of the 50th Annual ACM Symposium on Theory of Computing, pages 74\u201386, 2018.   \n[15] Mark Bun, Roi Livni, and Shay Moran. An equivalence between private classification and online prediction. In Proceedings of the 61st Annual IEEE Symposium on Foundations of Computer Science, pages 389\u2013402, 2020.   \n[16] Nicolo Cesa-Bianchi and G\u00e1bor Lugosi. Prediction, learning, and games. Cambridge University Press, 2006.   \n[17] Nicolo Cesa-Bianchi, Alex Conconi, and Claudio Gentile. On the generalization ability of online learning algorithms. IEEE Transactions on Information Theory, 50(9):2050\u20132057, 2004.   \n[18] T-H Hubert Chan, Elaine Shi, and Dawn Song. Private and continual release of statistics. ACM Transactions on Information and System Security, 14(3):1\u201324, 2011.   \n[19] Kamalika Chaudhuri and Daniel Hsu. Sample complexity bounds for differentially private learning. In Proceedings of the 24th Annual Conference on Learning Theory, volume 19, pages 155\u2013186, 2011.   \n[20] Edith Cohen, Xin Lyu, Jelani Nelson, Tam\u00e1s Sarl\u00f3s, and Uri Stemmer. \u00d5ptimal differentially private learning of thresholds and quasi-concave optimization. In Proceedings of the 55th Annual ACM Symposium on Theory of Computing, pages 472\u2013482, 2023.   \n[21] Edith Cohen, Xin Lyu, Jelani Nelson, Tam\u00e1s Sarl\u00f3s, and Uri Stemmer. Lower bounds for differential privacy under continual observation and online threshold queries. In Proceedings of the 37th Annual Conference on Learning Theory, volume 247, pages 1200\u20131222, 2024.   \n[22] Daniil Dmitriev, Krist\u00f3f Szab\u00f3, and Amartya Sanyal. On the growth of mistakes in differentially private online learning: A lower bound perspective. In Proceedings of the 37th Annual Conference on Learning Theory, volume 247, pages 1379\u20131398, 2024.   \n[23] Cynthia Dwork, Krishnaram Kenthapadi, Frank McSherry, Ilya Mironov, and Moni Naor. Our data, ourselves: Privacy via distributed noise generation. In Proceedings of the 25th Annual International Conference on the Theory and Applications of Cryptographic Techniques, pages 486\u2013503, 2006.   \n[24] Cynthia Dwork, Frank McSherry, Kobbi Nissim, and Adam Smith. Calibrating noise to sensitivity in private data analysis. In Proceedings of the 3rd Conference on Theory of Cryptography, pages 265\u2013284, 2006.   \n[25] Cynthia Dwork, Moni Naor, Omer Reingold, Guy N Rothblum, and Salil Vadhan. On the complexity of differentially private data release: efficient algorithms and hardness results. In Proceedings of the 41st Annual ACM Symposium on Theory of Computing, pages 381\u2013390, 2009.   \n[26] Cynthia Dwork, Moni Naor, Toniann Pitassi, and Guy N Rothblum. Differential privacy under continual observation. In Proceedings of the 42nd Annual ACM Symposium on Theory of Computing, pages 715\u2013724, 2010.   \n[27] Cynthia Dwork, Aaron Roth, et al. The algorithmic foundations of differential privacy. Foundations and Trends\u00ae in Theoretical Computer Science, 9(3\u20134):211\u2013407, 2014.   \n[28] Vitaly Feldman and David Xiao. Sample complexity bounds on differentially private learning via communication complexity. In Proceedings of the 27th Annual Conference on Learning Theory, volume 35, pages 1000\u20131019, 2014.   \n[29] Badih Ghazi, Noah Golowich, Ravi Kumar, and Pasin Manurangsi. Sample-efficient proper PAC learning with approximate differential privacy. In Proceedings of the 53rd Annual ACM Symposium on Theory of Computing, pages 183\u2013196, 2021.   \n[30] Noah Golowich and Roi Livni. Littlestone classes are privately online learnable. In Advances in Neural Information Processing Systems, volume 34, pages 11462\u201311473, 2021.   \n[31] Steve Hanneke, Amin Karbasi, Mohammad Mahmoody, Idan Mehalel, and Shay Moran. On optimal learning under targeted data poisoning. In Advances in Neural Information Processing Systems, volume 35, pages 30770\u201330782, 2022.   \n[32] Moritz Hardt and Kunal Talwar. On the geometry of differential privacy. In Proceedings of the 42nd Annual ACM Symposium on Theory of Computing, pages 705\u2013714, 2010.   \n[33] Wassily Hoeffding. Probability inequalities for sums of bounded random variables. Journal of the American Statistical Association, 58(301):13\u201330, 1963.   \n[34] Palak Jain, Sofya Raskhodnikova, Satchit Sivakumar, and Adam Smith. The price of differential privacy under continual observation. In Proceedings of the 40th International Conference on Machine Learning, volume 202, pages 14654\u201314678, 2023.   \n[35] Prateek Jain and Abhradeep Guha Thakurta. (Near) dimension independent risk bounds for differentially private learning. In Proceedings of the 31st International Conference on Machine Learning, volume 32, pages 476\u2013484, 2014.   \n[36] Prateek Jain, Pravesh Kothari, and Abhradeep Thakurta. Differentially private online learning. In Proceedings of the 25th Annual Conference on Learning Theory, volume 23, pages 24.1\u201324.34, 2012.   \n[37] Haim Kaplan, Katrina Ligett, Yishay Mansour, Moni Naor, and Uri Stemmer. Privately learning thresholds: Closing the exponential gap. In Proceedings of the 33rd Annual Conference on Learning Theory, volume 125, pages 2263\u20132285, 2020.   \n[38] Shiva Prasad Kasiviswanathan, Homin K Lee, Kobbi Nissim, Sofya Raskhodnikova, and Adam Smith. What can we learn privately? SIAM Journal on Computing, 40(3):793\u2013826, 2011.   \n[39] Nick Littlestone. Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm. Machine learning, 2:285\u2013318, 1988.   \n[40] Frank McSherry and Kunal Talwar. Mechanism design via differential privacy. In Proceedings of the 48th Annual IEEE Symposium on Foundations of Computer Science, pages 94\u2013103. IEEE Computer Society, 2007.   \n[41] Amartya Sanyal and Giorgia Ramponi. Open problem: Do you pay for privacy in online learning? In Proceedings of the 35th Annual Conference on Learning Theory, volume 178, pages 5633\u20135637, 2022.   \n[42] Adam Smith and Abhradeep Thakurta. (Nearly) optimal algorithms for private online learning in full-information and bandit settings. In Advances in Neural Information Processing Systems, volume 26, pages 2733\u20132741, 2013.   \n[43] Leslie G Valiant. A theory of the learnable. Communications of the ACM, 27(11):1134\u20131142, 1984.   \n[44] V. N. Vapnik and A. Ya. Chervonenkis. On the uniform convergence of relative frequencies of events to their probabilities. Theory of Probability and Its Applications, 16(2):264\u2013280, 1971. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Discussion ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this work, we investigate online learning with differential privacy and provide separation results that distinguish non-private, pure private, and approximate private constraints. Below, we discuss some limitations and future work. ", "page_idx": 13}, {"type": "text", "text": "Tighter dependence on $T$ under pure DP. Our algorithm for pure private online learning with oblivious adversaries exhibits a $\\stackrel{\\bar{\\mathrm{log}}^{2}}{\\log}^{2}T\\cdot(\\log\\log T)^{2}$ dependence on $T$ (Theorem D.1). We also provide algorithms for $\\mathtt{P O I N T}_{N}$ (Theorem F.1) and Thresho $\\mathsf{1d}_{d}$ (Theorem F.3) that have a $O_{\\mathcal{H}}(\\log{T})$ mistake bound. It is interesting to find out if a $\\log T$ dependence is achievable for generic hypothesis classes. ", "page_idx": 13}, {"type": "text", "text": "Broader range of privacy parameters. Our $\\Omega(\\log T)$ lower bound requires $\\delta\\,<\\,1/T$ (Theorem 4.3) for constant $\\varepsilon$ , while the result in [21] only needs $\\delta\\,<\\,1/\\log T$ . Although it is a commonly accepted criterion to select $\\delta=o(1/T)$ , we still wonder whether our bound also holds for $\\delta<1/\\log T$ . Moreover, our results do not cover the cases where $\\varepsilon$ or $T$ are extremely small. Is it possible to cover the entire range? ", "page_idx": 13}, {"type": "text", "text": "Mistake bound against stochastic adversaries. One benefit of online learning is that it does not require the data to be i.i.d. generated. But in some scenarios, we may still have i.i.d. data but have to make online predictions. Clearly, such stochastic adversaries are weaker than oblivious ones. Our construction in Algorithm 2 does not apply to stochastic adversaries. Can we overcome the $\\Omega(\\log T)$ barrier assuming stochastic adversaries? ", "page_idx": 13}, {"type": "text", "text": "Lower bound on learning with constant success probability. In Section 4.1, we show that the expected number of mistakes incurred by any algorithm is $\\Omega(\\log T)$ . It is unclear whether the $\\Omega(\\log T)$ cost remains inevitable or a mistake bound of $o(\\log T)$ can be achieved if we only require the learner to succeed with a constant probability (e.g., 0.99). ", "page_idx": 13}, {"type": "text", "text": "B Broader Impacts ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Privacy has become a fundamental concern in today\u2019s machine learning community. In this work, we show several lower bounds and upper bounds on private online learning tasks. While our contributions are theoretical in nature, and we do not see any direct societal implications, we hope that our results will reveal the intrinsic structures of the problems and provide insights for the development of practical online learning algorithms with better privacy-utility trade-offs. ", "page_idx": 13}, {"type": "text", "text": "C Additional Preliminaries ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Theorem C.1 (Hoeffding\u2019s Inequality [33]). Let $Z_{1},\\ldots,Z_{n}$ be independent bounded random variables with $Z_{i}\\in[a,b]$ . Then ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}\\left[{\\frac{1}{n}}\\sum_{i=1}^{n}\\left(Z_{i}-\\mathbb{E}[Z_{i}]\\right)\\geq t\\right]\\leq\\exp\\left(-{\\frac{2n t^{2}}{(b-a)^{2}}}\\right)\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "for all $t\\geq0$ . ", "page_idx": 13}, {"type": "text", "text": "The Laplace mechanism ensures privacy by adding Laplace noise. ", "page_idx": 13}, {"type": "text", "text": "Definition C.2 (Sensitivity). Let $f:\\mathcal{Z}^{n}\\to\\mathbb{R}$ be a function. The sensitivity of $f$ is defined by ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\Delta_{f}=\\operatorname*{max}_{S_{1}{\\mathrm{~and~}}S_{2}{\\mathrm{~differ~in~one~entry}}}|f(S_{1})-f(S_{2})|.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Definition C.3 (Laplace Distribution). The Laplace distribution with parameter $b$ and mean 0, denoted by $\\operatorname{Lap}(b)$ , is defined by the following probability density function: ", "page_idx": 13}, {"type": "equation", "text": "$$\nf(x)={\\frac{1}{2b}}\\exp(-|x|/b).\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Lemma C.4 (The Laplace Mechanism [24]). Let $r\\sim\\mathrm{Lap}(\\Delta_{f}/\\varepsilon)$ be a Laplace random variable. The algorithm that outputs $f(S)+r$ satisfies $\\varepsilon$ -differential privacy. Moreover, with probability $1-\\beta$ it holds that $|r|\\leq\\ln(1/\\beta)\\Delta_{f}/\\varepsilon$ . ", "page_idx": 14}, {"type": "text", "text": "We also need the following AboveThreshold algorithm (aka the sparse vector technique) [25]. ", "page_idx": 14}, {"type": "image", "img_path": "Cqr6E81iB7/tmp/d9a98a1390cd18d80f05260f4c3fd8f464f3e5c6e33e30b7d8956d228752b7e8.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Lemma C.5. Algorithm 4 is $\\varepsilon$ -differently private. ", "page_idx": 14}, {"type": "text", "text": "If we only want to identify a query with a large value instead of the values of all queries, the reportnoisy-max mechanism gives a much better utility guarantee. It can be implemented by adding Laplace noise or directly applying the exponential mechanism [40]. ", "page_idx": 14}, {"type": "text", "text": "Theorem C.6 (Report-Noisy-Max). Let $S$ be a database and $q_{1},\\ldots,q_{d}$ be $d$ sensitivity-1 queries. There exists an $\\varepsilon$ -differentially private algorithm that outputs an index $i$ such that ", "page_idx": 14}, {"type": "equation", "text": "$$\nq_{i}(S)\\geq\\operatorname*{max}_{j\\in[d]}q_{j}(S)-\\frac{2(\\ln(d)+\\ln(1/\\beta))}{\\varepsilon}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "with probability at least $1-\\beta$ . ", "page_idx": 14}, {"type": "text", "text": "The composition property allows us to combine multiple differentially private algorithms into one, even if they are executed adaptively. ", "page_idx": 14}, {"type": "text", "text": "Lemma C.7 (Basic Composition [23, 27]). Let $A_{1}\\,:\\,\\mathcal{Z}^{n}\\,\\rightarrow\\,\\mathcal{R}_{1}$ be an algorithm that satisfies $(\\varepsilon_{1},\\delta_{1}){-}D P,$ and for $2\\leq i\\leq k$ let $A_{i}:\\mathcal{R}_{1}\\times\\cdots\\times\\mathcal{R}_{i-1}\\times\\mathcal{Z}^{n}\\to\\mathcal{R}_{i}$ be an algorithm that satisfies $(\\varepsilon_{i},\\delta_{i})$ -DP for any given $\\left(r_{1},\\ldots,r_{i-1}\\right)\\in\\mathcal{R}_{1}\\times\\cdots\\mathcal{R}_{i-1}$ . Let $\\boldsymbol{\\mathcal{A}}$ be an algorithm that   \n1. Computes $r_{1}\\leftarrow A_{1}(S)$ ;   \n2. For each $i=2,\\ldots,k,$ , computes $r_{i}\\leftarrow\\mathcal{A}_{i}(r_{1},\\ldots,r_{i-1},S)$ ;   \n3. Outputs r1, . . . , rk. Then $\\boldsymbol{\\mathcal{A}}$ is $\\begin{array}{r}{(\\sum_{i=1}^{k}\\varepsilon_{i},\\sum_{i=1}^{k}\\delta_{i}){-}D P.}\\end{array}$ ", "page_idx": 14}, {"type": "text", "text": "D Proofs from Section 3 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "D.1 Proof of Theorem 3.3 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We use the following DP-OPE algorithm from [7]. ", "page_idx": 14}, {"type": "text", "text": "Theorem D.1. For any $0<\\beta<1/2$ , there exists an $\\varepsilon$ -differentially private algorithm such that with probability $1-\\beta$ it has regret ", "page_idx": 14}, {"type": "equation", "text": "$$\nO\\left({\\frac{\\log^{2}d+\\log(T/\\beta)\\log(d/\\beta)}{\\varepsilon}}\\right)\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "against oblivious adversaries in the realizable setting. ", "page_idx": 14}, {"type": "text", "text": "Proof of Theorem 3.3. Let $\\alpha\\,=\\,\\beta\\,=\\,1/2T$ . By Lemma 3.2, there exists an $(\\alpha,\\beta)$ -probabilistic representation of $\\mathcal{H}$ with ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathrm{size}(\\mathcal P)=O(\\log(T)\\cdot(\\mathtt{R e p D i m}(\\mathcal H)+\\log\\log T)).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Let $S=\\{(x_{1},y_{1}),\\dots,(x_{T},y_{T})\\}$ be the sequence chosen by the adversary and $\\mathcal{D}_{S}$ be the empirical distribution of $S$ , namely, $\\operatorname*{Pr}_{(x,y)\\sim\\mathcal{D}_{S}}[(x,y)=(x_{t},y_{t})]=1/T$ for all $t\\in[T]$ . Then we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{V\\sim\\mathcal{P}}{\\operatorname*{Pr}}[\\exists v\\in V\\,s.t.\\;y_{t}=v(x_{t})\\,\\forall t\\in[T]]=\\underset{V\\sim\\mathcal{P}}{\\operatorname*{Pr}}[\\exists v\\in V\\;s.t.\\;\\mathrm{error}_{\\mathcal{D}_{S}}\\leq1/\\alpha=1/2T]}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\geq1-\\beta}\\\\ &{\\qquad\\qquad\\qquad\\qquad=1-1/2T.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Conditioning on this event, we then run the algorithm in Theorem D.1 with $V$ being the set of experts and $\\ell_{t}(v)=1[v(x_{t})\\neq y_{t}]$ . With probability $1-1/2T$ , the number of mistakes is at most ", "page_idx": 15}, {"type": "equation", "text": "$$\nO\\left(\\frac{\\log^{2}\\lvert V\\rvert+\\log T\\log\\lvert V\\rvert+\\log^{2}T}{\\varepsilon}\\right)=O\\left(\\frac{\\log^{2}T(\\mathtt{R e p D i m}(\\mathcal{H})+\\log\\log T)^{2}}{\\varepsilon}\\right).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "By the union bound, the expected number of mistakes is bounded by ", "page_idx": 15}, {"type": "equation", "text": "$$\n1/T\\cdot T+(1-1/T)\\cdot O\\left(\\frac{\\log^{2}T(\\mathtt{R e p D i m}(\\mathcal{H})+\\log\\log T)^{2}}{\\varepsilon}\\right).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "D.2 Proof of Theorem 3.4 ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The proof follows the same steps as the proof of Theorem 3.3. The only difference is that we use the following DP-OPE algorithm from [8] in the agnostic setting. ", "page_idx": 15}, {"type": "text", "text": "Theorem D.2. There exists an $\\varepsilon$ -differentially private algorithm that has an expected regret of ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathbb{E}\\left[\\sum_{t=1}^{T}\\ell_{t}(i_{t})-\\operatorname*{min}_{i\\in[d]}\\sum_{t=1}^{T}\\ell_{t}(i)\\right]=O\\left(\\frac{\\sqrt{T}\\log d}{\\varepsilon}\\right)\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "against oblivious adversaries in the agnostic setting. ", "page_idx": 15}, {"type": "text", "text": "Proof of Theorem 3.4. We can use the same argument as in the proof of Theorem 3.3 to sample a hypothesis class $V$ from $\\mathcal{P}$ such that $\\ln\\lvert V\\rvert=O(\\log(T)\\cdot(\\mathrm{RepDim}(\\mathcal{H})+\\log\\log T))$ and ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}_{V\\sim\\mathcal{P}}[\\exists v\\in V\\;s.t.\\;v(x_{t})=h^{\\star}(x_{t})]\\geq1-1/2T,\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $h^{\\star}=\\operatorname*{argmin}_{h\\in\\mathcal{H}}\\mathrm{error}_{\\mathcal{D}_{S}}(h)$ is a minimizer of the error on $S$ . Running the algorithm in Theorem D.2 gives an expected regret of at most ", "page_idx": 15}, {"type": "equation", "text": "$$\n(1-1/2T)\\cdot O\\left(\\frac{\\sqrt{T}\\log|V|}{\\varepsilon}\\right)+T\\cdot1/2T=O\\left(\\frac{\\sqrt{T}\\log T(\\mathop{\\mathrm{RepDim}}(\\mathcal{H})+\\log\\log T)}{\\varepsilon}\\right).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "D.3 Proof of Theorem 3.5 ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We start with the following claim, which states that Algorithm 1 is an adversary that preserves privacy. Claim D.3. Suppose $\\boldsymbol{\\mathcal{A}}$ satisfies $\\varepsilon$ -adaptive differential privacy. Let $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}^{\\beta}$ be the algorithm that runs Algorithm $^{\\,l}$ with $\\boldsymbol{\\mathcal{A}}$ . Then $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ is $\\varepsilon$ -differentially private. ", "page_idx": 15}, {"type": "text", "text": "Proof. Let $S_{1}$ and $S_{2}$ be two input sequences that differ in only one entry. Consider an adversary Adv that runs Algorithm 1 on $S_{1}$ and $S_{2}$ simultanously using the same randomness, and interacts with $\\boldsymbol{\\mathcal{A}}$ using $S_{b}$ for some $b\\in\\{1,2\\}$ . Let $S_{1}^{\\prime}$ and $S_{2}^{\\prime}$ be the resulting sequences. Note that when $S_{1}[t]=S_{2}[t]$ , with the same randomness we have $S_{1}^{\\prime}[t]\\stackrel{-}{=}S_{2}^{\\prime}[t]$ since the weights depend on $h_{1},\\ldots,h_{t-1}$ only. Thus, $S_{1}^{\\prime}$ and $S_{2}^{\\prime}$ also differ in only one entry. By the definition of adaptive differential privacy, it holds that for any event $O$ , ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[A\\circ\\mathsf{A d v}(1)\\in O]\\leq e^{\\varepsilon}\\operatorname*{Pr}[A\\circ\\mathsf{A d v}(2)\\in O].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The conclusion follows by observing that the output distributions of ${\\mathcal{A}}\\circ{\\mathsf{A d v}}(b)$ and $B(S_{b})$ are identical. \u53e3 ", "page_idx": 15}, {"type": "text", "text": "Proof of Theorem 3.5. Let $\\varepsilon\\ \\leq\\ 0.01$ . We first consider $T\\,\\in\\,[0.1\\ln d/\\varepsilon,0.2\\ln d/\\varepsilon]$ and prove a lower bound of $\\Omega(T)\\;=\\;\\Omega(\\log d/\\varepsilon)$ . To this end, we will assume that there exists an online learning algorithm $\\boldsymbol{\\mathcal{A}}$ with an expected mistake bound of $0.01T$ that is $\\varepsilon$ -adaptive DP and derive a contradiction. ", "page_idx": 16}, {"type": "text", "text": "Let $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}^{\\beta}$ be the algorithm that runs Algorithm 1 with $\\boldsymbol{\\mathcal{A}}$ . By Claim D.3, we know that $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ is $\\varepsilon$ -differentially private. Now suppose we are running $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ on ${\\cal S}_{i}=\\{(i,1),\\dots,(i,1)\\}$ for some $i\\in[d]$ . Let $c_{t}(j)=$ $\\begin{array}{r}{\\sum_{r=1}^{t}h_{r}(j),w_{t}(j)=e^{c_{t}(j)},\\Phi_{t}=\\sum_{j\\in[d]\\backslash\\{i\\}}w_{t}(j)}\\end{array}$ , and $p_{t}(j)=w_{t}(j)/\\Phi_{t}$ . The expected number of mistakes made by $\\boldsymbol{\\mathcal{A}}$ can be expressed as ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\sum_{t=1}^{T}\\mathbb{E}\\left[\\frac{1}{2}\\cdot\\mathbb{I}[h_{t}(i)=0]+\\frac{1}{2}\\sum_{j\\in[d]\\backslash\\{i\\}}p_{t-1}(j)\\cdot h_{t}(j)\\right]\\leq0.01T.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Now consider the potential $\\Phi_{t}$ . At the beginning, we have $\\Phi_{0}=d-1$ . We can upper bound $\\Phi_{t}$ by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\Phi_{t}=}&{\\displaystyle\\sum_{j\\in[i](1)(i)}w_{t}(j)}\\\\ {=}&{\\displaystyle\\sum_{j\\in[i](j)(i)}w_{t-1}(j)e^{h_{i}(j)}}\\\\ {=}&{\\displaystyle\\Phi_{t-1}\\sum_{j\\in[i](j)(i)}p_{t-1}(j)e^{h_{i}(j)}}\\\\ {\\le}&{\\displaystyle\\Phi_{t-1}\\sum_{j\\in[i](i)}\\ p_{t-1}(j)(1+2h_{t}(j))}\\\\ {=}&{\\displaystyle\\Phi_{t-1}\\left(1+2\\sum_{j\\in[i](i)}p_{t-1}(j)h_{t}(j)\\right)}\\\\ &{\\le\\displaystyle\\Phi_{t-1}\\exp\\left(\\sum_{j\\in[i](i)}p_{t-1}(j)h_{t}(j)\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where we use $e^{x}\\leq1+2x$ for $0\\leq x\\leq1$ in the forth line and $1+x\\leq e^{x}$ for $x\\in\\mathbb R$ in the last line. Then it follows by induction that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\Phi_{T}\\leq\\Phi_{0}\\exp\\left(2\\sum_{t=1}^{T}\\sum_{j\\in[d]\\setminus\\{i\\}}p_{t-1}(j)h_{t}(j)\\right).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Taking the logarithm on both sides, the linearity of expectation gives ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[\\ln\\Phi_{T}]\\leq\\mathbb{E}\\left[\\ln\\Phi_{0}+2\\displaystyle\\sum_{t=1}^{T}\\sum_{\\substack{j\\in[d]\\backslash\\{i\\}}}p_{t-1}(j)h_{t}(j)\\right]}\\\\ &{\\qquad\\qquad=\\ln(d-1)+2\\displaystyle\\sum_{t=1}^{T}\\sum_{\\substack{j\\in[d]\\backslash\\{i\\}}}\\mathbb{E}[p_{t-1}(j)h_{t}(j)]}\\\\ &{\\qquad\\qquad\\leq\\ln(d-1)+0.04T}\\\\ &{\\qquad\\qquad\\leq0.14T,}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where the third line is due to (1) and the last inequality uses the facts that $0.1\\ln d/\\varepsilon\\,\\leq\\,T$ and $\\varepsilon\\le0.01$ . ", "page_idx": 16}, {"type": "text", "text": "By Markov\u2019s inequality, with probability at least $5/6$ we have $\\ln\\Phi_{T}\\leq0.84T$ . This implies that, for every $j\\neq i$ , we have ", "page_idx": 16}, {"type": "equation", "text": "$$\nc_{T}(j)=\\ln w_{T}(j)\\leq\\ln\\Phi_{T}\\leq0.84T.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "We then bound $c_{T}(i)$ . Note that by (1) we have ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[T-c_{T}(i)]=\\mathbb{E}\\left[\\sum_{t=1}^{T}\\mathbb{I}[h_{t}(i)=0]\\right]\\leq0.02T.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Applying Markov\u2019s inequality again, with probability at least $5/6$ we have $T-c_{T}(i)\\,\\leq\\,0.12T,$ or equivalently, $c_{T}(i)\\stackrel{<}{\\geq}0.8\\dot{8}T$ . By the union bound, it holds with probability $2/3$ that $c_{T}(i)\\geq$ $0.88T>0.84T\\geq c_{T}(j)$ for every $j\\neq i$ . ", "page_idx": 17}, {"type": "text", "text": "Let $O_{i}$ be the event that $c_{T}(i)>c_{T}(j)$ for every $j\\neq i$ , then $O_{1},\\ldots,O_{d}$ are disjoint. Then by group privacy, ", "page_idx": 17}, {"type": "equation", "text": "$$\n1\\ge\\sum_{i=1}^{d}\\operatorname*{Pr}[{\\mathcal{B}}(S_{1})\\in O_{i}]\\ge e^{-T\\varepsilon}\\sum_{i=1}^{d}\\operatorname*{Pr}[{\\mathcal{B}}(S_{i})\\in O_{i}]\\ge2/3\\cdot d e^{-T\\varepsilon}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Rearranging the inequality yields $T\\geq(\\ln d-\\ln1.5)/\\varepsilon>0.2\\ln d/\\varepsilon$ when $d\\geq2$ , a contradiction. ", "page_idx": 17}, {"type": "text", "text": "Now, let us deal with the remaining range. When $T>0.2\\ln d/\\varepsilon$ , the algorithm must make $\\Omega(\\log d/\\varepsilon)$ in the first $\\lfloor0.2\\ln d/\\varepsilon\\rfloor$ rounds. For $T<0.1\\ln d/\\varepsilon$ , suppose $\\boldsymbol{\\mathcal{A}}$ makes no more than $0.005T$ mistakes in expectation. Then we can repeatedly initiate $\\boldsymbol{\\mathcal{A}}$ after every $T$ round to obtain an algorithm that makes at most $0.005k T$ mistakes in expectation for a total of $k T$ rounds, where ", "page_idx": 17}, {"type": "equation", "text": "$$\nk=\\left\\lfloor{\\frac{0.2\\ln d/\\varepsilon}{T}}\\right\\rfloor\\geq0.5\\cdot{\\frac{0.2\\ln d/\\varepsilon}{T}}={\\frac{0.1\\ln d/\\varepsilon}{T}}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "This contradicts our previous conclusion since $k T\\in[0.1\\ln d/\\varepsilon,0.2\\ln d/\\varepsilon]$ . We thus obtain the $\\Omega(T)$ lower bound as desired. \u53e3 ", "page_idx": 17}, {"type": "text", "text": "E Proofs from Section 4 ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "E.1 Proof of Theorem 4.3 ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We start by analyzing Algorithm 2. As we discussed in Section 4.1, it constructs a series of data sequences and a list of time-steps that can be used to distinguish the sequences. We formalize this in the following lemma. ", "page_idx": 17}, {"type": "text", "text": "Lemma E.1. For any threshold $k$ and online learning algorithm $\\boldsymbol{\\mathcal{A}}$ such that $\\operatorname*{Pr}[A(S_{0})_{t}(u_{1})=$ $f_{1}(u_{1})]\\;\\geq\\;1/2$ for all $t\\,\\in\\,[T]$ , where ${\\cal S}_{0}\\,=\\,\\{(u_{0},f_{1}(u_{0})),\\ldots,(u_{0},f_{1}(u_{0}))\\}$ and $f_{1},f_{2},u_{0},u_{1}$ satisfy the property listed in Fact 4.2, Algorithm 2 either outputs an $S$ on which $\\boldsymbol{\\mathcal{A}}$ makes more than $k/3$ mistakes in expectation, or $S_{1},\\ldots,S_{m}$ and $t_{1},\\ldots,t_{m-1}$ such that ", "page_idx": 17}, {"type": "text", "text": "Proof. If Algorithm 2 outputs a single $S=S_{i}$ , it inserts at least $k+1\\;(u_{1},f_{2}(u_{1}))^{:}$ \u2019s to $S_{i}$ . By our construction, each of them incurs a mistake with a probability of at least $1/3$ . Therefore, the expected number of mistakes made by $\\boldsymbol{\\mathcal{A}}$ on $S_{i}$ is at least $(k+1)/3>k/3$ . Now suppose Algorithm 2 does not output a single data stream, this means for every $i$ , Algorithm 2 replaces at most $k$ elements when constructing $S_{i}$ from $S_{0}$ . ", "page_idx": 17}, {"type": "text", "text": "For each $i\\,\\in\\,[m]$ , the algorithm will first find the minimal $t_{i-1}$ such that $\\operatorname*{Pr}[A(S_{j})_{t_{i-1}}(u_{1})~=$ $f_{1}(u_{1})]<1/3$ for all $1\\leq j\\leq i-1$ , which is exactly the first half of item 2. Moreover, this also suggests that $t_{1}\\leq\\dots\\leq t_{m}$ . Due to the construction process, the first $t_{i-1}$ entries of $S_{i}$ will be the same as $S_{0}$ . Therefore, we have $\\operatorname*{Pr}[A(S_{i})_{t_{j}}(u_{1})=f_{1}(u_{1})]\\ge1/2$ for any $1\\leq j\\leq i-1$ since $\\boldsymbol{\\mathcal{A}}$ is an online algorithm. This proves the second half of item 2. ", "page_idx": 17}, {"type": "text", "text": "Now it remains to show the construction actually runs for $\\lceil T/k\\rceil$ rounds, i.e., we can find $t_{i-1}$ for any $i\\leq\\lceil T/k\\rceil$ . Since $S_{0}$ and any one of $S_{1},\\ldots,S_{i-1}$ differ at most $k$ entries, the pigeonhole principle suggests that there exists some $t\\in[(i-1)k+1]$ such that $S_{1}[t]=\\cdot\\cdot\\cdot=S_{i-1}{\\bar{[t]}}=(u_{0},\\bar{f_{1}}(\\bar{u_{0}}))$ . We next prove that $t>t_{j}$ for every $1\\leq j<i-1$ . For the sake of contradiction, assume that $j$ is the smallest index such that $t_{j}>t$ and $j<i-1$ (it is impossible for $t$ to be equal to any $t_{j}$ since we always have $S_{j+1}[t_{j}]=\\tilde{(u}_{1},f_{2}(u_{1}))$ by our construction). Then we have $t_{1}\\leq\\cdot\\cdot\\cdot\\leq t_{j-1}<t$ . This implies $\\mathrm{Pr}[\\bar{A}(S_{l})_{t}(u_{1})\\,=\\,f_{1}(u_{1})]\\,<\\,1/3$ for every $l\\leq j$ , otherwise Algorithm 2 will put a $(u_{1},f_{2}(u_{1}))$ at time-step $t$ when constructing $S_{l}$ . By the minimality of $t_{j}$ , we should choose $t_{j}$ to be $t$ when constructing $S_{j+1}$ , contradicting our assumption that $t_{j}>t$ . ", "page_idx": 17}, {"type": "text", "text": "Therefore, we have $t>t_{j}$ for every $1\\leq j<i\\!-\\!1$ . As we just argued, it follows that $\\operatorname*{Pr}[A(S_{l})_{t}(u_{1})=$ $f_{1}(u_{1})]<1/3$ for all $l\\in[i-1]$ otherwise Algorithm 2 will put a $(u_{1},f_{2}(u_{1}))$ at this location. Thus, we have $t_{i-1}\\leq t\\leq(i-1)k+1\\leq(\\lceil T/k\\rceil-\\bar{1})k+1\\leq T$ by the minimality of $t_{i-1}$ . This completes the proof. \u53e3 ", "page_idx": 18}, {"type": "text", "text": "The following lemma suggests that the condition in the Lemma E.1 can be assumed without loss of generality. ", "page_idx": 18}, {"type": "text", "text": "Lemma E.2. Given $f_{1},f_{2}$ and $u_{0},u_{1}$ as in Fact 4.2. Let $\\boldsymbol{\\mathcal{A}}$ be a randomized online learning algorithm and ${\\cal S}_{0}=\\{(u_{0},f_{1}(u_{0})),\\dots,(u_{0},f_{1}(u_{0}))\\}$ . There exists $b\\in\\{1,2\\}$ such that ", "page_idx": 18}, {"type": "equation", "text": "$$\n|\\{t:\\operatorname*{Pr}[A(S_{0})_{t}(u_{1})=f_{b}(u_{1})]\\geq1/2\\}|\\geq T/2.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Proof. Let $n_{b}=|\\{t:\\operatorname*{Pr}[A(S_{0})_{t}(u_{1})=f_{b}(u_{1})]\\geq1/2\\}|$ for $b\\in\\{1,2\\}$ . We have $n_{1}+n_{2}\\,\\geq\\,T$ .   \nTherefore, either $n_{1}\\geq T/2$ or $n_{2}\\geq T/2$ . ", "page_idx": 18}, {"type": "text", "text": "Proof of Theorem 4.3. Let $\\boldsymbol{\\mathcal{A}}$ be an $(\\varepsilon,\\delta)$ -differentially private online learning algorithm and $S_{0}=$ $\\{(u_{0},f_{1}(u_{0})),\\dots,(u_{0},f_{1}(u_{0}))\\}$ . By Lemma E.2, we can without loss of generality assume that $\\operatorname*{Pr}[A(S_{0})_{t}(u_{1})\\,=\\,f_{1}(u_{1})]\\,\\ge\\,1/2$ for all $t\\,\\in\\,[T]$ by ignoring all time-steps that do not have such property. ", "page_idx": 18}, {"type": "text", "text": "Let $k\\ =\\ \\lfloor c\\ln T/(3600\\varepsilon)\\rfloor$ . We will assume that $\\boldsymbol{\\mathcal{A}}$ makes no more than $k/3$ mistakes in expectation and derive a contradiction. By Lemma E.1, Algorithm 2 will output $S_{1},\\ldots,S_{m}$ and $t_{1},\\ldots,t_{m-1}$ with $m=\\lceil T/k\\rceil$ . Moreover, $\\mathrm{Pr}[A(S_{i})_{t_{j}}(u_{1})\\bar{=}\\;f_{1}(u_{1})]<1/3$ for every $j\\geq i$ and $\\operatorname*{Pr}[A(S_{i})_{t_{j}}(u_{1})=f_{1}(u_{1})]\\ge1/2$ for every $j\\leq i-1$ . ", "page_idx": 18}, {"type": "text", "text": "Let $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}^{\\beta}$ be the algorithm that runs Algorithm 3 with $\\boldsymbol{\\mathcal{A}}$ . The basic composition property immediately guarantees that $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ is $(360\\varepsilon,360\\delta)$ -differentially private. ", "page_idx": 18}, {"type": "text", "text": "We now examine the probability that $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}^{\\beta}$ outputs $i$ on $S_{i}$ . If so, $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}^{\\beta}$ must go through a series of time-step $t_{i_{1}},\\ldots,t_{i_{n}}$ in the binary search, where $n\\leq\\lceil\\log_{2}m\\rceil\\leq\\log_{2}m+1=\\log_{2}(2m)$ . For each $t_{i_{j}}$ , let $X_{j}$ be a random variable that takes 1 if ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathbb{I}\\left[\\left|\\left\\{h_{t_{i_{j}}}^{(w)}(u_{1})=f_{1}(u_{1}):w\\in[360]\\right\\}\\right|<150\\right]=\\mathbb{I}\\left[i_{j}\\geq i\\right].\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "and takes 0 otherwise. Conditioning on $X_{j}$ \u2019s, the probability that $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ outputs $i$ can be expressed as ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[B(S_{i})=i\\mid X_{1},\\ldots,X_{n}]=\\Pi_{j=1}^{n}\\left(0.75X_{j}+0.25(1-X_{j})\\right)=0.75^{\\sum_{j=1}^{n}X_{j}}0.25^{n-\\sum_{j=1}^{n}X_{j}}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "By Hoeffding\u2019s inequality, for each $X_{j}$ we have ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\operatorname{\\mathbb{E}}[X_{j}]=\\operatorname*{Pr}[X_{j}=1]\\geq1-\\exp\\left(-2\\cdot360\\cdot(30/360)^{2}\\right)=1-e^{-5}>0.99.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "It then follows by the linearity of expectation and Markov\u2019s inequality that ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\operatorname*{Pr}[X_{1}+\\cdot\\cdot\\cdot+X_{n}\\geq0.97n]\\geq2/3.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Putting it all together gives ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\operatorname*{Pr}[\\mathcal{B}(S_{i})=i]\\ge\\operatorname*{Pr}[\\mathcal{B}(S_{i})=i\\mid X_{1}+\\dots+X_{n}\\ge0.97n]\\cdot\\operatorname*{Pr}[X_{1}+\\dots+X_{n}\\ge0.97n]}\\\\ &{\\ge2/3\\cdot0.75^{0.97n}\\cdot0.25^{0.03n}}\\\\ &{\\ge2/3\\cdot\\left(\\frac{1}{2}\\cdot2^{1/2}\\right)^{0.97n}\\cdot\\left(\\frac{1}{2}\\cdot2^{-1}\\right)^{0.03n}}\\\\ &{=2/3\\cdot2^{-n}\\cdot2^{0.97/2-0.03)n}}\\\\ &{=2/3\\cdot2^{-0.545n}}\\\\ &{\\ge2/3\\cdot(2m)^{-0.545n}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "We now apply the packing argument. Since $\\boldsymbol{\\mathrm{\\Delta}}\\boldsymbol{\\mathrm{\\Omega}}_{\\boldsymbol{B}}$ is $(360\\varepsilon,360\\delta)$ -differentially private, it follows by group privacy that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\displaystyle1=\\sum_{i=1}^{m}\\operatorname*{Pr}[{\\mathcal{B}}(S_{0})=i]}\\\\ {\\displaystyle~\\ge\\sum_{i=1}^{m}\\left(e^{-360k\\varepsilon}\\operatorname*{Pr}[{\\mathcal{B}}(S_{i})=i]-\\frac{1-e^{-360k\\varepsilon}}{e^{360\\varepsilon}-1}\\cdot360\\delta\\right)}\\\\ {\\displaystyle~\\ge2/3\\cdot2^{-0.545}\\cdot m^{0.455}\\cdot e^{-360k\\varepsilon}-m\\cdot\\frac{1-e^{-360k\\varepsilon}}{e^{360\\varepsilon}-1}\\cdot360\\delta}\\\\ {\\displaystyle~~\\ge0.45m^{0.455}\\cdot e^{-360k\\varepsilon}-m\\cdot\\frac{1-e^{-360k\\varepsilon}}{e^{360\\varepsilon}-1}\\cdot360\\delta.}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "If $0.45m^{0.455}\\cdot e^{-360k\\varepsilon}\\geq2m\\cdot\\frac{1-e^{-360k\\varepsilon}}{e^{360\\varepsilon}-1}\\cdot360\\delta$ , then we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n0.225m^{0.455}\\cdot e^{-360k\\varepsilon}\\leq0.45m^{0.455}\\cdot e^{-360k\\varepsilon}-m\\cdot\\frac{1-e^{360k\\varepsilon}}{e^{360\\varepsilon}-1}\\cdot360\\delta\\leq1.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Rearranging the above gives ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{k\\ge\\frac{\\ln{0.225}+0.455\\ln{m}}{360\\varepsilon}}\\\\ &{\\ge\\frac{\\ln{0.225}+0.455\\ln(T/k)}{360\\varepsilon}}\\\\ &{\\ge\\frac{\\ln{0.225}+0.455\\ln\\left(\\frac{3600T\\varepsilon}{c_{\\mathrm{In}}T}\\right)}{360\\varepsilon}}\\\\ &{\\ge\\frac{\\ln{0.225}+0.455\\ln{T}+0.455\\ln(3600/c)}{360\\varepsilon}}\\\\ &{\\ge\\frac{0.455\\ln{T}}{360\\varepsilon},}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where in the forth inequality we use the condition $\\varepsilon\\geq\\ln T/T^{1-c}$ . This contradicts our assumption that $k\\leq c\\ln T/3600\\varepsilon$ . ", "page_idx": 19}, {"type": "text", "text": "If otherwise 0.45m0.455 \u00b7 e\u2212360k\u03b5 < 2m \u00b7 1e\u22123e6\u22120\u03b536\u221201k\u03b5\u00b7 , we have ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{360k\\varepsilon>\\ln\\left(\\frac{e^{360\\varepsilon}-1}{360\\delta}\\cdot0.225m^{-0.545}+1\\right)}&{}\\\\ &{\\phantom{360k\\varepsilon>}>\\ln\\left(\\frac{e^{360\\varepsilon}-1}{360\\delta}\\right)+\\ln0.225-0.545\\ln m}\\\\ &{\\geq\\ln(\\varepsilon/\\delta)-0.545\\ln T+\\ln0.225}\\\\ &{\\geq0.455\\ln T+\\ln0.225}\\\\ &{>0.1\\ln T}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "when $T\\geq100$ . Then it follows that $k>0.1\\ln T/(360\\varepsilon)>c\\ln T/3600\\varepsilon$ , again a contradiction. ", "page_idx": 19}, {"type": "text", "text": "In conclusion, any $(\\varepsilon,\\delta)$ -differentially private algorithm makes $(k{+}1)/3\\geq c\\ln T/(10800\\varepsilon)$ mistakes in expectation when $T\\geq100$ . This gives the $\\Omega(\\log T/\\varepsilon)$ lower bound. \u53e3 ", "page_idx": 19}, {"type": "text", "text": "E.2 Proof of Theorem 4.4 ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Proof. When $\\mathbb{L}\\mathbb{D}(\\mathcal{H})\\,=\\,1$ , the result is directly implied by Theorem 4.3. From now on, we will assume $\\mathrm{LD}({\\mathcal{H}})\\geq2$ . ", "page_idx": 19}, {"type": "text", "text": "Let $m=\\lfloor\\mathtt{L D}(\\mathcal{H})/2\\rfloor$ and $T^{\\prime}=\\lfloor T/m\\rfloor\\geq\\lfloor2T/\\mathrm{LD}(\\mathcal{H})\\rfloor\\geq T/\\mathrm{LD}(\\mathcal{H})>T^{1-1/(1+c_{2})}=T^{c_{2}/(1+c_{2})}$ Pick a shattered tree for $\\mathcal{H}$ of depth $\\operatorname{LD}({\\mathcal{H}})$ . Let $u_{0}$ be its root and $u_{1}$ be the left child of $u_{0}$ . The definition of shattered tree indicates that there exists $f_{1},f_{2}\\in\\mathcal{H}$ such that $f_{1}(u_{0})=f_{2}(u_{0})=0$ and $0=f_{1}(u_{1})\\neq f_{2}(u_{1})=1$ . By Theorem 4.3, for any $(\\varepsilon,\\delta)$ -differentially private online learner with $\\varepsilon\\geq\\ln T/T^{c_{2}(1-c_{1})/(1+c_{2})}>\\ln T^{\\prime}/T^{\\prime1-c_{1}}$ and $\\delta\\leq\\varepsilon/T<\\varepsilon/T^{\\prime}$ , we can construct a sequence $S_{1}$ such that it makes in expectation $\\Omega(\\log T^{\\prime}/\\varepsilon)=\\Omega(\\log T/\\varepsilon)$ mistakes on $S_{1}$ . Moreover, $S_{1}$ only contains $(u_{0},0)$ and $(u_{1},b)$ for some $b\\in\\{0,1\\}$ . ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "Let $\\mathcal{H}^{\\prime}\\,=\\,\\{h\\,\\in\\,\\mathcal{H}\\,:\\,h(u_{0})\\,=\\,0$ and $h(u_{1})~=~b\\}$ . If $\\mathtt{L D}({\\mathcal H})\\ \\geq\\ 4$ , we then have $\\mathrm{LD}(\\mathcal{H}^{\\prime})\\ \\geq$ $\\mathrm{LD}(\\mathcal{H})-2\\geq2$ since the subtree rooted at the child (left if $b=0$ , right if $b=1$ ) of $u_{1}$ is shattered by $\\mathcal{H}^{\\prime}$ and has a depth of $\\mathrm{LD}(\\mathcal{H})-2$ . Thus, we can similarly construct a sequence $S_{2}$ such that the algorithm makes $\\Omega(\\log T/\\varepsilon)$ errors. Importantly, the entries in $S_{2}$ are completely different from those in $S_{1}$ . ", "page_idx": 20}, {"type": "text", "text": "We repeat the above process until we reach a hypothesis class with Littlestone dimension $\\leq1$ and construct a series of sequences $S_{1},\\ldots,S_{m}$ that have non-overlapping entries. On each of them, the learner makes $\\Omega(\\log T/\\varepsilon)$ mistakes in expectation. Let $S$ be the stream formed by concatenating $S_{1},\\ldots,S_{m}$ together. The length of $S$ is at most $m T^{\\prime}\\leq T$ while the expected number of mistakes on $S$ is $\\Omega(\\mathrm{LD}(\\mathcal{H})\\log T)$ . \u53e3 ", "page_idx": 20}, {"type": "text", "text": "F Additional Algorithms ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this section, we provide several algorithms for various tasks. Note that some of the upper bounds hold even against strong adaptive adversaries, i.e., adversaries that can see the prediction made by the learner in the current round. ", "page_idx": 20}, {"type": "text", "text": "F.1 Learning Point Functions Against Oblivious Adversaries ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "We show how to improve the $\\log^{2}T$ dependence in Theorem 3.3 to $\\log T$ for $\\tt P O I N T_{N}$ . In the beginning, we keep outputting an all-zero function and use the sparse vector technique to monitor the mistakes. Then we sample hypotheses from the probabilistic representation constructed in [10] and again apply the sparse vector technique to find one with low error on the past data. Following their argument, we can show that the construction guarantees that the hypothesis we found won\u2019t make too many mistakes in the future. The result is stated as follows. ", "page_idx": 20}, {"type": "text", "text": "Theorem F.1. In the realizable setting, there is an $\\varepsilon$ -differentially private online learning algorithm for $\\tt P O I N T_{N}$ that makes in expectation $O(\\log T/\\varepsilon)$ mistakes against oblivious adversaries. ", "page_idx": 20}, {"type": "text", "text": "Proof. We run Algorithm 5. Note that it is in fact composed of two instances of AboveThreshold with privacy parameter $\\varepsilon/2$ , the algorithm is $\\varepsilon$ -DP. ", "page_idx": 20}, {"type": "text", "text": "Consider the first AboveThreshold, there are $T\\!+\\!1\\leq2T$ Laplace random variables. With probability $1-1/3T$ , all of them have absolute values no larger than $4\\sin(6T^{2})/\\varepsilon^{\\prime}$ . Thus, when it halts, there are at least $\\hat{L}-4\\ln(6T^{2})/\\varepsilon^{\\prime}\\geq20\\ln(12T^{3})/\\varepsilon^{\\prime}$ data points of the form $(x^{\\star},1)$ , where $f_{x^{\\star}}$ is the target hypothesis. Moreover, it makes at most $2\\ddot{0}\\ln(12T^{\\hat{3}})/\\varepsilon^{\\prime}+8\\ln(6T^{2})/\\dot{\\varepsilon}^{\\prime}+8\\ln(6T^{2})/\\varepsilon^{\\prime}+1$ mistakes. ", "page_idx": 20}, {"type": "text", "text": "Now we show that the sampling won\u2019t last for too long. We consider the first $3T^{2}$ iterations. Then with probability $1-1/3T$ , every random noise has an amplitude of at most $4\\ln(12T^{3})/\\varepsilon^{\\prime}$ in the second AboveThreshold. Note that $\\begin{array}{r}{\\sum_{r=1}^{t}\\mathbb{I}[h(x_{r})\\neq y_{r}}\\end{array}$ and $y_{r}=1]\\geq20\\ln(12T^{3})/\\varepsilon^{\\prime}$ if $h(x^{\\star})=0$ and is 0 if $h(x^{\\star})=1$ . Thus, the alg orithm will exit the loop if and only if $h(x^{\\star})=1$ . The probability that this happens in the first $3T^{2}$ iterations is at least $1-(1-1/T)^{3T^{2}}\\geq1-e^{-3T}\\geq1-1/3T$ Moreover, this $h$ makes in expectation less than $(T-1)/\\dot{T}<1$ mistakes on data points other than $(x^{\\star},1)$ in the sequence. ", "page_idx": 20}, {"type": "text", "text": "Putting it all together, the expected number of mistakes is less than ", "page_idx": 20}, {"type": "equation", "text": "$$\n1/T\\cdot T+(1-1/T)\\cdot(20\\ln(12T^{3})/\\varepsilon^{\\prime}+8\\ln(6T^{2})/\\varepsilon^{\\prime}+8\\ln(6T^{2})/\\varepsilon^{\\prime}+1+1)=O(\\log T/\\varepsilon).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "F.2 Learning Point Functions Against Adaptive Adversaries ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Theorem F.2. In the realizable setting, there is an $\\varepsilon$ -differentially private online learning algorithm for $\\mathsf{P D I N T}_{d}$ that makes in expectation $O((\\log d+\\log T)/\\varepsilon)$ mistakes against strong adaptive adversaries. ", "page_idx": 20}, {"type": "text", "text": "Input: the number of rounds $T$ ; privacy parameter $\\varepsilon$ ; sequence $S$   \nOutput: hypotheses $h_{1},\\ldots,h_{T}$   \n1 $\\varepsilon^{\\prime}\\leftarrow\\varepsilon/2$   \n2 $\\hat{L}\\gets20\\ln(12T^{3})/\\varepsilon^{\\prime}+8\\ln(6T^{2})/\\varepsilon^{\\prime}+\\mathrm{Lap}(2/\\varepsilon^{\\prime})$   \n3 for $t=1,\\dots,T$ do   \n4 Let $h_{t}$ be an all-zero function such that $h_{t}(x)=0$ for all $x\\in\\mathbb N$   \n5 $(x_{t},y_{t})\\gets S[t]$   \n6 if $\\begin{array}{r}{\\sum_{r=1}^{t}y_{r}+\\mathrm{Lap}(4/\\varepsilon^{\\prime})\\geq\\hat{L}}\\end{array}$ then   \n7 $\\hat{R}\\gets12\\ln(12T^{3})/\\varepsilon^{\\prime}+\\mathrm{Lap}(2/\\varepsilon^{\\prime})$   \n8 repeat   \n9 Sample an $h$ such that $\\mathrm{Pr}[h(x)=1]=1/T$ for every $x\\in\\mathbb{N}$ independently   \n10 until $\\begin{array}{r}{\\sum_{r=1}^{t}\\mathbb{I}[h(x_{r})\\neq y_{r}}\\end{array}$ and $y_{r}=1]+\\mathrm{Lap}(4/\\varepsilon^{\\prime})\\leq\\hat{R}$   \n11 Outp ut $h_{t+1}=\\cdot\\cdot=h_{T}=h$ for the remaining rounds and halt   \n12 end   \n13 end ", "page_idx": 21}, {"type": "text", "text": "Proof. Let $\\varepsilon^{\\prime}=\\varepsilon/2$ . The algorithm works as follows: it keeps outputting an all-zero function and runs an $\\varepsilon^{\\prime}$ -differentially private sparse vector technique (Algorithm 4) with $\\bar{L}=3(\\ln d\\!+\\!\\ln(2T))/\\varepsilon^{\\prime}+$ $8\\ln(4T^{2})/\\varepsilon^{\\prime}$ to monitor the number of mistakes. Once the (noisy) number of mistakes exceeds $\\hat{L}$ at round $k$ , it computes $c_{i}=|\\{t\\in[k]:(x_{t},y_{t})=(i,1)\\}|$ and apply the report-noisy-max mechanism with privacy parameter $\\varepsilon^{\\prime}$ to find an index $i$ with a large $c_{i}$ . After that, it persistently outputs $f_{i}$ till the end. The privacy directly follows from the basic composition. ", "page_idx": 21}, {"type": "text", "text": "With probability $1-1/2T$ , the amplitude of every noise added in the sparse vector technique is no larger than $4\\ln(4\\dot{T}^{2})/\\varepsilon^{\\prime}$ . Thus, at round $k$ , the number of mistakes must be in the range $[\\hat{L}-4\\ln(4T^{2})/\\varepsilon^{\\prime},\\hat{L}+4\\ln(4T^{2})/\\varepsilon^{\\prime}+1]\\subseteq[L-8\\ln(4T^{2})/\\varepsilon^{\\prime},L+8\\ln(4T^{2})/\\varepsilon^{\\prime}+1]$ . Hence, we have $c_{i}\\,\\geq\\,L-8\\ln(4T^{2})/\\varepsilon^{\\prime}\\,=\\,3(\\ln d+\\ln(2T))/\\varepsilon^{\\prime}$ for some $i$ and $c_{j}\\,=\\,0$ for all $j\\neq i$ . With probability $1-1/2T$ , the report-noisy-max algorithm will identify $i$ correctly. ", "page_idx": 21}, {"type": "text", "text": "Thus, the expected number of mistakes is bounded by ", "page_idx": 21}, {"type": "equation", "text": "$$\n1/T\\cdot T+(1-1/T)\\cdot(L+8\\ln(4T^{2})/\\varepsilon^{\\prime}+1)=O((\\log d+\\log T)/\\varepsilon).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "F.3 Learning Threshold Functions ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "A threshold function over $[d]$ is a function $f_{i}$ such that $f_{i}(x)=0$ for all $x\\leq i$ and $f_{i}(x)=1$ for all $x>i$ , where $i\\in[d]\\cup\\{0\\}$ . The class of threshold functions over $[d]$ , denote by Thresho $\\mathsf{1d}_{d}$ , is the set $\\{f_{i}:i\\in[d]\\cup\\{0\\}\\}$ . ", "page_idx": 21}, {"type": "text", "text": "Theorem F.3. In the realizable setting, there is an $\\varepsilon$ -differentially private online learning algorithm for Thresho $\\mathsf{L d}_{d}$ that makes in expectation $O(\\log d\\log T/\\varepsilon)$ mistakes against strong adaptive adversaries. ", "page_idx": 21}, {"type": "text", "text": "Proof. We run Algorithm 6. Since the counters are refreshed once we switch the current hypothesis, we are actually running AboveThreshold on disjoint datasets. Moreover, the comparisons of $c_{\\mathrm{0}}$ and $c_{1}$ are also performed on disjoint datasets. Therefore, the overall algorithm is $\\varepsilon$ -DP. ", "page_idx": 21}, {"type": "text", "text": "Since the binary search runs for at most $\\lceil\\log_{2}(d+1)\\rceil$ iterations, it follows by the privacy of AboveThreshold and the basic composition that the overall algorithm is $\\varepsilon$ -DP since the counters are refreshed once we switch the current hypothesis. ", "page_idx": 21}, {"type": "text", "text": "By the property of Laplace distribution and the union bound, with probability $1-1/T$ , every random noise that appears in the algorithm has an amplitude no larger than $4\\ln(4\\dot{T}^{2})/\\varepsilon^{\\prime}$ . Conditioning on this event, once we change the current hypothesis, we must have $c_{0}+c_{1}\\geq\\hat{L}-4\\ln(4T^{2})/\\varepsilon^{\\prime}\\geq$ $8\\ln(4T^{2})/\\varepsilon^{\\prime}$ and $c_{0}+c_{1}\\leq\\hat{L}+4\\ln(4T^{2})/\\varepsilon^{\\prime}+1\\leq24\\ln(4T^{2})/\\varepsilon^{\\prime}+1$ . Therefore, we can identify which one is zero. Since the binary search runs at most $O(\\log d)$ iterations, we will make at most ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "equation", "text": "$$\nO(\\log d)\\cdot(24\\ln(4T^{2})/\\varepsilon^{\\prime}+1)=O(\\log d\\log T/\\varepsilon)\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "mistakes with probability $1-1/T$ . This implies an $1/T\\cdot T+O(\\log d\\log T/\\varepsilon)=O(\\log d\\log T/\\varepsilon)$ bound in expectation. \u53e3 ", "page_idx": 22}, {"type": "text", "text": "Algorithm 6: Learning threshold functions over $[d]$ ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Input: the number of rounds $T$ ; privacy parameter $\\varepsilon$ ; sequence $S$   \nOutput: hypotheses $h_{1},\\ldots,h_{T}$   \n1 $\\varepsilon^{\\prime}=\\varepsilon/2$   \n2 $\\hat{L}\\gets16\\ln(4T^{2})/\\varepsilon^{\\prime}+\\mathrm{Lap}(2/\\varepsilon^{\\prime})$   \n3 $l\\gets0,r\\gets d,m i d\\gets\\lfloor(l+r)/2\\rfloor$   \n4 $c_{0}\\gets0,c_{1}\\gets0$   \n5 for $t=1,\\dots,T$ do   \n6 $h_{t}\\leftarrow f_{m i d}$   \n7 $(x_{t},y_{t})\\gets S[t]$   \n8 $c_{y_{t}}\\gets c_{y_{t}}+\\mathbb{I}[h(x_{t})\\neq y_{t}]$   \n9 if $l<r$ and $c_{0}+c_{1}+\\mathrm{Lap}(4/\\varepsilon^{\\prime})\\geq\\hat{L}$ then   \n10 if $c_{0}+\\mathrm{Lap}(1/\\varepsilon^{\\prime})>c_{1}$ then   \n11 $l\\leftarrow m i d+1$   \n12 else   \n13 r \u2190mid \u22121   \n14 end   \n15 $m i d\\leftarrow\\lfloor(l+r)/2\\rfloor$   \n16 c1 \u21900, c2 \u21900   \n17 $\\hat{L}\\gets16\\ln(4T^{2})/\\varepsilon^{\\prime}+\\mathrm{Lap}(2/\\varepsilon^{\\prime})$   \n18 end   \n19 end ", "page_idx": 22}, {"type": "text", "text": "F.4 Online Prediction from Experts Against Adaptive Adversaries ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "It is easy to come up with an algorithm with a regret of $O(d\\log T/\\varepsilon)$ even against strong adaptive adversaries. The idea is similar to Algorithm 6. The only difference is that we try the experts one by one instead of running a binary search. ", "page_idx": 22}, {"type": "text", "text": "Theorem F.4. There is an $\\varepsilon$ -differentially private algorithm that solves the OPE problem with an expected regret of $O\\left({\\frac{d\\log T}{\\varepsilon}}\\right)$ even against strong adaptive adversaries in the realizable setting. ", "page_idx": 22}, {"type": "text", "text": "Proof. We iterate over the set of experts. For each expert, we keep choosing it and run an $\\varepsilon.$ - differentially private sparse vector technique to monitor the loss incurred by the current expert. Once the sparse vector technique halts, we switch to the next expert and restart the sparse vector technique. Since all instances of the sparse vector technique are run on disjoint data, the entire algorithm is $\\varepsilon$ -DP. With probability $1-1/T$ , all the Laplace noises added are bounded by $4\\ln(2T^{2})/\\varepsilon$ . By choosing $L=\\bar{9}\\ln(2T^{2})\\dot{/}\\varepsilon$ , we will make at most $O(\\log T/\\varepsilon)$ mistakes on each expert. Moreover, for an expert that makes no errors, we will not switch to the next one. Therefore, the overall expected regret is ", "page_idx": 22}, {"type": "equation", "text": "$$\n1/T\\cdot T+(1-1/T)\\cdot d\\cdot O(\\log T/\\varepsilon)=O(d\\log T/\\varepsilon).\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Note that there is a multiplicative factor of $d$ on the $\\log T$ term. We will then show how to improve this dependence to $\\log d$ for (weak) adaptive adversaries. Due to Corollary 4.5, such a dependence is tight even for oblivious adversaries. It is interesting to find out if this can also be achieved for strong adaptive adversaries, and we leave this as future work. ", "page_idx": 22}, {"type": "text", "text": "Moreover, our algorithm has a regret of $O\\left(d\\log^{2}d+\\log d\\log T\\right)$ . Since it was shown by Asi et al.   \n[8] that an $\\Omega(d)$ cost is inevitable, our algorithm is near optimal. ", "page_idx": 23}, {"type": "text", "text": "The idea is to select a uniformly random expert rather than keep choosing a fixed one. Suppose we are at the beginning. Let $\\begin{array}{r}{c_{t}(i)=\\sum_{r=1}^{t}\\ell_{r}(i)}\\end{array}$ for expert $i$ . The benefit of such random selection is that it only incurs a loss of $\\textstyle\\sum_{i\\in[d]}c_{t}(i)/d$ , which is much less than the $\\textstyle\\sum_{i\\in[d]}c_{t}(i)$ loss if we always choose the same expert since the adversary can let this expert make an error all the time. ", "page_idx": 23}, {"type": "text", "text": "We use the sparse vector technique to track the maximum of $c_{t}$ . Once it exceeds $O(\\log T+d\\log d)$ , we then apply the report-noisy-max algorithm to remove every expert $j$ with $\\begin{array}{r}{a_{t}(j)=\\sum_{r=1}^{t}\\ell_{r}(j)\\geq}\\end{array}$ $O(d\\log d)$ (we do not write $c_{t}$ here since we will reset $c_{t}$ to be 0 later). After that, we reiterate the sampling and monitoring process using the remaining experts. Observe that if expert $j$ is the $i^{\\th}$ -th one being removed, the loss incurred by $j$ is at most $O(\\log T+d\\log d)/i$ . This gives an upper bound of $O(\\log T+d\\log d)\\cdot(1+1/2+\\dots+1/d)=O(d\\log^{2}d+\\log d\\log T)$ . The details are depicted in Algorithm 7. ", "page_idx": 23}, {"type": "text", "text": "Algorithm 7: DP-OPE against adaptive adversaries ", "text_level": 1, "page_idx": 23}, {"type": "image", "img_path": "Cqr6E81iB7/tmp/c43da77fcdebda6128316521ae56ba5defa2aa07d2a8e21bf077f9bd3a1c9c1e.jpg", "img_caption": [], "img_footnote": [], "page_idx": 23}, {"type": "text", "text": "Here is a subtle issue: the report-noisy-max mechanism only succeeds with probability $1-1/d$ . This does not imply an upper bound in expectation. We cannot simply raise the success probability to $1-1/T$ . Otherwise, the $d\\log^{2}d$ term will become $d\\log d\\log T$ , which is even higher than the brute force. To fix this, we run an extra sparse vector technique on top of the algorithm to inspect the loss. Once the loss is greater than the upper bound, we then run the algorithm in Theorem F.4 for the rest of the rounds. This reduces the expected cost from $T$ to $O(d\\log{\\bar{T}})$ when it fails, hence successfully bound the expected loss. ", "page_idx": 23}, {"type": "text", "text": "Theorem F.5. There is an $\\varepsilon$ -differentially private algorithm that solves the OPE problem with an expected regret of O d log2 d+log d log T against adaptive adversaries in the realizable setting. ", "page_idx": 23}, {"type": "text", "text": "Proof. We first show the privacy and utility guarantee for Algorithm 7. For privacy, the sparse vector technique is $\\varepsilon/2$ -DP. The report-noisy-max outside the while loop will be executed at most $d$ times, and the same for the one inside the while loop. Also, the if clause inside the while loop will also be executed at most $d$ times. All of these cost a privacy budget of $3d\\varepsilon_{2}=\\varepsilon/2$ . Thus, the overall algorithm is $\\varepsilon$ -DP. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "We next analyze the regret. With probability $1-1/T$ , all the noises added by AboveThreshold are bounded by $4\\ln(2T^{2})/\\varepsilon_{1}$ . Therefore, once $\\begin{array}{r}{c_{t}(i)\\stackrel{}{\\geq}\\frac{16\\ln(2T^{2})}{\\varepsilon_{1}}+\\frac{3(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}}\\end{array}$ for some $i\\in E$ we must invoke the report-noisy-max mechanism. On the other hand, once we invoke the reportnprooisbya-bmilaitxy ,m i to ualtswidaey st hide ewnthiifliee sl oaon wwiet hm $\\begin{array}{r}{c_{t}(i)\\ge\\frac{3(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}}\\end{array}$ $i$ Waintdh $1-1/3d$ $i$ $\\begin{array}{r}{a_{t}(i)\\geq\\frac{3(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}-\\frac{2(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}>0}\\end{array}$ ", "page_idx": 24}, {"type": "text", "text": "Now let us move into the while loop. With probability $1-1/3d$ the report-noisy-max always returns an $i$ with $\\begin{array}{r}{a_{t}(i)>\\frac{2\\ln(3d^{2})}{\\varepsilon_{2}}+\\frac{2(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}-\\frac{2(\\ln d+\\ln(3d^{2}))}{\\varepsilon_{2}}=\\frac{2\\ln(3d^{2})}{\\varepsilon_{2}}}\\end{array}$ whenever $\\operatorname*{max}_{j\\in[E]}a_{t}(j)>$ 2(ln d+\u03b5ln(3d2))+ 2 ln\u03b5(3d2). Moreover, the noise added in the if clause is less than ln(3d2) for the entire time span with probability $1-1/3d$ . Thus, expert $i$ will be removed. Conversely, if it identifies an $i$ such that $a_{t}(i)=0$ , we will not remove $i$ and exit the loop. ", "page_idx": 24}, {"type": "text", "text": "Let $E_{t}$ be the set $E$ at the beginning of round $t$ and $E_{T+1}$ be the set $E$ after the algorithm terminates. Suppose $i$ is removed from $E$ at time-step $T_{i}$ (if it still remains in $E$ at the end, we define $T_{i}=T\\!+\\!1)$ . From the above analysis, we know that with probability $1-1/d-1/T$ , for every expert $i$ we have $\\begin{array}{r}{a_{T_{i}}(i)\\leq\\frac{3(\\ln d+\\ln(3\\dot{d}^{2}))}{\\varepsilon_{2}}+\\frac{2\\ln(3d^{2})}{\\varepsilon_{2}}+\\frac{16\\ln(2\\bar{T^{2}})}{\\varepsilon_{1}}+1.}\\end{array}$ . Conditioning on the event that $a_{T_{i}}(i)\\leq M$ for some $M$ , we can bound the expected loss by ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\frac{\\sqrt{\\pi}}{\\alpha_{1}}\\Bigg[\\underset{t\\leq t_{1}}{\\sum}\\Bigg\\lbrace t_{\\alpha_{2}}(t_{1})[E_{k}]\\Bigg\\rbrace=\\frac{\\sqrt{\\pi}}{\\alpha_{2}!}\\Bigg\\lbrace\\sum_{k\\in\\beth}\\mathbb{E}_{t\\in\\beth}[\\phi_{k}][E_{k}]}\\\\ &{=\\mathbb{E}\\left[\\underset{t\\leq t_{1}}{\\sum}\\underset{t\\leq t_{2}}{\\sum}[\\phi_{k}\\,E_{k}][\\phi_{k}][E_{k}]\\right.}\\\\ &{=\\mathbb{E}\\left[\\underset{t\\leq t_{1}}{\\sum}\\underset{t\\leq t_{2}}{\\sum}[\\phi_{k}][E_{k}]\\right]}\\\\ &{\\leq\\mathbb{E}\\left[\\underset{t\\leq t_{1}}{\\sum}\\underset{t\\leq t_{2}}{\\sum}[\\phi_{k}][E_{k}]\\right]}\\\\ &{=\\mathbb{E}\\left[\\underset{t\\leq t_{2}}{\\sum}\\underset{t\\leq t_{1}}{\\sum}[\\phi_{k}][E_{k}]\\right]}\\\\ &{\\leq\\mathbb{E}\\left[\\underset{t\\leq t_{1}}{\\sum}[\\phi_{k}][E_{k}]\\right]\\,M}\\\\ &{\\leq\\mathbb{E}\\Bigg[\\underset{t\\leq t_{2}}{\\sum}[\\underset{t\\leq t_{1}}{\\sum}]\\Bigg]\\,M}\\\\ &{\\leq\\left(\\frac{\\sum_{t\\leq t_{1}}^{t}}{\\alpha_{1}!}\\right)\\,M}\\\\ &{\\leq2N\\alpha_{1}\\,M}\\end{array}\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "for $d\\geq2$ (the case that $d=1$ is trivial, so we just ignore it). ", "page_idx": 24}, {"type": "text", "text": "We already have $\\begin{array}{r}{M=O\\left(\\frac{d\\log d+\\log T}{\\varepsilon}\\right)}\\end{array}$ with probability $1-1/d-1/T$ . However, this is not enough to show an expected bound. To get an expected bound, we run Algorithm 7 with privacy parameter $\\varepsilon^{\\prime}=\\varepsilon/2$ and an $\\varepsilon^{\\prime}$ -differentially private AboveThreshold to monitor $\\operatorname*{max}_{i\\in E_{t}}\\bar{a}_{t}(i)$ (note that it won\u2019t affect the privacy and utility even if we release $E_{t}$ publicly) with threshold ", "page_idx": 24}, {"type": "equation", "text": "$$\nL=\\left(\\frac{2\\ln(3d^{2})}{\\varepsilon^{\\prime}}+\\frac{3(\\ln d+\\ln(3d^{2}))}{\\varepsilon^{\\prime}}+\\frac{16\\ln(2T^{2})}{\\varepsilon^{\\prime}}+1\\right)+\\frac{4\\ln(T^{2})}{\\varepsilon^{\\prime}}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Once AboveThreshold halts, we then stop Algorithm 7 and switch to the algorithm in Theorem F.4 with privacy parameter $\\varepsilon$ . ", "page_idx": 25}, {"type": "text", "text": "It is not hard to see that the overall algorithm is $\\varepsilon$ -DP. For utility, we have that with probability $1-1/T$ AboveThreshold halts once $\\operatorname*{max}_{i\\in E_{t}}a_{t}(i)$ is greater than $\\begin{array}{r}{\\overline{{L}}\\,=\\,L+\\frac{4\\ln(T^{2})}{\\varepsilon^{\\prime}}}\\end{array}$ and never halts if the value is always no more than L = L \u22124 ln\u03b5(\u2032T 2). Conditioning on this, with probability $1-1/d-1/T$ we have $a_{T_{i}}\\leq\\underline{{L}}$ for every $i$ and thus AboveThreshold never halts. In this case, the expected loss is at most $\\begin{array}{r}{\\underline{{L}}\\cdot2\\ln d=O\\left(\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}\\right)}\\end{array}$ . If AboveThreshold halts, the expected loss incurred before that moment should be at most $\\scriptstyle({\\overline{{L}}}+1)\\cdot2\\ln d\\ =O\\ \\left({\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}}\\right)$ . And after that, the regret should be $O\\left({\\frac{d\\log T}{\\varepsilon}}\\right)$ by Theorem F.4. Putting these two cases together gives an expected regret of ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\left(1-\\displaystyle\\frac{1}{d}-\\displaystyle\\frac{1}{T}\\right)\\cdot\\underline{{L}}\\cdot2\\ln d+\\left(\\displaystyle\\frac{1}{d}+\\displaystyle\\frac{1}{T}\\right)\\left((\\overline{{L}}+1)\\cdot2\\ln d+O\\left(\\frac{d\\log T}{\\varepsilon}\\right)\\right)}\\\\ &{=O\\left(\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}\\right)+\\left(\\displaystyle\\frac{1}{d}+\\displaystyle\\frac{1}{T}\\right)O\\left(\\frac{d\\log T}{\\varepsilon}\\right)}\\\\ &{=O\\left(\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Thus, the expected regret of the entire algorithm is ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\left(1-{\\frac{1}{T}}\\right)\\cdot O\\left({\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}}\\right)+{\\frac{1}{T}}\\cdot T=O\\left({\\frac{d\\log^{2}d+\\log d\\log T}{\\varepsilon}}\\right).\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "F.5 Learning Two Complementary Hypotheses ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Let $\\mathcal{H}=\\{f_{1},f_{2}\\}$ such that $f_{1}=1-f_{2}$ . We now give an algorithm that achieves a mistake bound of $O(1/\\varepsilon)$ . ", "page_idx": 25}, {"type": "text", "text": "It is not hard to come up with an algorithm that makes $O(1/\\varepsilon)$ mistakes with constant probability. Since the incorrect hypothesis makes an error on every input sample, we can output arbitrarily in the first $O(1/\\varepsilon)$ rounds. Then we use the $O(1/\\varepsilon)$ data points to figure out which hypothesis is the correct one. This can be done using the Laplace mechanism. ", "page_idx": 25}, {"type": "text", "text": "However, a constant probability bound does not imply an expected bound. Note that once the Laplace mechanism fails, we may make $\\Omega(T)$ errors on the entire sequence. Thus, if we follow the above framework, we have to achieve a success probability of $1-1/T$ . This requires $O(\\log T/\\varepsilon)$ samples, which exceed our target. ", "page_idx": 25}, {"type": "text", "text": "To reduce the expected number of errors, we split the entire sequence into buckets of length $O(1/\\varepsilon)$ . We perform the Laplace mechanism on every bucket. Then for the $i$ -th bucket, instead of just using the result on the last bucket to predict, we take the majority over all previous buckets. This makes the fail probability decrease exponentially. The mistake bound then converges to $O(1/\\varepsilon)$ as desired. ", "page_idx": 25}, {"type": "text", "text": "We describe the procedure in Algorithm 8 and provide a formal statement of our result in the following theorem. ", "page_idx": 25}, {"type": "text", "text": "Theorem F.6. Let $\\mathcal{H}=\\{f_{1},f_{2}\\}$ be a hypothesis such that $f_{1}$ and $f_{2}$ are complementary. In the realizable setting, there exists an $\\varepsilon$ -differentially private algorithm that online learns $\\mathcal{H}$ with a mistake bound of $O(1/\\varepsilon)$ even against strong adaptive adversaries. ", "page_idx": 25}, {"type": "text", "text": "Proof. It is easy to see that Algorithm 8 is $\\varepsilon$ -differentially private since we add Laplace noise on disjoint buckets. For each bucket, with probability $2/3$ , the noise added to the counter is less than $\\ln(3)/\\varepsilon<s/2$ . This means we can identify the correct hypothesis with probability $2/3$ . ", "page_idx": 25}, {"type": "text", "text": "For the $n$ -th bucket, we will make $s$ errors only if we wrongly identify the target hypothesis on at least half of the previous buckets. By Hoeffding\u2019s inequality, this happens with probability at most ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\exp\\left(-2(n-1)(1/6)^{2}\\right)=\\exp(-(n-1)/18).\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Thus, the expected number of mistakes is bounded by ", "page_idx": 26}, {"type": "equation", "text": "$$\ns\\sum_{n=1}^{\\infty}\\exp(-(n-1)/18)=O(1/\\varepsilon).\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Algorithm 8: Learning complementary hypotheses ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Input: the number of rounds $T$ ; hypothesis class $\\mathcal{H}=\\{f_{1},f_{2}\\}$ such that $f_{1}$ and $f_{2}$ are   \ncomplementary; privacy parameter $\\varepsilon$ ; sequence $S$   \nOutput: hypotheses $h_{1},\\ldots,h_{T}$   \n1 $c_{1}\\leftarrow0$ , $c_{2}\\leftarrow0$   \n2 $s\\gets\\lceil2\\ln(3)/\\varepsilon\\rceil$   \n3 for $t=1,\\dots,T$ do   \n4 $(x_{t},y_{t})\\gets S[t]$   \n5 if $c_{1}>c_{2}$ then   \n6 ht \u2190f1   \n7 else   \n8 ht \u2190f2   \n9 end   \n10 if $t$ mod $s=0$ then   \n11 if $\\begin{array}{r}{\\cdot\\sum_{r=t-s+1}^{t}\\mathbb{I}[f_{1}(x_{r})\\neq y_{r}]+\\mathrm{Lap}(1/\\varepsilon)<s/2}\\end{array}$ then   \n12 $c_{1}\\gets c_{1}+1$   \n13 else   \n14 c2 \u2190c2 + 1   \n15 end   \n16 end   \n17 end ", "page_idx": 26}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: In the abstract and introduction, we state our two main contributions: a separation result between pure and approximate DP, and the other one between private and non-private settings. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 27}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We discuss the limitations and future work in Appendix A ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 27}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The proofs of the results in Section 3 and 4 can be found in Appendix D and E respectively. We also provide some additional results together with their formal proofs in Appendix F. For each theorem in the paper, we clearly state the assumptions that it relies on. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 28}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 28}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not include experiments requiring code. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 29}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 29}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 29}, {"type": "text", "text": "", "page_idx": 30}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 30}, {"type": "text", "text": "Justification: The paper does not include experiments. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 30}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We have read the NeurIPS Code of Ethics and make sure that the research in this paper conforms with it. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 30}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We discuss the potential impacts of this paper in Appendix B. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 30}, {"type": "text", "text": "", "page_idx": 31}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not have such risks. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 31}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not use existing assets. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 31}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 32}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 32}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 32}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 32}]