[{"type": "text", "text": "DropEdge not Foolproof: Effective Augmentation Method for Signed Graph Neural Networks ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zeyu Zhang1, $\\bf{L u}\\,[\\Delta L i^{1}$ , Shuyan $\\mathbf{Wan}^{3}$ , Sijie Wang2, Zhiyi Wang1, Zhiyuan $\\mathbf{L}\\mathbf{u}^{1}$ , Dong $\\mathbf{Hao}^{3}$ , Wanli Li1\u2217 ", "page_idx": 0}, {"type": "text", "text": "1Huazhong Agricultural University, 2The University of Auckland 3University Of Electronic Science And Technology Of China zhangzeyu@mail.hzau.edu.cn, lu123@webmail.hzau.edu.cn, wanshuyanzzz@163.com, swan387@aucklanduni.ac.nz,1492487431@qq.com, 1953764760@qq.com,haodong@uestc.edu.cn,liwanli@mail.hzau.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Signed graphs can model friendly or antagonistic relations where edges are annotated with a positive or negative sign. Signed Graph Neural Networks (SGNNs) have been widely used for signed graph representation learning. While significant progress has been made in SGNNs research, two issues (i.e., graph sparsity and unbalanced triangles) persist in the current SGNN models. We aim to alleviate these issues through data augmentation $(D A)$ techniques which have demonstrated effectiveness in improving the performance of graph neural networks. However, most graph augmentation methods are primarily aimed at graph-level and node-level tasks (e.g., graph classification and node classification) and cannot be directly applied to signed graphs due to the lack of side information (e.g., node features and label information) in available real-world signed graph datasets. Random DropEdge is one of the few $D A$ methods that can be directly used for signed graph data augmentation, but its effectiveness is still unknown. In this paper, we are the first to provide the generalization error bound for the SGNN model and demonstrate from both experimental and theoretical perspectives that the random DropEdge cannot improve the performance of link sign prediction. Therefore, we propose a novel Signed Graph Augmentation framework (SGA) tailored for SGNNs. Specifically, SGA first integrates a structure augmentation module to detect candidate edges solely based on network information. Furthermore, SGA incorporates a novel strategy to select beneficial candidates. Finally, SGA introduces a novel data augmentation perspective to enhance the training process of SGNNs. Experiment results on six real-world datasets demonstrate that SGA effectively boosts the performance of diverse SGNN models, achieving improvements of up to $26.2\\%$ in F1-micro for SGCN on the Slashdot dataset in the link sign prediction task. Code and data are available at https://github.com/AlexZeyu/SGA. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "As social media continues to gain widespread popularity, it fosters a multitude of interactions among individuals, which are subsequently documented within social graphs [1, 2]. While many of these social interactions denote positive connections, such as liking, trust, and friendship, there are also instances of negative interactions, encompassing feelings of hatred, distrust, and more. For instance, Slashdot [3], a tech-related news website, allows users to tag other users as either \u2018friends\u2019 or \u2018foes\u2019. Graphs that incorporate both positive and negative interactions or links are commonly termed signed graphs [4, 5]. In recent years, there has been a growing interest among researchers in exploring network representation within the context of signed graphs [6\u20138]. Most of these methods are combined with Graph Neural Networks (GNNs) [9, 10], and are therefore collectively referred to as Signed Graph Neural Networks (SGNNs) [11, 7, 12, 13]. This endeavor focuses on acquiring low-dimensional representations of nodes, with the ultimate goal of facilitating subsequent network analysis tasks, especially link sign prediction. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Despite increasing interest in SGNNs in recent years, two issues remain unresolved. First, real-world signed graph datasets are exceptionally sparse (see Table 5 from Appendix H). The sparsity of signed graphs makes downstream tasks challenging. As shown in Issue 1 (from Figure 1), without additional structure information or side information, predicting the edge sign between nodes $v_{j}$ and $v_{k}$ in the test set is difficult. However, this changes with the introduction of extra edges $(e_{i l})$ through data augmentation. Second, according to the analysis in [14], SGNNs cannot learn proper representations for nodes from unbalanced triangles. The intuitive understanding is as follows: as shown in Issue 2(c) (from Figure 1), there is a negative relationship between node $v_{i}$ and node $v_{j}$ in a onehop path, while through a two-hop path via node $v_{k}$ , it becomes a positive relationship. In other words, the relationship between node $v_{i}$ and node $v_{j}$ is uncertain, which complicates the task of SGNNs in learning representations for these three nodes. Furthermore, we notice that the proportion of unbalanced triangles is considerable (see ", "page_idx": 1}, {"type": "text", "text": "One promising approach to alleviate the aforementioned issues in SGNNs is data augmentation $(D A)$ which has been well-studied in computer vision [15\u201318] and natural language processing [19\u201321]. Recently, significant advancements have been made in graph augmentation [22\u2013 24], including node perturbation [25, 26], edge perturbation [27], and sub-graph sampling [28]. However, current graph augmentation methods cannot be directly applied to signed graphs for following reasons: 1) Some methods [22, 23] require side information (e.g., node features and labels), which are often absent in real-world signed graph datasets that only contain structural information. 2) Random structural perturbation based augmentation methods [27, 8, 29] cannot improve SGNN performance. As shown in Figure 2, random EdgeDrop cannot stably enhance SGCN performance. For more experimental results on data augmentation methods based on random structural perturbations, please refer to the Appendix A. ", "page_idx": 1}, {"type": "image", "img_path": "CDe2zBPioj/tmp/b4cd2e4f70542f7505c96a8f224e83527245be478aaab3f3f5b08ac4e9ef760d.jpg", "img_caption": ["Figure 1: Green and red lines represent positive and negative edges, resp. Solid lines represent edges in the training set, while dashed lines represent edges in the test set. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Table 3). ", "page_idx": 1}, {"type": "image", "img_path": "CDe2zBPioj/tmp/4ece176f58e719eac4e5b2476db827aa4994a3a0f47049fe15a89aec4b5976f8.jpg", "img_caption": ["Figure 2: Effectiveness of random EdgeDrop (SGCN [11] as backbone model) on link sign prediction performance with six real-world signed graph datasets. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Besides, we take a first step into developing a deeper theoretical understanding of SGNN models and deriving the generalization error bound of SGCN. Based on this analysis, we further demonstrate that randomly deleting edges increases the generalization error bound of SGNN, and therefore, it is not an effective enhancement method for SGNN (see Section 4). In summary, it is necessary to design a new $D A$ method specifically for SGNNs. ", "page_idx": 1}, {"type": "text", "text": "Overall, the designed signed graph augmentation method should address the two common obstacles encountered by popular SGNN models: ", "page_idx": 1}, {"type": "text", "text": "1. Exploring new structural information using solely network information.   \n2. Alleviate the negative impact of unbalanced triangles on SGNNs. ", "page_idx": 1}, {"type": "text", "text": "To address the aforementioned obstacles, we propose a novel Signed Graph Augmentation framework, SGA. For the first obstacle, We utilize a classic SGNN model, such as SGCN [11] to discover candidate samples. Nodes of a signed graph are first projected into embedding space. In the embedding space, following the principles of the extended structural balance theory [30], we interpret the relationships between closely proximate nodes as potential positive edges, whereas the relationships between more distant nodes are considered as potential negative edges. The newly added edges are treated as candidate samples (i.e., edges). To overcome the second obstacle, we approach it from two perspectives. Foremost, we attempt to reduce the number of existing unbalanced triangles. The candidate samples yield two outcomes: creating new edges or modifying the sign of existing edges. These operations do not reduce the number of training samples, which is consistent with the results of the theoretical analysis (see Sec. 4). Instead of directly incorporating the candidate samples into the training set, we analyze them beforehand. Only candidate samples that do not introduce new unbalanced triangles are retained. Next, we aim to reduce the training weight of edges belonging to unbalanced triangles. To achieve this, we introduce a new perspective on data augmentation, namely edge difficulty scores (see Def. 3.3). Based on this, we design a curriculum learning training strategy tailored for SGNNs, aiming to decrease the training weight of edges with high difficulty scores and increase the training weight of edges with low difficulty scores. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "To evaluate the effectiveness of SGA, we perform extensive experiments on six real-world datasets, i.e., Bitcoin-alpha, Bitcoin-otc, Epinions, Slashdot, Wiki-elec, and Wiki-RfA. We verify that our proposed framework SGA can improve the performance of baseline models. The experiment results show that SGA improves the link sign prediction accuracy of five base models, including two unsigned GNN models (GCN [9] and GAT [31]) and three signed GNN models (SGCN [11], SiGAT [32] and GS-GNN [13]) (see Table 1 and Table 6). SGA boosts up to $14.8\\%$ in terms of AUC for SGCN on Wiki-RfA, $26.2\\%$ in terms of F1-binary, $32.3\\%$ in terms of F1-micro, and $24.7\\%$ in terms of F1-macro for SGCN on Slashdot in link sign prediction, at best. These experiment results demonstrate the effectiveness of SGA. ", "page_idx": 2}, {"type": "text", "text": "Limitations. Our data augmentation method utilizes the conclusions from SGNN representation limitation based on balance theory [14]. However, it is well known that balance theory cannot model all signed graph formation patterns, as discussed in the paper [13]. Therefore, for realworld datasets that do not strongly conform to balance theory, our data augmentation may be less effective. Additionally, we have only validated our method on the primary downstream task of link sign prediction in signed graphs. Some works [33, 34] consider the clustering task for signed graphs, but these primarily use synthetic datasets and there are no real-world datasets available yet, which is why we have not conducted tests on them. ", "page_idx": 2}, {"type": "text", "text": "Overall, our contributions are summarized as follows: ", "page_idx": 2}, {"type": "text", "text": "\u2022 We are the first to provide the generalization error bound for the SGNN model. Based on this, we theoretically demonstrate the random DropEdge method, which is suitable for node classification and graph classification, is not applicable to edge-level task (i.e., link sign prediction).   \n\u2022 We propose a novel signed graph augmentation framework that alleviates the two issues (i.e., sparsity and unbalanced triangles) widely existing in SGNNs.   \n\u2022 Extensive experiments on six real-world datasets with five backbone models demonstrate the effectiveness of our framework. ", "page_idx": 2}, {"type": "text", "text": "2 Problem Statement ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "A signed graph is defined as $\\mathcal{G}\\,=\\,(\\mathcal{V},\\mathcal{E}^{+},\\mathcal{E}^{-})$ , where $\\mathcal{V}\\,=\\,\\left\\{v_{1},\\dots,v_{|\\mathcal{V}|}\\right\\}$ represents the set of nodes, and $\\mathcal{E}^{+}$ and $\\mathcal{E}^{-}$ denote the positive and negative edges, respectively. Each edge $e_{i j}\\in\\mathcal{E}^{+}\\cup$ $\\mathcal{E}^{-}$ connecting two nodes $v_{i}$ and $v_{j}$ can be either positive or negative, but not both, meaning that $\\mathcal{E}^{+}\\cap\\mathcal{E}^{-}=\\mathcal{B}$ . We use $\\sigma(e_{i j})\\in\\{\\dot{+},-\\}$ to denote the sign of $e_{i j}$ . The structure of $\\mathcal{G}$ is represented by the adjacency matrix $A\\in\\mathbb{R}^{|\\mathcal{V}|\\times|\\mathcal{V}|}$ , where each entry $A_{i j}\\in\\{1,-1,0\\}$ signifies the sign of the edge $e_{i j}$ . It\u2019s important to note that, unlike unsigned graph datasets, signed graphs typically do not provide node features, meaning there is no feature vector $x_{i}$ associated with each node $v_{i}$ . ", "page_idx": 2}, {"type": "text", "text": "Positive and negative neighbors of $v_{i}$ are denoted as $\\mathcal{N}_{i}^{+}=\\{v_{j}\\ |\\ A_{i j}>0\\}$ and $\\mathcal{N}_{i}^{-}=\\{v_{j}\\ |\\ A_{i j}<$ $0\\}$ , respectively. Let $\\mathcal{N}_{i}=\\mathcal{N}_{i}^{+}\\cup\\mathcal{N}_{i}^{-}$ be the set of neighbors of node $v_{i}$ . $\\mathcal{O}_{3}$ represents the set of triangles in the signed graph, i.e., $\\mathcal{O}_{3}^{\\ \u3001}=\\{\\{v_{i},v_{j},v_{k}\\}\\mid A_{i j}A_{j k}A_{i k}\\neq0\\}$ . A triangle $\\{v_{i},v_{j},v_{k}\\}$ is called balanced if $A_{i j}A_{j k}A_{i k}>0$ , and is called unbalanced otherwise. ", "page_idx": 2}, {"type": "image", "img_path": "CDe2zBPioj/tmp/445ed9ab0f6118021405a5ceb402a217e2b7c0f1705674de3fba44e258986865.jpg", "img_caption": ["Figure 3: The overall process of SGA. Green lines represent positive edges and red lines represent negative edges. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Problem Definition: $D_{\\mathrm{train}}$ refers to the set of train samples (edges) and $D_{\\mathrm{test}}$ refers to the set of test samples. When only given $D_{\\mathrm{train}}$ , our purpose is to design a graph augmentation strategy $\\psi:(D_{\\mathrm{train}}){\\overset{\\cdot}{\\to}}\\left(D_{\\mathrm{train}}^{\\prime},{\\mathcal F}\\right)$ , where $D_{\\mathrm{train}}^{\\prime}$ refers to augmented train edge set and $\\mathcal{F}$ refers to the newly generated edge features (i.e., edge difficulty score). ", "page_idx": 3}, {"type": "text", "text": "3 Proposed Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The overall framework of SGA is shown in Figure 3, which aims to augment training samples (i.e., edges) from a structure perspective (edge manipulation) to side information (edge feature). SGA mainly encompasses three key elements: 1) generating new training candidate samples, 2) selecting beneficial candidate samples, and 3) introducing a new feature (i.e., edge difficulty score) for training samples. For the specific procedural details of each part, please refer to Appendix C. ", "page_idx": 3}, {"type": "text", "text": "3.1 Generating Candidate Training Samples ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Real-world signed graph datasets are extremely sparse (see Table 2) with many uncovered edges. In this part, we attempt to uncover the potential relationships between nodes. We first use a SGNN model, e.g., SGCN [11], as the encoder to project nodes from topological space to embedding space. Here, the node representations are updated by aggregating information from different types of neighbors as follows: ", "page_idx": 3}, {"type": "text", "text": "For the first aggregation layer $\\ell=1$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\begin{array}{r l}&{H^{p o s(1)}=\\sigma\\left(\\mathbf{W}^{p o s(1)}\\left[A^{+}H^{(0)},H^{(0)}\\right]\\right)}\\\\ &{H^{n e g(1)}=\\sigma\\left(\\mathbf{W}^{n e g(1)}\\left[A^{-}H^{(0)},H^{(0)}\\right]\\right)}\\end{array}}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For the aggregation layer $\\ell>1$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{H^{p o s(\\ell)}=\\sigma\\left(\\mathbf{W}^{p o s(\\ell)}\\left[A^{+}H^{p o s(\\ell-1)},A^{-}H^{n e g(\\ell-1)},H^{p o s(\\ell-1)}\\right]\\right)}\\\\ &{H^{n e g(\\ell)}=\\sigma\\left(\\mathbf{W}^{n e g(\\ell)}\\left[A^{+}H^{n e g(\\ell-1)},A^{-}H^{p o s(\\ell-1)},H^{n e g(\\ell-1)}\\right]\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $H^{p o s(\\ell)}(H^{n e g(\\ell)})$ represents the positive (negative) segment of representation matrix at the \u2113th layer. $A^{+}(\\stackrel{.}{A}^{-})$ represents the row normalized matrix of the positive (negative) part of the adjacency matrix $A$ . $\\mathbf{W}^{p o s(\\ell)}\\big(\\mathbf{W}^{n e g(\\ell)}\\big)$ denotes learnable parameters of the positive (negative) part, and $\\sigma(\\cdot)$ is the activation function ReLU. [.] is the concatenation operation. After conducting messagepassing for $L$ layers, the final node representation matrix is $Z=H^{(L)}=\\left[H^{p o s(L)},H^{n e g(L)}\\right]$ . For node $v_{i}$ , the node embedding is $Z_{i}$ . As we wish to classify whether a pair of nodes has a positive, negative, or no edge between them. We train a multinomial logistic regression classifier (MLG) (as in [11]). The training loss is as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}\\left(\\theta^{\\mathrm{MLG}}\\right)=-\\frac{1}{|D_{\\mathrm{train}}|}\\sum_{\\left(v_{i},v_{j},\\sigma(e_{i j})\\right)\\in D_{\\mathrm{train}}}\\log\\frac{\\exp\\left([Z_{i},Z_{j}]\\,\\theta_{\\sigma(e_{i j})}^{\\mathrm{MLG}}\\right)}{\\Sigma_{q\\in\\{+,-,\\tau\\}}\\exp\\left([Z_{i},Z_{j}]\\,\\theta_{q}^{\\mathrm{MLG}}\\right)}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "$\\theta^{\\mathrm{MLG}}$ refers to the parameter of the MLG classifier. Using this classifier, for any two nodes $v_{i}$ , $v_{j}$ , we can calculate the probability of forming a positive or negative edge between any two nodes, denoted as $P r_{e_{i j}}^{p o s}$ and $P r_{e_{i j}}^{n e g}$ . We set up four probability threshold hyper-parameters, namely the probability threshold for adding positive edges $(\\epsilon_{a d d}^{+})$ , the probability threshold for adding negative edges $(\\epsilon_{a d d}^{-})$ , the probability threshold for deleting positive edges $(\\epsilon_{d e l}^{+})$ and the probability threshold for deleting negative edges $(\\epsilon_{d e l}^{-})$ . Subsequently, we employ the following strategy to generate candidate training samples: ", "page_idx": 4}, {"type": "text", "text": "Dtcraanind .add and Dtcraanind .d refer to the candidate training set for adding edges and the candidate training set for deleting edges. ", "page_idx": 4}, {"type": "text", "text": "3.2 Selecting Beneficial Candidate Training Samples ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "After obtaining candidates, we do not merge them into the training set directly. Instead, we select the beneficial portions based on some rules. According to [14], it proves SGNNs cannot learn proper representations from unbalanced triangles (see Figure 1). The intuitive insight from this conclusion for signed graph augmentation is that beneficial candidates should not lead to new unbalanced triangles. Therefore, after generating candidate training set tcraanind .add and Dtcraanind .d el, we need to discern which operations are beneficial or not. Considering that removing edges will not introduce new unbalanced triangles, it can be directly applied to the training set. However, adding edges may potentially introduce unbalanced triangles, so it needs to be analyzed whether it should be applied to the training set. The specific criteria are as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\forall\\left(v_{i},v_{j},\\sigma(e_{i j})\\right)\\in D_{\\mathrm{train.del}}^{\\mathrm{cand.}},D_{\\mathrm{train}}\\setminus\\{(v_{i},v_{j},\\sigma(e_{i j}))\\};\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "According to the above steps, we have merged the tcraanind .add and Dtcraanind .d into the training set $D_{\\mathrm{train}}$ ", "page_idx": 4}, {"type": "text", "text": "3.3 Introducing New Feature for Training Samples ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this part, we attempt to alleviate the negative impact of unbalanced triangles on SGNNs from another perspective by augmenting a new feature for training samples (i.e., edges), namely edge difficulty score. Intuitively, edges belonging to unbalanced triangles have higher difficulty scores, while those belonging to balanced triangles have lower difficulty scores. Based on the difficulty scores, we design a curriculum learning-based training plan, aiming to reduce the training weights of edges with high difficulty scores, thereby mitigating the negative impact of unbalanced triangles on SGNNs. ", "page_idx": 4}, {"type": "text", "text": "We provide a definition of global and local balance degree: ", "page_idx": 4}, {"type": "text", "text": "Definition 3.1. The Global Balance Degree [35] of a signed graph is defined by: ", "page_idx": 4}, {"type": "equation", "text": "$$\nD_{3}(\\mathcal{G})=\\frac{\\lvert\\mathcal{O}_{3}^{+}\\rvert}{\\lvert\\mathcal{O}_{3}\\rvert}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $O_{3}$ represents the set of triangles, ${\\mathcal{O}}_{3}^{+}$ represents the set of balanced triangles. $\\big|\\cdot\\big|$ represents the set cardinal number. ", "page_idx": 4}, {"type": "text", "text": "Definition 3.2 (Local Balance Degree). For edge $e_{i j}$ , the local balance degree is defined by: ", "page_idx": 4}, {"type": "equation", "text": "$$\nD_{3}(e_{i j})=\\frac{|\\mathcal{O}_{3}^{+}(e_{i j})|-|\\mathcal{O}_{3}^{-}(e_{i j})|}{|\\mathcal{O}_{3}^{+}(e_{i j})|+|\\mathcal{O}_{3}^{-}(e_{i j})|}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathcal{O}_{3}^{+}(e_{i j})\\left(\\mathcal{O}_{3}^{-}(e_{i j})\\right)$ represents the set of balanced (unbalanced) triangles containing edge $e_{i j}$ .   \n$|\\cdot|$ represents the set cardinal number. ", "page_idx": 4}, {"type": "text", "text": "From Def. 3.2, we can observe that the edge\u2019s local balance degree is related to the count of balanced and unbalanced triangles that include this edge. Based on this, we can define the edge difficulty score: ", "page_idx": 5}, {"type": "text", "text": "Definition 3.3 (Edge Difficulty Score). For edge $e_{i j}$ , the difficulty score is defined by: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathrm{Score}(e_{i j})=\\frac{1-D_{3}(e_{i j})}{2}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $D_{3}(e_{i j})$ denotes the local balance degree of edge $v_{i j}$ . ", "page_idx": 5}, {"type": "text", "text": "Upon quantifying the difficulty scores for each edge within the training set, a curriculum-based training approach is applied to enhance the performance of the SGNN model. This curriculum is fashioned following the principles outlined in [36], which enables the creation of a structured progression from easy to difficult. The process entails initially sorting the training set $\\mathcal{E}$ in ascending order based on their respective difficulty scores. Subsequently, a pacing function $g(t)$ is employed to allocate these edges to distinct training epochs, transitioning from easier to more challenging samples, where $t$ signifies the $t$ -th epoch. we use a linear pacing function as shown below: ", "page_idx": 5}, {"type": "equation", "text": "$$\ng(t)=\\mathrm{min}\\left(1,\\lambda_{0}+(1-\\lambda_{0})*\\frac{t}{T}\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "$\\lambda_{0}$ denotes the initial proportion of the easiest examples available, and $T$ indicates the training epoch at which $g(t)$ reaches value 1. The process of SGA is detailed in Appendix $\\mathrm{D}$ . ", "page_idx": 5}, {"type": "text", "text": "4 Generalization Bound of SGNN ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we are going to prove the generalization error bound for SGNN. Our results show that the generalization performance of the model is affected by the number of edges. A larger number of edges in the training set usually generalizes better, which means that dropout cannot always contribute to improving the model\u2019s generalization ability in many situations. For the basic setup and assumptions, please see the Appendix E. ", "page_idx": 5}, {"type": "text", "text": "Main Result. Under link prediction task, we denote $A_{D}$ as a learning algorithm trained on dataset $D$ . According to Algorithm 2, we can set $A_{D}=\\sigma(f(z_{i},z_{j},w))$ , the generalization gap is defined as the difference between training error and test error: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\delta_{g e n}=E_{A}[R\\left(A_{D_{t r a i n}}\\right)-R(A_{D_{t e s t}})]}\\\\ {\\delta_{g e n}\\le\\Psi\\left(\\beta,\\theta,\\displaystyle\\frac{1}{n_{t}},L\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Theorem 1 (Generalization Gap of SGNN). ", "text_level": 1, "page_idx": 5}, {"type": "equation", "text": "$$\n\\delta_{g e n}\\le2\\alpha_{L}^{x}+\\frac{\\sqrt{2}\\alpha_{L}^{y}M\\beta(\\theta+t\\eta\\alpha_{L}^{x}\\alpha_{f}\\beta)}{n_{t}}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here $\\beta$ refers to the infinite norm of the matrix $Z\\,\\,,\\,\\theta$ refers to paradigm of initial weight matrix $\\|w_{i n i t}\\|$ . The generalization ability is mainly influenced by scale of the graph(the number of nodes and edges) and the norm of weights matrix. In the main result, $\\alpha_{\\sigma},\\alpha_{g}$ , $M$ are constants determined by the non-linear activation function, function $g$ and function $f$ respectively. ", "page_idx": 5}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we commence by assessing the enhancements brought about by SGA in comparison to diverse backbone models for the link sign prediction task. We will answer the following questions: ", "page_idx": 5}, {"type": "text", "text": "\u2022 Q1: Can SGA improve the performance of backbone models? Does SGA effectively alleviate issues related to graph sparsity and the presence of unbalanced triangles?   \n\u2022 Q2: Does each part of the SGA framework play a positive role?   \n\u2022 Q3: Is the proposed method sensitive to hyper-parameters? How do key hyper-parameters impact the method performance? ", "page_idx": 5}, {"type": "text", "text": "For an introduction and statistical information on the datasets, please refer to the Appendix H. For details on baselines and experimental settings, please also see the Appendix I. ", "page_idx": 5}, {"type": "table", "img_path": "CDe2zBPioj/tmp/9ae295ad0ed3a31037acff33f001b6c5699528fa1034dec0b43743ec2e559305.jpg", "table_caption": ["Table 1: Link sign prediction results (average $\\pm$ standard deviation) with AUC $(\\%)$ and F1-binary $(\\%)$ on six benchmark datasets. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "CDe2zBPioj/tmp/a70252ff9f63d604707714b9de8f83b7ccbc5eb5572bd99475ad4641c7f8da6e.jpg", "table_caption": ["Table 2: Density of original graph and after augmentation. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "5.1 Performance Evaluation (Q1) ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To comprehensively evaluate the performance of our proposed SGA, we contrast it with several baseline configurations that exclude SGA integration on link sign prediction. For a detailed view, AUC and F1-binary score results are presented in Table 1. Further, F1-macro and F1-micro can be referenced in Appendix J. For each model, the mean AUC and F1-binary scores, along with their respective standard deviations, are documented. These metrics are derived from five independent runs on each dataset, utilizing distinct, non-overlapping splits: $80\\%$ of the edges are used for training, while the residual $20\\%$ serve as the test set. Additionally, the table elucidates the percentage improvement in these metrics attributable to the integration of SGA, relative to the baseline models without SGA. The results provide several insights: ", "page_idx": 6}, {"type": "text", "text": "\u2022 Our investigations affirm that the SGA framework serves as an effective method in augmenting the performance of both signed and unsigned graph neural networks. \u2022 For unsigned GNN models (GCN, GAT), the SGA method can effectively enhance the predictive performance (Some metrics show an improvement of over $10\\%$ .), possibly because both signed GNN and unsigned GNN models are based on a similar message-passing mechanism. ", "page_idx": 6}, {"type": "text", "text": "\u2022 Concerning the signed GNN models (SGCN, SiGAT, GS-GNN), we observed that SGA significantly enhances SGCN SiGAT compared to GS-GNN. The reason for this might be that SGA primarily focuses on mitigating the impact of unbalanced triangles on the model\u2019s predictive performance. Both SGCN and SiGAT are designed based on balance theory, making them more susceptible to the influence of unbalanced triangles, whereas GS-GNN is not, and therefore, it is less affected by unbalanced triangles. This indirectly reflects that SGA indeed alleviates the negative impact caused by unbalanced triangles to some extent. ", "page_idx": 6}, {"type": "text", "text": "Next, we will verify whether SGA effectively addresses the two issues in signed graph representation learning based on SGNN. Regarding the dataset density, we conducted a statistical analysis, as shown in Table 2. From the statistical results, it can be observed that after augmentation through the SGA method, the density of all six real-world datasets has increased, indicating a certain improvement in data sparsity issues. ", "page_idx": 6}, {"type": "text", "text": "Regarding unbalanced triangles, we conduct a statistical analysis, as shown in Table 3. The calculation of balance degree is based on Definition 3.1. From the statistical results, it can be seen that in most cases, SGA indeed reduces the number of unbalanced triangles, improving the balance degree of real-world datasets. ", "page_idx": 6}, {"type": "text", "text": "In addition to the statistical results, we also validated the effectiveness of SGA through the case study illustrated in Figure 4. Both of these two cases are from Bitcoin-alpha dataset. Case 1 verifies that SGA, by exploring latent structures, assists SGCN in correctly predicting the sign of edge ", "page_idx": 6}, {"type": "text", "text": "Table 3: The balance degree of original datasets and after augmentation. BT refers to balanced triangle, UT refers to unbalanced triangle, BD refers to balance degree (see Def. 3.1). ", "page_idx": 7}, {"type": "image", "img_path": "CDe2zBPioj/tmp/2915917a3f163110414d49478eb068ebee05cf667239da5334306a5939c76eba.jpg", "img_caption": ["Figure 4: Case Study of SGA. Note that green lines denote positive edges and red lines denote negative edges. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "$(e_{144,130},e_{130,147})$ that are originally mispredicted. Case 2 indicates that SGA, by changing the signs of edges $(e_{67,12})$ in existing structures, reduces the impact of unbalanced triangles, allowing the model to achieve correct prediction results $(e_{67,1536})$ . ", "page_idx": 7}, {"type": "text", "text": "5.2 Ablation Study (Q2) ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we explore how different parts of SGA, contribute to its overall effectiveness. We do this by testing the SGCN [11] under various settings: ", "page_idx": 7}, {"type": "text", "text": "\u2022 SGCN: Here, we use the SGCN in its basic form. It works directly on the original graph data without any additional techniques or modifications.   \n\u2022 $\\mathbf{+SA}$ (Structure Augmentation, refer to Sec. 3.1 and Sec. 3.2): SGCN operates on augmented datasets. This augmentation involves the addition or removal of edges from the initial graph.   \n\u2022 $\\mathbf{+TP}$ (Training Plan, refer to Sec. 3.3): SGCN runs on the original graph but with a modified training paradigm. Adopting a curriculum learning approach, we rank edges by their difficulty. The model is then progressively exposed to these edges, transitioning from simpler to more challenging ones as training epochs progress.   \n\u2022 $\\mathbf{+SGA}$ (Combining both the structural augmentation and the tailored training plan) The SGCN runs on augmented graph using a curriculum learning training plan. ", "page_idx": 7}, {"type": "text", "text": "Our thorough ablation study, detailed in Table 4 and conducted across six benchmark datasets, reveals several insights: ", "page_idx": 7}, {"type": "text", "text": "\u2022 Importance of Structural Augmentation: This strategy proves crucial for improving model performance. In almost all cases, using only structural augmentation leads to better results than the baseline model, which is trained on the unmodified graph without any specific training strategy.   \n\u2022 Effect of the Training Plan Alone: Implementing just the training plan, without other modifications, yields a smaller performance improvement compared to using structural augmentation alone.   \n\u2022 Combined Advantages of Training Plan and Data Augmentation: Combining the training plan with structural augmentation often enhances the benefits of each approach, yielding the largest performance gain on most of the datasets. ", "page_idx": 7}, {"type": "table", "img_path": "CDe2zBPioj/tmp/e55824f1fde6278ef1899a5e8919922bf6dd59ccf6c7f09f6dafb3da2a0dd08c.jpg", "table_caption": ["Table 4: The ablation study results of using different components of SGA. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.3 Parameter Sensitivity Analysis (Q3) ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this subsection, we perform a sensitivity analysis focusing on six hyper-parameters: $\\epsilon_{d e l}^{\\bar{+}},\\;\\epsilon_{d e l}^{-},\\;\\epsilon_{a d d}^{+},\\;\\epsilon_{a d d}^{-}$ (these denote the probability thresholds for adding or removing positive/negative edges); $T$ represents the number of intervals during the training process where more challenging edges are incrementally added to the training set; and $\\lambda_{0}$ designates the initial fraction of the easiest examples. Performance metrics for the SGCN model within the SGA framework, as measured by AUC across various hyper-parameter configurations, is illustrated in Figures 5. F1-binary, F1-macro and F1-micro scores are illustrated in Appendix K. ", "page_idx": 8}, {"type": "image", "img_path": "CDe2zBPioj/tmp/5772068988871d6c35479050a7ffad517a5eea2783728a2c2d5ecd26b633eff2.jpg", "img_caption": ["Figure 5: Performance of SGCN: AUC scores (with standard deviation) across six benchmark datasets, evaluated under variations in parameters $\\epsilon_{d e l}^{+}$ , $\\epsilon_{d e l}^{-}$ , $\\epsilon_{a d d}^{+}$ , $\\epsilon_{a d d}^{-}$ , $T$ and $\\lambda_{0}$ . "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "The figures reveal divergent patterns in AUC and F1 scores based on hyperparameter adjustments, with SGCN showing more significant variations on the Slashdot dataset compared to others. On a broader scale, the AUC is fairly consistent with changes to $\\epsilon_{d e l}^{+}$ and $\\epsilon_{a d d}^{-}$ . Notably, as $\\epsilon_{d e l}^{-}$ or $\\epsilon_{a d d}^{+}$ rise, there\u2019s a tendency for the AUC to augment. Interestingly, AUC initially increases and then experiences a slight dip as $\\lambda_{0}$ rises. Regarding the F1 score, it is less sensitive to changes in $\\epsilon_{a d d}^{-}$ , $T$ , and $\\lambda_{0}$ , except for the case of the Slashdot dataset. In general, an increase in $\\epsilon_{d e l}^{-}$ and $\\epsilon_{a d d}^{+}$ boosts the F1 score. However, for $\\epsilon_{d e l}^{+}$ , the optimal value can differ across datasets, typically lying between 0.1 and 0.4. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we introduce the Signed Graph Augmentation framework (SGA), a novel approach designed to address two prominent issues in existing signed graph neural networks, namely, data sparsity and unbalanced triangles. This framework has three main components: generating candidate training samples, selecting beneficial candidate training samples, and introducing a new feature (edge difficulty score) for training samples. Based on this new feature, we have designed a curriculum learning framework tailored for SGNNs. Through extensive experiments on benchmark datasets, our SGA framework proves its effectiveness in boosting various models. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by the Fundamental Research Funds for the Central Universities, China [Project 2662023XXQD003, 2662023XXQD002]. We express our gratitude to Xingyu Ji and Jiale Liu, undergraduate students from the Class of 2022 at the Information College of Huazhong Agricultural University, for their assistance in conducting additional experiments during the rebuttal phase. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Jure Leskovec, Daniel Huttenlocher, and Jon Kleinberg. Predicting positive and negative links in online social networks. In Proceedings of the 19th international conference on World wide web, pages 641\u2013650, 2010.   \n[2] Srijan Kumar, William L Hamilton, Jure Leskovec, and Dan Jurafsky. Community interaction and conflict on the web. In Proceedings of the 2018 world wide web conference, pages 933\u2013 943, 2018.   \n[3] Jure Leskovec, Kevin J Lang, Anirban Dasgupta, and Michael W Mahoney. Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters. Internet Mathematics, 6(1):29\u2013123, 2009.   \n[4] Tyler Derr. Network analysis with negative links. In Proceedings of the 13th international conference on web search and data mining, pages 917\u2013918, 2020.   \n[5] Jiliang Tang, Yi Chang, Charu Aggarwal, and Huan Liu. A survey of signed network mining in social media. ACM Computing Surveys (CSUR), 49(3):1\u201337, 2016.   \n[6] Suhang Wang, Jiliang Tang, Charu Aggarwal, Yi Chang, and Huan Liu. Signed network embedding in social media. In Proceedings of the 2017 SIAM international conference on data mining, pages 327\u2013335. SIAM, 2017.   \n[7] Yu Li, Yuan Tian, Jiawei Zhang, and Yi Chang. Learning signed network embedding via graph attention. In Proceedings of the AAAI Conference on Artificial Intelligence, pages 4772\u20134779, 2020.   \n[8] Lin Shu, Erxin Du, Yaomin Chang, Chuan Chen, Zibin Zheng, Xingxing Xing, and Shaofeng Shen. Sgcl: Contrastive representation learning for signed graphs. In Proceedings of the 30th ACM International Conference on Information & Knowledge Management, pages 1671\u20131680, 2021.   \n[9] Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. arXiv preprint arXiv:1609.02907, 2016.   \n[10] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.   \n[11] Tyler Derr, Yao Ma, and Jiliang Tang. Signed graph convolutional networks. In 2018 IEEE International Conference on Data Mining (ICDM), pages 929\u2013934. IEEE, 2018.   \n[12] Junjie Huang, Huawei Shen, Liang Hou, and Xueqi Cheng. Sdgnn: Learning node representation for signed directed networks. arXiv preprint arXiv:2101.02390, 2021.   \n[13] Haoxin Liu, Ziwei Zhang, Peng Cui, Yafeng Zhang, Qiang Cui, Jiashuo Liu, and Wenwu Zhu. Signed graph neural network with latent groups. In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data Mining, pages 1066\u20131075, 2021.   \n[14] Zeyu Zhang, Jiamou Liu, Xianda Zheng, Yifei Wang, Pengqian Han, Yupan Wang, Kaiqi Zhao, and Zijian Zhang. Rsgnn: A model-agnostic approach for enhancing the robustness of signed graph neural networks. In Proceedings of the ACM Web Conference 2023, pages 60\u201370, 2023.   \n[15] Terrance DeVries and Graham W Taylor. Improved regularization of convolutional neural networks with cutout. arXiv preprint arXiv:1708.04552, 2017.   \n[16] Daniel Ho, Eric Liang, Xi Chen, Ion Stoica, and Pieter Abbeel. Population based augmentation: Efficient learning of augmentation policy schedules. In International conference on machine learning, pages 2731\u20132741. PMLR, 2019.   \n[17] Zifan Song, Xiao Gong, Guosheng Hu, and Cairong Zhao. Deep perturbation learning: Enhancing the network performance via image perturbations. In International Conference on Machine Learning, pages 32273\u201332287. PMLR, 2023.   \n[18] Mathilde Caron, Ishan Misra, Julien Mairal, Priya Goyal, Piotr Bojanowski, and Armand Joulin. Unsupervised learning of visual features by contrasting cluster assignments. Advances in Neural Information Processing Systems, 33:9912\u20139924, 2020.   \n[19] Mengzhou Xia, Xiang Kong, Antonios Anastasopoulos, and Graham Neubig. Generalized data augmentation for low-resource translation. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5786\u20135796, 2019.   \n[20] Go\u00a8zde Gu\u00a8l \u00b8Sahin and Mark Steedman. Data augmentation via dependency tree morphing for low-resource languages. arXiv preprint arXiv:1903.09460, 2019.   \n[21] Alexander Richard Fabbri, Simeng Han, Haoyuan Li, Haoran Li, Marjan Ghazvininejad, Shafiq Joty, Dragomir Radev, and Yashar Mehdad. Improving zero and few-shot abstractive summarization with intermediate fine-tuning and data augmentation. In Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 704\u2013717, 2021.   \n[22] Tong Zhao, Yozen Liu, Leonardo Neves, Oliver Woodford, Meng Jiang, and Neil Shah. Data augmentation for graph neural networks. In Proceedings of the aaai conference on artificial intelligence, volume 35, pages 11015\u201311023, 2021.   \n[23] Xiaotian Han, Zhimeng Jiang, Ninghao Liu, and Xia Hu. G-mixup: Graph data augmentation for graph classification. In International Conference on Machine Learning, pages 8230\u20138248. PMLR, 2022.   \n[24] Songtao Liu, Rex Ying, Hanze Dong, Lanqing Li, Tingyang Xu, Yu Rong, Peilin Zhao, Junzhou Huang, and Dinghao Wu. Local augmentation for graph neural networks. In International Conference on Machine Learning, pages 14054\u201314072. PMLR, 2022.   \n[25] Yuning You, Tianlong Chen, Yongduo Sui, Ting Chen, Zhangyang Wang, and Yang Shen. Graph contrastive learning with augmentations. Advances in Neural Information Processing Systems, 33:5812\u20135823, 2020.   \n[26] Wenbing Huang, Tong Zhang, Yu Rong, and Junzhou Huang. Adaptive sampling towards fast graph representation learning. Advances in neural information processing systems, 31, 2018.   \n[27] Yu Rong, Wenbing Huang, Tingyang Xu, and Junzhou Huang. Dropedge: Towards deep graph convolutional networks on node classification. In International Conference on Learning Representations, 2019.   \n[28] Yiwei Wang, Wei Wang, Yuxuan Liang, Yujun Cai, and Bryan Hooi. Graphcrop: Subgraph cropping for graph classification. arXiv preprint arXiv:2009.10564, 2020.   \n[29] Zeyu Zhang, Jiamou Liu, Kaiqi Zhao, Song Yang, Xianda Zheng, and Yifei Wang. Contrastive learning for signed bipartite graphs. In Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 1629\u20131638, 2023.   \n[30] Marek Cygan, Marcin Pilipczuk, Micha\u0142 Pilipczuk, and Jakub Onufry Wojtaszczyk. Sitting closer to friends than enemies, revisited. In International Symposium on Mathematical Foundations of Computer Science, pages 296\u2013307. Springer, 2012.   \n[31] Petar Velickovic, William Fedus, William L Hamilton, Pietro Lio\\`, Yoshua Bengio, and R Devon Hjelm. Deep graph infomax. ICLR (Poster), 2(3):4, 2019.   \n[32] Junjie Huang, Huawei Shen, Liang Hou, and Xueqi Cheng. Signed graph attention networks. In International Conference on Artificial Neural Networks, pages 566\u2013577. Springer, 2019.   \n[33] Yixuan He, Gesine Reinert, Songchao Wang, and Mihai Cucuringu. Sssnet: Semi-supervised signed network clustering. In Proceedings of the 2022 SIAM International Conference on Data Mining (SDM), pages 244\u2013252. SIAM, 2022.   \n[34] Pedro Mercado, Francesco Tudisco, and Matthias Hein. Spectral clustering of signed graphs via matrix power means. In International Conference on Machine Learning, pages 4526\u20134536. PMLR, 2019.   \n[35] Samin Aref and Mark C Wilson. Measuring partial balance in signed networks. Journal of Complex Networks, 6(4):566\u2013595, 2018.   \n[36] Xiaowen Wei, Xiuwen Gong, Yibing Zhan, Bo Du, Yong Luo, and Wenbin Hu. Clnode: Curriculum learning for node classification. In Proceedings of the Sixteenth ACM International Conference on Web Search and Data Mining, pages 670\u2013678, 2023.   \n[37] Yiqi Chen, Tieyun Qian, Huan Liu, and Ke Sun. \u201d bridge\u201d enhanced signed directed network embedding. In Proceedings of the 27th acm international conference on information and knowledge management, pages 773\u2013782, 2018.   \n[38] Hongwei Wang, Fuzheng Zhang, Min Hou, Xing Xie, Minyi Guo, and Qi Liu. Shine: Signed heterogeneous information network embedding for sentiment link prediction. In Proceedings of the eleventh ACM international conference on web search and data mining, pages 592\u2013600, 2018.   \n[39] Lu Li, Jiale Liu, Xingyu Ji, Maojun Wang, and Zeyu Zhang. Se-sgformer: A self-explainable signed graph transformer for link sign prediction. arXiv preprint arXiv:2408.08754, 2024.   \n[40] Fang He, Jinhai Deng, Ruizhan Xue, Maojun Wang, and Zeyu Zhang. Mitigating degree bias in signed graph neural networks. arXiv preprint arXiv:2408.08508, 2024.   \n[41] Jiliang Tang, Charu Aggarwal, and Huan Liu. Node classification in signed social networks. In Proceedings of the 2016 SIAM international conference on data mining, pages 54\u201362. SIAM, 2016.   \n[42] Jinhong Jung, Woojeong Jin, Lee Sael, and U Kang. Personalized ranking in signed networks using signed random walk with restart. In 2016 IEEE 16th International Conference on Data Mining (ICDM), pages 973\u2013978. IEEE, 2016.   \n[43] Francesco Bonchi, Edoardo Galimberti, Aristides Gionis, Bruno Ordozgoiti, and Giancarlo Ruffo. Discovering polarized communities in signed networks. In Proceedings of the 28th acm international conference on information and knowledge management, pages 961\u2013970, 2019.   \n[44] Shuhan Yuan, Xintao Wu, and Yang Xiang. Sne: signed network embedding. In Pacific-Asia conference on knowledge discovery and data mining, pages 183\u2013195. Springer, 2017.   \n[45] Junghwan Kim, Haekyu Park, Ji-Eun Lee, and U Kang. Side: representation learning in signed directed networks. In Proceedings of the 2018 World Wide Web Conference, pages 509\u2013518, 2018.   \n[46] Jinhong Jung, Jaemin Yoo, and U Kang. Signed graph diffusion network. arXiv preprint arXiv:2012.14191, 2020.   \n[47] Amin Javari, Tyler Derr, Pouya Esmailian, Jiliang Tang, and Kevin Chen-Chuan Chang. Rose: Role-based signed network embedding. In Proceedings of The Web Conference 2020, pages 2782\u20132788, 2020.   \n[48] Petar Velic\u02c7kovic\u00b4, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua Bengio. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017.   \n[49] Hyeonjin Park, Seunghun Lee, Sihyeon Kim, Jinyoung Park, Jisu Jeong, Kyung-Min Kim, Jung-Woo Ha, and Hyunwoo J Kim. Metropolis-hastings data augmentation for graph neural networks. Advances in Neural Information Processing Systems, 34:19010\u201319020, 2021.   \n[50] Hongyi Ling, Zhimeng Jiang, Meng Liu, Shuiwang Ji, and Na Zou. Graph mixup with soft alignments. In International Conference on Machine Learning, pages 21335\u201321349. PMLR, 2023.   \n[51] Lu Lin, Jinghui Chen, and Hongning Wang. Spectral augmentation for self-supervised learning on graphs. In The Eleventh International Conference on Learning Representations.   \n[52] Yutong Xia, Runpeng Yu, Yuxuan Liang, Xavier Bresson, Xinchao Wang, and Roger Zimmermann. Through the dual-prism: A spectral perspective on graph data augmentation for graph classification. arXiv preprint arXiv:2401.09953, 2024.   \n[53] Kaize Ding, Zhe Xu, Hanghang Tong, and Huan Liu. Data augmentation for deep graph learning: A survey. ACM SIGKDD Explorations Newsletter, 24(2):61\u201377, 2022.   \n[54] Yanqiao Zhu, Yichen Xu, Feng Yu, Qiang Liu, Shu Wu, and Liang Wang. Graph contrastive learning with adaptive augmentation. In Proceedings of the Web Conference 2021, pages 2069\u2013 2080, 2021.   \n[55] Yuning You, Tianlong Chen, Yang Shen, and Zhangyang Wang. Graph contrastive learning automated. In International Conference on Machine Learning, pages 12121\u201312132. PMLR, 2021.   \n[56] Dongsheng Luo, Wei Cheng, Wenchao Yu, Bo Zong, Jingchao Ni, Haifeng Chen, and Xiang Zhang. Learning to drop: Robust graph neural network via topological denoising. In Proceedings of the 14th ACM International Conference on Web Search and Data Mining, pages 779\u2013787, 2021.   \n[57] Zhe Xu, Boxin Du, and Hanghang Tong. Graph sanitation with application to node classification. In Proceedings of the ACM Web Conference 2022, pages 1136\u20131147, 2022.   \n[58] Cheng Zheng, Bo Zong, Wei Cheng, Dongjin Song, Jingchao Ni, Wenchao Yu, Haifeng Chen, and Wei Wang. Robust graph representation learning via neural sparsification. In International Conference on Machine Learning, pages 11458\u201311468. PMLR, 2020.   \n[59] Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical risk minimization. arXiv preprint arXiv:1710.09412, 2017.   \n[60] Vikas Verma, Meng Qu, Kenji Kawaguchi, Alex Lamb, Yoshua Bengio, Juho Kannala, and Jian Tang. Graphmix: Improved training of gnns for semi-supervised learning. In Proceedings of the AAAI conference on artificial intelligence, volume 35, pages 10024\u201310032, 2021.   \n[61] Yanqiao Zhu, Yichen Xu, Feng Yu, Qiang Liu, Shu Wu, and Liang Wang. Deep graph contrastive representation learning. arXiv preprint arXiv:2006.04131, 2020.   \n[62] Tianxiang Zhao, Xiang Zhang, and Suhang Wang. Graphsmote: Imbalanced node classification on graphs with graph neural networks. In Proceedings of the 14th ACM international conference on web search and data mining, pages 833\u2013841, 2021.   \n[63] Johannes Gasteiger, Stefan Wei\u00dfenberger, and Stephan Gu\u00a8nnemann. Diffusion improves graph learning. Advances in neural information processing systems, 32, 2019.   \n[64] Xianchen Zhou and Hongxia Wang. The generalization error of graph convolutional networks may enlarge with more layers. Neurocomputing, 424:97\u2013106, 2021.   \n[65] Srijan Kumar, Francesca Spezzano, VS Subrahmanian, and Christos Faloutsos. Edge weight prediction in weighted signed networks. In 2016 IEEE 16th International Conference on Data Mining (ICDM), pages 221\u2013230. IEEE, 2016.   \n[66] Srijan Kumar, Bryan Hooi, Disha Makhija, Mohit Kumar, Christos Faloutsos, and VS Subrahmanian. Rev2: Fraudulent user prediction in rating platforms. In Proceedings of the Eleventh ACM International Conference on Web Search and Data Mining, pages 333\u2013341. ACM, 2018.   \n[67] Jure Leskovec, Daniel Huttenlocher, and Jon Kleinberg. Signed networks in social media. In Proceedings of the SIGCHI conference on human factors in computing systems, pages 1361\u2013 1370, 2010.   \n[68] Robert West, Hristo S Paskov, Jure Leskovec, and Christopher Potts. Exploiting social network structure for person-to-person sentiment analysis. Transactions of the Association for Computational Linguistics, 2:297\u2013310, 2014.   \n[69] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information processing systems, 32, 2019.   \n[70] Matthias Fey and Jan E. Lenssen. Fast graph representation learning with PyTorch Geometric. In ICLR Workshop on Representation Learning on Graphs and Manifolds, 2019.   \n[71] Junjie Huang, Huawei Shen, Qi Cao, Shuchang Tao, and Xueqi Cheng. Signed bipartite graph neural networks. In Proceedings of the 30th ACM International Conference on Information & Knowledge Management, pages 740\u2013749, 2021. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "image", "img_path": "CDe2zBPioj/tmp/e0d2e549ad3a6e87fe8fa001142beab1880100c8bca31fd18630e751a84f5ee0.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Figure 6: Effectiveness of data augmentation through random structural perturbations (SGCN [11] as backbone model) on link sign prediction performance. (a) Randomly increasing or decreasing positive edges. (b) Randomly increasing or decreasing negative edges. (c) Randomly flipping the sign of edges. ", "page_idx": 14}, {"type": "text", "text": "A Experimental results of data augmentation through random structural perturbations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We employ three different random methods (random addition/removal of positive edges, random addition/removal of negative edges, and random sign-flipping of existing edges) were tested with the classic SGNN model, SGCN [11]. As is Shown in Figure 6, The results indicate that these random methods do not enhance SGCN performance, suggesting that data augmentation methods used in signed graph contrastive learning models [8, 29] do not readily extend to general SGNNs not using a contrastive learning paradigm. ", "page_idx": 14}, {"type": "text", "text": "B Related Work ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we will introduce two aspects related to this paper: signed graph neural networks and graph data augmentation. ", "page_idx": 14}, {"type": "text", "text": "B.1 Signed Graph Neural Networks ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Due to the widespread popularity of social media ,signed networks have become ubiquitous .Therefore, the network representation of signed graphs has gained significant attention[37, 38, 29, 14, 39, 40]. Existing research has predominantly concentrated on tasks related to link sign prediction, while overlooking other crucial tasks like node classification [41], node ranking [42], and community detection [43]. Some signed graph embedding techniques, such as SNE [44], SIDE [45], SGDN [46], and ROSE [47], utilize random walks and linear probability methods to capture the positive and negative relationships within graphs.These techniques consider complex interactions between nodes when processing graph data, but they may not be sufficient to capture deep-seated relationships in signed graphs. With the further exploration of signed graphs, neural networks have also been applied to signed graph representation learning in recent years. There are some SGNN models based on GCN [9].For example,the first Signed Graph Neural Network (SGNN), SGCN [11], generalizes GCN to signed graphs by utilizing balance theory to correctly aggregate and propagate the information across layers of a signed GCN model. Another noteworthy GCN-based approach is GS-GNN, which moves beyond the traditional balance theory by categorizing nodes into multiple groups. Additionally, there are SGNN models based on GAT [48] such as SiGAT [32], SNEA [7], SDGNN [12], and SGCL [8],which further enhance the ability to identify the varying levels of importance of nodes in the graph by introducing attention mechanisms. Unlike the above methods dedicated to developing more advanced SGNN models, we introduce a plugin to enhance the performance of SGNNs. ", "page_idx": 14}, {"type": "text", "text": "B.2 Graph Data Augmentation ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "With the rapid development of graph neural networks, there has been a growing interest and demand for graph data augmentation techniques. To address issues such as data sparsity and noise in graphs, many research studies have focused on enhancing graph data augmentation techniques [49, 23, 24, 50\u201352]. According to a survey of graph data augmentation [53], graph augmentation methods can be classified into three types, i.e., feature-wise [24, 54, 55], structure-wise [56\u201358] and label-wise [59, 60]. Feature-wise augmentation methods primarily involve modifying, creating, or merging new features to enhance graph data. For example,LAGNN [24] operates by using a generative model that takes into account the localized neighborhood information of a target node to enrich the node\u2019s features. Other feature-wise methods [61, 25] generate augmented node features by random shuffling. Structure-wise augmentation methods target at modifying edges and nodes (e.g., randomly adding or deleting edges) to simulate different graph structures. GAUG [22] employs neural edge predictors that can effectively encode class-homophilic structure to promote intra-class edges and demote inter-class edges in a given graph structure. GraphSMOTE [62] inserts nodes to enrich the minority classes. Graph diffusion method (GDC [63]) can generate an augmented graph by providing global views of the underlying structure. Label-wise augmentation methods aim at augmenting the limited labeled training data,especially in cases where labeled data is scarce in graph data . G-Mixup [23] augment graphs for graph classification by interpolating the generator (i.e., graphon) of different classes of graphs.Note that these existing data augmentation methods rely on additional information such as node features and labels. However, the absence of key information such as node features and labels in signed graphs limits the applicability of traditional data augmentation techniques to SGNN. Therefore, it is necessary to develop data augmentation strategies tailored for signed graphs. ", "page_idx": 14}, {"type": "image", "img_path": "CDe2zBPioj/tmp/65acfe3a3b9b8f2b7b38b13b0e9419ee0b8894513d374776c3e4dd3099c09a7c.jpg", "img_caption": ["Figure 7: Generating candidate training samples "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "CDe2zBPioj/tmp/e45099cfee45f1205eb35c4221b6dfa726683f7cfbcbd33c2fa8f747c91d0a2b.jpg", "img_caption": ["Figure 8: Selecting beneficial candidate training samples "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "C Detailed Design of SGA ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Figure 7, 8 and 9 show the details of the three steps of the SGA framework. ", "page_idx": 15}, {"type": "text", "text": "D SGA Algorithm Details ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The SGA Algorithm is shown in Algorithm 1. ", "page_idx": 15}, {"type": "image", "img_path": "CDe2zBPioj/tmp/3a21ece084723d36ceb26fb7e26a5737b363e6877bbed82291d1fb6759271ac9.jpg", "img_caption": [], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Figure 9: Introducing new feature for training samples ", "page_idx": 16}, {"type": "text", "text": "Algorithm 1: SGA Algorithm ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "1: Input: A signed graph training edge set $D_{\\mathrm{train}}$ , SGCN $f$ and SGNN $f^{\\prime}$ , pacing function $g(t)$ , $\\epsilon_{a d d}^{+}$ , \u03f5n+eg, \u03f5a\u2212dd, \u03f5d\u2212el   \n2: Output: SGNN $f^{\\prime}$ parameters $\\theta_{f^{\\prime}}$   \n43::  IPnriet-itarlaiizne  tShGe No np ter $\\theta_{f}$ , SGNN $\\theta_{f^{\\prime}}$ , $D_{\\mathrm{urain.add}}^{\\mathrm{cand.}}=\\emptyset$ , $D_{\\mathrm{train\\_del}}^{\\mathrm{cand.}}=\\emptyset$   \n$f$ $D_{\\mathrm{train}}$   \n// Generation of Candidate Training Samples   \n5: for all $\\boldsymbol{v}_{i}$ , $v_{j}\\in\\mathcal{V}$ do   \n6: Calculate P repos and $P r_{e_{i j}}^{n e g}$ using $f$   \n78:: $\\begin{array}{r}{\\mathfrak{k}\\left(P r_{e_{i j}}^{p o s}>\\epsilon_{a d d}^{+}\\,\\mathbf{or}\\,P r_{e_{i j}}^{n e g}>\\epsilon_{a d d}^{-}\\right)\\,\\mathbf{then}}\\end{array}$ $D_{\\mathrm{train\\_add}}^{\\mathrm{cand.}}\\leftarrow D_{\\mathrm{train\\_add}}^{\\mathrm{cand.}}\\cup\\{(v_{i},v_{j},\\sigma(e_{i j}))\\}$   \n9: end if   \n10: if $(v_{i},v_{j},\\sigma(e_{i j}))\\in D_{\\mathrm{train}},A_{i j}>0$ and $P r_{e_{i j}}^{p o s}<\\epsilon_{d e l}^{+}$ then   \n11: $D_{\\mathrm{train.del}}^{\\mathrm{cand.}}\\leftarrow D_{\\mathrm{train.del}}^{\\mathrm{cand.}}\\cup\\{\\left(v_{i},v_{j},\\sigma(e_{i j})\\right)\\}$ ij   \n12: end if   \n1134:: if $(v_{i},v_{j},\\sigma(e_{i j}))\\in D_{\\mathrm{train}},A_{i j}<0$ $P r_{e_{i j}}^{n e g}<\\epsilon_{d e l}^{-}$ then   \n$D_{\\mathrm{train.del}}^{\\mathrm{cand.}}\\leftarrow D_{\\mathrm{train.del}}^{\\mathrm{cand.}}\\cup\\{\\left(v_{i},v_{j},\\sigma(e_{i j})\\right)\\}$   \n15: end if   \n16: end for   \n// Selecting Beneficial Candidate Training Samples   \n17: for all $(v_{i},v_{j},\\sigma(e_{i j}))\\in D_{\\mathrm{train\\_del}}^{\\mathrm{cand.}}$ do   \n18: $D_{\\mathrm{train}}\\leftarrow D_{\\mathrm{train}}\\setminus\\{(v_{i},v_{j},\\sigma(e_{i j}))\\}$   \n19: end for   \n20: for all $(v_{i},v_{j},\\sigma(e_{i j}))\\in D_{\\mathrm{train\\mathrm{-}a d d}}^{\\mathrm{cand.}}\\,\\mathbf{do}$   \n21: if $(v_{i},v_{j},\\sigma(e_{i j}))\\not\\in D_{\\mathrm{train}}$ then   \n22: for all $v_{k}\\in\\mathcal N_{i}\\cap\\mathcal N_{j}$ do   \n23: if $(\\sigma(e_{i j}))\\ast\\sigma(e_{i k})\\ast\\sigma(e_{j k}))>0\\cdot$ then   \n24: $D_{\\mathrm{train}}\\leftarrow D_{\\mathrm{train}}\\cup\\{(v_{i},v_{j},\\sigma(e_{i j}))\\}$   \n25: end if   \n26: end for   \n27: end if   \n28: end for   \n// Introducing New Feature for Training Samples   \n29: for $(v_{i},v_{j},\\sigma(e_{i j}))\\in D_{\\mathrm{train}}$ do   \n30: Calculate $S c o r e(e_{i j})$ using Eq. 6   \n31: end for   \n3332::  SLoetr $D_{t r a i n}$ according to difficulty in ascending order   \n$t=1$   \n34: while Stopping condition is not met do   \n35: $\\lambda_{t}\\gets g(t)$   \n36: $\\mathcal{S}_{t}\\gets\\boldsymbol{\\mathcal{G}}\\backslash\\left[\\boldsymbol{0},\\ldots,\\boldsymbol{\\lambda}_{t}\\cdot\\left|\\boldsymbol{D}_{\\mathrm{train}}\\right|\\right]$   \n37: Use $f^{\\prime}$ to predict the labels $\\sigma(\\widehat{\\mathcal{E}}_{t})$   \n38: Calculate cross-entropy loss $\\mathcal{L}$ on $\\{\\sigma(\\hat{\\varepsilon}_{t}),\\sigma(\\mathcal{E}_{t})\\}$   \n39: Back-propagation on $f$ for minimizing $\\mathcal{L}$   \n40: $t\\gets t+1$   \n41: end while   \n42: return \u03b8f\u2032 ", "page_idx": 16}, {"type": "text", "text": "E Theory Analysis ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "E.1 Basic Setup ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Before the proof begins, the framework of the SGNN for edge prediction is given in Algorithm 2. A network first performs feature aggregation, where each node learns the representations of its neighboring nodes, and subsequently uses the feature representations of several pairs of nodes as inputs to a classifier for predicting the nature of the edges connecting these two nodes. Before the proof begins, we show the framework of the SGNN for edge prediction below. ", "page_idx": 17}, {"type": "text", "text": "Algorithm 2: Simplified SGNN Framework ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Input: the adjacency matrix $A\\in\\mathbb{R}^{|\\mathcal{V}|\\times|\\mathcal{V}|}$ of graph $\\mathcal{G}$ , number of aggregation layers $L$ , weight matrix $w$   \n2: Output: Label prediction of edge $e_{i,j}$ $H_{0}{=}A$ // Feature Aggregation   \n4: for $l=0\\rightarrow L-1$ do   \n4: $\\begin{array}{r}{H_{l+1}=p(H_{l},w)=\\sum_{\\nu_{i}\\in\\mathcal{N}^{+},\\nu_{j}\\in\\mathcal{N}^{-}}\\footnote{M o r e a t e l y,t h e s e a r e a t o r(b,~\\nu_{i})+a g o r e q u a t e(\\nu,~\\nu_{j})}\\footnote{M o r e a r y,t h e s e a r e a t o r y p e r a t o r(C.~T h e r),t h e s e a r e d t o p r o p o p u l a t i o n~.I n t h e r e q u a t i o n)}\\end{array}$ end for   \n6: $Z=H_{L}$ // Classifier $\\hat{\\sigma}\\left(e_{i j}\\right)=f\\left(z_{i},z_{j},w\\right)$   \n8: Upgrade parameters based on loss function return $\\hat{A_{i j}}$ ", "page_idx": 17}, {"type": "text", "text": "A network first performs feature aggregation, where each node learns the representations of its neighboring nodes, and subsequently uses the feature representations of several pairs of nodes as inputs to a classifier for predicting the edges connecting these two nodes. Here, $z_{i},z_{j}$ denote the i-th and j-th rows respectively, in matrix $Z$ and $\\hat{A}_{i j}$ is the predicted label of edge $e_{i j}$ . These vectors correspond to the node representations learned through graph filters in traditional GNNs. But actually SGNN does not have representations for each node, and this is done here to more clearly represent the variables that affect the generalization performance during the proof process next. ", "page_idx": 17}, {"type": "text", "text": "E.2 Assumptions ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "$l$ -Lipschitz Continuous and Smooth Loss Function: A function $f:\\mathbb{X}\\,\\rightarrow\\,\\mathbb{R}$ is $\\alpha_{1}$ -Lipschitz continuous if for all $x,y\\in\\mathbb{X}$ , $|f(x)-f(y)|\\leqslant\\alpha_{1}\\|x-y\\|$ . A function $f:\\mathbb{X}\\to\\mathbb{R}$ is $\\alpha_{2}$ -Lipschitz smooth if for all x, $y\\in\\mathbb{X}$ , $|f^{\\prime}(x)-f^{\\prime}(y)|\\leqslant\\alpha_{2}\\|x-y\\|$ , where $f^{\\prime}$ represents the differential function of $f$ , and $\\lVert\\cdot\\rVert$ represents the 2-norm. ", "page_idx": 17}, {"type": "text", "text": "Similarly, for functions of three variables, a function $f:\\mathbb{X}\\ \\to\\ \\mathbb{R}$ is $\\alpha_{1}$ -Lipschitz continuous if for all $x,y,z\\ \\in\\ \\mathbb{X}$ $\\mathbb{X},\\ |f\\left(x_{i},y_{i},z\\right)-f\\left(x_{j},y_{j},z\\right)|\\ \\leq\\ \\alpha_{1}\\sqrt{\\left(x_{i}-x_{j}\\right)^{2}+\\left(y_{i}-y_{j}\\right)^{2}}$ . A function $f:\\mathbb{X}\\,\\rightarrow\\,\\mathbb{R}$ is $\\alpha_{2}$ -Lipschitz smooth if for all $x,y,z\\in\\mathbb{X}$ , $|f^{\\prime}(x_{i},y_{i},z)-f^{\\prime}(x_{j},y_{j},z)|\\ \\leq$ $\\alpha_{2}\\sqrt{\\left(x_{i}-x_{j}\\right)^{2}+\\left(y_{i}-y_{j}\\right)^{2}}$ . We assume that the loss function $L(),f(),g()$ , satisfies the Lipschitz condition. ", "page_idx": 17}, {"type": "text", "text": "Actually, in simple terms, Lipschitz continuity portrays how smooth the function is, ensuring that the function does not have too steep a slope or abrupt changes: in the event of a small change in the input value, the change in the output value is also limited to a certain range. ", "page_idx": 17}, {"type": "text", "text": "In practice, regularization, normalization, gradient trimming, and other methods of keeping the model stable actually limit the drastic changes in the function, which means that the assumption is easily satisfied. ", "page_idx": 17}, {"type": "text", "text": "Training set and Test set: Training data is usually easier to obtain than test data. In the link prediction task, the training set contains more edges and can simulate the data distribution in real scenarios, while the test set is used to validate the performance of the model in real applications. It is also taken into account that if the number of edges in the test set is too high, it may cause the evaluation results to be skewed towards the distribution of the training set, which does not accurately reflect the generalization ability of the model. So we assume that the training set has more edges than the test set. ", "page_idx": 17}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "F Proof of Theorem 1 ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "In this section, we will present the entire proof of our main result about the generalization gap bound. Similar as proof of theorem 1[[64], Theorem 1], we have: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\delta_{g e n}=E_{A}\\left[R\\left(A_{D_{n a i n}}\\right)-R\\left(A_{D_{s e t}}\\right)\\right]}\\\\ &{\\quad\\quad=\\left|\\frac{1}{\\mathrm{n}_{t}}\\sum_{e_{i j}\\in\\varepsilon_{t}^{+}\\cup\\varepsilon_{t}^{-}}L\\left(\\hat{A}_{i j},A_{i j}\\right)-\\frac{1}{n_{m}}\\sum_{e_{p q}\\in\\varepsilon_{m}^{+}\\cup\\varepsilon_{m}^{-}}L\\left(\\hat{A}_{p q},A_{p q}\\right)\\right|}\\\\ &{\\quad\\quad\\overset{\\mathrm{(a)}}{\\leq}\\frac{1}{n_{t}}\\left|\\displaystyle\\sum_{e_{i j},e_{p q}}L\\left(\\hat{A}_{i j},A_{i j}\\right)-L\\left(\\hat{A}_{p q},A_{p q}\\right)\\right|}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "The loss function we use is based on link sign prediction, where $n_{t},n_{m}$ is the number of edges in training set and test set respectively. Step (a) is the application of our assumption. In learning process, the number of edges in test set is always lower than it in training set. Therefore, we get Equation (11). Then using absolute value inequality, we have: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left|\\displaystyle\\sum_{e_{i j},e_{p q}}L\\Big(\\hat{A}_{i j},A_{i j}\\Big)-L\\Big(\\hat{A}_{p q},A_{p q}\\Big)\\right|}\\\\ &{\\leq\\displaystyle\\sum_{e_{i j},e_{p q}}\\left|L\\Big(\\hat{A}_{i j},A_{i j}\\Big)-L\\Big(\\hat{A}_{i j},A_{p q}\\Big)\\right|+\\Big|L\\Big(\\hat{A}_{i j},A_{p q}\\Big)-L\\Big(\\hat{A}_{p q},A_{p q}\\Big)\\right|}\\\\ &{\\stackrel{(b)}{\\leq}\\displaystyle\\sum_{e_{i j},e_{p q}}\\alpha_{L}^{x}\\Big|A_{i j}-A_{p q}\\Big|+\\alpha_{L}^{y}\\Big|\\hat{A}_{i j}-\\hat{A}_{p q}\\Big|}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Step (b) uses the Lipshitz-continuity of loss function $L\\!\\left({\\hat{A}},A\\right)$ . Next, we consider the first item. As $A_{i j},A_{p q}\\in\\{1,-1,0\\}$ signifies the original sign and the predicted sign of the edge $e_{i j}$ , obviously we get the upper bound: max $\\bar{|{A_{i j}}-{A}_{p q}^{\\bar{}}|{=}2$ . ", "page_idx": 18}, {"type": "text", "text": "For the last item, according to the process of link prediction: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\hat{A}_{i j}=\\hat{\\sigma}(e_{i j})=f(z_{i},z_{j},w)\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Continuing to use the Lipschitz-continuity of the function $f()$ , we get: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\sum_{\\epsilon_{i j},\\epsilon_{p q}}\\alpha_{L}^{y}\\Big|\\hat{A}_{i j}-\\hat{A}_{p q}\\Big|}\\\\ &{\\le\\alpha_{L}^{y}\\displaystyle\\sum_{\\epsilon_{i j},\\epsilon_{p q}}\\Big|f\\Big(z_{i},z_{j},w\\Big)-f\\Big(z_{p},z_{q},w\\Big)\\Big|}\\\\ &{\\stackrel{(c)}{\\le}\\alpha_{L}^{y}M\\|w\\|\\displaystyle\\sum_{\\epsilon_{i j},\\epsilon_{p q}}\\sqrt{\\big(z_{i}^{2}-z_{p}^{2}\\big)+\\big(z_{j}^{2}-z_{q}^{2}\\big)}}\\\\ &{\\le\\alpha_{L}^{y}M\\|w\\|_{\\mathrm{e}}\\displaystyle\\sum_{\\epsilon_{i j},\\epsilon_{p q}}\\sqrt{z_{i}^{2}+z_{j}^{2}}}\\\\ &{\\le\\sqrt{2}\\alpha_{L}^{y}M\\|w\\|\\displaystyle\\sum_{\\epsilon_{i j},\\epsilon_{p q}}\\|Z\\|_{\\infty}}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Here, Step (c) is an extension of the Lipschitz-condition for multivariate functions. Similar to $\\alpha_{L}^{y}$ and $\\alpha_{L}^{x}$ , $M$ is constant determined only by the function $f()$ itself. We will subsequently prove the existence of the constant $M$ in the proof of Lemma 1. ", "page_idx": 18}, {"type": "text", "text": "In Equation (14), $\\|Z\\|_{\\infty}$ refers to the infinite norm of the matrix $Z$ . We set $z_{i}$ as the $i$ -th row of   \nmatrix $Z$ , which can be represented as $z_{i}\\;=\\;Z\\cdot I_{i}$ . Here $I_{j}\\;=\\;\\left[0,\\cdot\\cdot\\cdot\\:,1^{j},\\cdot\\cdot\\cdot\\:,0\\right]$ is a vector   \nwith position i being 1 and the other positions being 0. The Last step followed the definition that $\\vert\\nu\\vert$   \n$\\|Z\\|_{\\infty}=\\operatorname*{max}\\{\\overbrace{z_{1},z_{2},\\cdot\\cdot\\cdot\\cdot\\cdot z_{i}}^{}\\}.$ ", "page_idx": 19}, {"type": "text", "text": "Bringing Equation (12) and (14) into Equation (11), we get the following result: ", "page_idx": 19}, {"type": "equation", "text": "$$\nE_{A}\\left[\\left\\|R\\left(A_{D_{t r a i n}}\\right)-R\\left(A_{D_{t e s t}}\\right)\\right\\|\\right]\\leq2\\alpha_{L}^{x}+\\frac{\\sqrt{2}\\alpha_{L}^{y}M\\left\\|w\\right\\|\\left\\|Z\\right\\|_{\\infty}}{n_{t}}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Next we will prove an upper bound for $\\lVert w\\rVert$ based on the SGD algorithm. ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{w_{t+1}=w_{t}-\\eta\\nabla_{l o s s}}\\\\ &{\\qquad=w_{t}-\\eta\\frac{\\nabla L}{\\nabla f}\\cdot\\frac{\\nabla f}{\\nabla w}}\\\\ &{\\qquad\\leq w_{t}-\\eta\\alpha_{L}^{x}\\alpha_{f}\\lvert Z\\rvert_{\\infty}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "This gives us the iterative formula for $w$ . After $t$ iterations, we can obtain upper bound of weight matrix $\\lVert w_{t}\\rVert$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\|w_{t}\\|\\leq\\|w_{i n i t}\\|+t\\eta\\alpha_{L}^{x}\\alpha_{f}\\|Z\\|_{\\infty}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Bringing Equation (17) into Equation (15), let $\\beta=\\|z\\|_{\\infty}$ and $\\theta=\\|w_{i n i t}\\|$ , we get the final result: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathcal{E}_{g e n}\\leq2\\alpha_{L}^{x}+\\frac{\\sqrt{2}\\alpha_{L}^{y}M\\beta(\\theta+t\\eta\\alpha_{L}^{x}\\alpha_{f}\\beta)}{n_{t}}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "G Proof of Lemma 1 ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "For the ternary function $f(x,y,z)$ with a bounded $z_{0}$ , if the function $f$ satisfies the Lipschitzcondition for $z$ , it can be obtained: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\left|f\\left(x_{1},y_{1},z_{0}\\right)-f\\left(x_{2},y_{2},z_{0}\\right)\\right|\\leq M\\left|z_{0}\\right|{\\sqrt{\\left(x_{1}-x_{2}\\right)^{2}+\\left(y_{1}-y_{2}\\right)^{2}}}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "For a succinct representation in the next proof, we define $D{\\left(\\begin{array}{l l}{x_{1}}&{x_{2}}\\\\ {y_{1}}&{y_{2}}\\end{array}\\right)}={\\left(x_{1}\\!-\\!x_{2}\\right)}^{2}\\!+\\!{\\left(y_{1}\\!-\\!y_{2}\\right)}^{2}.$ ", "page_idx": 19}, {"type": "text", "text": "To prove our conclusion, we first construct the auxiliary function $G$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{G\\Big(x,y,z,\\Delta x,\\Delta y\\Big)\\qquad\\qquad\\qquad\\quad}}\\\\ {{\\qquad=\\displaystyle\\frac{1}{2}\\Big(f\\Big(x+\\Delta x,y+\\Delta y,z\\Big)+f\\Big(x,y,z\\Big)\\Big)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "By the definition of $G(x,y,z,\\Delta x,\\Delta y)$ , we have: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{G(x_{1},y_{1},z,\\Delta x_{1},\\Delta y_{1}){-}G(x_{2},y_{2},z,\\Delta x_{2},\\Delta y_{2})}\\\\ &{=\\cfrac{1}{z}[f(x_{1}+\\Delta x_{1},y_{1}+\\Delta y_{1},z)-f(x_{2}+\\Delta x_{2},y_{2}+\\Delta y_{2},z)+f(x_{1},y_{1},z)-f(x_{2},y_{2},z)]}\\\\ &{\\leq\\cfrac{L_{f}}{z}\\left[\\sqrt{D(\\begin{array}{c c}{x_{1}+\\Delta x_{1}}&{x_{2}+\\Delta x}\\\\ {y_{1}+\\Delta y_{1}}&{y_{2}+\\Delta y_{2}}\\end{array})}+\\sqrt{D(\\begin{array}{c c}{x_{1}}&{x_{2}}\\\\ {y_{1}}&{y_{2}}\\end{array})}\\right]}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Using a special case of Cauchy Schwarz\u2019s inequality, we have: ", "page_idx": 19}, {"type": "equation", "text": "$$\nD(\\begin{array}{c c}{x_{1}+\\Delta x_{1}}&{x_{2}+\\Delta x}\\\\ {y_{1}+\\Delta y_{1}}&{y_{2}+\\Delta y_{2}}\\end{array})\\le D(\\begin{array}{c c}{x_{1}}&{x_{2}}\\\\ {\\Delta x_{1}}&{\\Delta x_{2}}\\end{array})+D(\\begin{array}{c c}{y_{1}}&{y_{2}}\\\\ {\\Delta y_{1}}&{\\Delta y_{2}}\\end{array})\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{Given}\\quad\\mathrm{that}\\quad z\\quad\\mathrm{is}\\quad\\mathrm{bounded}\\quad\\mathrm{and}\\quad\\mathrm{the}\\quad\\mathrm{obvious}\\quad\\mathrm{conclusion}\\quad\\sqrt{D(\\textit{x}_{y1}\\cdot\\textit{x}_{2})}}\\\\ &{\\sqrt{D(\\textit{x}_{y1}+\\Delta{x_{1}}\\cdot\\textit{x}_{2}+\\Delta{x}}\\,),}\\\\ &{\\sqrt{D(\\textit{y}_{1}+\\Delta{y_{1}}\\cdot\\textit{y}_{2}+\\Delta{y_{2}}\\,)},}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad G(x_{1},y_{1},z,\\Delta x_{1},\\Delta y_{1})-G(x_{2},y_{2},z,\\Delta x_{2},\\Delta y_{2})}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad\\quad G(x_{1}-x_{2})^{2}+\\left(y_{1}-y_{2}\\right)^{2}+\\left(\\Delta x_{1}-\\Delta x_{2}\\right)^{2}+\\left(\\Delta y_{1}-\\Delta y_{2}\\right)^{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Here $K$ is a constant ultimately determined by function $f$ . Based on Equation (23), next we construct a differential of the following form: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\frac{f(x_{1},y_{1},z)}{z}-\\frac{f(x_{2},y_{2},z)}{z}}\\\\ {=\\frac{1}{|z|}\\Big[f\\big(x_{1},y_{1},z\\big)+f\\big(x_{2},y_{1},z\\big)-\\big(f\\big(x_{2},y_{1},z\\big)+f\\big(x_{2},y_{2},z\\big)\\big)\\Big]}\\\\ {=G\\big(x_{1},y_{1},z,x_{2}-x_{1},0\\big)-G\\big(x_{2},y_{2},z,0,y_{2}-y_{1}\\big)}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "As what we defined in Equation (20) and (23), $\\Delta x_{1}=x_{2}-x_{1},\\Delta y_{2}=y_{2}-y_{1},\\Delta x_{2}=\\Delta y_{1}=0.$ . Applying Equation (23) to Equation (24): ", "page_idx": 20}, {"type": "equation", "text": "$$\nf\\left(x_{1},y_{1},z\\right)-f\\left(x_{2},y_{2},z\\right)\\leq\\sqrt{2}K|z|\\sqrt{\\left(x_{1}-x_{2}\\right)^{2}+\\left(y_{1}-y_{2}\\right)^{2}}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Let $M={\\sqrt{2}}K$ , we managed to proof the existence of $M$ in Equation (14). ", "page_idx": 20}, {"type": "text", "text": "H Datasets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "We conduct experiments on six real-world datasets, i.e., Bitcoin-OTC, Bitcoin-Alpha, Wiki-elec, Wiki-RfA, Epinions, and Slashdot. The main statistics of each dataset are summarized in Table 5. In the following, we explain the important characteristics of the datasets briefly. ", "page_idx": 20}, {"type": "text", "text": "Bitcoin-OTC2 [65, 66] and Bitcoin-Alpha3 are two datasets extracted from bitcoin trading platforms. Because Bitcoin accounts are anonymous, individuals assign trust or distrust tags to others to enhance security. ", "page_idx": 20}, {"type": "text", "text": "Wiki-elec4 [67, 1] is a voting network in which users can choose trust or distrust to other users in administer elections. Wiki-RfA [68] is a more recent version of Wiki-elec. ", "page_idx": 20}, {"type": "text", "text": "Epinions5 [67] is a consumer review site with trust and distrust relationships between users. ", "page_idx": 20}, {"type": "text", "text": "Slashdot6 [67] is a technology-related news website in which users can tag each other as friends (trust) or enemies (distrust). ", "page_idx": 20}, {"type": "text", "text": "Following the experimental settings in [11], We randomly split the edges into a training set and a testing set with a ratio of 8:2. We run with different train-test splits for 5 times to get the average scores and standard deviation. ", "page_idx": 20}, {"type": "table", "img_path": "CDe2zBPioj/tmp/9cd127582a1b778db3ad281e92f5fe6b0859c18f01534acb0b341151ff43577c.jpg", "table_caption": ["Table 5: The statistics of datasets. "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "I Baselines and Experiment Setting ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We use five popular graph representation learning models as backbones, including both unsigned GNN models and signed GNN models. ", "page_idx": 21}, {"type": "text", "text": "Unsigned GNN: We employ two classical GNN models (i.e., GCN [9] and GAT [31]). These methods are designed for unsigned graphs, thus, as mentioned before, we consider all edges as positive edges to learn node embeddings in the experiments. ", "page_idx": 21}, {"type": "text", "text": "Signed Graph Neural Networks: SGCN [11] and SiGAT [32] respectively generalize GCN [9] and GAT [31] to signed graphs based on message mechanism. Besides, they integrate the balance theory. GS-GNN [13] adopts a more generalized assumption (than balance theory) that nodes can be divided into multiple latent groups. We use these signed graph neural networks as baselines to explore whether SGA can enhance their performance. ", "page_idx": 21}, {"type": "text", "text": "We implement our SGA using PyTorch [69] and employ PyTorch Geometric [70] as its complementary graph library. The graph encoder, responsible for augmenting the graph, consists of a 2-layer SGCN with an embedding dimension of 64. This encoder is optimized using the Adam optimizer, set with a learning rate of 0.01 over 300 epochs. For SiGAT, we randomly standardized the node embedding dimension to 20 as recommended in [32]. For the remaining embedding-based methods it was set to 64, matching the dimensionality used in GS-GNN [13]. For the baseline methods, we adhere to the parameter configurations as recommended in their originating papers. Specifically, for unsigned baseline models like GCN and GAT, we employ the Adam optimizer, with a learning rate of 1e-2, a weight decay of 5e-4, and span the training over 500 epochs. For signed baseline models, SGCN is trained with an initial learning rate of 1e-2 and run for 300 epochs, SiGAT is trained with an initial learning rate of 5e-3 and run for 1500 epochs, GSGNN is trained with an initial learning rate of 1e-2 and run for 3000 epochs. The experiments are performed on a Linux machine with eight 24GB NVIDIA GeForce RTX 3090 GPUs. ", "page_idx": 21}, {"type": "text", "text": "Our primary evaluation task is link sign prediction. We assess the performance employing AUC, F1-binary, F1-macro, and F1-micro metrics, consistent with the established norms in related literature [71, 13]. It is imperative to note that across these evaluation metrics, a higher score directly translates to better model performance. ", "page_idx": 21}, {"type": "text", "text": "J More Link sign prediction results ", "text_level": 1, "page_idx": 21}, {"type": "table", "img_path": "CDe2zBPioj/tmp/ef580591a9796422f8f1a6eebc234683180de0e97306a1ceb0e19e426df0bf17.jpg", "table_caption": ["Table 6: Link sign prediction results (average $\\pm$ standard deviation) with F1-micro $(\\%)$ and F1- macro $(\\%)$ on six benchmark datasets. "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "K Parameter Sensitivity Analysis with F1 scores ", "text_level": 1, "page_idx": 22}, {"type": "image", "img_path": "CDe2zBPioj/tmp/4a9578a98ee8f21fe0b808723d5757058caa1a4085f866e7d02f46c03358a5ce.jpg", "img_caption": [], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Figure 10: Performance of SGCN: F1-binary scores (with standard deviation) across six benchmark datasets, evaluated under variations in parameters $\\epsilon_{d e l}^{+}$ , $\\epsilon_{d e l}^{-}$ , $\\epsilon_{a d d}^{+}$ , $\\epsilon_{a d d}^{-}$ , $T$ and $\\lambda_{0}$ . ", "page_idx": 22}, {"type": "image", "img_path": "CDe2zBPioj/tmp/a1e4e939f1f9f477901dfdece0b3c5402e1cf146c41d83910515c16d810f93c6.jpg", "img_caption": [], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Figure 11: Performance of SGCN: F1-macro scores (with standard deviation) across six benchmark datasets, evaluated under variations in parameters $\\epsilon_{d e l}^{+}$ , $\\epsilon_{d e l}^{-}$ , $\\epsilon_{a d d}^{+}$ , $\\epsilon_{a d d}^{-}$ , $T$ and $\\lambda_{0}$ . ", "page_idx": 22}, {"type": "image", "img_path": "CDe2zBPioj/tmp/21e7e72d8b615581750992d2187014da244fb3a95bb7f56eef8dc49b701803a8.jpg", "img_caption": [], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Figure 12: Performance of SGCN: F1-micro scores (with standard deviation) across six benchmark datasets, evaluated under variations in parameters $\\epsilon_{d e l}^{+}$ , $\\epsilon_{d e l}^{-}$ , $\\epsilon_{a d d}^{+}$ , $\\epsilon_{a d d}^{-}$ , $T$ and $\\lambda_{0}$ . ", "page_idx": 22}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: The abstract and introduction clearly reflect the motivation and main contributions of this paper. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 23}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: Please see the limitation part in introduction. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \u201dLimitations\u201d section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 23}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: The main theoretical result is Theorem 1. For the complete proof, please refer to Appendix G and F. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 24}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Please refer to the code link provided in the abstract section and the experiment setting in the Experiments section. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 24}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Please refer to the code link provided in the abstract section. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 25}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Please refer to the Baselines and Experiment Setting. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 25}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We use average improvement ratio to represent the statistical significance and calculate the results with average and standard deviation. (Please refer to Table 1) ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \u201dYes\u201d if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: Please refer to the Baselines and Experiment Setting part. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 26}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 26}, {"type": "text", "text": "Answer: Baselines and Experiment Setting ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: Please refer to the code link provided in the abstract section. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 26}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: Please refer to the introduction part. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. \u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: This paper poses no such risks. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 27}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We have given proper citations or URLs to those existing datasets and codes 1451 of baselines. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 27}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: This paper does not release new assets. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 28}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 28}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 28}]