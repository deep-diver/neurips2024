[{"type": "text", "text": "ProSST: Protein Language Modeling with Quantized Structure and Disentangled Attention ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Mingchen $\\mathbf{L}\\mathbf{i}^{2,3,5*}$ Yang Tan2,3,5,\u2217 Xinzhu Ma2,4 Bozitao Zhong1,4 Huiqun $\\mathbf{Y}\\mathbf{u}^{3}$ Ziyi Zhou1 Wanli Ouyang2,4 Bingxin Zhou 1 Pan Tan1,2 Liang Hong1,2,5 ", "page_idx": 0}, {"type": "text", "text": "1 Shanghai Jiao Tong University, China {zy-zhou,bingxin.zhou,hongl3liang}@sjtu.edu.cn, tpan1039@gmail.com, 2 Shanghai Artificial Intelligence Laboratory, China {ouyang-wanli,maxinzhu}@pjlab.org.cn 3 East China University of Science and Technology, China {lmc,tyang}@mail.ecust.edu.cn, yhq@ecust.edu.cn 4 The Chinese University of Hong Kong, China zbztzhz@gmail.com; ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Protein language models (PLMs) have shown remarkable capabilities in various protein function prediction tasks. However, while protein function is intricately tied to structure, most existing PLMs do not incorporate protein structure information. To address this issue, we introduce ProSST, a Transformer-based protein language model that seamlessly integrates both protein sequences and structures. ProSST incorporates a structure quantization module and a Transformer architecture with disentangled attention. The structure quantization module translates a 3D protein structure into a sequence of discrete tokens by first serializing the protein structure into residue-level local structures and then embeds them into dense vector space. These vectors are then quantized into discrete structure tokens by a pre-trained clustering model. These tokens serve as an effective protein structure representation. Furthermore, ProSST explicitly learns the relationship between protein residue token sequences and structure token sequences through the sequence-structure disentangled attention. We pre-train ProSST on millions of protein structures using a masked language model objective, enabling it to learn comprehensive contextual representations of proteins. To evaluate the proposed ProSST, we conduct extensive experiments on the zero-shot mutation effect prediction and several supervised downstream tasks, where ProSST achieves the state-of-the-art performance among all baselines. Our code and pre-trained models are publicly available 2. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Predicting the functions of proteins is one of the most critical areas in life sciences [1]. In recent decades, protein sequence databases have experienced exponential growth [2], making it possible to learn the fundamental representations of protein sequences with large-scale models in a datadriven manner. Inspired by pre-trained language models in natural language processing [3, 4], many pre-trained Protein Language Models (PLMs) have emerged [5, 6, 7, 8, 9]. Benefiting from remarkable protein representation capabilities, they have become fundamental tools for bioinformatics in protein-related tasks. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "The function of a protein is determined by its structure [10]. However, most PLMs mainly focus on modeling protein sequences, neglecting the importance of structural information, and one significant reason for this phenomenon is the lack of structural data. Fortunately, some excellent works, such as AlphaFold [11] and RoseTTAFold [12], are proposed, which can accurately predict protein structures. These works significantly expand the protein structure dataset [13] to millions and enable the pre-training of large-scale structure-aware PLMs. After that, the major challenge is how to effectively integrate protein structure information into PLMs. Specifically, existing structure-aware PLMs [14, 15] first use Foldseek [16] to convert protein structures into discrete structure tokens and then integrate these structural data into the Transformer architecture. However, despite achieving promising performance on several tasks, this approach still faces two main issues. First, Foldseek encodes the structure of a residue within a protein by considering only the features of its previous and next residues. This representation is insufficient and may overlook subtle differences in the local structure of proteins, such as catalytic sites or binding pockets, which are crucial for protein function [17]. Second, the naive Transformer architecture lacks the ability to explicitly model the relationship between protein sequences and structure token sequences, making it challenging to effectively leverage structural cues. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we develop ProSST (Protein Sequence-Structure Transformer), a structure-aware pre-trained protein language model. Specifically, ProSST mainly consists of two modules: a structure quantization module and a Transformer with sequence-structure disentangled attention. The structure quantization module is based on a GVP (Geometric Vector Perceptron) [18] encoder, which can encode a residue structure along with its neighborhoods in its local structure and quantize the encoding vectors into discrete tokens. Compared to Foldseek, which only considers individual residues, this encoder can take into account more information from the micro-environment of residue. The sequence-structure disentangled attention module replaces the self-attention module in the Transformer model. This can make Transformer model explicitly model the relationship between protein sequence tokens and structure tokens, enabling it to capture more complex features of protein sequences and structures. To enable ProSST to learn the contextual representation comprehensively, we pre-train our model with the Masked Language Modeling (MLM) objective on a large dataset containing 18.8 million protein structures. To summarize, our main contributions are as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose a protein structure quantizer, which can convert a protein structure into a sequence of discrete tokens. These token sequences effectively represent the local structure information of residues within a protein. ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose a disentangled attention mechanism to explicitly learn the relationship between protein structure and residue, facilitating more efficient integration of structural token sequences and amino acid sequences. ", "page_idx": 1}, {"type": "text", "text": "To evaluate the proposed ProSST, we conduct extensive experiments on zero-shot mutation effect prediction and multiple supervised downstream tasks, where the proposed model achieves state-ofthe-art results among all baselines. Besides, we also provide detailed ablations to demonstrate the effectiveness of each design in ProSST. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Protein Representation Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Based on the input modality, protein representation models can be divided into three categories: sequence-based models, structure-based models, and structure-sequence hybrid models. ", "page_idx": 1}, {"type": "text", "text": "Sequence-based models. Sequence-based models treat proteins as a sequence of residue tokens, using the Transformer model [19] for unsupervised pre-training on extensive datasets of sequence. According to the pre-training objective, current models can be further divided into BERT-based models [4], GPT-based models [3], and span-mask based models. Specifically, BERT-style models, including ESM-series models [5, 6, 7], ProteinBert[9], and TAPE [20], aim to recover the masked tokens in the training phase. The GPT-style models, such as Tranception [21], ProGen2 [22], and ", "page_idx": 1}, {"type": "text", "text": "ProtGPT2 [23], progressively generate the token sequences in an auto-regressive manner. Lastly, models that use span-mask as the training objective include Ankh [24], ProtT5 [8], and xTrimo [25]. ", "page_idx": 2}, {"type": "text", "text": "Structure-based models. Protein structures play a dominant role in protein functionality. Therefore, models leveraging structure information generally get more accurate predictions. Recently, various techniques have been applied in learning protein structure representation, including CNN-based models [26] and GNN-based models [18, 27, 28, 29, 30], where the GNN-based ones have demonstrated significant versatility in integrating protein-specific features through node or edge attributes. Moreover, the recent advancements in protein folding models [7, 11, 31] enable the structure-based models access to extensive datasets of protein structures. This led to a growing interest in developing PLMs that leverage protein structure cues [14, 15, 32]. ", "page_idx": 2}, {"type": "text", "text": "Structure-sequence hybrid models. Hybrid models, which incorporate both sequence and structure information of proteins, offer more effective representations of proteins. For example, the LMGVP[33] model employs ProtBERT-BFD [9] embeddings as input features for the GVP [18] model, while ESM-GearNet [34] investigates various methods of integrating ESM-1b [5] representations with GearNet [32]. Similarly, the recent ProtSSN [35] model leverages ESM-2 [7] embeddings as input for the EGNN [36] model, resulting in notable advancements. Both ESM-IF1 [37] and MIF-ST [38] target inverse folding, utilizing the structure to predict corresponding protein residues, whereas ProstT5 [15] focuses on the transformation between residue sequences and their structure token sequences [16] as a pre-training objective. SaProt [14] constructs a structure-aware vocabulary using structure tokens generated by foldseek [16]. Both SaProt and ProstT5 extensively utilize large structure databases [13] for their pre-training datasets. ProSST is also a hybrid structure-sequence model. Compared to previous work, ProSST develops an advanced structure quantization method and a better attention formulation to leverage the structure cues. ", "page_idx": 2}, {"type": "text", "text": "2.2 Protein Structure Quantization ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The most intuitive way to represent a protein structure is using continuous features, such as coordinates, dihedral angles and distance map. However, directly using these continuous features in the pre-training may lead to overfitting [14]. This issue arises from the mismatched representations of the structure between the training set (derived from model predictions) and the test set (measured by wet-lab experiments). As the bridge to eliminate this gap, structure quantization has been investigated by a few works. These methods can be divided into two groups based on the way to generate the discrete secondary structure, including the methods based on physical computing, such as DSSP [39], and the methods based on deep learning, such as Foldseek [16], which have been successfully applied to structure-aware PLMs [14, 15]. The structure quantization module of ProSST also relies on learning-based approaches but provides a more detailed residue structure representation than Foldseek. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we introduce the architecture of ProSST. ProSST mainly contains two modules: structure quantization (Section 3.1) module and a-transformer-based model with sequence-structure disentangled attention. (Section 3.2). ", "page_idx": 2}, {"type": "text", "text": "3.1 Structure Quantization Module ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The structure quantization module aims to transform a residue\u2019s local structure into a discrete token. Initially, the local structure is encoded into a dense vector using a pre-trained structure encoder. Subsequently, a pre-trained $\\mathbf{k}$ -means clustering model assigns a category label to the local structure based on the encoded vector. Finally, the category label is assigned to the residue as the structure token. The pipeline of structure quantization is shown in Figure 1. ", "page_idx": 2}, {"type": "text", "text": "Structure representation. We categorize protein structures into two distinct levels: protein structure and local structure. Protein structure denotes the complete architecture of a protein, including all its residues. The local structure focuses on specific individual residues. It describes the local environment of a residue by centering on a specific residue and including it along with the nearest 40 residues surrounding it in three-dimensional space [18]. Compared to protein structure, local structures are in finer granularity, which allows for a more accurate description of the structure of residue. Therefore, a protein containing $L$ residues has one protein structure and $L$ local structures. Despite the different levels of structure, we can use graphs to represent it. Formally, we represent a structure using graph $G=(V,E)$ , where $V$ and $\\boldsymbol{E}$ denote the residue-level nodes and edges, respectively. For any given node $\\pmb{v}\\in V$ , it contains only the structure information of the residue, without any residue type information of the residue itself. This ensures that the structure encoder is solely focused on the structure cues. The edge set $E=\\{e_{i j}\\}$ includes all $i,j$ for which $\\pmb{v}_{j}$ is one of the top-40 nearest neighbors of $v_{i}$ , determined by the distance between their $C\\alpha$ atoms. ", "page_idx": 2}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/f723cdd3628597cbe55738439d9415978b885ffc2b57f32cb8fef14ad1fcc470.jpg", "img_caption": ["Figure 1: The pipeline of structure quantization. (A) Training of the structure encoder. (B) Local structure clustering and labeling. (C) Converting a protein structure to structure token sequence. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Structure encoder. Based on the above-mentioned definition of structure, we use geometric vector perceptrons (GVP) [18] as the (local) structure encoder. In particular, the GVP can be represented as a structure feature extraction function $\\pi_{\\theta}(G)\\in\\mathbb{R}^{l\\times d}$ , where $l$ is the number of nodes, $d$ is the embedding dimension, and $\\theta$ is trainable parameters. We integrate GVP with a decoder that includes a position-wise multi-layer perceptron (MLP) to form an auto-encoder model. The entire model is trained using a de-noising pre-training objective. In this process, we perturb $C\\alpha$ coordinates with 3D Gaussian noise (Figure 1A) and use Brownian motion on the manifold of rotation matrices, according to RF-Diffusion [40]. The model is then tasked with recovering the structure to its original, noise-free state. After being trained on the C.A.T.H dataset [41] (see Appendix A.2), we exclude the decoder and utilize solely the mean pooled output of the encoder as the final representation of structures. Although the structure encoder is trained on protein structures, it can effectively encode local structures. Therefore, for a graph $\\boldsymbol{G}$ of a protein structure, the encoding is: $\\begin{array}{r}{\\pmb{r}=\\frac{1}{l}\\sum_{i=1}^{l}\\pi_{\\theta}(\\pmb{g}_{i})}\\end{array}$ , where $\\pmb{g}_{i}$ represents the graph of the local structure associated with the $i$ -th residue in the graph $\\pmb{G}$ , and $\\pi_{\\boldsymbol{\\theta}}\\overline{{(}}\\overline{{\\boldsymbol{g}_{i}}})\\overset{\\cdot}{\\in}\\mathbb{R}^{d}$ is the output of the encoder for the $i$ -th node. Here, $\\pmb{r}\\in\\mathbb{R}^{d}$ is the mean pooled output of the encoder and the vectorized representation of the local structure. ", "page_idx": 3}, {"type": "text", "text": "Local structure codebook. The structure code book quantizes dense vectors representing protein structure into discrete tokens (Figure 1B). To build this, we employ a structure encoder to embed the local structures of all residues from the C.A.T.H dataset (See in Appendix A.2) into a continuous latent space. Then we apply the $k$ -means algorithm to identify $K$ centroids within this latent space, denoted as $\\{e_{i}\\}_{i=1}^{K}$ . These centroids constitute the structure codebook, as shown in Figure 1B. For any local-structure embedding, it is quantized by the nearest vector $e_{j}$ within the codebook and $j$ serving as the structure token. In this paper, the clustering number $K$ is also referred to as the structure vocabulary size. ", "page_idx": 3}, {"type": "text", "text": "Protein serialization and quantization. In general, for a residue at position $i$ in a protein sequence, we first build a graph $\\pmb{g}_{i}$ only based on its local structure, and then use the structure encoder to embed it into a continuous vector $\\pmb{r}_{i}$ . Then we use the codebook to assign a structure token $s_{i}\\in\\{1,2,...,K\\}$ to this vector as the structure token of the residue. Overall, the entire protein structure can be serialized and quantized into a sequence of structure tokens (Figure 1C). ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/ad597029cdd34c20d886426746a48327064fad129a3e355a3852e7a91b8dad25.jpg", "img_caption": ["3.2 Sequence-Structure Disentangled Attention "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 2: Model architecture of ProSST. ProSST is a Transformer-style model and the difference is that ProSST uses disentangled attention instead of self-attention [19]. ", "page_idx": 4}, {"type": "text", "text": "Inspired by DeBerta [42], we use an expanded form of disentangled attention to combine the attention of residual sequences and structure sequences as well as relative positions. Specifically, for a residue at position $i$ in a protein sequence, it can be represented by three items: $R_{i}$ denotes its residue token hidden state, $S_{i}$ represents the embedding of residue-level local structure, and $P_{i|j}$ is the embedding of relative position with the token at position $j$ . The calculation of the cross attention $A_{i,j}$ between residue $i$ and residue $j$ can be decomposed into nine components by: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{A_{i,j}=\\{R_{i},S_{i},P_{i|j}\\}\\times\\{R_{j},S_{j},P_{j|i}\\}^{\\top}}\\\\ &{\\qquad=R_{i}R_{j}^{\\top}+R_{i}S_{j}^{\\top}+R_{i}P_{j|i}^{\\top}}\\\\ &{\\qquad+\\,S_{i}R_{j}^{\\top}+S_{i}S_{j}^{\\top}+S_{i}P_{j|i}^{\\top}}\\\\ &{\\qquad+\\,P_{i|j}R_{j}^{\\top}+P_{j|i}S_{j}^{\\top}+P_{j|i}P_{j|i}^{\\top}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As formulated in Equation 1, the attention weight of a residue pair can be calculated by separate matrices, including residue tokens, structure tokens, and relative positions. These matrices are utilized for various interactions such as residue-to-residue, residue-to-structure, residue-to-position, structure-to-residue, structure-to-structure, structure-to-position, position-to-residue, position-tostructure, and position-to-position. Since our model concentrates on learning contextual embeddings for residues, the terms structure-to-structure $(S_{i}S_{j}^{\\top})$ , structure-to-position $(S_{i}P_{j\\mid i}^{\\top})$ , position-tostructure $(P_{j\\mid i}S_{j}^{\\top})$ , and position-to-position $(P_{j|i}P_{j|i}^{\\top})$ do not provide relevant information about residues and thus do not contribute significantly. Consequently, these terms are removed from our implementation of the attention weight calculation. As shown in Figure 2, our sequence-structure disentangled attention mechanism includes 5 types of attention. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "In the following part, we use single-head attention as an example to demonstrate the operation of sequence-structure disentangled attention. To begin, we define the relative position of the $i$ -th to the $j$ -th residue, denoted as $\\delta(i,j)$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\delta(i,j)=\\left\\{\\!\\!\\begin{array}{l l}{0}&{\\mathrm{if~}i-j\\leq-L_{m a x}}\\\\ {2L_{m a x}-1}&{\\mathrm{if~}i-j\\geq L_{m a x}}\\\\ {i-j+L_{m a x}}&{\\mathrm{otherwise}}\\end{array}\\!\\!\\right.,\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where, $L_{m a x}$ represents the maximum relative distance we consider, which is set to 1024 in the implementation. Similar to standard self-attention operation [19], the computation of query, key for structure, residue and relative position, and the value for residue is as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{Q^{r}=R W_{r}^{q}}&{K^{r}=R W_{r}^{k}\\quad V^{r}=R W_{r}^{v}}\\\\ {Q^{s}=S W_{s}^{q}}&{K^{s}=S W_{s}^{k}}\\\\ {Q^{p}=P W_{p}^{q}}&{K^{p}=S W_{p}^{k}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "and the the attention score $\\hat{\\pmb{A}}_{i,j}$ from residue $i$ to residue $j$ can be calculated as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{A}_{i,j}=\\underbrace{Q_{i}^{r}K_{j}^{r^{\\top}}}_{\\mathrm{(a)~residue-torsidue}}+\\underbrace{Q_{i}^{r}K_{j}^{s^{\\top}}}_{\\mathrm{(b)~residue-torateructure}}+\\underbrace{Q_{i}^{r}K_{\\delta(i,j)}^{p}}_{\\mathrm{(c)~residue-torosition}}\\!\\!\\!\\!^{\\top}+\\underbrace{K_{j}^{r}Q_{i}^{s^{\\top}}}_{\\mathrm{(d)~stucture-toresidue}}+\\underbrace{K_{j}^{r}Q_{\\delta(j,i)}^{p}}_{\\mathrm{(e)~posiduo-torsidue}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $Q_{i}^{r}$ represents the $i$ -th row of the matrix $Q^{r}$ , and $K_{j}^{r}$ denotes the $j$ -th row of $\\pmb{K}^{r}$ . $Q_{i}^{s}$ and $K_{j}^{s}$ are the $i^{\\th}$ -th and $j$ -th rows of $Q^{s}$ and $\\pmb{K}^{s}$ , respectively. The term $K_{\\delta(i,j)}^{p}$ refers to the row in $K^{p}$ indexed by the relative distance $\\delta(i,j)$ , and $Q_{\\delta(j,i)}^{p}$ refers to the row in $Q^{p}$ indexed by the relative distance $\\delta(j,i)$ . To normalize the attention scores, a scaling factor of $\\frac{1}{\\sqrt{5d}}$ is applied to $\\hat{\\boldsymbol A}$ . This scaling is crucial for ensuring the stability of model training [42], particularly when dealing with large-scale language models. All the $\\hat{\\pmb{A}}_{i j}$ form the attention matrix, and the final output residue hidden state is $\\scriptstyle{R_{o}}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n{\\cal R}_{o}=\\mathrm{softmax}({\\frac{\\hat{A}}{\\sqrt{5d}}})V^{r},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "which is used as the input for the hidden state of the next layer. ", "page_idx": 5}, {"type": "text", "text": "3.3 Pre-Training Objective ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "ProSST is pre-trained with the structure-conditioned masked language modeling. In this approach, each input sequence $\\textbf{\\em x}$ is noised by substituting a fraction of the residues with a special mask token or other residues. The objective of ProSST is to predict the original tokens that have been noise in the input sequence, utilizing both the corrupted sequence and its structure token sequence $\\pmb{s}$ as context: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\pmb{\\mathcal{L}}_{M L M}=\\pmb{\\mathcal{E}}_{x\\sim X}\\pmb{\\mathcal{E}}_{M}\\sum_{i\\in M}-\\log p(\\pmb{x}_{i}|\\pmb{x}_{/M},\\pmb{s}).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We randomly select $15\\%$ indices from the set $_M$ for nosing and computing loss for back-propagation. At each selected index $i$ , there is an $80\\%$ chance of substituting the residue with a mask token, a $10\\%$ chance of replacing it with a random residue token, and the remaining residues are unchanged. The training objective is to minimize the negative log-likelihood for each noised residue $\\pmb{x}_{i}$ , based on the partially noised sequence $x/M$ and the un-noised structure tokens, serving as contextual cues. Therefore, to accurately predict the noised tokens, this objective enables the model not only to learn the dependencies between residues but also the relationship between residues and structures. The details of pre-training dataset and hyper-parameter configuration can be found in Appendix A.2. ", "page_idx": 5}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/cc53b1bc1cc182de14a407212e013dd4ca5e67ffd3da9fa91779450bd6c68885.jpg", "table_caption": [], "table_footnote": ["Table 1: Comparison of zero-shot mutation prediction performance on ProteinGYM benchmark [43] between ProSST and other models. $\\rho_{s}$ is the Spearman rank correlation. "], "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we comprehensively evaluate the representation ability of ProSST in several benchmarks, covering zero-shot mutant effective prediction tasks (Section 4.1) and various supervised function prediction tasks (Section 4.2). Additionally, we also provide ablation studies and discussions to further show the effectiveness of the detailed designs in our model (Section 4.3). ", "page_idx": 6}, {"type": "text", "text": "4.1 Zero-Shot Mutant Effect Prediction ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Datasets. To evaluate the effectiveness of ProSST in zero-shot mutant effect prediction, we conduct experiments on ProteinGym [43] and utilize AlphaFold2 [11] to generate the structures of wild-type sequences. See Appendix A.2 for the details of the dataset and Appendix A.1 for scoring method. ", "page_idx": 6}, {"type": "text", "text": "Baselines. We compare ProSST with the current state-of-the-art models, including sequence-based models [6, 7, 21, 44, 45, 22, 46], sequence-structure model [14], inverse folding models [37, 38], evolutionary models [47, 48, 49, 50, 51], and ensemble models [6, 52, 51]. ", "page_idx": 6}, {"type": "text", "text": "Results. Table 1 shows the performance of zero-shot mutant effect prediction on ProteinGYM. Based on the results, we draw several noteworthy conclusions: ", "page_idx": 6}, {"type": "text", "text": "\u2022 ProSST outperforms all baselines on zero-shot mutant effect predictions of ProteinGYM. We used the non-parametric bootstrap method to calculate the standard error of the difference in Spearman performance between each model and ProSST. The results showed that all standard errors were less than 0.01. This calculation was based on 10,000 bootstrap samples extracted from proteins in the ProteinGym benchmark. Furthermore, ProSST was compared against other models on subsets of ProteinGYM categorized by function, such as stability, activity, binding, and expression. ProSST achieves state-of-the-art (SOTA) performance in the stability, binding, and expression subsets, as detailed in Appendix A.4. Notably, ProSST achieves the best performance in predicting stability, aligning with the previous findings that models incorporating structure information typically perform better in stability predictions [43].   \n\u2022 The degraded version of ProSST (without structure) gets results similar to other sequencebased models. This demonstrates that the performance improvement of our model stems from the efficient modeling of structure information, rather than other factors such as more powerful backbones. ", "page_idx": 6}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/b3c9029fb72502d53ab88af8016f08f52db0a2bc49a444ac871ab9fb5fc8ebf4.jpg", "table_caption": [], "table_footnote": ["Table 2: Comparison of supervised fine-tuning on downstream tasks. $\\rho_{s}$ denotes the Spearman correlation coefficient. "], "page_idx": 7}, {"type": "text", "text": "4.2 Supervised Fine-Tuning Tasks ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Downstream tasks. For supervised learning, we choose four protein downstream tasks, including thermostability prediction, Metal Ion Binding prediction, protein localization prediction (DeepLoc) and GO annotations prediction (three settings including MF, BO, and CC). More details of the tasks, datasets, and metrics can be found in Appendix A.2 ", "page_idx": 7}, {"type": "text", "text": "Baselines. We compared ProSST with other PLMs including ESM-2[7], ESM-1b [5], and the sequence-structure model SaProt [14] (two parameter versions, 35M and 650M), MIF-ST [38], as well as the protein structure representation model GearNet [32] and ESM-GearNet [34]. ", "page_idx": 7}, {"type": "text", "text": "Results. The results of the supervised fine-tuning tasks are shown in Table 4.2, and we can get the following conclusions: ", "page_idx": 7}, {"type": "text", "text": "\u2022 ProSST gets the best results among all models with 4 firsts in all 6 settings. For the tasks (settings) of DeepLoc, Metal Ion Binding, ProSST largely surpasses other methods, and ESM-GearNet gets comparable (or slightly better) results for thermostability and GO-BP and GO-CC with ProSST, at the price of more than $6\\times$ model size. \u2022 The sequence-structure models, ESM-GearNet, SaProt and ProSST, show better results than other counterparts, which suggests the importance of the structure cues in protein modeling. Furthermore, ProSST is more capable of integrating sequence and structure information of proteins than SaProt, which confirms the effectiveness of our designs. ", "page_idx": 7}, {"type": "text", "text": "Combined with the results in Section 4.1, ProSST exhibits powerful ability in multiple settings. ", "page_idx": 7}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we provide additional ablation studies and discussions to show the necessity and effectiveness of the detailed designs in ProSST. Specifically, we use zero-shot mutant effect prediction on ProteinGYM, supervised downstream task DeepLoc, and the perplexity in the pre-training validation set to conduct corresponding experiments. ", "page_idx": 7}, {"type": "text", "text": "Ablations on quantized structure. The ablation results of quantized structure are shown in Table 3 and Figure 3(a), and we can get the following findings: ", "page_idx": 7}, {"type": "text", "text": "\u2022 We can find, as the increases of $K$ (the size of local structure vocabulary), the performance of ProSST shows an upward trend on all metrics, and most metrics achieve the best results with $K=2048$ . Based on that, we set $K=2048$ as our default setting.   \n\u2022 As the increase of $K$ , the convergence of ProSST improves progressively (Figure 3(a)), which suggests incorporating structure cues can improve the representation capabilities of models.   \n\u2022 Based on the same network architecture, the proposed structure quantization method (with an appropriate hyper-parameter $K$ ) performs better than Foldseek [16] and DSSP [39], which shows the effectiveness of our design. ", "page_idx": 7}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/538653e268aaf3c7a35284f88c19b36ae2528bf2ae1e32a8be7a596ca154fa84.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/a59044b298fd2f87a650a343bcaa0cf9022a04166d0ade3e8b2ccf6240104003.jpg", "table_caption": ["Table 3: Ablation studies on quantized structure. We first show the performance of our models with $K$ centroids of local structures. ProSST $\\langle K{=}0)$ refers to the model without structure token sequence. We also replace the proposed quantization method with existing Foldseek and DSSP, and show the results of these variants. "], "table_footnote": ["Table 4: Ablation studies on disentangled attention. The term \"-S2R\" denotes the removal of structureto-residue in our attention formulation, similar to other terms, and \"- PE\" denotes the removal of positional encoding. ProSST (self-attention) refers to the model trained with standard attention (with structure cues). "], "page_idx": 8}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/c9133adf5e889dacc0f2cd3de3f684f8515bf6223e33dd79d81772f7e2a3f088.jpg", "img_caption": ["(a) Ablations on quantized structure. "], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/5cc4698fda72f25c1e2addc0f237de6ddc4bd64c22e459eea71b7b1889f7c24d.jpg", "img_caption": ["(b) Ablations on disentangled attention. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Figure 3: Perplexity curves of ProSST under different settings. We ablate the components of quantized structure and disentangled attention, and show their perplexity curves on the validation set. ", "page_idx": 8}, {"type": "text", "text": "\u2022 ProSST (Foldseek), ProSST (DSSP), and all ProSST $(K\\!>\\!0)$ models significantly surpass ProSST $\\langle K{=}0)$ in all metrics, which confirms the importance of the structure cues again. \u2022 There is almost no difference in performance between ProSST $(K{=}1)$ ) and ProSST $(K{=}0)$ , indicating that the improvement does not come from the rise in parameters of disentangled attention. ", "page_idx": 9}, {"type": "text", "text": "Ablations on disentangled attention. Here we show detailed ablations and comparisons of disentangled attention in Table 4 and Figure 3(b), and we can get the following observations: ", "page_idx": 9}, {"type": "text", "text": "\u2022 All items in Equation 4 are necessary to our attention formulation. Also note that \u2018P2R\u2019 attention has the least impact on model capacity, with the Perplexity slightly increasing from 9.033 to 9.173, suggesting that positional attention to amino acids is relatively less critical than other items. Conversely, removing \u2018R2S\u2019 item results in a significant increase in Perplexity from 9.033 to 12.142, underscoring the important role of structure information in enhancing the model\u2019s representation capability. \u2022 Compared with standard self-attention, our attention formulation gets better results for all metrics, indicating that explicitly modeling structure cues is crucial for integrating such information. Besides, positional encoding is also necessary in our design. ", "page_idx": 9}, {"type": "text", "text": "As we have mentioned in the Section 2, our disentangled should learn the connections between structure and residue sequence. To valid these, we conduct further experiments to analyze disentangled attention in the Appendix A.5. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion and Limitations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This paper introduces ProSST, a protein sequence-structure transformer for PLM. ProSST includes two key techniques, protein structure quantization and sequence-structure disentangled attention. The structure quantization module contains an encoder and a k-means clustering model. The encoder is trained with a denoising objective and is utilized for encoding protein structures. Leveraging this encoder, we embed the local structures of each residue within every protein in the C.A.T.H dataset into a continuous latent space. Then we utilize $\\boldsymbol{\\mathrm{k}}$ -means clustering algorithm to obtain $K$ (default setting is 2048) centroids. These centroids are then utilized to discretize the local structures of residues based on the index of the nearest centroid of its structure embedding vectors. A protein structure can be transformed into a sequence of discrete numbers (or referred to tokens) and each token representing the corresponding local structure of residue. The sequence-structure attention enhances standard self-attention by not only considering self-attention residues but also incorporating attention between residues and structures, and vice versa. This enables the model to learn the relationships between residues and structures, thereby acquiring improved adequate contextual representations of residues. Furthermore, we pre-train ProSST with 18.8 million protein structures using a MLM objective. Experimental results show that ProSST can outperform existing models in ProteinGYM benchmark and other supervised learning tasks. Despite of this, there are some limitations of ProSST. For example, the local structure construction and encoding requires heavy computations. In the future work, we aim to speed up the protein structure quantization process. Another threat is that the structural and sequential data are required for ProSST to derive the final protein representations, since the amount of available structural data is lower than that of sequence data. We provide solutions in the Appendix Section A.6. Additionally, we plan to enhance ProSST by training it with larger structure datasets and expanding its parameter, which may further improve its performance. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by the grants from the National Natural Science Foundation of China (Grant Number 12104295), the Computational Biology Key Program of Shanghai Science and Technology Commission (23JS1400600), Shanghai Jiao Tong University Scientific and Technological Innovation Funds (21X010200843), and Science and Technology Innovation Key R&D Program of Chongqing (CSTB2022TIAD-STX0017), the Student Innovation Center at Shanghai Jiao Tong University, and Shanghai Artificial Intelligence Laboratory. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] William P Jencks. Catalysis in chemistry and enzymology. Courier Corporation, 1987. ", "page_idx": 10}, {"type": "text", "text": "[2] The UniProt Consortium. UniProt: the Universal Protein Knowledgebase in 2023. Nucleic Acids Research, 51(D1):D523\u2013D531, 11 2022.   \n[3] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019.   \n[4] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.   \n[5] Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C. Lawrence Zitnick, Jerry Ma, and Rob Fergus. Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences. Proceedings of the National Academy of Sciences, 118(15):e2016239118, 2021.   \n[6] Joshua Meier, Roshan Rao, Robert Verkuil, Jason Liu, Tom Sercu, and Alex Rives. Language models enable zero-shot prediction of the effects of mutations on protein function. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P.S. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, volume 34, pages 29287\u201329303. Curran Associates, Inc., 2021.   \n[7] Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Nikita Smetanin, Robert Verkuil, Ori Kabeli, Yaniv Shmueli, et al. Evolutionary-scale prediction of atomic-level protein structure with a language model. Science, 379(6637):1123\u20131130, 2023.   \n[8] Ahmed Elnaggar, Michael Heinzinger, Christian Dallago, Ghalia Rehawi, Yu Wang, Llion Jones, Tom Gibbs, Tamas Feher, Christoph Angerer, Martin Steinegger, et al. Prottrans: Toward understanding the language of life through self-supervised learning. IEEE transactions on pattern analysis and machine intelligence, 44(10):7112\u20137127, 2021.   \n[9] Nadav Brandes, Dan Ofer, Yam Peleg, Nadav Rappoport, and Michal Linial. Proteinbert: a universal deep-learning model of protein sequence and function. Bioinformatics, 38(8):2102\u2013 2110, 2022.   \n[10] Hedi Hegyi and Mark Gerstein. The relationship between protein structure and function: a comprehensive survey with application to the yeast genome 11edited by g. von heijne. Journal of Molecular Biology, 288(1):147\u2013164, 1999.   \n[11] John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, Russ Bates, Augustin \u017d\u00eddek, Anna Potapenko, et al. Highly accurate protein structure prediction with alphafold. Nature, 596(7873):583\u2013589, 2021.   \n[12] Minkyung Baek, Frank DiMaio, Ivan Anishchenko, Justas Dauparas, Sergey Ovchinnikov, Gyu Rie Lee, Jue Wang, Qian Cong, Lisa N Kinch, R Dustin Schaeffer, et al. Accurate prediction of protein structures and interactions using a three-track neural network. Science, 373(6557):871\u2013876, 2021.   \n[13] Mihaly Varadi, Stephen Anyango, Mandar Deshpande, Sreenath Nair, Cindy Natassia, Galabina Yordanova, David Yuan, Oana Stroe, Gemma Wood, Agata Laydon, et al. Alphafold protein structure database: massively expanding the structural coverage of protein-sequence space with high-accuracy models. Nucleic acids research, 50(D1):D439\u2013D444, 2022.   \n[14] Jin Su, Chenchen Han, Yuyang Zhou, Junjie Shan, Xibin Zhou, and Fajie Yuan. Saprot: Protein language modeling with structure-aware vocabulary. In The Twelfth International Conference on Learning Representations, 2024.   \n[15] Michael Heinzinger, Konstantin Weissenow, Joaquin Gomez Sanchez, Adrian Henkel, Martin Steinegger, and Burkhard Rost. Prostt5: Bilingual language model for protein sequence and structure. bioRxiv, pages 2023\u201307, 2023.   \n[16] Michel Van Kempen, Stephanie S Kim, Charlotte Tumescheit, Milot Mirdita, Jeongjae Lee, Cameron LM Gilchrist, Johannes S\u00f6ding, and Martin Steinegger. Fast and accurate protein structure search with foldseek. Nature Biotechnology, pages 1\u20134, 2023.   \n[17] Hongyuan Lu, Daniel J Diaz, Natalie J Czarnecki, Congzhi Zhu, Wantae Kim, Raghav Shroff, Daniel J Acosta, Bradley R Alexander, Hannah O Cole, Yan Zhang, et al. Machine learningaided engineering of hydrolases for pet depolymerization. Nature, 604(7907):662\u2013667, 2022.   \n[18] Bowen Jing, Stephan Eismann, Patricia Suriana, Raphael John Lamarre Townshend, and Ron Dror. Learning from protein structure with geometric vector perceptrons. In International Conference on Learning Representations, 2021.   \n[19] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141 ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. Von Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 30. Curran Associates, Inc., 2017.   \n[20] Roshan Rao, Nicholas Bhattacharya, Neil Thomas, Yan Duan, Peter Chen, John Canny, Pieter Abbeel, and Yun Song. Evaluating protein transfer learning with tape. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 32. Curran Associates, Inc., 2019.   \n[21] Pascal Notin, Mafalda Dias, Jonathan Frazer, Javier Marchena Hurtado, Aidan N Gomez, Debora Marks, and Yarin Gal. Tranception: protein fitness prediction with autoregressive transformers and inference-time retrieval. In International Conference on Machine Learning, pages 16990\u201317017. PMLR, 2022.   \n[22] Erik Nijkamp, Jeffrey A Ruffolo, Eli N Weinstein, Nikhil Naik, and Ali Madani. Progen2: exploring the boundaries of protein language models. Cell systems, 14(11):968\u2013978, 2023.   \n[23] Noelia Ferruz, Steffen Schmidt, and Birte H\u00f6cker. Protgpt2 is a deep unsupervised language model for protein design. Nature communications, 13(1):4348, 2022.   \n[24] Ahmed Elnaggar, Hazem Essam, Wafaa Salah-Eldin, Walid Moustafa, Mohamed Elkerdawy, Charlotte Rochereau, and Burkhard Rost. Ankh: Optimized protein language model unlocks general-purpose modelling. arXiv preprint arXiv:2301.06568, 2023.   \n[25] Bo Chen, Xingyi Cheng, Pan Li, Yangli-ao Geng, Jing Gong, Shen Li, Zhilei Bei, Xu Tan, Boyan Wang, Xin Zeng, et al. xtrimopglm: unified 100b-scale pre-trained transformer for deciphering the language of protein. arXiv preprint arXiv:2401.06199, 2024.   \n[26] Vladimir Gligorijevi\u00b4c, P Douglas Renfrew, Tomasz Kosciolek, Julia Koehler Leman, Daniel Berenberg, Tommi Vatanen, Chris Chandler, Bryn C Taylor, Ian M Fisk, Hera Vlamakis, et al. Structure-based protein function prediction using graph convolutional networks. Nature communications, 12(1):3168, 2021.   \n[27] Yang Tan, Jia Zheng, Liang Hong, and Bingxin Zhou. Protsolm: Protein solubility prediction with multi-modal features. arXiv:2406.19744, 2024.   \n[28] Bingxin Zhou, Lirong Zheng, Banghao Wu, Kai Yi, Bozitao Zhong, Yang Tan, Qian Liu, Pietro Li\u00f2, and Liang Hong. A conditional protein diffusion model generates artificial programmable endonuclease sequences with enhanced activity. Cell Discovery, 10(1):95, 2024.   \n[29] Bingxin Zhou, Lirong Zheng, Banghao Wu, Yang Tan, Outongyi Lv, Kai Yi, Guisheng Fan, and Liang Hong. Protein engineering with lightweight graph denoising neural networks. Journal of Chemical Information and Modeling, 64(9):3650\u20133661, 2024.   \n[30] Yang Tan, Lirong Zheng, Bozitao Zhong, Liang Hong, and Bingxin Zhou. Protein representation learning with sequence information embedding: Does it always lead to a better performance? arXiv:2406.19755, 2024.   \n[31] Ruidong Wu, Fan Ding, Rui Wang, Rui Shen, Xiwen Zhang, Shitong Luo, Chenpeng Su, Zuofan Wu, Qi Xie, Bonnie Berger, et al. High-resolution de novo structure prediction from primary sequence. BioRxiv, pages 2022\u201307, 2022.   \n[32] Zuobai Zhang, Minghao Xu, Arian Rokkum Jamasb, Vijil Chenthamarakshan, Aurelie Lozano, Payel Das, and Jian Tang. Protein representation learning by geometric structure pretraining. In The Eleventh International Conference on Learning Representations, 2023.   \n[33] Zichen Wang, Steven A Combs, Ryan Brand, Miguel Romero Calvo, Panpan Xu, George Price, Nataliya Golovach, Emmanuel O Salawu, Colby J Wise, Sri Priya Ponnapalli, et al. Lm-gvp: an extensible sequence and structure informed deep learning framework for protein property prediction. Scientific reports, 12(1):6832, 2022.   \n[34] Zuobai Zhang, Minghao Xu, Aurelie Lozano, Vijil Chenthamarakshan, Payel Das, and Jian Tang. Enhancing protein language model with structure-based encoder and pre-training. In ICLR 2023 - Machine Learning for Drug Discovery workshop, 2023.   \n[35] Yang Tan, Bingxin Zhou, Lirong Zheng, Guisheng Fan, and Liang Hong. Semantical and topological protein encoding toward enhanced bioactivity and thermostability. bioRxiv, pages 2023\u201312, 2023.   \n[36] V\u0131ctor Garcia Satorras, Emiel Hoogeboom, and Max Welling. E (n) equivariant graph neural networks. In International conference on machine learning, pages 9323\u20139332. PMLR, 2021.   \n[37] Chloe Hsu, Robert Verkuil, Jason Liu, Zeming Lin, Brian Hie, Tom Sercu, Adam Lerer, and Alexander Rives. Learning inverse folding from millions of predicted structures. In International conference on machine learning, pages 8946\u20138970. PMLR, 2022.   \n[38] Kevin K Yang, Niccol\u00f2 Zanichelli, and Hugh Yeh. Masked inverse folding with sequence transfer for protein representation learning. Protein Engineering, Design and Selection, 36:gzad015, 2023.   \n[39] Wolfgang Kabsch and Christian Sander. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and geometrical features. Biopolymers: Original Research on Biomolecules, 22(12):2577\u20132637, 1983.   \n[40] Joseph L Watson, David Juergens, Nathaniel R Bennett, Brian L Trippe, Jason Yim, Helen E Eisenach, Woody Ahern, Andrew J Borst, Robert J Ragotte, Lukas F Milles, et al. De novo design of protein structure and function with rfdiffusion. Nature, 620(7976):1089\u20131100, 2023.   \n[41] Ian Sillitoe, Nicola Bordin, Natalie Dawson, Vaishali P Waman, Paul Ashford, Harry M Scholes, Camilla SM Pang, Laurel Woodridge, Clemens Rauer, Neeladri Sen, et al. Cath: increased structural coverage of functional space. Nucleic acids research, 49(D1):D266\u2013D273, 2021.   \n[42] Pengcheng He, Xiaodong Liu, Jianfeng Gao, and Weizhu Chen. Deberta: Decoding-enhanced bert with disentangled attention. In International Conference on Learning Representations, 2021.   \n[43] Pascal Notin, Aaron Kollasch, Daniel Ritter, Lood van Niekerk, Steffanie Paul, Han Spinner, Nathan Rollins, Ada Shaw, Rose Orenbuch, Ruben Weitzman, Jonathan Frazer, Mafalda Dias, Dinko Franceschi, Yarin Gal, and Debora Marks. Proteingym: Large-scale benchmarks for protein ftiness prediction and design. In A. Oh, T. Neumann, A. Globerson, K. Saenko, M. Hardt, and S. Levine, editors, Advances in Neural Information Processing Systems, volume 36, pages 64331\u201364379. Curran Associates, Inc., 2023.   \n[44] Daniel Hesslow, Niccol\u00f3 Zanichelli, Pascal Notin, Iacopo Poli, and Debora Marks. Rita: a study on scaling up generative protein sequence models. arXiv preprint arXiv:2205.05789, 2022.   \n[45] Ethan C Alley, Grigory Khimulya, Surojit Biswas, Mohammed AlQuraishi, and George M Church. Unified rational protein engineering with sequence-based deep representation learning. Nature methods, 16(12):1315\u20131322, 2019.   \n[46] C\u00e9line Marquet, Michael Heinzinger, Tobias Olenyi, Christian Dallago, Kyra Erckert, Michael Bernhofer, Dmitrii Nechaev, and Burkhard Rost. Embeddings from protein language models predict conservation and variant effects. Human genetics, 141(10):1629\u20131647, 2022.   \n[47] Elodie Laine, Yasaman Karami, and Alessandra Carbone. Gemme: a simple and fast global epistatic model predicting mutational effects. Molecular biology and evolution, 36(11):2604\u2013 2619, 2019.   \n[48] Roshan M Rao, Jason Liu, Robert Verkuil, Joshua Meier, John Canny, Pieter Abbeel, Tom Sercu, and Alexander Rives. Msa transformer. In International Conference on Machine Learning, pages 8844\u20138856. PMLR, 2021.   \n[49] Jonathan Frazer, Pascal Notin, Mafalda Dias, Aidan Gomez, Joseph K Min, Kelly Brock, Yarin Gal, and Debora S Marks. Disease variant prediction with deep generative models of evolutionary data. Nature, 599(7883):91\u201395, 2021.   \n[50] Jung-Eun Shin, Adam J Riesselman, Aaron W Kollasch, Conor McMahon, Elana Simon, Chris Sander, Aashish Manglik, Andrew C Kruse, and Debora S Marks. Protein design and variant prediction using autoregressive generative models. Nature communications, 12(1):2403, 2021.   \n[51] Adam J Riesselman, John B Ingraham, and Debora S Marks. Deep generative models of genetic variation capture the effects of mutations. Nature methods, 15(10):816\u2013822, 2018.   \n[52] Pascal Notin, Lood Van Niekerk, Aaron W Kollasch, Daniel Ritter, Yarin Gal, and Debora Susan Marks. TranceptEVE: Combining family-specific and family-agnostic models of protein sequences for improved ftiness prediction. In NeurIPS 2022 Workshop on Learning Meaningful Representations of Life, 2022.   \n[53] Thomas A Hopf, John B Ingraham, Frank J Poelwijk, Charlotta PI Sch\u00e4rfe, Michael Springer, Chris Sander, and Debora S Marks. Mutation effects predicted from sequence co-variation. Nature biotechnology, 35(2):128\u2013135, 2017.   \n[54] Raghav Shroff, Austin W Cole, Daniel J Diaz, Barrett R Morrow, Isaac Donnell, Ankur Annapareddy, Jimmy Gollihar, Andrew D Ellington, and Ross Thyer. Discovery of novel gain-of-function mutations guided by structure-based deep learning. ACS synthetic biology, 9(11):2927\u20132935, 2020.   \n[55] Christian Dallago, Jody Mou, Kadina E Johnston, Bruce Wittmann, Nick Bhattacharya, Samuel Goldman, Ali Madani, and Kevin K Yang. FLIP: Benchmark tasks in ftiness landscape inference for proteins. In Thirty-ffith Conference on Neural Information Processing Systems Datasets and Benchmarks Track (Round 2), 2021.   \n[56] Jos\u00e9 Juan Almagro Armenteros, Casper Kaae S\u00f8nderby, S\u00f8ren Kaae S\u00f8nderby, Henrik Nielsen, and Ole Winther. Deeploc: prediction of protein subcellular localization using deep learning. Bioinformatics, 33(21):3387\u20133395, 2017.   \n[57] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. In International Conference on Learning Representations, 2019.   \n[58] Minghao Xu, Zuobai Zhang, Jiarui Lu, Zhaocheng Zhu, Yangtian Zhang, Ma Chang, Runcheng Liu, and Jian Tang. Peer: A comprehensive and multi-task benchmark for protein sequence understanding. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 35156\u201335173. Curran Associates, Inc., 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "A.1 Zero-Shot Scoring ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Previous studies have demonstrated that PLMs, when trained on extensive and varied protein sequence databases, are capable of predicting experimental measurements of protein mutants function without further supervision [6, 14]. For those PLMs that are trained with masked language modeling objective, the calculation of mutation scores can be formalized as follows: ", "page_idx": 14}, {"type": "equation", "text": "$$\nS c o r e(F)=\\sum_{i=1}^{|F|}\\log P(x_{p_{i}}=f_{i}|x)-\\log P(x_{p_{i}}=w_{i}|x)\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Here $\\pmb{F}$ is a single or multi-point mutant, and $\\pmb{F}=\\{(p_{i},\\pmb{f}_{i},\\pmb{w}_{i})|i=1,2,...,|\\pmb{F}|\\}$ is a set of triplets, where $p_{i}\\in\\mathbb{N}$ represents the mutation position, $\\boldsymbol{\\mathscr{f}}_{i}$ is the residue after the point mutation, and $\\pmb{w}_{i}$ is the original residue of the point mutation. $\\textbf{\\em x}$ is the sequence of residues of the wild type. We slightly modify the formula above to adapt to ProSST, where the structure sequence is an additional condition to score mutants: ", "page_idx": 14}, {"type": "equation", "text": "$$\nS c o r e({\\cal F})=\\sum_{i=1}^{|{\\cal F}|}\\log P(x_{p_{i}}=f_{i}|x,s)-\\log P(x_{p_{i}}=w_{i}|x,s)\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Here, $\\pmb{s}$ is the structure token sequence of the wild type. ", "page_idx": 14}, {"type": "text", "text": "A.2 Details of the Datasets and Metrics ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Dataset for pre-training. The pre-training data is collected from AlphaFoldDB [13], which contains more than 214 million structures predicted by AlphaFold [11]. We downloaded the $90\\%$ reduced version, containing 18.8 million structures.3. From this collection, we randomly select 100,000 structures for validation (sequences with a similarity of over 30 to the training set will be removed for data deduplication.), enabling us to monitor the perplexity in the training phase. During pre-training, proteins with more than 2048 resiudes (594 samples) are removed for training efficacy. ", "page_idx": 14}, {"type": "text", "text": "Dataset for training structure encoder. The dataset used for training the structure encoder originates from CATH43-S40 4. This dataset is manually annotated and comprises protein crystal structural domains that have been deduplicated for sequence similarity by $40\\bar{\\%}$ . The original dataset contains 31,885 structures. After removing structural domains missing atoms such as $C\\alpha$ and $\\mathbf{N}$ , the dataset is reduced to 31,270 entries. From this, 200 structures were randomly selected to serve as a validation set. The auto-encoder model was then trained using the configuration that yielded the lowest loss on this validation set. ", "page_idx": 14}, {"type": "text", "text": "Dataset for training structure codebook. The dataset for training the structure codebook consists of local structures extracted from CATH43-S40. Given a protein structure, slide along the residue sequence to select a segment with a chosen residue as the anchor. Connect up to 40 residues within $10\\,\\mathring\\mathrm{A}$ [54] to form a star-shaped graph. As shown in Figure A4, local structures with more than 40 neighbors account for only $0.00052\\%$ , indicating that our choice covers most cases. For pairwise amino acid pairs in this graph, if the Euclidean distance is less than $10\\mathrm{~\\AA}$ , a link will be assigned to them. This process yields a number of protein local structures equal to the length of the protein multiplied by the total number of proteins, resulting in 4,735,677 local structures from the protein structures in CATH43-S40. These sub-structures are fed into a structural encoder to obtain embeddings. By setting various quantities for $K$ , different structure codebooks are obtained using the $\\mathbf{k}$ -means clustering algorithm. ", "page_idx": 14}, {"type": "text", "text": "Dataset and metrics for zero-shot mutant effect prediction. ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We utilize the ProteinGYM benchmark [43] to assess the zero-shot mutant effect prediction capabilities of ProSST. ProteinGYM offers comprehensive benchmarks specifically collected for predicting protein ftiness. It contains a wide range of deep mutational scanning assays with millions of mutated sequences. ProSST is evaluated using the most extensively utilized datasets for substitution mutations, which include 217 experimental assays. Each assay incorporates both the sequence and structure of the protein, with a particular emphasis on 66 datasets that focus on thermo-stability. The evaluation metrics employed are the Spearman coefficient, Top-recall, and NDCG, where higher values signify superior model performance. These metrics are computed using scripts 5provided by ProteinGYM. ", "page_idx": 14}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/677486cde0c774a8e2b8cd9301540f92f4c74d00005d96977d72fcd56721770a.jpg", "img_caption": ["Figure A4: The distribution of the number of residues within $10\\,\\mathring\\mathrm{A}$ distance of a local structure. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "Datasets and metrics for downstream tasks. The downstream datasets have the same train, valid, and test splits as SaProt\u2019s and are downloaded from SaProt. Data statistics are provided in Table A5. ", "page_idx": 15}, {"type": "text", "text": "\u2022 Thermostability. The task is to predict the thermostability values of proteins using the \"Human-cell\" divisions from the Thermostability task in FLIP [55]. For this regression task, the Spearman correlation coefficient is utilized as the evaluation metric to evaluate the prediction results.   \n\u2022 DeepLoc (Protein Sub-cellular Localization). The task is to output a probability distribution across two sub-cellular localization categories for a protein. This is a binary classification task, and we utilize accuracy as the metric to evaluate the predictions. This dataset was introduced by DeepLoc [56] and we use the original data split.   \n\u2022 Metal Ion Binding. The task is to predict whether metal ion-binding sites exist within a protein. This is also a binary classification task, and we utilize accuracy as the metric to evaluate the predictions. This dataset was introduced by TAPE [20], and we use the original data split.   \n\u2022 GO annotations prediction. This task is to predict Gene Ontology terms to evaluate the model\u2019s ability to predict protein functions. This task was introduced by DeepFRI [26], and we use three types of GO labels: Molecular Function (MF), Biological Process (BP), and Cellular Component (CC). This is a multi-label classification task, and we evaluate the model using the Max F1-Score. ", "page_idx": 15}, {"type": "text", "text": "A.3 Details of Implementations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Structure encoder. We describe a structure with the graph $G=(\\boldsymbol{V},\\boldsymbol{E})$ , adopting the characterizations of $V$ and $\\boldsymbol{E}$ as outlined in the GVP framework [18]. The GVP encoder includes a six-layer message-passing graph neural network in which a geometric perceptron replaces the MLP to ensure translational and rotational invariance of the input structure. Our GVP encoder is consistent with the original GVP-GNN [18], except that we removed the residue type information. The GVP encoder is trained from scratch. The dimensions for node and edge representations are set at 256 and 64, respectively, with the encoder comprising six layers. For optimization, we employ the Adam optimizer in a mini-batch gradient descent approach. To manage computational load, batches are formed by grouping structures of similar sizes, with each batch containing no more than 3000 nodes. The learning rate is set to $1.0\\times10^{-4}$ . The dropout probability is set to 0.01. And The number of graph layers is set at 6. The training and validation curves of the structure encoder are shown in Figure 5(a). ", "page_idx": 15}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/f8ea84520c9c657ed409a872756c3907e377e9279122233fcca4a6ef06063634.jpg", "table_caption": [], "table_footnote": ["Table A5: Downstream datasets split statistics. "], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/a43b1f74a5e513799bfdfa876181a941da2dfd2b35141173f42fcdcabf524f5d.jpg", "img_caption": ["Figure A5: (a) Training and validation curves of the local-structure auto-encoder. (b) Inference speed of ProSST on different sequence lengths. (batch size $=16$ ). "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Pre-training. All ProSST models is trained on a DGX-A800 GPU $(8\\!\\times\\!800)$ server in BF16 precision for about a month. The model has 12 transformer layers, 12 attention heads, and 768 embedding dims with 3172 feed-forward embedding dimensions with the GELU activation function. We train with 8192 tokens per mini-batch for 500,000 steps. We use AdamW [57] as our optimizer with $\\beta_{1}$ and $\\beta_{2}$ set to 0.9 and 0.999, and a weight decay value of 0.001. We warm up the learning rate from 0 to 0.0002 over the first 2000 steps, then decay it by a cosine schedule to the 0. We use a dropout rate of 0.1 and clip gradients using a clipping value of 1.0. For the tokenization of the protein data, we use the residue-level tokenizer which is adopted in several PLMs [5, 7, 6]. To make the structure sequence the same length as the amino acid sequence, we also added special [SOS], [EOS], and $I P A D J$ token for the structure sequences. ", "page_idx": 16}, {"type": "text", "text": "Fine-tuning. To ensure fair comparisons, we fine-tuned ProSST using a fixed set of hyper-parameters. We use for the Adam optimizer with $\\beta_{1}$ set to 0.9, $\\beta_{2}$ to 0.98, and applied an $L2$ weight decay of 0.001. The batch size was maintained at 64 (If 64 causes the GPU memory to explode, we will reduce the batch size and then use gradient accumulation to achieve the same batch size.) and the learning rate was set at 0.00003, except for Go annotation prediction, where it was adjusted to 0.00001. We fine-tuned all model parameters for 200 epochs, and we choose the best checkpoints based on validation set performance. Following SaProt $[14]^{6}$ , we downloaded all protein structures identified by Uniprot IDs from AFDB [13], and any proteins not found in AFDB were excluded. ", "page_idx": 16}, {"type": "text", "text": "Inference Speed. We computed the inference speed of ProSST, SaProt (650M) and SaProt (35M) on proteins of different lengths using a batch size of 16 on a server equipped with two Intel 6248R processors and a 3090 GPU and the results are shown in Table 5(b). ", "page_idx": 16}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/d5cfa51b43a47ce7cd94b3fc1f2042127685a1560d5bdc09b201da1f51f0094a.jpg", "table_caption": [], "table_footnote": ["Table A6: Spearman\u2019s rank correlation of baseline models and ProSST on the ProteinGym, separated into five functional categories (Activity, Binding, Organismal Fitness, Stability and Expression). "], "page_idx": 17}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/719ca445b20db08b2bb4eaea4aabe81cc0a2733ca3e10e361ec47f8e58ef80c6.jpg", "table_caption": [], "table_footnote": ["Table A7: Performance of ProSST $\\overline{{K{=}2048}}$ ) using different structure tokens as inputs. "], "page_idx": 17}, {"type": "text", "text": "A.4 Performance of models on the ProteinGYM benchmark separated by functional categories ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Table A.4 shows the Spearman\u2019s rank correlations on ProteinGYM, categorized by five function types. ProSST achieves state-of-the-art (SOTA) performance in the Stability, Binding, and Expression subsets. ", "page_idx": 17}, {"type": "text", "text": "A.5 Additional experiments on disentangled attention. ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We conducted additional experiments to analyze the relationship between disentangled attention. ", "page_idx": 17}, {"type": "text", "text": "Experiment 1. We replaced all structure tokens in the ProteinGYM and the validation set with zeros or random numbers from a uniform distribution and re-evaluated ProSST. The results are shown in Table A7 The results show that the incorrect structure tokens harmed the performance of ProSST ", "page_idx": 17}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/95ec23f00e3e8683ee560d5690fa94a252299274641f7a12e42b4f80b0b42cd1.jpg", "img_caption": ["Figure A6: Different types of attentions on Green Fluorescent Protein (GFP). These attentions are the average of each head in the final layer of the Transformer. "], "img_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/16401578b709a46baf8681a38991e3a70d48431d5009908e21865cdca0d21716.jpg", "table_caption": [], "table_footnote": ["Table A8: Performance comparison of ProSST with special $\\overline{{K}}$ values. "], "page_idx": 18}, {"type": "text", "text": "significantly, suggesting that disentangled attention learned the sequence-structure relationship.   \nOtherwise, the performance would only have a minimal impact. ", "page_idx": 18}, {"type": "text", "text": "Experiment 2. To verify if disentangled attention can indeed enhance performance, we train ProSST $(K{=}1)$ by substituting the structural tokens with a constant value of 1. This configuration maintains the disentangled attention mechanism even though the structure input is useless. If ProSST $(K{=}1)$ still improves performance, it indicates that the improvement is solely due to the disentangled attention. We evaluate this model on DeepLoc, ProteinGYM and the valid set. The results are shown in Table A8 There is little difference between $K{=}1$ and $K{=}0$ since their perplexity curves (refer to Figure 3(a)) nearly overlap. This suggests that disentangled attention alone cannot enhance performance without correct structure tokens. ", "page_idx": 18}, {"type": "text", "text": "Experiment 3. We visualize the learned different types of attentions on Green Fluorescent Protein (GFP, Unipro $\\scriptstyle\\mathrm{ID}:\\mathrm{P4}2212\\ ^{7}$ ), including 238 residues, in Figure A6. We can see that disentangled attention learns different attention patterns, with notable differences between \u201cR2S\u201d and \u201cS2R\u201d. ", "page_idx": 18}, {"type": "table", "img_path": "4Z7RZixpJQ/tmp/8849248e398532e26e13f05b06dacf5765e07dbc878ab344a2e9b960986a0e8c.jpg", "table_caption": [], "table_footnote": ["Table A9: Performance comparison of ProSST with different special $\\overline{{K}}$ . "], "page_idx": 19}, {"type": "text", "text": "We can conclude from Experiment 1 and Experiment 2 that the disentangled attention and structure tokens sequence are inseparable. The disentangled attention mechanism cannot function without correct structure tokens. This also indicates that the performance improvement of our model stems from the design of the model rather than increasing its parameters of the attention layer. Furthermore, the Experiment 3 shows that our disentangled attention actually learned different patterns of attentions. ", "page_idx": 19}, {"type": "text", "text": "A.6 Solutions to Sequence-only Datasets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "In conclusion, we offer two solutions for obtain representations of the sequence-only protein datasets: ", "page_idx": 19}, {"type": "text", "text": "\u2022 Utilize AlphaFold 2 [11] or ESMFold $[7]^{8}$ for structure prediction as they are highly reliable methods.   \n\u2022 Use ProSST (MST), which is trained with structure masking and supporting sequence-only inputs. The MST denotes \u201cMasked Structure Training (MST)\u201d, which means that during pre-training, each sample\u2019s structure sequence has a $50\\%$ probability of being replaced by a fully masked sequence [1,1,1,1,1,...,1], simulating missing protein structure. Therefore, when applying ProSST to sequence-only datasets, we need to use the masked sequence [1,1,1,1,1,...,1] as a substitute for the structure token sequence. ", "page_idx": 19}, {"type": "text", "text": "We have evaluated the two approaches on the ProteinGym benchmark, binary localization prediction (BLP) from a sequence-only benchmark, PEER [58], and perplexity on the validation set. The results are show in Table A9: In the Table A9, the first two rows show the performance differences between AlphaFold and ESMFold. Rows 3-4 show the performance of the new model ProSST(MST). And row 5 shows the performance of the sequence-only model. ", "page_idx": 19}, {"type": "text", "text": "A.7 AlphaFold pLDDT versus Zero-shot mutant effect performance ", "text_level": 1, "page_idx": 19}, {"type": "image", "img_path": "4Z7RZixpJQ/tmp/7e4cd1f668ffaab819326f32dbbbf76ae9cb537c98719a8602b1707d5b7c5132.jpg", "img_caption": ["Figure A7: (a) pLDDT vs. Spearman of ProSST on ProteinGYM. (b) pLDDT vs. Spearman of SaProt on ProteinGYM. (c) pLDDT vs. Spearman of ESM-IF1 on ProteinGYM. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "Protein structures containing disorder region may not be accurately predicted by AlphaFold 2, potentially leading to reduced performance of structure-aware models. Here, we test the relationship between AlphaFold pLDDT scores and the performance of structure-aware models including ProSST, SaProt, and ESM-IF on ProteinGYM, as illustrated in Figures A7. Our findings reveal a positive correlation between pLDDT values and model performance: a correlation coefficient of 0.30 for ProSST, 0.31 for SaProt, and 0.42 for ESM-IF1, where the correlation coefficient $(\\rho_{p})$ represents the strength of the relationship. These results suggest that structure-aware models may exhibit limitations in accurately predicting the structures of disordered proteins. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] We state clearly the scope and contribution of both communities of protein language modeling and computer science in the abstract and introduction. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 21}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] See Section 5. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] This paper does not include theoretical results. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that the paper does not include theoretical results. ", "page_idx": 21}, {"type": "text", "text": "\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 22}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] This paper has disclosed all the necessary information to reproduce the main experimental results, including the dataset (See Appendix A.2), network architecture (See Section 3.2), and network hyper-parameters (See Appendix A.3). ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] Our code and pre-trained models is available at https://github.com/ ai4protein/ProSST. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 23}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] We provide implementation details of our model in Section A.3. Baseline methods are pre-trained by their authors, which requires no further supervision or learning procedures. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] Measurements used to in this work return fixed results on a determined model, and a pre-trained model barely trains a set of models under the same dataset or hyper-parameter settings. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] Details for the running machine are provided at the beginning of Appendix A.3. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 24}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] The general ethical conduct has been carefully gone through to make sure the listed concerns are avoided or not applicable in this research. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] There is no societal impact of the work performed. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster. ", "page_idx": 24}, {"type": "text", "text": "\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. \u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 25}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] The paper poses no such risks. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 25}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] We cite all the papers for baseline methods. The baseline results of ProteinGYM are copied from the latest release on their GitHub repositories, which we attached URLs in Appendix A.2. The baselines results of supervised fine-tuning are copied from the latest reviewed version of SaProt. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] The paper does not release new assets. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 26}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 26}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}]