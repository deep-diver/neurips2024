[{"figure_path": "IXRa8adMHX/figures/figures_1_1.jpg", "caption": "Figure 1: On the left: an example of a multigraph with n = 6. The edges with pi\u2192j = \u221e are omitted. The shortest distance between nodes 5 and 3 is T5\u21923 = P5\u21921 + P1\u21922 + P2\u21923. Note that p5\u21923 = 0\u221e. On the right: an example of a spanning tree that illustrates the shortest paths from every node to node 3. The shortest distance between nodes 6 and 3 is T6\u21923 = \u221e because P6\u2192i = \u221e for all i \u2260 6.", "description": "The figure shows two graph representations. The left one is a multigraph with 6 nodes.  Edges represent communication between nodes, where the weight pi\u2192j represents communication time.  Edges with infinite weight (\u221e) are not shown. The right graph is a spanning tree, demonstrating shortest paths from each node to node 3.  The difference highlights how shortest paths, denoted by Tij, may be shorter than a direct connection if a direct connection has infinite cost.", "section": "Decentralized setup with times"}, {"figure_path": "IXRa8adMHX/figures/figures_8_1.jpg", "caption": "Figure 2: Line with pi+1\u2192i = pi\u2192i+1 = p for all i \u2208 [n-1], pij = \u221e otherwise. For all i \u2260 j \u2208 [n], edges i \u2192 j and j \u2192 i are merged and visualized with one undirected edge.", "description": "This figure shows a line graph where nodes represent workers and edges represent communication links.  Each edge has a weight of 'p', indicating the communication time between adjacent workers. The distance between non-adjacent workers is infinite (\u221e), meaning they cannot communicate directly. The figure illustrates how distances (shortest paths) between nodes are calculated in this graph topology.", "section": "Example: Line or Circle"}, {"figure_path": "IXRa8adMHX/figures/figures_9_1.jpg", "caption": "Figure 3: The communication time p = 10 seconds (Slow communication) in 2D-Mesh. On MNIST dataset (LeCun et al., 2010) with 100 workers, Fragile SGD is much faster and has better test accuracy than Minibatch SGD.", "description": "This figure compares the performance of Fragile SGD and Minibatch SGD on the MNIST dataset using a 2D-Mesh network with 100 workers and a slow communication time (p=10 seconds).  The left plot shows the function value convergence, while the right plot shows test accuracy over time.  The results demonstrate that Fragile SGD achieves both faster convergence and higher test accuracy compared to Minibatch SGD under these conditions.", "section": "Highlights of Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_14_1.jpg", "caption": "Figure 4: Examples of ND-Mesh graphs. For all i \u2260 j \u2208 [n], edges i \u2192 j and j \u2192 i are merged and visualized with one undirected edge.", "description": "This figure shows examples of 2D and 3D mesh graphs.  The nodes represent workers in a decentralized system, and the edges represent communication links between them.  The weights of the edges (\u03c1) symbolize the communication times.  The figure illustrates the structure used in the analysis of time complexity in different dimensional mesh topologies.", "section": "A More Examples"}, {"figure_path": "IXRa8adMHX/figures/figures_15_1.jpg", "caption": "Figure 2: Line with pi+1\u2192i = pi\u2192i+1 = p for all i \u2208 [n-1], pij = \u221e otherwise. For all i \u2260 j \u2208 [n], edges i \u2192 j and j \u2192 i are merged and visualized with one undirected edge.", "description": "This figure shows a line graph where each node represents a worker, and the edges represent communication channels.  The weights of the edges (denoted by 'p') represent the communication time between adjacent workers. Communication between non-adjacent workers is considered infinite (\u221e). The figure simplifies the representation by merging bidirectional edges into single undirected edges with weight 'p'. This example is used in the paper to illustrate and analyze the time complexities of algorithms in specific graph topologies.", "section": "Example: Line or Circle"}, {"figure_path": "IXRa8adMHX/figures/figures_23_1.jpg", "caption": "Figure 1: On the left: an example of a multigraph with n = 6. The edges with pi\u2192j = \u221e are omitted. The shortest distance between nodes 5 and 3 is T5\u21923 = P5\u21921 + P1\u21922 + P2\u21923. Note that p5\u21923 = 0\u221e. On the right: an example of a spanning tree that illustrates the shortest paths from every node to node 3. The shortest distance between nodes 6 and 3 is T6\u21923 = \u221e because P6\u2192i = \u221e for all i \u2260 6.", "description": "This figure illustrates the concepts of multigraphs and spanning trees in the context of decentralized asynchronous optimization. The left panel shows a multigraph with six nodes, where edges represent communication links between nodes, with some links having infinite cost (\u221e).  The shortest path between two nodes is defined as the sum of the weights of the edges along that path. The right panel shows a spanning tree rooted at node 3, demonstrating the shortest paths from each node to node 3. This highlights the importance of shortest paths for communication in decentralized systems, as the spanning tree provides the optimal communication structure.", "section": "Decentralized setup with times"}, {"figure_path": "IXRa8adMHX/figures/figures_46_1.jpg", "caption": "Figure 5: The communication time p = 0.1 seconds (Fast communication)", "description": "The figure shows the comparison of Fragile SGD and Minibatch SGD on a quadratic optimization task with stochastic gradients. The communication time is set to 0.1 seconds, representing a fast communication scenario. Different batch sizes and step sizes are tested for Fragile SGD, while Minibatch SGD is tested with three step sizes. The y-axis represents the function value difference from the optimal value, and the x-axis represents the time in seconds. As expected, both methods converge to the optimal value in this scenario of fast communication; however, the convergence speed of Fragile SGD is slightly faster than that of Minibatch SGD.", "section": "J Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_46_2.jpg", "caption": "Figure 6: The communication time p = 1 seconds (Medium speed communication)", "description": "The figure shows the results of the experiments comparing Fragile SGD and Minibatch SGD on a quadratic optimization problem with different step sizes and batch sizes. The communication time is set to 1 second, which represents a medium speed of communication.  The y-axis shows the difference between the function value at the current iteration and the optimal function value, plotted on a logarithmic scale. The x-axis represents the time in seconds.  The plot demonstrates that Fragile SGD converges faster than Minibatch SGD under medium communication speed conditions.", "section": "Highlights of Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_46_3.jpg", "caption": "Figure 7: The communication time p = 10 seconds (Slow communication)", "description": "This figure shows the comparison of Fragile SGD and Minibatch SGD on a quadratic optimization problem with slow communication (p = 10 seconds). The x-axis represents the time in seconds, and the y-axis represents the error, f(x_t) - f(x*).  The plot illustrates that Fragile SGD converges faster than Minibatch SGD in this setting because only a subset of workers are used in the optimization process in Fragile SGD.  In contrast, Minibatch SGD waits for all workers, even the slow ones, thus significantly impacting the convergence speed.", "section": "J Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_47_1.jpg", "caption": "Figure 3: The communication time p = 10 seconds (Slow communication) in 2D-Mesh. On MNIST dataset (LeCun et al., 2010) with 100 workers, Fragile SGD is much faster and has better test accuracy than Minibatch SGD.", "description": "The figure shows the comparison of Fragile SGD and Minibatch SGD on the MNIST dataset with 100 workers and slow communication (p=10 seconds).  The left plot shows the convergence in terms of f(x) - f(x*), illustrating that Fragile SGD reaches a lower value more quickly than Minibatch SGD. The right plot displays the test accuracy, demonstrating that Fragile SGD achieves higher accuracy in less time than Minibatch SGD. This highlights Fragile SGD's superior performance in scenarios with slow communication.", "section": "Highlights of Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_47_2.jpg", "caption": "Figure 3: The communication time p = 10 seconds (Slow communication) in 2D-Mesh. On MNIST dataset (LeCun et al., 2010) with 100 workers, Fragile SGD is much faster and has better test accuracy than Minibatch SGD.", "description": "This figure compares the performance of Fragile SGD and Minibatch SGD on the MNIST dataset using a 2D-mesh network topology with slow communication (p=10 seconds).  The left plot shows the convergence of the objective function f(x) - f(x*) over time, while the right plot shows the test accuracy.  Fragile SGD demonstrates significantly faster convergence and higher test accuracy than Minibatch SGD under these conditions.", "section": "Highlights of Experiments"}, {"figure_path": "IXRa8adMHX/figures/figures_47_3.jpg", "caption": "Figure 10: ResNet-18 on CIFAR10 dataset with 9 workers and the torus structure with the communication time p = 1 seconds (Medium communication)", "description": "This figure compares the performance of Fragile SGD and Minibatch SGD algorithms on the CIFAR10 dataset using a ResNet-18 model.  The experiment uses a torus network structure with 9 workers and a medium communication speed (p = 1 second). The plots show the training loss (f(xt) - f(x*)) and test accuracy over time (in seconds).  Fragile SGD demonstrates faster convergence in both metrics than Minibatch SGD, showcasing its superior performance in this setting.", "section": "Highlights of Experiments"}]