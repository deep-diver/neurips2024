[{"figure_path": "SFxAjB7UXx/tables/tables_5_1.jpg", "caption": "Table 1: Arithmetic with modules. Composition and concatenation let us define an extended arithmetic on modules. The utility modules Add, Mula and Identity are defined in Appendix B.2.", "description": "This table describes how basic arithmetic operations (addition, scalar multiplication, and iterated composition) can be extended to work with modules. It shows the shorthand notation, formal definition, and Modula expression for each operation.  The utility modules mentioned (Add, Mula, Identity) are further explained in Appendix B.2 of the paper.", "section": "3 Compound modules: Building new modules from old"}, {"figure_path": "SFxAjB7UXx/tables/tables_16_1.jpg", "caption": "Table 2: Three atomic modules. These are the three atoms implemented in Modula\u2014enough to build ResNet and GPT networks. By including explicit dimensional scale factors in the forward functions, we are able to use the standard spectral norm ||\u00b7||* and Euclidean norm ||\u00b7||2, rather than their rescaled versions. din and dout denote the input and output dimension of the Linear module. d denotes the embedding dimension of the Embed module. K denotes the kernel size of a Conv2D module with dout output channels and din input channels.  denotes convolution.", "description": "This table lists three atomic modules (Linear, Embed, and Conv2D) implemented in the Modula package.  It shows each module's forward function, mass, sensitivity, and norm.  The table clarifies how the dimensions of the input and output spaces affect the modules' norms, highlighting the use of standard spectral and Euclidean norms rather than rescaled versions.", "section": "Appendix B Module and Network Design"}]