[{"type": "text", "text": "Octopus: A Multi-modal LLM with Parallel Recognition and Sequential Understanding ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Chuyang Zhao1\u2217 Yuxin Song1\u2217 Junru Chen1 Kang Rong1 Haocheng Feng1   \nGang Zhang1 Shufan Ji2 Jingdong Wang1 Errui Ding1 Yifan Sun1 ", "page_idx": 0}, {"type": "text", "text": "1Baidu VIS 2 Beihang University \u2217Equal Contribution Corresponding Author {zhaochuyang,songyuxin02,sunyifan01}@baidu.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "A mainstream of Multi-modal Large Language Models (MLLMs) have two essential functions, i.e., visual recognition (e.g., grounding) and understanding (e.g., visual question answering). Presently, all these MLLMs integrate visual recognition and understanding in a same sequential manner in the LLM head, i.e., generating the response token-by-token for both recognition and understanding. We think unifying them in the same sequential manner is not optimal for two reasons: 1) parallel recognition is more efficient than sequential recognition and is actually prevailing in deep visual recognition, and 2) the recognition results can be integrated to help high-level cognition (while the current manner does not). Such motivated, this paper proposes a novel \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d framework for MLLMs. The bottom LLM layers are utilized for parallel recognition and the recognition results are relayed into the top LLM layers for sequential understanding. Specifically, parallel recognition in the bottom LLM layers is implemented via object queries, a popular mechanism in DEtection TRansformer, which we find to harmonize well with the LLM layers. Empirical studies show our MLLM named Octopus improves accuracy on popular MLLM tasks and is up to $5\\times$ faster on visual grounding tasks. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Visual recognition and understanding are two essential abilities for Multi-modal Large Language Models (MLLMs). While earlier MLLMs [1, 2, 3, 4] focused on the high-level visual understanding ability (e.g., visual question answering), recent literature finds that visual recognition ability (i.e., identifying and locating the objects) are no less important. The importance lies in two aspects: 1) Many newly-merged MLLM usages are directly related to visual recognition, e.g., visual grounding [5, 6] and referential dialog [6]. 2) More generally, visual recognition is potential to benefit all understanding tasks as recognition results are important compositions for understanding. In this paper, we are interested in better harmonizing these two essentials for MLLM. ", "page_idx": 0}, {"type": "text", "text": "Presently, MLLMs unify visual recognition and understanding in a sequential paradigm. In this paper, the terms \u201csequential\u201d and \u201cparallel\u201d refer specifically to the inference of LLM head, rather than the visual encoder. Typically, an MLLM consists of a visual encoder and an LLM head. During inference, the LLM head sequentially generates the response token-by-token, regardless of whether the task is more aligned with visual recognition (e.g., grounding) or understanding (e.g., visual question answering), as in Fig. 1 (left). Sequentially referring the recognition results, particularly textualized coordinates, is relatively slow. This sequential manner is a legacy of the LLM structure and, more fundamentally, stems from the inherently sequential nature of language. ", "page_idx": 0}, {"type": "image", "img_path": "ujE83r50tR/tmp/c9874635bcac7c27c2202f9e9f26fceabac5cf9ef522e653373420c6809de40c.jpg", "img_caption": ["Figure 1: Comparison between prior MLLMs (left) and our Octopus (right). Left: Prior MLLMs typically adopt the purely sequential inference: the LLM head infers the response token-by-token, regardless whether the response token is more aligned with recognition (e.g., detection) or understanding. Sequentially inferring the position is slow. Right: In contrast, Octopus establishes a \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d framework. The bottom LLM layers first recognize potential objects via visual grounding or referring segmentation (in Appendix:B). The recognition results (coupled with visual tokens) are relayed into top LLM layers. The top LLM layers thus do NOT infer the object position but instead, they select boxes (or masks) that have already been detected. The entire Octopus LLM head (recognition $^+$ understanding) is trained end-to-end. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "We conjecture the purely sequential paradigm might not be an optimistic framework for MLLM, especially regarding visual recognition and its cooperation with understanding. There are two reasons: ", "page_idx": 1}, {"type": "text", "text": "\u2022 First, for both human and deep learning, visual recognition relies heavily on parallel processing for high efficiency. Before the MLLMs era, most deep recognition models are built on the parallel paradigm. For instance, the segmentation model infers the semantic for all pixels simultaneously, and the detection model detects all the objects using parallel anchors [7, 8] or queries [9, 10, 11, 12]. Humans also use parallel processing for simple recognition [13, 14, 15]. In contrast, current purely sequential paradigm lacks efficiency for visual recognition. ", "page_idx": 1}, {"type": "text", "text": "\u2022 Second, regarding the cooperation between visual recognition and understanding, there is a hierarchy of \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d, as revealed by psychology and neurobiology discoveries [14, 15]. Relatively easier and low-level recognition results are integrated via more complex mental operations to help high-level cognition [13]. This hierarchy allows the understanding to take advantage of the recognition results, while the purely sequential paradigm does not offer such a benefit. ", "page_idx": 1}, {"type": "text", "text": "This paper proposes the Octopus (the octopus animal has a central brain and multiple parallel \u201cauxiliary brains\u201d) framework to improve the efficiency of recognition, and to harness the benefti of the aforementioned cognition hierarchy. Octopus separates visual recognition and understanding into parallel and sequential processes, respectively, and then re-integrates them in a \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d hierarchy. The comparison between purely sequential MLLMs and Octopus is illustrated in Fig. 1. ", "page_idx": 1}, {"type": "text", "text": "Given visual tokens from the visual backbone, Octopus\u2019s LLM head uses the bottom layers to detect the potential objects in parallel. The detection results, coupled with the visual tokens, are fed into the sub-sequential LLM layers for further understanding. Though the understanding remains sequentially token-by-token, it deviates from previous MLLMs by eliminating the need to infer the position of objects. Instead, it selects previously-detected boxes and associates them with the objects, markedly improving efficiency. For example, on Flickr30k dataset (average 4 objects per image), Octopus reduces the time of recognizing all objects to about $21\\%$ (3.80s to 0.82s per image, $5\\times$ increase in speed). Moreover, we empirically find that Octopus improves the accuracy on a range of understanding tasks compared to its purely sequential counterpart. It indicates that the initial parallel recognition can effectively support the understanding, revealing a clear advantage of the brained-inspired cognitive hierarchy. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Another significant feature of Octopus is: it can automatically adjust its recognition modes, oscillating between class-agnostic and class-specific, based on user instructions. This flexibility provides versatile usages for various tasks. For instance, in a grounding task where users specify the particular interest ,e.g., a cat, the recognition part of Octopus becomes class-specific and and predicts multiple candidates for the object of interest. The understanding part then selects the best candidate for the final response. In contrast, in another scenario, where the users do not specify any particular interest and request a detailed enumeration (including the position), the recognition part automatically shifts into a class-agnostic detector. Correspondingly, the understanding part then assigns semantics to the detection results. This flexibility originates from the knowledge in the bottom LLM layers designated for recognition. ", "page_idx": 2}, {"type": "text", "text": "Our main contributions are as summarized as follows: ", "page_idx": 2}, {"type": "text", "text": "\u2022 We investigate the cooperation between recognition and understanding in current MLLMs. As a result, we identify an efficiency issue with the purely sequential paradigm, as well as a significant discrepancy from human cognitive processes.   \n\u2022 We propose the Octopus framework for MLLM. Octopus separates recognition and understanding into parallel and sequential processes, respectively, and re-integrates them into a \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d hierarchy.   \n\u2022 Extensive experiments show Octopus improves inference efficiency and enhances the accuracy, compared to the purely sequential counterpart. ", "page_idx": 2}, {"type": "text", "text": "2 Related Works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Multi-modal Large Language Model. The recent success of large language models (LLMs) has spurred research into integrating LLMs with computer vision for visual understanding. Flamingo [16] adds trainable cross-attention layers to each LLM decoder layer to learn visual information. BLIP2 [3] introduces the Q-Former to align visual and language spaces. Mini-GPT4 [2] and mPLUGOWL [17] also use the Q-Former for visual understanding. LLaVA [18] connects the pretrained CLIP [19] visual encoder to the LLM with a simple vision-language connector, achieving strong performance. These efforts demonstrate the potential of Multi-modal Large Language Models (MLLMs) for complex multi-modal tasks. ", "page_idx": 2}, {"type": "text", "text": "Using MLLMs for Visual Recognition. Inspired by that LLM have unified various NLP tasks into a generation problem in one architecture, recent MLLM works manifest to solve traditional visual recognition tasks in a unified MLLM architecture. Object detection, a key visual recognition task, poses a challenge in expressing positional information in language within MLLM frameworks. Some literature [6, 20, 21, 2] convert the bounding box into natural language format and directly generate them in text response. However, representing bounding boxes in text form may not be optimal since the bounding box coordinates are numerical data and are typically predicted by regression. Some works [22, 23] use output embeddings of LLM as the understanding pivot to call an object detector for detection. However, the LLM can not benefit from the object detection results from the detector to enhance its own understanding. A more challenging scenario is the segmentation task, in which the ground-truth can be in random shape and seems indescribable via language. To tackle this problem, VisionLLM [24] represents the segmentation mask in text format by representing the mask by the coordinates of the mask polygon. Sphinx [21] and LLaVA-Plus [25] utilize an offline model SAM [26] for segmentation. They first generate the bounding box of the object to segment using MLLM, then they prompt SAM to generate the segmentation mask. LiSA [27] integrates SAM into MLLM for joint training. They introduce a special \u201c<SEG>\u201d token to predict the segmentation mask. However, a single \u201c<SEG>\u201d token cannot differentiate between multiple instances, limiting it to outputting only one segmentation mask. ", "page_idx": 2}, {"type": "image", "img_path": "ujE83r50tR/tmp/d5f24547eef3c0840457c0a15fc35a75c59e8c9a7e0f72cee7a138fca524572c.jpg", "img_caption": ["Figure 2: The overall training process of Octopus. We omit the visual backbone to highlight the LLM head. Octopus inputs multiple object queries into the LLM head, in addition to the image tokens and text prompt tokens,. After passing through several bottom LLM layers, the object queries are fed into a DETR decoder for parallel recognition. The recognition is not the canonical close-set detection, but can be class-agnostic detection, visual grounding, referring segmentation, etc., depending on the user prompt (as shown in Fig.3). Afterwards, these object queries, coupled with the image token and text tokens, are then sent into the upper LLM layers for sequential understanding. When the users ask for spotting the mentioned objects (e.g., visual grounding), Octopus finds the object query that detects each object (e.g., the 2nd object query detects the cat) and points out this object query via a corresponding index token $\\cdot_{\\mathrm{{cd}2>}}he structure of Octopus and its training details are elaborated in Section 3.2 and Section 3.3. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3 Approach ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Preliminaries ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Sequential inference in prior MLLMs. Prior MLLMs [1, 2, 21] solve traditional visual recognition tasks (e.g., object detection, instance segmentation) in a sequential generation paradigm. Specifically, they represent the outputs of visual recognition in a natural language format. For example, the bounding boxes are denoted by the coordinates of their corners: \u201c $\\cdot[x_{m i n},y_{m i n},x_{m a x},y_{m a x}]^{\\ast}$ , and segmentation masks are represented by coordinates of points in polygon mask: \u201c $[x_{1},y_{1},x_{2},y_{2},\\dotsc]$ \u201d. Hereby, each numerical value is expressed as multiple text tokens. Sequentially generating all these position tokens can be quite time-consuming, e.g., 25 tokens for a bounding box $\\mathbf{\\ddot{\\cdot}}[0.152,\\!0.475,\\!0.451,\\!0.692]^{\\ast}$ . Moreover, generating each token at its core, is based on classification. In contrast, coordinates are inherently numerical and are typically predicted through regression. This discrepancy suggests that sequential generation may not be the optimal approach for visual recognition. ", "page_idx": 3}, {"type": "text", "text": "A revisit to DEtection TRansformer (DETR). Octopus uses a light-weight DETR decoder to cooperate with the bottom LLM layers for parallel visual recognition, as illustrated in Fig. 2. We first give a brief revisit to DETR below. ", "page_idx": 3}, {"type": "text", "text": "DETR [9] is an end-to-end object detection approach based on transformer. A DETR model consists of a visual backbone, an encoder, and a transformer decoder. The backbone and the encoder transforms an input image into image feature $\\mathbf{F}$ . Afterwards, the DETR decoder employs a set of parallel object queries $\\mathbf{Q}=\\left\\{q_{1},q_{2},\\ldots,q_{k}\\right\\}$ to absorb image features through stacked cross-attention layers, which is formulated as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n{\\bar{\\mathbf{Q}}}=\\mathsf{D e c o d e r}(\\mathbf{F},\\mathbf{Q}),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "in which $\\bar{\\bf Q}$ is the output state of object queries. Finally, the DETR decoder append class and box predictors upon the object queries to predict their category and bounding box, respectively: ", "page_idx": 3}, {"type": "equation", "text": "$$\n{\\bf B}={\\bf b}\\circ{\\bf x}(\\bar{\\bf Q}),\\quad{\\bf S}={\\bf c}{\\bf1}{\\bf s}(\\bar{\\bf Q}),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "image", "img_path": "ujE83r50tR/tmp/75d47e1de362aebf68e2f03295caaa421fbeb7e9dc60bfd1f81544556f844b88.jpg", "img_caption": ["Figure 3: Visualization the Results. We visualize the detection results and the LLM output from Octopus on three tasks: (a) Spotting Caption, (b) Referring Expression Comprehension (REC), and (c) Visual Dialogue. In the Spotting Caption task, DETR identifies all foreground objects (highlighted in blue), while in REC, DETR locates only the object-of-interest (highlighted in green) as dictated by the prompts. DETR seamlessly transitions between these two modes based on user input. In the case of Visual Dialogue, since the users do NOT ask the MLLM to output object positions, the LLM output does not contain box information, correspondingly. However, Octopus can still localize the objects from the intermediate recognition results (we visualize the detection results with a classification score greater than 0.5). "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "in which $\\mathbf{B}$ is the bounding boxes and S is the classification scores. In Octopus we employ DETR as a class-agnostic detector, $\\mathbf{S}\\in\\mathbb{R}^{1}$ denotes whether an object is foreground or background. Consequently, DETR is independent of the number of classes in the training dataset. ", "page_idx": 4}, {"type": "text", "text": "We choose DETR decoder to implement visual recognition for the following reasons: 1) The object queries allow for parallel recognition. 2) The versatility of DETR offers the potential to handle more visual recognition tasks. In addition to object detection, DETR can be adapted for many other recognition tasks, e.g., segmentation [28, 29, 30], pose estimation [31, 32, 33], and object tracking [34, 35, 36]. 3) The object queries can absorb user prompts through attention layers. This allows Octopus to recognize random objects described in natural language, as will be detailed in the following section. ", "page_idx": 4}, {"type": "text", "text": "3.2 The structure of Octopus ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The overall architecture of Octopus is shown in Fig. 2. The image features $\\mathbf{F}$ extracted the visual encoder is projected into image tokens $\\mathbf{V}=\\{v_{1},v_{2},\\dots,v_{m}\\}$ . The text prompts are tokenized and encoded into text tokens $\\mathbf{T}=\\bar{\\{t_{1},t_{2},\\ldots,t_{n}\\}}$ . Based on this standard MLLM structure, Octopus additionally employs $k$ object queries $\\mathbf{Q}=\\left\\{q_{1},q_{2},\\ldots,q_{k}\\right\\}$ . Each $q_{i}\\in\\mathbb{R}^{D}$ has the same dimension $D$ as the image and text tokens. The object queries are placed after image tokens and prompt text tokens. Consequently, V,T and $\\mathbf{Q}$ are concatenated and jointly fed into the LLM head, which facilitates parallel recognition and then sequential understanding as below. ", "page_idx": 4}, {"type": "text", "text": "Parallel recognition. In the bottom LLM layers, the object queries $\\mathbf{Q}$ interact with the image tokens $\\mathbf{V}$ and text tokens $\\mathbf{T}$ through attention. This interaction aligns the object queries with the hidden states of user prompts and image tokens. In benefti of the language knowledge that is embedded in the LLM layers, the object queries thus absorb information from the user prompts and get an understanding of the user interest. It makes the recognition adaptive to user prompts and is crucial for visual grounding tasks, e.g., referring expression comprehension (REC). Afterwards, the object queries are fed into a lightweight (4-layers) DETR decoder to detect the objects. Both the Q-V-T interaction and the object detection DETR decoder are in parallel, yielding the complete recognition for Octopus. ", "page_idx": 4}, {"type": "text", "text": "Discussion: It\u2019s worth noting that the key difference between the integrated DETR decoder in Octopus and traditional DETR trained on closed-set is that in Octopus the DETR decoder makes predictions based on user prompts. The predictions made by Octopus DETR can be class-agnostic detection, visual grounding, referring segmentation, etc., depending on the user prompt. Fig. 3 shows DETR predicts the objects-of-interest depending on user prompts. For example, e.g., it tries to locate all objects in the image, given the user prompt \u201cPlease detect all objects in the image\u201d. Given another user prompt \u201cPlease spot the black-and-white cat in the image\u201d, DETR focuses on identifying the specified cat rather than other objects. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Sequential understanding. The recognition results, i.e., the object queries output from the DETR decoder, coupled with the hidden states of V and $\\mathbf{T}$ , are relayed into the following LLM layers. These recognition results will be absorbed into the final output tokens which form the model response, e.g., image captions or visual question answers, in a sequential manner. ", "page_idx": 5}, {"type": "text", "text": "In visual grounding tasks, the model response is expected to contain bounding boxes for the mentioned objects. In the previous MLLMs, the bounding box is represented in natural language form, which takes multiple tokens and is time-consuming to generate (Section 3.1). In contrast, Octopus does not generate the text of the bounding box in a sequential manner, but instead, it selects the detection boxes predicted by the DETR. For example, in Fig. 2, the 2nd object query from the DETR decoder detects the cat. In the LLM output, Octopus generates a special token $^{\\leftarrow}\\!\\!<\\!\\!\\mathrm{d2}\\!>^{\\bullet}$ which indexes the 2nd object query after the \u201ccat\u201d token. We name the token that indexes an object query as index token. Consequently, Octopus becomes aware of the position of the cat by selecting the bounding box corresponding to the predicted index token. How Octopus learns to predict the index tokens is elaborated in the following Section 3.3. ", "page_idx": 5}, {"type": "text", "text": "3.3 Training Octopus ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Training Octopus involves supervision of two components: the DETR output and the LLM output. These components are trained jointly, meaning that both the DETR decoder and the LLM are optimized together. ", "page_idx": 5}, {"type": "text", "text": "Supervision on the DETR output. Given the detection predictions $\\mathbf{Y}=\\{(s_{1},\\mathbf{b}_{1}),\\ldots,(s_{k},\\mathbf{b}_{k})\\}$ and the ground-truth objects $\\bar{\\mathbf{Y}}^{\\bigstar}=\\{(1,\\bar{\\mathbf{b}}_{1}),\\dots,(1,\\bar{\\mathbf{b}}_{N})\\}$ , DETR uses the Hungarian algorithm to find the optimal assignment $\\sigma(\\cdot)$ , where each ground-truth object is assigned to its best-matched prediction. Here, $(s_{i},\\mathbf{b}_{i})$ indicates the predicted classification scores and bounding boxes from query $q_{i}$ . All objects in the targets are treated as foreground objects, and thus, a binary classifier is used to predict whether an object query is foreground or background (non-object). The classification loss $\\bar{\\ell}_{\\mathrm{cls}}(\\cdot)$ is computed using binary cross-entropy, and the box regression loss $\\ell_{\\mathrm{box}}(\\cdot)$ is computed using L1 box distance and GIoU loss: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{DETR}}=\\sum_{n=1}^{N}(\\ell_{\\mathrm{cls}}(s_{\\sigma(n)},\\bar{s}_{n})+\\ell_{\\mathrm{box}}(\\mathbf{b}_{\\sigma(n)},\\bar{\\mathbf{b}}_{n})),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Supervision on the LLM output. The LLM output is supervised through the next-token-prediction manner. However, supervising the object position differs significantly. We recall that for spotting objects, the LLM head does not generate the bounding boxes through text, but predicts an index token that points to the corresponding detection result. Correspondingly, during training, Octopus is trained to predict the index token following each mentioned object. The ground-truth index token is not fixed, but dynamically determined on-the-fly in each training iteration. ", "page_idx": 5}, {"type": "text", "text": "Identifying the index token requires matching the ground-truth object to its nearest object query. To this end, we get the predicted bounding box $\\bar{\\mathbf{b}}$ (the subscript is omitted) of all object queries, and then find the nearest query for the ground-truth object at $\\mathbf{b}$ by: ", "page_idx": 5}, {"type": "equation", "text": "$$\nC_{\\mathrm{loc}}=\\left\\|\\bar{\\bf b}-{\\bf b}\\right\\|+\\left(1-\\mathrm{GloU}(\\bar{\\bf b},{\\bf b})\\right),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We replace the bounding boxes in the response with the index tokens to the matched object queries. This process introduces slight overload to the training (increasing $\\sim10\\%$ training time). In inference, the index tokens are directly generated in the response. Since we exclusively use index tokens to represent bounding boxes without the need to generate bounding boxes token-by-token, our method is significantly faster than previous MLLMs. ", "page_idx": 5}, {"type": "text", "text": "The LLM computes the training loss as the language modeling loss using next-token prediction, the same as prior MLLMs. ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{LM}}=-\\sum_{i=1}^{K}\\log P(y_{i}|y_{<i}),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $y_{i}$ represents the target token at position $i$ . The overall training objective is the combination of DETR training loss and language modeling loss. ", "page_idx": 5}, {"type": "table", "img_path": "ujE83r50tR/tmp/557ef95b43fd29ffd8e8b640cb9d742edd7085a602b2203e4ccef52a94692e71.jpg", "table_caption": ["Table 1: Results on Referring Expression Comprehension benchmarks. We note that Octopus with resolution 224/336 is up to $5\\!\\times\\!/4\\!\\times$ faster than a purely sequential counterpart Shikra (resolution 224) and achieves higher accuracy. More details of the inference speed comparison are reported in Sec. 4.5 "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "4.1 Settings ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Training details. We train Octopus via three stages, i.e., stage-1 for pretraining vision-language alignment, stage-2 for pretraining the DETR recognition module, and stage-3 for end-to-end instruction fine-tuning. The details are as below: ", "page_idx": 6}, {"type": "text", "text": "1) Stage-1 pretrains the vision-language connector for vision-language alignment using LLaVA pretraining data [18]. The visual encoder and LLM are frozen and only the vision-language connector is trained. 2) Stage-2 pretrains the DETR module on small-scale grounding detection datasets (RefCOCO [41], RefCOCO $^+$ [42], RefCOCOg [42] and Flickr30k [43]) to quickly obtain the recognition ability. We freeze LLM and visual encoder and only train the DETR module in this stage. Stage-2 is mainly for training efficiency, i.e., fast adapting the DETR decoder to the LLM layers. 3) In stage-3, we finetune the whole LLM head and DETR decoder on LLaVA-Instruct [18], REC data (RefCOCO, RefCOCO+, RefCOCOg, Visual Genome [44]), and Flickr30k end-to-end. Please refer to the Appendix for details of the training datasets. ", "page_idx": 6}, {"type": "text", "text": "We adopt AdamW as the optimizer and cosine annealing scheduler. The learning rate is initialized to 1e-4 for stage-1 and stage-2, and 2e-5 for stage-3. The entire training takes about 2 hours for Stage-1 (1 epoch), 4 hours for Stage-2 (2 epochs) and 120 hours for Stage-3 on 8 NVIDIA A100 GPUS. ", "page_idx": 6}, {"type": "text", "text": "Architecture details. Octopus adopts the ViT pre-trained from CLIP as the visual encoder. All the vision-language connectors are one-layer MLP with random initialized. The LLM head is initialized with Vicuna-7B-v1.5 [45] and the DETR decoder consists of 4 standard DETR decoder layers. We employ 64 object queries and place the DETR decoder after the 16-th LLM layer. ", "page_idx": 6}, {"type": "text", "text": "4.2 Evaluation on REC datasets ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate Octopus\u2019s recognition ability on 3 popular referring expression comprehension datasets, i.e., RefCOCO, RefCOCO+ and $\\mathbf{RefCOCOg}$ . In Table 1, Octopus achieves the highest accuracy on seven out of eight dataset splits, among the compared generalist MLLMs. For example, Octopus outperforms MiniGPT-v2 [46] by $+0.96\\%$ on val split and $+1.34\\%$ on test-A split of RefCOCO dataset. $\\operatorname{On}\\operatorname{RefCOCO+}$ , the superiority is even larger, e.g., surpassing MiniGPT-v2 by $+3.97\\%$ on val split, $+3.92\\%$ on test-A split and $+2.70\\%$ on test-B split. ", "page_idx": 6}, {"type": "text", "text": "We particularly note the comparison against Shikra, a purely sequential counterpart that adopts the same backbone as our Octopus and shares the same training data. Octopus (resolution 224) is up to $5\\times$ faster than Shikra under the same image resolution and consistently achieves higher accuracy, e.g., $+1.51\\%$ on $\\mathbf{RefCOCO+}$ test A. When scaling up the image resolution to 336, Octopus is still $4\\times$ faster than Shikra (resolution 224) and further enlarges the accuracy superiority to $+\\,2.04\\%$ on $\\mathbf{RefCOCO+}$ test A. These observations show that parallel recognition improves both the efficiency and accuracy for recognition. ", "page_idx": 6}, {"type": "table", "img_path": "ujE83r50tR/tmp/8bff35cfb38c1f9b537043bf5087cb1108fa4a1e008da9fa6e86b7e0f5d674ac.jpg", "table_caption": ["Table 2: Results on Visual Question Answering benchmarks. Note that specialists are fine-tuned on each individual evaluation dataset. We gray out those specialists methods, as well as the fine-tuned results of generalists. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "ujE83r50tR/tmp/90f59f9a7c2a91d5196154b6ecfc40fb1fa1c09bb3898bb69a9b6f13dd7819c0.jpg", "table_caption": ["Table 3: Results on popular VL benchmarks. MMB is MMBench [53], $\\mathrm{LLaVA}^{W}$ is LLaVA-Bench (In-the-Wild) [18] and MM-V is MM-Vet Benchmark[54]. POPE [55] is reported on the average F1 score of three splits (Adersarial, Popular and Random). "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.3 Evaluation on VQA datasets ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "General visual question answering (VQA) is a widely employed task for MLLMs. We compare Octopus on 5 VQA datasets against multiple competing MLLMs in Table 2. It is observed that Octopus achieves competitive results under both 224 and 336 resolution settings. For instance, at a 224 image resolution setting, Octopus outperforms Shikra [6] by $+1.10]$ Moreover, it surpasses InstructBLIP [4] by $+13.09\\%$ , $+11.1\\%$ , and $+5.2\\%$ on GQA, VizWiz, and SciQA, respectively. ", "page_idx": 7}, {"type": "text", "text": "We note that on these datasets, MLLMs are not asked to provide position of the mentioned objects, but Octopus still gains benefit from parallel visual recognition. This suggests that the recognition effectively supports the subsequent understanding, validating the benefit of \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d hierarchy. ", "page_idx": 7}, {"type": "text", "text": "4.4 Evaluation on recent MLLM benchmarks ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We report the performance on the recent popular MLLM benchmarks in Table 3. It is observed that Octopus performs favably against purely sequential counterparts on the five benchmarks. For example, Octopus is higher than Shikra by $+7.4\\%$ on MMBench and $+0.9\\%$ on POPE, respectively. ", "page_idx": 7}, {"type": "table", "img_path": "", "table_caption": ["Table 4: Comparison of inference speed. We compared the inference speed of our method with the baseline method Shikra [6] on two benchmarks. The reported inference times (in seconds) are averaged for one record across the datasets. RefCOCO contains exactly 1 bounding box in outputs, and Flickr30k contains on average 4 boxes in outputs. Our method is much faster $(\\sim5\\times)$ than the baseline in both resolutions. "], "table_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "ujE83r50tR/tmp/ca8d747cbd2ff736c069d4e24630ac9720d4063b59e1db1a7fe903355b366342.jpg", "img_caption": ["Figure 4: Influence of the recognition layers and number of object queries. We evaluate our method on RefCOCOg val benchmark. We did not use Visual Genome data [56] in training for efficiency. (a) Influence of the number of LLM layers employed for recognition. (b) Influence of the number of object queries. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "Octopus also outperforms InstructBLIP by $+3.0\\%$ on LLaVA-Bench, $+5.2\\%$ on SEED and $+6.5\\%$ on MM-Vet, respectively. ", "page_idx": 8}, {"type": "text", "text": "4.5 Ablation Study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "The number of LLM layers employed for recognition. We study the optimal layer for positioning DETR within LLM. Fig. 4 (a) illustrates our method\u2019s performance on the $\\mathbf{RefCOCOg}$ val benchmark when placing DETR after different LLM layers. We find that the optimal placement for DETR is after the 16th LLM layer, which is the middle layer of the LLM (consisting of 32 layers in total). We infer that positioning DETR on a lower layer might limit its comprehension of the instruction prompt, while placing it at a higher layer harms the ability of LLM to infer the correct index tokens for the mentioned objects. ", "page_idx": 8}, {"type": "text", "text": "Number of object queries. We compare the impact of different object query number on performance in Fig. 4 (b). We evaluate Octopus on the val split of RefCOCOg benchmark and observe that 64 and 80 object query achieved the best performance in our setup. We infer that using insufficient object queries will hamper the recognition capabilities of the bottom LLM layers. On the other hand, although an excess of object queries can enhance the LLM\u2019s perception ability for foreground objects, it also increases the complexity for the LLM to select the correct object queries in the final output. ", "page_idx": 8}, {"type": "text", "text": "Inference speed. We compare the inference speed of our method against the traditional MLLM on the grounding detection data. As shown in Table 4, our method is much faster $(5\\times)$ on all benchmarks. This is attributed to that our method does not require to generate bounding boxes in discrete tokens. For each bounding box, we only need to generate an index token to the corresponding detection results predicted by the DETR module. It saves 24 tokens in generating one box, which is more significant in scenarios where a larger number of objects exist. ", "page_idx": 8}, {"type": "text", "text": "Qualitative analysis. We visualize the recognition results predicted by DETR for non-grounding data, such as VQA and instruction dialogue, in which no bounding boxes are provided and generated. As shown in Fig. 3 (c), DETR still locates the mentioned objects in the user prompt even if it is not in grounding data format. The detection results are helpful for VQA and some tasks, where the MLLM needs to locate the mentioned objects in the image and answer specific questions. ", "page_idx": 8}, {"type": "text", "text": "5 Limitation and Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Limitations. Due to limited GPU resources, we have not been able to explore how Octopus would perform when scaling up on larger LLM and more open-ended instruction-tuning data. Moreover, DETR is applicable to many recognition tasks beyond detection. We leave it as future works. ", "page_idx": 9}, {"type": "text", "text": "Conclusion. We propose Octopus, a novel MLLM framework that disrupts the purely sequential inference paradigm for LLM head. Octopus perform parallel recognition through the lower LLM layers and a lightweight DETR decoder, and then passes the recognition results to the upper LLM layers for further understanding. Consequently, it reformulates the LLM head into a \u201cparallel recognition $\\rightarrow$ sequential understanding\u201d hierarchy. Empirical results show Octopus improves accuracy over a range of MLLM tasks and significantly enhances inference efficiency when the task include recognition objectives. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Shaohan Huang, Li Dong, Wenhui Wang, Yaru Hao, Saksham Singhal, Shuming Ma, Tengchao Lv, Lei Cui, Owais Khan Mohammed, Barun Patra, et al. Language is not all you need: Aligning perception with language models. Advances in Neural Information Processing Systems, 36, 2024. [2] Deyao Zhu, Jun Chen, Xiaoqian Shen, Xiang Li, and Mohamed Elhoseiny. Minigpt-4: Enhancing vision-language understanding with advanced large language models, 2023. [3] Junnan Li, Dongxu Li, Silvio Savarese, and Steven Hoi. Blip-2: Bootstrapping language-image pre-training with frozen image encoders and large language models, 2023. [4] Wenliang Dai, Junnan Li, Dongxu Li, Anthony Meng Huat Tiong, Junqi Zhao, Weisheng Wang, Boyang Li, Pascale Fung, and Steven Hoi. Instructblip: Towards general-purpose vision-language models with instruction tuning, 2023. [5] Zhiliang Peng, Wenhui Wang, Li Dong, Yaru Hao, Shaohan Huang, Shuming Ma, and Furu Wei. Kosmos-2: Grounding multimodal large language models to the world, 2023. [6] Keqin Chen, Zhao Zhang, Weili Zeng, Richong Zhang, Feng Zhu, and Rui Zhao. Shikra: Unleashing multimodal llm\u2019s referential dialogue magic, 2023. [7] Ross Girshick. Fast r-cnn. In Proceedings of the IEEE international conference on computer vision, pages 1440\u20131448, 2015. [8] Joseph Redmon, Santosh Divvala, Ross Girshick, and Ali Farhadi. You only look once: Unified, real-time object detection. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 779\u2013788, 2016. [9] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and Sergey Zagoruyko. End-to-end object detection with transformers. In European conference on computer vision, pages 213\u2013229. Springer, 2020.   \n[10] Shilong Liu, Feng Li, Hao Zhang, Xiao Yang, Xianbiao Qi, Hang Su, Jun Zhu, and Lei Zhang. Dab-detr: Dynamic anchor boxes are better queries for detr. arXiv preprint arXiv:2201.12329, 2022.   \n[11] Xizhou Zhu, Weijie Su, Lewei Lu, Bin Li, Xiaogang Wang, and Jifeng Dai. Deformable detr: Deformable transformers for end-to-end object detection. arXiv preprint arXiv:2010.04159, 2020.   \n[12] Hao Zhang, Feng Li, Shilong Liu, Lei Zhang, Hang Su, Jun Zhu, Lionel M Ni, and HeungYeung Shum. Dino: Detr with improved denoising anchor boxes for end-to-end object detection. arXiv preprint arXiv:2203.03605, 2022.   \n[13] Elena Agliari, Adriano Barra, Andrea Galluzzi, Francesco Guerra, Daniele Tantari, and Flavia Tavani. Hierarchical neural networks perform both serial and parallel processing. Neural Networks, 66:22\u201335, 2015.   \n[14] Yoshihito Shigihara and Semir Zeki. Parallel processing in the brain\u2019s visual form system: an fmri study. Frontiers in human neuroscience, 8:506, 2014.   \n[15] Kang Li, Mikiko Kadohisa, Makoto Kusunoki, John Duncan, Claus Bundesen, and Susanne Ditlevsen. Distinguishing between parallel and serial processing in visual attention from neurobiological data. Royal Society Open Science, 7(1):191553, 2020.   \n[16] Jean-Baptiste Alayrac et al. Flamingo: a visual language model for few-shot learning. 2022.   \n[17] Qinghao Ye, Haiyang Xu, Guohai Xu, Jiabo Ye, Ming Yan, Yiyang Zhou, Junyang Wang, Anwen Hu, Pengcheng Shi, Yaya Shi, Chenliang Li, Yuanhong Xu, Hehong Chen, Junfeng Tian, Qian Qi, Ji Zhang, and Fei Huang. mplug-owl: Modularization empowers large language models with multimodality, 2023.   \n[18] Haotian Liu, Chunyuan Li, Qingyang Wu, and Yong Jae Lee. Visual instruction tuning, 2023.   \n[19] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748\u20138763. PMLR, 2021.   \n[20] Wenhai Wang, Zhe Chen, Xiaokang Chen, Jiannan Wu, Xizhou Zhu, Gang Zeng, Ping Luo, Tong Lu, Jie Zhou, Yu Qiao, et al. Visionllm: Large language model is also an open-ended decoder for vision-centric tasks. Advances in Neural Information Processing Systems, 36, 2024.   \n[21] Ziyi Lin, Chris Liu, Renrui Zhang, Peng Gao, Longtian Qiu, Han Xiao, Han Qiu, Chen Lin, Wenqi Shao, Keqin Chen, et al. Sphinx: The joint mixing of weights, tasks, and visual embeddings for multi-modal large language models. arXiv preprint arXiv:2311.07575, 2023.   \n[22] Yuhang Zang, Wei Li, Jun Han, Kaiyang Zhou, and Chen Change Loy. Contextual object detection with multimodal large language models. International Journal of Computer Vision, pages 1\u201319, 2024.   \n[23] Hao Zhang, Hongyang Li, Feng Li, Tianhe Ren, Xueyan Zou, Shilong Liu, Shijia Huang, Jianfeng Gao, Chunyuan Li, Jainwei Yang, et al. Llava-grounding: Grounded visual chat with large multimodal models. In European Conference on Computer Vision, pages 19\u201335. Springer, 2025.   \n[24] Wenhai Wang, Zhe Chen, Xiaokang Chen, Jiannan Wu, Xizhou Zhu, Gang Zeng, Ping Luo, Tong Lu, Jie Zhou, Yu Qiao, and Jifeng Dai. Visionllm: Large language model is also an open-ended decoder for vision-centric tasks, 2023.   \n[25] Shilong Liu, Hao Cheng, Haotian Liu, Hao Zhang, Feng Li, Tianhe Ren, Xueyan Zou, Jianwei Yang, Hang Su, Jun Zhu, et al. Llava-plus: Learning to use tools for creating multimodal agents. arXiv preprint arXiv:2311.05437, 2023.   \n[26] Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C. Berg, Wan-Yen Lo, Piotr Doll\u00e1r, and Ross Girshick. Segment anything, 2023.   \n[27] Xin Lai, Zhuotao Tian, Yukang Chen, Yanwei Li, Yuhui Yuan, Shu Liu, and Jiaya Jia. Lisa: Reasoning segmentation via large language model. arXiv preprint arXiv:2308.00692, 2023.   \n[28] Bowen Cheng, Ishan Misra, Alexander G Schwing, Alexander Kirillov, and Rohit Girdhar. Masked-attention mask transformer for universal image segmentation. arXiv:2112.01527, 2021.   \n[29] Bowen Cheng, Anwesa Choudhuri, Ishan Misra, Alexander Kirillov, Rohit Girdhar, and Alexander G Schwing. Mask2former for video instance segmentation. arXiv:2112.10764, 2021.   \n[30] Zhiqi Li, Wenhai Wang, Enze Xie, Zhiding Yu, Anima Anandkumar, Jose M Alvarez, Ping Luo, and Tong Lu. Panoptic segformer: Delving deeper into panoptic segmentation with transformers. In CVPR, 2022.   \n[31] Lucas Stoff,l Maxime Vidal, and Alexander Mathis. End-to-end trainable multi-instance pose estimation with transformers. arXiv:2103.12115, 2021.   \n[32] Weian Mao, Yongtao Ge, Chunhua Shen, Zhi Tian, Xinlong Wang, and Zhibin Wang. Tfpose: Direct human pose estimation with transformers. arXiv:2103.15320, 2021.   \n[33] Guillem Bras\u00f3, Nikita Kister, and Laura Leal-Taix\u00e9. The center of attention: Center-keypoint grouping via attention for multi-person pose estimation. In ICCV, 2021.   \n[34] Bin Yan, Houwen Peng, Jianlong Fu, Dong Wang, and Huchuan Lu. Learning spatio-temporal transformer for visual tracking. In ICCV, 2021.   \n[35] Moju Zhao, Kei Okada, and Masayuki Inaba. Trtr: Visual tracking with transformer. arXiv:2105.03817, 2021.   \n[36] Fangao Zeng, Bin Dong, Tiancai Wang, Xiangyu Zhang, and Yichen Wei. Motr: End-to-end multiple-object tracking with transformer. arXiv:2105.03247, 2021.   \n[37] Peng Wang, An Yang, Rui Men, Junyang Lin, Shuai Bai, Zhikang Li, Jianxin Ma, Chang Zhou, Jingren Zhou, and Hongxia Yang. Ofa: Unifying architectures, tasks, and modalities through a simple sequence-to-sequence learning framework. In International Conference on Machine Learning, pages 23318\u201323340. PMLR, 2022.   \n[38] Jun Chen, Deyao Zhu, Xiaoqian Shen, Xiang Li, Zechun Liu, Pengchuan Zhang, Raghuraman Krishnamoorthi, Vikas Chandra, Yunyang Xiong, and Mohamed Elhoseiny. Minigpt-v2: large language model as a unified interface for vision-language multi-task learning, 2023.   \n[39] Shilong Liu, Zhaoyang Zeng, Tianhe Ren, Feng Li, Hao Zhang, Jie Yang, Chunyuan Li, Jianwei Yang, Hang Su, Jun Zhu, and Lei Zhang. Grounding dino: Marrying dino with grounded pre-training for open-set object detection, 2023.   \n[40] Bin Yan, Yi Jiang, Jiannan Wu, Dong Wang, Ping Luo, Zehuan Yuan, and Huchuan Lu. Universal instance perception as object discovery and retrieval, 2023.   \n[41] Sahar Kazemzadeh, Vicente Ordonez, Mark Matten, and Tamara Berg. Referitgame: Referring to objects in photographs of natural scenes. In Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), pages 787\u2013798, 2014.   \n[42] Licheng Yu, Patrick Poirson, Shan Yang, Alexander C Berg, and Tamara L Berg. Modeling context in referring expressions. In Computer Vision\u2013ECCV 2016: 14th European Conference, Amsterdam, The Netherlands, October 11-14, 2016, Proceedings, Part II 14, pages 69\u201385. Springer, 2016.   \n[43] Bryan A Plummer, Liwei Wang, Chris M Cervantes, Juan C Caicedo, Julia Hockenmaier, and Svetlana Lazebnik. Flickr30k entities: Collecting region-to-phrase correspondences for richer image-to-sentence models. In Proceedings of the IEEE international conference on computer vision, pages 2641\u20132649, 2015.   \n[44] Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson, Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalantidis, Li-Jia Li, David A Shamma, et al. Visual genome: Connecting language and vision using crowdsourced dense image annotations. International journal of computer vision, 123:32\u201373, 2017.   \n[45] Wei-Lin Chiang, Zhuohan Li, Zi Lin, Ying Sheng, Zhanghao Wu, Hao Zhang, Lianmin Zheng, Siyuan Zhuang, Yonghao Zhuang, Joseph E. Gonzalez, Ion Stoica, and Eric P. Xing. Vicuna: An open-source chatbot impressing gpt-4 with $90\\%*$ chatgpt quality, March 2023.   \n[46] Jun Chen, Deyao Zhu, Xiaoqian Shen, Xiang Li, Zechun Liu, Pengchuan Zhang, Raghuraman Krishnamoorthi, Vikas Chandra, Yunyang Xiong, and Mohamed Elhoseiny. Minigpt-v2: large language model as a unified interface for vision-language multi-task learning. arXiv preprint arXiv:2310.09478, 2023.   \n[47] Jiasen Lu, Christopher Clark, Rowan Zellers, Roozbeh Mottaghi, and Aniruddha Kembhavi. Unified-io: A unified model for vision, language, and multi-modal tasks, 2022.   \n[48] Danny Driess, Fei Xia, Mehdi S. M. Sajjadi, Corey Lynch, Aakanksha Chowdhery, Brian Ichter, Ayzaan Wahid, Jonathan Tompson, Quan Vuong, Tianhe Yu, Wenlong Huang, Yevgen Chebotar, Pierre Sermanet, Daniel Duckworth, Sergey Levine, Vincent Vanhoucke, Karol Hausman, Marc Toussaint, Klaus Greff, Andy Zeng, Igor Mordatch, and Pete Florence. Palm-e: An embodied multimodal language model, 2023.   \n[49] Haotian Liu, Chunyuan Li, Yuheng Li, and Yong Jae Lee. Improved baselines with visual instruction tuning. arXiv preprint arXiv:2310.03744, 2023.   \n[50] Jinze Bai, Shuai Bai, Shusheng Yang, Shijie Wang, Sinan Tan, Peng Wang, Junyang Lin, Chang Zhou, and Jingren Zhou. Qwen-vl: A versatile vision-language model for understanding, localization, text reading, and beyond, 2023.   \n[51] Jianfeng Wang, Zhengyuan Yang, Xiaowei Hu, Linjie Li, Kevin Lin, Zhe Gan, Zicheng Liu, Ce Liu, and Lijuan Wang. Git: A generative image-to-text transformer for vision and language, 2022.   \n[52] Xi Chen, Xiao Wang, Soravit Changpinyo, AJ Piergiovanni, Piotr Padlewski, Daniel Salz, Sebastian Goodman, Adam Grycner, Basil Mustafa, Lucas Beyer, Alexander Kolesnikov, Joan Puigcerver, Nan Ding, Keran Rong, Hassan Akbari, Gaurav Mishra, Linting Xue, Ashish Thapliyal, James Bradbury, Weicheng Kuo, Mojtaba Seyedhosseini, Chao Jia, Burcu Karagol Ayan, Carlos Riquelme, Andreas Steiner, Anelia Angelova, Xiaohua Zhai, Neil Houlsby, and Radu Soricut. Pali: A jointly-scaled multilingual language-image model, 2023.   \n[53] Yuan Liu, Haodong Duan, Yuanhan Zhang, Bo Li, Songyang Zhang, Wangbo Zhao, Yike Yuan, Jiaqi Wang, Conghui He, Ziwei Liu, et al. Mmbench: Is your multi-modal model an all-around player? arXiv preprint arXiv:2307.06281, 2023.   \n[54] Weihao Yu, Zhengyuan Yang, Linjie Li, Jianfeng Wang, Kevin Lin, Zicheng Liu, Xinchao Wang, and Lijuan Wang. Mm-vet: Evaluating large multimodal models for integrated capabilities. arXiv preprint arXiv:2308.02490, 2023.   \n[55] Yifan Li, Yifan Du, Kun Zhou, Jinpeng Wang, Wayne Xin Zhao, and Ji-Rong Wen. Evaluating object hallucination in large vision-language models, 2023.   \n[56] Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson, Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalantidis, Li-Jia Li, David A. Shamma, Michael S. Bernstein, and Fei-Fei Li. Visual genome: Connecting language and vision using crowdsourced dense image annotations, 2016. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Comparison between the intermediate and final recognition results ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In Octopus, there are two components that can give recognition results, i.e., the intermediate outputs from the DETR and the final LLM outputs. The intermediate recognition results are parallel and redundant, i.e., predicting multiple boxes for each object of interest. Based on these parallel recognition results, the final LLM outputs choose a single one for each object via the indexing tokens. ", "page_idx": 13}, {"type": "text", "text": "We compare these two different results for recognition objectives in Table 5. Since the intermediate recognition results (DETR results) have multiple predictions, we evaluate the rank- $k$ accuracy, which indicates the recall of the ground-truth. We draw two observations as below: ", "page_idx": 13}, {"type": "text", "text": "First, the final LLM outputs yield higher accuracy than the rank-1 DETR results, e.g., $+1.18\\%$ and $+\\,2.12\\%$ under the 224 and 336 resolution settings, respectively. It shows that the LLM top layers further improves recognition accuracy after understanding all the recognition results. ", "page_idx": 13}, {"type": "text", "text": "Second, the redundant DETR results can achieve high recall of the object-of-interest, e.g., $94.56\\%$ rank-5 accuracy under the 224 resolution. Since these intermediate detection results are relayed into the LLM top layers, we infer the high recall is an important reason for the LLM to improve recognition accuracy by selecting one result for each object-of-interest. ", "page_idx": 13}, {"type": "text", "text": "In addition to the benefit of improving recognition accuracy, the understanding part of Octopus has another important role: it organizes multiple recognition results into a complete description or response, e.g., in the spotting caption task (Fig. 5 in the main part). ", "page_idx": 13}, {"type": "table", "img_path": "ujE83r50tR/tmp/6d22381de00970a8c21f60f75c3bc72f9250f8aafbc5defe282c031deb571e90.jpg", "table_caption": ["Table 5: Comparison of Detection Performance. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "B Application on referring segmentation ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In addition to detection, Octopus is potential to acquire a broader range of recognition abilities, taking advantage of the versatility of the DETR mechanism. Hereby, we endow Octopus with the referring segmentation ability by modifying its object queries into \u201cmask\u201d queries, a common ", "page_idx": 13}, {"type": "image", "img_path": "ujE83r50tR/tmp/8d9df32d3d8a5cbc8e63b10d5f68980a5f5daad24bd866045b26f0d4b8bc2579.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 5: Visualization of the referring segmentation results. Octopus directly makes pixel-wise predictions rather than predicting the vertexes of the segmentation mask. ", "page_idx": 13}, {"type": "text", "text": "application of DETRs. We add an additional mask head on top of the DETR decoder to predict the segmentation mask for each mask query. Under this setting, we train Octopus on the training datasets of referring segmentation datasets (RefCOCO, RefCOCO $^+$ , RefCOCOg). Visualization in Fig. 5 shows that Octopus gains referring segmentation ability. The ability of directly predicting pixel-wise segmentation results rather than vertexes of segmentation masks is valuable for MLLMs. ", "page_idx": 14}, {"type": "table", "img_path": "ujE83r50tR/tmp/68090d6333696f333679b176509b9a5008cdde70567b46726903de035fda1fbe.jpg", "table_caption": ["Table 6: Referring segmentation results on RefCOCO. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "We quantitatively evaluate the referring segmentation performance on the RefCOCO benchmark using cIoU. Table. 6 show that our model achieves reasonable results. Due to time limit, we only implement Octopus using the low-resolution CLIP-ViT features $(224\\times224)$ for this experiment. The input size is very small for segmentation task and is an important reason that limits our performance (e.g., 63.6 cIoU on RefCOCO validation set). We note a recent state-of-the-art method LISA achieves 74.6. LISA uses an external strong segmentation model, SAM [26], that is pretrained on SA-1B datasets and uses large input size. We conjecture that enlarging the input size and adding training data will bring further improvement to Octopus, as well. ", "page_idx": 14}, {"type": "text", "text": "To sum up, by incorporating the bottom layers of LLM head with the DETR query mechanism, Octopus is potential to acquire various recognition abilities. We will explore more forms of recognition abilities for Octopus. ", "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We provide our contributions both in the abstract and introduction. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: We express our limitations in Section 5. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: Our paper does not include theoretical results. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: Yes, we claim our experimental settings in Section 4.1 ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 16}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 16}, {"type": "text", "text": "Answer: [No] ", "page_idx": 17}, {"type": "text", "text": "Justification: Our code is currently being organized. We will release the code and data after the review process is complete. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Yes, we provide all training and test details in Section 4.1. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [No] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: Error bars are not reported because it would be too computationally expensive. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 17}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We provide these information in Section 4.1. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our research follows the NeurIPS Code of Ethics. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 18}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: There is no societal impact of the work performed. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We have credited and cited the used assets in our paper. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 19}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: Our paper does not release new assets. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}]