[{"type": "text", "text": "Posterior Label Smoothing for Node Classification ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Anonymous Author(s)   \nAffiliation   \nAddress   \nemail ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "1 Soft labels can improve the generalization of a neural network classifier in many   \n2 domains, such as image classification. Despite its success, the current literature   \n3 has overlooked the efficiency of label smoothing in node classification with graph  \n4 structured data. In this work, we propose a simple yet effective label smoothing for   \n5 the transductive node classification task. We design the soft label to encapsulate   \n6 the local context of the target node through the neighborhood label distribution. We   \n7 apply the smoothing method for seven baseline models to show its effectiveness.   \n8 The label smoothing methods improve the classification accuracy in 10 node classi  \n9 fication datasets in most cases. In the following analysis, we find that incorporating   \n10 global label statistics in posterior computation is the key to the success of label   \n11 smoothing. Further investigation reveals that the soft labels mitigate overfitting   \n12 during training, leading to better generalization performance. ", "page_idx": 0}, {"type": "text", "text": "13 1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "14 Adding a uniform noise to the ground truth labels has shown remarkable success in training neu  \n15 ral networks for various classification tasks, including image classification and natural language   \n16 processing [Szegedy et al., 2016a, Vaswani et al., 2017, M\u00fcller et al., 2019, Zhang et al., 2021].   \n17 Despite its simplicity, label smoothing acts as a regularizer for the output distribution and improves   \n18 generalization performance [Pereyra et al., 2017]. More sophisticated soft labeling approaches have   \n19 been proposed based on the theoretical analysis of label smoothing [Li et al., 2020, Lienen and   \n20 H\u00fcllermeier, 2021]. However, the usefulness of smoothing has been under-explored in the graph   \n21 domain, especially for node classification tasks.   \n22 In this work, we propose a simple yet effective smoothing method for transductive node classification   \n23 tasks. Inspired by the previous work suggesting predicting the local context of a node [Hu et al., 2019,   \n24 Rong et al., 2020], such as subgraph prediction, helps to learn better representations, we propose   \n25 a smoothing method that can potentially reflect the local context of the target node. To encode   \n26 the neighborhood information into the node label, we propose to relabel the node with a posterior   \n27 distribution of the label given neighborhood labels.   \n28 Under the assumption that the neighborhood labels are conditionally independent given the label   \n29 of the node to be relabeled, we factorize the likelihood into the product of conditional distributions   \n30 between two adjacent nodes. To compute the posterior, we estimate the conditionals and prior from a   \n31 graph\u2019s global label statistics, making the posterior incorporate the local structure and global label   \n32 distributions. Since the posterior obtained in this way does not preserve the ground truth label, we   \n33 finally interpolate the posterior with the ground truth label, resulting in a soft label.   \n34 The posterior, however, may pose high variance when there are few numbers of neighborhood   \n35 nodes. To mitigate the issue with the sparse labels, we further propose iterative pseudo labeling to   \n36 re-estimate the likelihood and prior based on the pseudo labels. Specifically, we use the pseudo labels   \n37 of validation and test sets to update the likelihood and prior, along with the ground truth labels of the   \n38 training set.   \n39 We apply our smoothing method to seven different baseline neural network models, including MLP   \n40 and variants of graph neural networks, and test its performance on 10 benchmark node classification   \n41 datasets. Our empirical study finds that the soft label with iterative pseudo labeling improves the   \n42 accuracy in 67 out of 70 cases despite its simplicity. We analyze the cases where the soft label   \n43 decreases the accuracy and reveals characteristics of label distributions with which the soft labeling   \n44 may not work. Further analysis shows that using local neighborhood structure and global label   \n45 statistics is the key to its success. Through the loss curve analysis, we find that the soft label prevents   \n46 over-fitting, leading to a better generalization performance in classification. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "47 2 Related work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "48 In this section, we introduce previous studies related to our method. We begin by discussing various   \n49 node classification methods, followed by an exploration of the application of soft labels in model   \n50 training. ", "page_idx": 1}, {"type": "text", "text": "51 2.1 Node classification ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "52 Graph structures are utilized in various ways for node classification tasks. Some studies propose   \n53 model frameworks based on the assumption of specific graph structures. For example, GCN [Kipf   \n54 and Welling, 2016], GraphSAGE [Hamilton et al., 2017], and GAT [Velic\u02c7kovic\u00b4 et al., 2017] aggregate   \n55 neighbor node representations based on the homophilic assumption. To address the class-imbalance   \n56 problem, GraphSMOTE [Zhao et al., 2021], ImGAGN [Qu et al., 2021], and GraphENS [Park et al.,   \n57 2022] are proposed for homophilic graphs. $\\mathrm{H}_{2}\\mathrm{GCN}$ [Zhu et al., 2020] and U-GCN [Jin et al., 2021]   \n58 aggregate representations of multi-hop neighbor nodes to improve performance on heterophilic   \n59 graphs. Other studies concentrate on learning graph structure. GPR-GNN [Chien et al., 2020] and   \n60 CPGNN [Zhu et al., 2021] learn graph structures to determine which nodes to aggregate adaptively.   \n61 LDS [Franceschi et al., 2019], IDGL [Chen et al., 2020] and DHGR [Bi et al., 2022] take a graph   \n62 rewiring approach, learning optimized graph structures to refine the given structure. Besides, research   \n63 such as ChebNet [Defferrard et al., 2016], APPNP [Gasteiger et al., 2018], and BernNet [He et al.,   \n64 2021] focus on learning appropriate filters from the graph signals. ", "page_idx": 1}, {"type": "text", "text": "65 2.2 Classification with soft labels ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "66 Hinton et al. [2015] demonstrate that a small student model trained using soft labels generated   \n67 by the predictions of a large teacher model shows better performance than a model trained using   \n68 one-hot labels. This approach, known as knowledge distillation (KD), is widely adopted in computer   \n69 vision [Liu et al., 2019], natural language processing (NLP) [Jiao et al., 2020], and recommendation   \n70 systems [Tang and Wang, 2018] for compression or performance improvement. In the graph domain,   \n71 applying KD has been considered an effective method to distill graph structure knowledge to student   \n72 models. TinyGNN [Yan et al., 2020] highlights that deep GNNs can learn information from further   \n73 neighbor nodes than shallow GNNs, and it distills local structure knowledge from deep GNNs to   \n74 shallow GNNs. NOSMOG [Tian et al., 2023] improves the performance of multi-layer perceptrons   \n75 (MLPs) on graph data by distilling graph structure information from a GNN teacher model.   \n76 On the other hand, simpler alternatives to generate soft labels are considered. The label smoothing   \n77 (LS) [Szegedy et al., 2016a] generates soft labels by adding uniform noise to the labels. The beneftis   \n78 of LS have been widely explored. M\u00fcller et al. [2019] show that LS improves model calibration.   \n79 Lukasik et al. [2020] establish a connection between LS and label-correction techniques, revealing   \n80 LS can address label noise. LS has been widely adopted in computer vision [Zhang et al., 2021] and   \n81 NLP [Vaswani et al., 2017] studies, but has received little attention in the graph domain. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "82 3 Method ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "83 In this section, we describe our approach for label smoothing for the node classification problem and   \n84 provide a new training strategy that iteratively refines the soft labels via pseudo labels obtained from   \n85 the training procedure. ", "page_idx": 1}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/b989b815443aaffd73a2207d9326fb0755eb3ec1be9a231c1b7294533a63b029.jpg", "img_caption": ["Figure 1: Overall illustration of posterior node relabeling. To relabel the node label, we compute the posterior distribution of the label given neighborhood labels. Note that the node features are not considered in the relabeling process. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "86 3.1 Posterior label smoothing ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "87 Consider a transductive node classification with graph $\\mathcal{G}=(\\mathcal{V},\\mathcal{E},\\boldsymbol{X})$ , where $\\nu$ and $\\mathcal{E}$ denotes the set   \n88 of nodes and edges respectively, and $\\boldsymbol{X}\\in\\mathbb{R}^{|\\mathcal{V}|\\times d}$ denotes $d$ -dimensional node feature matrix. For   \n89 each node $i$ in a training set, we have a label $y_{i}\\in[K]$ , where $K$ is the total number of classes. We   \n90 use the notation $e_{i}\\in\\{0,1\\}^{K}$ for one-hot encoding of $y_{i}$ , i.e., $e_{i k}=1$ if $y_{i}=k$ and $\\textstyle\\sum_{k}e_{i k}=1$ .   \n91 In a transductive setting, we observe the connectivity between all nodes, including th e test nodes,   \n92 without having true labels of the test nodes.   \n93 We propose a simple and effective relabeling method to allocate a new label of a node based on the   \n94 label distribution of the neighborhood nodes. Specifically, we consider the posterior distribution of   \n95 node labels given their neighbors. Let $\\mathcal{N}(i)$ be a set of neighborhood nodes of node $i$ . If we assume   \n96 the distribution of node labels depends on the graph connectivity, then the posterior probability of   \n97 node $i$ \u2019s label, given its neighborhood labels, is ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "equation", "text": "$$\nP(Y_{i}=k|\\{Y_{j}=y_{j}\\}_{j\\in N(i)})=\\frac{P(\\{Y_{j}=y_{j}\\}_{j\\in N(i)}|Y_{i}=k)P(Y_{i}=k)}{\\sum_{\\ell=1}^{K}P(\\{Y_{j}=y_{j}\\}_{j\\in N(i)}|Y_{i}=\\ell)P(Y_{i}=\\ell)}\\;.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "98 The likelihood measures the joint probability of the neighborhood labels given the label of node $i$ . To   \n99 obtain the likelihood, we approximate the likelihood through the product of empirical conditional   \n100 label distribution between adjacent nodes, i.e., $P(\\{Y_{j}=\\bar{y_{j}}\\}_{j\\in\\dot{N(i)}}|Y_{i}=k)\\approx\\dot{\\prod_{j\\in N(i)}P(Y_{j}=$   \n101 $y_{j}|Y_{i}=k,(i,j)\\in\\mathcal{E})$ , where $P(Y_{j}=y_{j}|Y_{i}=k,(i,j)\\in\\mathcal{E})$ is the conditional of between adjacent   \n102 nodes. The conditional between adjacent nodes $i$ and $j$ with label $n$ and $m$ , respectively, is estimated   \n103 by ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\hat{P}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal E):=\\frac{|\\{(u,v)~|~y_{v}=m,y_{u}=n,(u,v)\\in\\mathcal E\\}|}{|\\{(u,v)~|~y_{u}=n,(u,v)\\in\\mathcal E\\}|}~.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "104 The prior distribution is also estimated from the empirical observations. We use the empirical   \n105 proportion of label as a prior, i.e., $\\hat{P}(Y_{i}=m):=|\\{u\\mid y_{u}=m\\}|/|\\mathcal{V}|$ . We also explore alternative   \n106 designs for the likelihood and compare their performances in Section 4.2.   \n107 Note that, in implementation, all empirical distributions are computed only with the training nodes   \n108 and their labels. The empirical distribution might be updated after node relabeling through the   \n109 posterior computation, but we keep it the same throughout the relabeling process.   \n110 The posterior distribution can be used as a soft label to train the model, but we add uniform noise $\\epsilon$ to   \n111 the posterior to mitigate the risk of the posterior becoming overly confident if there are few or no   \n112 neighbors. In addition, since the most probable label from the posterior might be different from the   \n113 ground truth label, we interpolate the posterior with the ground truth label. To this end, we obtain the   \n114 soft label $\\hat{e}_{i}$ of node $i$ as ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "equation", "text": "$$\n\\hat{e}_{i}=(1-\\alpha)\\pmb{\\tilde{e}}_{i}+\\alpha\\pmb{e}_{i}\\;,\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "115 where $\\tilde{e}_{i k}\\propto P(Y_{i}=k\\mid\\{Y_{j}=y_{j}\\}_{j\\in\\mathcal{N}(i)})+\\beta\\epsilon$ . $\\alpha$ and $\\beta$ control the importance of interpolation   \n116 and uniform noise. By enforcing $\\alpha>1/2$ , we can keep the most probable label of soft label the same   \n117 as the ground truth label, but we find that this condition is not necessary in empirical experiments.   \n118 We name our method as PosteL (Posterior Label smoothing). The detailed algorithm of PosteL is   \n119 shown in Algorithm 1. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Algorithm 1 PosteL: Posterior label smoothing ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Require: The set of training nodes $\\mathcal{V}_{\\mathrm{train}}\\,\\subset\\,\\mathcal{V}$ , the number of classes $K$ , one-hot encoding of training node labels $\\{e_{i}\\}_{i\\in\\mathcal{V}_{\\mathrm{train}}}$ , and hyperparameters $\\alpha$ and $\\beta$ .   \nEnsure: The set of soft labels {e\u02c6i}i\u2208Vtrain Estimate prior distribution for $\\begin{array}{r}{m\\in[K]\\colon\\hat{P}(Y_{i}=m)=\\sum_{u\\in\\mathcal{V}_{\\mathrm{train}}}e_{u m}/|\\mathcal{V}_{\\mathrm{train}}|.}\\end{array}$ . Define the set of training neighbors for each node $u$ : $\\mathcal{N}_{\\mathrm{train}}(u)=\\mathcal{N}(u)\\cap\\mathcal{V}_{\\mathrm{train}}$ . Estimate the empirical conditional for $n,m\\in[K]$ : $\\begin{array}{r}{\\hat{P}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal{E})\\propto\\sum_{u:u\\in\\mathcal{V}_{\\mathrm{train}},y_{u}=n}\\sum_{v\\in\\mathcal{N}_{\\mathrm{train}}(u)}e_{v m}.}\\end{array}$ for $i\\in\\mathcal{V}_{\\mathrm{train}}$ do Approximate likelihood: $\\begin{array}{r}{P(\\{Y_{j}=y_{j}\\}_{j\\in\\mathcal{N}_{\\mathrm{train}}(i)}|Y_{i}=k)\\approx\\prod_{j\\in\\mathcal{N}_{\\mathrm{train}}(i)}\\hat{P}(Y_{j}=y_{j}|Y_{i}=k,(i,j)\\in\\mathcal{E}).}\\end{array}$ Compute posterior distribution: $P(Y_{i}=k\\mid\\{Y_{j}=y_{j}\\}_{j\\in\\mathcal{N}_{\\mathrm{train}}(i)})$ using Equation (1). Add uniform noise: $\\tilde{e}_{i k}\\propto P(Y_{i}=k\\mid\\{Y_{j}=y_{j}\\}_{j\\in\\mathcal{N}_{\\mathrm{train}}(i)})+\\beta\\epsilon$ . Obtain soft label: $\\pmb{\\hat{e}}_{i}=(1-\\alpha)\\pmb{\\tilde{e}}_{i}+\\alpha\\pmb{e}_{i}$ . end for ", "page_idx": 3}, {"type": "text", "text": "120 3.2 Iterative pseudo labeling ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "121 Posterior relabeling is a method used to predict the label of a node based on the labels of its   \n122 neighboring nodes. However, in transductive node classification tasks where train, validation, and   \n123 test nodes coexist within the same graph, the presence of unlabeled nodes can hinder the accurate   \n124 prediction of posterior labels. For instance, when a node has no labeled neighbors, the likelihood   \n125 becomes one, and the posterior only relies on the prior. Moreover, in cases where labeled neighbors   \n126 are scarce, noisy labels among the neighbors can significantly compromise the posterior distribution.   \n127 Such challenges are particularly prevalent in sparse graphs. For example, $26.35\\%$ of nodes in the   \n128 Cornell dataset have no neighbors with labels. In such scenarios, the posterior relabeling can be   \n129 challenging.   \n130 To address these limitations, we propose to update the likelihoods and priors through the pseudo   \n131 labels of validation and test nodes. We first train a graph neural network with the soft labels obtained   \n132 via Equation (3) and predict the labels of validation and test nodes to obtain the pseudo labels. We   \n133 choose the most probable label as a pseudo label from the prediction. We then update the likelihood   \n134 and prior with the pseudo labels, leading to the re-calibration of the posterior smoothing and soft   \n135 labels. By repeating training and re-calibration until the best validation loss of the predictor no longer   \n136 decreases, we can maximize the performance of node classification. We assume that if posterior label   \n137 smoothing improves classification performance with a better estimation of likelihood and prior, the   \n138 pseudo labels obtained from the predictor can benefti the posterior estimation as long as there are not   \n139 many false pseudo labels. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "140 4 Experiments ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "141 The experimental section is composed of two parts. First, we evaluate the performance of our method   \n142 for node classification through various datasets and models. Second, we provide a comprehensive   \n143 analysis of our method, investigating the conditions under which it performs well and the importance   \n144 of each design choice. ", "page_idx": 3}, {"type": "text", "text": "145 4.1 Node classification ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "146 In this section, we assess the enhancements in node classification performance across a range of   \n147 datasets and backbone models. Our aim is to validate the consistent efficacy of our method across   \n148 datasets and backbone models with diverse characteristics.   \n149 Datasets We assess the performance of our method across 10 node classification datasets. To   \n150 examine the effect of our method on diverse types of graphs, we conduct experiments on both   \n151 homophilic and heterophilic graphs. Adjacent nodes in a homophilic graph are likely to have the same   \n152 label. Adjacent nodes in a heterophilic graph are likely to have different labels. For the homophilic   \n153 datasets, we use five datasets: the citation graphs Cora, CiteSeer, and PubMed [Sen et al., 2008,   \n154 Yang et al., 2016], and the Amazon co-purchase graphs Computers and Photo [McAuley et al.,   \n155 2015]. For the heterophilic datasets, we use five datasets: the Wikipedia graphs Chameleon and   \n156 Squirrel [Rozemberczki et al., 2021], the Actor co-occurrence graph Actor [Tang et al., 2009], and the   \n157 webpage graphs Texas and Cornell [Pei et al., 2020]. Detailed statistics of each dataset are illustrated   \n158 in Appendix A.   \n159 Experimental setup and baselines We evaluate the performance of PosteL across various back  \n160 bone models, ranging from MLP, which ignores underlying structure between nodes, to six widely   \n161 used graph neural networks: GCN [Kipf and Welling, 2016], GAT [Veli\u02c7ckovi\u00b4c et al., 2017],   \n162 APPNP [Gasteiger et al., 2018], ChebNet [Defferrard et al., 2016], GPR-GNN [Chien et al., 2020],   \n163 and BernNet [He et al., 2021]. We follow the experimental setup and backbone implementations of He   \n164 et al. [2021]. Specifically, we use fixed 10 train, validation, and test splits with ratios of $60\\%/20\\%/20\\%$ ,   \n165 respectively, and measure the accuracy at the lowest validation loss. We report the mean performance   \n166 and $95\\%$ confidence interval. The model is trained for 1,000 epochs, and we apply early stopping   \n167 when validation loss does not decrease during the last 200 epochs. For all models, the learning   \n168 rate is validated within $\\left\\{0.001,0.002,0.01,0.0\\bar{5}\\right\\}$ , and weight decay within $\\{0,0.0005\\}$ . The search   \n169 spaces of the other model-dependent hyperparameters are provided in Appendix B. We validate two   \n170 hyperparameters for PosteL: posterior label ratio $\\alpha\\in\\{0.\\bar{1},0.2,0.3,0.\\bar{4},\\bar{0}.5,0.6,0.7,0.8,0.9,1.0\\}$   \n171 and uniform noise ratio $\\beta\\in\\{0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9\\}$ .   \n172 We compare our method with two different soft labeling methods, including label smoothing   \n173 (LS) [Szegedy et al., 2016b] and knowledge distillation (KD) [Hinton et al., 2015]. For KD, we   \n174 use an ensemble of average logits from three independently trained GNNs as a teacher model. The   \n175 temperature parameter for KD is set to four following the previous work [Stanton et al., 2021].   \n176 Results In Table 1, the classification accuracy and $95\\%$ confidence interval for each of the seven   \n177 models across the 10 datasets are presented. In most cases, PosteL outperforms baseline methods   \n178 across various settings, demonstrating significant performance enhancements and validating its   \n179 effectiveness for node classification. Specifically, our method performs better in 67 cases out of   \n180 70 settings against the ground truth labels. Furthermore, among these settings, 39 cases show   \n181 improvements over the $95\\%$ confidence interval. Notably, on the Cornell dataset with the GCN   \n182 backbone, our method achieves a substantial performance enhancement of $14.43\\%$ . When compared   \n183 to the other soft label methods, PosteL performs better in most cases as well. The knowledge   \n184 distillation method shows comparable performance with the GPR-GNN baseline, but even in this   \n185 case, there are marginal differences between the two approaches. ", "page_idx": 3}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/067e8abe29342a3c85b54e3c4ea86d13ba0efde4dff597917f9705d4a188ef16.jpg", "table_caption": ["Table 1: Classification accuracy on 10 node classification datasets. $\\Delta$ represents the performance improvement achieved by PosteL compared to the backbone model trained with the ground truth label. All results of the backbone model trained with the ground truth label are sourced from He et al. [2021]. "], "table_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/35aeb65827868cc6603ec1735cd768ca6242c5c3f69ae75e44b5a7c83ae9f759.jpg", "img_caption": ["Figure 2: Loss curve of GCN trained on PosteL labels and ground truth labels on the Squirrel dataset. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "186 4.2 Analysis ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "187 In this section, we analyze the main experimental result from various perspectives, including design   \n188 choices, ablations, and computational complexity.   \n189 Learning curves analysis We investigate the influence of soft labels on the learning dynamics of   \n190 GNNs by visualizing the loss function of GCNs with and without soft labels. Figure 2 visualizes the   \n191 differences between training, validation, and test losses with and without the PosteL labels on the   \n192 Squirrel dataset. From the training loss, we observe that the cross entropy with the PosteL labels   \n193 converges to a higher loss than that with the ground truth labels. The curve shows that predicting soft   \n194 labels is more difficult than predicting ground truth labels. On the other hand, the validation and test   \n195 losses with the soft labels converge to lower losses than those with the ground truth labels. Especially,   \n196 up to 200 epochs, we observe that no overfitting happens with the soft labels. We conjecture that   \n197 predicting the correct PosteL label implies the correct prediction of the local neighborhood structure   \n198 since the PosteL labels contain the local neighborhood information of the target node. Hence, the   \n199 model trained with PosteL labels could have a better understanding of the graph structure, potentially   \n200 leading to a better generalization performance. A similar context prediction approach has been   \n201 proposed as a pertaining method in previous studies [Hu et al., 2019, Rong et al., 2020]. We provide   \n202 the same curves for all datasets in Figure 6 and Figure 7 in Appendix D. All curves across all datasets   \n203 show similar patterns.   \n204 Influence of neighborhood label distribution Our approach assumes that the distribution of   \n205 neighborhood labels varies depending on the label of the target node. If there are no significant   \n206 differences between the neighborhood\u2019s label distributions, the posterior relabeling assigns similar   \n207 soft labels for all nodes, making our method similar to the uniform noise method.   \n208 Figure 3 shows the neighborhood label distribution for three different datasets. In the PubMed and   \n209 Texas datasets, we observe a notable difference in the conditionals when w.r.t the different labels of a   \n210 target node. The PubMed dataset is known to be homophilic, where nodes with the same labels are   \n211 likely to be connected, and the conditional distributions match the characteristics of the homophilic   \n212 dataset. The Texas dataset, a heterophilic dataset, shows that some pairs of labels more frequently   \n213 appear in the graph. For example, when the target node has the label of 1, their neighborhoods will   \n214 likely have the label of 5. On the other hand, the conditionals of the Actor dataset do not vary much   \n215 regarding the label of the target node. In such a case, the prior will likely dominate the posterior.   \n216 Therefore, the posterior may not provide useful information about neighborhood nodes, potentially   \n217 limiting the effectiveness of our method. This analysis aligns with the results in Table 1, where the   \n218 improvement of the Actor dataset is less significant than those of the PubMed and Texas datasets. The   \n219 neighborhood label distributions for all datasets are provided in Figure 8 and Figure 9 in Appendix E.   \n220 Visualization of node embeddings Figure 4 presents the t-SNE [Van der Maaten and Hinton, 2008]   \n221 plots of node embeddings from the GCN with the Chameleon and Squirrel datasets. The node color   \n222 represents the label. For each dataset, the left plot visualizes the embeddings with the ground truth   \n223 labels, while the right plot visualizes the embeddings with PosteL labels. The visualization shows   \n224 that the embeddings from the soft labels form tighter clusters compared to those trained with the   \n225 ground truth labels. This visualization results coincide with the t-SNE visualization of the previous   \n226 work of M\u00fcller et al. [2019].   \n227 Effect of iterative pseudo labeling We evaluate the impact of iterative pseudo labeling by analyzing   \n228 the loss curve at each iteration. Figure 5 illustrates the loss curves for different iterations on the   \n229 Cornell dataset. As the iteration progresses, the validation and test losses after 1,000 epochs keep   \n230 decreasing. In this example, the model performs best after four iteration steps. We find that the best   \n231 validation performance is obtained from 1.13 iterations on average. We provide the average iteration   \n232 steps in Appendix C used to report the results in Table 1. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/3f4b534fa3bbb883ae32b4dc3239f25692c453b1d72c080547367c1eac87ea70.jpg", "img_caption": ["Figure 3: Empirical conditional distributions between two adjacent nodes. We omit the adjacent condition $(i,j)\\in\\mathcal{E}$ from the figures for simplicity. "], "img_footnote": [], "page_idx": 6}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/8e1e1b8bf1d9576325c86b4c97bb730b3256e78711047a0ef5597ba45b6625ba.jpg", "img_caption": ["Figure 4: t-SNE plots of the final layer representation of the Chameleon and Squirrel datasets. For each dataset, the left figure displays the representations trained on the ground truth labels, while the right figure displays the representations trained on the PosteL labels. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/aea36d68a46d813c2e03243ec11635ae1eb1e67b3b212d95d2b22bc44cbfeee6.jpg", "img_caption": ["Figure 5: The impact of the iterative pseudo labeling: loss curves of GCN on the Cornell dataset. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Table 2: Classification accuracy with various choices of likelihood model. PosteL (local-1) and (local-2) indicate that the likelihood is estimated within one- and two-hop neighbors of a target node, respectively. PosteL (norm.), shortened from PosteL (normalized), indicates that the likelihood is normalized based on the degree of a node. ", "page_idx": 7}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/38537abf9d07e11b25463e198801f5214f157efe4460856688fd61658339634a.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "233 Design choices of likelihood model We explore various valid design choices for likelihood models.   \n234 We introduce two variants of PosteL: PosteL (normalized) and PosteL (local- $H$ ). In Equation (2),   \n235 each edge has an equal contribution to the conditional. The conditional can be influenced by a few   \n236 numbers of nodes with many connections. To mitigate the importance of high-degree nodes, we   \n237 alternatively test the following conditional, denoted as PosteL (normalized): ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\hat{P}^{\\mathrm{norm.}}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal E):=\\frac{\\sum_{y_{u}=n}\\sum_{v\\in\\mathcal N(u)}\\frac{1}{|N(u)|}\\cdot\\mathbb{I}[y_{v}=m]}{|\\{y_{u}=n\\mid u\\in\\mathcal V\\}|}\\;,\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "238 where $\\mathbb{1}$ is an indicator function. ", "page_idx": 7}, {"type": "text", "text": "239 In PosteL (local- $\\mathcal{H}$ ), we estimate the likelihood and prior distributions of each node from their   \n240 respective $H$ -hop ego graphs. Specifically, the likelihood of PosteL (local- $H$ ) is formulated as   \n241 follows: ", "page_idx": 7}, {"type": "equation", "text": "$$\n\\hat{P}^{\\mathrm{local.}H}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal E):=\\frac{|\\{(u,v)|y_{v}=m,y_{u}=n,(u,v)\\in\\mathcal E,u,v\\in\\mathcal N^{(H)}(i)\\}|}{|\\{(u,v)|y_{u}=n,(u,v)\\in\\mathcal E,u,v\\in\\mathcal N^{(H)}(i)\\}|}\\,,\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "242 where $\\mathcal{N}^{(H)}(i)$ denotes the set of neighborhoods of node $i$ within $H$ hops. Through the local   \n243 likelihood, we test the importance of global and local statistics in the smoothing process.   \n244 Table 2 shows the comparison between these variants. The likelihood with global statistics, e.g.,   \n245 PosteL and PosteL (normalized), performs better than the local likelihood methods, e.g., PosteL   \n246 (local-1) and PosteL (local-2) in general, highlighting the importance of simultaneously utilizing   \n247 global statistics. Especially in the Cornell dataset, a significant performance gap between PosteL and   \n248 PosteL (local) is observed. PosteL (normalized) demonstrates similar performance to PosteL.   \n249 Ablation studies To highlight the importance of each component in PosteL, we perform ablation   \n250 studies on three components: posterior smoothing without uniform noise (PS), uniform smoothing   \n251 (UN), and iterative pseudo labeling (IPL). Table 3 presents the performance results from the ablation   \n252 studies.   \n253 The configuration with all components included achieves the highest performance, underscoring the   \n254 significance of each component. The iterative pseudo labeling proves effective across almost all   \n255 datasets, with a particularly notable impact on the Cornell dataset. However, even without iterative   \n256 pseudo labeling, the performance remains competitive, suggesting that its use can be decided based   \n257 on available resources. Additionally, incorporating uniform noise into the posterior distribution   \n258 enhances performance on several datasets. Moreover, PosteL consistently outperforms the approach   \n259 using only uniform noise, a widely used label smoothing method. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Table 3: Ablation studies on three main components of PosteL on GCN. PS stands for posterior label smoothing without uniform noise, UN stands for uniform noise added to the posterior distribution, and IPL stands for iterative pseudo labeling. We use $\\checkmark$ to indicate the presence of the corresponding component in training and $\\pmb{x}$ to indicate its absence. IPL with one indicates the performance with a single pseudo labeling step. ", "page_idx": 8}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/974008f21df9c2b10dd026debb8e4783f3771fa862e77a38fa448b7792548401.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/3b5798930faac940adb70fa5fb468754011753819a0a33013fecc79c0ac1579f.jpg", "table_caption": ["Table 4: Accuracy of the model trained with sparse labels. The ratio indicates the percentage of nodes used for training. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "260 Complexity analysis The computational complexity of calculating the posterior label is $O(|\\mathcal{E}|K)$ .   \n261 Since the labeling is performed before the learning stage, the time required to process the posterior   \n262 label can be considered negligible. The training time increases linearly w.r.t the number of iterations   \n263 with the pseudo labeling. However, experiments show that an average of 1.13 iterations is needed,   \n264 making our approach feasible without having too many iterations. The proof of computational   \n265 complexity is in Appendix C. ", "page_idx": 8}, {"type": "text", "text": "266 4.3 Training with sparse labels ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "267 Our method relies on global statistics estimated from training nodes. However, in scenarios where   \n268 training data is sparse, the estimation of global statistics can be challenging. To assess the effectiveness   \n269 of the label smoothing from graphs with sparse labels, we conduct experiments with varying sizes of   \n270 a training set. We vary the size of the training set from $5\\%$ to $40\\%$ of an entire dataset and conduct   \n271 the classification experiments with the same setting used in the previous section. The percentage of   \n272 validation nodes is set to $20\\%$ for all experiments. Table 4 provides the classification performance   \n273 with sparse labels. Even in scenarios with sparse labels, PosteL consistently outperforms models   \n274 trained on ground truth labels in most cases. These results show that our method can effectively   \n275 capture global statistics even when training data is limited. ", "page_idx": 8}, {"type": "text", "text": "276 5 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "277 In this paper, we proposed a novel posterior label smoothing method, PosteL, designed to enhance   \n278 node classification performance in graph-structured data. Our approach integrates both local neighbor  \n279 hood information and global label statistics to generate soft labels, thereby improving generalization   \n280 and mitigating overfitting. Extensive experiments across various datasets and models demonstrated   \n281 the effectiveness of PosteL, showing significant performance gains compared to baseline methods   \n282 despite its simplicity. ", "page_idx": 8}, {"type": "text", "text": "283 References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "284 Wendong Bi, Lun Du, Qiang Fu, Yanlin Wang, Shi Han, and Dongmei Zhang. Make heterophily   \n285 graphs better fit gnn: A graph rewiring approach. arXiv preprint arXiv:2209.08264, 2022. 2   \n286 Yu Chen, Lingfei Wu, and Mohammed Zaki. Iterative deep graph learning for graph neural networks:   \n287 Better and robust node embeddings. In H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan,   \n288 and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages   \n289 19314\u201319326. Curran Associates, Inc., 2020. 2   \n290 Eli Chien, Jianhao Peng, Pan Li, and Olgica Milenkovic. Adaptive universal generalized pagerank   \n291 graph neural network. arXiv preprint arXiv:2006.07988, 2020. 2, 5, 19   \n292 Micha\u00ebl Defferrard, Xavier Bresson, and Pierre Vandergheynst. Convolutional neural networks on   \n293 graphs with fast localized spectral filtering. Advances in neural information processing systems,   \n294 29, 2016. 2, 5, 19   \n295 Luca Franceschi, Mathias Niepert, Massimiliano Pontil, and Xiao He. Learning discrete structures   \n296 for graph neural networks. In Kamalika Chaudhuri and Ruslan Salakhutdinov, editors, Proceedings   \n297 of the 36th International Conference on Machine Learning, volume 97 of Proceedings of Machine   \n298 Learning Research, pages 1972\u20131982. PMLR, 09\u201315 Jun 2019. 2   \n299 Johannes Gasteiger, Aleksandar Bojchevski, and Stephan G\u00fcnnemann. Predict then propagate: Graph   \n300 neural networks meet personalized pagerank. arXiv preprint arXiv:1810.05997, 2018. 2, 5, 19   \n301 Will Hamilton, Zhitao Ying, and Jure Leskovec. Inductive representation learning on large graphs. In   \n302 I. Guyon, U. Von Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett,   \n303 editors, Advances in Neural Information Processing Systems, volume 30. Curran Associates, Inc.,   \n304 2017. 2   \n305 Mingguo He, Zhewei Wei, Hongteng Xu, et al. Bernnet: Learning arbitrary graph spectral fliters via   \n306 bernstein approximation. Advances in Neural Information Processing Systems, 34:14239\u201314251,   \n307 2021. 2, 5, 19   \n308 Geoffrey Hinton, Oriol Vinyals, and Jeffrey Dean. Distilling the knowledge in a neural network. In   \n309 NIPS Deep Learning and Representation Learning Workshop, 2015. 2, 5   \n310 Weihua Hu, Bowen Liu, Joseph Gomes, Marinka Zitnik, Percy Liang, Vijay Pande, and Jure Leskovec.   \n311 Strategies for pre-training graph neural networks. arXiv preprint arXiv:1905.12265, 2019. 1, 6   \n312 Xiaoqi Jiao, Yichun Yin, Lifeng Shang, Xin Jiang, Xiao Chen, Linlin Li, Fang Wang, and Qun Liu.   \n313 TinyBERT: Distilling BERT for natural language understanding. In Findings of the Association   \n314 for Computational Linguistics: EMNLP 2020, pages 4163\u20134174. Association for Computational   \n315 Linguistics, nov 2020. 2   \n316 Di Jin, Zhizhi Yu, Cuiying Huo, Rui Wang, Xiao Wang, Dongxiao He, and Jiawei Han. Universal   \n317 graph convolutional networks. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan,   \n318 editors, Advances in Neural Information Processing Systems, 2021. 2   \n319 Thomas N Kipf and Max Welling. Semi-supervised classification with graph convolutional networks.   \n320 arXiv preprint arXiv:1609.02907, 2016. 2, 5, 19   \n321 Weizhi Li, Gautam Dasarathy, and Visar Berisha. Regularization via structural label smoothing. In   \n322 International Conference on Artificial Intelligence and Statistics, pages 1453\u20131463. PMLR, 2020.   \n323 1   \n324 Julian Lienen and Eyke H\u00fcllermeier. From label smoothing to label relaxation. In Proceedings of the   \n325 AAAI conference on artificial intelligence, volume 35, pages 8583\u20138591, 2021. 1   \n326 Yifan Liu, Ke Chen, Chris Liu, Zengchang Qin, Zhenbo Luo, and Jingdong Wang. Structured   \n327 knowledge distillation for semantic segmentation. In 2019 IEEE/CVF Conference on Computer   \n328 Vision and Pattern Recognition (CVPR), pages 2599\u20132608, 2019. 2   \n329 Michal Lukasik, Srinadh Bhojanapalli, Aditya Menon, and Sanjiv Kumar. Does label smoothing   \n330 mitigate label noise? In International Conference on Machine Learning, pages 6448\u20136458. PMLR,   \n331 2020. 2   \n332 Julian McAuley, Christopher Targett, Qinfeng Shi, and Anton Van Den Hengel. Image-based   \n333 recommendations on styles and substitutes. In Proceedings of the 38th international ACM SIGIR   \n334 conference on research and development in information retrieval, pages 43\u201352, 2015. 5   \n335 Rafael M\u00fcller, Simon Kornblith, and Geoffrey E Hinton. When does label smoothing help? Advances   \n336 in neural information processing systems, 32, 2019. 1, 2, 7   \n337 Joonhyung Park, Jaeyun Song, and Eunho Yang. GraphENS: Neighbor-aware ego network synthesis   \n338 for class-imbalanced node classification. In International Conference on Learning Representations,   \n339 2022. 2   \n340 Hongbin Pei, Bingzhe Wei, Kevin Chen-Chuan Chang, Yu Lei, and Bo Yang. Geom-gcn: Geometric   \n341 graph convolutional networks. arXiv preprint arXiv:2002.05287, 2020. 5   \n342 Gabriel Pereyra, George Tucker, Jan Chorowski, \u0141ukasz Kaiser, and Geoffrey Hinton. Regularizing   \n343 neural networks by penalizing confident output distributions. arXiv preprint arXiv:1701.06548,   \n344 2017. 1   \n345 Liang Qu, Huaisheng Zhu, Ruiqi Zheng, Yuhui Shi, and Hongzhi Yin. Imgagn: Imbalanced network   \n346 embedding via generative adversarial graph networks. In Proceedings of the 27th ACM SIGKDD   \n347 Conference on Knowledge Discovery & Data Mining, pages 1390\u20131398, 2021. 2   \n348 Yu Rong, Yatao Bian, Tingyang Xu, Weiyang Xie, Ying Wei, Wenbing Huang, and Junzhou Huang.   \n349 Self-supervised graph transformer on large-scale molecular data. Advances in neural information   \n350 processing systems, 33:12559\u201312571, 2020. 1, 6   \n351 Benedek Rozemberczki, Carl Allen, and Rik Sarkar. Multi-scale attributed node embedding. Journal   \n352 of Complex Networks, 9(2):cnab014, 2021. 5   \n353 Prithviraj Sen, Galileo Namata, Mustafa Bilgic, Lise Getoor, Brian Galligher, and Tina Eliassi-Rad.   \n354 Collective classification in network data. AI magazine, 29(3):93\u201393, 2008. 5   \n355 Samuel Stanton, Pavel Izmailov, Polina Kirichenko, Alexander A Alemi, and Andrew G Wilson.   \n356 Does knowledge distillation really work? In M. Ranzato, A. Beygelzimer, Y. Dauphin, P.S. Liang,   \n357 and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, volume 34,   \n358 pages 6906\u20136919. Curran Associates, Inc., 2021. 6   \n359 Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon Shlens, and Zbigniew Wojna. Rethinking the   \n360 inception architecture for computer vision. In Proceedings of the IEEE Conference on Computer   \n361 Vision and Pattern Recognition (CVPR), June 2016a. 1, 2   \n362 Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jon Shlens, and Zbigniew Wojna. Rethinking   \n363 the inception architecture for computer vision. In 2016 IEEE Conference on Computer Vision and   \n364 Pattern Recognition (CVPR), pages 2818\u20132826, 2016b. doi: 10.1109/CVPR.2016.308. 5   \n365 Jiaxi Tang and Ke Wang. Ranking distillation: Learning compact ranking models with high per  \n366 formance for recommender system. In Proceedings of the 24th ACM SIGKDD International   \n367 Conference on Knowledge Discovery & Data Mining, KDD \u201918, page 2289\u20132298, New York, NY,   \n368 USA, 2018. Association for Computing Machinery. 2   \n369 Jie Tang, Jimeng Sun, Chi Wang, and Zi Yang. Social influence analysis in large-scale networks. In   \n370 Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data   \n371 mining, pages 807\u2013816, 2009. 5   \n372 Yijun Tian, Chuxu Zhang, Zhichun Guo, Xiangliang Zhang, and Nitesh Chawla. Learning MLPs on   \n373 graphs: A unified view of effectiveness, robustness, and efficiency. In The Eleventh International   \n374 Conference on Learning Representations, 2023. 2   \n375 Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of machine   \n376 learning research, 9(11), 2008. 7   \n377 Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141 ukasz   \n378 Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. Von Luxburg, S. Bengio,   \n379 H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in Neural Information   \n380 Processing Systems, volume 30. Curran Associates, Inc., 2017. 1, 2   \n381 Petar Veli\u02c7ckovi\u00b4c, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Lio, and Yoshua   \n382 Bengio. Graph attention networks. arXiv preprint arXiv:1710.10903, 2017. 2, 5, 19   \n383 Bencheng Yan, Chaokun Wang, Gaoyang Guo, and Yunkai Lou. Tinygnn: Learning efficient graph   \n384 neural networks. In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge   \n385 Discovery & Data Mining, KDD \u201920, page 1848\u20131856, New York, NY, USA, 2020. Association   \n386 for Computing Machinery. ISBN 9781450379984. doi: 10.1145/3394486.3403236. 2   \n387 Zhilin Yang, William Cohen, and Ruslan Salakhudinov. Revisiting semi-supervised learning with   \n388 graph embeddings. In International conference on machine learning, pages 40\u201348. PMLR, 2016.   \n389 5   \n390 Chang-Bin Zhang, Peng-Tao Jiang, Qibin Hou, Yunchao Wei, Qi Han, Zhen Li, and Ming-Ming   \n391 Cheng. Delving deep into label smoothing. IEEE Transactions on Image Processing, 30:5984\u2013   \n392 5996, 2021. 1, 2   \n393 Tianxiang Zhao, Xiang Zhang, and Suhang Wang. Graphsmote: Imbalanced node classification on   \n394 graphs with graph neural networks. In Proceedings of the 14th ACM international conference on   \n395 web search and data mining, pages 833\u2013841, 2021. 2   \n396 Jiong Zhu, Yujun Yan, Lingxiao Zhao, Mark Heimann, Leman Akoglu, and Danai Koutra. Beyond   \n397 homophily in graph neural networks: Current limitations and effective designs. In H. Larochelle,   \n398 M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin, editors, Advances in Neural Information   \n399 Processing Systems, volume 33, pages 7793\u20137804. Curran Associates, Inc., 2020. 2   \n400 Jiong Zhu, Ryan A Rossi, Anup Rao, Tung Mai, Nedim Lipka, Nesreen K Ahmed, and Danai Koutra.   \n401 Graph neural networks with heterophily. In Proceedings of the AAAI conference on artificial   \n402 intelligence, volume 35, pages 11168\u201311176, 2021. 2 ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "403 NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "408 Justification: The abstract and introduction accurately explain our method.   \n409 Guidelines:   \n410 \u2022 The answer NA means that the abstract and introduction do not include the claims   \n411 made in the paper.   \n412 \u2022 The abstract and/or introduction should clearly state the claims made, including the   \n413 contributions made in the paper and important assumptions and limitations. A No or   \n414 NA answer to this question will not be perceived well by the reviewers.   \n415 \u2022 The claims made should match theoretical and experimental results, and reflect how   \n416 much the results can be expected to generalize to other settings.   \n417 \u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals   \nare not attained by the paper. ", "page_idx": 12}, {"type": "text", "text": "419 2. Limitations ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 12}, {"type": "text", "text": "Justification: We discuss the limitations of the proposed model when the empirical conditional is not distinguishable in Section 4. ", "page_idx": 12}, {"type": "text", "text": "4 Guidelines:   \n25 \u2022 The answer NA means that the paper has no limitation while the answer No means that   \n6 the paper has limitations, but those are not discussed in the paper.   \n27 \u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n28 \u2022 The paper should point out any strong assumptions and how robust the results are to   \n9 violations of these assumptions (e.g., independence assumptions, noiseless settings,   \n0 model well-specification, asymptotic approximations only holding locally). The authors   \n31 should reflect on how these assumptions might be violated in practice and what the   \n2 implications would be.   \n3 \u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was   \n4 only tested on a few datasets or with a few runs. In general, empirical results often   \n5 depend on implicit assumptions, which should be articulated.   \n36 \u2022 The authors should reflect on the factors that influence the performance of the approach.   \n7 For example, a facial recognition algorithm may perform poorly when image resolution   \n38 is low or images are taken in low lighting. Or a speech-to-text system might not be   \n39 used reliably to provide closed captions for online lectures because it fails to handle   \n40 technical jargon.   \n1 \u2022 The authors should discuss the computational efficiency of the proposed algorithms   \n42 and how they scale with dataset size.   \n43 \u2022 If applicable, the authors should discuss possible limitations of their approach to   \n44 address problems of privacy and fairness.   \n45 \u2022 While the authors might fear that complete honesty about limitations might be used by   \n6 reviewers as grounds for rejection, a worse outcome might be that reviewers discover   \n47 limitations that aren\u2019t acknowledged in the paper. The authors should use their best   \n8 judgment and recognize that individual actions in favor of transparency play an impor  \n49 tant role in developing norms that preserve the integrity of the community. Reviewers   \n50 will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 12}, {"type": "text", "text": "451 3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "452 Question: For each theoretical result, does the paper provide the full set of assumptions and   \n453 a complete (and correct) proof? ", "page_idx": 12}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 12}, {"type": "text", "text": "Justification: The computational complexity of the proposed model is proven in Appendix C. Guidelines: ", "page_idx": 13}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 13}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 13}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 13}, {"type": "text", "text": "Justification: We provide the source code in the supplemental material, and all the hyperparameters we used are reported in Section 4. ", "page_idx": 13}, {"type": "text", "text": "Guidelines: ", "page_idx": 13}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 13}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 13}, {"type": "text", "text": "510 Answer: [Yes]   \n511 Justification: We provide the source code for the proposed model, along with the environment   \n512 required to reproduce it and the hyperparameter space we utilized.   \n513 Guidelines:   \n514 \u2022 The answer NA means that paper does not include experiments requiring code.   \n515 \u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/   \n516 public/guides/CodeSubmissionPolicy) for more details.   \n517 \u2022 While we encourage the release of code and data, we understand that this might not be   \n518 possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not   \n519 including code, unless this is central to the contribution (e.g., for a new open-source   \n520 benchmark).   \n521 \u2022 The instructions should contain the exact command and environment needed to run to   \n522 reproduce the results. See the NeurIPS code and data submission guidelines (https:   \n523 //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n524 \u2022 The authors should provide instructions on data access and preparation, including how   \n525 to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n526 \u2022 The authors should provide scripts to reproduce all experimental results for the new   \n527 proposed method and baselines. If only a subset of experiments are reproducible, they   \n528 should state which ones are omitted from the script and why.   \n529 \u2022 At submission time, to preserve anonymity, the authors should release anonymized   \n530 versions (if applicable).   \n531 \u2022 Providing as much information as possible in supplemental material (appended to the   \n532 paper) is recommended, but including URLs to data and code is permitted.   \n533 6. Experimental Setting/Details   \n534 Question: Does the paper specify all the training and test details (e.g., data splits, hyper  \n535 parameters, how they were chosen, type of optimizer, etc.) necessary to understand the   \n536 results?   \n537 Answer: [Yes]   \n538 Justification: We provide all details in the appendix and experiments sections.   \n539 Guidelines:   \n540 \u2022 The answer NA means that the paper does not include experiments.   \n541 \u2022 The experimental setting should be presented in the core of the paper to a level of detail   \n542 that is necessary to appreciate the results and make sense of them.   \n543 \u2022 The full details can be provided either with the code, in appendix, or as supplemental   \n544 material.   \n545 7. Experiment Statistical Significance   \n546 Question: Does the paper report error bars suitably and correctly defined or other appropriate   \n547 information about the statistical significance of the experiments?   \n548 Answer: [Yes]   \n549 Justification: We provide the $95\\%$ confidence interval for all main experiments.   \n550 Guidelines:   \n551 \u2022 The answer NA means that the paper does not include experiments.   \n552 \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confi  \n553 dence intervals, or statistical significance tests, at least for the experiments that support   \n554 the main claims of the paper.   \n555 \u2022 The factors of variability that the error bars are capturing should be clearly stated (for   \n556 example, train/test split, initialization, random drawing of some parameter, or overall   \n557 run with given experimental conditions).   \n558 \u2022 The method for calculating the error bars should be explained (closed form formula,   \n559 call to a library function, bootstrap, etc.)   \n560 \u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n561 \u2022 It should be clear whether the error bar is the standard deviation or the standard error   \n562 of the mean.   \n563 \u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should   \n564 preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis   \n565 of Normality of errors is not verified.   \n566 \u2022 For asymmetric distributions, the authors should be careful not to show in tables or   \n567 figures symmetric error bars that would yield results that are out of range (e.g. negative   \n568 error rates).   \n569 \u2022 If error bars are reported in tables or plots, The authors should explain in the text how   \n570 they were calculated and reference the corresponding figures or tables in the text.   \n571 8. Experiments Compute Resources   \n572 Question: For each experiment, does the paper provide sufficient information on the com  \n573 puter resources (type of compute workers, memory, time of execution) needed to reproduce   \n574 the experiments?   \n575 Answer: [Yes]   \n576 Justification: We provide experiments computer resources in Appendix B.   \n577 Guidelines:   \n578 \u2022 The answer NA means that the paper does not include experiments.   \n579 \u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster,   \n580 or cloud provider, including relevant memory and storage.   \n581 \u2022 The paper should provide the amount of compute required for each of the individual   \n582 experimental runs as well as estimate the total compute.   \n583 \u2022 The paper should disclose whether the full research project required more compute   \n584 than the experiments reported in the paper (e.g., preliminary or failed experiments that   \n585 didn\u2019t make it into the paper).   \n586 9. Code Of Ethics   \n587 Question: Does the research conducted in the paper conform, in every respect, with the   \n588 NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?   \n589 Answer: [Yes]   \n590 Justification: Our paper follows the NeurIPS Code of Ethics.   \n591 Guidelines:   \n592 \u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n593 \u2022 If the authors answer No, they should explain the special circumstances that require a   \n594 deviation from the Code of Ethics.   \n595 \u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consid  \n596 eration due to laws or regulations in their jurisdiction).   \n597 10. Broader Impacts   \n598 Question: Does the paper discuss both potential positive societal impacts and negative   \n599 societal impacts of the work performed?   \n600 Answer: [NA]   \n601 Justification: This paper proposes a label smoothing method designed to improve the   \n602 classification performance.   \n603 Guidelines:   \n604 \u2022 The answer NA means that there is no societal impact of the work performed.   \n605 \u2022 If the authors answer NA or No, they should explain why their work has no societal   \n606 impact or why the paper does not address societal impact.   \n607 \u2022 Examples of negative societal impacts include potential malicious or unintended uses   \n608 (e.g., disinformation, generating fake profiles, surveillance), fairness considerations   \n609 (e.g., deployment of technologies that could make decisions that unfairly impact specific   \n610 groups), privacy considerations, and security considerations.   \n611 \u2022 The conference expects that many papers will be foundational research and not tied   \n612 to particular applications, let alone deployments. However, if there is a direct path to   \n613 any negative applications, the authors should point it out. For example, it is legitimate   \n614 to point out that an improvement in the quality of generative models could be used to   \n615 generate deepfakes for disinformation. On the other hand, it is not needed to point out   \n616 that a generic algorithm for optimizing neural networks could enable people to train   \n617 models that generate Deepfakes faster.   \n618 \u2022 The authors should consider possible harms that could arise when the technology is   \n619 being used as intended and functioning correctly, harms that could arise when the   \n620 technology is being used as intended but gives incorrect results, and harms following   \n621 from (intentional or unintentional) misuse of the technology.   \n622 \u2022 If there are negative societal impacts, the authors could also discuss possible mitigation   \n623 strategies (e.g., gated release of models, providing defenses in addition to attacks,   \n624 mechanisms for monitoring misuse, mechanisms to monitor how a system learns from   \n625 feedback over time, improving the efficiency and accessibility of ML).   \n626 11. Safeguards   \n627 Question: Does the paper describe safeguards that have been put in place for responsible   \n628 release of data or models that have a high risk for misuse (e.g., pretrained language models,   \n629 image generators, or scraped datasets)?   \n630 Answer: [NA]   \n631 Justification: This paper poses no risk for misuse.   \n632 Guidelines:   \n633 \u2022 The answer NA means that the paper poses no such risks.   \n634 \u2022 Released models that have a high risk for misuse or dual-use should be released with   \n635 necessary safeguards to allow for controlled use of the model, for example by requiring   \n636 that users adhere to usage guidelines or restrictions to access the model or implementing   \n637 safety filters.   \n638 \u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors   \n639 should describe how they avoided releasing unsafe images.   \n640 \u2022 We recognize that providing effective safeguards is challenging, and many papers do   \n641 not require this, but we encourage authors to take this into account and make a best   \n642 faith effort.   \n643 12. Licenses for existing assets   \n644 Question: Are the creators or original owners of assets (e.g., code, data, models), used in   \n645 the paper, properly credited and are the license and terms of use explicitly mentioned and   \n646 properly respected?   \n647 Answer: [Yes]   \n648 Justification: We cite the original paper that produced the code package and dataset.   \n649 Guidelines:   \n650 \u2022 The answer NA means that the paper does not use existing assets.   \n651 \u2022 The authors should cite the original paper that produced the code package or dataset.   \n652 \u2022 The authors should state which version of the asset is used and, if possible, include a   \n653 URL.   \n654 \u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n655 \u2022 For scraped data from a particular source (e.g., website), the copyright and terms of   \n656 service of that source should be provided.   \n657 \u2022 If assets are released, the license, copyright information, and terms of use in the   \n658 package should be provided. For popular datasets, paperswithcode.com/datasets   \n659 has curated licenses for some datasets. Their licensing guide can help determine the   \n660 license of a dataset.   \n661 \u2022 For existing datasets that are re-packaged, both the original license and the license of   \n662 the derived asset (if it has changed) should be provided.   \n663 \u2022 If this information is not available online, the authors are encouraged to reach out to   \n664 the asset\u2019s creators.   \n665 13. New Assets   \n666 Question: Are new assets introduced in the paper well documented and is the documentation   \n667 provided alongside the assets?   \n668 Answer: [Yes]   \n669 Justification: We provide documentation for the code.   \n670 Guidelines:   \n671 \u2022 The answer NA means that the paper does not release new assets.   \n672 \u2022 Researchers should communicate the details of the dataset/code/model as part of their   \n673 submissions via structured templates. This includes details about training, license,   \n674 limitations, etc.   \n675 \u2022 The paper should discuss whether and how consent was obtained from people whose   \n676 asset is used.   \n677 \u2022 At submission time, remember to anonymize your assets (if applicable). You can either   \n678 create an anonymized URL or include an anonymized zip file.   \n679 14. Crowdsourcing and Research with Human Subjects   \n680 Question: For crowdsourcing experiments and research with human subjects, does the paper   \n681 include the full text of instructions given to participants and screenshots, if applicable, as   \n682 well as details about compensation (if any)?   \n683 Answer: [NA]   \n684 Justification: This work does not involve crowdsourcing.   \n685 Guidelines:   \n686 \u2022 The answer NA means that the paper does not involve crowdsourcing nor research with   \n687 human subjects.   \n688 \u2022 Including this information in the supplemental material is fine, but if the main contribu  \n689 tion of the paper involves human subjects, then as much detail as possible should be   \n690 included in the main paper.   \n691 \u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation,   \n692 or other labor should be paid at least the minimum wage in the country of the data   \n693 collector.   \n694 15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human   \n695 Subjects ", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 17}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 17}, {"type": "text", "text": "713 A Dataset statistics ", "text_level": 1, "page_idx": 18}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/057ae25b1a7fda19536c3eb18739235ecbc9ddd6b7acebee8dbd55b8b2206391.jpg", "table_caption": ["We provide detailed statistics about the dataset used for the experiments in Table 5. "], "table_footnote": ["Table 5: Statistics of the dataset utilized in the experiments. "], "page_idx": 18}, {"type": "text", "text": "714 ", "page_idx": 18}, {"type": "text", "text": "715 B Detailed experimental setup ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "716 In this section, we provide the computer resources and search space for model hyperparameters.   \n717 Our experiments are executed on AMD EPYC 7513 32-core Processor and a single NVIDIA RTX   \n718 A6000 GPU with 48GB of memory. We use the same model hyperparameter search space as He et al.   \n719 [2021]. Specifically, we set the number of layers for all models to two. The dropout ratio for the   \n720 linear layers is fixed at 0.5. For the GCN [Kipf and Welling, 2016], the hidden layer dimension is set   \n721 to 64. The GAT [Veli\u02c7ckovi\u00b4c et al., 2017] uses eight heads, each with a hidden dimension of eight.   \n722 For the APPNP [Gasteiger et al., 2018], a two-layer MLP with a hidden dimension of 64 is used, the   \n723 power iteration step is set to 10, and the teleport probability is chosen from $\\{0.1,0.2,0.5,0.9\\}$ . For   \n724 the MLP, the hidden dimension is set to 64. For the ChebNet [Defferrard et al., 2016], the hidden   \n725 dimension is set to 32, and two propagation steps are used. For the GPR-GNN [Chien et al., 2020], a   \n726 two-layer MLP with a hidden dimension of 64 is used as the feature extractor neural network, and the   \n727 random walk path length is set to 10. The PPR teleport probability is chosen from $\\{0.1,0.2,0.5,0.9\\}$ .   \n728 For BernNet [He et al., 2021], a two-layer MLP with a hidden dimension of 64 is used as the feature   \n729 extractor, and the polynomial approximation order is set to 10. The dropout ratio for the propagation   \n730 layers in both GPR-GNN and BernNet is chosen from $\\{0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,\\bar{0}.8,0.9\\}$ . ", "page_idx": 18}, {"type": "text", "text": "731 C Complexity analysis ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "732 In this section, we provide a detailed analysis of the time complexity of Section 3.1. Specifically, we   \n733 demonstrate the time complexity of obtaining the prior and likelihood distributions separately. Finally,   \n734 we determine the time complexity of computing the posterior distribution using these distributions. ", "page_idx": 18}, {"type": "text", "text": "735 First, the prior distribution ${\\hat{P}}(Y_{i}=m)$ can be obtained as follows: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\hat{P}(Y_{i}=m)=\\frac{|\\{u\\mid y_{u}=k\\}|}{|\\mathcal{V}|}=\\frac{\\sum_{u\\in\\mathcal{V}}e_{u m}}{|\\mathcal{V}|}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "736 The time complexity of calculating Equation (4) is $O(|\\mathcal{V}|)$ , so the time complexity of calculating the   \n737 prior distribution for $K$ classes is $\\bar{O}(|\\bar{\\boldsymbol{\\nu}}|K)$ .   \n738 Next, calculating the empirical conditional $\\hat{P}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal{E})$ from Equation (2) can be   \n739 performed as follows: ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 18}, {"type": "equation", "text": "$$\n\\hat{P}(Y_{j}=m|Y_{i}=n,(i,j)\\in\\mathcal{E})\\propto\\sum_{u:u\\in\\mathcal{V},y_{u}=n}\\sum_{v\\in\\mathcal{N}(u)}e_{v m}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "table", "img_path": "DHVqAQ9DHy/tmp/21cf698d86525432fedbb3441be03cc579f501a1d5df624449d8e42d353d26ba.jpg", "table_caption": ["Table 6: Average iteration counts of iterative pseudo labeling for each backbone and dataset used to report Table 1. "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "740 The time complexity of calculating Equation (5) for all possible pairs of $m$ and $n$ is   \n741 $\\textstyle O(\\sum_{u\\in\\mathcal{V}}|\\mathcal{N}(u)|K)$ . Since $\\begin{array}{r}{\\sum_{u\\in\\mathcal{V}}\\mathcal{N}(u)\\,=\\,2|\\mathcal{E}|}\\end{array}$ , the time complexity for calculating empirical   \n742 conditional is $O(|\\mathcal{E}|K)$ .   \n743 The likelihood is approximated through the product of empirical conditional distributions, denoted   \n744 as $\\begin{array}{r}{P(\\{Y_{j}=y_{j}\\}_{j\\in\\mathcal{N}(i)}|Y_{i}=k)\\approx\\prod_{j\\in\\mathcal{N}(i)}\\hat{P}(Y_{j}=y_{j}|Y_{i}=k,(i,j)\\in\\mathcal{E})}\\end{array}$ . Likelihood calculation   \n745 for all training nodes operates in $\\begin{array}{r}{O(\\sum_{u\\in\\mathcal{V}}|\\mathcal{N}(u)|K)}\\end{array}$ time complexity. So the overall computational   \n746 complexity for likelihood calculation is $O(|\\mathcal{E}|K)$ .   \n747 After obtaining the prior distribution and likelihood, the posterior distribution is obtained by Bayes\u2019   \n748 rule in Equation (1). Applying Bayes\u2019 rule for $\\vert\\mathcal{V}\\vert$ nodes and $K$ classes can be done in $O(|\\nu|K)$ . So   \n749 the overall time complexity is $O\\left(\\dot{(}|\\mathcal{E}|+|\\mathcal{V}|)\\,\\dot{K^{\\prime}}\\right)$ . In most cases, $|\\gamma|<|\\mathcal{E}|$ , so the time complexity of   \n750 PosteL is $O(|\\mathcal{E}|K)$ .   \n751 In Section 3.2, iterative pseudo labeling is proposed, which involves iteratively refining the pseudo   \n752 labels of validation and test nodes to calculate posterior labels. Since this process requires training   \n753 the model from scratch for each iteration, the number of iterations can be a significant bottleneck in   \nterms of runtime. Consequently, the iteration counts are evaluated to assess this aspect. The mean   \n755 iteration counts for each backbone and dataset in Table 1 are summarized in Table 6. With an overall   \n756 mean iteration count of 1.13, we argue that this level of additional time investment is justifiable for   \n757 the sake of performance enhancement. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "758 D Learning curves analysis for all datasets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "759 The learning curves for all datasets are provided in Figure 6 and Figure 7. ", "page_idx": 20}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/6028f889c4534611b797da1a74e927af0b105f404ec2d9bf5c77435d72750d9e.jpg", "img_caption": ["Figure 6: Loss curve of GCN trained on PosteL labels and ground truth labels on homophilic datasets. "], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/5b99e32a8df761f04814e07f35d4d9dcfe26d6fc96fd0bf553c1ed55c142a5fe.jpg", "img_caption": ["Figure 7: Loss curve of GCN trained on PosteL labels and ground truth labels on heterophilic datasets. "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "760 E Empirical conditional distribution for all datasets ", "page_idx": 22}, {"type": "text", "text": "The empirical conditional distribution for all datasets is provided in Figure 8 and Figure 9. ", "page_idx": 22}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/5f1a73a5047eb5e17ddecf25cbe562caa02f457986f35fc0187ca28120c455f9.jpg", "img_caption": [], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Figure 8: Empirical conditional distributions between two adjacent nodes on heterophilic graphs. ", "page_idx": 22}, {"type": "image", "img_path": "DHVqAQ9DHy/tmp/4964fdbc1f134eb9836c01765449f3cc4806724c4a67efbf52266e9f9190d6d6.jpg", "img_caption": ["Figure 9: Empirical conditional distributions between two adjacent nodes on homophilic graphs. "], "img_footnote": [], "page_idx": 23}]