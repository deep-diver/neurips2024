[{"figure_path": "eFD9N5zdFC/figures/figures_4_1.jpg", "caption": "Figure 1: The figure compares the convergence rates of the RM and FP algorithms in a 100 \u00d7 100 random payoff matrix game generated from a N(0, 1) distribution. In right figure, the convergence for a standard random payoff matrix is shown, while left figure illustrates the convergence in 100 \u00d7 100 random payoff matrix where the payoffs for actions 1 to 10 are uniformly increased by 5 (causing actions 11 to 100 to have a high probability of being dominated strategies). It can be observed that in this setting, the convergence rate of the FP is very close to that of RM. Considering that the complexity of one FP iteration is only 0(|A|) compared to the complexity of RM, which is O(|A|\u00b2), in a clear game, the overall convergence rate of FP can actually surpass that of RM. Each scenario tested an average of 30 rounds. The shaded areas represent the 90% confidence intervals for these trials. The experiments in Appendix A can also confirm our view from another perspective.", "description": "This figure compares the convergence speed of Regret Matching (RM) and Fictitious Play (FP) in two types of 100x100 matrix games: a standard random game and a \"clear\" game where a subset of actions are dominated.  The results show that in clear games, FP converges faster, highlighting its advantage when many strategies are clearly inferior.", "section": "5 Experiments"}, {"figure_path": "eFD9N5zdFC/figures/figures_7_1.jpg", "caption": "Figure 2: Convergence rates in Kuhn-extension, Leduc-extension, and princess-and-monster games are shown. In the first two rows, time is measured in milliseconds (ms). The last two rows reflect the same running time but with the horizontal axis representing the number of nodes touched during iteration. All experiments tested over an average of 30 rounds. The shaded areas indicate 90% confidence intervals for the trials.", "description": "This figure compares the convergence speed of different algorithms across various games, showing the exploitability (a measure of how far from Nash Equilibrium the strategies are) over time (in milliseconds or nodes touched).  The top two rows show convergence time in milliseconds; the bottom two rows show convergence speed using the number of nodes touched as the metric. The shaded areas represent 90% confidence intervals.  The goal is to demonstrate that MCCFVFP consistently converges faster than MCCFR, especially as the game scale increases.", "section": "5.2 Experimental results"}, {"figure_path": "eFD9N5zdFC/figures/figures_12_1.jpg", "caption": "Figure 3: The difference between RM and FP (CFVFP in normal-form game) in a two-dimensional plane", "description": "This figure illustrates the difference in the forceable half-spaces for Regret Matching (RM) and Fictitious Play (FP, specifically CFVFP in this context) strategies in a two-dimensional plane.  It visually represents how the choice of strategy (RM or BR) affects the region (half-space) in which the regret vector must fall to guarantee convergence towards the target set (S\u00b2). The figure highlights that the BR strategy employed by FP provides a larger, more encompassing half-space, implying it's more efficient at achieving convergence.", "section": "B Convergence of CFVFP"}, {"figure_path": "eFD9N5zdFC/figures/figures_16_1.jpg", "caption": "Figure 4: Convergence rate of MCCFVFP variants in different games", "description": "This figure compares the convergence speed of four different variants of the MCCFVFP algorithm across two different games: 3-Card 1-Action 1-Len Leduc and 10-Card 1-Action 1-Len Kuhn.  The x-axis represents either the number of nodes touched or the training time (in milliseconds), and the y-axis represents the log10 of the exploitability.  The lines show the average convergence behavior for each variant, with shaded areas representing confidence intervals. The purpose is to demonstrate the effectiveness of different MCCFVFP variants, showing that MCCFVFP+ generally converges faster than the others.", "section": "5.2 Experimental results"}, {"figure_path": "eFD9N5zdFC/figures/figures_16_2.jpg", "caption": "Figure 2: Convergence rates in Kuhn-extension, Leduc-extension, and princess-and-monster games are shown. In the first two rows, time is measured in milliseconds (ms). The last two rows reflect the same running time but with the horizontal axis representing the number of nodes touched during iteration. All experiments tested over an average of 30 rounds. The shaded areas indicate 90% confidence intervals for the trials.", "description": "This figure compares the convergence speed of different algorithms (CFR, CFR+, DCFR, PCFR, MCCFR, and MCCFVFP) across various game types (Kuhn poker, Leduc poker, and Princess-and-Monster game).  The top two rows show the exploitability (a measure of how far from the Nash equilibrium the strategies are) plotted against training time (in milliseconds), while the bottom two rows use the number of nodes touched as the x-axis instead.  The shaded regions represent 90% confidence intervals, indicating the uncertainty in the measurements. The results illustrate how MCCFVFP consistently outperforms other algorithms, especially in larger games.", "section": "5.2 Experimental results"}, {"figure_path": "eFD9N5zdFC/figures/figures_17_1.jpg", "caption": "Figure 6: Game tree when each node has h = 4 levels and g = 3 actions. The number (\u03c0\u00b9(s), \u03c0\u00b2(s)) in each node represents the probability of player1 and player2 reaching this node respectively.", "description": "This figure shows a game tree where each node has 4 levels and 3 possible actions.  The values (\u03c0\u00b9(s), \u03c0\u00b2(s)) associated with each node represent the probability of player 1 and player 2 respectively reaching that specific node in the game. The tree visually depicts the branching possibilities and probabilities within the game's progression.", "section": "E.2 Number of nodes touched in one iteration"}, {"figure_path": "eFD9N5zdFC/figures/figures_19_1.jpg", "caption": "Figure 7: The structure of the dungeon.", "description": "This figure illustrates the game board for the Princess and Monster game.  It's a 3x3 grid representing rooms in a dungeon. The upper-left and upper-right corners are inaccessible (blocked). The Princess and Monster are represented by stick figures and start in specific locations at the beginning of the game.", "section": "F.1.2 Princess and Monster"}, {"figure_path": "eFD9N5zdFC/figures/figures_20_1.jpg", "caption": "Figure 2: Convergence rates in Kuhn-extension, Leduc-extension, and princess-and-monster games are shown. In the first two rows, time is measured in milliseconds (ms). The last two rows reflect the same running time but with the horizontal axis representing the number of nodes touched during iteration. All experiments tested over an average of 30 rounds. The shaded areas indicate 90% confidence intervals for the trials.", "description": "This figure compares the convergence speed of different algorithms (CFR+, ES-MCCFR, MCCFVFP, and vanilla CFR) across three different game types: Kuhn-extension poker, Leduc-extension poker, and the princess-and-monster game. The results are shown using two different metrics: training time (in milliseconds) and the number of nodes touched.  The shaded regions represent the 90% confidence intervals, indicating the variability in the results.  The figure demonstrates that MCCFVFP generally outperforms other algorithms in terms of convergence speed, especially as the game size increases.", "section": "5.2 Experimental results"}]