[{"figure_path": "co7DsOwcop/tables/tables_6_1.jpg", "caption": "Table 1: The forecasting results with prediction horizons of 3 and 6 on Electricity, Weather, etc.", "description": "This table presents the forecasting results for prediction horizons of 3 and 6 time steps on six benchmark datasets (Electricity, Weather, ETTh2, Traffic, PEMS, and Solar-Energy).  The results are compared across 15 different forecasting methods, including several transformer-based, TCN-based, and graph neural network based methods.  The table shows MAE, RMSE, and MAPE values for each method and dataset, allowing for a comparison of forecasting performance under different conditions.", "section": "4 Experiments"}, {"figure_path": "co7DsOwcop/tables/tables_7_1.jpg", "caption": "Table 2: The forecasting results with prediction horizons of 3 and 6 on PEMS and Solar datasets.", "description": "This table presents the forecasting results obtained using various prediction horizons (3 and 6) on two benchmark datasets: PEMS (traffic data) and Solar-Energy (solar power production data).  The table compares the performance of the proposed Sumba model against several baseline forecasting methods across different evaluation metrics: MAE (Mean Absolute Error), RMSE (Root Mean Squared Error), and MAPE (Mean Absolute Percentage Error).  The results are shown for both short-term (F=3) and medium-term (F=6) predictions.", "section": "4 Experiments"}, {"figure_path": "co7DsOwcop/tables/tables_8_1.jpg", "caption": "Table 1: The forecasting results with prediction horizons of 3 and 6 on Electricity, Weather, etc.", "description": "This table presents the forecasting results of the proposed Sumba model and 15 other baseline methods on six benchmark datasets (Electricity, Weather, ETTh2, Traffic, PEMS, and Solar-Energy) for prediction horizons of 3 and 6 time steps. The evaluation metrics used are MAE (Mean Absolute Error), RMSE (Root Mean Square Error), and MAPE (Mean Absolute Percentage Error).  The table allows for a comparison of the performance of Sumba against various existing time series forecasting techniques, highlighting its effectiveness in different datasets and prediction lengths.", "section": "4 Experiments"}, {"figure_path": "co7DsOwcop/tables/tables_15_1.jpg", "caption": "Table 1: The forecasting results with prediction horizons of 3 and 6 on Electricity, Weather, etc.", "description": "This table presents the forecasting results of the proposed Sumba model and 15 benchmark models on six datasets (Electricity, Weather, ETTh2, Traffic, PEMS, and Solar-Energy) using two prediction horizons (F=3 and F=6).  The evaluation metrics used are MAE (Mean Absolute Error), RMSE (Root Mean Squared Error), and MAPE (Mean Absolute Percentage Error).  The table allows for comparison of the performance of Sumba against other state-of-the-art models in multivariate time series forecasting across different datasets and forecasting lengths.", "section": "4 Experiments"}, {"figure_path": "co7DsOwcop/tables/tables_16_1.jpg", "caption": "Table 1: The forecasting results with prediction horizons of 3 and 6 on Electricity, Weather, etc.", "description": "This table presents the forecasting results achieved by Sumba and 15 other benchmark methods across six datasets (Electricity, Weather, ETTh2, Traffic, PEMS, and Solar-Energy) for prediction horizons of 3 and 6 time steps.  The results are evaluated using three metrics: Mean Absolute Error (MAE), Root Mean Square Error (RMSE), and Mean Absolute Percentage Error (MAPE).  The table allows for a comparison of Sumba's performance against various state-of-the-art forecasting methods.", "section": "4 Experiments"}, {"figure_path": "co7DsOwcop/tables/tables_17_1.jpg", "caption": "Table 6: The complexity of different methods.", "description": "This table compares the computational complexity of different time series forecasting methods. The complexity is expressed using Big O notation, with N representing the number of nodes, M the dimension of the matrix basis, D the dimension of the node embedding or hidden representation, r < N, and K << N.  The table shows that methods such as MTGNN, MegaCRN, iTransformer, ESG, and TPGNN have a complexity of O(N2D) due to using inner products of node embeddings. CrossFormer and Card reduce the complexity to O(NrD) by employing router mechanisms and summarized tokens. FourierGNN's complexity is O(NHlog(NH)) because of the construction of hypervariable graphs. Sumba, with its low-rank approximation and common coordinate transformations, achieves a complexity of O(NKD), making it more computationally efficient, especially for large N.", "section": "E Convergence Speed and Computational Complexity"}]