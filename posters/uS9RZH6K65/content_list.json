[{"type": "text", "text": "DENOISER: Rethinking the Robustness for Open-Vocabulary Action Recognition ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Anonymous Author(s)   \nAffiliation   \nAddress   \nemail ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "1 As one of the fundamental video tasks in computer vision, Open-Vocabulary Action   \n2 Recognition (OVAR) has recently gained increasing attention, with the develop  \n3 ment of vision-language pre-trainings. To enable open-vocabulary generalization,   \n4 existing methods formulate vanilla OVAR to evaluate the embedding similarity   \n5 between visual samples and text descriptions. However, one crucial issue is com  \n6 pletely ignored: the text descriptions given by users may be noisy, e.g., misspellings   \n7 and typos, limiting the real-world practicality. To fill the research gap, this paper   \n8 analyzes the noise rate/type in text descriptions by full statistics of manual spelling;   \n9 then reveals the poor robustness of existing methods; and finally rethinks to study   \n10 a practical task: noisy OVAR. One novel DENOISER framework, covering two   \n11 parts: generation and discrimination, is further proposed for solution. Concretely,   \n12 the generative part denoises noisy text descriptions via a decoding process, i.e.,   \n13 proposes text candidates, then utilizes inter-modal and intra-modal information to   \n14 vote for the best. At the discriminative part, we use vanilla OVAR models to assign   \n15 visual samples to text descriptions, injecting more semantics. For optimization, we   \n16 alternately iterate between generative-discriminative parts for progressive refine  \n17 ments. The denoised text descriptions help OVAR models classify visual samples   \n18 more accurately; in return, assigned visual samples help better denoising. We carry   \n19 out extensive experiments to show our superior robustness, and thorough ablations   \n20 to dissect the effectiveness of each component. ", "page_idx": 0}, {"type": "text", "text": "21 1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "22 Action recognition is one of the fundamental tasks in computer vision that involves classifying videos   \n23 into meaningful semantics. Despite huge progress that has been made, existing researches focus more   \n24 on closed-set scenarios, where action classes remain constant during training and inference. Such   \n25 scenarios are an oversimplification of real life, and thus limiting their practical application. Recently,   \n26 another line of research considers one more challenging scenario, namely open-vocabulary action   \n27 recognition (OVAR), and receives increasing attention.   \n28 OVAR allows users to give free texts to describe action classes, and the model needs to match novel   \n29 (unseen) text descriptions to videos with similar semantics. To tackle OVAR task, Vision-Language   \n30 Alignment (VLA) paradigm [41, 14, 57] provides one preliminary but popular idea, i.e., measuring   \n31 the embedding similarity between text descriptions and video embeddings. Following this paradigm,   \n32 recent works focus on minor improvements, e.g., better align vision-language modalities [16, 49, 62].   \n33 Although promising, these works all maintain one unrealistic assumption in real-world scenarios, i.e.,   \n34 the given text descriptions are absolutely clean/accurate. The concrete form is that they evaluate open  \n35 vocabulary performance by re-partitioning closed-set datasets in which text descriptions of classes are   \n36 fully human-checked. But in fact, under real-world OVAR, novel text descriptions provided by users   \n37 are sometimes noisy. Character misspellings (typos, missing, tense error) are inevitable [43, 25] in   \n38 thousands of descriptions, since users often don\u2019t double-check, as well as differences in user habits   \n39 and diversity of scenarios (Fig. 1 Left).   \n40 We are hence motivated to fill the research gap of noisy text descriptions in OVAR. We analyze the   \n41 noise rate/type in real-world corpora [26, 45, 3]. We also make comprehensive simulations of text   \n42 noises, following NLP literature [42, 47]. Fig. 1 Right empirically evaluates noise hazards for existing   \n43 OVAR methods [16, 49, 62]. One can find that just a small amount of noise lowers recognition   \n44 accuracy by a large margin, implying quite poor robustness.   \n45 To spur the community to deal with the noisy OVAR task, being necessary and practical, this paper   \n46 bravely faces the challenges. One vanilla idea is using a separate language model (e.g., GPT [1]) to   \n47 correct noisy class descriptions, and then adapt the off-the-shelf vision-language paradigm [41, 14, 57].   \n48 However, there exist two nettlesome issues. 1) Textual Ambiguity. One text description is usually a few   \n49 compact words, with vague semantics, e.g., for the noisy text \u201cboird\u201d, there could be multiple cleaned   \n50 candidates in terms of spelling, such as \u201cbird\u201d and \u201cboard\u201d. This short text lacks context, making   \n51 phrase correction difficult for uni-modal language models. 2) Cascaded Errors. Text correction and   \n52 action recognition are independently completed, without sharing knowledge. The noisy output of   \n53 text correction is cascaded to the input of action recognition, resulting in continuous propagation of   \n54 errors. To address these issues, we design one multi-modal robust framework: DENOISER.   \n55 Our first insight is to treat denoising of text descriptions as one generative task: given noisy text   \n56 descriptions, decode the clean ones, by considering text-vision information to help denoising. Specif  \n57 ically, it consists of three components: text proposals, inter-modal weighting, and intra-modal   \n58 weighting. We first propose potential text candidates based on spelling similarity to limit the decoding   \n59 space. Then, two types of weighting are combined to decide the best candidate, that is, inter-modal   \n60 weighting uses assigned visual samples to vote; while intra-modal weighting relies solely on text   \n61 information. Our other insight is employing existing OVAR models as off-the-shelf tools to assign   \n62 visual samples at discriminative step. Such tools have been proven to handle clean OVAR tasks well,   \n63 also making our framework easier to adapt to previous models. For full usage of information in   \n64 the same semantics, we then assign detail-rich visual samples to clarify the semantic ambiguity of   \n65 compact text descriptions. To further avoid cascaded errors, we propose a solution of alternating   \n66 iterations, to connect generative and discriminative steps. By progressive refinement, denoised text   \n67 descriptions help OVAR models to match visual samples more accurately; assigned visual samples   \n68 help better denoising. Under multiple iterations, denoising results and OVAR are both better. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "image", "img_path": "uS9RZH6K65/tmp/8c62e7eadcbfffb43245a4c3fa7a91b12800111325dd5efa43eae508c9675550.jpg", "img_caption": ["Figure 1: Left: For open-vocabulary action recognition (OVAR), existing researches neglect an essential aspect: the text descriptions provided by users may be noisy (e.g., misspelling and typos), resulting in potential classification errors and limiting the real-world practicality. Right: Rethinking the robustness for popular OVAR methods [49, 62]. On various datasets, they exhibit high sensitivity to text noises. Besides, as the noise level increases, the performance degrades significantly. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "69 Our main contributions are summarized as follows: ", "page_idx": 1}, {"type": "text", "text": "70 \u2022 We pioneer to explore noisy text descriptions for open-vocabulary action recognition (OVAR): first   \n71 fully analyze the noise rate/type in text descriptions by extensive statistics in real-world corpora; then   \n72 evaluate the robustness for existing methods; finally rethink to study one practical task: noisy OVAR.   \n73 \u2022 We propose a novel DENOISER framework to tackle the noisy OVAR task, by alternately optimizing   \n74 generative-discriminative steps. The generative step leverages knowledge of vision-text alignment to   \n75 denoises noisy text descriptions, in the form of progressive decoding; while the discriminative step   \n76 assigns visual samples to text descriptions for open-vocabulary action recognition.   \n77 \u2022 We carry out extensive experiments to show the superior robustness of DENOISER against noisy   \n78 text descriptions, under various noises and datasets. Great performance improvements are achieved   \n79 over existing competitors. Thorough ablations are studied to show effectiveness of every design. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "80 2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "81 Vision-Language-Audio Pre-training (VLP) aims to jointly optimize multi-modal embeddings with   \n82 large-scale web data, e.g., CLIP [41], ALIGN [14], Florence [57], FILIP [55], VideoCLIP [52], and   \n83 LiT [58]. In architectures, VLP uses independent encoders for vision, text, and audio, followed by   \n84 cross-modal fusion. For optimization, contrastive learning [5, 61] and cross-modal matching [7, 29]   \n85 are mainstream, covering self supervision [32, 34], weak supervision [28, 8] and partial supervi  \n86 sion [19, 33]. VLP benefits various applications: image-text retrieval [6, 18], video understand  \n87 ing [23, 20, 22, 21], action recognition [16, 60], visual grounding [32, 56, 31], AIGC [4, 36].   \n88 Open-Vocabulary Concept Learning aims to understand vision, where conceptual semantics are   \n89 described by free/arbitrary text descriptions. It is characterized by using vision-language pre-trainings   \n90 to match text descriptions and visual samples in semantic space. Its typical evaluation metric is   \n91 the downstream zero-shot performance, i.e., classify unseen classes [49, 62, 17, 38, 54, 48, 37]. To   \n92 achieve the evaluation, most methods re-partition closed-set datasets.[49] Although there is some   \n93 plausibility, such re-partition implicitly makes an unrealistic assumption: text descriptions of unseen   \n94 classes are human-checked, and thus absolutely clean, limiting real-world application. We pioneer   \n95 taking noises from text descriptions (misspellings and typos) into consideration. By adding real-world   \n96 noise for the above methods, we reveal their poor robustness, and design DENOISER for solution.   \n97 Robustness of Language Models is extensively studied by adversarial attack-defense techniques [50,   \n98 59]. When text inputs are facing noises, defense methods correct the outputs, dividing into: detection  \n99 purification [63, 39], as well as adversarial training [53, 9, 35, 30, 51]. The former methods detect   \n00 and correct the corrupted part of a text phrase. The latter trains a model on adversarial samples to   \n01 increase its direct noise-against ability. Overall, all these methods employ solely textual information   \n02 for robustness in pure NLP tasks. We differ from them by considering robustness in the context of   \n03 multi-modal scenarios and by employing multi-modal information to better assist text denoising. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "104 3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "105 We explore noisy text descriptions for open-vocabulary action recognition. In Sec 3.1, we introduce   \n106 noisy open-vocabulary setting; in Sec 3.2, we detail our DENOISER framework, covering generative   \n107 - discriminative sub-parts; in Sec 3.3, we report the accompanying optimization strategy. ", "page_idx": 2}, {"type": "text", "text": "108 3.1 Preliminary & Rethinking ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "109 Open-Vocabulary Action Recognition (OVAR). For a video dataset $\\mathcal{V}=(v_{j}\\in\\mathbb{R}^{T\\times H\\times W\\times3})_{j}^{N}$ ,   \n110 OVAR aims to train one model $\\Phi_{\\mathrm{OVAR}}$ that matches target videos with arbitrary text description $\\mathcal{T}$ . ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{Y}^{\\mathrm{train}}=\\Phi_{\\mathrm{OVAR}}(\\mathcal{V}^{\\mathrm{train}}\\,,\\mathcal{T}^{\\mathrm{train}})\\in\\mathbb{R}^{C_{\\mathrm{base}}},\\quad\\mathcal{Y}^{\\mathrm{test}}=\\Phi_{\\mathrm{OVAR}}(\\mathcal{V}^{\\mathrm{test}}\\,,\\mathcal{T}^{\\mathrm{test}})\\in\\mathbb{R}^{C_{\\mathrm{nowl}}},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "111 where $\\boldsymbol{\\wp}$ refers to the matching label between $\\mathcal{V}$ and $\\tau$ . During training, (video, text, matching label)   \n112 triplets from the base semantic-classes are provided; while during testing, the model is evaluated   \n113 on the novel semantic-classes. Note that, the semantic-classes between training $(C_{\\mathrm{base}})$ and testing   \n114 $\\mathrm{\\Delta}(C_{\\mathrm{novel}})$ are disjoint, i.e., $C_{\\mathrm{base}}\\cap C_{\\mathrm{novel}}=\\emptyset$ .   \n115 Vision-Language Alignment (VLA). To enable open-vocabulary capability, recent OVAR stud  \n116 ies [16, 49, 62, 40] embrace vision-language pre-trainings (VLPs), for their notable ability in cross  \n117 modal alignment. Specifically, OVAR could be achieved by measuring the embedding similarity   \n118 between text descriptions $\\tau$ and video samples $\\nu$ , which is formally formulated as: ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{Y}=\\sigma(\\mathcal{F}_{v}*\\mathcal{F}_{t}),\\quad\\mathcal{F}_{v}=\\Phi_{\\mathrm{pool}}(\\Phi_{\\mathrm{vis}}(\\mathcal{V}))\\in\\mathbb{R}^{N\\times D},\\quad\\mathcal{F}_{t}=\\Phi_{\\mathrm{txt}}(\\mathcal{T})\\in\\mathbb{R}^{C\\times D}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "119 where $\\sigma$ refers to the softmax activation, $\\Phi_{\\mathrm{pool}}$ is the spatio-temporal pooling, $\\Phi_{\\mathrm{vis}}$ and $\\Phi_{\\mathrm{txt}}$ are   \n120 visual and textual encoders of VLPs, $D$ is the embedding dimension.   \n121 Noisy Text Descriptions in OVAR. Although great progress has been made, the VLA paradigm   \n122 suffers from an unrealistic assumption, i.e., that text descriptions are absolutely clean/accurate,   \n123 limiting the practicality in reality. Actually, the diversity of users and scenarios can easily cause   \n124 text descriptions given to be somewhat noisy, especially for unseen semantic-classes, due to their   \n125 enormous degree of freedom. Formally, for one text description with $n$ words, the clean/noisy   \n126 versions $T/\\bar{T^{\\prime}}$ are: ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "image", "img_path": "uS9RZH6K65/tmp/9f9bc050f44ec9b52fdbadd22c9bbc93bb0f6d278a597406748d3d72540aec05.jpg", "img_caption": ["Figure 2: Framework Overview. DENOISER is composed of one generative part $\\Psi_{\\mathrm{gene}}$ and one discriminative part $\\Psi_{\\mathrm{disc}}$ . $\\Psi_{\\mathrm{gene}}$ views denoising text descriptions as a decoding process $\\tau_{i-1}\\to\\tau_{i}$ . We first propose text candidates $\\Phi_{\\mathrm{prop}}$ for ${\\mathcal T}_{i-1}$ based on spelling similarity; then choose the best candidate by inter-modal weighting $\\Phi_{\\mathrm{inter}}$ and intra-modal weighting $\\Phi_{\\mathrm{intra}}$ . $\\Phi_{\\mathrm{inter}}$ uses vision-text information, while $\\Phi_{\\mathrm{intra}}$ relies solely on texts. $\\Psi_{\\mathrm{disc}}$ assigns text semantics to visual samples, then only visual samples with the same semantics can vote for text candidates. We optimize alternatively between generative and discriminative steps to tackle noisy OVAR. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{T}^{\\prime}=(t_{1}^{\\prime},\\cdot\\cdot\\cdot,t_{n}^{\\prime})=\\Psi_{\\mathrm{noise}}(\\mathcal{T};p),\\quad\\mathcal{T}=(t_{1},\\cdot\\cdot\\cdot,t_{n}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "127 where $t_{i}$ is the $i$ -th word of $\\tau.\\Psi_{\\mathrm{noise}}$ refers to noise contamination in reality, e.g., inserting, substitut  \n128 ing and deleting characters with probability $p$ , following [42, 47]. Since these three atomic operations   \n129 defined in Levenshtein edit distance $\\mathcal{D}$ are of distance 1, noise rate $p$ can also be deduced by: ", "page_idx": 3}, {"type": "equation", "text": "$$\np=\\frac{\\mathcal{D}(\\mathcal{T},\\mathcal{T}^{\\prime})}{\\operatorname*{max}(\\operatorname{length}\\mathrm{~of~}\\mathcal{T},\\mathrm{length}\\mathrm{~of~}\\mathcal{T}^{\\prime})}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "130 As a result, the noisy OVAR task can be formulated as: given $\\mathcal{V}$ and $\\mathcal{T}^{\\prime}$ , the model is expected to   \n131 maximize the accuracy of action recognition, and even recovering $\\mathcal{T}^{\\prime}$ to $\\tau$ .   \n132 Robustness of Existing Methods. Fig. 1 evaluates for typical OVAR studies [49, 62], across three   \n133 public datasets. In terms of Top-1 classification accuracy, existing methods are rather sensitive to   \n134 noise and show one trend: the larger the noise, the more significant the performance degradation   \n135 (please see quantitative experiments in Tab. 2). Such poor robustness to the noisy OVAR task, proves   \n136 excessive idealization of existing studies and also motivates us to fill the research gap. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "137 3.2 DENOISER: One Robust OVAR Framework ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "138 Motivation. Given the complexity of noisy OVAR, we here divide it into two sub-steps: denoising of   \n139 text descriptions, and then vanilla OVAR. The former is viewed as one generative decoding form, by   \n140 considering both vision-text information for progressive denoising. While the latter is in one natural   \n141 discriminative form, by assigning text descriptions to video samples. For the joint optimization of   \n142 these two sub-steps, we iterate alternately between generative and discriminative forms. As a result,   \n143 our DENOISER framework progressively tackles the noisy OVAR task.   \n144 Framework. As shown in Fig. 2, our DENOISER framework covers two components: generative   \n145 sub-step $\\Psi_{\\mathrm{gene}}$ and discriminative sub-step $\\Psi_{\\mathrm{disc}}$ . For $\\Psi_{\\mathrm{gene}}$ , we iteratively refine text descriptions   \n146 by one decoding process, that is, $({\\mathcal{T}}_{0},{\\mathcal{T}}_{1},\\cdot\\cdot\\cdot,{\\mathcal{T}}_{n})$ , where $n$ is the index of decoding steps. Upon   \n147 finishing step $i$ , we will have $\\mathcal{T}_{i}=(\\overline{{t_{1}}},\\cdot\\cdot\\cdot\\ ,\\overline{{t_{i}}},t_{i+1}^{\\prime},\\cdot\\cdot\\cdot\\ ,t_{n}^{\\prime})$ , where $\\bar{t}$ refers to the decoded version   \n148 of $t$ , meaning that the $i$ -th word of text descriptions is decoded at step $i$ . We start with $\\mathcal{T}_{0}=\\mathcal{T}^{\\prime}$ , and   \n149 finish at ${\\mathcal{T}}_{n}$ to ensure that all words are denoised. While for $\\Psi_{\\mathrm{disc}}$ , we find it identical to vanilla OVAR   \n150 task and thus leveraging the VLA pipeline [16, 49] for help, which is off-the-shelf and well-studied.   \n\\ Formally, our DENOISER framework tackles noisy OVAR as follows: ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{T}_{i}=\\Psi_{\\mathrm{gene}}(\\mathcal{T}_{i-1},\\mathcal{Y}_{i-1},\\mathcal{V}),\\quad\\mathcal{V}_{i-1}=\\Psi_{\\mathrm{disc}}(\\mathcal{T}_{i-1},\\mathcal{V})=\\Phi_{\\mathrm{OVAR}}(\\mathcal{T}_{i-1},\\mathcal{V}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "152 At the discriminative step, we calculate the matching label ${\\boldsymbol{y}}_{i-1}$ to make coarse semantic classification   \n153 of visual samples, i.e., assign ${\\cal T}_{i-1}$ to $\\nu$ . At the generative step, we first propose $K$ text candidates   \n154 $\\Phi_{\\mathrm{prop}}(\\mathcal{T}_{i-1})$ for $\\mathcal{T}_{i}$ base on ${\\tau_{i-1}}$ to limit the decoding space. Then, to vote for the best candidate, we   \n155 design two novel modules, namely inter-modal weighting $\\Phi_{\\mathrm{{inter}}}$ and intra-modal weighting $\\Phi_{\\mathrm{intra}}$ .   \n156 Here, $\\Phi_{\\mathrm{inter}}$ uses vision information $\\mathcal{V}$ , while $\\Phi_{\\mathrm{intra}}$ relies on text information ${\\mathcal T}_{i-1}$ .   \n157 We alternate between the generative and discriminative steps to optimize the decoding result step by   \n158 step. Please find in Algorithm 1 for comprehensive details. ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "159 3.3 Optimization for the DENOISER Framework ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "160 Discriminative Step consists in calculating cross-modal matching labels $\\boldsymbol{\\wp}$ using $\\Psi_{\\mathrm{disc}}$ . Intuitively,   \n161 visual samples $\\nu_{c}$ whose labels $\\boldsymbol{\\wp}$ are assigned to semantic-class $c$ , i.e. argmax $y=c$ , are those who   \n162 could help decode $\\tau_{c,i}$ most efficiently. On the contrary, visual samples from other semantic-classes   \n163 may have few connections with the current class and thus provide no meaningful aid. Here, we find   \n164 this process is identical to vanilla OVAR, and hence employs $\\Phi_{\\mathrm{OVAR}}$ as $\\Psi_{\\mathrm{disc}}$ . We theoretically   \n165 prove in the Appendix that, $\\nu_{c}$ is the best set of visual samples to choose from. With $\\nu_{c}$ defined and   \n\\ argmax $y=c$ , $\\Psi_{\\mathrm{gene}}$ decodes text descriptions $\\tau_{c,i}$ for each semantic-class $c$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\Psi_{\\mathrm{gene}}(\\mathcal{T}_{c,i-1},\\mathcal{Y},\\mathcal{V})=\\Psi_{\\mathrm{gene}}(\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})=\\underset{\\mathcal{T}_{c,i}}{\\mathrm{argmax}}\\,p(\\mathcal{T}_{c,i}|\\mathcal{T}_{c,i-1},\\mathcal{V}_{c}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "167 Recall $t_{c,i}$ is the $i$ -th word to be decoded, and $\\tau_{c,i-1}$ is from last decoding, with the first $i-1$   \n168 words decoded. As we decode word-by-word, choosing the best $\\tau_{c,i}$ is exactly choosing the best $t_{c,i}$ ,   \n169 i.e. $\\begin{array}{r}{\\operatorname*{argmax}_{\\mathcal{T}_{c,i}}p(\\mathcal{T}_{c,i}|\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})=\\operatorname*{argmax}_{t_{c,i}}p(t_{c,i}|\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})}\\end{array}$ , as we do in generative step. ", "page_idx": 4}, {"type": "text", "text": "170 Generative Step here consists in, for each semantic-class $c$ , choosing the best $t_{c,i}$ that maximizes 171 $p(t_{c,i}|T_{c,i-1},\\mathcal{V}_{c})$ . With $p(\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})$ and $p(\\upnu_{c})$ same for all possible $t_{c,i}$ , we make detailed derivap tions in the Appendix to show that: ", "page_idx": 4}, {"type": "equation", "text": "$$\np(t_{c,i}|\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})\\propto p(t_{c,i},\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})\\propto\\prod_{v_{j}\\in\\mathcal{V}_{c}}p(t_{c,i}|v_{j})p(\\mathcal{T}_{c,i-1}|t_{c,i},v_{j}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "173 Here, the error model $p({\\mathcal T}_{c,i-1}|t_{c,i},v_{j})$ evaluates how $t_{c,i}$ may be misspelled as $t_{c,i}^{\\prime}$ , since the $i$ -th   \n174 word in $\\tau_{c,i-1}$ is still noisy and not decoded. Knowing that errors in text descriptions are independent   \n175 of visual samples, it reduces to uni-modal $p({\\mathcal T}_{c,i-1}|\\bar{t}_{c,i})$ . As the error that one may make given the   \n176 correct text is harder to model while the reverse is much easier, we let $p(T_{c,i-1}|t_{c,i})\\propto p(t_{c,i}|T_{c,i-1})$   \np Please refer to detailed derivations in the Appendix. As a result, our final objective is: ", "page_idx": 4}, {"type": "equation", "text": "$$\np(t_{c,i}|\\mathcal{T}_{c,i-1})\\prod_{v_{j}\\in\\mathcal{V}_{c}}p(t_{c,i}|v_{j})=\\Phi_{\\mathrm{intra}}\\prod_{v_{j}\\in\\mathcal{V}_{c}}\\Phi_{\\mathrm{inter}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "178 Text Proposals consists in proposing $K$ candidates $\\{t_{i}^{k}\\}_{k}$ for $t_{i}$ with the lowest Levenshtein Edit   \n179 Distance $\\mathcal{D}(\\cdot,t_{i}^{\\prime})$ (a metric of spelling similarity). By replacing original noisy word $t_{i}^{\\prime}$ in $\\smash{T_{i-1}^{k}}$ with   \n180 $\\{t_{i}^{k}\\}_{k}$ , they form $\\Phi_{\\mathrm{prop}}(\\mathcal{T}_{i-1})\\,=\\,\\mathcal{T}_{i}^{k}\\,=\\,\\big(\\overline{{t_{1}}},\\cdot\\cdot\\cdot\\cdot,\\overline{{t_{i-1}}},t_{i}^{k},t_{i+1}^{\\prime},\\cdot\\cdot\\cdot\\cdot,t_{n}^{\\prime}\\big)$ , the $K$ candidates for $\\mathcal{T}_{i}$ .   \n181 The benefti of text proposals is to reduce computing complexity. Since text embeddings are quantized   \n182 in the semantic space, the search is limited to proposed candidates, rather than in the entire space.   \n183 Inter-modal Weighting $\\Phi_{\\mathrm{inter}}=p(t_{c,i}|v_{j}),\\ v_{j}\\in\\mathcal{V}_{c}$ relies on vision samples from semantic-class $c$   \n184 to determine the best $\\overline{{t_{c,i}}}$ for the next iteration. Concretely, we model the probability of being chosen ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "Require: noisy text descriptions $\\mathcal{T}^{\\prime}$ , visual samples $\\nu$ , iteration number $n$ , temperature $\\lambda$ , candidate number $K$ , edit distance $\\mathcal{D}$ , open-vocabulary model $\\Phi$ OVAR $\\mathcal{T}_{0}\\gets\\mathcal{T}^{\\prime}$ for $i=1,2,\\cdots,n$ do for $c=1,2,\\cdots,C$ do \\raglergh iittnText Proposals $t_{c,i}^{\\prime}$ is the $i$ -th word of $\\tau_{c,i-1}$ , which is noisy and not yet decoded Select from corpus, $K$ candidates $\\{t_{c,i}^{k}\\}_{k}$ with the smallest $\\mathcal{D}$ with $t_{c,i}^{\\prime}$ Replace $t_{c,i}^{\\prime}$ with $\\{t_{c,i}^{k}\\}_{k}$ , forming $\\{\\mathcal{T}_{c,i}^{k}\\}_{k}$ end for for $\\begin{array}{r l}&{j=1,2,\\cdots\\,,|\\mathcal{V}|\\,\\mathbf{d}\\mathbf{o}}\\\\ &{c\\leftarrow\\underset{c}{\\mathrm{argmax}}\\,\\underset{k}{\\mathrm{max}}\\,\\frac{\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k}))}{\\sum_{k^{\\prime}}\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k^{\\prime}}))}}\\end{array}$ $\\triangleright$ iittnDiscriminative Step Assign $v_{j}$ to class $c$ , $v_{j}\\in\\mathcal{V}_{c}$ end for for $\\begin{array}{r l}&{c=1,2,\\cdots\\,,C\\;\\mathbf{do}}\\\\ &{\\Phi_{\\mathrm{intra}}^{k}\\gets\\frac{\\exp(-\\mathcal{D}(t_{c,i}^{k},t_{c,i}^{\\prime})/\\lambda)}{\\sum_{k^{\\prime}}\\exp(-\\mathcal{D}(t_{c,i}^{k^{\\prime}},t_{c,i}^{\\prime})/\\lambda)}}\\\\ &{\\Phi_{\\mathrm{inter}}^{k}\\gets\\prod_{v_{j}\\in\\mathcal{V}_{c}}\\frac{\\exp(S(v_{j},T_{c,i}^{k}))}{\\sum_{k^{\\prime}}\\exp(S(v_{j},T_{c,i}^{k^{\\prime}}))}}\\\\ &{T_{c,i}\\gets\\mathcal{T}_{c,i}^{k},k=\\arg\\operatorname*{max}_{k}\\Phi_{\\mathrm{intra}}^{k}\\times\\Phi_{\\mathrm{inter}}^{k}}\\end{array}$ \\raglergh iittnIntra-Modal Weighting \\raglergh iittnGenerative Step \\raglergh iittnInter-Modal Weighting end for end for ", "page_idx": 5}, {"type": "text", "text": "\\ for each proposed candidate to be: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbb{P}(t_{c,i}=t_{c,i}^{k}|v_{j})=\\mathbb{P}(\\mathcal{T}_{c,i}=\\mathcal{T}_{c,i}^{k}|v_{j})=\\frac{\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k}))}{\\sum_{k^{\\prime}}\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k^{\\prime}}))},\\;v_{j}\\in\\mathcal{V}_{c}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "186 where $S(\\cdot,\\cdot)$ is the cosine similarity between video-text embeddings, both encoded by $\\Phi_{\\mathrm{OVAR}}$ . The   \n187 intuition is that the more unanimously visual samples agree on candidate $\\tau_{c,i}^{k}$ , the more likely it is the   \n188 text descriptions corresponding to semantic-class $c$ . Besides, by letting visual samples vote on ${\\mathcal{T}}_{c,i}^{k}$   \n189 instead of tck,i , we take into consideration not only the current word $t_{c,i}$ but also context implicitly. ", "page_idx": 5}, {"type": "text", "text": "190 Intra-modal Weighting $\\Phi_{\\mathrm{intra}}=p(t_{c,i}|T_{c,i-1})$ relies solely on text information to decide the best $t_{c,i}$ 191 for next iteration. Although $\\Phi_{\\mathrm{intra}}$ may be solved by uni-modal spell-checkers [15] or large language 192 models [1], we here design a simple model by considering only spelling similarity (ignore contexts), \\ to save computing costs. That is, choose $t_{c,i}$ depending solely on $t_{c,i}^{\\prime}$ instead of on entire $\\tau_{c,i-1}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathbb{P}(t_{c,i}=t_{c,i}^{k}|\\mathcal{T}_{c,i-1})=\\mathbb{P}(t_{c,i}=t_{c,i}^{k}|t_{c,i}^{\\prime})=\\frac{\\exp(-\\mathcal{D}(t_{c,i}^{k},t_{c,i}^{\\prime})/\\lambda)}{\\sum_{k^{\\prime}}\\exp(-\\mathcal{D}(t_{c,i}^{k^{\\prime}},t_{c,i}^{\\prime})/\\lambda)}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "194 The intuition is that, the more similar a word candidate $t_{c,i}^{k}$ is, compared to the noisy word $t_{c,i}^{\\prime}$ , the   \n195 more likely it is the corresponding denoised word. Here, we introduce one temperature parameter $\\lambda$ to   \n196 balance $\\Phi_{\\mathrm{intra}}$ and $\\Phi_{\\mathrm{inter}}$ . A larger $\\lambda$ indicates that different edit distance gives similar probabilities,   \n197 meaning that we rely more on visual samples for decision, and vice versa. ", "page_idx": 5}, {"type": "text", "text": "198 4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "199 Typical Models for Vanilla OVAR. To illustrate the generalizability of our framework, we leverage   \n200 two typical models from the VLA pipeline as $\\Phi_{\\mathrm{OVAR}}$ , that is, ActionCLIP [49] and XCLIP [62].   \n201 These two models adopt hand-crafted prompts and visual-conditioned prompt tuning, respectively.   \n202 Under both models, we choose ViT-B/16-32F as the network backbones, for simplicity.   \n203 Datasets. HMDB51 [26] contains 7k videos covering 51 action categories. UCF101 [45] contains   \n204 $13\\mathbf{k}$ videos spanning 101 action categories. Kinetics700 [3] (K700) is simply an extension of K400,   \n205 with around $650\\mathrm{k}$ video clips sourced from YouTube. To partition these datasets for open-vocabulary   \n206 action recognition, this paper follows the standard consensus [49, 62], for the sake of fairness.   \n207 Metric. We use three metrics for full evaluations from multiple perspectives. Top-1 Acc refers to   \n208 the top-1 classification accuracy of noisy open-vocabulary action recognition. Label Acc counts the   \n209 percentage of denoised text descriptions that match exactly with ground truth. Semantic Similarity   \n210 calculates the cosine similarity of embeddings, between denoised and clean text descriptions. Label   \n211 Acc and Semantic Similarity measure how well noisy text descriptions are recovered.   \n212 Implementations. We set the proposal number $K=10$ . Intra-modal weighting and inter-modal   \n213 weighting are both used to determine the best candidate. Temperature $\\lambda$ follows a linear schedule   \n214 from 0.01 to 1. We use the same corpus as in PySpellChecker, which contains 70317 English words,   \n215 for text proposals. For typical OVAR methods [49, 62], we choose the ViT-B/16-32F checkpoint   \n216 pretrained on K400 [24] to evaluate their zero-shot robustness on HMDB51 [27], UCF101 [46] and   \n217 K700 [44]. Since K700 and K400 have overlapped categories, we exclude them when evaluating on   \n218 K700. For UCF101, we use the separated lowercase text label. All ablation studies are conducted on   \n219 UCF101 under $20\\%$ noise. For statistical significance, We do each simulation 10 times and report the   \n220 mean and confidence interval of $95\\%$ . All experiments are done using a single RTX 3090. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "image", "img_path": "uS9RZH6K65/tmp/0450d5c6598a0466a8bfcd15e9d1cd6057e58b92b67f1e9851b68bd6d7926ab0.jpg", "img_caption": ["Figure 3: Statistics for Noises in Reality. Text noises may be classified into 4 types: inserting, substituting, swapping, and deleting characters.[2] In terms of edit distance, based on TOEFL-Spell dataset[10], most of the text noises have an edit distance $=1$ compared to the clean version. Nevertheless, the distribution tends to be positively skewed towards larger noise. "], "img_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "uS9RZH6K65/tmp/d2ef1f3acf048747336ac59ddf1b42bc565fa093d273e2aca0ec7257129d4efe.jpg", "table_caption": ["Table 1: Comparisons between Various Competitors. Using ActionCLIP [49] as $\\Phi_{\\mathrm{OVAR}}$ while evaluating on UCF101, we compare with statistical text spell-checkers (PySpellChecker [15]), neural based ones (Bert from NeuSpell) [13], and GPT 3.5 [1]. Our method remarkably outperforms others in terms of Top-1 classification accuracy, and semantic similarity of recovered text descriptions. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "221 4.1 Statistics on Noise Type/Rate for Text Descriptions ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "222 Real Noise. We adopt two large-scale corpora [11, 10] of misspellings to analyze noise type in text   \n223 descriptions. As shown in Fig. 3, the conclusion is similar to the NLP community [42, 47], i.e., three   \n224 atomic types of noise are inserting, substituting, and deleting text characters. More complicated noise   \n225 patterns, e.g. swaping, can be constructed by mixing atomic noise types. Then, following previous   \n226 literature, we quantify noise rate through Levenshtein Edit Distance, a generally accepted metric,   \n227 to calculate the occurrence number of atomic noise types. Specifically, GitHub Typo Corpus [11]   \n228 contains over $350\\mathbf{k}$ edits of typos from GitHub. The average noise rate (per sentence) is $3.3\\%$ .   \n229 Nevertheless, the distribution is highly positively skewed (skewness $=2.9$ ). For the worst $5\\%$ cases,   \n230 the noise rate (per sentence) is larger than $9.4\\%$ . TOEFL-Spell Corpus [10] samples essays written   \n231 by candidates from various language backgrounds in TOEFL $\\textsuperscript{\\textregistered}$ iBT test. There are, on average, 6.9   \n232 spelling mistakes per essay. For misspelled words, the noise rate (per word) is on average $16.0\\%$ .   \n233 Noise Scenarios. In the \"Simulated\" noise type, we mix three atomic noises: insertion, substitution,   \n234 and deletion. Concretely, for each character, we perturb it with probability $p$ . For each perturbation,   \n235 it will be insertion, substitution, and deletion with equal probability. To further ensure real-world   \n236 generalizability, we ask GPT3.5 to give examples of perturbation according to real-world scenarios.   \n237 We mix them into simulated noises. Noise rate $p$ of the \"Real\" noise type is estimated with Eq. (3). ", "page_idx": 6}, {"type": "table", "img_path": "uS9RZH6K65/tmp/3b65fec2a1a396f6a9899537688682d5bb3e60d2ff89428c31133beb8c0dc92b.jpg", "table_caption": ["Table 2: Comparison Across Datasets and Models. On three standard datasets, facing multiple noise types (real or simulated), and under various noise rates, our DENOISER consistently improves the performance for noisy OVAR, regardless of underlying OVAR methods $\\Phi_{\\mathrm{OVAR}}$ . "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "238 4.2 Comparison with State-of-the-art Methods ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "239 Comparison to Competitors. Tab. 1 compares from three axes: Top-1 Acc of $\\Phi_{\\mathrm{OVAR}}$ after correction,   \n240 Label Acc and Semantic Similarity. PySpellChecker is a uni-modal statistical model that corrects   \n241 each word by edit distance and appearance frequency. Bert (NeuSpell) [13] employs a uni-modal   \n242 Bert-based model to translate noisy text descriptions into clean ones. We also ask GPT 3.5 to denoise   \n243 text descriptions using the prompt \u201cThe following words may contain spelling errors by deleting,   \n244 inserting, and substituting letters. You are a corrector of spelling errors. Give only the answer   \n245 without explication. What is the correct spelling of the action of <noisy text description>?\u201d. Our   \n246 method outperforms all competitors by large margins, which is impressive because our method is   \n247 unsupervised without prior knowledge other than those contained in the OVAR model. Note that the   \n248 output of GPT 3.5 tends to be unstable depending on prompts, which requires manual cleaning to   \n249 remove irrelevant parts contained in the output, thus impeding real-world usage.   \n250 Comparisons Across Datasets/Models. Tab. 2 compares Top-1 Acc to further reveal our solution is   \n251 scalable/generalizable. Under various noise rates, our model is robust to achieve huge improvements.   \n252 In terms of scalability across models, our method is not only applicable to hand-crafted prompts as in   \n253 ActionCLIP but also to learnable visual-conditioned prompts as in XCLIP. Furthermore, we notice   \n254 that, whenever XCLIP outperforms ActionCLIP, our method also yields a better result. A better   \n255 visual encoder and well-tuned prompt may significantly increase our performance, showing that our   \n256 method\u2019s upper limit could become higher, as the community continues to train better OVAR models. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "257 4.3 Ablation Study ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "258 Inter-modal Weighting $\\Phi_{\\mathrm{inter}}$ $\\pmb{\\&}$ Intra-modal Weighting $\\Phi_{\\mathrm{intra}}$ . Tab. 3 shows that, both $\\Phi_{\\mathrm{inter}}$   \n259 and $\\Phi_{\\mathrm{intra}}$ contribute to denoising text descriptions and to improving the robustness of underlying   \n260 $\\Phi_{\\mathrm{OVAR}}$ . In terms of Top-1 Acc and Semantic Similarity, $\\Phi_{\\mathrm{inter}}$ performs better than $\\Phi_{\\mathrm{intra}}$ , since   \n261 $\\Phi_{\\mathrm{inter}}$ uses visual information as one direct optimization guideline to improve video recognition.   \n262 While $\\Phi_{\\mathrm{intra}}$ performs better in terms of Label Acc, which focuses more on spelling correctness.   \n263 Besides, $\\Phi_{\\mathrm{{inter}}}$ and $\\Phi_{\\mathrm{intra}}$ turn out to be complementary: visual information helps to understand   \n264 noisy text descriptions; while textual information prevents the model from being misled by visual   \n265 samples. We achieve the best performance when combining these two weightings.   \n266 Temperature Schedule $\\lambda$ balances intra-modal weighting and inter-modal weighting. One larger $\\lambda$   \n267 indicates more reliance on inter-modal weighting. \u201cLinear\u201d means that $\\lambda$ augments from 0.01 to 1   \n268 linearly. Tab. 3 reports that it is beneficial to rely more on intra-modal at the beginning of decoding,   \n269 and then gradually turn to inter-modal for more help. This indicates that, when text noises are high,   \n270 $\\Phi_{\\mathrm{intra}}$ offers more help; when text noises are slight, $\\Phi_{\\mathrm{inter}}$ could help more.   \n271 Noise Type. Fig. 4 Left reports our robustness under various noise types/rates. \u201cMixed\u201d means that   \n272 three noise types: \u201cSubstitute\u201d, \u201cInsert\u201d, \u201cDelete\u201d are equally possible to appear. Our method shows   \n273 remarkable resilience when texts are perturbed by inserting or substituting characters. Performance   \n274 degradation is observed when texts are perturbed by deleting characters. It is reasonable, as deleting   \n275 characters causes huge information loss, making the model difficult to recover clean text descriptions.   \n276 Number of Candidates $K$ . Fig. 4 Right shows as $K$ increases, inter-modal weighting can reveal   \n277 its full power, hence improving performance. Otherwise, if a good candidate is excluded from the   \n278 proposal stage due to a small $K$ , it can be selected by neither of the inter- or intra-modal weighting,   \n279 thus decreasing performance. Moreover, the performance tends towards one plateau, showing a   \n280 decreasing marginal contribution of more proposals to performance. Since a larger $K$ means more   \n281 computing costs for text encoding, we select $K=10$ by default to make reasonable trade-offs. ", "page_idx": 7}, {"type": "table", "img_path": "uS9RZH6K65/tmp/c046c716ce6da9f7f6470e08765a9db8e2774a5a1b192f169660399e2009ffa5.jpg", "table_caption": ["Table 3: Ablations for Inter-modal Weighting $\\Phi_{\\mathrm{{Inter}}}$ , Intra-modal Weighting $\\Phi_{\\mathrm{{Inter}}}$ , Schedule of Temperature $\\lambda$ . $\\Phi_{\\mathrm{{Inter}}}$ alone outperforms $\\Phi_{\\mathrm{{Intra}}}$ . Both contribute to correcting class texts, and give the best results when combined. Linear schedule of balancing factor $\\lambda$ outperforms the constant one, meaning that it helps to rely more on $\\Phi_{\\mathrm{Intra}}$ at first, and then gradually switch to $\\Phi_{\\mathrm{{Inter}}}$ . "], "table_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "", "img_caption": ["Figure 4: We evaluate on UCF101 by using ActionCLIP as $\\Phi_{\\mathrm{OVAR}}$ . Left: Ablation Study on Noise Type. \u201cMixed\u201d means that all types of text noises: \u201cSubstitute\u201d, \u201cInsert\u201d, \u201cDelete\u201d take place with equal probability. Our DENOISER shows good resilience, especially against noises of inserting or substituting. Right: Ablation Study on Proposal Number $K$ . As $K$ increases, Top-1 Acc increases and converges gradually towards the upper bound, but it also brings heavier computing costs. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "282 5 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "283 This paper investigates how noises in class-text descriptions negatively interference OVAR; and   \n284 one novel framework DENOISER is proposed for solutions. By incorporating visual information   \n285 during denoising, we clarify the ambiguity induced by short and context-lacking text descriptions; by   \n286 iteratively refining the denoised output through one generative-discriminative process, we mitigate   \n287 cascaded errors which may propagate from spell-checking models to outputs of OVAR model. We   \n288 conduct extensive experiments to demonstrate the generalizability of DENOISER across multiple   \n289 models and datasets, and also show our superiority over uni-modal spell-checking solutions.   \n290 Limitations. 1) We focus more on spelling noises; while in the real world, text noises can be more   \n291 complex, involving semantic ambiguity. Equipping DENOISER with large language models may   \n292 be a feasible solution. 2) Using more text candidates or visual samples brings better results for   \n293 DENOISER, but also costs more. There is a trade-off between performance and computational cost. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "294 References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "295 [1] Gpt-3.5 turbo, https://platform.openai.com/docs/models/gpt-3-5-turbo/   \n296 [2] Al-Oudat, A.: Spelling errors in english writing committed by english-major students at bau.   \n297 Journal of Literature, Languages and Linguistics 32(2) (2017)   \n298 [3] Carreira, J., Noland, E., Hillier, C., Zisserman, A.: A short note on the kinetics-700 human   \n299 action dataset. arXiv preprint arXiv:1907.06987 (2019)   \n300 [4] Chen, M., Chen, X., Zhai, Z., Ju, C., Hong, X., Lan, J., Xiao, S.: Wear-any-way: Manipulable   \n301 virtual try-on via sparse correspondence alignment. arXiv preprint arXiv:2403.12965 (2024)   \n302 [5] Chen, X., Chen, S., Yao, J., Zheng, H., Zhang, Y., Tsang, I.W.: Learning on attribute-missing   \n303 graphs. IEEE transactions on pattern analysis and machine intelligence (2020)   \n304 [6] Chen, X., Cheng, Z., Yao, J., Ju, C., Huang, W., Lan, J., Zeng, X., Xiao, S.: Enhancing   \n305 cross-domain click-through rate prediction via explicit feature augmentation. arXiv preprint   \n306 arXiv:2312.00078 (2023)   \n307 [7] Cheng, F., Wang, X., Lei, J., Crandall, D., Bansal, M., Bertasius, G.: Vindlu: A recipe for   \n308 effective video-and-language pretraining. In: Proceedings of the IEEE Conference on Computer   \n309 Vision and Pattern Recognition (2023)   \n310 [8] Cheng, Z., Xiao, S., Zhai, Z., Zeng, X., Huang, W.: Mixer: Image to multi-modal retrieval   \n311 learning for industrial application. arXiv preprint arXiv:2305.03972 (2023)   \n312 [9] Dinan, E., Humeau, S., Chintagunta, B., Weston, J.: Build it break it fix it for dialogue safety:   \n313 Robustness from adversarial human attack. arXiv preprint arXiv:1908.06083 (2019)   \n314 [10] Flor, M., Fried, M., Rozovskaya, A.: A benchmark corpus of english misspellings and a   \n315 minimally-supervised model for spelling correction. In: Proceedings of the Fourteenth Workshop   \n316 on Innovative Use of NLP for Building Educational Applications. pp. 76\u201386 (2019)   \n317 [11] Hagiwara, M., Mita, M.: Github typo corpus: A large-scale multilingual dataset of misspellings   \n318 and grammatical errors. arXiv preprint arXiv:1911.12893 (2019)   \n319 [12] Hu, X., Zhang, K., Xia, L., Chen, A., Luo, J., Sun, Y., Wang, K., Qiao, N., Zeng, X., Sun,   \n320 M., et al.: Reclip: Refine contrastive language image pre-training with source free domain   \n321 adaptation. In: Proceedings of the IEEE/CVF Winter Conference on Applications of Computer   \n322 Vision. pp. 2994\u20133003 (2024)   \n323 [13] Jayanthi, S.M., Pruthi, D., Neubig, G.: Neuspell: A neural spelling correction toolkit. arXiv   \n324 preprint arXiv:2010.11085 (2020)   \n325 [14] Jia, C., Yang, Y., Xia, Y., Chen, Y.T., Parekh, Z., Pham, H., Le, Q.V., Sung, Y., Li, Z., Duerig,   \n326 T.: Scaling up visual and vision-language representation learning with noisy text supervision.   \n327 In: Proceedings of the International Conference on Machine Learning (2021)   \n328 [15] Jiang, Y.G., Liu, J., Zamir, A.R., Toderici, G., Laptev, I., Shah, M., Sukthankar, R.:   \n329 pyspellchecker: Action recognition with a large number of classes, https://github.com/   \n330 barrust/pyspellchecker/   \n331 [16] Ju, C., Han, T., Zheng, K., Zhang, Y., Xie, W.: Prompting visual-language models for efficient   \n332 video understanding. In: Proceedings of the European Conference on Computer Vision. Springer   \n333 (2022)   \n334 [17] Ju, C., Li, Z., Zhao, P., Zhang, Y., Zhang, X., Tian, Q., Wang, Y., Xie, W.: Multi-modal   \n335 prompting for low-shot temporal action localization. arXiv preprint arXiv:2303.11732 (2023)   \n336 [18] Ju, C., Wang, H., Li, Z., Chen, X., Zhai, Z., Huang, W., Xiao, S.: Turbo: Informativity-driven   \n337 acceleration plug-in for vision-language models. arXiv preprint arXiv:2312.07408 (2023)   \n338 [19] Ju, C., Wang, H., Liu, J., Ma, C., Zhang, Y., Zhao, P., Chang, J., Tian, Q.: Constraint and union   \n339 for partially-supervised temporal sentence grounding. arXiv preprint arXiv:2302.09850 (2023)   \n340 [20] Ju, C., Zhao, P., Chen, S., Zhang, Y., Wang, Y., Tian, Q.: Divide and conquer for single-frame   \n341 temporal action localization. In: Proceedings of the International Conference on Computer   \n342 Vision (2021)   \n343 [21] Ju, C., Zhao, P., Chen, S., Zhang, Y., Zhang, X., Wang, Y., Tian, Q.: Adaptive mutual supervision   \n344 for weakly-supervised temporal action localization. IEEE Transactions on Multimedia (2022)   \n345 [22] Ju, C., Zhao, P., Zhang, Y., Wang, Y., Tian, Q.: Point-level temporal action localization: Bridging   \n346 fully-supervised proposals to weakly-supervised losses. arXiv preprint arXiv:2012.08236 (2020)   \n347 [23] Ju, C., Zheng, K., Liu, J., Zhao, P., Zhang, Y., Chang, J., Tian, Q., Wang, Y.: Distilling vision  \n348 language pre-training to collaborate with weakly-supervised temporal action localization. In:   \n349 Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (2023)   \n350 [24] Kay, W., Carreira, J., Simonyan, K., Zhang, B., Hillier, C., Vijayanarasimhan, S., Viola, F.,   \n351 Green, T., Back, T., Natsev, P., et al.: The kinetics human action video dataset. arXiv preprint   \n352 arXiv:1705.06950 (2017)   \n353 [25] Keller, Y., Mackensen, J., Eger, S.: Bert-defense: A probabilistic model based on bert to combat   \n354 cognitively inspired orthographic adversarial attacks. arXiv preprint arXiv:2106.01452 (2021)   \n355 [26] Kuehne, H., Jhuang, H., Garrote, E., Poggio, T., Serre, T.: HMDB: A large video database   \n356 for human motion recognition. In: Proceedings of the International Conference on Computer   \n357 Vision (2011)   \n358 [27] Kuehne, H., Jhuang, H., Garrote, E., Poggio, T., Serre, T.: HMDB: a large video database for   \n359 human motion recognition. In: Proceedings of the International Conference on Computer Vision   \n360 (ICCV) (2011)   \n361 [28] Li, J., Li, D., Savarese, S., Hoi, S.: Blip-2: Bootstrapping language-image pre-training with   \n362 frozen image encoders and large language models. In: International conference on machine   \n363 learning. PMLR (2023)   \n364 [29] Li, J., Li, D., Xiong, C., Hoi, S.: Blip: Bootstrapping language-image pre-training for unified   \n365 vision-language understanding and generation. In: International conference on machine learning.   \n366 pp. 12888\u201312900. PMLR (2022)   \n367 [30] Liu, H., Zhang, Y., Wang, Y., Lin, Z., Chen, Y.: Joint character-level word embedding and   \n368 adversarial stability training to defend adversarial text. In: Proceedings of the AAAI Conference   \n369 on Artificial Intelligence (2020)   \n370 [31] Liu, J., Ju, C., Ma, C., Wang, Y., Wang, Y., Zhang, Y.: Audio-aware query-enhanced transformer   \n371 for audio-visual segmentation. arXiv preprint arXiv:2307.13236 (2023)   \n372 [32] Liu, J., Ju, C., Xie, W., Zhang, Y.: Exploiting transformation invariance and equivariance   \n373 for self-supervised sound localisation. In: Proceedings of ACM International Conference on   \n374 Multimedia (2022)   \n375 [33] Liu, J., Liu, Y., Zhang, F., Ju, C., Zhang, Y., Wang, Y.: Audio-visual segmentation via unlabeled   \n376 frame exploitation. arXiv preprint arXiv:2403.11074 (2024)   \n377 [34] Liu, J., Wang, Y., Ju, C., Ma, C., Zhang, Y., Xie, W.: Annotation-free audio-visual segmentation.   \n378 In: Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision   \n379 (2024)   \n380 [35] Liu, K., Liu, X., Yang, A., Liu, J., Su, J., Li, S., She, Q.: A robust adversarial training approach   \n381 to machine reading comprehension. In: Proceedings of the AAAI Conference on Artificial   \n382 Intelligence (2020)   \n383 [36] Ma, C., Yang, Y., Ju, C., Zhang, F., Liu, J., Wang, Y., Zhang, Y., Wang, Y.: Diffusionseg:   \n384 Adapting diffusion towards unsupervised object discovery. arXiv preprint arXiv:2303.09813   \n385 (2023)   \n386 [37] Ma, C., Yang, Y., Ju, C., Zhang, F., Zhang, Y., Wang, Y.: Open-vocabulary semantic segmen  \n387 tation via attribute decomposition-aggregation. Advances in Neural Information Processing   \n388 Systems (2024)   \n389 [38] Nag, S., Zhu, X., Song, Y.Z., Xiang, T.: Zero-shot temporal action detection via vision-language   \n390 prompting. In: Proceedings of the European Conference on Computer Vision. Springer (2022)   \n391 [39] Pruthi, D., Dhingra, B., Lipton, Z.C.: Combating adversarial misspellings with robust word   \n392 recognition. arXiv preprint arXiv:1905.11268 (2019)   \n393 [40] Qian, R., Li, Y., Xu, Z., Yang, M.H., Belongie, S., Cui, Y.: Multimodal open-vocabulary video   \n394 classification via pre-trained vision and language models. arXiv preprint arXiv:2207.07646   \n395 (2022)   \n396 [41] Radford, A., Kim, J.W., Hallacy, C., Ramesh, A., Goh, G., Agarwal, S., Sastry, G., Askell,   \n397 A., Mishkin, P., Clark, J., et al.: Learning transferable visual models from natural language   \n398 supervision. In: Proceedings of the International Conference on Machine Learning. PMLR   \n399 (2021)   \n400 [42] Rychalska, B., Basaj, D., Gosiewska, A., Biecek, P.: Models in the wild: On corruption robust  \n401 ness of neural nlp systems. In: Neural Information Processing: 26th International Conference,   \n402 ICONIP 2019, Sydney, NSW, Australia, December 12\u201315, 2019, Proceedings, Part III 26.   \n403 Springer (2019)   \n404 [43] Sakaguchi, K., Duh, K., Post, M., Van Durme, B.: Robsut wrod reocginiton via semi-character   \n405 recurrent neural network. In: Proceedings of the AAAI Conference on Artificial Intelligence   \n406 (2017)   \n407 [44] Smaira, L., Carreira, J., Noland, E., Clancy, E., Wu, A., Zisserman, A.: A short note on the   \n408 kinetics-700-2020 human action dataset. arXiv preprint arXiv:2010.10864 (2020)   \n409 [45] Soomro, K., Zamir, A.R., Shah, M.: UCF101: A dataset of 101 human actions classes from   \n410 videos in the wild. arXiv preprint arXiv:1212.0402 (2012)   \n411 [46] Soomro, K., Zamir, A.R., Shah, M.: Ucf101: A dataset of 101 human actions classes from   \n412 videos in the wild. arXiv preprint arXiv:1212.0402 (2012)   \n413 [47] Sun, S., Gu, J., Gong, S.: Benchmarking robustness of text-image composed retrieval. arXiv   \n414 preprint arXiv:2311.14837 (2023)   \n415 [48] Wang, H., Yan, C., Wang, S., Jiang, X., Tang, X., Hu, Y., Xie, W., Gavves, E.: Towards   \n416 open-vocabulary video instance segmentation. In: Proceedings of the International Conference   \n417 on Computer Vision (2023)   \n418 [49] Wang, M., Xing, J., Liu, Y.: Actionclip: A new paradigm for video action recognition. arXiv   \n419 preprint arXiv:2109.08472 (2021)   \n420 [50] Wang, W., Wang, R., Wang, L., Wang, Z., Ye, A.: Towards a robust deep neural network in   \n421 texts: A survey. arXiv preprint arXiv:1902.07285 (2019)   \n422 [51] Wang, Z., Wang, H.: Defense of word-level adversarial attacks via random substitution encoding.   \n423 In: Knowledge Science, Engineering and Management: 13th International Conference, KSEM   \n424 2020, Hangzhou, China, August 28\u201330, 2020, Proceedings, Part II 13. Springer (2020)   \n425 [52] Xu, H., Ghosh, G., Huang, P.Y., Okhonko, D., Aghajanyan, A., Metze, F., Zettlemoyer, L.,   \n426 Feichtenhofer, C.: Videoclip: Contrastive pre-training for zero-shot video-text understanding.   \n427 arXiv preprint arXiv:2109.14084 (2021)   \n428 [53] Xu, J., Zhao, L., Yan, H., Zeng, Q., Liang, Y., Sun, X.: Lexicalat: Lexical-based adversarial re  \n429 inforcement training for robust sentiment classification. In: Proceedings of the 2019 conference   \n430 on empirical methods in natural language processing and the 9th international joint conference   \n431 on natural language processing (EMNLP-IJCNLP). pp. 5518\u20135527 (2019)   \n432 [54] Yang, Y., Ma, C., Ju, C., Zhang, Y., Wang, Y.: Multi-modal prototypes for open-set semantic   \n433 segmentation. arXiv preprint arXiv:2307.02003 (2023)   \n434 [55] Yao, L., Huang, R., Hou, L., Lu, G., Niu, M., Xu, H., Liang, X., Li, Z., Jiang, X., Xu, C.:   \n435 Filip: Fine-grained interactive language-image pre-training. In: Proceedings of the International   \n436 Conference on Learning Representations (2022)   \n437 [56] Ye, Z., Ju, C., Ma, C., Zhang, X.: Unsupervised domain adaption via similarity-based prototypes   \n438 for cross-modality segmentation. In: Domain Adaptation and Representation Transfer, and   \n439 Affordable Healthcare and AI for Resource Diverse Global Health: Third MICCAI Workshop,   \n440 DART 2021, and First MICCAI Workshop, FAIR 2021, Held in Conjunction with MICCAI   \n441 2021, Strasbourg, France, September 27 and October 1, 2021, Proceedings 3 (2021)   \n442 [57] Yuan, L., Chen, D., Chen, Y.L., Codella, N., Dai, X., Gao, J., Hu, H., Huang, X., Li, B., Li, C.,   \n443 et al.: Florence: A new foundation model for computer vision. arXiv preprint arXiv:2111.11432   \n444 (2021)   \n445 [58] Zhai, X., Wang, X., Mustafa, B., Steiner, A., Keysers, D., Kolesnikov, A., Beyer, L.: Lit:   \n446 Zero-shot transfer with locked-image text tuning. In: Proceedings of the IEEE Conference on   \n447 Computer Vision and Pattern Recognition (2022)   \n448 [59] Zhang, W.E., Sheng, Q.Z., Alhazmi, A., Li, C.: Adversarial attacks on deep-learning models   \n449 in natural language processing: A survey. ACM Transactions on Intelligent Systems and   \n450 Technology (TIST) (2020)   \n451 [60] Zhao, P., Xie, L., Ju, C., Zhang, Y., Wang, Y., Tian, Q.: Bottom-up temporal action localization   \n452 with mutual regularization. In: Proceedings of the European Conference on Computer Vision   \n453 (2020)   \n454 [61] Zheng, H., Chen, X., Yao, J., Yang, H., Li, C., Zhang, Y., Zhang, H., Tsang, I., Zhou, J., Zhou,   \n455 M.: Contrastive attraction and contrastive repulsion for representation learning. arXiv preprint   \n456 arXiv:2105.03746 (2021)   \n457 [62] Zhou, J., Dong, L., Gan, Z., Wang, L., Wei, F.: Non-contrastive learning meets language  \n458 image pre-training. In: Proceedings of the IEEE Conference on Computer Vision and Pattern   \n459 Recognition (2023)   \n460 [63] Zhou, Y., Jiang, J.Y., Chang, K.W., Wang, W.: Learning to discriminate perturbations for   \n461 blocking adversarial attacks in text classification. arXiv preprint arXiv:1909.03084 (2019) ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "462 A Theoretical Analysis ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "463 A.1 Decoding Objective ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "464 At each step $i$ , the decoding objective to find $\\mathrm{argmax}_{t_{i}}\\,p(t_{i}|T_{i-1},\\mathcal{V})$ . Note that, $p(\\mathcal{T}_{i-1},\\mathcal{V})$ is same \\ for all possible $t_{i}$ . As a result, our objective is written as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{t_{i}}{\\arg\\operatorname*{max}}\\,p(t_{i}|\\mathcal{T}_{i-1},\\mathcal{V})=\\underset{t_{i}}{\\arg\\operatorname*{max}}\\,p(t_{i}|\\mathcal{T}_{i-1},\\mathcal{V})p(\\mathcal{T}_{i-1},\\mathcal{V})}\\\\ &{\\qquad\\qquad\\qquad\\quad=\\underset{t_{i}}{\\arg\\operatorname*{max}}\\,p(t_{i},\\mathcal{T}_{i-1},\\mathcal{V})}\\\\ &{\\qquad\\qquad\\quad=\\underset{t_{i}}{\\arg\\operatorname*{max}}\\log p(t_{i},\\mathcal{T}_{i-1},\\mathcal{V})}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "466 A.2 Discriminative Step ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "467 At the discriminative step, we choose the best set of $\\mathcal{V}$ that helps decode $t_{c,i}$ for each semantic-class   \n468 $c$ . To understand why $\\nu_{c}$ , the set of visual samples $v_{j}$ whose labels $\\mathcal{V}_{j}$ are assigned to semantic-class   \n469 $c$ are those who help decode most efficiently, we first introduce a hidden discrete random variable   \n470 $z_{j}\\sim Q_{j}$ for each $v_{j}$ , indicating the index of class assignment. $z_{j}=c$ means that argmax $y_{j}=c$ . ", "page_idx": 13}, {"type": "text", "text": "\\ Knowing that all visual samples are independent and using Jensen inequality: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\log p(t_{i},T_{i-1},\\gamma)=\\displaystyle\\sum_{j}\\log p(t_{i},T_{i-1},v_{j})}\\\\ &{\\phantom{l a c q u a}=\\sum_{j}\\log\\displaystyle\\sum_{z_{j}}p(t_{i},T_{i-1},v_{j},z_{j})}\\\\ &{\\phantom{l a c q u a}=\\sum_{j}\\log\\displaystyle\\sum_{z_{j}}Q_{j}(z_{j})\\frac{p(t_{i},T_{i-1},v_{j},z_{j})}{Q_{j}(z_{j})}}\\\\ &{\\phantom{l a c q u a}\\geq\\sum_{j}\\sum_{z_{j}}Q_{j}(z_{j})\\log\\displaystyle\\frac{p(t_{i},T_{i-1},v_{j},z_{j})}{Q_{j}(z_{j})}}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "472 Equality is attained at $Q_{j}(z_{j})\\propto p(t_{i},T_{i-1},v_{j},z_{j})$ . Since $\\textstyle\\sum_{z_{j}}Q_{j}(z_{j})=1$ , to maximize the lower Q bound, we have: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{Q_{j}(z_{j})=\\frac{p\\left(t_{i},\\mathcal{T}_{i-1},\\,v_{j},z_{j}\\right)}{\\sum_{z_{j}}p\\left(t_{i},\\mathcal{T}_{i-1},\\,v_{j},z_{j}\\right)}}\\\\ &{\\qquad=\\frac{p\\left(t_{i},\\,\\mathcal{T}_{i-1},\\,v_{j},z_{j}\\right)}{p\\left(t_{i},\\,\\mathcal{T}_{i-1},\\,v_{j}\\right)}}\\\\ &{\\qquad=p(z_{j}|t_{i},\\mathcal{T}_{i-1},\\,v_{j})}\\\\ &{\\qquad=p(z_{j}|\\mathcal{T}_{i},\\,v_{j})}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "\\ Given class texts and visual samples, the best estimation is: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{P}(z_{j}=c|\\mathcal{T}_{i},v_{j})=\\left\\{1\\begin{array}{r l}{\\,}&{{}c=\\operatorname*{argmax}\\operatorname*{max}_{k}\\frac{\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k}))}{\\sum_{k^{\\prime}}\\exp(S(v_{j},\\mathcal{T}_{c,i}^{k^{\\prime}}))}\\,\\,}\\\\ {0}&{{}\\mathrm{otherwise}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "\\ Note that, $Q_{j}$ is well defined because: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{Q_{j}(z_{j})\\to0^{+}}Q_{j}(z_{j})\\log\\frac{p(t_{i},\\mathcal{T}_{i-1},v_{j},z_{j})}{Q_{j}(z_{j})}=0\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "476 With $Q_{j}$ defined in this way, we find the discriminative step to be identical to how $\\Phi_{\\mathrm{OVAR}}$ assigns \\ labels. We have $Q_{j}(c)=1$ only for $\\{j|v_{j}\\in\\mathcal{V}_{c}\\}$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\log p(t_{i},T_{i-1},\\mathcal{V})\\geq\\displaystyle\\sum_{j}\\sum_{z_{j}}Q_{j}(z_{j})\\log\\frac{p(t_{i},T_{i-1},v_{j},z_{j})}{Q_{j}(z_{j})}}\\\\ &{\\phantom{\\log p(t_{i},T_{i-1},\\mathcal{V})\\geq\\alpha\\beta(z_{j})}=\\displaystyle\\sum_{c}\\sum_{j,v_{j}\\in\\mathcal{V}_{c}}\\sum_{z_{j}}Q_{j}(z_{j})\\log\\frac{p(t_{i},T_{i-1},v_{j},z_{j})}{Q_{j}(z_{j})}}\\\\ &{\\phantom{\\log p(t_{i},T_{i-1},v_{j},z_{j})}=\\displaystyle\\sum_{c}\\sum_{j,v_{j}\\in\\mathcal{V}_{c}}\\log p(t_{i},T_{i-1},v_{j},z_{j}=c)}\\\\ &{\\phantom{\\log p(t_{i},T_{i-1},v_{j},z_{j})}=\\displaystyle\\sum_{c}\\log p(t_{c,i},T_{c,i-1},\\mathcal{V}_{c})}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "478 A.3 Generative Step ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "\\ We optimize $t_{c,i}$ for each semantic-class: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\underset{t_{c,i}}{\\mathrm{argmax}}\\log p(t_{c,i},\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(t_{c,i},\\mathcal{T}_{c,i-1},\\mathcal{V}_{c})}&{}\\\\ {=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\underset{v_{j}\\in\\mathcal{V}_{c}}{\\prod}\\,p(t_{c,i},\\mathcal{T}_{c,i-1},v_{j})}&{}\\\\ {=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\underset{v_{j}\\in\\mathcal{V}_{c}}{\\prod}\\,p(\\mathcal{T}_{c,i-1}\\vert t_{c,i},v_{j})p(t_{c,i}\\vert v_{j})p(v_{j})}&{}\\\\ {=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\underset{v_{j}\\in\\mathcal{V}_{c}}{\\prod}\\,p(\\mathcal{T}_{c,i-1}\\vert t_{c,i},v_{j})p(t_{c,i}\\vert v_{j})}&{}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "\\ Noting that $p(\\tau_{c,i-1})$ is the same for any possible $t_{c,i}$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(\\mathcal T_{c,i-1}|t_{c,i},v_{j})=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(\\mathcal T_{c,i-1}|t_{c,i})}\\\\ &{\\phantom{\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(\\mathcal T_{c,i-1}|t_{c,i})}=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\frac{p(t_{c,i}|\\mathcal T_{c,i-1})p(\\mathcal T_{c,i-1})}{p(t_{c,i})}}\\\\ &{\\phantom{\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\frac{p(t_{c,i}|\\mathcal T_{c,i-1}|t_{c,i})}{p(t_{c,i})}}=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,\\frac{p(t_{c,i}|\\mathcal T_{c,i-1})}{p(t_{c,i})}}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "481 It is possible to optimize with prior $p(t_{c,i})$ by considering that the more a word is frequent, the less it 482 is likely to be misspelled in real-world scenarios. In this paper, for simplicity, we assume the $t_{c,i}$ to \\ be uniform: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(\\mathcal{T}_{c,i-1}|t_{c,i},v_{j})=\\underset{t_{c,i}}{\\mathrm{argmax}}\\,p(t_{c,i}|\\mathcal{T}_{c,i-1})\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "484 B Additional Experiments ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "485 B.1 DENOISER vs. Adversarial Training ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "486 Fig. 5 studies how adversarial training might mitigate the noise in text descriptions. We first train   \n487 ActionCLIP ViT-B/32-8F from scratch on K400 by randomly injecting noise in its text labels, then   \n488 test the model\u2019s zero-shot performance on UCF101 under different noise rate scenarios. We find that   \n489 adversarial training, though promising under closed-set scenarios in previous studies, is relatively   \n490 ineffective under open-vocabulary settings. Specifically, training with more noise lowers significantly   \n491 the model\u2019s performance under low noise rate. Additionally, its added value is limited under heavy   \n492 noise rate. These phenomena are probably related to the domain gap between datasets. By training   \n493 on noisy text descriptions, the model tends to overfit the noise pattern, jeopardizing its zero-shot   \n494 performance. We conclude that noisy text descriptions are better solved in testing time rather than   \n495 during training stage. Our DENOISER framework shows a significant advantage over the adversarial   \n496 training. ", "page_idx": 14}, {"type": "image", "img_path": "uS9RZH6K65/tmp/4ed816492251eb5ec4fe2c831bf8f6c7ce222fa87b6d699ed9008dee90ad09fd.jpg", "img_caption": ["Figure 5: Comparison to Adversarial Training. Adversarial training is not efficient, especially in low-noise scenarios, even leading to a lower performance compared to the original model. It also falls behind our method by a significant margin. "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "uS9RZH6K65/tmp/127c506f089a92420a3830b16d5ae0f6d2f0728d50820932b07020fcbcaa0955.jpg", "img_caption": ["Figure 6: Ablation Study on the Number of Visual Samples. When fewer visual samples are used in $\\Phi_{\\mathrm{inter}}$ , our method shows a drop in performance. The bigger the noise rate, the larger the drop, showing that $\\Phi_{\\mathrm{inter}}$ plays a role of increasing importance when the noise is larger. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "497 B.2 Ablation Study on the Number of Visual Samples ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "498 Fig. 6 ablates on the number of visual samples in $\\Phi_{\\mathrm{inter}}$ . Our method shows a drop in performance   \n499 when fewer visual samples are used in $\\Phi_{\\mathrm{inter}}$ . The performance tends to converge towards that   \n500 when solely $\\Phi_{\\mathrm{intra}}$ is used. We hypothesize that fewer visual samples make $\\Phi_{\\mathrm{inter}}$ harder to extract   \n501 added value to $\\Phi_{\\mathrm{intra}}$ . With the noise rate increasing, we find an increasingly large drop in perfor  \n502 mance, which shows conversely that $\\Phi_{\\mathrm{{inter}}}$ is more important under large noise scenarios as textual   \n503 information becomes more ambiguous and less informative. ", "page_idx": 15}, {"type": "text", "text": "504 B.3 Qualitative Results ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "505 Fig. 7 visualizes the embedding of (visual samples, text descriptions) from three semantic-classes:   \n506 bird (green), ship (yellow), truck (blue) in CIFAR-10 using T-SNE. The first principal component of   \n507 textual embedding is removed following ReCLIP[12] to prevent them from clustering at the same   \n508 place. The Left shows that classification accuracy is low when text descriptions are noisy. Almost   \n509 all visual samples are recognized as \u201cbird\u201d. The Middle shows the embeddings of proposed text   \n510 candidates. Some of them remain at the same place, because they move perpendicular to this 2D space   \n511 in the real semantic space. We assign the best set of visual samples for each semantic-class to help   \n512 denoise, e.g., the blue dots are used to vote on the two candidates \u201ctrump\u201d (red) and \u201ctruck\u201d (purple)   \n513 of \u201ctrumk\u201d. The Right shows that the denoised text descriptions improve the OVAR performance.   \n514 Tab. 4 quantifies some good/bad cases. We find GPT 3.5 is better at understanding semantics of   \n515 noisy text descriptions, e.g., \u201cwal4ingm with a dog\u201d $\\rightarrow$ \u201cdogwalking\u201d. However, its output is highly   \n516 affected by input prompts, and thus tends to be unstable: important text parts are sometimes omitted   \n517 or misinterpreted, e.g., \u201cbabty crawling\u201d $\\rightarrow$ \u201cbaby crying\u201d. Such unstable outputs require manual   \n518 cleaning, limiting its applications in reality. Our DENOISER remains faithful in terms of spelling,   \n519 e.g., \u201cwal4ingm with a $\\mathrm{dog}^{\\circ}\\rightarrow$ \u201cwalking with a dog\u201d instead of \u201cdogwalking\u201d. While it may be   \n520 mistaken when two words are similar in semantics and spelling (rare cases), e.g., \u201cball\u201d and \u201cballs\u201d. ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "table", "img_path": "uS9RZH6K65/tmp/df2f6b6ebdc846bd10a2f4f16152e53e18cb272d75dbf820c31ddfc8b7b81d53.jpg", "table_caption": ["Table 4: Cases of Denoised Text Descriptions for GPT 3.5 and DENOISER. The output from GPT 3.5 [1] tends to be unstable, and sometimes it\u2019s a relatively high-level understanding of noisy text descriptions. Our DENOISER ensures a relatively faithful output in terms of spelling but could be slightly mistaken when two words are similar in terms of both semantics and spelling. "], "table_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "uS9RZH6K65/tmp/a870e747313fcc397807111d1e2a0abd9a2517cd0052650c53ca25df7c057614.jpg", "img_caption": ["Figure 7: Denoising Visualization. Left: result with noisy text descriptions (crosses w black border). Middle: text candidates (crosses w/o black border), the visual samples (in dots) that are used to vote for candidates. Right: denoised class texts (crosses w black border) help for better classification. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "521 C On the efficiency of DENOISER ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "522 Our model requires a trade-off between computational cost and performance. As shown in Fig. 4   \n523 and Fig. 6, the performance of our DENOISER increases as the number of proposals $K$ and the   \n524 percentage of the visual samples used. Since the theoretical complexity of DENOISER increases   \n525 linearly with $K$ and the percentage of visual samples used, while the marginal contribution of a larger   \n526 $K$ or percentage is decreasing, a trade-off between computational cost and performance is necessary.   \n527 DENOISER requires only simple operations for each iteration. After having extracted the embedding   \n528 of visual samples, DENOISER only requires recomputing the text embedding and doing a dot product   \n529 with visual embeddings, which is extremely fast. Compared to other approaches that intend to align   \n530 noisy text-image pairs or to train spell-checking models, DENOISER that denoises at evaluation time   \n531 is extremely time-saving. ", "page_idx": 16}, {"type": "text", "text": "532 NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "38 paper\u2019s contributions and scope.   \n39 Guidelines:   \n40 \u2022 The answer NA means that the abstract and introduction do not include the claims   \n41 made in the paper.   \n42 \u2022 The abstract and/or introduction should clearly state the claims made, including the   \n43 contributions made in the paper and important assumptions and limitations. A No or   \n44 NA answer to this question will not be perceived well by the reviewers.   \n45 \u2022 The claims made should match theoretical and experimental results, and reflect how   \n46 much the results can be expected to generalize to other settings.   \n47 \u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals   \n48 are not attained by the paper. ", "page_idx": 17}, {"type": "text", "text": "549 2. Limitations ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We discuss the limitation of our method at the end of the paper, and in the appendix. ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 17}, {"type": "text", "text": "581 3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "82 Question: For each theoretical result, does the paper provide the full set of assumptions and   \n83 a complete (and correct) proof?   \n585 Justification: We provide detailed derivation in the appendix.   \n586 Guidelines:   \n87 \u2022 The answer NA means that the paper does not include theoretical results.   \n88 \u2022 All the theorems, formulas, and proofs in the paper should be numbered and cross  \n89 referenced.   \n90 \u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n91 \u2022 The proofs can either appear in the main paper or the supplemental material, but if   \n92 they appear in the supplemental material, the authors are encouraged to provide a short   \n93 proof sketch to provide intuition.   \n94 \u2022 Inversely, any informal proof provided in the core of the paper should be complemented   \n95 by formal proofs provided in appendix or supplemental material.   \n96 \u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 17}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "597 4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "598 Question: Does the paper fully disclose all the information needed to reproduce the main ex  \n599 perimental results of the paper to the extent that it affects the main claims and/or conclusions   \n600 of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 18}, {"type": "text", "text": "Justification: We detail the proposed algorithm and the setting of experiments. Additionally, we provide source code. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 18}, {"type": "text", "text": "636 5. Open access to data and code ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "37 Question: Does the paper provide open access to the data and code, with sufficient instruc  \n38 tions to faithfully reproduce the main experimental results, as described in supplemental   \n39 material?   \n40 Answer: [Yes]   \n41 Justification: We provide source code. Datasets are publicly accessible.   \n42 Guidelines:   \n43 \u2022 The answer NA means that paper does not include experiments requiring code.   \n44 \u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/   \n45 public/guides/CodeSubmissionPolicy) for more details.   \n46 \u2022 While we encourage the release of code and data, we understand that this might not be   \n47 possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not   \n48 including code, unless this is central to the contribution (e.g., for a new open-source   \n49 benchmark).   \n50 \u2022 The instructions should contain the exact command and environment needed to run to   \n51 reproduce the results. See the NeurIPS code and data submission guidelines (https:   \n52 //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n53 \u2022 The authors should provide instructions on data access and preparation, including how   \n54 to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n55 \u2022 The authors should provide scripts to reproduce all experimental results for the new   \n56 proposed method and baselines. If only a subset of experiments are reproducible, they   \n57 should state which ones are omitted from the script and why.   \n58 \u2022 At submission time, to preserve anonymity, the authors should release anonymized   \n59 versions (if applicable).   \n60 \u2022 Providing as much information as possible in supplemental material (appended to the   \n61 paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 19}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We specify all settings of experiments in the experiments section. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 19}, {"type": "text", "text": "674 7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "675 Question: Does the paper report error bars suitably and correctly defined or other appropriate   \n676 information about the statistical significance of the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "678 Justification: We report confidence intervals.   \n679 Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.) ", "page_idx": 19}, {"type": "text", "text": "689 \u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n690 \u2022 It should be clear whether the error bar is the standard deviation or the standard error   \n691 of the mean.   \n692 \u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should   \n693 preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis   \n694 of Normality of errors is not verified.   \n695 \u2022 For asymmetric distributions, the authors should be careful not to show in tables or   \n696 figures symmetric error bars that would yield results that are out of range (e.g. negative   \n697 error rates).   \n698 \u2022 If error bars are reported in tables or plots, The authors should explain in the text how   \n699 they were calculated and reference the corresponding figures or tables in the text.   \n700 8. Experiments Compute Resources   \n701 Question: For each experiment, does the paper provide sufficient information on the com  \n702 puter resources (type of compute workers, memory, time of execution) needed to reproduce   \n703 the experiments?   \n704 Answer: [Yes]   \n705 Justification: We report information of computer resources.   \n706 Guidelines:   \n707 \u2022 The answer NA means that the paper does not include experiments.   \n708 \u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster,   \n709 or cloud provider, including relevant memory and storage.   \n710 \u2022 The paper should provide the amount of compute required for each of the individual   \n711 experimental runs as well as estimate the total compute.   \n712 \u2022 The paper should disclose whether the full research project required more compute   \n713 than the experiments reported in the paper (e.g., preliminary or failed experiments that   \n714 didn\u2019t make it into the paper).   \n715 9. Code Of Ethics   \n716 Question: Does the research conducted in the paper conform, in every respect, with the   \n717 NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?   \n718 Answer: [Yes]   \n719 Justification: We conduct in the paper conform, in every respect, with the NeurIPS Code of   \n720 Ethics.   \n721 Guidelines:   \n722 \u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n723 \u2022 If the authors answer No, they should explain the special circumstances that require a   \n724 deviation from the Code of Ethics.   \n725 \u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consid  \n726 eration due to laws or regulations in their jurisdiction).   \n727 10. Broader Impacts   \n728 Question: Does the paper discuss both potential positive societal impacts and negative   \n729 societal impacts of the work performed?   \n730 Answer: [Yes]   \n731 Justification: Our model helps users better leverage the existing Open-Vocabulary models in   \n732 a more robust way.   \n733 Guidelines:   \n734 \u2022 The answer NA means that there is no societal impact of the work performed.   \n735 \u2022 If the authors answer NA or No, they should explain why their work has no societal   \n736 impact or why the paper does not address societal impact.   \n737 \u2022 Examples of negative societal impacts include potential malicious or unintended uses   \n738 (e.g., disinformation, generating fake profiles, surveillance), fairness considerations   \n739 (e.g., deployment of technologies that could make decisions that unfairly impact specific   \n740 groups), privacy considerations, and security considerations.   \n741 \u2022 The conference expects that many papers will be foundational research and not tied   \n742 to particular applications, let alone deployments. However, if there is a direct path to   \n743 any negative applications, the authors should point it out. For example, it is legitimate   \n744 to point out that an improvement in the quality of generative models could be used to   \n745 generate deepfakes for disinformation. On the other hand, it is not needed to point out   \n746 that a generic algorithm for optimizing neural networks could enable people to train   \n747 models that generate Deepfakes faster.   \n748 \u2022 The authors should consider possible harms that could arise when the technology is   \n749 being used as intended and functioning correctly, harms that could arise when the   \n750 technology is being used as intended but gives incorrect results, and harms following   \n751 from (intentional or unintentional) misuse of the technology.   \n752 \u2022 If there are negative societal impacts, the authors could also discuss possible mitigation   \n753 strategies (e.g., gated release of models, providing defenses in addition to attacks,   \n754 mechanisms for monitoring misuse, mechanisms to monitor how a system learns from   \n755 feedback over time, improving the efficiency and accessibility of ML).   \n756 11. Safeguards   \n757 Question: Does the paper describe safeguards that have been put in place for responsible   \n758 release of data or models that have a high risk for misuse (e.g., pretrained language models,   \n759 image generators, or scraped datasets)?   \n760 Answer: [NA]   \n761 Justification: The paper poses no such risks.   \n762 Guidelines:   \n763 \u2022 The answer NA means that the paper poses no such risks.   \n764 \u2022 Released models that have a high risk for misuse or dual-use should be released with   \n765 necessary safeguards to allow for controlled use of the model, for example by requiring   \n766 that users adhere to usage guidelines or restrictions to access the model or implementing   \n767 safety filters.   \n768 \u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors   \n769 should describe how they avoided releasing unsafe images.   \n770 \u2022 We recognize that providing effective safeguards is challenging, and many papers do   \n771 not require this, but we encourage authors to take this into account and make a best   \n772 faith effort.   \n773 12. Licenses for existing assets   \n774 Question: Are the creators or original owners of assets (e.g., code, data, models), used in   \n775 the paper, properly credited and are the license and terms of use explicitly mentioned and   \n776 properly respected?   \n777 Answer: [Yes]   \n778 Justification: All the assets are properly cited. License and terms of use are properly   \n779 respected.   \n780 Guidelines:   \n781 \u2022 The answer NA means that the paper does not use existing assets.   \n782 \u2022 The authors should cite the original paper that produced the code package or dataset.   \n783 \u2022 The authors should state which version of the asset is used and, if possible, include a   \n784 URL.   \n785 \u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n786 \u2022 For scraped data from a particular source (e.g., website), the copyright and terms of   \n787 service of that source should be provided.   \n788 \u2022 If assets are released, the license, copyright information, and terms of use in the   \n789 package should be provided. For popular datasets, paperswithcode.com/datasets   \n790 has curated licenses for some datasets. Their licensing guide can help determine the   \n791 license of a dataset.   \n792 \u2022 For existing datasets that are re-packaged, both the original license and the license of   \n793 the derived asset (if it has changed) should be provided.   \n794 \u2022 If this information is not available online, the authors are encouraged to reach out to   \n795 the asset\u2019s creators.   \n796 13. New Assets   \n797 Question: Are new assets introduced in the paper well documented and is the documentation   \n798 provided alongside the assets?   \n799 Answer: [Yes]   \n800 Justification: We provided well-documented source code.   \n801 Guidelines:   \n802 \u2022 The answer NA means that the paper does not release new assets.   \n803 \u2022 Researchers should communicate the details of the dataset/code/model as part of their   \n804 submissions via structured templates. This includes details about training, license,   \n805 limitations, etc.   \n806 \u2022 The paper should discuss whether and how consent was obtained from people whose   \n807 asset is used.   \n808 \u2022 At submission time, remember to anonymize your assets (if applicable). You can either   \n809 create an anonymized URL or include an anonymized zip file.   \n810 14. Crowdsourcing and Research with Human Subjects   \n811 Question: For crowdsourcing experiments and research with human subjects, does the paper   \n812 include the full text of instructions given to participants and screenshots, if applicable, as   \n813 well as details about compensation (if any)?   \n814 Answer: [NA]   \n815 Justification: The paper does not involve crowdsourcing nor research with human subjects.   \n816 Guidelines:   \n817 \u2022 The answer NA means that the paper does not involve crowdsourcing nor research with   \n818 human subjects.   \n819 \u2022 Including this information in the supplemental material is fine, but if the main contribu  \n820 tion of the paper involves human subjects, then as much detail as possible should be   \n821 included in the main paper.   \n822 \u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation,   \n823 or other labor should be paid at least the minimum wage in the country of the data   \n824 collector.   \n825 15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human   \n826 Subjects   \n827 Question: Does the paper describe potential risks incurred by study participants, whether   \n828 such risks were disclosed to the subjects, and whether Institutional Review Board (IRB)   \n829 approvals (or an equivalent approval/review based on the requirements of your country or   \n830 institution) were obtained?   \n831 Answer: [NA]   \n832 Justification: The paper does not involve crowdsourcing nor research with human subjects.   \n833 Guidelines:   \n834 \u2022 The answer NA means that the paper does not involve crowdsourcing nor research with   \n835 human subjects.   \n836 \u2022 Depending on the country in which research is conducted, IRB approval (or equivalent)   \n837 may be required for any human subjects research. If you obtained IRB approval, you   \n838 should clearly state this in the paper.   \n839 \u2022 We recognize that the procedures for this may vary significantly between institutions   \n840 and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the   \n841 guidelines for their institution.   \n842 \u2022 For initial submissions, do not include any information that would break anonymity (if   \n843 applicable), such as the institution conducting the review. ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}]