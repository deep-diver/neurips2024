[{"figure_path": "sRILMnkkQd/figures/figures_1_1.jpg", "caption": "Figure 1: The overall framework of UniGAD.", "description": "The figure illustrates the architecture of UniGAD, a unified graph anomaly detection model.  It shows a series of processing steps:  First, a pre-trained shared Graph Neural Network (GNN) encoder processes the input data (nodes, edges, and graphs). Next, a Maximum Rayleigh Quotient Subgraph Sampler (MRQSampler) samples subgraphs to unify multi-level formats. Then, pooling layers create graph representations.  These representations are then processed by a multi-level layer (Layer1 and Layer2). A GraphStitch Network combines the outputs from these layers, unifying multi-level training. Finally, multi-level prediction layers produce the anomaly predictions for nodes, edges, and graphs.", "section": "3 Methodology"}, {"figure_path": "sRILMnkkQd/figures/figures_3_1.jpg", "caption": "Figure 2: Message passing in GNNs and rooted subtree sampling.", "description": "This figure illustrates the subgraph sampling process used in the UniGAD model.  It shows three stages: 1) The original graph with a node highlighted (target node). 2) The rooted subtree centered on that target node after the message-passing phase of a Graph Neural Network (GNN). The subtree contains the information directly obtained from the target node and its immediate neighbors. 3) A sampled subtree, which is a subset of the rooted subtree.  The red dashed line highlights that the sampled subtree is a smaller portion of the rooted subtree, chosen by an algorithm to best retain the most significant anomaly information.", "section": "3.1 Spectral Subgraph Sampler for Unifying Multi-level Formats"}, {"figure_path": "sRILMnkkQd/figures/figures_4_1.jpg", "caption": "Figure 3: MRQSampler: (i) Derive the condition (Theorem 2) satisfied with the optimal subtree. (ii) Decompose the problem into simpler sub-problems by recursing through the tree depth to solve the optimal subtree with the dynamic programming (DP) algorithm.", "description": "The figure illustrates the MRQSampler algorithm's operation. The algorithm recursively decomposes the problem of finding the optimal subtree into smaller subproblems by exploring the tree's depth. Each smaller problem involves identifying the optimal nodeset for a subtree, maximizing the accumulated spectral energy. The process combines dynamic programming for efficiency and theoretical guarantees ensuring the most significant anomaly information is retained in the final subgraph.", "section": "3.1 Spectral Subgraph Sampler for Unifying Multi-level Formats"}, {"figure_path": "sRILMnkkQd/figures/figures_5_1.jpg", "caption": "Figure 4: GraphStitch network structure in UniGAD. Node level is highlighted.", "description": "The figure illustrates the architecture of the GraphStitch network, a key component of UniGAD.  It shows how separate but identical networks for nodes, edges, and graphs are integrated using GraphStitch Units. The GraphStitch Units facilitate information sharing across different levels (node, edge, and graph) to unify multi-level training. The figure highlights the node level for clarity, showing how node embeddings are composed of information from node, edge, and graph perspectives.", "section": "3.2 GraphStitch Network for Unifying Multi-level Training"}, {"figure_path": "sRILMnkkQd/figures/figures_9_1.jpg", "caption": "Figure 1: The overall framework of UniGAD.", "description": "This figure presents a detailed overview of the UniGAD framework. It illustrates the different stages involved in the process, starting from pre-trained shared GNN to the multi-level prediction.  UniGAD unifies multi-level formats by transferring node, edge, and graph-level tasks into graph-level tasks on subgraphs (using MRQSampler), and unifies multi-level training by integrating information across different levels (using GraphStitch Network). The figure highlights the key components of UniGAD, including the pre-trained shared GNN, subgraph sampling, multi-level layers, and finally the multi-level prediction.  The components of multi-level prediction are clearly shown: node anomaly detection, edge anomaly detection, and graph anomaly detection.", "section": "3 Methodology"}]