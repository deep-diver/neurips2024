[{"figure_path": "MbZuh8L0Xg/figures/figures_2_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure illustrates the training, inference, and evaluation processes of the DiffPhyCon model.  The training stage involves learning both the joint distribution of state trajectories and control sequences, and the prior distribution of control sequences.  Inference uses this learned information, along with prior reweighting and guidance, to generate optimal control sequences. The evaluation stage assesses the performance of these generated sequences in controlling the physical system.", "section": "3 Method"}, {"figure_path": "MbZuh8L0Xg/figures/figures_4_1.jpg", "caption": "Figure 2: Intuition of Prior Reweighting. The top surface illustrates the landscape of J(u, w), where the high-dimensional variables u and w are represented using one dimension. The middle and lower planes depict probability heatmaps for the reweighted distribution p^(w)p(u|w)/Z. Adjusting \u03b3 from \u03b3 = 1 (middle plane) to 0 < \u03b3 < 1 (lower plane), a better minimal of J (red dot in the lower plane) gains the chance to be sampled. This contrasts with the suboptimal red point in the middle plane highly influenced by the prior p(w).", "description": "This figure illustrates the effect of prior reweighting on sampling from a joint distribution p(u,w). The top panel shows the cost function J(u,w). The middle panel shows the joint distribution p(w)p(u|w) when \u03b3=1. The bottom panel shows the reweighted distribution p\u03b3(w)p(u|w) when 0<\u03b3<1. The reweighted distribution shifts the probability mass towards lower cost regions, improving the chances of sampling near-optimal solutions.", "section": "3.2 Prior Reweighting"}, {"figure_path": "MbZuh8L0Xg/figures/figures_6_1.jpg", "caption": "Figure 3: Pareto frontier of Jenergy VS. Jactual of different methods for 1D Burgers' equation.", "description": "This figure compares the performance of various methods for controlling the 1D Burgers' equation across three different experimental settings: partial observation, full control (PO-FC); full observation, partial control (FO-PC); and partial observation, partial control (PO-PC).  Each setting presents a unique challenge related to the information available about the system state and the level of control exerted. The Pareto frontier illustrates the trade-off between minimizing the control energy (Jenergy) and minimizing the control error (Jactual).  The figure shows that DiffPhyCon consistently achieves superior results, reaching lower Jactual values for a given Jenergy budget compared to other methods.  This highlights its effectiveness in handling the complexities of partial observation and partial control scenarios.", "section": "4 Experiments"}, {"figure_path": "MbZuh8L0Xg/figures/figures_8_1.jpg", "caption": "Figure 4: Comparison of generated control curves of three test jellyfish. The resulting control objective I for each curve is presented.", "description": "This figure compares the generated control curves (opening angles of jellyfish wings over time) produced by different methods on three separate test jellyfish.  The x-axis represents time, and the y-axis represents the opening angle. Each line represents a different method (DiffPhyCon-lite, DiffPhyCon, SAC (pseudo-online), SAC (offline), SL, MPC, BPPO, BC), with the resulting control objective J displayed for each jellyfish's control sequence. This visualization helps to illustrate how different methods produce different control strategies for achieving the same goal (jellyfish movement). The figure shows DiffPhyCon's ability to generate a smooth and effective control curve that leads to a better control objective compared to other methods.", "section": "4.2 2D Jellyfish Movement Control"}, {"figure_path": "MbZuh8L0Xg/figures/figures_9_1.jpg", "caption": "Figure 5: Visualization of jellyfish movement and fluid field controlled by DiffPhyCon as in the middle subfigure of Figure 4.", "description": "This figure visualizes the movement of a jellyfish and the surrounding fluid flow at different time points (t=0, 5, 10, 15, 20). The visualization is based on the results obtained using the DiffPhyCon method, specifically focusing on the control scenario illustrated in the middle subfigure of Figure 4. It showcases the dynamic interaction between the jellyfish's movement (indicated by the brown shape) and the fluid flow (represented by the color map, where red indicates positive vorticity and blue indicates negative vorticity). The image provides a visual representation of how DiffPhyCon influences the jellyfish's trajectory and the resulting fluid dynamics.", "section": "C Visualization Results"}, {"figure_path": "MbZuh8L0Xg/figures/figures_9_2.jpg", "caption": "Figure 6: Visualization of smoke density and fluid field dynamics controlled by DiffPhyCon.", "description": "This figure visualizes the results of the 2D smoke indirect control task using the DiffPhyCon method. It shows a sequence of six snapshots (t=0, t=6, t=12, t=18, t=24, t=30) illustrating the evolution of smoke density and fluid field dynamics.  The smoke, initially concentrated in a lower region, is guided by DiffPhyCon's control signals to navigate through a complex channel with obstacles, ultimately aiming for a target exit at the top.", "section": "4.3 2D Smoke Indirect Control"}, {"figure_path": "MbZuh8L0Xg/figures/figures_19_1.jpg", "caption": "Figure 7: Visualizations results of 1D Burgers' equation control under the FO-PC (full observation, partial control) setting. The curve for the system state ut of each time step t = 0,\u2026\u2026, 10 under control is plotted for our method (DiffPhyCon) and baselines. The x-axis is the spatial coordinate and the y-axis is the value of the system state.", "description": "This figure shows the results of applying various methods to control the 1D Burgers' equation under the condition of full observation but partial control. It compares the performance of DiffPhyCon with baselines such as PID, SL, SAC, BC, and BPPO by visualizing the system state evolution over time for five randomly selected test samples. The plots illustrate how the different methods converge towards the target state, highlighting the effectiveness of DiffPhyCon in achieving a smooth and accurate convergence.", "section": "C.1 1D Burgers' Equation Visualization"}, {"figure_path": "MbZuh8L0Xg/figures/figures_20_1.jpg", "caption": "Figure 3: Pareto frontier of Jenergy VS. Jactual of different methods for 1D Burgers' equation.", "description": "This figure shows a Pareto frontier, which is a curve illustrating the trade-off between two objectives: the energy cost (Jenergy) and the actual control error (Jactual). The Pareto frontier helps to visualize the performance of different methods for 1D Burgers' equation control under various scenarios (partial observation, full control; full observation, partial control; partial observation, partial control). It allows for a comparison of different methods in their ability to achieve a balance between minimizing the control error while keeping the energy cost low.  The different methods are compared in this trade-off.", "section": "4 Experiments"}, {"figure_path": "MbZuh8L0Xg/figures/figures_21_1.jpg", "caption": "Figure 7: Visualizations results of 1D Burgers' equation control under the FO-PC (full observation, partial control) setting. The curve for the system state ut of each time step t = 0,\u2026\u2026, 10 under control is plotted for our method (DiffPhyCon) and baselines. The x-axis is the spatial coordinate and the y-axis is the value of the system state.", "description": "This figure compares the performance of different methods in solving the 1D Burgers' equation control problem under the full observation, partial control setting.  The results are shown for five randomly selected samples from the test dataset. Each curve represents the evolution of the system state over time (t=0 to 10). The x-axis shows the spatial coordinate, and the y-axis shows the corresponding value of the system state.  The figure visually demonstrates DiffPhyCon's ability to effectively guide the system state towards the target state, compared to baseline methods like PID, SL, SAC, BC, and BPPO.", "section": "C Visualization Results"}, {"figure_path": "MbZuh8L0Xg/figures/figures_22_1.jpg", "caption": "Figure 10: More examples of 2D jellyfish simulation controlled by our method.", "description": "This figure shows more examples of 2D jellyfish simulations controlled by the DiffPhyCon method. Each row represents an example from the test dataset.  Five snapshots of the simulation are shown for each example, showcasing the jellyfish's movement and the corresponding fluid dynamics at different points in time (t = 0, 5, 10, 15, 20).  The color schemes represent the vorticity of the fluid, highlighting the complex flow patterns generated by the jellyfish's movements.", "section": "C Visualization Results"}, {"figure_path": "MbZuh8L0Xg/figures/figures_23_1.jpg", "caption": "Figure 11: Examples of 2D smoke control results by our method. We present three randomly selected test examples. For each example, we show the generated smoke density map and control force fields in horizontal and vertical directions. Each row depicts six frames of movement. The smoke density in the first row corresponds to that in Figure 6.", "description": "This figure visualizes the results of the 2D smoke control task using the DiffPhyCon method. It showcases three randomly selected test examples, each displayed as a row of six frames illustrating the progression of smoke density and the corresponding control force fields (horizontal and vertical) over time.  The image highlights how the method guides the smoke towards the target exit.", "section": "C Visualization Results"}, {"figure_path": "MbZuh8L0Xg/figures/figures_28_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure provides a high-level overview of the DiffPhyCon method, illustrating its three main stages: training, inference, and evaluation.  The training phase involves learning two key distributions: the joint distribution of states and controls (orange), and the prior distribution of controls (blue). During inference, the model generates control sequences by minimizing a combined energy function, incorporating both learned distributions and guidance from the control objective. Finally, the generated control sequences are evaluated based on their performance in controlling the physical system.", "section": "3 Method"}, {"figure_path": "MbZuh8L0Xg/figures/figures_30_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure shows a schematic overview of the DiffPhyCon method. The training phase involves learning the joint distribution of states and controls, as well as a prior distribution of control sequences.  During inference, the model generates control sequences by denoising, incorporating prior reweighting and guidance to optimize for a specific objective. The evaluation step assesses the quality of the generated control sequences. The use of orange and blue colors helps distinguish the different models involved in the process.", "section": "3 Method"}, {"figure_path": "MbZuh8L0Xg/figures/figures_32_1.jpg", "caption": "Figure 14: 2D smoke indirect control task. There are seven exits in total and the top middle one is the target exit (a). The control signals are only allowed to apply to peripheral regions (b). The control objective is to minimize the proportion of smoke failing to pass through the target exit.", "description": "This figure shows the setup for a 2D smoke indirect control task.  Panel (a) illustrates the overall layout of the environment, highlighting seven exits, obstacles, and the target exit (the top middle exit).  Panel (b) emphasizes that control forces can only be applied to the peripheral regions, excluding the central semi-enclosed area where the smoke is initially placed. The goal is to minimize the smoke that doesn't exit through the target exit.", "section": "G 2D Smoke Indirect Control"}, {"figure_path": "MbZuh8L0Xg/figures/figures_32_2.jpg", "caption": "Figure 14: 2D smoke indirect control task. There are seven exits in total and the top middle one is the target exit (a). The control signals are only allowed to apply to peripheral regions (b). The control objective is to minimize the proportion of smoke failing to pass through the target exit.", "description": "This figure shows the experimental setup for the 2D smoke indirect control task.  Panel (a) illustrates the location of seven exits, with the central exit being the target. Panel (b) highlights the controllable region, which is limited to the perimeter of the simulation domain. The objective is to control airflow to maximize the amount of smoke exiting through the central target exit.", "section": "G 2D Smoke Indirect Control"}, {"figure_path": "MbZuh8L0Xg/figures/figures_34_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure shows the overall architecture of DiffPhyCon, a generative model for controlling complex physical systems. It illustrates the training process, where models learn the joint distribution of system trajectories and control sequences, as well as the prior distribution of control sequences. The inference process is also depicted, showing how DiffPhyCon utilizes prior reweighting and guidance to generate near-optimal control sequences that are faithful to the dynamics of the system. Finally, the evaluation process is shown, where the generated control sequences are evaluated based on predefined metrics.", "section": "3 Method"}, {"figure_path": "MbZuh8L0Xg/figures/figures_42_1.jpg", "caption": "Figure 3: Pareto frontier of Jenergy VS. Jactual of different methods for 1D Burgers' equation.", "description": "This figure compares the performance of different methods for controlling the 1D Burgers' equation across three scenarios: partial observation with full control, full observation with partial control, and partial observation with partial control.  The Pareto frontier plots the trade-off between the energy cost (Jenergy) and the actual control error (Jactual).  DiffPhyCon consistently shows superior performance, achieving lower actual error for a given energy budget, particularly in scenarios with partial observations.", "section": "4 Experiments"}, {"figure_path": "MbZuh8L0Xg/figures/figures_46_1.jpg", "caption": "Figure 17: Results of different \u03b3 in DiffPhyCon on 2D jellyfish movement control task.", "description": "This figure visualizes the impact of the hyperparameter \u03b3 (prior reweighting intensity) on the performance of the DiffPhyCon model for the 2D jellyfish movement control task. The x-axis represents the hyperparameter \u03b3\u2081, and the y-axis shows three different metrics: average speed (v\u0304), energy cost (1000*R(w)), and the control objective (obj).  The plot reveals how adjusting \u03b3\u2081 influences the model's ability to balance the control objective with speed and energy constraints.  The optimal \u03b3\u2081 appears to be around 0.8 - 1.0, resulting in a fast average speed and relatively lower energy consumption while achieving a good control objective. Values outside this range show a significant decrease in average speed, while values less than 0.6 show the model is overly constrained by the prior distribution, resulting in suboptimal performance.  The plot shows a Pareto frontier-type relationship between these three objectives.", "section": "L Effect of Hyperparameters"}, {"figure_path": "MbZuh8L0Xg/figures/figures_49_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure illustrates the overall workflow of the DiffPhyCon model.  The training phase involves learning a joint probability distribution over system trajectories (u) and control sequences (w), as well as a prior distribution of control sequences. The inference phase utilizes this learned distribution, along with prior reweighting and guidance, to generate near-optimal control sequences. Finally, the evaluation phase assesses the quality of the generated sequences.", "section": "3 Method"}, {"figure_path": "MbZuh8L0Xg/figures/figures_50_1.jpg", "caption": "Figure 1: Overview of DiffPhyCon. The figure depicts the training (top), inference (bottom left), and evaluation (bottom right) of DiffPhyCon. Orange and blue colors respectively represent models learning the joint distribution pe(u, w) and the prior distribution pf(w). Through prior reweighting and guidance, DiffPhyCon is capable of generating superior control sequences.", "description": "This figure shows a schematic overview of the DiffPhyCon method. It illustrates the training phase, where models learn the joint distribution of states and controls and the prior distribution of controls. The inference phase uses the learned models with prior reweighting to generate optimal control sequences. Finally, the evaluation phase assesses the quality of generated control sequences.", "section": "3 Method"}]