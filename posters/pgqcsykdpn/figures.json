[{"figure_path": "pgQCsyKdpN/figures/figures_1_1.jpg", "caption": "Figure 1: AdaptiveISP takes a raw image as input and automatically generates an optimal ISP pipeline {M} and the associated ISP parameters {\u0398} to maximize the detection performance for any given pre-trained object detection network with deep reinforcement learning. AdapativeISP achieved mAP@0.5 of 71.4 on the dataset LOD dataset, while a baseline method [34] with a fixed ISP pipeline and optimized parameters can only achieve mAP@0.5 of 70.1. Note that AdaptiveISP predicts the ISP for the image captured under normal light requires a CCM module, while the ISP for the image captured under low light requires a Desaturation module.", "description": "This figure illustrates the AdaptiveISP framework.  AdaptiveISP takes a raw image as input and uses reinforcement learning to automatically determine the optimal Image Signal Processing (ISP) pipeline and parameters for a given object detection task. The figure shows examples of ISP pipelines generated for images under normal and low light conditions, highlighting the adaptability of the system.  Quantitative results demonstrate the superior performance of AdaptiveISP compared to a baseline method with a fixed ISP pipeline.", "section": "1 Introduction"}, {"figure_path": "pgQCsyKdpN/figures/figures_3_1.jpg", "caption": "Figure 2: Overview of our method. The ISP configuration process is conceptualized as a Markov Decision Process, where a CNN-based policy network predicts the selection of ISP modules and their parameters. Concurrently, a CNN-based value network estimates the state value. The YOLO-v3 [31] is employed to calculate the reward for the current policy. The entire system is optimized using the actor-critic algorithm [15, 23].", "description": "This figure illustrates the AdaptiveISP framework.  The ISP configuration process is modeled as a Markov Decision Process (MDP). At each stage, a CNN-based policy network takes the current image state as input and outputs the optimal ISP module and its parameters (action).  A CNN-based value network estimates the value of the state. The YOLOv3 object detection model provides a reward based on the detection performance after applying the chosen ISP module. The actor-critic algorithm is used to train both the policy and value networks, optimizing the entire system to select an optimal sequence of ISP modules for maximum detection accuracy.", "section": "3.1 Problem Formulation of AdaptiveISP"}, {"figure_path": "pgQCsyKdpN/figures/figures_6_1.jpg", "caption": "Figure 3: Object detection visualization results on LOD dataset. Our method outperforms the state-of-the-art methods [34, 29, 38, 33] in terms of missed detection and false detection. The methods with fixed pipelines or fixed parameters struggle to effectively handle varying noise levels and brightness scenarios.", "description": "This figure shows a comparison of object detection results on the Low-light Object Detection (LOD) dataset.  The top row shows images with varying lighting and noise conditions. The bottom row shows the corresponding object detection results using different methods, including the proposed AdaptiveISP and several state-of-the-art baselines. The results highlight AdaptiveISP's superior performance, particularly in handling challenging lighting conditions and noise.", "section": "4.1 Results"}, {"figure_path": "pgQCsyKdpN/figures/figures_7_1.jpg", "caption": "Figure 3: Object detection visualization results on LOD dataset. Our method outperforms the state-of-the-art methods [34, 29, 38, 33] in terms of missed detection and false detection. The methods with fixed pipelines or fixed parameters struggle to effectively handle varying noise levels and brightness scenarios.", "description": "This figure visualizes the object detection results of different methods on the Low-Light Object Detection (LOD) dataset.  The top row shows images with a kite, and the bottom row shows images of a bridge. Each column represents a different method: Hyperparameter Optimization, Attention-aware Learning, ReconfigISP, Refactoring ISP, and the proposed AdaptiveISP method. The figure demonstrates that AdaptiveISP significantly outperforms the other methods in accurately detecting objects, even in challenging low-light conditions with varying noise and brightness levels.  Methods with fixed ISP pipelines or fixed parameters are shown to struggle with these conditions.", "section": "4.1 Results"}, {"figure_path": "pgQCsyKdpN/figures/figures_8_1.jpg", "caption": "Figure 1: AdaptiveISP takes a raw image as input and automatically generates an optimal ISP pipeline {M} and the associated ISP parameters {\u0398} to maximize the detection performance for any given pre-trained object detection network with deep reinforcement learning. AdapativeISP achieved mAP@0.5 of 71.4 on the dataset LOD dataset, while a baseline method [34] with a fixed ISP pipeline and optimized parameters can only achieve mAP@0.5 of 70.1. Note that AdaptiveISP predicts the ISP for the image captured under normal light requires a CCM module, while the ISP for the image captured under low light requires a Desaturation module.", "description": "This figure illustrates the AdaptiveISP framework.  AdaptiveISP takes a raw image as input and uses deep reinforcement learning to automatically determine the optimal ISP pipeline and parameters for a given object detection task. The figure shows that AdaptiveISP dynamically adjusts its pipeline based on the input image (e.g., using a CCM module for normal lighting and a Desaturation module for low light), outperforming a baseline approach with a fixed ISP pipeline.  The chart on the right shows the improvement in mean average precision (mAP) at IoU=0.5 as the number of ISP stages increases.", "section": "1 Introduction"}, {"figure_path": "pgQCsyKdpN/figures/figures_15_1.jpg", "caption": "Figure 6: Visualization results for image quality and object detection tasks on the raw COCO dataset. Image quality tasks and object detection tasks have distinct requirements for ISP.", "description": "This figure shows a comparison of image processing pipelines for image quality and object detection tasks. The top row demonstrates the steps of a pipeline optimized for image quality, starting from a raw input image and progressing through gamma correction, tone mapping, contrast adjustment, and color correction. The resulting image exhibits enhanced visual appeal.  The bottom row shows the steps for a pipeline designed for object detection, starting with the same raw input. This pipeline employs different modules, namely Gamma correction, CCM, tone mapping, and sharpen/blur.  The output in this case is optimized for effective object detection rather than visual appeal.  The key takeaway is that different computer vision tasks (image quality versus object detection) require distinct image signal processing (ISP) pipelines.", "section": "A.6 Comparison with Image Quality Task"}, {"figure_path": "pgQCsyKdpN/figures/figures_15_2.jpg", "caption": "Figure 3: Object detection visualization results on LOD dataset. Our method outperforms the state-of-the-art methods [34, 29, 38, 33] in terms of missed detection and false detection. The methods with fixed pipelines or fixed parameters struggle to effectively handle varying noise levels and brightness scenarios.", "description": "This figure visualizes object detection results on the Low-light Object Detection (LOD) dataset.  It compares the performance of AdaptiveISP against several state-of-the-art methods.  The results show that AdaptiveISP significantly reduces missed and false detections compared to other methods that use fixed ISP pipelines or parameters. This improved performance is particularly noticeable in scenarios with varying levels of noise and brightness, highlighting AdaptiveISP's adaptability to dynamic lighting conditions.", "section": "4.1 Results"}, {"figure_path": "pgQCsyKdpN/figures/figures_16_1.jpg", "caption": "Figure 3: Object detection visualization results on LOD dataset. Our method outperforms the state-of-the-art methods [34, 29, 38, 33] in terms of missed detection and false detection. The methods with fixed pipelines or fixed parameters struggle to effectively handle varying noise levels and brightness scenarios.", "description": "This figure visualizes the object detection results of different methods on the LOD dataset.  It highlights the superior performance of the proposed AdaptiveISP method compared to four state-of-the-art baselines (Hyperparameter Optimization [34], Attention-aware Learning [29], ReconfigISP [38], and Refactoring ISP [33]). The visualization shows that AdaptiveISP achieves better results in terms of both missed and false detections, especially in challenging scenarios with varying noise levels and brightness.  The baselines, using fixed pipelines or parameters, struggle to accurately detect objects under these varied conditions, demonstrating the advantage of AdaptiveISP's dynamic adaptation.", "section": "4.1 Results"}, {"figure_path": "pgQCsyKdpN/figures/figures_16_2.jpg", "caption": "Figure 1: AdaptiveISP takes a raw image as input and automatically generates an optimal ISP pipeline {M} and the associated ISP parameters {\u0398i} to maximize the detection performance for any given pre-trained object detection network with deep reinforcement learning. AdapativeISP achieved mAP@0.5 of 71.4 on the dataset LOD dataset, while a baseline method [34] with a fixed ISP pipeline and optimized parameters can only achieve mAP@0.5 of 70.1. Note that AdaptiveISP predicts the ISP for the image captured under normal light requires a CCM module, while the ISP for the image captured under low light requires a Desaturation module.", "description": "This figure illustrates the AdaptiveISP framework.  It takes a raw image as input and uses deep reinforcement learning to automatically determine the optimal Image Signal Processor (ISP) pipeline and parameters for object detection. The optimal pipeline dynamically adapts based on image characteristics (e.g., lighting conditions). The figure shows examples of ISP pipelines generated for images under different lighting conditions, highlighting the adaptive nature of the system.  Performance is shown to improve over existing state-of-the-art approaches.", "section": "1 Introduction"}, {"figure_path": "pgQCsyKdpN/figures/figures_18_1.jpg", "caption": "Figure 10: The network architecture of the policy and value network in our method. The extra channel (EC) represents additional input that needs to be supplemented.", "description": "This figure shows the architecture of both the policy and value networks used in the AdaptiveISP method.  The policy network predicts the selection of ISP modules and their parameters, while the value network estimates the state value. Both networks utilize convolutional layers (Conv-BN-LReLU) to extract features from the input image, with the number of channels increasing at each convolutional layer. The input to the networks includes the image features (64x64x3) and additional information provided via the extra channel (EC). The policy network outputs the probabilities of selecting different ISP modules (softmax activation) and the associated parameters (tanh/sigmoid activation), while the value network outputs a single scalar representing the state value.  The specific number of channels in the output layer is determined by the number of ISP modules and the number of parameters per module, respectively. ", "section": "3.3 Implementation Details"}, {"figure_path": "pgQCsyKdpN/figures/figures_18_2.jpg", "caption": "Figure 1: AdaptiveISP takes a raw image as input and automatically generates an optimal ISP pipeline {M} and the associated ISP parameters {\u0398i} to maximize the detection performance for any given pre-trained object detection network with deep reinforcement learning. AdapativeISP achieved mAP@0.5 of 71.4 on the dataset LOD dataset, while a baseline method [34] with a fixed ISP pipeline and optimized parameters can only achieve mAP@0.5 of 70.1. Note that AdaptiveISP predicts the ISP for the image captured under normal light requires a CCM module, while the ISP for the image captured under low light requires a Desaturation module.", "description": "This figure illustrates the AdaptiveISP framework. It takes a raw image as input and uses deep reinforcement learning to automatically generate an optimal image signal processing (ISP) pipeline and parameters. The generated pipeline is tailored to maximize the object detection performance for a given pre-trained object detection network. The figure demonstrates AdaptiveISP's adaptability to different lighting conditions (normal and low light), showcasing its ability to dynamically adjust the ISP pipeline and parameters to improve performance.  The results show improved mean Average Precision (mAP) compared to a baseline method using a fixed ISP pipeline and optimized parameters.", "section": "1 Introduction"}, {"figure_path": "pgQCsyKdpN/figures/figures_19_1.jpg", "caption": "Figure 1: AdaptiveISP takes a raw image as input and automatically generates an optimal ISP pipeline {M} and the associated ISP parameters {\u0398} to maximize the detection performance for any given pre-trained object detection network with deep reinforcement learning. AdapativeISP achieved mAP@0.5 of 71.4 on the dataset LOD dataset, while a baseline method [34] with a fixed ISP pipeline and optimized parameters can only achieve mAP@0.5 of 70.1. Note that AdaptiveISP predicts the ISP for the image captured under normal light requires a CCM module, while the ISP for the image captured under low light requires a Desaturation module.", "description": "This figure illustrates the AdaptiveISP architecture and its process. It shows how AdaptiveISP takes a raw image as input and uses deep reinforcement learning to automatically determine the optimal ISP pipeline (sequence of modules) and its parameters for a given object detection task.  The example shows different optimal pipelines (and parameters) for images taken in normal and low light.  AdaptiveISP outperforms a fixed ISP baseline by achieving a higher mean Average Precision (mAP) at 0.5 IoU threshold.", "section": "1 Introduction"}]