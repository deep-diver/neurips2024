[{"figure_path": "q9RLsvYOB3/figures/figures_3_1.jpg", "caption": "Figure 1: Pipeline of FlexPlanner. Under the Actor-Critic framework, taking the multi-modality representation as input, the policy network consists of three sub-modules, responsible for determining the position, layer, and aspect ratio of blocks. Alignment mask and position mask are incorporated to filter out invalid positions where constraints (alignment, non-overlap, etc.) are not satisfied.", "description": "This figure illustrates the architecture of FlexPlanner, a deep reinforcement learning model for 3D floorplanning.  The model uses a multi-modal input (vision, graph, and sequence) which is processed by a shared encoder. The resulting embedding is fed into three separate decision modules (position, layer, and aspect ratio). These modules output probabilities, which are then masked to ensure that the actions satisfy constraints (such as alignment and no-overlap). The masked probabilities are then used by the Actor-Critic framework to optimize the floorplan.", "section": "Methodology"}, {"figure_path": "q9RLsvYOB3/figures/figures_3_2.jpg", "caption": "Figure 2: Demonstration of alignment. In (a), the green region will be occupied by the block to place, and the yellow region is occupied by its alignment partner block which has already been placed. X-, Y-dimensional and full alignment are shown in (b)(c)(d). Only (x, y) satisfying alnalny \u2265 alnm are valid positions shown in (e), and this binary mask can be incorporated to filter out invalid positions.", "description": "This figure demonstrates the concept of alignment in the 3D floorplanning task.  It shows how the alignment mask is generated. The green area in (a) represents the area of the block to be placed, while the yellow area shows the area already occupied by its alignment partner.  Subfigures (b), (c), and (d) illustrate X-axis, Y-axis and full alignment scores, respectively. Finally, (e) shows a binary mask indicating valid positions where the alignment constraint is met, which is used to filter out invalid positions.", "section": "3 Methodology"}, {"figure_path": "q9RLsvYOB3/figures/figures_7_1.jpg", "caption": "Figure 3: Our 3D floorplan result. Two blocks with the same index and the same color on different dies form an alignment pair, which roughly locate on the same positions and share a 2D common projected area. Gray blocks mean they do not have alignment partners.", "description": "This figure shows two examples of 3D floorplans generated by the proposed FlexPlanner method. Each block is assigned a unique index and color. Blocks with the same index and color across different dies represent an alignment pair, indicating that they are aligned vertically and share a common projected 2D area. Gray blocks indicate modules without any alignment partners. This visualization demonstrates the algorithm's capability to handle alignment constraints effectively in 3D floorplanning.", "section": "4.2 Comparison with Baselines"}, {"figure_path": "q9RLsvYOB3/figures/figures_7_2.jpg", "caption": "Figure 4: Visualization of cross-die block alignment on circuit n50. Two blocks with the same index forms an alignment pair. For a pair with block i, j, we calculate individual alignment score aln(i, j) according to Eq. 1. Green means these two blocks are aligned (aln(i, j) \u2265 0.5) while red means not aligned (aln(i, j) < 0.5). Total alignment score is calculated according to Alg. 3 in Appendix G.1. It demonstrates that our method achieves much better alignment score than other baselines.", "description": "This figure compares the cross-die alignment performance of the proposed FlexPlanner method against three baselines (GraphPlace, DeepPlace, and Wiremask-BBO) on circuit n50.  It visually represents the alignment results using color-coded blocks: green for aligned blocks (alignment score \u2265 0.5), red for non-aligned blocks (alignment score < 0.5), and gray for blocks without alignment partners. The figure clearly shows that FlexPlanner achieves significantly higher alignment scores compared to the baselines.", "section": "4.2 Comparison with Baselines"}, {"figure_path": "q9RLsvYOB3/figures/figures_7_3.jpg", "caption": "Figure 4: Visualization of cross-die block alignment on circuit n50. Two blocks with the same index forms an alignment pair. For a pair with block i, j, we calculate individual alignment score aln(i, j) according to Eq. 1. Green means these two blocks are aligned (aln(i, j) \u2265 0.5) while red means not aligned (aln(i, j) < 0.5). Total alignment score is calculated according to Alg. 3 in Appendix G.1. It demonstrates that our method achieves much better alignment score than other baselines.", "description": "This figure compares the alignment performance of the proposed FlexPlanner method against several baselines (GraphPlace, DeepPlace, and Wiremask-BBO) on circuit n50.  The visualization uses color-coding to represent alignment success (green) or failure (red) for pairs of blocks across different dies.  The overall alignment score for each method is also displayed, highlighting FlexPlanner's superior performance.", "section": "4.2 Comparison with Baselines"}, {"figure_path": "q9RLsvYOB3/figures/figures_8_1.jpg", "caption": "Figure 5: Training curve between fine-tune (based on circuit n100) and training from scratch.", "description": "This figure shows the training curves of the FlexPlanner model on circuits n200 and n300, comparing two training strategies: fine-tuning from a pre-trained model on circuit n100 and training from scratch.  The plots display the alignment score and HPWL (half-perimeter wire length) over training epochs for both strategies.  The shaded areas represent the standard deviation across multiple training runs.  The results demonstrate the effectiveness of fine-tuning, showcasing faster convergence and potentially better performance compared to training from scratch.", "section": "4.3 Transferable 3D Floorplanning"}, {"figure_path": "q9RLsvYOB3/figures/figures_9_1.jpg", "caption": "Figure 6: (a) Influence of the alignment mask. As the input feature, it plays a critical role in capturing the alignment information. As a constraint, it reduces the action space and accelerates the training process. (b) Influence of rewards on layer decision, shown in circuit n100 with episode length L = 100 and |D| = 2 dies. zt is the determined layer index at step t, and Z = \u03a3t=1L/2zt is the layer index sum of the first half of the placing sequence. Z \u2192 0 or Z \u2192 L/2 means degeneration to die-by-die synchronous layer decision (almost all die 0 or 1 in the first half episode).", "description": "This figure demonstrates the impact of the alignment mask and reward function on the training process. The left subplot shows that using the alignment mask as both input and constraint leads to better alignment results compared to using it as only input or constraint, or not using it at all. The right subplot illustrates how the reward function influences layer decision-making, showing that the proposed reward function prevents the model from converging to a suboptimal solution.", "section": "4.4 Ablation Studies"}, {"figure_path": "q9RLsvYOB3/figures/figures_9_2.jpg", "caption": "Figure 6: (a) Influence of the alignment mask. As the input feature, it plays a critical role in capturing the alignment information. As a constraint, it reduces the action space and accelerates the training process. (b) Influence of rewards on layer decision, shown in circuit n100 with episode length L = 100 and |D| = 2 dies. zt is the determined layer index at step t, and Z = \u03a3t=1L/2zt is the layer index sum of the first half of the placing sequence. Z \u2192 0 or Z \u2192 L/2 means degeneration to die-by-die synchronous layer decision (almost all die 0 or 1 in the first half episode).", "description": "This figure demonstrates the impact of the alignment mask and reward function in the proposed 3D floorplanning method. The left subplot shows how using the alignment mask as both input and constraint significantly improves alignment. The right subplot illustrates the effect of different reward functions on layer decision-making, showcasing the effectiveness of the proposed reward design in preventing premature convergence to suboptimal solutions.", "section": "4.4 Ablation Studies"}, {"figure_path": "q9RLsvYOB3/figures/figures_18_1.jpg", "caption": "Figure 3: Our 3D floorplan result. Two blocks with the same index and the same color on different dies form an alignment pair, which roughly locate on the same positions and share a 2D common projected area. Gray blocks mean they do not have alignment partners.", "description": "This figure shows the 3D floorplanning results obtained by FlexPlanner for two example circuits (n50 and n100).  Blocks with the same index and color across multiple dies represent alignment pairs. These blocks aim to occupy similar positions in their respective dies.  Gray blocks indicate no alignment partners.", "section": "4.2 Comparison with Baselines"}]