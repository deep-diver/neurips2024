[{"figure_path": "CECVgSZbLW/figures/figures_4_1.jpg", "caption": "Figure 1: Comparing CATS (left) and PATS (right). The main distinction is in the Q value function backup (SimulateQ) and action selection function (SelectAction); the two methods are identical in other procedures. In CATS, we init (a\u00ba(s, a), . . ., aN(s, a)) = (1, ..., 1) and in PATS, S(s, a) = (1), a(s, a) = (\u00d8) for each s, a.", "description": "This figure shows the pseudocodes for the two proposed algorithms: CATS and PATS.  The algorithms are largely similar except for the \n`SimulateQ` and `SelectAction` functions. The `SimulateQ` function updates the Q-value distribution, and the `SelectAction` function selects the next action based on the updated distribution. CATS uses a categorical distribution and PATS uses a particle-based distribution to model Q-values. The figure highlights the key differences in these two functions between the two proposed algorithms.", "section": "3.2 Value Backup"}, {"figure_path": "CECVgSZbLW/figures/figures_6_1.jpg", "caption": "Figure 1: Comparing CATS (left) and PATS (right). The main distinction is in the Q value function backup (SimulateQ) and action selection function (SelectAction); the two methods are identical in other procedures. In CATS, we init (a\u00ba(s, a),..., aN(s, a)) = (1,...,1) and in PATS, S(s, a) = (1), a(s, a) = (\u00d8) for each s, a.", "description": "This figure compares the CATS and PATS algorithms, highlighting their key differences in the Q-value function backup and action selection mechanisms. Both algorithms share the same structure for other procedures. The initialization of parameters also differs between the two algorithms. CATS initializes categorical distributions with uniform probabilities, whereas PATS initializes particle-based distributions with a single particle.", "section": "3.2 Value Backup"}, {"figure_path": "CECVgSZbLW/figures/figures_8_1.jpg", "caption": "Figure 3: Performance of CATS and PATS in SyntheticTree.", "description": "This figure compares the performance of various Monte Carlo Tree Search (MCTS) algorithms, including CATS and PATS, on a synthetic tree problem.  The x-axis represents the number of simulations, and the y-axis represents the value estimation error at the root node. The plot shows that CATS and PATS achieve significantly lower error rates compared to other algorithms (UCT, Power-UCT, DNG, Fixed-Depth-MCTS, MENTS, RENTS, TENTS, BTS), demonstrating faster convergence and improved value estimation accuracy.", "section": "5 Experiments"}]