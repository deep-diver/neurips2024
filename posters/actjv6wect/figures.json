[{"figure_path": "Actjv6Wect/figures/figures_4_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure presents the results of comparing GREEDYCAPTURE to k-means++ and k-medoids clustering algorithms across different values of k (number of clusters) using four fairness metrics (core violation, FJR violation, both for average and maximum loss) and three traditional clustering objectives (average within-cluster distance, k-means objective, k-medoids objective).  The results reveal that GREEDYCAPTURE provides significantly better fairness approximations than k-means++ and k-medoids across all four fairness metrics. This advantage comes at a modest cost in accuracy as measured by the three clustering objectives. ", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_8_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure presents the results of experiments on the Census Income dataset. It shows the core violation, FJR violation, and average within-cluster distance for three different clustering algorithms: GREEDYCAPTURE, k-means++, and k-medoids.  The results are shown for different values of k (the number of clusters). The figure demonstrates that GREEDYCAPTURE significantly outperforms k-means++ and k-medoids in terms of fairness (core violation and FJR violation) with a modest loss in accuracy (average within-cluster distance).", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_8_2.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure compares the performance of three clustering algorithms (Greedy Capture, k-means++, and k-medoids) on the Census Income dataset across different values of k (number of clusters).  It shows core violation, FJR violation, and average within-cluster distance for both average and maximum loss functions.  Greedy Capture consistently shows lower core and FJR violations across all k, demonstrating its improved fairness compared to traditional algorithms.  While Greedy Capture's accuracy (as measured by the average within-cluster distance) is slightly lower than the other two, the differences are not substantial, suggesting a reasonable trade-off between fairness and accuracy.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_14_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of experiments on the Census Income Dataset, comparing the performance of GREEDYCAPTURE with k-means++ and k-medoids.  It shows how these algorithms perform across various metrics, including core violation (both average and maximum loss), FJR violation (both average and maximum loss), and average within-cluster distance. The graphs illustrate that GREEDYCAPTURE achieves a considerably better approximation of both core and FJR compared to the other clustering algorithms. While there is a slight cost to accuracy, as measured by the within-cluster distance, GREEDYCAPTURE significantly improves fairness.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_18_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of the Census Income dataset experiment, comparing the performance of GREEDYCAPTURE, k-means++, and k-medoids across different values of k (number of clusters).  It displays four plots related to fairness metrics: core violation and FJR (Fully Justified Representation) violation, both for average and maximum losses. An additional plot shows average within-cluster distance, a common clustering accuracy metric.  The results show GREEDYCAPTURE to be significantly fairer than the other two algorithms, achieving values closer to the ideal of 1 for FJR violation, while maintaining reasonably good accuracy in terms of average within-cluster distance.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents a comparison of the fairness and accuracy of three clustering algorithms: GREEDYCAPTURE, k-means++, and k-medoids, on the Census Income dataset.  Fairness is measured using core violation and FJR violation, with respect to both average and maximum loss. Accuracy is measured using average within-cluster distance. The results reveal that GREEDYCAPTURE offers significantly better fairness guarantees than the other two algorithms across various values of k (number of clusters), with a modest cost in accuracy.  This empirically demonstrates GREEDYCAPTURE's superior fairness performance.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_2.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure shows the results of the Census Income dataset, comparing the performance of GREEDYCAPTURE, k-means++, and k-medoids across different values of k (number of clusters). Four fairness metrics (core violation and FJR violation for both average and maximum losses) and three accuracy metrics (average within-cluster distance, k-means objective, and k-medoids objective) are shown.  The results highlight that GREEDYCAPTURE achieves significantly better fairness than the other two algorithms, at a relatively modest cost in accuracy.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_3.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure shows the performance of three clustering algorithms (GREEDYCAPTURE, k-means++, and k-medoids) on the Census Income dataset across different numbers of clusters (k).  It presents four fairness metrics (core violation and FJR violation for both average and maximum loss) and one accuracy metric (average within-cluster distance). The results demonstrate that GREEDYCAPTURE consistently achieves significantly better fairness compared to the other two algorithms, while incurring only a modest loss in accuracy.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_4.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of experiments conducted on the Census Income Dataset. It compares the performance of three clustering algorithms: GREEDYCAPTURE, k-means++, and k-medoids. The comparison is done using four fairness metrics: core violation (average loss), FJR violation (average loss), core violation (maximum loss), and FJR violation (maximum loss).  Additionally, it shows the average within-cluster distance for each algorithm as a measure of clustering accuracy. The x-axis represents the number of clusters (k), and the y-axis represents the values of the metrics. The results indicate that GREEDYCAPTURE achieves significantly better fairness compared to the other two algorithms, with a relatively modest cost in terms of accuracy.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_5.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of an empirical comparison of three clustering algorithms (Greedy Capture, k-means++, and k-medoids) on the Census Income dataset. The comparison is done using four fairness metrics (core violation with average loss, FJR violation with average loss, core violation with maximum loss, FJR violation with maximum loss) and a common clustering objective (average within-cluster distance).  The results show that Greedy Capture achieves significantly better fairness than the other two algorithms across different numbers of clusters (k), while incurring only a modest cost in accuracy.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_6.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of the comparison of three clustering algorithms (GREEDYCAPTURE, k-means++, and k-medoids) on the Census Income dataset. The plots show the core violation and FJR violation for both average and maximum loss, as well as the average within-cluster distance. The results indicate that GREEDYCAPTURE achieves significantly better fairness (lower core and FJR violations) compared to k-means++ and k-medoids, while incurring only a modest loss in terms of traditional clustering objectives.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_19_7.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure shows the results of the core violation and FJR violation for three different clustering algorithms (GREEDYCAPTURE, k-means++, and k-medoids) on the Census Income dataset.  It compares the performance of these algorithms in terms of average loss and maximum loss for different numbers of clusters (k).  Subplots (a) and (b) show average loss, (c) and (d) show maximum loss, and (e) shows the average within-cluster distance.  The results indicate GREEDYCAPTURE consistently outperforms the others in terms of fairness (lower core and FJR violations) while having a modest loss in terms of common clustering objectives (average within-cluster distance).", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_1.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of the experiments performed on the Census Income dataset. It compares the performance of three clustering algorithms: GREEDYCAPTURE, k-means++, and k-medoids, across different values of k (the number of clusters).  The figure displays four fairness metrics (core violation and FJR violation for both average and maximum loss), and three common clustering objectives (average within-cluster distance, k-means objective, and k-medoids objective).  The results show that GREEDYCAPTURE provides better fairness guarantees, achieving FJR values close to 1, in comparison to the other methods while incurring only a modest loss in accuracy (as measured by the other objectives).", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_2.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents a comparison of four fairness metrics (core violation with average loss, FJR violation with average loss, core violation with maximum loss, and FJR violation with maximum loss) and one accuracy metric (average within-cluster distance) across three algorithms (Greedy Capture, k-means++, and k-medoids) on the Census Income dataset for varying numbers of clusters (k).  The results show that Greedy Capture consistently outperforms the other two algorithms in terms of fairness, although there is a small increase in average within-cluster distance. This demonstrates that Greedy Capture achieves better fairness properties without incurring a significant cost in terms of the common clustering objective.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_3.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure shows the performance of three clustering algorithms (Greedy Capture, k-means++, and k-medoids) on the Census Income dataset across different values of k (number of clusters).  It presents core and FJR (Fully Justified Representation) violations for both average and maximum loss functions.  It also shows the average within-cluster distance (a common clustering objective).  The results demonstrate that GREEDYCAPTURE achieves significantly better fairness than the other algorithms while incurring only a modest loss in the standard clustering objective.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_4.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure displays the results of an experiment comparing three clustering algorithms (Greedy Capture, k-means++, and k-medoids) on the Census Income dataset.  The plots show core violation and FJR violation for both average and maximum loss functions, as well as the average within-cluster distance across different numbers of clusters (k).  The results highlight the superior fairness of the Greedy Capture algorithm compared to the traditional methods, while showing a modest compromise in terms of common clustering objectives.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_5.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure presents a comparison of different clustering algorithms (Greedy Capture, k-means++, and k-medoids) across various fairness metrics (core violation, FJR violation) and a common clustering objective (average within-cluster distance).  It visualizes how the fairness and accuracy of these algorithms vary as the number of clusters (k) changes.  The results are based on the Census Income dataset, illustrating the relative performance of these algorithms in terms of both fairness guarantees and standard clustering quality.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_6.jpg", "caption": "Figure 1: Census Income Dataset", "description": "This figure presents the results of comparing GREEDYCAPTURE, k-means++, and k-medoids clustering algorithms on the Census Income dataset.  It shows the core and FJR violations for both average and maximum loss functions across varying numbers of clusters (k).  Additionally, it displays the average within-cluster distance, k-means objective, and k-medoids objective, to assess the trade-off between fairness and standard clustering performance metrics.  The results demonstrate that GREEDYCAPTURE achieves significantly better fairness guarantees compared to the other algorithms, with a modest compromise on traditional clustering objectives.", "section": "5 Experiments"}, {"figure_path": "Actjv6Wect/figures/figures_20_7.jpg", "caption": "Figure 1: Census Income Dataset", "description": "The figure presents a comparison of four fairness metrics (core violation, average loss; FJR violation, average loss; core violation, maximum loss; FJR violation, maximum loss) and one accuracy metric (average within-cluster distance) across three clustering algorithms (Greedy Capture, k-means++, k-medoids). The x-axis represents the number of clusters (k), and the y-axis represents the value of each metric.  The results show that Greedy Capture consistently outperforms k-means++ and k-medoids in terms of fairness, while incurring only a modest loss in terms of accuracy.", "section": "5 Experiments"}]