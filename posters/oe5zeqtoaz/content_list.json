[{"type": "text", "text": "Classifier-guided Gradient Modulation for Enhanced Multimodal Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zirun Guo1,2, Tao $\\mathbf{Jin}^{1}$ \u2020, Jingyuan Chen1, Zhou Zhao1,2 ", "page_idx": 0}, {"type": "text", "text": "Zhejiang University, 2 Shanghai AI Lab zrguo.cs@gmail.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Multimodal learning has developed very fast in recent years. However, during the multimodal training process, the model tends to rely on only one modality based on which it could learn faster, thus leading to inadequate use of other modalities. Existing methods to balance the training process always have some limitations on the loss functions, optimizers and the number of modalities and only consider modulating the magnitude of the gradients while ignoring the directions of the gradients. To solve these problems, in this paper, we present a novel method to balance multimodal learning with Classifier-Guided Gradient Modulation (CGGM), considering both the magnitude and directions of the gradients. We conduct extensive experiments on four multimodal datasets: UPMC-Food 101, CMU-MOSI, IEMOCAP and BraTS 2021, covering classification, regression and segmentation tasks. The results show that CGGM outperforms all the baselines and other stateof-the-art methods consistently, demonstrating its effectiveness and versatility. Our code is available at https://github.com/zrguo/CGGM. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Humans perceive the world in a multimodal way, such as sight, touch and sound. These multimodal features can provide comprehensive information to help us understand and explore the environment. Recent years have witnessed great success in multimodal learning, such as visual question answering [2], multimodal sentiment analysis [18] and multimodal retrieval [26, 13]. ", "page_idx": 0}, {"type": "text", "text": "Although multimodal learning has made significant progress in recent years, inadequate use of different modality information during training remains a challenge. Theoretically, for example, Wu et al. [25] put forward the greedy learner hypothesis which states that a multimodal model learns to rely on one of the input modalities, based on which it could learn faster, and does not continue to learn to use other modalities. Huang et al. [12] find that during joint training, multiple modalities will compete with each other and some modalities will fail in the competition. Experimentally, on some multimodal datasets, there is little improvement in accuracy between training with only one modality and training with all modalities [18, 21]. These theoretical analyses and experimental results demonstrate the inefficiency of multimodal learning to fully utilize and integrate information from different modalities. ", "page_idx": 0}, {"type": "text", "text": "To deal with this problem, recent studies [25, 17, 15, 8, 28, 9] investigate the training process of multimodal learning and propose gradient modulation strategies to better integrate the information of different modalities and balance the training process in some situations. However, all of these methods can not be applied easily for some limitations. For example, Wu et al. [25], Peng et al. [17], Li et al. [15] and Hua et al. [11] propose balancing methods based on cross-entropy loss for classification tasks. For regression tasks or other tasks, we can not use these strategies. Besides, most of these methods can just deal with situations where there are only two modalities. For example, Wu et al. [25] propose the conditional learning speed which is difficult to calculate and employ if there are more than two modalities. For situations where there are more modalities, these methods can not be applied. Furthermore, most of these methods only consider modulating the magnitude of the gradients while ignoring the directions of the gradients. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Based on the above observations, in this paper, we propose a novel method to balance multimodal learning with Classifier-Guided Gradient Modulation (CGGM). In CGGM, we consider a more general situation with no limitations on the type of tasks, optimizers, the number of modalities, etc. Additionally, we consider both the magnitude and directions of the gradients to fully boost the training process of multimodal learning. Specifically, we add classifiers to evaluate the utilization rate of each modality and obtain the unimodal gradients. Then, we leverage the utilization rate to adaptively modulate the magnitude of the gradients of encoders and use the unimodal gradients to instruct the model to optimize towards a better direction. ", "page_idx": 1}, {"type": "text", "text": "We conduct extensive experiments on four multimodal datasets: UPMC-Food 101 [23], CMUMOSI [27], IEMOCAP [3], and BraTS 2021 [1]. UPMC-Food 101 and IEMOCAP are classification tasks, CMU-MOSI is a regression task, and BraTS 2021 is a segmentation task. CGGM outperforms all the baselines and other state-of-the-art methods, demonstrating its effectiveness and universality. In summary, our contributions are as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose CGGM to balance multimodal learning by both considering the magnitude and direction of the gradients. \u2022 CGGM can be easily applied to many multimodal tasks and networks with no limitations on the type of tasks, optimizers, the number of modalities, etc. which indicates its versatility. \u2022 Our proposed CGGM brings consistent improvements to various tasks, including classification, regression and segmentation tasks. Extensive experiments show that CGGM outperforms other state-of-the-art methods, demonstrating its effectiveness. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Multimodal Learning. One of the main challenges of multimodal learning is how to effectively utilize and integrate the information from different modalities to complement each other. According to the fusion strategies, there are three main multimodal fusion strategies: early fusion, intermediate fusion and late fusion. In early fusion methods [16, 24], raw data from different modalities is combined via concatenation or other methods at the input level before being fed into a model. Intermediate fusion [14] methods combine data from different modalities at various intermediate processing stages within a model architecture. Late fusion [2, 18] methods process data from each modality independently through separate models and combine them at a later stage. In general, late fusion is the predominant method used in multimodal learning. The main reason [14] is that the architecture of each unimodal stream has been carefully designed over the years to achieve state-ofthe-art performance for each modality. Therefore, we can leverage these pre-trained models [5, 6] to achieve better results. Therefore, in this paper, our method is based on late fusion. ", "page_idx": 1}, {"type": "text", "text": "These fusion strategies are able to integrate information from different modalities effectively, but they have limited improvements to utilize information from different modalities to complement each other. In other words, they are not able to deal with the modality competition [12] or imbalanced multimodal learning. When the dominant modality is missing [10] or corrupted, the performance would degrade significantly. Different from these fusion strategies, our method aims to make relatively full use of the information of each modality and address the imbalanced multimodal learning. ", "page_idx": 1}, {"type": "text", "text": "Balanced Multimodal Learning. The inefficiency in fully utilizing and integrating information from multiple modalities poses a great challenge to the multimodal learning field. Some studies [18, 21] present that there is little improvement in accuracy between training with only one modality and training with all modalities. Wang et al. [22] show that multimodal models using multiple modalities can be even inferior to those using only one modality. To balance the multimodal learning process and fully utilize different modalities, a series of balanced multimodal learning methods [25, 17, 15, 8, 28, 9, 7, 11] are proposed. Wu et al. [25] propose the conditional learning speed to capture the relative learning speed between modalities and balance the learning process. Peng et al. [17] propose a gradient modulation strategy that adaptively controls the optimization of each modality via monitoring the discrepancy of their contribution towards the learning objective. More recently, Fan et al. [8] propose the prototypical modal rebalance strategy to introduce different learning strategies for different modalities. Li et al. [15] propose an adaptive gradient modulation method that can boost the performance of multimodal models with various fusion strategies. Hua et al. [11] dynamically adjust the learning objective with a reconcilement regularization against competition with the historical models. ", "page_idx": 1}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/4532663b78a1d490c21d2c134868d6a3eac1d0e54004bbb89d4a62b0aec0cd43.jpg", "img_caption": ["Figure 1: The overall architecture of CGGM. During the training stage, classifiers are introduced to calculate the directions of unimodal gradients and evaluation metrics. During the inference stage, the classifiers are discarded. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "However, all of these previous works have certain limitations and can only be used in some specific situations. For example, Wu et al. [25] propose conditional learning speed based on intermediate fusion strategy which makes it hard to apply to situations where there are more than two modalities or where the network is not based on intermediate fusion. Peng et al. [17], Fan et al. [8], Fu et al. [9], Li et al. [15] and Hua et al. [11] propose the balancing strategies with the assumption of the cross-entropy loss function mainly for classification. Particularly, Peng et al. [17] employ the SGD optimizer. Different from these methods, we consider a more general situation with no limitations on the number of modalities, the optimizer, the loss function and so on. Additionally, most of existing methods only consider the magnitude of the gradients and ignore the directions of the gradients. In contrast, we consider both of them. ", "page_idx": 2}, {"type": "text", "text": "3 Proposed Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Problem Settings ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Suppose there are $M$ modalities, referred to as $m_{1}$ $\\mathrm{~\\boldmath~\\psi~}_{1},\\,m_{2},\\,\\cdot\\,\\cdot\\,\\mathrm{~\\boldmath~\\cdot~}\\,,m_{M}$ . We denote the multimodal dataset as $\\dot{\\mathcal{D}}=\\{(x_{i},y_{i})\\}_{i=1}^{N}$ , where $N$ is the number of data in the dataset and $\\pmb{x}_{i}=(x_{i}^{m_{1}},x_{i}^{m_{2}},\\cdot\\cdot\\cdot\\,,x_{i}^{m_{M}})$ ", "page_idx": 2}, {"type": "text", "text": "We consider the most common structure (Figure 1) in multimodal models, where the inputs of different modalities are first fed into modality-specific encoders and then the representations of all modalities are inputted into a fusion module. We denote the encoder of modality $m_{i}$ as $\\phi_{i}$ where $i=1,2,\\cdots,M$ and the fusion module as $\\Omega$ . ", "page_idx": 2}, {"type": "text", "text": "For the forward propagation, the features are first inputted into the encoder: ", "page_idx": 2}, {"type": "equation", "text": "$$\nh_{i}=\\phi_{i}(x^{m_{i}})\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $h_{i}$ is the representation of modality $m_{i}$ . After obtaining the representations of all modalities, the fusion module is applied: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\hat{y}=\\mathcal{F}(\\Omega([h_{1},h_{2},\\cdot\\cdot\\cdot\\cdot,h_{M}]))\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\hat{y}$ is the prediction, $\\left[\\cdot\\cdot\\cdot\\right]$ is the concatenation operation, and $\\mathcal F(\\cdot)$ is the prediction head to predict the answer. $\\Omega(\\cdot)$ fuses the multimodal representations and outputs the fused feature as the prediction token. ", "page_idx": 2}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/1cb43b131b9f559598d7a49961ab9b97dc51ba2f812730518987fdfe13d45e2f.jpg", "img_caption": ["Figure 2: (a) Accuracy of each modality and the fusion. (b) Gradient magnitude of each modality. We use the Euclidean norm of the gradient vector to represent the gradient magnitude. (c) Gradient direction between each modality and their fusion. We use cosine similarity to represent the direction between two gradient vectors. We get all the results on the CMU-MOSI dataset. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3.2 Gradient Analysis ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To introduce CGGM, we first analyze the gradient updating process. We denote the loss function as $\\begin{array}{r}{\\mathcal{L}(\\theta)=\\frac{1}{N}\\sum_{i=1}^{N}\\ell(\\hat{y}_{\\theta}^{i},y^{i})}\\end{array}$ where $\\theta$ represents the parameters of the network, $\\hat{y}_{\\boldsymbol{\\theta}}^{i}$ is the prediction and $y^{i}$ is the ground truth. For simplicity, we use ${\\hat{y}}^{i}$ to represent the predictions in the following context. Different from previous methods which only consider cross-entropy loss [17, 8, 11], our $\\mathcal{L}$ can be cross-entropy loss, L1 loss or any other loss functions. With the Gradient Descent (GD) optimization method, the parameters of the fusion module $\\Omega$ and encoders $\\phi_{i}$ can be updated as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\theta_{t+1}^{\\Omega}=\\theta_{t}^{\\Omega}-\\alpha\\nabla_{\\theta^{\\Omega}}\\mathcal{L}(\\theta_{t}^{\\Omega})=\\theta_{t}^{\\Omega}-\\alpha\\frac{1}{N}\\sum_{n=1}^{N}\\left(\\frac{\\partial\\mathcal{F}}{\\partial\\Omega}\\right)^{\\top}\\frac{\\partial\\ell\\left(\\hat{y}^{n},y^{n}\\right)}{\\partial\\mathcal{F}}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "equation", "text": "$$\n\\theta_{t+1}^{\\phi_{i}}=\\theta_{t}^{\\phi_{i}}-\\alpha\\nabla_{\\theta^{\\phi_{i}}}\\mathcal{L}(\\theta_{t}^{\\phi_{i}})=\\theta_{t}^{\\phi_{i}}-\\alpha\\frac{1}{N}\\sum_{n=1}^{N}\\left(\\frac{\\partial\\mathcal{F}}{\\partial\\Omega}\\frac{\\partial\\Omega}{\\partial\\phi_{i}}\\right)^{\\top}\\frac{\\partial\\ell\\left(\\hat{y}^{n},y^{n}\\right)}{\\partial\\mathcal{F}}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\alpha$ is the learning rate, $N$ is batch size, and $t$ is the iteration. According to the chain rule used to find the gradient in backpropagation, the update of $\\phi_{i}$ will influence the update of $\\Omega$ , and vice versa. According to Figure 2(a) and 2(b), the gradient and the accuracy of the dominant modality will increase during the training process while the other two remain stable. Particularly, the gradient magnitude of the text modality increases very fast during the training process. This suggests the encoder of the dominant modality will be updated much faster than others, which makes $\\frac{\\ensuremath{\\mathrm{\\widetilde{\\partial}}}\\Omega}{\\ensuremath{\\partial\\phi}}$ much larger. This phenomenon can also be validated by previous works [8, 17, 25]. Besides, in Figure 2(c), we present the gradient direction between each modality and the fusion. We can observe that the similarity between audio modality and the multimodal fusion is less than 0, indicating that they optimize towards the opposite direction, thus hindering the gradient update for multimodal branch. Meanwhile, the similarity between text modality and the multimodal fusion is increasing, suggesting the optimization direction towards the dominant modality. With the progress of optimization, the encoder of the dominant modality can make relatively accurate predictions, which makes the fusion module $\\Omega$ only depend on this modality (both magnitude and direction as mentioned above), leaving other encoders under-optimized. ", "page_idx": 3}, {"type": "text", "text": "3.3 Classifier-guided Gradient Modulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.3.1 Gradient Magnitude Modulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "As we discuss in Section 3.2, the gradient magnitude of the dominant modality increases fast during the training while the other modalities remain stable, thus being under-optimized. To balance the training process and make the fusion module benefti from all the encoders simultaneously, we propose the classifier-guided gradient modulation. Specifically, we use a modality-specific classifier to make predictions of $h_{i}$ in Equation 1. We can write the process as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n{\\hat{y}}_{m_{i}}=f_{i}(h_{i})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $f_{i}$ is the classifier of modality $m_{i}$ and $\\hat{y}_{m_{i}}$ is the prediction only using modality $m_{i}$ . The classifier $f_{i}$ consists of 1-2 multi-head self-attention (MSA) layers [20] and a fully connected layer for classification and regression tasks. And for segmentation tasks, $f_{i}$ is a light decoder. After $h_{i}$ is inputted into the fusion module $\\Omega$ , it becomes a more high-level representation. Therefore, we use several MSA layers to make $h_{i}$ more consistent with the output of the fusion module. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "For a specific task, we have some evaluation metrics such as accuracy and mean absolute error. Here, we choose one of the evaluation metrics (e.g. accuracy for classification tasks and mean absolute error for regression tasks) and denote it as $\\varepsilon$ . For every iteration of training, we can get predictions from the classifiers. We denote the predictions as $\\bar{\\hat{y}^{i}}=(\\hat{y}_{m_{1}}^{i},\\hat{y}_{m_{2}}^{i},\\cdot\\cdot\\cdot\\cdot,\\hat{y}_{m_{M}}^{i})$ where $i$ is the current iteration. Furthermore, we evaluate the task using $\\hat{\\b{y}}^{i}$ to get the evaluation metric $\\underline{{\\epsilon}}^{i}=(\\varepsilon_{m_{1}}^{i},\\varepsilon_{m_{2}}^{i},\\cdot\\cdot\\cdot,\\varepsilon_{m_{M}}^{i})$ . Here, we use the difference between the two consecutive $\\varepsilon$ to denote the modality-specific improvement for each iteration: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\Delta\\varepsilon^{t+1}=\\varepsilon^{t+1}-\\varepsilon^{t}=(\\Delta\\varepsilon_{m_{1}}^{t+1},\\Delta\\varepsilon_{m_{2}}^{t+1},\\cdot\\cdot\\cdot\\,,\\Delta\\varepsilon_{m_{M}}^{t+1})}\\\\ &{}&{=(\\varepsilon_{m_{1}}^{t+1}-\\varepsilon_{m_{1}}^{t},\\varepsilon_{m_{2}}^{t+1}-\\varepsilon_{m_{2}}^{t},\\cdot\\cdot\\cdot\\,,\\varepsilon_{m_{M}}^{t+1}-\\varepsilon_{m_{M}}^{t})}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $t=0,1,2,\\cdots\\,,T$ and $T$ is the total iterations of training. Particularly, $\\varepsilon^{0}$ is initialized to 0. In some multimodal datasets, only using one of the modalities can achieve good results so we can not directly use $\\varepsilon$ to measure the utilization rate of different modalities. Therefore, it is reasonable to use the difference between $\\varepsilon$ to denote the relative improvements for each iteration. Then, we define the gradient magnitude balancing term of modality $m_{i}$ for the $t$ -th iteration as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n{{\\mathcal{B}}_{m_{i}}^{t}}=\\rho\\frac{\\sum_{k=1,k\\neq i}^{M}\\Delta\\varepsilon_{m_{k}}^{t}}{\\sum_{k=1}^{M}\\Delta\\varepsilon_{m_{k}}^{t}}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\rho$ is a scaling hyperparameter and $M$ is the number of modalities. According to Equation 7, it is easy to find that when the performance of the model only using modality $m_{i}$ improves very fast (i.e. $\\Delta\\varepsilon_{m_{i}}^{t}$ is large), $B_{m_{i}}^{t}$ will be small. Similarly, when the modality $m_{i}$ brings relatively limited improvements to the model (i.e. $\\Delta\\varepsilon_{m_{i}}^{t}$ is small), $B_{m_{i}}^{t}$ will be large. Therefore, $B_{m_{i}}^{t}$ is able to measure the relative utilization rate of these modalities and we can use $B_{m_{i}}^{t}$ to modulate the magnitude of the gradient of the encoder $\\phi_{i}$ . So Equation 4 can be rewritten as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\theta_{t+1}^{\\phi_{i}}=\\theta_{t}^{\\phi_{i}}-\\alpha\\mathcal{B}_{m_{i}}^{t+1}\\nabla_{\\theta^{\\phi_{i}}}\\mathcal{L}(\\theta_{t}^{\\phi_{i}})}\\\\ &{\\qquad=\\theta_{t}^{\\phi_{i}}-\\alpha\\rho\\frac{\\sum_{k=1,k\\neq i}^{M}\\Delta\\varepsilon_{m_{k}}^{t+1}}{\\sum_{k=1}^{M}\\Delta\\varepsilon_{m_{k}}^{t+1}}\\nabla_{\\theta^{\\phi_{i}}}\\mathcal{L}(\\theta_{t}^{\\phi_{i}})}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "According to Equation 2, we know that the final predictions are closely related to $h_{i}$ . Therefore, after we modulate the gradient of the corresponding encoder $\\phi_{i}$ , it has an impact on the input of $\\Omega$ , which in turn helps the optimization of the fusion module $\\Omega$ . ", "page_idx": 4}, {"type": "text", "text": "3.3.2 Gradient Direction Modulation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "As Wu et al. [25] discover, when the model only depends on one modality to perform well, it does not continue to learn to use other modalities. As discussed in Section 3.2, it means that this modality dominates the updating of the model. Previous works [25, 17, 15] address this problem mainly by focusing on gradient magnitude modulation. However, in Section 3.2, we find that the model is optimized towards the dominant modality. Therefore, in this subsection, we introduce a method that could modulate the direction of the gradients to balance the training process. ", "page_idx": 4}, {"type": "text", "text": "In general, we want to balance the optimization direction of the model when the model only relies on one modality to make predictions. Therefore, we propose to enforce the gradient direction of the model as close as possible to the weighted average gradient direction of models only using one modality. We use ${\\mathcal{B}}_{m_{i}}^{t}$ in Equation 7 as the weight term. This ensures that when the model tends to optimize towards the dominant modality, $B_{m_{i}}^{t}$ can help the model use information from other modalities. Besides, since $B_{m_{i}}^{t}$ changes during the training process, this term can make a dynamic adjustment to balance the optimization directions. Concretely, we can feed one modality into the model and drop other modalities by replacing them with 0 or other fixed values during training to calculate the gradient of this modality. By this method, we can calculate the unimodal gradients for all modalities. Then, we just enforce the gradient direction of the model as close as possible to the weighted average of these unimodal gradient directions. However, this method is very complex ", "page_idx": 4}, {"type": "text", "text": "1: Input: Training dataset $\\pmb{\\mathcal{D}}=\\{(\\pmb{x}_{i},y_{i})\\}_{i=1}^{N}$ , iteration number $T$ , the number of modalities $M$   \nmodel $F=(\\phi_{i},\\Omega,\\mathcal{F})$ , classifiers $f_{i}$ , and hyperparameters.   \n2: Initiate: $\\varepsilon^{p}\\gets\\mathbf{0}$ , $\\varepsilon^{n}\\gets$ Empty List, $\\mathcal{L}_{g m}\\gets0$ , classifier gradient list $L_{g}$ .   \n3: for $t=1$ to $T$ do   \n4: $\\mathcal{D}_{t}\\left\\langle\\overbrace{\\leftarrow}^{\\mathrm{Sample}}\\mathcal{D}\\right.$ ;   \n5: Forward propagation to get representations $\\boldsymbol{h}=(h_{1},h_{2},\\cdot\\cdot\\cdot,h_{M})$ in Equation 1;   \n6: for $i=1$ to $M$ do   \n7: Make predictions with $h_{i}$ using Equation 5;   \n8: Calculate $\\varepsilon_{m_{i}}^{t}$ and append it to $\\varepsilon^{n}$ ;   \n9: Append $\\nabla_{\\theta^{f_{i}}}\\mathcal{L}(\\theta^{f_{i}})$ to $L_{g}$ ;   \n10: end for   \n11: $\\Delta\\varepsilon^{t}=\\varepsilon^{n}-\\varepsilon^{p}$ ;   \n12: Calculate $\\mathcal{B}_{m_{i}}^{t},i=1,2,\\cdot\\cdot\\cdot,M$ using Equation 7;   \n13: Calculate the loss $\\mathcal{L}=\\mathcal{L}_{t a s k}+\\lambda\\mathcal{L}_{g m}$ and backward;   \n14: Calculate $\\mathcal{L}_{g m}^{t}$ using Equation 12;   \n15: \u03b5p \u2190\u03b5n, Lgm \u2190 $\\bar{\\mathcal{L}}_{g m}\\gets\\mathcal{L}_{g m}^{t}$ Ltgm, \u03b5n \u2190Empty List;   \n16: Update parameters using Equation 3 and 8.   \n17: end for ", "page_idx": 5}, {"type": "text", "text": "during training, because in every iteration we need to drop modalities to calculate the unimodal gradients, which is time-consuming with the increase in the number of modalities. ", "page_idx": 5}, {"type": "text", "text": "Therefore, we propose to use the gradients of the classifiers $f_{i}$ to represent the unimodal gradients. We will later demonstrate they are similar (Section 4.4 and Figure 4). Here, we take the gradient of regression tasks as an example where the output dimension is 1 so the gradient is an $n$ -d vector. For classification tasks or other tasks where the gradient is a matrix, see Appendix A for details. Concretely, we can calculate the gradient of the classifier $f_{i}$ as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\nabla_{\\theta^{f_{i}}}\\mathcal L(\\theta^{f_{i}})=\\frac{\\partial\\mathcal L(\\theta^{f_{i}})}{\\partial f_{i}}=\\left[\\frac{\\partial\\mathcal L(\\theta^{f_{i}})}{\\partial\\theta_{1}^{f_{i}}},\\frac{\\partial\\mathcal L(\\theta^{f_{i}})}{\\partial\\theta_{2}^{f_{i}}},\\cdots,\\frac{\\partial\\mathcal L(\\theta^{f_{i}})}{\\partial\\theta_{n}^{f_{i}}}\\right]^{\\top}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\theta^{f_{i}}$ represents the parameters of $f_{i}$ . Different from $\\theta_{t}^{f_{i}}$ in Equation 3 and 4 where $t$ is the iteration, $\\theta_{n}^{f_{i}}$ here represents one of the variables of $\\theta^{f_{i}}$ . Similarly, we can calculate the gradient of the classifier $\\mathcal{F}$ of the fusion module as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\nabla_{\\theta^{\\mathcal{F}}}\\mathcal{L}(\\theta^{\\mathcal{F}})=\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}})}{\\partial\\mathcal{F}}=\\left[\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}})}{\\partial\\theta_{1}^{\\mathcal{F}}},\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}})}{\\partial\\theta_{2}^{\\mathcal{F}}},\\cdots,\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}})}{\\partial\\theta_{n}^{\\mathcal{F}}}\\right]^{\\top}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We regard $\\nabla_{\\theta^{f_{i}}}\\mathcal{L},i=1,2,\\cdots,M$ as the unimodal gradients and $\\nabla_{\\theta}\\!\\mathcal{F}\\mathcal{L}$ as the fusion gradients. As mentioned before, we want to make $\\nabla_{\\theta}\\mathcal{F}\\mathcal{L}$ as close as possible to the weighted average direction of $\\nabla_{\\theta^{f_{i}}}\\mathcal{L},i\\,=\\,1,2,\\cdot\\cdot\\cdot\\,,M$ . Let $\\sin(\\bar{\\b u},\\b v)\\,=\\,\\pmb u^{\\top}\\pmb v/\\vert\\vert\\dot{\\pmb u}\\vert\\vert\\vert\\pmb v\\vert\\vert$ denote the dot product between $\\ell_{2}$ normalized $\\textbf{\\em u}$ and $\\pmb{v}$ (i.e. cosine similarity). We can enforce the gradient direction of the fusion module as close as possible to the weighted average of these unimodal gradient directions by maximizing their cosine similarity: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{max}\\sum_{i=1}^{M}\\mathcal{B}_{m_{i}}^{t}\\mathrm{sim}\\left(\\nabla_{\\theta^{\\mathcal{F}}}\\mathcal{L},\\nabla_{\\theta^{f_{i}}}\\mathcal{L}\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $t$ is the current iteration. We rewrite Equation 11 as a loss term: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{g m}^{t}=\\frac{1}{M}\\sum_{i=1}^{M}|\\mathcal{B}_{m_{i}}^{t}|-\\mathcal{B}_{m_{i}}^{t}\\mathrm{sim}\\left(\\nabla_{\\theta_{t}^{\\mathcal{F}}}\\mathcal{L},\\nabla_{\\theta_{t}^{f_{i}}}\\mathcal{L}\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The cosine similarity is a number between $-1$ and 1. By adding $|B_{m_{i}}^{t}|$ to the loss term, we can ensure that the loss $\\mathcal{L}_{g m}$ is always positive. As aforementioned, when modality $m_{i}$ has limited improvement, $B_{m_{i}}^{t}$ is large. Therefore, the corresponding term in $\\mathcal{L}_{g m}^{t}$ will be large, making the optimization direction towards modality $m_{i}$ , which will balance the learning process. ", "page_idx": 5}, {"type": "text", "text": "Then our overall loss function can be written as: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}^{t}=\\mathcal{L}_{t a s k}+\\lambda\\mathcal{L}_{g m}^{t}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\mathcal{L}_{t a s k}$ is the task loss function (e.g. cross-entropy loss, L1 loss) and $\\lambda$ is a trade-off between the two loss terms. We present our overall method in Algorithm 1. ", "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "4.1 Datasets and Evaluation Metrics ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We use four multimodal datasets: UPMCFood 101 [23], CMU-MOSI [27], IEMOCAP [3], and BraTS 2021 [1]. Table 1 presents the difference between these four datasets. ", "page_idx": 6}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/e25143d4de2138dcaa705e6a79a8285881a03f3f1c25903384f83d3a569f716c.jpg", "table_caption": ["Table 1: The difference between the four datasets we use. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "UPMC-Food 101 [23] is a food classification dataset, which contains about 100,000 recipes for a total of 101 food categories. Each item in the dataset is represented by one image plus textual information. We use accuracy and F1 score to evaluate the performance of the model. ", "page_idx": 6}, {"type": "text", "text": "CMU-MOSI [27] is a popular dataset for multimodal (audio, text and video) sentiment analysis. Each video segment is manually annotated with a sentiment score ranging from strongly negative to strongly positive (-3 to $+3$ ). Following previous work [18, 10], we use binary accuracy (ACC-2), F1 score, 7-class accuracy (ACC-7), mean absolute error (MAE) and pearson correlation (Corr) to evaluate the performance of the model. ", "page_idx": 6}, {"type": "text", "text": "Table 3: Results on BraTS 2021. WT, TC and ET denote the dice score of Whole Tumor, Tumor Core and Enhancing Tumor respectively. ", "page_idx": 6}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/c127749b86a0bc185d4895220120792b436d43b08d9062fa477f4013ed39688e.jpg", "table_caption": ["Table 2: Quantitative results on the UPMC-Food 101 dataset. Bold: best results. Underline: second best results. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/9fba66c9f39b3ab93b4bdfebd46585677ae88d10c7a2ff2d17977cc2f18b2ccd.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "IEMOCAP [3] is a multimodal emotion recognition dataset, which contains recorded videos from ten actors in five dyadic conversation sessions. Following previous works [18, 24, 10], four emotions (happiness, anger, sadness and neutral state) are selected for emotion recognition. We use accuracy and F1 score to evaluate the performance of the model. ", "page_idx": 6}, {"type": "text", "text": "BraTS 2021 [1] is a 3D multimodal brain tumor segmentation dataset, which has four modalities: flair, t1ce, $^{t l}$ and $t2$ . The input image size is $240\\times240\\times155$ . The annotations are combined into three nested subregions: Whole Tumor (WT), Tumor Core (TC), and Enhancing Tumor (ET). We use Dice score of these three nested subregions and their average value to evaluate the performance. ", "page_idx": 6}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/b9885744f608abd6e681403e95db9eee2b126c50e9e6de6f0015aad5fa362308.jpg", "table_caption": ["Table 4: Quantitative results on the CMU-MOSI and IEMOCAP datasets. Bold: best results. Underline: second best results. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/2b802358231124457d7675440d60ae05e88348c913ed4715152a4732d69f3faa.jpg", "img_caption": ["Figure 3: Changes in (a) performance, (b) gradient magnitude and (c) direction during training with CGGM. We get the results on CMU-MOSI dataset. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.2 Implementation Details ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Input. For UPMC-Food 101, we use extracted features as inputs. Specifically, we use the pre-trained bert-base-uncased model [5] to extract text features and use pre-trained ViT [6] on ImageNet to extract image features. For CMU-MOSI and IEMOCAP, we follow Guo et al. [10] to extract acoustic, visual and textual features. For BraTS 2021, we use the preprocessed raw images as inputs. ", "page_idx": 7}, {"type": "text", "text": "Backbone. For UPMC-Food 101, CMU-MOSI and IEMOCAP, we use transformer encoders [20] as modality encoders and the fusion module. For the BraTS 2021 dataset, we use DeepLab ${\\bf v}3+{\\bf\\Phi}$ [4] as the encoders and several convolution layers as the fusion module. ", "page_idx": 7}, {"type": "text", "text": "Training Details. For images in UPMC-Food 101 and BraTS 2021, we implement data augmentation strategies, including random cropping, random flipping, color jitter, adding noise, etc. To save memory, we consider BraTS 2021 as a 2D segmentation task by randomly slicing an image from the 3D image. For CMU-MOSI, we use L1 loss as our loss function. For UPMC-Food 101 and IEMOCAP, we use cross-entropy loss. For BraTS 2021, we use the combination of soft dice loss and cross-entropy loss. Besides, we use the Adam optimizer for CMU-MOSI, the AdamW optimizer for UPMC-Food 101 and IEMOCAP, and the SGD optimizer for BraTS 2021. Other hyperparameters are described in Appendix B in detail. ", "page_idx": 7}, {"type": "text", "text": "4.3 Main Results ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Comparison with the state-of-the-arts. We compare our CGGM with other methods to demonstrate the effectiveness of our proposed method. For these four datasets, we compare CGGM with the model training only using one modality, multimodal joint training (Baseline), Modality Random Dropout (MRD), and Modality-specific Learning Rate (MSLR) methods. Additionally, we compare CGGM with SOTA methods including G-Blending [22], Greedy [25], OGM [17], AGM [15], PMR [8], UMT [7], UME [7], QMF [28] and ReconBoost [11]. Table 2, 3 and 4 present the results of ", "page_idx": 7}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/f0d10ae72fadf9a76ab514fc719702b7df66a01ba22bf87196392d40e94f0f84.jpg", "img_caption": ["Figure 4: t-SNE visualization of the gradients of classifiers and the unimodal gradients. Each point represents a gradient vector or matrix of a batch of data. "], "img_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/4fe420f6860507a0671c9fe7b1efd6cd7de79e5087571d9a33b2756863335b03.jpg", "table_caption": ["Table 5: Accuracy on IEMOCAP. $f_{1},f_{2}$ and $f_{3}$ represent the audio, video and text classifier, respectively. We train three separate models in unimodal training. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "CGGM and its compared methods. Compared with the baseline method, CGGM brings significant improvements to the performance of the model, which demonstrates the effectiveness of our proposed method. Besides, CGGM takes both gradient magnitude and direction into consideration, thus making it outperform other gradient modulation methods consistently in all four datasets. Most importantly, CGGM can be easily applied to various tasks and has good performance, including classification tasks, regression tasks, segmentation tasks, etc. Meanwhile, CGGM has no limitations on the optimizer, loss function and the number of modalities. ", "page_idx": 8}, {"type": "text", "text": "Effectiveness of CGGM. In Figure 3, we visualize the changes in accuracy, gradient magnitude and direction during training with CGGM. Compared with Figure 2(a), the accuracy of text modality in Figure 3(a) does not increase very fast with CGGM, which indicates that CGGM imposes constraints to the dominant modality during the optimization process. Besides, the accuracies of all the modalities and the fusion improves, indicating the effectiveness of CGGM. Additionally, in Figure 2(b), the dominant modality always has the largest gradient while in Figure 3(b), the gradient magnitude of the text modality decreases at first, indicating that CGGM slows down its optimization and accelerates other modalities\u2019 optimization, helping each modality learn sufficiently, thus improving the multimodal performance. In case of gradient direction, in Figure 2, the similarity between audio modality and the fusion is always less than 0 during the training process, indicating an opposite optimization direction between the unimodal and multimodal, thus hindering the optimization process. In Figure 3, we observe the multimodal direction is consistent with all modalities, indicating that the multimodal branch utilizes unimodal information efficiently. ", "page_idx": 8}, {"type": "text", "text": "4.4 Classifier Performance and Gradient Direction ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Classifier performance. In Table 5, we present the accuracy of classifiers in different situations. Unimodal training can be considered a baseline that fully utilizes the unimodal information. Compared with unimodal training, the accuracies of $f_{1}$ and $f_{2}$ in multimodal training drop slightly while the accuracy of $f_{3}$ increases slightly. This demonstrates that multimodal training can not fully utilize the information from audio and video, indicating that they are under-optimized. The improvement of $f_{3}$ indicates that the text modality is fully exploited and learns some information from the other two modalities. In contrast, the accuracies of the three classifiers in CGGM all improve. This suggests that during the balancing process, the fusion can fully utilize the information from all the modalities, thus in turn making the encoders of three modalities fuse the information from other modalities during backpropagation. Therefore, the accuracies of all the three classifiers improve correspondingly. This also validates the effectiveness of CGGM. ", "page_idx": 8}, {"type": "text", "text": "Classifier gradient direction. In Section 3.3.2, we propose to use the gradients of classifiers to represent the unimodal gradients. In this subsection, we give a visualization of the gradients of classifiers and the unimodal gradients. Specifically, for every batch of data, we input them into the model to get representations $h_{i}$ which are then fed into the classifiers $f_{i}$ to get the gradients of classifiers. Then we input $h_{i}$ of only one modality into the fusion module $\\Omega$ to get the unimodal gradients. We use t-SNE [19] to visualize the gradient vectors. Figure 4 shows the visualization results on the four datasets. As shown in the figure, for each modality, the unimodal gradient vectors and the gradient vectors of the corresponding classifier are very close to each other, demonstrating that it is meaningful to use the gradients of the classifiers to represent the unimodal gradients. ", "page_idx": 8}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/c2ce20eb49ccadff08a7154fa8a3434be69b846504a2117a228f17d7ddb0d54b.jpg", "img_caption": ["Figure 5: The improved performance with different $\\rho$ and $\\lambda$ compared to the joint training baseline. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "4.5 Ablation Study ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Gradient magnitude and direction. To measure the contribution of gradient magnitude modulation and gradient direction modulation separately, we present our ablation results on IEMOCAP in Table 6. Compared with the baseline in the first row, modulating the magnitude of the gradients brings more improvements to the performance of the model than modulating the direction of the gradients. Compared with the CGGM performance in Table 4, the combination of modulating gradient magnitude and gradient directions furthermore enhances the performance of the model. ", "page_idx": 9}, {"type": "text", "text": "Scaling hyperparameter $\\rho$ . To explore the impacts of the scaling hyperparameter $\\rho$ on the model\u2019s performance, we select seven different values of $\\rho$ and present our results on IEMOCAP in Figure 5(a). We discover that the accuracy improves with the increase of $\\rho$ before hitting the highest value when $\\rho\\:=\\:1.2$ . Then, the accuracy drops with the increase of $\\rho$ . Compared to the baseline, modulating the magnitude of the gradients ", "page_idx": 9}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/d975f626be438f3b5d7255e6904c764e6d2ba511cdeffdf9f3b4314406cc17ef.jpg", "table_caption": ["Table 6: The benefits of modulating the magnitude of the gradients and the directions of the gradients. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "brings consistent improvements regardless of how big $\\rho$ is taken. Intuitively, the larger the $\\rho$ , the larger the modification to the gradients. Therefore, the results in the table indicate that we need to carefully choose a $\\rho$ to avoid modifications that are too large or too small. ", "page_idx": 9}, {"type": "text", "text": "Loss trade-off $\\lambda$ . $\\lambda$ measures the strength we modulate the directions of the gradients. We select six different values of $\\lambda$ and present the results on IEMOCAP in Figure 5(b). As shown in the figure, when $\\lambda$ is 0.01 or 0.25, the accuracy will decrease slightly. When $\\lambda$ is too small, the modulation is insufficient and could influence the optimization process. When $\\lambda$ is too large, the modulation is large and will influence the task loss, thus making optimization deviate from the task. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose CGGM, a novel strategy to balance the multimodal training process. Compared to existing gradient modulation methods, CGGM has no limitations on the loss functions, the optimizer, the number of modalities, etc. Moreover, we consider both the magnitude and direction of the gradients with the guidance of the classifiers. Extensive experiments and ablation studies fully demonstrate the effectiveness and universality of CGGM. However, CGGM also has a limitation. CGGM needs to leverage extra classifiers to implement gradient modulation. Although these classifiers are lightweight, they still lead to more computational resources. We lead this challenging problem to future work. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This work was supported by National Key R&D Program of China under Grant No.2022ZD0162000. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Ujjwal Baid, Satyam Ghodasara, Suyash Mohan, Michel Bilello, Evan Calabrese, Errol Colak, Keyvan Farahani, Jayashree Kalpathy-Cramer, Felipe C Kitamura, Sarthak Pati, et al. The rsnaasnr-miccai brats 2021 benchmark on brain tumor segmentation and radiogenomic classification. arXiv preprint arXiv:2107.02314, 2021.   \n[2] Hedi Ben-Younes, R\u00e9mi Cadene, Matthieu Cord, and Nicolas Thome. Mutan: Multimodal tucker fusion for visual question answering. In Proceedings of the IEEE international conference on computer vision, pages 2612\u20132620, 2017. [3] Carlos Busso, Murtaza Bulut, Chi-Chun Lee, Ebrahim (Abe) Kazemzadeh, Emily Mower Provost, Samuel Kim, Jeannette N. Chang, Sungbok Lee, and Shrikanth S. Narayanan. Iemocap: interactive emotional dyadic motion capture database. Language Resources and Evaluation, 42: 335\u2013359, 2008. [4] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian Schroff, and Hartwig Adam. Encoder-decoder with atrous separable convolution for semantic image segmentation. In Proceedings of the European conference on computer vision (ECCV), pages 801\u2013818, 2018. [5] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018. [6] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. arXiv preprint arXiv:2010.11929, 2020.   \n[7] Chenzhuang Du, Jiaye Teng, Tingle Li, Yichen Liu, Tianyuan Yuan, Yue Wang, Yang Yuan, and Hang Zhao. On uni-modal feature learning in supervised multi-modal learning. In International Conference on Machine Learning, pages 8632\u20138656. PMLR, 2023.   \n[8] Yunfeng Fan, Wenchao Xu, Haozhao Wang, Junxiao Wang, and Song Guo. Pmr: Prototypical modal rebalance for multimodal learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 20029\u201320038, 2023. [9] Jie Fu, Junyu Gao, Bing-Kun Bao, and Changsheng Xu. Multimodal imbalance-aware gradient modulation for weakly-supervised audio-visual video parsing. IEEE Transactions on Circuits and Systems for Video Technology, 2023.   \n[10] Zirun Guo, Tao Jin, and Zhou Zhao. Multimodal prompt learning with missing modalities for sentiment analysis and emotion recognition. In Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1726\u20131736, 2024.   \n[11] Cong Hua, Qianqian Xu, Shilong Bao, Zhiyong Yang, and Qingming Huang. Reconboost: Boosting can achieve modality reconcilement. In The Forty-first International Conference on Machine Learning, 2024.   \n[12] Yu Huang, Junyang Lin, Chang Zhou, Hongxia Yang, and Longbo Huang. Modality competition: What makes joint training of multi-modal network fail in deep learning?(provably). In International Conference on Machine Learning, pages 9226\u20139259. PMLR, 2022.   \n[13] Tao Jin, Weicai Yan, Ye Wang, Sihang Cai, Shuaiqifan, and Zhou Zhao. Calibrating prompt from history for continual vision-language retrieval and grounding. In ACM Multimedia 2024, 2024.   \n[14] Hamid Reza Vaezi Joze, Amirreza Shaban, Michael L Iuzzolino, and Kazuhito Koishida. Mmtm: Multimodal transfer module for cnn fusion. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 13289\u201313299, 2020.   \n[15] Hong Li, Xingyu Li, Pengbo Hu, Yinuo Lei, Chunxiao Li, and Yi Zhou. Boosting multi-modal model performance with adaptive gradient modulation. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 22214\u201322224, 2023.   \n[16] Paul Pu Liang, Ziyin Liu, AmirAli Bagher Zadeh, and Louis-Philippe Morency. Multimodal language analysis with recurrent multistage fusion. In Ellen Riloff, David Chiang, Julia Hockenmaier, and Jun\u2019ichi Tsujii, editors, Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 150\u2013161, Brussels, Belgium, OctoberNovember 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1014. URL https://aclanthology.org/D18-1014.   \n[17] Xiaokang Peng, Yake Wei, Andong Deng, Dong Wang, and Di Hu. Balanced multimodal learning via on-the-fly gradient modulation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 8238\u20138247, 2022.   \n[18] Yao-Hung Hubert Tsai, Shaojie Bai, Paul Pu Liang, J. Zico Kolter, Louis-Philippe Morency, and Ruslan Salakhutdinov. Multimodal transformer for unaligned multimodal language sequences. In Anna Korhonen, David Traum, and Llu\u00eds M\u00e0rquez, editors, Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 6558\u20136569, Florence, Italy, July 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1656. URL https://aclanthology.org/P19-1656.   \n[19] Laurens van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of Machine Learning Research, 9(86):2579\u20132605, 2008.   \n[20] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.   \n[21] Valentin Vielzeuf, Alexis Lechervy, St\u00e9phane Pateux, and Fr\u00e9d\u00e9ric Jurie. Centralnet: a multilayer approach for multimodal fusion. In Proceedings of the European Conference on Computer Vision (ECCV) Workshops, pages 0\u20130, 2018.   \n[22] Weiyao Wang, Du Tran, and Matt Feiszli. What makes training multi-modal classification networks hard? In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 12695\u201312705, 2020.   \n[23] Xin Wang, Devinder Kumar, Nicolas Thome, Matthieu Cord, and Fr\u00e9d\u00e9ric Precioso. Recipe recognition with large multimodal food dataset. In 2015 IEEE International Conference on Multimedia Expo Workshops (ICMEW), pages 1\u20136, 2015. doi: 10.1109/ICMEW.2015.7169757.   \n[24] Yansen Wang, Ying Shen, Zhun Liu, Paul Pu Liang, Amir Zadeh, and Louis-Philippe Morency. Words can shift: Dynamically adjusting word representations using nonverbal behaviors. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 33, pages 7216\u20137223, 2019.   \n[25] Nan Wu, Stanislaw Jastrzebski, Kyunghyun Cho, and Krzysztof J Geras. Characterizing and overcoming the greedy nature of learning in multi-modal deep neural networks. In International Conference on Machine Learning, pages 24043\u201324055. PMLR, 2022.   \n[26] Weicai Yan, Ye Wang, Wang Lin, Zirun Guo, Zhou Zhao, and Tao Jin. Low-rank prompt interaction for continual vision-language retrieval. In ACM Multimedia 2024, 2024.   \n[27] Amir Zadeh, Rowan Zellers, Eli Pincus, and Louis-Philippe Morency. Multimodal sentiment intensity analysis in videos: Facial gestures and verbal messages. IEEE Intelligent Systems, 31 (6):82\u201388, 2016. doi: 10.1109/MIS.2016.94.   \n[28] Qingyang Zhang, Haitao Wu, Changqing Zhang, Qinghua Hu, Huazhu Fu, Joey Tianyi Zhou, and Xi Peng. Provable dynamic fusion for low-quality multimodal data. In International conference on machine learning, pages 41753\u201341769. PMLR, 2023. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Gradient Direction Modulation Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "For classification tasks, the classifier $f_{i}$ outputs more than one value. For example, for the UPMCFood 101 dataset, $f_{i}$ output 101 values for each piece of data. Therefore, we can define $f_{i}$ as $f_{i}\\,=\\,(f_{i}^{(1)},f_{i}^{(2)},\\cdot\\cdot\\cdot\\,,f_{i}^{(m)})$ where $m$ is the number of output. We calculate the gradients of the classifiers $f_{i}$ as: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\nabla_{\\theta^{f}i}\\mathcal{L}(\\theta^{f_{i}})=\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}})}{\\partial f_{i}}=\\left[\\begin{array}{c c c c c}{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(1)}})}{\\partial\\theta_{1}^{f_{i}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(2)}})}{\\partial\\theta_{1}^{f_{i}}}}&{\\cdots}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(m)}})}{\\partial\\theta_{1}^{f_{i}}}}\\\\ {\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(1)}})}{\\partial\\theta_{2}^{f_{i}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(2)}})}{\\partial\\theta_{2}^{f_{i}}}}&{\\cdots}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(m)}})}{\\partial\\theta_{2}^{f_{i}}}}\\\\ {\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}\\\\ {\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(1)}})}{\\partial\\theta_{n}^{f_{i}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(2)}})}{\\partial\\theta_{n}^{f_{i}}}}&{\\cdots}&{\\frac{\\partial\\mathcal{L}(\\theta^{f_{i}^{(m)}})}{\\partial\\theta_{n}^{f_{i}}}}\\end{array}\\right]\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Similarly, the gradients of the fusion module classifier can be calculated as: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\nabla_{\\theta^{\\mathcal{F}}}\\mathcal{L}(\\theta^{\\mathcal{F}})=\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}})}{\\partial\\mathcal{F}}=\\left[\\begin{array}{c c c c}{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(1)}})}{\\partial\\theta_{1}^{\\mathcal{F}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(2)}})}{\\partial\\theta_{1}^{\\mathcal{F}}}}&{\\cdot\\cdot\\cdot}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(m)}})}{\\partial\\theta_{1}^{\\mathcal{F}}}}\\\\ {\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(1)}})}{\\partial\\theta_{2}^{\\mathcal{F}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(2)}})}{\\partial\\theta_{2}^{\\mathcal{F}}}}&{\\cdot\\cdot}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(m)}})}{\\partial\\theta_{2}^{\\mathcal{F}}}}\\\\ {\\vdots}&{\\vdots}&{\\cdot\\cdot}&{\\vdots}\\\\ {\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(1)}})}{\\partial\\theta_{n}^{\\mathcal{F}}}}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(2)}})}{\\partial\\theta_{n}^{\\mathcal{F}}}}&{\\cdot\\cdot}&{\\frac{\\partial\\mathcal{L}(\\theta^{\\mathcal{F}^{(m)}})}{\\partial\\theta_{n}^{\\mathcal{F}}}}\\end{array}\\right]\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "In order to calculate cosine similarity between these two terms, we flatten them into vectors and then use Equation 12 to calculate ${\\mathcal{L}}_{g m}$ . ", "page_idx": 12}, {"type": "text", "text": "B Implementation Details ", "text_level": 1, "page_idx": 12}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/29e91565ff3f849443d0d408f2b0577a16a3c010c0a48d3d56384b3928b7417f.jpg", "table_caption": ["Table 7: Main hyperparameters of the four datasets. "], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "Table 7 presents the main hyperparameters of the four datasets. Apart from the hyperparameters in the table, there are some task-specific hyperparameters. ", "page_idx": 12}, {"type": "text", "text": "For BraTS 2021, the start learning rate is set to 4e-4 with warm-up epochs to 1e-2 and the final learning rate is 1e-3. Besides, for the loss function, we use the combination of soft dice loss and cross-entropy loss, which can be represented as $\\mathcal{L}_{t a s k}=\\mathcal{L}_{D i c e}+\\lambda_{1}\\mathcal{L}_{C E}$ . We set $\\lambda_{1}$ to 1. Particularly, we use a weighted cross-entropy loss function, where the weight is 0.2, 0.3, 0.25 and 0.25 for the background, label 1, label 2 and label 3, respectively. ", "page_idx": 12}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/74814f246261927f183f74f25d045cfe2453ecfdcfa61bf345d3d1e4ce8fb9b2.jpg", "img_caption": ["Figure 6: Changes in loss during the training process. "], "img_footnote": [], "page_idx": 13}, {"type": "image", "img_path": "oe5ZEqTOaz/tmp/e4e389f0eb5416067ad69ebe99cabd9f67938bd3338e8713daea2dc5f3021779.jpg", "img_caption": ["Figure 7: Changes in balancing term during the training process. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "C More Ablation Study ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "More visualizations of CGGM. We further visualize the loss changes in Figure 6. From the figure, we can observe that the loss of the dominant modality with CGGM implemented in (b)-(d) will drop much slower than that in Figure 6(a). Besides, the losses of all modalities in (b)-(d) are smaller than those in (a), indicating the effectiveness of CGGM. Apart from the loss changes, we also visualize the changes in balancing term during the training process in Figure 7. When the value is higher than the red line, the modality is promoted. When the value is lower than the red line, the modality is suppressed. In the first few iterations, the dominant modality is suppressed, ensuring that other modalities are fully optimized. During the optimization, balancing terms of three modalities turn up and down, ensuring each modality is sufficiently optimized. ", "page_idx": 13}, {"type": "text", "text": "Additional computational resources of classifiers. The additional classifiers will need more computational resources during training. However, during inference, the classifiers will be discarded. Therefore, they have no impact during the inference stage. We report the additional memory cost (MB) of the additional classifiers in Table 8. From the table, we can observe that the additional ", "page_idx": 13}, {"type": "text", "text": "Table 8: Additional gpu memory cost (MB) of classifiers. ", "text_level": 1, "page_idx": 14}, {"type": "table", "img_path": "oe5ZEqTOaz/tmp/c187259b2b841b0da3c8e817c5853d13a8e23c6c658dbaffcacd6cc4e37d7477.jpg", "table_caption": [], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "computational increase is low. There are two main reasons: (1) the classifiers or decoders are light with only a few parameters; (2) the classifiers only use the gradients to update themselves and do not pass the gradients to the modality encoders during backpropagation. Therefore, there is no need to store the gradient for each parameter, thus reducing memory cost. ", "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: Abstract and Introduction ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The Conclusion Section ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The Method Section ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] Justification: We present the detailed algorithm, codes and hyperparameters. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We have released our codes. ", "page_idx": 15}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We provide the detailed information in the implementation details. ", "page_idx": 15}, {"type": "text", "text": "7. Experiment Statistical Significance ", "page_idx": 15}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 15}, {"type": "text", "text": "Answer: [No] Justification: [NA] ", "page_idx": 15}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 15}, {"type": "text", "text": "Answer: [No] ", "page_idx": 15}, {"type": "text", "text": "Justification: The experiments are not computationally expensive. ", "page_idx": 15}, {"type": "text", "text": "9. Code Of Ethics ", "page_idx": 15}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 16}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 16}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 16}]