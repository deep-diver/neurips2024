[{"type": "text", "text": "A PID Controller Approach for Adaptive Probability-dependent Gradient Decay in Model Calibration ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Siyuan Zhang Linbo Xie \u2217 School of Internet of Things Engineering chool of Internet of Things Engineering Jiangnan University Jiangnan University Wuxi, China 214122 Wuxi, China 214122 ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Modern deep learning models often exhibit overconfident predictions, inadequately capturing uncertainty. During model optimization, the expected calibration error tends to overfit earlier than classification accuracy, indicating distinct optimization objectives for classification error and calibration error. To ensure consistent optimization of both model accuracy and model calibration, we propose a novel method incorporating a probability-dependent gradient decay coefficient into loss function. This coefficient exhibits a strong correlation with the overall confidence level. To maintain model calibration during optimization, we utilize a proportionalintegral-derivative (PID) controller to dynamically adjust this gradient decay rate, where the adjustment relies on the proposed relative calibration error feedback in each epoch, thereby preventing the model from exhibiting over-confidence or under-confidence. Within the PID control system framework, the proposed relative calibration error serves as the control system output, providing an indication of the overall confidence level, while the gradient decay rate functions as the controlled variable. Moreover, recognizing the impact of gradient amplitude of adaptive decay rates, we implement an adaptive learning rate mechanism for gradient compensation to prevent inadequate learning of over-small or over-large gradient. Empirical experiments validate the efficacy of our PID-based adaptive gradient decay rate approach, ensuring consistent optimization of model calibration and model accuracy. The code of implementation is available in https://github.com/UHIF/PID_AGD. ", "page_idx": 0}, {"type": "text", "text": "1 Inroduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Model calibration aims to refine the uncertainty distribution of model output, ensuring its faithful reflection of the inherent uncertainty characteristics. Softmax mapping is commonly employed in the baseline learning to establish the output-probability mapping. Yet, with the escalation in model parameterizations, the output uncertainty distribution from over-parameterized models tends to become over-confident [1]. Consequently, the baseline strategy, which exclusively depends on Softmax mapping without accounting for calibration characteristics as optimization objectives, fails to achieve perfect model calibration. Particularly in high-risk applications, inadequate model calibration poses heightened safety risks [2, 3]. ", "page_idx": 0}, {"type": "text", "text": "There are three primary strategies for calibrating uncertainty in deep learning models: Bayesian neural networks, post-processing calibration, and training-based model calibration. Bayesian neural networks (BNNs) integrate Bayesian inference into their framework, distinguishing them from traditional neural networks [4, 5]. In contrast to conventional neural networks, which yield point estimates, ", "page_idx": 0}, {"type": "text", "text": "BNNs offer a probability distribution across potential outputs, enabling uncertainty quantification in predictions [6]. This is accomplished by assigning prior distributions to the network\u2019s parameters and iteratively updating these distributions using Bayes\u2019 theorem as more data is acquired. ", "page_idx": 1}, {"type": "text", "text": "The post-processing calibration methods involve establishing the additional output-probability relationship through supplementary mappings to refine output uncertainty distribution [7, 8, 9]. This calibration method avoids disrupting the original model\u2019s decision-making pertaining to the primary task, maintaining the original generalization performance [10]. However, a notable drawback emerges: the necessity of additional structure to establish the mapping between outputs and probabilities [11]. This task possesses unique characteristics, demanding calibrated properties to construct outputprobability mapping structures, optimization goals, and strategies. Unlike typical loss functions and metrics in machine learning, uncertainty is sample-specific; however, validating it individually is infeasible [12]. Furthermore, when validated collectively, it fails to fully represent individual sample properties, presenting challenges in calibrating individual sample. This presents a difficulty in calibrating model confidence via post-processing structures [13, 14]. ", "page_idx": 1}, {"type": "text", "text": "Another approach to model calibration involves integrating various elements into the baseline optimization strategy for deep learning [7]. This enhancement of elements during the optimization leads to an improvement in the uncertainty distribution of the model output. These methods encompass a range of techniques including pre-training [15], data augmentation [16], label smoothing [17], weight decay [1], early stopping [18], structure sparsity [19], convolutional structure [20], and others. These methods not only bolster the calibration of the model and refine the output uncertainty distribution but also delve into the dynamic attributes of the model optimization, thereby enhancing decisionmaking. Additionally, they improve the interpretability in the decision-making and optimization process. Furthermore, certain loss functions for model output distribution have been devised based on uncertainty properties. These include MMCE [14], Correctness Ranking Loss [21], CALS [22], Focal loss [23, 24], and FLSD [25]. They jointly address classification accuracy and confidence calibration to mitigate the inclination of the over-confidence and under-confidence. ", "page_idx": 1}, {"type": "text", "text": "In the optimization of Softmax-based cross-entropy loss, model accuracy and model calibration represent distinct optimization characteristics [26]. Model calibration tends to be overfitting earlier in the optimization compared to accuracy [1]. To ensure consistent optimization between model accuracy and calibration, it is imperative to achieve high accuracy while maintaining adequate calibration. Our approach introduces a hyperparameter that controls the gradient decay rate within the Softmax output-probability mapping. It indicated a negative correlation between the gradient decay rate with increasing instance-level probability and the overall confidence distribution [27]. To achieve consistent optimization of accuracy and calibration, we propose detecting model calibration through a validation set in the optimization process. Drawing inspiration from the notable success of proportional-integral-derivative (PID) controllers in automatic control systems [28], we introduce an Adaptive Probability-dependent Gradient Decay through PID controller approach to calibrate the model. Moreover, considering that probability-dependent gradient decay rate may impact gradient amplitude, we design a dynamic learning rate mechanism corresponding to the changing gradient decay rate to offset fluctuations in gradient amplitude. ", "page_idx": 1}, {"type": "text", "text": "Our main contributions in this work can be summarized as follows: (1) We propose adaptive probability-dependent gradient decay via PID controller. This approach utilizes the feedback mechanism from automatic control to detect model calibration and adjust the probability-dependent gradient decay rate coefficient in Softmax, ensuring consistent optimization of model calibration and accuracy. (2) To counteract fluctuations in gradient magnitude caused by the adaptive probability-dependent gradient decay rate, we introduce a dynamic learning rate schedule to follow the dynamic decay rate. (3) Empirical experiments confirm the effectiveness of our approach, achieving improved model calibration while maintaining the model\u2019s generalization ability. ", "page_idx": 1}, {"type": "text", "text": "2 Problem formulation ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Model calibration ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Considering a dataset $\\left\\{(x_{.}^{i},y^{i})\\right\\}_{i=1}^{N}\\subset\\mathbf{R}^{n}\\times\\mathbf{R}^{m}$ and classifier $f$ maps $x$ to the outputs $z_{j},j=$ $1,\\ldots,m$ on $m$ classes and $k=\\arg\\operatorname*{max}_{j}z_{j}$ . The ground-truth $y$ and predicted labels $\\hat{y}$ are formulated in one-hot format where $y_{c}=1$ and $\\hat{y}_{k}\\,=\\,1$ , where $c$ represents the truth class. The associated confidence score of the predicted label in baseline is $\\hat{p}\\,=\\,\\operatorname*{max}{s_{j}(z)},j\\,=\\,1,\\dotsc,m$ , where $s\\left(\\cdot\\right)$ ", "page_idx": 1}, {"type": "image", "img_path": "fAnubdSFpn/tmp/0a184e66f03c078cc36fc3c49c39a1dbc29f594c1b5c7c79d07d29dca54b03d4.jpg", "img_caption": ["Figure 1: The gradient magnitude of different gradient decay $\\beta$ with increasing probability $p_{c}$ . "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "represents Softmax mapping $R^{m}\\to R^{m}$ . However, Softmax mapping probabilities are not accurately reflected in the properties of model output [1]. The probability estimation of modern deep models may show over-confidence or under-confidence. ", "page_idx": 2}, {"type": "text", "text": "Confidence Calibration Perfect calibration of neural network can be realized when the confidence score reflects the real probability that the classification is classified correctly. Formally, the perfectly calibrated network satisfied $\\overrightarrow{\\cdot}\\left(\\dot{\\hat{y}}=y|\\hat{p}=p\\right)=p$ for all $p\\in[0,1]$ . However, in practical applications, the sample is divided into $M$ bins $\\{D_{b}\\}_{b=1}^{M}$ . The limited availability of data restricts the ability to accurately estimate the calibration error. According to their confidence scores and the calibration error, an approximation is calculated for each bins $\\bar{\\{D_{b}\\}}_{b=1}^{M}$ . $D_{b}$ contains all sample with $\\begin{array}{r}{\\hat{p}\\in\\left[\\frac{b}{M},\\frac{b+1}{M}\\right)}\\end{array}$ Average confidence is computed as co $\\begin{array}{r}{\\iota f\\left(D_{b}\\right)=\\frac{1}{|D_{b}|}\\sum_{i\\in D_{b}}\\hat{p}^{i}}\\end{array}$ and the bin accuracy is computed as $\\begin{array}{r}{a c c\\left(D_{b}\\right)=\\frac{1}{\\left|D_{b}\\right|}\\sum_{i\\in D_{b}}\\mathrm{I}\\left(y_{c}^{i}=\\hat{y}_{c}^{i}\\right)}\\end{array}$ . ECE and MCE [29] are calculated as follows. ", "page_idx": 2}, {"type": "equation", "text": "$$\nE C E=\\sum_{b=1}^{M}\\frac{\\left|D_{b}\\right|}{N}\\left|a c c\\left(D_{b}\\right)-c o n f\\left(D_{b}\\right)\\right|\n$$", "text_format": "latex", "page_idx": 2}, {"type": "equation", "text": "$$\nM C E=\\operatorname*{max}_{b\\in\\{1,...,M\\}}\\left|a c c\\left(D_{b}\\right)-c o n f\\left(D_{b}\\right)\\right|\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "2.2 Parametric Softmax ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Softmax cross-entropy (CE) is expressed as ", "page_idx": 2}, {"type": "equation", "text": "$$\nJ=-\\log{\\frac{e^{z_{c}}}{\\sum_{j=1}^{m}e^{z_{j}}}}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "We introduce two hyperparameters in the Softmax mapping, which is expressed as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\nJ=-\\log\\frac{e^{z_{c}/\\tau}}{\\sum_{j\\neq c}e^{z_{j}/\\tau}+\\beta e^{z_{c}/\\tau}}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The parametric Softmax cross-entropy can be approximated as the following max function, as shown in (5). Minimizing this max function is expected that output $z_{c}$ can be larger than other class outputs $z_{j},j=1,\\dots,m,j\\neq c$ , which is in line with the logic of the one-versus-all classification decision-making $c l s\\left(z\\left(x\\right)\\right)=\\operatorname*{max}\\left\\{z_{j}\\left(x\\right)\\right\\},j=1,\\ldots,m$ . ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{\\tau\\to0}\\,-\\log\\frac{e^{z_{c}/\\tau}}{\\sum_{j\\neq c}e^{z_{j}/\\tau}+\\beta e^{z_{c}/\\tau}}=\\operatorname*{lim}_{\\tau\\to0}\\operatorname*{max}\\left\\{\\log\\beta,z_{j}-z_{c}/\\tau,j=1,\\dots,m,j\\neq c\\right\\}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The temperature coefficient $\\tau$ has been extensively investigated in model calibration. Temperature scaling represents a commonly utilized calibration technique in post-processing calibration methods. $\\beta$ is regarded as a soft margin, with its approximation procedure detailed in Eq. (5). Consequently, ", "page_idx": 2}, {"type": "image", "img_path": "fAnubdSFpn/tmp/72627da56fa88fad0221b3afffaadbd6be0ff7cb0cd0ae18746ea24d158b14dd.jpg", "img_caption": ["Figure 2: Confidence and reliability diagrams with ResNet18 on CIFAR-100. $(b i n s=10)$ ) In each subplot, the left plot illustrates the sample distribution in individual bins, while the right plot displays the average confidence and accuracy in each bin. Ideally, calibration aims for consistency between accuracy and average confidence in each bin. It indicates that a smaller gradient decay rate $\\beta$ is associated with more pronounced miscalibration of the model, while a larger gradient decay rate mitigates this issue. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "CE can be interpreted as a margin-based loss function. Nonetheless, due to the distance distortion between input and representation spaces, maximizing the margin in the input space of models is not achieved simultaneously by large margin Softmax. Consequently, its dynamic characteristic in the optimization process tends to be ambiguous. ", "page_idx": 3}, {"type": "text", "text": "2.3 Probability-dependent gradient decay ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Considering the Softmax with the sole hyperparameter $\\beta$ , the temperature $\\tau$ is set to 1. ", "page_idx": 3}, {"type": "equation", "text": "$$\nJ=-\\log\\frac{e^{z_{c}}}{\\sum_{j\\neq c}e^{z_{j}}+\\beta e^{z_{c}}}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Let us first consider the gradient of the Softmax. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\displaystyle{\\frac{\\partial J}{\\partial z_{c}}=-\\frac{\\sum e^{z_{j}}-e^{z_{c}}}{\\sum e^{z_{j}}+\\left(\\beta-1\\right)e^{z_{c}}}}}\\\\ {\\displaystyle{\\frac{\\partial J}{\\partial z_{j}}=\\frac{e^{z_{j}}}{\\sum e^{z_{j}}+\\left(\\beta-1\\right)e^{z_{c}}}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Introducing probabilistic output $\\begin{array}{r}{p_{j}=\\frac{e^{z_{j}}}{e^{z_{1}}+\\dots+e^{z_{m}}}}\\end{array}$ as an intermediate variable, we obtain ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\frac{\\partial J}{\\partial z_{j}}=\\left\\{\\begin{array}{l l}{-\\displaystyle\\frac{1-p_{c}}{1+(\\beta-1)p_{c}},j=c}\\\\ {\\displaystyle\\frac{p_{j}}{1+(\\beta-1)p_{c}},j\\neq c}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Fig. 1 illustrates how the introduced hyperparameter $\\beta$ determines the gradient decay rate as the instance-level probability increases. More empirical experimental results can be found in the Appendix A.2. A smaller $\\beta$ results in a reduced decay rate of gradient amplitude corresponding to probability. Empirical investigations have shown that the magnitude of $\\beta$ during optimization determines the average confidence level and consequently impacts the calibration performance of the model. Fig. 2 demonstrates that a low gradient decay rate exacerbates the over-confidence in the model\u2019s output, whereas a high gradient decay rate can alleviate this issue and yield improved calibration results [27]. ", "page_idx": 3}, {"type": "image", "img_path": "fAnubdSFpn/tmp/0b9abb4f2408192ec983e14d4a8bfb693cc32711a151c1d9feac021eb22586f1.jpg", "img_caption": ["Figure 3: The framework of PID controller-based adaptive probability-dependent gradient decay. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The probability-dependent gradient decay rate exhibits a negative correlation with the model\u2019s average confidence, as shown in Fig. 2 and Appendix A.2. Higher gradient decay rates result in a concave reduction in gradient magnitude as the sample confidence increases, thereby yielding a smoother distribution of confidence. Although high gradient decay rates can mitigate over-confidence distributions for samples, excessively small or large gradient magnitudes may lead to inadequate optimization. Consequently, we propose an adaptive gradient decay rate by a PID controller to ensure model calibration on optimization. Additionally, we propose a variable learning rate schedule to adjust the gradient and counterbalance the impact of fluctuating gradient decay rates on gradient magnitude. The whole framework is shown in Fig. 3. ", "page_idx": 4}, {"type": "text", "text": "3.1 PID controller approach for adaptive probability-dependent gradient decay ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Our approach focuses on regulating the gradient decay rate by monitoring the average confidence and accuracy within each bin of the validation set throughout model optimization. This aims to enhance the model\u2019s calibration and dynamic properties during optimization. Eq. (1) specifies the desired calibration by representing only the absolute value of the difference between average confidence and accuracy within each bin. However, it fails to capture the under-confidence and over-confidence in model calibration. Therefore, we propose a Relative Calibration Error (RCE) to reflect over-confidence and under-confidence: ", "page_idx": 4}, {"type": "equation", "text": "$$\nR C E=\\sum_{b=1}^{M}\\frac{\\left|D_{b}\\right|}{N}\\left(c o n f\\left(D_{b}\\right)-a c c\\left(D_{b}\\right)\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In the control system depicted in Fig. 3, RCE serves as the output, with the gradient decay coefficient acting as the controlled variable. The target RCE value is set to 0. During each iteration, the model processes the validation set to calculate the RCE. If the RCE is greater than 0, it indicates over-confidence in the probability distribution, necessitating an increase in the gradient decay rate during model optimization. Conversely, if the RCE is less than 0, it signifies under-confidence in the probability distribution, prompting a decrease in the gradient decay rate. The PID controller determines the specific adjustment required for the gradient decay coefficient $\\beta$ . A PID controller continually computes an error $e\\left(t\\right)$ , representing the disparity between the desired optimal RCE and the control system output. It then applies a correction $u\\left(t\\right)$ to the system, incorporating proportional $(P)$ , integral $(I)$ , and derivative $(D)$ terms of $e\\left(t\\right)$ . Mathematically, there is: ", "page_idx": 4}, {"type": "equation", "text": "$$\nu\\left(t\\right)=K_{p}e\\left(t\\right)+K_{i}\\int_{0}^{t}e\\left(t\\right)d t+K_{d}\\frac{\\partial}{\\partial t}e\\left(t\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Data: Training set $\\left\\{x_{i}^{t r a i n},y_{i}^{t r a i n}\\right\\}_{i=1.}^{N}$ ; Validation set $\\{x_{i}^{v a l},y_{i}^{v a l}\\}_{i=1}^{N_{v a l}}$ ; Classification model $f_{\\theta}$ ; Learning rate $\\lambda$ ; Batch size $\\bar{N}_{B}$ ; Maximum iteration $T_{m a x}$ ; PID controller $K_{p}$ , $K_{i}$ and $K_{d}$ .   \nResult: Classification model $f_{\\theta}$   \n1 Initialize $\\theta,\\beta,\\lambda$ ;   \n2 while $t<T_{m a x}$ do   \n3 # Adjust gradient decay rate $\\beta$ by PID controller;   \n4 $R C E$ of validation set $\\leftarrow$ Computing by Eq.(10);   \n5 $u\\left(t\\right)\\gets$ Computing by Eq.(11);   \n6 $\\beta_{t}\\gets$ Computing by Eq.(12);   \n7 # Adjust learning rate $\\lambda$ by gradient compensation;   \n$\\alpha\\left(t\\right)\\gets$ Computing by Eq.(14);   \n9 $\\lambda\\left(t\\right)\\gets$ Computing by Eq.(15);   \n10 # Optimize neural network by gradient-descent;   \n11 $\\begin{array}{r}{\\theta\\leftarrow\\theta+\\lambda\\,(t)\\frac{\\partial J}{\\partial\\theta}}\\end{array}$ ;   \n12 end ", "page_idx": 5}, {"type": "text", "text": "where $K_{p}$ , $K_{i}$ and $K_{d}$ are the gain coefficients on the $P$ , $I$ and $D$ terms, respectively. The coefficients $K_{p}$ , $K_{i}$ and $K_{d}$ determine the contributions of present, past and future errors to the current correction. $e\\left(t\\right)=-R C E\\left(t\\right)$ represents the error of the $t$ th optimization epoch. Since $0<\\beta$ , the updating step is described as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\beta_{t}=\\beta_{t-1}e^{-u(t)}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The PID controller is a widely employed feedback control mechanism in engineering and industrial processes [30, 28]. It is utilized in systems requiring precise control over variables. As depicted in Fig. 3, the PID controller is utilized in the model optimization to regulate RCE, ensuring balanced model calibration and mitigating overftiting compared to model accuracy within the baseline strategy. As depicted in (11), the PID comprises three terms: the proportional $(P)$ term, integral $(I)$ term, and derivative $(D)$ term. Firstly, the proportional $(P)$ action ensures that the controller responds proportionally to the current error. It provides an immediate correction to minimize the RCE. Secondly, the integral $(I)$ action continuously integrates the error over time and adjusts the control signal accordingly, eliminating any steady-state error. It eliminates any steady-state error by gradually reducing the cumulative error to zero. Thirdly, the derivative $(D)$ action anticipates the future behavior of the error by considering its rate of change, damping oscillations and overshoots to improve system stability and transient response. PID controllers play a crucial role in maintaining stability, accuracy, and efficiency in ensuring precise model calibration by adjusting probability-dependent gradient decay in model optimization. ", "page_idx": 5}, {"type": "text", "text": "3.2 Adaptive learning rate for gradient compensation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Changes in the probability-dependent gradient decay rate significantly impact model calibration because varying decay rates change dynamic characteristic on the optimization for different samples. While a large gradient decay rate can maintain a similar confidence level in optimizing both highconfidence and low-confidence samples, a small decay rate results in a curriculum learning sequence where confidence in low-confidence samples increases only when confidence in high-confidence samples reaches a certain threshold. Nonetheless, varying decay rates also lead to changing gradient magnitudes, thereby influencing model optimization. For instance, a small gradient at the outset of optimization could result in insufficient optimization, thereby diminishing the model\u2019s generalization. To mitigate the influence of gradient magnitude fluctuations on model optimization, we implement a dynamic learning rate to counteract the impact of gradient fluctuations caused by varying $\\beta$ . ", "page_idx": 5}, {"type": "text", "text": "Since $\\begin{array}{r}{\\left|{\\frac{\\partial J}{\\partial z_{c}}}\\right|+\\sum_{j\\neq c}\\left|{\\frac{\\partial J}{\\partial z_{j}}}\\right|=2\\left|{\\frac{\\partial J}{\\partial z_{c}}}\\right|\\!,\\left|{\\frac{\\partial J}{\\partial z_{c}}}\\right|}\\end{array}$ can represent the gradient magnitude of the sample in output layer. Building on (9), we establish a metric to quantify the magnitude of the gradient at that specific gradient decay rate $\\beta$ : ", "page_idx": 5}, {"type": "image", "img_path": "fAnubdSFpn/tmp/256afcc9f2759357bfccbd260a08b972a6fa1acec0720d23ca89f48ee60683cd.jpg", "img_caption": ["Figure 4: Confidence histograms and reliability diagrams for different calibration methods with ResNet35 on CIFAR-100. In each subplot, the left plot illustrates the sample distribution in individual bins, while the right plot displays the average confidence and accuracy in each bin. Our training calibration can improve performance on confidence estimate. "], "img_footnote": [], "page_idx": 6}, {"type": "equation", "text": "$$\n\\alpha\\left(t\\right)=\\int_{0}^{1}\\frac{1-p_{c}}{1+\\left(\\beta_{t}-1\\right)p_{c}}d p_{c}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Since $\\beta>0$ , we obtain ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\alpha\\left(t\\right)=\\left\\{\\begin{array}{c c}{\\frac{\\beta_{t}\\ln\\beta_{t}-\\beta_{t}+1}{\\left(\\beta_{t}-1\\right)^{2}}}&{\\beta_{t}\\neq1}\\\\ {0.5}&{\\beta_{t}=1}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "The learning rate, adjusted to account for the gradient dynamics over $t$ epoch, is modified according to the following formula: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\lambda\\left(t\\right)=\\lambda\\left(t-1\\right)\\alpha\\left(t-1\\right)/\\alpha\\left(t\\right)\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\lambda\\left(t\\right)$ is learning rate of $t$ th optimization epoch. The assumption underlying the gradient compensation proposed in (13)-(15) relies on the uniform distribution of samples within the probability interval $[0,1]$ . Integrating $\\left|\\frac{\\partial J}{\\partial z_{c}}\\right|$ within the probability range $[0,1]$ approximates the variation in gradient amplitudes across different gradient decay coefficients $\\beta$ . However, this assumption may not hold true during the optimization process. Nonetheless, this simple adaptive learning rate approach can effectively mitigate the issue of excessively small gradients resulting from overly large gradient decay rates. When the magnitude decreases, learning rate increases accordingly to compensate for the change in gradient amplitude. The whole Adaptive Probability-dependent Gradient Decay method by PID controller (PID-AGD) for model calibration is described in Algorithm 1. ", "page_idx": 6}, {"type": "text", "text": "4 Empirical experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "The experimental validation comprises four main components. Firstly, we assess the performance of our algorithm and other calibration methods in terms of model calibration. Secondly, we compare the accuracy and model calibration results of our method with those obtained using different loss functions in supervised learning. Thirdly, we conduct ablation experiments on the proportional term $K_{p}$ , integral term $K_{i}$ , and differential term $K_{d}$ across PID controller. Finally, we conducted the ablation experiment with different optimizers to verify the effectiveness of the adaptive learning rate for gradient compensation. ", "page_idx": 6}, {"type": "text", "text": "Train setting The baseline models include ResNet and VGG variants. The datasets comprised SVHN, CIFAR-10/100, 102 Flower and Tiny-ImageNet. In CIFAR-10/100, the training set contained 40,000 images, with testing and validation sets comprising 10,000 images each. The ratio of training set, validation set and test set in 102 Flower is 2:1:1 respectively. For Tiny-ImageNet, 100,000 images were used for training, and 10,000 images for testing and validation. SVHN utilized 58,606 training images, 14,651 validation images, and 26,032 testing images. VisDrone contains 5471 training images, 1548 validation images and 3190 testing images. COCO utilized 82,783 training, 40,504 validation, and 40,775 testing images. In all classification experiments, the learning rate, momentum and weight clipping were set to 0.1, 0.9 and $\\scriptstyle\\mathrm{Norm}=3$ , respectively. The learning rate decreased to $10\\%$ at $40\\%$ and $80\\%$ of the iterations, with weight decay set to $\\bar{10}^{-4}$ and a total of 200 iterations. For Tiny-ImageNet, the learning rate was set to 0.01 with a batch size of 64. The number of bins in all calibration metric are set to 10. $P$ , $I$ and $D$ in our method are set to 1, 0.1, 1. ", "page_idx": 6}, {"type": "table", "img_path": "fAnubdSFpn/tmp/5f269af1d45bb47d0dd6a6244303ea20c398a8a86eaed3d6fc6cada51273cd5a.jpg", "table_caption": ["Table 1: The calibration performance of different post-hoc calibration methods. The best results are in bold, and relative improvements over $2^{n d}$ best result in each section are in red. Results are averaged over five runs with different seeds. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "4.1 Calibration performance with other calibration methods ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "The experiments in this subsection aim to validate the efficacy of our proposed calibration method against baseline calibration methods, which employs PID control of the gradient decay rate. We compare our approach with other post-processing calibration methods, including Histogram Binning [31], Temperature Scaling [10], Vector Scaling, and TS-AvUC [13]. The evaluation metrics employed include ECE [29], MCE, and Adaptive Expected Calibration Error (AdaECE) [12]. The datasets primarily consist of CIFAR-10/100, SVHN, 102 Flower, Tiny-ImageNet, VisDrone and COCO, while the models predominantly belong to the VGG, ResNet and YOLO series. The comprehensive experimental results are presented in Table 1. The results of the visualization of all methods in ResNet35 on data CIFAR-100 for confidence histograms and reliability diagrams are presented in Fig. 4. ", "page_idx": 7}, {"type": "text", "text": "The results presented in Table 1 demonstrate that all methods effectively enhance the calibration of the model. However, post-processing calibration methods rely on an optimized independent output-probability mapping, which doesn\u2019t alter the optimization process of the original model itself. Consequently, these methods can solely refine the probability distribution of the model output. Our proposed method surpasses other calibration techniques in terms of overall ECE, MCE, and AdaECE. Therefore, these experimental findings underscore the effectiveness of our approach in enhancing model calibration by dynamically adjusting the gradient decay rate during the model optimization. ", "page_idx": 7}, {"type": "table", "img_path": "fAnubdSFpn/tmp/c9deb2b910bcfa6a8c909b825b7b99eee76ceb2ea19e7d3e3c26b46d98baf399.jpg", "table_caption": ["Table 2: The calibration performance and accuracy of different objective functions. The best results are in bold. Results are averaged over five runs with different seeds. "], "table_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "fAnubdSFpn/tmp/fa4859b1f22ef7413f8e0687a4411d131626c2dc0f7883b9b1cc4002386e6c34.jpg", "img_caption": ["Figure 5: Accuracy and ECE of different PID settings with ResNet35 on CIFAR-100. The preceding figures illustrate the testing accuracy and ECE outcomes in the model optimization. Notably, the accuracy appears insensitive to the PID controller configuration. Nonetheless, excessive settings of $P$ , $I$ , and $D$ may compromise the stability of ECE during the model optimization. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.2 Consistent optimization in supervised learning ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Model accuracy and calibration are typically considered as two independent optimization metrics. In the baseline optimization strategy employing cross-entropy as the loss function, the model calibration tend to overfti earlier than the accuracy. To examine the impact of different optimization strategies on model calibration characteristics, Table 2 illustrates these effects. Comparative algorithms such as cosface [32], center loss [33], CE with DCA [34] and Softmax-based cross-entropy were utilized, and their performance in accuracy and uncertainty estimation was observed. While cosface, center loss, and our proposed approach, showed improvements in accuracy, the former two algorithms did not consider model calibration, resulting in overconfident predictions. DCA regularity improves model calibration but hurts accuracy. Conversely, our proposed PID-based method with variable gradient decay rate ensures both model accuracy and calibration. This reaffirms the significant influence of probability-dependent gradient decay rates on model calibration and overall performance. ", "page_idx": 8}, {"type": "text", "text": "4.3 Ablation experiments and analysis for PID controller ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In the model optimization, both model optimization and gradient coefficient decay need consideration, constituting a bi-level optimization problem. From a control system perspective, altering the gradient decay rate modifies the dynamic characteristics of subsequent iterations in the model optimization. However, its impact on model calibration may not be fully apparent in the immediate optimization results and may require more iterations for observation. Thus, viewed from this perspective, the entire control system can be regarded as having a time lag, whereby the controlled variable $\\beta$ exhibits a certain delay concerning the RCE. While it may be challenging to mathematically describe the control system, the PID controller serves as a \u201cblack-box\u201d controller, leveraging the integral and differential variations of the error, proving highly effective. The ablation experiments are shown in Fig. 5. We conclude that model calibration is robust to the choice of PID parameters; however, setting the PID parameters too high can compromise the stability of ECE during model optimization. Based on this, we selected PID settings of 1, 0.1, and 1 for the experiments presented above. On the other hard, in Fig. 5, the accuracy curves with our method all exhibited a noticeable jitter, which requires further investigation. ", "page_idx": 8}, {"type": "table", "img_path": "fAnubdSFpn/tmp/a970020c7c314a6a5b3699278311aa993d83dba8e41e162b4c30ecf79d39c6c0.jpg", "table_caption": ["Table 3: Different optimizer performance in ResNet35 on CIFAR-100. Results are averaged over five runs with different seeds. Adam optimization compromises model accuracy when applied to a dynamic optimization objective using a PID controller approach. "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "4.4 Ablation experiments of different optimizer ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The motivation for proposing the adaptive learning rate for gradient compensation arises from the observation that significant variations in gradient magnitude can negatively impact the model\u2019s optimization for classification error. A dynamic learning rate helps maintain a relatively stable gradient magnitude. Additionally, the Adam optimizer aids in reducing gradient fluctuations. To verify the novelty of our method, Table 3 presents the performance of various optimizers when applied to our proposed PID controller-based calibration method. ", "page_idx": 9}, {"type": "text", "text": "Our experimental results indicate that Adam can indeed provide a more stable gradient and calibration performance, particularly in conjunction with our PID controller approach for model calibration. However, it is notable that Adam results in reduced accuracy, achieving only $63.5\\%$ on CIFAR-100 with ResNet35, significantly lower than the baseline accuracy of $73.8\\%$ . A key difference arises in the baseline case handled by Adam. In our proposed PID controller method, which adjusts the hyperparameter $\\beta$ during model calibration, the loss function is dynamic. While Adam retains previous gradient information, this can confilct with the current gradient vector direction because the optimization objective is dynamic. In contrast, our compensation method only modifies the learning rate and retains gradient vector direction pertinent to the current loss function. This may explain why the Adam optimizer does not yield better results. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The gradient decay rate plays a crucial role in shaping the calibration characteristics and uncertainty distribution of deep learning throughout the dynamic optimization. Our results show a negative correlation between the gradient decay rate with increasing instance-level probability and the overall confidence distribution. This paper introduces a novel optimization approach aimed at regulating the gradient decay rate hyperparameter $\\beta$ , via a PID controller. The goal is to achieve perfect model calibration by monitoring the proposed relative calibration error of the validation set. Within this control system framework as shown in Fig. 3, the probabilistic gradient decay rate serves as the controlled variable, while a newly defined relative calibration error acts as the control system output, mitigating both over-confidence and under-confidence in the model. Additionally, to address fluctuations of gradient amplitude resulting from varying gradient decay rate, a new learning rate compensation mechanism is employed. Empirical validation demonstrates that our proposed adaptive gradient decay rate optimization strategy, facilitated by a PID controller, effectively enhances both the accuracy and model calibration in deep learning, ensuring adequate calibration throughout the supervised learning. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Chuan Guo, Geoff Pleiss, Yu Sun, and Kilian Q Weinberger. On calibration of modern neural networks. In International Conference on Machine Learning, pages 1321\u20131330. PMLR, 2017.   \n[2] Gustavo Carneiro, Leonardo Zorron Cheng Tao Pu, Rajvinder Singh, and Alastair Burt. Deep learning uncertainty and confidence calibration for the five-class polyp classification from colonoscopy. Medical Image Analysis, 62:101653, 2020.   \n[3] Jian Xu, Xinxiong Jiang, Siyang Liao, Deping Ke, Yuanzhang Sun, Liangzhong Yao, and Beilin Mao. Probabilistic prognosis of wind turbine faults with feature selection and confidence calibration. IEEE Transactions on Sustainable Energy, 15(1):52\u201367, 2024.   \n[4] Dimitrios Milios, Raffaello Camoriano, Pietro Michiardi, Lorenzo Rosasco, and Maurizio Filippone. Dirichlet-based gaussian processes for large-scale calibrated classification. In Advances in Neural Information Processing Systems, volume 31, 2018.   \n[5] Yeming Wen, Dustin Tran, and Jimmy Ba. Batchensemble: an alternative approach to efficient ensemble and lifelong learning. In International Conference on Learning Representations, 2019.   \n[6] Yarin Gal and Zoubin Ghahramani. Dropout as a bayesian approximation: Representing model uncertainty in deep learning. In International Conference on Machine Learning, pages 1050\u20131059. PMLR, 2016.   \n[7] Deng-Bao Wang, Lei Feng, and Min-Ling Zhang. Rethinking calibration of deep neural networks: Do not be afraid of overconfidence. In Advances in Neural Information Processing Systems, volume 34, pages 11809\u201311820, 2021.   \n[8] Meelis Kull, Telmo Silva Filho, and Peter Flach. Beta calibration: a well-founded and easily implemented improvement on logistic calibration for binary classifiers. In Artificial Intelligence and Statistics, pages 623\u2013631. PMLR, 2017.   \n[9] Yongqiao Wang, Lishuai Li, and Chuangyin Dang. Calibrating classification probabilities with shape-restricted polynomial regression. IEEE Transactions on Pattern Analysis and Machine Intelligence, 41(8):1813\u20131827, 2019.   \n[10] Christian Tomani, Daniel Cremers, and Florian Buettner. Parameterized temperature scaling for boosting the expressive power in post-hoc uncertainty calibration. In European Conference on Computer Vision, pages 555\u2013569. Springer, 2022.   \n[11] Amir Rahimi, Amirreza Shaban, Ching-An Cheng, Richard Hartley, and Byron Boots. Intra order-preserving functions for calibration of multi-class neural networks. In Advances in Neural Information Processing Systems, volume 33, pages 13456\u201313467, 2020.   \n[12] Khanh Nguyen and Brendan O\u2019Connor. Posterior calibration and exploratory analysis for natural language processing models. In Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 1587\u20131598, 2015.   \n[13] Ranganath Krishnan and Omesh Tickoo. Improving model calibration with accuracy versus uncertainty optimization. In Advances in Neural Information Processing Systems, volume 33, pages 18237\u201318248, 2020.   \n[14] Aviral Kumar, Sunita Sarawagi, and Ujjwal Jain. Trainable calibration measures for neural networks from kernel mean embeddings. In International Conference on Machine Learning, pages 2805\u20132814. PMLR, 2018.   \n[15] Dan Hendrycks, Kimin Lee, and Mantas Mazeika. Using pre-training can improve model robustness and uncertainty. In International Conference on Machine Learning, pages 2712\u2013 2721. PMLR, 2019.   \n[16] Sunil Thulasidasan, Gopinath Chennupati, Jeff A Bilmes, Tanmoy Bhattacharya, and Sarah Michalak. On mixup training: Improved calibration and predictive uncertainty for deep neural networks. In Advances in Neural Information Processing Systems, volume 32, 2019.   \n[17] Aditya Krishna Menon, Ankit Singh Rawat, Sashank J Reddi, Seungyeon Kim, and Sanjiv Kumar. Why distillation helps: a statistical perspective. arXiv preprint arXiv:2005.10419, 2020.   \n[18] Linwei Tao, Minjing Dong, Daochang Liu, Changming Sun, and Chang Xu. Calibrating a deep neural network with its predecessors. arXiv preprint arXiv:2302.06245, 2023.   \n[19] Bowen Lei, Ruqi Zhang, Dongkuan Xu, and Bani Mallick. Calibrating the rigged lottery: Making all tickets reliable. In International Conference on Learning Representations, 2022.   \n[20] Matthias Minderer, Josip Djolonga, Rob Romijnders, Frances Hubis, Xiaohua Zhai, Neil Houlsby, Dustin Tran, and Mario Lucic. Revisiting the calibration of modern neural networks. In Advances in Neural Information Processing Systems, volume 34, pages 15682\u201315694, 2021.   \n[21] Jooyoung Moon, Jihyo Kim, Younghak Shin, and Sangheum Hwang. Confidence-aware learning for deep neural networks. In International Conference on Machine Learning, pages 7034\u20137044. PMLR, 2020.   \n[22] Bingyuan Liu, J\u00e9r\u00f4me Rony, Adrian Galdran, Jose Dolz, and Ismail Ben Ayed. Class adaptive network calibration. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 16070\u201316079, 2023.   \n[23] Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Doll\u00e1r. Focal loss for dense object detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 2980\u20132988, 2017.   \n[24] Jishnu Mukhoti, Viveka Kulharia, Amartya Sanyal, Stuart Golodetz, Philip Torr, and Puneet Dokania. Calibrating deep neural networks using focal loss. In Advances in Neural Information Processing Systems, volume 33, pages 15288\u201315299, 2020.   \n[25] Arindam Ghosh, Thomas Schaaf, and Matthew Gormley. Adafocal: Calibration-aware adaptive focal loss. In Advances in Neural Information Processing Systems, volume 35, pages 1583\u20131595, 2022.   \n[26] Jonathan Wenger, Hedvig Kjellstr\u00f6m, and Rudolph Triebel. Non-parametric calibration for classification. In International Conference on Artificial Intelligence and Statistics, pages 178\u2013190. PMLR, 2020.   \n[27] Siyuan Zhang and Linbo Xie. Advancing neural network calibration: The role of gradient decay in large-margin softmax optimization. Neural Networks, 178:106457, 2024.   \n[28] Wangpeng An, Haoqian Wang, Qingyun Sun, Jun Xu, Qionghai Dai, and Lei Zhang. A pid controller approach for stochastic optimization of deep networks. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 8522\u20138531, 2018.   \n[29] Mahdi Pakdaman Naeini, Gregory Cooper, and Milos Hauskrecht. Obtaining well calibrated probabilities using bayesian binning. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 29, 2015.   \n[30] Kiam Heong Ang, Gregory Chong, and Yun Li. Pid control system analysis, design, and technology. IEEE transactions on control systems technology, 13(4):559\u2013576, 2005.   \n[31] Bianca Zadrozny and Charles Elkan. Obtaining calibrated probability estimates from decision trees and naive bayesian classifiers. In International Conference on Machine Learning, volume 1, pages 609\u2013616, 2001.   \n[32] Feng Wang, Jian Cheng, Weiyang Liu, and Haijun Liu. Additive margin softmax for face verification. IEEE Signal Processing Letters, 25(7):926\u2013930, 2018.   \n[33] Yandong Wen, Kaipeng Zhang, Zhifeng Li, and Yu Qiao. A discriminative feature learning approach for deep face recognition. In Computer vision\u2013ECCV 2016: 14th European conference, pages 499\u2013515, 2016.   \n[34] Gongbo Liang, Yu Zhang, Xiaoqin Wang, and Nathan Jacobs. Improved trainable calibration method for neural networks on medical imaging classification. In British Machine Vision Conference 2020. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Experiments compute resources ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "For experiments, we utilized compute resources featuring an NVIDIA A100 GPU with PCIe interface and 40GB memory capacity, accompanied by PyTorch version 1.7.0 with CUDA version 11.0. The computational backbone was supported by an Intel Xeon Gold 6278C processor. ", "page_idx": 12}, {"type": "text", "text": "A.2 Experiments for fixed gradient decay rate ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "More empirical results validating the relationship between gradient decay hyperparameter $\\beta$ and model calibration are presented in Tab. 4, Tab. 5 and Tab. 6, while confidence histograms and reliability diagrams are depicted in Figs. 6-9. These experiments consistently conclude that the gradient decay rate $\\beta$ is negatively correlated with the overall confidence level of the model. Specifically, when the value $\\beta$ is small, the gradient decay rate decreases, leading to higher overall confidence in the model output and a greater likelihood of overconfident probabilistic output. Conversely, as the value $\\beta$ increases, the gradient decay rate increases, resulting in lower overall confidence in the model\u2019s output and a higher probability of underftiting in the model\u2019s probabilistic output distribution. Although model accuracy appears somewhat linked to this hyperparameter, conclusive generalizations from theoretical perspective cannot be drawn for the current experimental results. ", "page_idx": 12}, {"type": "table", "img_path": "fAnubdSFpn/tmp/e26944716e5d2e23567e68489ef1e2767f14f03fd2f87cbd099d4df0b536c53f.jpg", "table_caption": ["Table 4: Model calibration of different gradient decay and post-processing calibration. The best results are in bold. Results are averaged over five runs with different seeds. $(b i n s=10)$ ) "], "table_footnote": [], "page_idx": 12}, {"type": "image", "img_path": "fAnubdSFpn/tmp/a045c939a8e66fc622d410d87d306aa702a4fcb7a00afeafab8d96ce99e3ef74.jpg", "img_caption": ["Figure 6: Confidence histograms and reliability diagrams for gradient decay with ResNet18 on CIFAR-10. $(b i n s=10)$ ) "], "img_footnote": [], "page_idx": 12}, {"type": "image", "img_path": "fAnubdSFpn/tmp/5783ddf4ec4f2865dc54f760b0ae53e89f37137b048e7eb478ab12ec08573beb.jpg", "img_caption": ["Figure 7: Confidence histograms and reliability diagrams with ResNet34 on CIFAR-100. (bins = 10) "], "img_footnote": [], "page_idx": 13}, {"type": "image", "img_path": "fAnubdSFpn/tmp/8fa74085482b019f0906cbcf11b3e1d2377c0a37199974c942ed55f6bb0db93e.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 8: Confidence histograms and reliability diagrams for gradient decay with VGG16 on CIFAR100. $(b i n s=10)$ ) ", "page_idx": 13}, {"type": "image", "img_path": "fAnubdSFpn/tmp/dc006cb0c54f570873cb1645a5f62101b3bc50a752ec8827beed9092342fbedc.jpg", "img_caption": ["Figure 9: Confidence histograms and reliability diagrams with ResNet50 on Tiny-ImageNet. $(b i n s=$ 10) "], "img_footnote": [], "page_idx": 13}, {"type": "table", "img_path": "fAnubdSFpn/tmp/c98aa91d4507cd78ba62f69ae830e946715aa90bd20e07209b36541828205a96.jpg", "table_caption": ["Table 5: The performance of ResNet34 on Tiny-ImageNet with different gradient decay. The best results are in bold. Results are averaged over five runs with different seeds. $(b i n s=10)$ ) "], "table_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "fAnubdSFpn/tmp/35956ef3b7d63986861377d2ba417a9a504ebe5873ec0705ac7a9dca75e5c4bb.jpg", "table_caption": ["Table 6: The performance of ResNet50 on Tiny-ImageNet with different gradient decay. The best results are in bold. Results are averaged over five runs with different seeds. $(b i n s=10)$ ) "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "A.3 Limitations and future works ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Our work currently lacks theoretical analysis. Although all experimental findings consistently demonstrate the impact of gradient decay rate $\\beta$ on model calibration, we still require theoretical frameworks to explain how the gradient decay rate affects the overall confidence distribution. Our experiments indicate that large gradient decay rates result in similar confidence levels across samples, while smaller rates yield more discriminatory levels. In essence, smaller decay rates enforce a more stringent curriculum learning sequence, whereby increased confidence in difficult samples only occurs after optimizing easier ones. Consequently, this leads to greater differentiation in final confidence distribution of different samples. While these empirical observations are compelling, they lack theoretical substantiation. ", "page_idx": 14}, {"type": "text", "text": "Methodologically, our current approach employs a PID controller to control gradient decay in optimization. However, in practice, the effect of gradient decay rate adjustments on model calibration requires a large number of epochs to manifest changes. Viewed from a control systems perspective, this delay indicates a substantial time lag in the control object. However, as neural network optimization processes defy mathematical description, designing effective controllers becomes inherently challenging. Furthermore, our work also lacks comprehensive statistical analysis of the calibrated outputs. Future research should address how alterations in the dynamic gradient decay rate impact the internal optimization process. ", "page_idx": 14}, {"type": "text", "text": "Additionally, the temperature coefficient $\\tau$ also impacts model calibration. The Softmax with small $\\tau$ disperses the inter-class distance by adjusting the probability output to focus more on hard negative samples. Nevertheless, large $\\tau$ can only smooth the output of all categories and cannot mine more information from simple positive samples. On the contrary, small $\\beta$ makes the gradient decay slowly so that easy positive samples can be sufficiently learned up to high confidence. An appropriate $\\beta$ can mining more discriminative features on the whole. Similarly, large $\\beta$ only keeps the samples at the same level of confidence and cannot extract more meaningful features from challenging samples. $\\tau$ and $\\beta$ improved the mining capability of Softmax in two different dimensions. The exploration of optimizing the effects of both hyperparameters to improve model calibration represents a promising approach. ", "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: Motivation and two technical contributions are articulated in the abstract and introduction. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: Please find limitations and future works in Appendx A.3 ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 15}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: The paper does not include theoretical results. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: Please find Train setting in Section 4 and Algorithm 1 ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 16}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The code is available in https://github.com/UHIF/PID_AGD. Please find Abstract. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Please find Train setting in Section 4. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: The descriptions of the figures are in the caption. All metrics are defined, such as (1)-(2) or added relevant references. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 17}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Please find Appendix A.1. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The research conducted with the NeurIPS Code of Ethics. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 18}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: This paper is foundational research and does not deal with applications. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not use existing assets. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 19}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}]