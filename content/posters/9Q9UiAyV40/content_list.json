[{"type": "text", "text": "MSPE: Multi-Scale Patch Embedding Prompts Vision Transformers to Any Resolution ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Wenzhuo Liu1,2, Fei $\\mathbf{Zhu^{3}}$ , Shijie $\\mathbf{M}\\mathbf{a}^{1,2}$ , Cheng-Lin Liu1,2\u2217 ", "page_idx": 0}, {"type": "text", "text": "1School of Artificial Intelligence, UCAS 2State Key Laboratory of Multimodal Artificial Intelligence Systems, CASIA 3Centre for Artificial Intelligence and Robotics, HKISI-CAS {liuwenzhuo2020, zhufei2018, mashijie2021}@ia.ac.cn, liucl@nlpr.ia.ac.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Although Vision Transformers (ViTs) have recently advanced computer vision tasks significantly, an important real-world problem was overlooked: adapting to variable input resolutions. Typically, images are resized to a fixed resolution, such as $224\\mathrm{x}224$ , for efficiency during training and inference. However, uniform input size conflicts with real-world scenarios where images naturally vary in resolution. Modifying the preset resolution of a model may severely degrade the performance. In this work, we propose to enhance the model adaptability to resolution variation by optimizing the patch embedding. The proposed method, called Multi-Scale Patch Embedding (MSPE), substitutes the standard patch embedding with multiple variable-sized patch kernels and selects the best parameters for different resolutions, eliminating the need to resize the original image. Our method does not require high-cost training or modifications to other parts, making it easy to apply to most ViT models. Experiments in image classification, segmentation, and detection tasks demonstrate the effectiveness of MSPE, yielding superior performance on low-resolution inputs and performing comparably on high-resolution inputs with existing methods. Code is available at https://github.com/SmallPigPeppa/ MSPE. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Vision Transformers (ViTs) [1, 2, 3, 4] have achieved significant success in various computer vision tasks, becoming a viable alternative to traditional convolutional neural networks [5, 6, 7, 8]. ViT divides an image into multiple patches, converts these patches into tokens via the patch embedding layer, and feeds them into the Transformer model [9, 10]. The token representations are usually obtained using a convolutional neural network (CNN). Early CNN architectures like AlexNet [11] were designed for fixed-size images (e.g., 224x224). For easy comparison, this setting has been maintained by subsequent image recognition models, including ViT [2]. For fitting neural network input layer size, ViTs typically resize the input image to a fixed resolution 2and divide it into a specific number of patches [12, 13, 14]. This practice restricts ViT models to processing single-resolution inputs. However, fixed input sizes confilct with real-world scenarios where image resolution varies due to camera devices/parameters, object size, and distance. This discrepancy can significantly degrade ViT\u2019s performance on different-resolution images. Changing the preset size requires retraining, and every resolution necessitates an individual model. Therefore, a natural question arises: Is it possible ", "page_idx": 0}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/b127eabb1836f408066694b5386a66e8766d591206f3df96745bcd680043e22a.jpg", "img_caption": ["Figure 1: MSPE results on ImageNet-1K. We loaded a ViT-B model pre-trained on ImageNet-21K from [19] and evaluated: (a) Height equals width, ranging from $28\\!\\times\\!28$ to $896\\!\\times\\!896$ , and (b) Fixed height $_{=128}$ , width ranging from 28 to 896. Vanilla ViT performance drops with size/aspect ratio changes; FlexiViT [15] significantly improves performance, and our method surpasses FlexiVIT. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "A few recent methods have been proposed for this problem: FlexiViT [15] uses a novel resizing method allowing flexible patch size and token length in ViT. ResFormer [16] enhances resolution adaptability through multi-resolution training and a global-local positional embedding strategy. NaViT [17] leverages example packing [18] to adjust token lengths during training, boosting efficiency and performance. However, these methods have two limitations. First, some of them are incompatible with existing transformer models, preventing the effective use of pre-trained ViTs, and thus lead to high re-training costs when applied. For example, models like NaViT and ResFormer require training the entire model to achieve multi-resolution performance. Second, their multi-resolution performance is insufficient. For example, FlexiViT demonstrates only slight performance improvement when the input images are smaller than the preset size. ", "page_idx": 1}, {"type": "text", "text": "We intuitively believe that an ideal solution should be compatible with most existing ViT models and perform well at any size and aspect ratio. To this end, we propose a method called Multi-Scale Patch Embedding (MSPE). It replaces the patch embedding layer in standard ViT models without altering the other parts of the model. This design makes MSPE compatible with most ViT models and allows for low-cost, direct application. Specifically, our method uses a set of learnable adaptive convolution kernels instead of fixed ones, which can automatically adjust the size and aspect ratio of the kernels based on the input resolution. It directly converts images into patch embeddings without modifying the input size or aspect ratio. The results in Figure 1 show that this simple method significantly improves performance, for example, increasing ImageNet-1K accuracy up to $47.9\\%$ across various resolutions. Our contributions are as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 By analyzing resolution adaptability in ViT models, we identify the patch embedding layer as the crucial component and provide a low-cost solution.   \n\u2022 We propose Multi-Scale Patch Embedding (MSPE), which enhances ViT models by substituting the standard patch embedding layer with learnable, adaptive convolution kernels, enabling ViTs to be applied on any input resolution.   \n\u2022 Experiments demonstrate that with minimal training (only five epochs), MSPE significantly enhances performance across different resolutions on classification, segmentation, and detection tasks. ", "page_idx": 1}, {"type": "text", "text": "2 Preliminaries and Analysis ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Vision Transformer Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Vision Transformers (ViTs) leverage the capabilities of the transformer model [20, 21], initially developed for natural language processing, to address vision tasks [22, 23, 24]. ViTs primarily consist of the patch embedding layer and Transformer encoder. ", "page_idx": 1}, {"type": "text", "text": "Patch Embedding converts an image $\\mathbf{\\Delta}x\\in\\mathbb{R}^{h\\times w\\times c}$ in the input space $\\mathcal{X}$ into a sequence of tokens $\\{z_{i}\\}_{i=1}^{N}$ , where $\\bar{z_{i}}\\in\\mathbb{R}^{d}$ is a vector in patchification space $\\mathcal{Z}$ . This transformation is achieved via patch embedding layer $g_{\\pmb{\\theta}}:\\mathcal{X}\\rightarrow\\mathcal{Z}$ , parameterized by $\\pmb{\\theta}$ . Specifically, the function $g_{\\theta}$ is implemented as convolution $\\operatorname{conv}_{\\theta}$ , using kernel $\\pmb{w}_{\\theta}\\in\\mathbb{R}^{h_{k}\\times w_{k}^{\\bullet}\\times d}$ and bias $\\boldsymbol{b}_{\\theta}\\in\\mathbb{R}^{d}$ . The kernel size is $(h_{k},w_{k})$ and the stride is $\\left(h_{s},w_{s}\\right)$ . In existing ViTs, patch embedding methods are categorized into non-overlapping and overlapping types: ", "page_idx": 1}, {"type": "text", "text": "\u2022 Non-overlapping patch embedding: In standard Vision Transformers (e.g., ViT [2]), the stride of $\\scriptstyle\\cos n\\mathbf{v}_{\\theta}$ matches the kernel size, i.e., $h_{s}=h_{k}$ and $w_{s}=w_{k}$ . The number of tokens $N$ is calculated by $\\left\\lfloor{\\frac{h}{h_{k}}}\\right\\rfloor\\,\\times\\,\\left\\lfloor{\\frac{w}{w_{k}}}\\right\\rfloor$ .   \n\u2022 Overlapping patch embedding: In models like PVT [4] and MViT [25], the stride is smaller than the kernel size, i.e., $h_{s}<h_{k}$ , $w_{s}<w_{k}$ . The number of tokens $N$ is calculated by $\\begin{array}{r}{\\left\\lceil{\\frac{h-h_{k}}{h_{s}}}+p\\right\\rceil\\times\\left\\lceil{\\frac{w-w_{k}}{w_{s}}}+p\\right\\rceil}\\end{array}$ , where $p$ is the padding size. ", "page_idx": 2}, {"type": "text", "text": "Transformer Encoder adds position encodings $\\mathrm{pos}_{i}$ to the token sequence, modifying it to $\\{z_{i}^{\\prime}\\}_{i=1}^{N}=$ $\\{z_{i}+{\\mathsf{p o s}}_{i}\\}_{i=1}^{N}$ . A class token $z_{\\mathrm{cls}}$ for global semantics is added to the front, i.e., $\\{z_{\\mathrm{cls}},z_{1}^{\\prime},\\dots,z_{N}^{\\prime}\\}$ . This sequence feeds into the Transformer Encoder $\\operatorname{Enc}_{\\phi}(z)$ , parameterized by $\\phi$ . For classification, only the class token $z_{\\mathrm{cls}}$ is used to produce a probability distribution, and other tokens $\\{z_{1}^{\\prime},...,z_{N}^{\\prime}\\}$ are discarded. ", "page_idx": 2}, {"type": "text", "text": "2.2 Problem Formulation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In real-world scenarios, images have variable resolutions due to variations in camera devices, parameters, object scale, and imaging distance. Our task is to ensure the model adapts to different resolutions. To this end, we resize the same image to multiple resolutions and optimize the model for these diverse inputs. Here is the formal definition of this task: ", "page_idx": 2}, {"type": "text", "text": "Firstly, the process of resizing (e.g. bilinear reize) is formally defined as a linear transformation: ", "page_idx": 2}, {"type": "text", "text": "where $\\mathbf{o}\\in\\mathbb{R}^{h\\times w}$ is any input, the resolution $r$ of $(h,w)$ transforms to $r*$ of $(h\\ast,w\\ast)$ after resizing, using the transformation matrix $B_{r}^{r*}\\in\\mathbb{R}^{h*w*\\times h w}$ . Each channel of $\\textbf{\\em x}$ is resized independently. ", "page_idx": 2}, {"type": "text", "text": "For input $(\\pmb{x},y)$ in dataset $\\mathcal{D}$ , the learning objective is to minimize the loss function $\\ell$ (e.g., crossentropy loss) across a series of resolutions $\\{r_{i}\\}_{i=1}^{M}$ , optimizing performance at each resolution from $r_{1}$ to $r_{M}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\underset{\\hat{\\theta},\\hat{\\phi}}{\\operatorname*{min}}\\mathbb{E}_{(x,y)\\sim\\mathcal{D}}[\\ell(\\mathrm{Enc}_{\\hat{\\phi}}(g_{\\hat{\\theta}}(B_{r}^{r_{i}}x)),y]\\quad\\forall r_{i}\\in\\{r_{i}\\}_{i=1}^{M}}\\\\ &{\\mathrm{~s.t.~}\\mathbb{E}_{(x,y)\\sim\\mathcal{D}}[\\ell(\\mathrm{Enc}_{\\hat{\\phi}}(g_{\\hat{\\theta}}(x)),y)]\\leqslant\\mathbb{E}_{(x,y)\\sim\\mathcal{D}}[\\ell(\\mathrm{Enc}_{\\phi}(g_{\\theta}(x)),y)]+\\epsilon,\\epsilon\\geqslant0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $E n c_{\\hat{\\phi}}(z)$ and $g_{\\hat{\\theta}}(\\pmb{x})$ are Transformer encoder and patch embedding layer, respectively. The slack variable $\\epsilon$ allows minor loss increments in the well-trained model $\\operatorname{Enc}_{\\phi}(g_{\\theta}(\\mathbf{x}))$ . ", "page_idx": 2}, {"type": "text", "text": "The central challenge is maintaining acceptable performance across different resolutions from $r_{1}$ to $r_{M}$ but keeping the performance of original resolution $r$ , which means adjustments of $\\theta$ and $\\phi$ must be careful. In this work, we confirm the key role of patch embedding and only optimizing $g_{\\theta}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\widehat{\\pmb{\\theta}}\\in\\arg\\operatorname*{min}_{\\widehat{\\pmb{\\theta}}}\\mathbb{E}_{(\\pmb{x},\\pmb{y})\\sim\\mathcal{D}}[\\ell(\\mathbf{Enc}_{\\phi}(g_{\\widehat{\\theta}}(B_{r}^{r_{i}}\\pmb{x})),\\mathscr{y}]\\quad\\forall r_{i}\\in\\{r_{i}\\}_{i=1}^{M}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "2.3 Pseudo-inverse Resize ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "To solve the optimization problems stated in Eq. (2) and (3), an intuitive solution appears to ensure that embedding layer $g_{\\theta}$ produces consistent features on different resolutions. For this purpose, FlexiViT [15] proposed PI-resize, which adjusts the embedding kernel to ensure uniform outputs: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\{\\widehat{\\omega_{\\theta}},\\widehat{b_{\\theta}}\\}=\\widehat{\\pmb{\\theta}}\\in\\arg\\operatorname*{min}_{\\widehat{\\pmb{\\theta}}}\\mathbb{E}_{\\pmb{x}\\sim\\mathcal{X}}[\\left(g_{\\widehat{\\theta}}(B_{r}^{r_{i}}\\pmb{x})-g_{\\theta}(\\pmb{x})\\right)^{2}]\\quad\\forall r_{i}\\in\\{r_{i}\\}_{i=1}^{M},}\\\\ &{\\qquad\\qquad\\qquad\\widehat{\\omega_{\\theta}}\\in\\arg\\underset{\\widehat{\\omega_{\\theta}}}{\\operatorname*{min}}\\mathbb{E}_{\\pmb{x}\\sim\\mathcal{X}}[\\left(\\langle\\pmb{x},\\omega_{\\theta}\\rangle-\\langle B_{r}^{r_{i}}\\pmb{x},\\widehat{\\omega_{\\theta}}\\rangle\\right)^{2}].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "When upscaling with $r_{i}>r$ , the analytic solution for Eq. (4) is $\\widehat{\\omega_{\\theta}}=B_{r}^{r_{i}}(B_{r}^{r_{i}}{}^{T}B_{r}^{r_{i}})^{-1}\\omega_{\\theta}$ , denote as $(B_{r}^{r_{i}T})^{+}\\omega_{\\theta}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\langle B_{r}^{r_{i}}x,\\widehat{\\omega_{\\theta}}\\rangle=x^{T}B_{r}^{r_{i}T}B_{r}^{r_{i}}(B_{r}^{r_{i}T}B_{r}^{r_{i}})^{-1}\\omega_{\\theta}=x^{T}\\omega_{\\theta}=\\langle x,\\omega_{\\theta}\\rangle.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "When downscaling with $r_{i}~<~r$ , the matrix $B_{r}^{r_{i}T}B_{r}^{r_{i}}$ is non-invertible. Under the assumption $\\mathcal{X}=\\mathcal{N}(0,1)$ , it is proven that $(B_{r}^{r_{i}}{}^{T})^{+}\\omega_{\\theta}$ is the optimal solution. In summary, Pseudo-inverse resize (PI-resize) is defined as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname{PI-resize}_{r}^{r*}(\\pmb{w})=(B_{r}^{r_{i}T})^{+}\\mathrm{vec}(\\pmb{w}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/241920dcd146616d6eb77e6c6701a2ee90765727e01229daabad34db6b7b8725.jpg", "img_caption": ["Figure 2: Similarity in patch embeddings does not guarantee optimal performance (a). We confirm this by evaluating the accuracy and cosine similarity of: (b) patch embeddings $\\{z_{i}\\}_{i=1}^{N}\\mathrm{from}\\,56\\mathrm{x}56$ and $224\\mathrm{x}224$ images, and (c) class tokens $z_{\\mathrm{cls}}$ from 56x56 and $224\\mathrm{x}224$ images. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "2.4 Motivation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "However, is this optimization target in FlexiViT [15] truly appropriate? We suggest that there are two problems with Equation 4: First, it is a stricter sufficient condition of Eq. (3), but it ignores the impact of the encoder $\\operatorname{Enc}_{\\phi}(z)$ and the objective function \u2113. Second, at lower resolutions, i.e. $r_{i}<r$ , this goal has no analytical solution; PI-resize is just an approximation assuming $\\pmb{x}\\sim\\mathcal{N}(0,1)$ , resulting in significant performance degradation. ", "page_idx": 3}, {"type": "text", "text": "Moreover, we intuitively suspect that similarity in patch embeddings does not ensure the best performance. As Figure 2(a) illustrates, features derived from patch embeddings are transformed into the classification feature space, namely the class token space, through the Transformer encoder $\\mathtt{E n c}_{\\phi}$ The gradient directions of these two feature spaces may not align, resulting in image features that are close to optimal in patch embedding being far from the optimal class token after encoder processing. ", "page_idx": 3}, {"type": "text", "text": "A more effective method is directly adjusting the weights $w_{\\theta}$ of embedding layer using the objective function $\\ell$ (Eq. (3)). To verify this idea and our assumptions, we evaluate a well-trained ViTB/16 model [2] (pre-trained on ImageNet-21K, $224\\!\\!\\times\\!224$ , $85.10\\%$ accuracy). We measure the cosine similarity between patch embeddings $\\{z_{i}\\}_{i=1}^{N}$ and the class token $z_{c l s}$ at resolutions of 56x56 and $224\\!\\!\\!\\times\\!224$ . The results in Figures 2 (b) and (c) show that FlexiViT has higher patch embedding similarity and classification accuracy compared to the vanilla model; however, our method significantly outperforms FlexiViT with even lower patch embedding similarity. These results confirm that our analysis is reasonable. ", "page_idx": 3}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "As discussed in Section 2.4, optimizing patch embedding layers through objective function is simple but effective. Motivated by this, we propose Multi-Scale Patch Embedding (MSPE). It divides the resolution domain into different ranges $\\bar{\\{}r_{i}\\}_{i=1}^{M}$ , each using a shared-weight patch embedding layer that adjusts size through PI-resize. MSPE can replace the patch embedding layers in most ViT models, including overlapping and non-overlapping types. Our method is illustrated in Figure 3 and presented below. ", "page_idx": 3}, {"type": "text", "text": "3.1 Architecture of MSPE ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "MSPE only changes the patch embedding layer of the ViT model, making it directly applicable to a well-trained ViT model. As demonstrated in Figure 3, we introduce the following architectural modifications. ", "page_idx": 3}, {"type": "text", "text": "Multiple patching kernels. The typical patch embedding layer $g_{\\pmb\\theta}$ employs a single convolution size with parameters $\\left(\\omega_{\\theta},b_{\\theta}\\right)$ , making it unsuitable for varying image resolutions. To overcome this, MSPE incorporates $K$ convolutions with differenet kernel sizes $\\{\\bar{g_{\\pmb{\\theta}}^{1}},\\ldots,g_{\\pmb{\\theta}}^{K}\\}$ , where each $g_{\\pmb\\theta}^{i}$ is parameterized by $(w_{\\theta}^{i},b_{\\theta}^{i})$ , to support a broader range of input image sizes. ", "page_idx": 3}, {"type": "text", "text": "Adaptive patching kernels. Although $K$ convolutions of different kernel sizes improve adaptability, they cannot cover all possible resolutions. Setting a unique size convolution kernel for each resolution is unrealistic. In MSPE, the size and ratio of the kernel $(w_{\\theta}^{i},b_{\\theta}^{i})$ are adjustable rather than fixed. Specifically, for input $\\textbf{\\em x}$ of any resolution $(h,w)$ , the corresponding kernel size $(h_{k},w_{k})$ is $\\left(\\left\\lfloor h/N\\right\\rfloor,\\left\\lfloor w/N\\right\\rfloor\\right)$ . Using Eq. (6), we adjust ${\\pmb w}_{\\boldsymbol\\theta}^{i}$ to the corresponding size $\\widehat{\\pmb{w}}_{\\theta}^{i}\\in\\mathbb{R}^{h_{k}\\times w_{k}}$ . As shown in Figure 3 (b), it can be directly convolved with the image patch. ", "page_idx": 3}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/4fe0a200a33221126d3ba9fef1e6009e017ac9ba6733ea74d41e1c52ef2f3d6c.jpg", "img_caption": ["Figure 3: Illustration of the ViT model [2, 3] with MSPE. MSPE only replaces the patch embedding layer in the vanilla model, making well-trained ViT models to be directly applied to any size and aspect ratio. In our method, the patch embedding layer has several variable-sized kernels. The Transformer encoder is shared and frozen. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "Another module requiring careful design is the position embedding, which must correspond to the feature map size after patch embedding. In ViT [2] and DeiT [3], the position embedding is bilinearly interpolated to match the feature map size, a method known as resample absolute pos embed, and it has proven effective during fine-tuning [3]. In MSPE, we discover that bilinear interpolation of position embedding satisfies our requirements. To simplify the architecture and minimize changes to the vanilla model, we follow this dynamic positional embedding method. ", "page_idx": 4}, {"type": "text", "text": "3.2 Learning Objectives ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "MSPE optimizes the patch embedding layer $g_{\\theta}$ through the objective function but does not explicitly constrain the embedded tokens $\\{z_{i}\\}_{i=1}^{\\breve{N}}$ across different resolutions. Specifically, MSPE is based on multi-resolution training (mixed resolution training), similar to methods like ResFormer and $\\mathrm{NaViT}$ The training process is as follows. ", "page_idx": 4}, {"type": "text", "text": "Firstly, the mixed resolution $\\{r_{i}\\}_{i=1}^{M}$ is divided into $K$ subsets $\\{S_{k}\\}_{k=1}^{K}$ , i.e. $\\bigcup_{k=1}^{K}S_{k}=\\{r_{i}\\}_{i=1}^{M}$ and is randomly sampled from $S_{k}$ . The patching kernel weights $\\theta_{k}$ are shared within $S_{k}$ and transformed into the corresponding weights\u03b8 k for each $r_{i}$ according to Eq. (6), The loss function is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\theta}(x,y)=\\sum_{i=1}^{K}\\ell[(\\mathrm{Enc}_{\\phi}(g_{\\widehat{\\theta}_{i}}(B_{r}^{r_{i}}x)),y]+\\lambda\\cdot\\ell[(\\mathrm{Enc}_{\\phi}(g_{\\theta}(x)),y],\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\ell$ is the task loss function (e.g., cross-entropy loss), and $\\lambda$ is a hyperparameter to prevent performance degradation. We optimize only the patch embedding parameters $\\pmb{\\theta}$ during training, setting the learning rate of $\\phi$ to zero. Algorithm 1 in Appendix E.2 details the training procedure of MSPE and PyTorch-style implementation. ", "page_idx": 4}, {"type": "text", "text": "3.3 Inference on Any Resolution ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "For an input $\\textbf{\\em x}$ with any resolution $r^{*}$ , previous models resize the image to a fixed resolution $r$ . The inference procedure is: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{y}=\\mathrm{Enc}_{\\phi}\\big(g_{\\pmb{\\theta}}\\big(\\boldsymbol{B}_{r^{\\ast}}^{r}\\pmb{x}\\big)\\big),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "With MSPE, the model can infer directly from the original image without resizing or altering its aspect ratio. The process is: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{y}=\\operatorname{Enc}_{\\phi}\\bigl(g_{\\theta^{*}}(x)\\bigr),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Table 1: ImageNet-1K Top-1 accuracy across $28\\!\\times\\!28$ to $448\\!\\times\\!448$ resolutions: Our method was only trained for 5 epochs, while ResFormer [16] was trained for 200 epochs, all methods based on the same well-trained model. ", "page_idx": 5}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/2958383a64ecab9135079d344642d0563a730b41109fc7a83c688dd405c12301.jpg", "table_caption": [], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "where $\\theta^{*}$ is the patching weight that matches the resolution $r^{*}$ . Details on the computation of $\\theta^{*}$ are provided in Appendix E.1 and Eq.(10). ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets. We conduct experiments on 4 benchmark datasets: ImageNet-1K [26] for classification tasks, ADE20K [27] and Cityscapes [28] for semantic segmentation, and COCO2017 [29] for object detection. ", "page_idx": 5}, {"type": "text", "text": "Backbone networks. Our method is assessed on three ViT models, including ViT-B [2] and DeiT-B III [30] (non-overlapping patches); PVT v2-B3 [31] (overlapping patches). ViT and DeiT III are pre-trained using the ImageNet-21K and ImageNet-22K datasets. ", "page_idx": 5}, {"type": "text", "text": "Implementation details. MSPE is trained using SGD optimizer for five epochs, with a learning rate of 0.001, momentum of 0.9, weight decay of 0.0005, and batch size of 64 per GPU. To validate our model, we implement ViT [2] and other networks [30, 4, 25] via open-sourced timm library for classification, ViTDet [32] via MMDetection [33] for object detection, and SETR [34] via MMSegmentation [35] for segmentation; additional details are available in Appendix B. ", "page_idx": 5}, {"type": "text", "text": "4.1 Image Classification ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Comparison with FlexiViT. As shown in Table 1 and Figure 4, ViT models using non-overlapping (like ViT and DeiT III) and overlapping patch embeddings (like PVTv2 and MViTv2) significantly lose accuracy when the input resolution varies. This is consistent with the results from [15, 16, 17], demonstrating that the vanilla ViT models are not adaptable to input resolution changes. This issue primarily arises from their patch embedding layers failing to adjust to varying resolutions. This leads to high-level features shifting after the patch tokens are fed into the Transformer encoder and significantly degrading performance. FlexiViT shows remarkably stable performance at upscaled resolutions (e.g., $448\\mathrm{x}448)$ ) by ensuring consistency of patch tokens across different resolutions, outperforming vanilla models. However, as Section 3 analyzes, FlexiViT still struggles with downscaling. ", "page_idx": 5}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/7fba8a527b65c47546693c84e409a6e24692aa3ae608a6a4a73b14a3b3c55995.jpg", "table_caption": ["Table 2: Comparative results of semantic segmentation on ADE20K and Cityscapes, using welltrained SETR Naive [34] as the segmentation model (ViT-L backbone), evaluated by mIOU, mACC, and F1-score. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/14c6a5622cac94561ac6243ed4043e563dbff9f47f9e2f81ec678b97a2ba52a8.jpg", "table_caption": ["Table 3: Comparative results of object detection and instance segmentation on COCO2017, employing well-trained ViTDeT [32] as the detection model (ViT-B backbone), pre-trained on ImageNet-1K via MAE [36]. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Our method significantly boosts accuracy with targeted optimization goals, outperforming FlexiViT across various resolutions and aspect ratios. ", "page_idx": 6}, {"type": "text", "text": "Comparison with ResFormer and $\\mathbf{NaViT}$ . ResFormer improves performance by multi-resolution training across 128x128, $160\\mathrm{x}160$ , and $224\\!\\!\\!\\times\\!224$ resolutions. However, the modified ViT architecture does not suit networks like PVT and MViT that use overlap patch embedding. Moreover, ResFormer trains for 200 epochs, but our method requires only five epochs. NaViT keeps the original aspect ratio and trains with mixed resolutions from $64\\mathrm{x}64$ to 512x512, leveraging a larger JFT pre-training dataset and longer training cycles (up to 920,000 steps). Table 1 and Figure 5 show that these state-of-the-art methods improve the vanilla model remarkably. Compared to ResFormer and NaViT, MSPE achieves superior multi-resolution performance with far fewer training resources, which proves the essential role of optimized patch embedding layers. ", "page_idx": 6}, {"type": "text", "text": "4.2 Semantic Segmentation ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To validate the effectiveness of MSPE in semantic segmentation, we test the SETR [34] model on ADE20K [27] and Cityscapes [28] datasets, with the vanilla model trained at 512x512 and $768\\mathrm{x}768$ resolutions, respectively. Results in Table 2 show that FlexiViT significantly enhances the vanilla model\u2019s performance in semantic segmentation (e.g., 59.78 vs. 13.33 on the mIOU metric). This confirms that adjusting the patch embedding layer is effective for pixel-level tasks, demonstrating its critical role in enhancing multi-resolution robustness. Moreover, MSPE consistently outperforms FlexiViT across various resolutions, proving our method is ready for pixel-dense tasks in real-world scenarios. ", "page_idx": 6}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/83ef666164a1bdbbf9e5bd58d7f95e32f2080a4995178bcd81dfc8e9c693d777.jpg", "img_caption": ["Figure 5: Comparison of MSPE, Vanilla, and $\\mathrm{NaViT}$ only $\\mathrm{NaViT}$ was pre-trained on the JFT dataset, baseline results come from [17]. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "4.3 Object Detection ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In our experiments on the COCO2017 dataset for object detection and instance segmentation, we utilize the ViTDeT [32] model with ViT-B (pre-trained on ImageNet-1K via MAE [36]) and employed Mask R-CNN [37] as the detection head. During the evaluation, we replace the ViT\u2019s patch embedding layer with MSPE or FlexiViT, keeping the rest of the architecture unchanged ( aligned with classification and segmentation ). As shown in Table 3, MSPE significantly improves the multi-resolution performance of well-trained detection models. This result is consistent with those of classification and segmentation tasks, demonstrating the effectiveness of our method across different visual tasks. ", "page_idx": 6}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/38f38bc560950c5c697c172ad1544df81807063581cae6f35f9271f757e92046.jpg", "img_caption": ["Figure 6: Comparison results: (a) different training epochs; (b) model sizes of S, B, and L. ", "Figure 7: Comparison results: (a) hyperparameter $\\lambda$ ; (b) differenet kernel count $K$ . ", "Table 4: Parameter and computational cost of the patch embedding layer $g_{\\theta}$ in MSPE and Vanilla models, the parameter count of the entire model remains nearly unchanged. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/a647eb74a1151f2cc83b691eb04b38bcaabdf21226e6aca058b59e72e7c4559f.jpg", "img_caption": ["Figure 8: Comparison results of different resizing methods in MSPE. PI-resize shows the best performance and robustness. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/a66a6a72d64ed91692044d497f7efcfb9766eae838d789acb8527206f7887aa7.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "4.4 Ablation Study and Analysis ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Training epochs. Figure 6 (a) presents the performance of MSPE on different training epochs $(1,3,5)$ . It is observed that MSPE significantly enhances performance with only a few training epochs. The models trained for 3 and 5 epochs show similar performance, with no significant improvement from additional epochs. Thus, we train MSPE for 5 epochs in our experiments. ", "page_idx": 7}, {"type": "text", "text": "Model size. For evaluating the impact of model size on MSPE, we test on ImageNet-1K across different sizes of DeiT III models (Small (S), Base (B), Large (L)), all pre-trained on ImageNet-22K. As shown in Figure 6 (b), the results of the larger model DeiT-L and the smaller model DeiT-S align with the main experiment; the larger model yields higher accuracy at different resolutions. This result demonstrates the effectiveness of our method across models of different sizes. ", "page_idx": 7}, {"type": "text", "text": "Hyperparameters. We conduct ablation studies of hyperparameters $\\lambda$ in Figure 7 (a). When lambda is set to 0, the learning of patch embedding is too flexible, leading to inadequate alignment with the original parameter space. Lambda values of 1 and 2 lead to similar performances; this hyperparameter is set to 1 in our experiments. ", "page_idx": 7}, {"type": "text", "text": "Kernel count $\\kappa$ . Figure 7 (b) shows the impact of different kernel quantities on model performance. In MSPE, the resolution $r_{i}$ is divided into $K$ subsets, with each subset sharing the patch embedding layer weights. Therefore, the number of subsets $K$ equals the number of patchify kernels in MSPE. The results indicate that slightly increasing $K$ can improve performance. Specifically, when $K=3$ and $K=4$ , the model performance is nearly identical, and additional kernels provide little improvement. This suggests that patch embedding parameters can be shared across different resolutions. In our method, $K$ is set to 4. ", "page_idx": 7}, {"type": "text", "text": "Resizing method. In our method, the patch embedding weights are dynamically resized for images with different sizes and ratios, denoted as adaptive kernels in Section 3.1. To evaluate the effect of resizing methods on MSPE, we load an ImageNet-21K pre-trained ViT-B model from [19] and train MSPE using different resizing methods, such as standard linear resizing. As shown in Figure 8, the ", "page_idx": 7}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/2ad9e580f0f0d84484cbb6f0bdde98c2f5fecc9fb091916c8f2699a5876e7de9.jpg", "table_caption": ["Table 5: Comparison results of image resizing and MSPE on ImageNet-1K Top-1 accuracy. "], "table_footnote": ["results indicate that PI-resize consistently outperforms other common resizing methods, aligning with findings from the FlexiViT [15]. "], "page_idx": 8}, {"type": "text", "text": "Parameters and computation overhead. As shown in Table 4, we analyze the impact of MSPE on the parameter and computational cost of the vanilla VIT model. MSPE modifies only the patch embedding layer $g_{\\theta}$ , increasing its parameter count by $2\\mathbf{x}{\\sim}3\\mathbf{x}$ . However, MSPE provides a more flexible approach to calculating patch embeddings, significantly reducing computational costs compared to the original method. The total parameter count of the model remains nearly unchanged because the patch embedding layer is an extremely small component. ", "page_idx": 8}, {"type": "text", "text": "Image resizing v.s. MSPE. Table 5 shows the comparison results of image resizing (IMG-resize) and MSPE on ImageNet-1K. IMG-resize adjusts images of different resolutions to a preset resolution (e.g., $224\\mathrm{x}224\\mathrm{;}$ ) during testing, whereas our method keeps the original image size and aspect ratio unchanged. In real-world scenarios, resizing small-size images to a larger size incurs digitization noise and increased computation costs, and model performance is not optimal at different resolutions. The results indicate that our method comprehensively outperforms IMG-resize, suggesting that model inference on the original images is a viable option. ", "page_idx": 8}, {"type": "text", "text": "5 Related Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Most relevant to our work is FlexiViT [15], which proposed to resize the patch embedding weights, enabling flexible patch sizes and token lengths in ViT models. Pix2struct [38] supports variable aspect ratios by a novel positional embedding method, enhancing efficiency and performance in chart and document understanding. ResFormer [16] enables resolution adaptability through multi-resolution training and a global-local positional embedding strategy. NaViT [17] enhances efficiency and performance by example packing [18] to adjust token lengths for different resolutions during training. Compared to these methods, MSPE only changes the patch embedding layer and achieves better performance. This justifies the patch embedding layer\u2019s key role in adapting ViT models for different resolutions. ", "page_idx": 8}, {"type": "text", "text": "In CNN-based models, Mind the Pooling [39] addresses overfitting on resolution by introducing SBPooling to replace max-pooling, enabling CNNs to process different resolutions. Learn to Resize [40] uses a learnable resizing layer to replace bilinear interpolation. Another study [41] examined the relationship between training and testing resolutions, showing that training at slightly lower resolutions than testing can improve performance. Networks like Resolution Adaptive Networks (RANet) [42] and Dynamic Resolution Networks (DRNet) [43] use multiple sub-models to choose the appropriate resolution and model based on task difficulty, thus enhancing model efficiency and resolution adaptability. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To make ViT models compatible with images of different sizes and aspect ratios, we propose MSPE to replace the traditional patch embedding layer for accommodating variable image resolutions. MSPE uses multiple variable-sized patch kernels and selects the best parameters for different resolutions, eliminating the need to resize the original image. Extensive experiments demonstrate that MSPE performs well in various visual tasks (image classification, segmentation, and detection). Particularly, MSPE yields superior performance on low-resolution inputs and performs comparably on highresolution inputs with previous methods. Our method has the potential for application in various vision tasks, and can be extended by optimizing the embedding layer and transformer encoder jointly. ", "page_idx": 8}, {"type": "text", "text": "7 Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work has been supported by the National Natural Science Foundation of China (NSFC) grant U20A20223 and the InnoHK program. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and Baining Guo. Swin transformer: Hierarchical vision transformer using shifted windows. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10012\u201310022, 2021. [2] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. In International Conference on Learning Representations, 2021. [3] Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, and Herv\u00e9 J\u00e9gou. Training data-efficient image transformers & distillation through attention. In International Conference on Machine Learning, pages 10347\u201310357. PMLR, 2021. [4] Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan, Kaitao Song, Ding Liang, Tong Lu, Ping Luo, and Ling Shao. Pyramid vision transformer: A versatile backbone for dense prediction without convolutions. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 568\u2013578, 2021.   \n[5] Gao Huang, Zhuang Liu, Laurens van der Maaten, and Kilian Q Weinberger. Densely connected convolutional networks. pages 4700\u20134708, 2017.   \n[6] Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, and Liang-Chieh Chen. Mobilenetv2: Inverted residuals and linear bottlenecks. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4510\u20134520, 2018.   \n[7] Saining Xie, Ross Girshick, Piotr Doll\u00e1r, Zhuowen Tu, and Kaiming He. Aggregated residual transformations for deep neural networks. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 1492\u20131500, 2017. [8] Mingxing Tan and Quoc Le. Efficientnet: Rethinking model scaling for convolutional neural networks. In International Conference on Machine Learning, pages 6105\u20136114. PMLR, 2019. [9] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017.   \n[10] Kai Han, Yunhe Wang, Hanting Chen, Xinghao Chen, Jianyuan Guo, Zhenhua Liu, Yehui Tang, An Xiao, Chunjing Xu, Yixing Xu, et al. A survey on vision transformer. IEEE Transactions on Pattern Analysis and Machine Intelligence, 45(1):87\u2013110, 2022.   \n[11] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep convolutional neural networks. Advances in Neural Information Processing Systems, 25, 2012.   \n[12] Yuhui Yuan, Rao Fu, Lang Huang, Weihong Lin, Chao Zhang, Xilin Chen, and Jingdong Wang. Hrformer: High-resolution vision transformer for dense predict. Advances in Neural Information Processing Systems, 34:7281\u20137293, 2021.   \n[13] Xiaohua Zhai, Alexander Kolesnikov, Neil Houlsby, and Lucas Beyer. Scaling vision transformers. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 12104\u2013 12113, 2022.   \n[14] Jiaqi Gu, Hyoukjun Kwon, Dilin Wang, Wei Ye, Meng Li, Yu-Hsin Chen, Liangzhen Lai, Vikas Chandra, and David Z Pan. Multi-scale high-resolution vision transformer for semantic segmentation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 12094\u201312103, 2022.   \n[15] Lucas Beyer, Pavel Izmailov, Alexander Kolesnikov, Mathilde Caron, Simon Kornblith, Xiaohua Zhai, Matthias Minderer, Michael Tschannen, Ibrahim Alabdulmohsin, and Filip Pavetic. Flexivit: One model for all patch sizes. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 14496\u201314506, 2023.   \n[16] Rui Tian, Zuxuan Wu, Qi Dai, Han Hu, Yu Qiao, and Yu-Gang Jiang. Resformer: Scaling vits with multi-resolution training. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22721\u201322731, 2023.   \n[17] Mostafa Dehghani, Basil Mustafa, Josip Djolonga, Jonathan Heek, Matthias Minderer, Mathilde Caron, Andreas Steiner, Joan Puigcerver, Robert Geirhos, Ibrahim M Alabdulmohsin, et al. Patch n\u2019pack: Navit, a vision transformer for any aspect ratio and resolution. Advances in Neural Information Processing Systems, 36, 2024.   \n[18] Mario Michael Krell, Matej Kosec, Sergio P Perez, and Andrew Fitzgibbon. Efficient sequence packing without cross-contamination: Accelerating large language models without impacting performance. arXiv preprint arXiv:2107.02027, 2021.   \n[19] Andreas Peter Steiner, Alexander Kolesnikov, Xiaohua Zhai, Ross Wightman, Jakob Uszkoreit, and Lucas Beyer. How to train your vit? data, augmentation, and regularization in vision transformers. Transactions on Machine Learning Research, 2022.   \n[20] Max Jaderberg, Karen Simonyan, Andrew Zisserman, et al. Spatial transformer networks. Advances in Neural Information Processing Systems, 28, 2015.   \n[21] Chenyang Si, Weihao Yu, Pan Zhou, Yichen Zhou, Xinchao Wang, and Shuicheng Yan. Inception transformer. Advances in Neural Information Processing Systems, 35:23495\u201323509, 2022.   \n[22] Anurag Arnab, Mostafa Dehghani, Georg Heigold, Chen Sun, Mario Luc\u02c7ic\u00b4, and Cordelia Schmid. Vivit: A video vision transformer. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 6836\u20136846, 2021.   \n[23] Hongxu Yin, Arash Vahdat, Jose M Alvarez, Arun Mallya, Jan Kautz, and Pavlo Molchanov. A-vit: Adaptive tokens for efficient vision transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 10809\u201310818, 2022.   \n[24] Yufei Xu, Jing Zhang, Qiming Zhang, and Dacheng Tao. Vitpose: Simple vision transformer baselines for human pose estimation. Advances in Neural Information Processing Systems, 35:38571\u201338584, 2022.   \n[25] Yanghao Li, Chao-Yuan Wu, Haoqi Fan, Karttikeya Mangalam, Bo Xiong, Jitendra Malik, and Christoph Feichtenhofer. Mvitv2: Improved multiscale vision transformers for classification and detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4804\u20134814, 2022.   \n[26] Jia Deng, Wei Dong, Richard Socher, et al. Imagenet: A large-scale hierarchical image database. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 248\u2013255, 2009.   \n[27] Bolei Zhou, Hang Zhao, Xavier Puig, Tete Xiao, Sanja Fidler, Adela Barriuso, and Antonio Torralba. Semantic understanding of scenes through the ade20k dataset. International Journal of Computer Vision, 127:302\u2013321, 2019.   \n[28] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe Franke, Stefan Roth, and Bernt Schiele. The cityscapes dataset for semantic urban scene understanding. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 3213\u2013 3223, 2016.   \n[29] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In Proceedings of the European Conference on Computer Vision, pages 740\u2013755. Springer, 2014.   \n[30] Hugo Touvron, Matthieu Cord, and Herv\u00e9 J\u00e9gou. Deit iii: Revenge of the vit. In Proceedings of the European Conference on Computer Vision, pages 516\u2013533. Springer, 2022.   \n[31] Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan, Kaitao Song, Ding Liang, Tong Lu, Ping Luo, and Ling Shao. Pvt v2: Improved baselines with pyramid vision transformer. Computational Visual Media, 8(3):415\u2013424, 2022.   \n[32] Yanghao Li, Hanzi Mao, Ross Girshick, and Kaiming He. Exploring plain vision transformer backbones for object detection. In Proceedings of the European Conference on Computer Vision, pages 280\u2013296. Springer, 2022.   \n[33] Kai Chen, Jiaqi Wang, Jiangmiao Pang, Yuhang Cao, Yu Xiong, Xiaoxiao Li, Shuyang Sun, Wansen Feng, Ziwei Liu, Jiarui Xu, et al. Mmdetection: Open mmlab detection toolbox and benchmark. arXiv preprint arXiv:1906.07155, 2019.   \n[34] Sixiao Zheng, Jiachen Lu, Hengshuang Zhao, Xiatian Zhu, Zekun Luo, Yabiao Wang, Yanwei Fu, Jianfeng Feng, Tao Xiang, Philip HS Torr, et al. Rethinking semantic segmentation from a sequence-to-sequence perspective with transformers. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 6881\u20136890, 2021.   \n[35] MMSegmentation Contributors. MMSegmentation: Openmmlab semantic segmentation toolbox and benchmark. https://github.com/open-mmlab/mmsegmentation, 2020.   \n[36] Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Doll\u00e1r, and Ross Girshick. Masked autoencoders are scalable vision learners. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 16000\u201316009, 2022.   \n[37] Kaiming He, Georgia Gkioxari, Piotr Doll\u00e1r, and Ross Girshick. Mask r-cnn. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2961\u20132969, 2017.   \n[38] Kenton Lee, Mandar Joshi, Iulia Raluca Turc, Hexiang Hu, Fangyu Liu, Julian Martin Eisenschlos, Urvashi Khandelwal, Peter Shaw, Ming-Wei Chang, and Kristina Toutanova. Pix2struct: Screenshot parsing as pretraining for visual language understanding. In International Conference on Machine Learning, pages 18893\u201318912. PMLR, 2023.   \n[39] Bilal Alsallakh, David Yan, Narine Kokhlikyan, Vivek Miglani, Orion Reblitz-Richardson, and Pamela Bhattacharya. Mind the pool: Convolutional neural networks can overfit input size. In International Conference on Learning Representations, 2022.   \n[40] Hossein Talebi and Peyman Milanfar. Learning to resize images for computer vision tasks. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 497\u2013506, 2021.   \n[41] Hugo Touvron, Andrea Vedaldi, Matthijs Douze, and Herv\u00e9 J\u00e9gou. Fixing the train-test resolution discrepancy. Advances in Neural Information Processing Systems, 32, 2019.   \n[42] Xin Wang, Fisher Yu, Ziwei Liang, Thomas Huang, Larry Shi, Matthew Liu, Jan Kautz, and Alan Yuille. Resolution adaptive networks for efficient inference. Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 8729\u20138738, 2018.   \n[43] Jinjin Chen, Xifeng Pan, Yu-Kun Lai, and Chao Tang. Dynamic relu. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11\u201320, 2020.   \n[44] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and Sergey Zagoruyko. End-to-end object detection with transformers. In Proceedings of the European Conference on Computer Vision, pages 213\u2013229. Springer, 2020.   \n[45] Bharat Singh and Larry S Davis. An analysis of scale invariance in object detection snip. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 3578\u20133587, 2018.   \n[46] Ekin Dogus Cubuk, Barret Zoph, Dandelion Man\u00e9, Vijay Vasudevan, and Quoc V. Le. Autoaugment: Learning augmentation strategies from data. pages 113\u2013123, 2019.   \n[47] Ekin D Cubuk, Barret Zoph, Jonathon Shlens, and Quoc V Le. Randaugment: Practical automated data augmentation with a reduced search space. In Proceedings of IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops, pages 702\u2013703, 2020.   \n[48] Zhun Zhong, Liang Zheng, Guoliang Kang, Shaozi Li, and Yi Yang. Random erasing data augmentation. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, pages 13001\u201313008, 2020.   \n[49] Hongyi Zhang, Moustapha Cisse, Yann N Dauphin, and David Lopez-Paz. mixup: Beyond empirical risk minimization. In International Conference on Learning Representations, 2018.   \n[50] Sangdoo Yun, Dongyoon Han, Seong Joon Oh, Sanghyuk Chun, Junsuk Choe, and Youngjoon Yoo. Cutmix: Regularization strategy to train strong classifiers with localizable features. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 6023\u20136032, 2019. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Limitation ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Our paper does not consider the impact of position embedding on model performance. This is because existing work [2, 3] has shown that linear interpolation of position embedding can achieve acceptable performance. Our experimental results validate the feasibility of this strategy. Moreover, we aim to utilize our method within most existing ViT models, hence we do not alter the position embedding method. In the future, our method can be extended with the positional encoding strategies proposed in related works, such as ResFormer [16] and Pix2struct [38]. ", "page_idx": 12}, {"type": "text", "text": "B Training details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "B.1 Multi-resolution training ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Multi-resolution training has become a widely used paradigm [44, 45], randomly altering crop size and aspect ratio during training. This training strategy is critical in multi-resolution vision models. In FlexiViT [15] training, the size of image patches and the kernel size of the patch embedding layer are randomly changed from 8x8 to $48\\mathrm{x48}$ . In ResFormer [16], input images are resized to $128\\!\\times\\!128$ , $160\\!\\times\\!160$ and $224\\!\\times\\!224$ and simultaneously training. In NaViT [17], images retain their original size and aspect ratio and are packed into a single pack for training, denoted as mixed-resolution training. The range of its training resolutions is 64 to 256. Our method is most similar to FlexiViT, randomly resizing each image batch to different resolutions (from 56 to 256) during training. ", "page_idx": 12}, {"type": "text", "text": "B.2 Data augmentation ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Classification. Our method leverages timm implementations of ViT [2], DeiT III [30], and PVT v2 [31] models for classification tasks. The training data augmentations include RandomResizedCrop, RandomHorizontalFlip, and ColorJitter. For Resfomer [16], we follow the official-released code. Its training data augmentation includes Auto-Augment [46], RandAugment [47], random erasing [48], MixUp [49], and CutMix [50]. ", "page_idx": 12}, {"type": "text", "text": "Semantic segmentation. We use the SETR [34] model implemented by MMSegmentation [35]. We adhere data settings in MMSegmentation, including RandomResizedCrop, RandomFlip, and PhotoMetricDistortion. PhotoMetricDistortion involves a series of transformations: random brightness, random contrast, random saturation, random hue, and converting color between HSV and BGR. ", "page_idx": 12}, {"type": "text", "text": "Object detection. We employ the ViTDeT [32] model within the MMDetection [33] for object detection and instance segmentation tasks. We utilize the configurations from MMDetection, which include RandomResizedCrop and RandomFlip. ", "page_idx": 12}, {"type": "text", "text": "C Compute resources ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "This paper conducts experiments on a machine equipped with two AMD EPYC 7543 32-core processors; each slotted with 32 cores supporting two threads per core. The machine has 496 GB of memory and $8^{*}$ NVIDIA GeForce RTX 4090 graphics cards. Our method significantly reduces computational resources compared to previous approaches, and all main experiments on ImageNet-1K are completed within 3 hours. In contrast, methods like ResFormer [16] require over 50 hours of training on this machine. ", "page_idx": 12}, {"type": "text", "text": "D More experimental results ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "D.1 Impact of aspect ratio ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "In Section 4.1, we fixed the height and varied the width, ensuring the height was greater than the width. We also tested the accuracy when fixing the width and varying the height, in which case the width was greater than the height. It can be seen in Figure 9 that MSPE still achieved significant performance improvements. ", "page_idx": 12}, {"type": "text", "text": "Furthermore, comparing the accuracy of resolutions $(h,w)$ and $(w,h)$ when $h>w$ , we observe that the accuracy of $(h,w)$ resolution was higher than $(w,h)$ resolution. This aligns with the findings of NaViT [17], which indicate that a larger proportion of images in ImageNet-1K is $h>w$ . This suggests that maintaining the original aspect ratio during inference needs to be considered. ", "page_idx": 12}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/b63a3d8393426f0187bc78a3996a139ce081261ecb303650c18a928ed3a79dd8.jpg", "img_caption": ["Figure 9: ImageNet-1K Top-1 accuracy curves, fixed width at 128, 192, 256, and 384. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "D.2 Results on Higher Resolution ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Below are experimental results for high-resolution images. We resize ImageNet images (processed to $224\\mathrm{x}224)$ up to $4096\\mathrm{x}4096$ and evaluate models with non-overlapping patch embedding (ViT) and overlapping patch embedding (PVT). The results in Table 6 show that MSPE can be effectively applied to high-resolution images, as the shape and size of the patch embedding kernels dynamically adjust based on input resolution and have multiple convolution kernels corresponding to different resolution ranges. ", "page_idx": 13}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/6f8812c682e182c18f9530d92b2151dd42d9e41c4d4b2d4431b86d94c3e23c82.jpg", "table_caption": ["Table 6: Comparison results of higher resolution. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "D.3 Extra training epochs ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In our main experiment, MSPE is trained for 5 epochs. We increase the number of epochs to analyze its performance under extended training. As shown in Table 7, the performance improvement with longer training epochs is minimal. This is because MSPE requires learning a very small number of parameters, which can reach optimal performance within just a few epochs of training. This indicates that our method achieves better performance and requires less training overhead, making it highly compatible with well-trained models. ", "page_idx": 13}, {"type": "table", "img_path": "9Q9UiAyV40/tmp/52d009f62eb14e39c7d2a6508f5bad34c08b6d1a5693910cfc3a0a024e0104aa.jpg", "table_caption": ["Table 7: Comparison results of extra training epochs. "], "table_footnote": [], "page_idx": 13}, {"type": "image", "img_path": "9Q9UiAyV40/tmp/b4274c02f3fb468ebb124664ad5332df97e5b5b5cc137e37e858b4503994f2ed.jpg", "img_caption": ["Figure 10: Comparison results of different resiz- Figure 11: Computational Overhead of MSPE at ing methods in MSPE. Different Resolutions. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "D.4 Other resizing methods ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We test other resizing methods in MSPE, including nearest and bicubic3. As shown in Figure 10, these traditional resizing methods are not suitable for adjusting the size of neural network parameters, leading to less robust patch embeddings in MSPE training. The experimental results are consistent with Section 4.4, confirming that the combination of PI-resize and MSPE have significant potential applied to multi-resolution models. ", "page_idx": 14}, {"type": "text", "text": "D.5 Computation overhead ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We evaluate MSPE\u2019s computational overhead across resolutions from $32\\mathrm{x}32$ to $448\\mathrm{x}448$ . MSPE dynamically adjusts its parameters based on image resolution. For overlapping patch embedding models like PVT and MViT, MSPE adjusts the convolutional kernel size and stride. For nonoverlapping patch embedding models like ViT, MSPE adjusts the convolutional kernel size. As shown in Figure 11, MSPE\u2019s computational overhead changes dynamically, avoiding the unnecessary computational costs associated with resizing images to a fixed resolution. ", "page_idx": 14}, {"type": "text", "text": "E More details on MSPE ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we provide more details about the implementation of MSPE, including modifications to the model structure and the training process, and its application for inference at any resolution. ", "page_idx": 14}, {"type": "text", "text": "E.1 Inference on any resolution ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For an input image $\\textbf{\\em x}$ with any resolution $r$ , we calculate its patch embedding parameters $\\theta^{*}$ , composed of $\\pmb{w}^{*}$ and $b^{*}$ . We directly compute the patch embedding $_{\\textit{z}}$ on the original image $\\textbf{\\em x}$ as follows: $\\pmb{z}=\\mathrm{conv}(\\pmb{x},\\pmb{w}^{*})+b$ . After that, embedding $_{z}$ is fed into the Transformer encoder $\\operatorname{Enc}(z)$ as usual. In this process, calculating $\\theta^{*}$ is a crucial step. We compute $\\pmb{\\theta}^{*}$ by finding the resolution $r_{i}$ in the resolution sequence $r_{i}_{i=1}^{\\,\\,M}$ that is closest to the original resolution $r^{*}$ and then resizing its kernel to match the original resolution. This process is formalized as follows: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{i\\in\\arg\\underset{i=1}{\\overset{M}{\\operatorname*{min}}}\\!\\!}&{||r_{i}-r^{*}||\\quad\\forall r_{i}\\in\\{r_{i}\\}_{i=1}^{M},}\\\\ {\\pmb{w}^{*}=({B_{r_{i}}^{r^{*}}}^{T})^{+}\\mathrm{vec}(\\pmb{w}_{\\theta}^{i})}&{}\\\\ {\\pmb{\\theta}^{*}=\\{\\pmb{w}^{*},b_{\\theta}^{i}\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "E.2 MSPE structure and training process ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "As depicted in Section 3.1, MSPE modifies two parts of the ViT model, as shown in the class ViT of Algorithm 1. 1) It adds $K$ patch embedding kernels. 2) During patch embedding, the size and aspect ratio of the kernels can be adjusted based on the input. Here, $\\mathtt{g}$ and Enc represent the patch embedding layer $g_{\\pmb\\theta}$ and the Transformer encoder $\\operatorname{Enc}_{\\phi}(z)$ . ", "page_idx": 14}, {"type": "text", "text": "The implementation of multi-resolution training in Section 3.1 is as follows: We randomly select $K$ resolutions from a range of resolutions $\\{r_{i}\\}_{i=1}^{M}$ , then compute the corresponding patch embeddings. After that, the model computes the loss as usual. ", "page_idx": 15}, {"type": "text", "text": "Algorithm 1 MSPE pseudo-implementation. ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1 model $\\mathbf{\\Omega}=\\;\\operatorname{ViT}(\\mathbf{\\Omega}\\dots)$   \n2 for batch in data:   \n3 img, label $=$ batch   \n4 # create K images with random resolutions   \n5 hw_1, hw_2, ..., hw_K $=$ np.random.choice([r_1, $\\mathtt{r}_{-2}$ , ..., r_M])   \n6 img_1, img_2, ..., img_K $=$ IMG-resize(img, hw_1), IMG-resize(img, hw_2), ..., IMG-resize(img, hw_K)   \n7 z_1, z_2, ..., $z_{-}\\mathtt{K}\\;=$ adp_conv(img1, g1, hw1), adp_conv(img2, g2, hw2), ..., adp_conv(img_K, g_K, hw_K))   \n8 y_1, y_2, ..., $\\mathtt{y\\_K}=\\mathtt{E n c}(\\mathtt{z\\_1})$ , Enc $(z_{-2})$ , ..., Enc(z_K)   \n9 loss_1, loss_2, ..., loss $.\\mathtt{K}\\;=\\;$ loss(y_1, label), loss(y_2, label), ..., loss(y_K, label)   \n10 loss $=$ loss_1 $^+$ loss_2 ... $^+$ loss_K   \n11 # [...] backprop and optimize as usual   \n12   \n13 class ViT(nn.Module):   \n14 def __init__(self, \\*\\*args, K ):   \n15 # init as usual   \n16 self.N $=$ args[\"img_size\"]//16   \n17 self. $_{\\mathrm{~g~}}=$ nn.Conv2d(kernal_siz $:=$ [16,16]), args)   \n18 self.Enc $=$ TransformerEncoder(\\*\\*args)   \n19 # add K patching kernels of different sizes.   \n20 for i in range (K):   \n21 s $\\mathtt{a c l e\\_i}=\\mathtt{(i+1)/4}$ 1   \n22 self.g_i $=$ nn.Conv2d(kernal_size $_:=$ [16 $^*$ scale_i, 16 $^{\\ast}$ scale_i]), \\*\\*args)   \n23   \n24 def adp_conv(self, img, func, hw ):   \n25 $u=$ func.param(\"weight\")   \n26 b $=$ func.param(\"bias\")   \n27 # adaptive patching kernels   \n28 $\\begin{array}{r l}{\\mathbf{\\tilde{W}}\\ast}&{{}=}\\end{array}$ PI-resize(w, hw//self.N)   \n29 patch_embedding $=$ conv(image, w\\*) + b   \n30 return patch_embedding ", "page_idx": 15}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: See Section 1. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 16}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: See Appendix A. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 16}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 16}, {"type": "text", "text": "Justification: The related experimental results are Section 2 , and we cite FlexiViT\u2019s conclusion regarding PI-resize. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 17}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: See Section 4 and Appendix B. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 17}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: See Appendix E. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 18}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: See Section 4 and Appendix B. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 18}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: The random error in the experiments can be ignored and does not affect the conclusions. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: See Appendix C. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 19}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We have reviewed the NeurIPS Code of Ethics. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 19}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: There is no societal impact of the work performed. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: This paper poses no such risks. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 20}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: We have cited the original paper that produced the code package or dataset. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 20}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 21}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: This paper does not release new assets. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 21}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 21}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: This paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 21}]