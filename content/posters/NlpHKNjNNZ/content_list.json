[{"type": "text", "text": "Just Add \\$100 More: Augmenting Pseudo-LiDAR Point Cloud for Resolving Class-imbalance Problem ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Mincheol Chang\u2020,\u2217 Korea University m1ncheoree@korea.ac.kr ", "page_idx": 0}, {"type": "text", "text": "Siyeong Lee\u2020 NAVER LABS siyeong.lee@naverlabs.com ", "page_idx": 0}, {"type": "text", "text": "Jinkyu Kim Korea University jinkyukim@korea.ac.kr ", "page_idx": 0}, {"type": "text", "text": "Namil Kim\u2021 NAVER LABS namil.kim@naverlabs.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Typical LiDAR-based 3D object detection models are trained with real-world data collection, which is often imbalanced over classes. To deal with it, augmentation techniques are commonly used, such as copying ground truth LiDAR points and pasting them into scenes. However, existing methods struggle with the lack of sample diversity for minority classes and the limitation of suitable placement. In this work, we introduce a novel approach that utilizes pseudo LiDAR point clouds generated from low-cost miniatures or real-world videos, which is called Pseudo Ground Truth augmentation (PGT-Aug). PGT-Aug involves three key steps: (i) volumetric 3D instance reconstruction using a 2D-to-3D view synthesis model, (ii) object-level domain alignment with LiDAR intensity simulation, and (iii) a hybrid context-aware placement method from ground and map information. We demonstrate the superiority and generality of our method through performance improvements in extensive experiments conducted on popular benchmarks, i.e., nuScenes, KITTI, and Lyft, especially for the datasets with large domain gaps captured by different LiDAR configurations. The project webpage is https://justadd-100-more.github.io. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "LiDAR-based 3D object detection has garnered growing interest thanks to its wide applications, including fully autonomous vehicles (or robots) where the LiDAR point cloud is a main reliable source for 3D scene understanding. There exists a large volume of literature on LiDARbased 3D object detection models [1\u20137], and they have achieved remarkable performance improvements via better model architectures and efficient LiDAR points representation. Still, we observe that these models often suffer from the so-called class imbalance problem \u2013 they tend to be overfitted to frequently observed objects ", "page_idx": 0}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/463ac3bb82fa594cc6604749d31701e0e21fec53dd8ab35c5dcb228f10d24f02.jpg", "img_caption": ["Figure 1: Overview. We present PGT-Aug, a novel cost-effective pipeline that generates and augments pseudo-LiDAR samples (from miniatures and web videos) to effectively reduce the performance gap between majority-class vs. minority-class objects. "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "(of majority classes) and underftited to rarely observed objects (of minority classes), causing a severe performance gap. Such an imbalance problem is commonly observed in real-world data collections, such as KITTI [8] and nuScenes [9]. ", "page_idx": 1}, {"type": "text", "text": "A na\u00efve solution for the imbalance problem is collecting more LiDAR data, but achieving a sufficient number of long-tail samples is still practically challenging. Due to the inherent imbalance in the natural distribution, the more data we collect, the worse the imbalance. In literature, one common strategy to deal with class imbalance is a copy-and-paste-based sample augmentation [1, 10\u201312], where objects (of minority classes) from other frames are copied into the current frame, balancing class-wise occurrences during training (see Fig. 1 top). However, these methods are still limited in that (i) the areas where objects can be pasted depend on their original position (thus limiting the positional diversity), and (ii) sample diversity where the same object (of minority classes) can be repeatedly copied and pasted. ", "page_idx": 1}, {"type": "text", "text": "An ideal sample augmentation method for balancing performance across classes may need the 3D shape information of diverse samples (of minority classes) to enable flexible placements into a given scene. Recent Neural Radiance Field (NeRF)-based approaches [13\u201316] have demonstrated the ability to generate high-quality 3D scenes from multiple viewpoints at low computational costs. Here, we advocate utilizing NeRF-based approaches to obtain the 3D shape of objects from external sources (not from other scenes within the same data). However, generating diverse real-world 3D objects, especially of minority classes, can pose challenges due to the need for images from multiple viewpoints. To address this, we propose using miniatures and public videos to obtain 3D-rendered samples of target objects. Miniatures, commonly used for practical effects in the flim industry, offer a practical solution to collect diverse samples, particularly for various types of vehicles. ", "page_idx": 1}, {"type": "text", "text": "In this work, we introduce Pseudo Ground Truth Augmentation (PGT-Aug), which generates point clouds of minority-class objects from two sources: (i) surround-view videos of given miniatures and (ii) public videos of real-world objects. As shown in Fig. 1 bottom, we first utilize a 2D-to-3D renderer to reconstruct an object\u2019s 3D volumetric representation. Then, we transform it into LiDARlike 3D point clouds by rearranging and filtering points and estimating their intensities. During training, such generated pseudo-LiDAR points are sampled and placed into appropriate places of a scene without where-to-paste technical constraints. Our experiments with public datasets (i.e. nuScenes [9], KITTI [8], and Lyft [17]) demonstrate that our data augmentation with pseudo-LiDAR points effectively improves detection performance for minority classes. Our contributions can be summarized into three-fold: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We introduce PGT-Aug, a novel cost-effective pipeline for LiDAR-based object detectors to solve the class imbalance problem by (i) generating pseudo-LiDAR samples (from multi-view images of miniatures and public videos of an object) and (ii) augmenting them during training to balance the performance gap across classes.   \n\u2022 Our pipeline involves a novel view-agnostic pseudo-LiDAR sample generation where we reduce the domain gap between the real-world and the generated LiDAR point clouds. A series of processes, such as spatial distribution matching and data-driven intensity adjustments, achieve this.   \n\u2022 We propose a novel map-aware augmentation technique that determines where to paste the pseudoLiDAR samples based on map-based scene context (i.e. placing an object into the appropriate locations in the given scene). ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "LiDAR-based 3D Object Detection Datasets for Autonomous Driving. The automotive industry has shown a surge of interest in LiDAR-based 3D object detection, enhancing system reliability compared to camera-based detectors. However, creating large-scale annotations face challenges due to sensor costs, spatial distribution variations, and annotation difficulties caused by reflections and occlusions. While several annotated datasets [9, 17\u201320] exists, the limited quantity, compared to the image domain, leads to both generalization issues and class imbalance [21, 22]. To mitigate this, we propose a novel approach for generating high-quality rare objects inexpensively for data augmentation in 3D object detection, addressing the class imbalance. (see Fig. 7 in the Supplementary Material.) ", "page_idx": 1}, {"type": "text", "text": "Data Augmentation of LiDAR Point Clouds. Data augmentation plays a crucial role in increasing the diversity of training samples and addressing class imbalance in datasets. Two common strategies for mitigating overfitting and enhancing model robustness are data resampling and data synthesis. Data resampling [23\u201327] primarily focus on oversampling minority classes by replicating existing samples, thereby increasing the frequency of minority classes and balancing class distributions during model training. In contrast, data synthesis [28\u201330] relies on blending of original samples or utilizing synthetic data from generative models. This approach enhances the diversity of the training set, helping to address data scarcity and improve overall model generalization. ", "page_idx": 1}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/05638a1fe5a0db1ddb006d54cd520fe02bc164eaa3d1acab71454792ebc530b8.jpg", "img_caption": ["Figure 2: Overview of Pseudo GT (PGT)-Aug Framework. Given multiview images, we first reconstruct their volumetric representations (Section 3.1). We post-process RGB point clouds using spatial rearrangement and LiDAR intensity simulator (Section 3.2), producing pseudo-LiDAR point clouds. Such points are stored in a psuedo LiDAR bank, and we paste the sampled objects into the target scene with the proposed augmentation scheme (Section 3.3). "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Recent works have tackled 3D annotation difficulties through LiDAR simulation [10, 31\u201333] for 3D renderings or data augmentation [1, 12, 34\u201337] for utilizing existing data. Some works [10, 32, 38] attempted to reduce a domain gap between simulated and real-world data by combining them, as seen in SHIFT3D [11], which employs deep signed distance functions to refine object\u2019s shape and pose adversarially. GT-Aug [1] used copy-and-paste strategies, while Real-Aug [12] enhanced data utilization with realistic placement. Creating diverse, non-standard shapes requires considerable time and effort through 3D CAD modeling. On the other hand, 3D objects in the target dataset are partially observed, making free placement challenging. Different from previous approaches, we collect miniatures and real-world objects to render realistic 3D samples with low cost from diverse domains, and introduce an object-level augmentation with flexible placeability. ", "page_idx": 2}, {"type": "text", "text": "Neural Radiance Fields and 3D Rendering. Many works have attempted to represent 3D scenes as continuous implicit representations or differentiable structures [13, 14, 39\u201341]. NeRF [13] represented 3D geometry by approximating density and view-dependent RGB using a simple MLP architecture. Among many subsequent works [14\u201316, 42, 43], both Instant-NGP [15] and Plenoxels [14] contributed to faster training and rendering of 3D scenes. Instant-NGP accelerated MLPs using multilevel hash tables, while Plenoxels utilized sparse voxel grids for interpolating color and density field. These advances can make the reconstruction of 3D objects easier and more precise [16], facilitating their use in various perception tasks [44]. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We introduce PGT-Aug, a fast, realistic, and low-cost pipeline that generates (and collects) pseudoLiDAR point clouds of minority-class objects from multi-view images of miniatures or real-world objects. Then, to reduce the class imbalance problem, the generated point clouds are augmented into the current scene, balancing the number of occurrences across classes during training. As shown in Fig. 2, our pipeline consists of three main modules: (i) Volumetric 3D Instance Collection, where we reconstruct objects\u2019 3D volumetric representation from multi-view images of real-world miniatures or objects (Section 3.1). (ii) Object-level Domain Alignment, where we reduce the domain gap (i.e., between the generated vs. the collected from LiDAR sensors) by transforming the point clouds based on sensor configurations and intensity simulation models (Section 3.2). Lastly, (iii) Pseudo LiDAR Point Clouds Augmentation, where we augment the generated pseudo-LiDAR point clouds into the current scene by determining more realistic object insertion areas based on the estimated ground areas and map information (Section 3.3). ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3.1 Volumetric 3D Instance Collection of Minority Class Objects ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Data Collection. Conventional Ground truth (GT) sampling-based data augmentation approaches resample minority-class 3D instances (e.g., trucks, trailers, buses, construction vehicles) from indomain collections, but their placement flexibility and contextual diversity are often limited. To resolve this issue, we want to augment minority-class 3D instances from out-of-domain sources, efficiently resolving the data imbalance problem by sampling more diverse types and shapes of minority-class samples in the wild. To this end, we advocate for utilizing the following two costeffective sources: (i) videos capturing the surround view of miniatures and (ii) publicly available videos capturing multiple views of minority-class objects (see Fig. 2). As the title suggests, we purchased dozens of realistic miniatures for just $\\mathcal{S}I O O$ . Plus, we collect public videos from YouTube, followed by manual filtering to ensure those videos capture an object from multiple viewpoints. ", "page_idx": 3}, {"type": "text", "text": "Preprocessing. Given collected video frames, we first estimate the following three pieces of information as a preprocessing for the later 2D-to-3D rendering: (i) a camera intrinsic matrix, (ii) camera poses (3D camera position and its orientation for each frame), and (iii) binary masks for a foreground object. For (i) and (ii), we use COLMAP [45], similar to the preprocess of existing NeRF-based approaches [13, 14, 46]. For (iii), we use the off-the-shelf video segmentation model, i.e., Segment and Track Anything [47], to extract segmentation masks for foreground objects. ", "page_idx": 3}, {"type": "text", "text": "2D-to-3D Rendering. Our framework is built on advanced 2D-to-3D renderers, such as Plenoxels [14] and Gaussian-Splatting [16], known for efficient, high-quality 3D reconstruction. Unlike some 3D conditional generative models for specific classes such as Shap-E [48] and Zero-1-to-3 [49], these methods offer dense 3D point clouds suitable for increasing out-of-distribution samples. In general, these methods [14, 16] predict view-dependent representation, but obtaining fully visible and uniformly high-density data from all viewpoints is necessary to generate pseudo-LiDAR objects and axis-aligned bounding boxes. Therefore, we propose an ad-hoc module to obtain representative colors for each voxel grid or point based on the estimated mean color values from different views. More specifically, iterating through $N$ views, it determines which voxel grid or point\u2019s camera ray passes through and calculates the color value of voxels or points by doing a dot product between corresponding spherical harmonic coefficients and view-dependent harmonics basis. If a certain voxel or a point is hit multiple times by rays from different views, we update the existing value by adding the new color value and store the total number of passes. Notably, this straightforward module is applicable not only to 2D-to-3D rendering techniques such as Plenoxels and Gaussian Splatting, but also to renderers that do not rely on spherical harmonics2. ", "page_idx": 3}, {"type": "text", "text": "3.2 Object-level Domain Alignment ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We aim to augment real LiDAR data with simulated minority-class samples derived from RGB-colored point clouds. However, these point clouds lack crucial information regarding spatial distribution from sensor configurations and LiDAR\u2019s intensity, which is essential for accurate LiDAR modeling and evaluation. Thus, we propose object-level domain alignment between RGB-colored point clouds $\\mathcal{D}_{r g b}$ and real-world point clouds $\\mathcal{D}_{i n t}$ , employing two alignment techniques as (i) view-dependent points filtering and rearrangement and (ii) LiDAR intensity simulation. ", "page_idx": 3}, {"type": "text", "text": "View-dependent Points Filtering. This step simulates realistic data variations based on the object\u2019s relative position to the LiDAR sensors and their settings. Therefore, we require alignment parameters based on factors such as type, position, quantity, and specifications (Field of View and azimuth resolution) of LiDAR sensors in the target dataset. We apply the following three steps: (i) transformation of points to the range view representation, (ii) filtering of points on the invisible side, and (iii) reprojection of points into 3D space. ", "page_idx": 3}, {"type": "text", "text": "In (i), given points in the spherical coordinates system, we map points into a range view $\\mathbf{R}(u,v)\\in\\mathbb{R}^{\\dot{H}\\times W}$ , where $u$ and $v$ are the spatial grid indexes. For each grid $(u,v)$ , a point with minimum depth remains, and the others are flitered out (i.e., points on visible parts remain). The remaining points are irregularly located in 3D space, generally different from those of real-world ", "page_idx": 4}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/673cf8c394eccd5f11f5343a514f8c3623832ecec03e646af1b476ca3ce94459.jpg", "img_caption": ["Figure 3: Effect of Reprojection on Different Datasets. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "LiDAR points. We therefore rearrange each point to be regularly spaced by adjusting their inclination $\\phi$ and azimuth $\\theta$ in the spherical coordinate system: $\\begin{array}{r}{\\phi^{\\prime}\\stackrel{{}}{=}\\left[1\\stackrel{{}}{-}\\left(\\frac{v+0.5}{H}\\right)\\right]\\mathrm{FOV}_{\\mathrm{total}}\\stackrel{{}}{-}\\mathrm{FOV}_{\\mathrm{down}},\\theta^{\\prime}=}\\end{array}$ $\\pi$ 2 $\\textstyle\\left({\\frac{u+0.5}{W}}\\right)-1]$ , where $\\mathrm{FOV}_{\\mathrm{down}}$ and $\\mathrm{FOV}_{\\mathrm{total}}$ represent the dow n part and the total range of the field of view, respectively. Rearranged inclination and azimuth , are calculated by backprojecting image coordinates $u,v$ to spherical coordinates following the above equations. The results on different LiDAR settings are shown in Fig. 3. ", "page_idx": 4}, {"type": "text", "text": "LiDAR Intensity Simulation. Since object surface reflectivity cannot be derived from images, we use a data-driven model for intensity estimation. As no real-world LiDAR points match generated RGB points, we create an unpaired domain transfer model specifically for point clouds based on CycleGAN [50] framework. Also, we design a novel region matching loss that directly reduces the intensity error between two samples, even with varying point counts, as shown in Fig. 4. To compute the loss, both generated points $G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}}(\\mathbf{p}_{r g b})$ and real-world points $\\mathbf{p}_{i n t}$ are grouped into an equal number of ball patches whose centers are obtained via farthest point sampling. After dividing into $N$ ball patches, Hungarian matching is used to find the optimal assignment of ball patch pairs by computing the center distances for all matchings ${\\mathfrak{S}}_{N}$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{\\sigma}=\\underset{\\sigma\\in\\mathfrak{S}_{N}}{\\arg\\operatorname*{min}}\\sum_{i}^{N}||c_{i}-c_{\\sigma(i)}||_{1},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $c_{i}$ and $c_{\\sigma(i)}$ are centers of ball patches from $G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}}(\\mathbf{p}_{r g b})$ and $\\mathbf{p}_{i n t}$ , respectively. After finding optimal pairs, we reduce all intensity ", "page_idx": 4}, {"type": "text", "text": "distances between fake and real pairs of patches. For normalized points $x,y$ and a given ball radius $r$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{g r o u p}=\\sum_{j}^{N}||\\mathbb{E}_{x\\in b_{j}^{r}}(x)-\\mathbb{E}_{y\\in b_{\\hat{\\sigma}(j)}^{r}}(y)||_{1},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathbb{E}_{x\\in b_{j}^{r}}(x),\\mathbb{E}_{y\\in b_{\\hat{\\sigma}(j)}^{r}}(y)$ denote the average of intensity values of optimal ball patch pairs bjr, br\u03c3\u02c6(j) and $r$ is 0.1. The overall objective function is ", "page_idx": 4}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/71cd84463c28dfa4bb935ed451511e9bdf95f5919df7dbf4213dac028f84ef5c.jpg", "img_caption": ["Figure 4: Region Matching Loss. "], "img_footnote": [], "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{t o t a l}=\\mathcal{L}_{\\mathrm{CycleGAN}}+\\lambda\\mathcal{L}_{\\mathrm{group}},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\lambda$ is a regularizing factor set to 0.1. ", "page_idx": 4}, {"type": "text", "text": "Instance Size Setting. We analyzed the average object size per class in the dataset. We determine the size by adding Gaussian noise with $\\sigma$ of 0.1. The noise exceeding one $\\sigma$ range was clipped to $\\sigma$ . ", "page_idx": 4}, {"type": "text", "text": "3.3 Pseudo LiDAR Point Clouds Augmentation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Ground and Map Synthesis for Object Insertion. To determine feasible insertion areas, RealAug [12] and Lidar-Aug [10] utilized estimated ground estimation. However, relying solely on this data may not cover areas adequately as shown in Fig. 5. To address this, we propose a method that combines map information and estimated ground areas for more realistic scene composition. We first create a rasterized map with a $0.128\\mathrm{m}$ per pixel resolution within a radius of $51.2\\mathrm{m}$ around the ego vehicle, assigning proper layouts (e.g., Road, Sidewalk, etc.) for inserted objects. Additionally, we construct a rasterized ground map based on estimated ground points. The two pieces of information may overlap at pixels where dynamic object are present or where ground area is not estimated due to insufficient points. To deal with it, we prioritize map values for pixels with low point density, while using ground values otherwise. As shown in Fig. 5-(b), the proposed method can predict broader and feasible areas for more realistic data augmentation than ground-only composition. ", "page_idx": 4}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/3920a2848d6d6fc83b4b36d82aa3ea731a974a795c3b941162f9eaa9688e12f8.jpg", "img_caption": ["Figure 5: Comparison of Ground-only and Ground+Map Scene Composition. Blue and Pink-colored points denote the feasible location of insertion derived from (a) ground-only and (b) ground+map synthesized insertions, respectively. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Aligning to Data Geometry. The generated objects need to be axis-aligned to easily obtain accurate bounding box annotations for the detection task. For this, we first use PCA to align the generated points and rotate them around the normal direction in $x y,y z$ , and $z x$ planes to align its axes. We also need to classify objects\u2019 front and back for heading information, so we adopt PointNet+ $^+$ [51] as a heading classifier trained using binary cross-entropy loss. Since PointNe $^{++}$ is rotation sensitive [52] and is trained without rotation augmentation, the model can distinguish between front and back. ", "page_idx": 5}, {"type": "text", "text": "Virtual Object Sweeps. LiDAR scan sweeping is commonly used to increase the point density in some popular benchmarks [8, 9]. Since our pipeline can generate objects that appear from a single scan, additional techniques are required to apply them to such datasets. We employ a rigid body motion model to stack points over time. Given the dataset, we first collect the velocity and acceleration of each class\u2019s center points at each time step and estimate a motion trajectory. We translate the center of generated object points along the selected trajectory. Ultimately, we can generate virtual objects that closely resemble what is acquired from the real LiDAR sweeps. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Implementation Details. We use Plenoxels [14] to reconstruct a given object\u2019s 3D shape from multiview images. Also, we utilize PointNeXt [53] in our CycleGAN-based LiDAR intensity simulator. Note that we sample 300 instances (that has at least 256 LiDAR points) for each minority class from the nuScenes dataset [9] to train our intensity simulator. We implement and evaluate our proposed method based on LiDAR-based 3D object detection implementations from OpenPCDet [54] with default parameter settings. All detectors are trained with a batch size of 32 on $4\\!\\times\\!\\mathrm{Al00}$ GPUs for 20 epochs. We conducted all experiments with the fixed seed for a fair comparison. Details on architectures and hyperparameters can be found in the Supplementary Material. ", "page_idx": 5}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/29aaae6b01e91258b882e6cd5263b466e763ca9871d6a9d37e6f51c2243efc7b.jpg", "img_caption": ["Figure 6: Examples of generated pseudo-LiDAR point samples with different orientations and ranges given reconstructed 3D volumetric representations. "], "img_footnote": [], "page_idx": 5}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/af8741acd1a1cc850ef9a67b97df0047247a88db724462ae5f067c6f81cebf73.jpg", "table_caption": ["Table 1: Detection performance comparison on nuScenes val set in terms of AP, mAP, and NDS. Based on CV-Voxel [5], we compare different placement methods, such as random [1], groundbased [12], and our placement. We also report the effect of using our pseudo-LiDAR samples. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Pseudo Object Bank Details. To validate our system, we have chosen nuScenes [9] dataset. For the pseudo object bank, we generated minority class objects in 13 heading directions (from $-180^{\\circ}$ to $180^{\\circ}$ at intervals of $30^{\\circ}$ ) within the entire perception range (from $-50\\mathrm{m}$ to $50\\mathrm{m}$ at intervals of 5 meters). During training, we discard objects with less than 16 points to prevent ambiguity between classes and add a small variation at the center. As a result, our bank has 36,960 trucks, 52,800 construction vehicles, 12,960 buses, 19,280 trailers, 25,279 motorcycles, and 4,300 bicycles. ", "page_idx": 6}, {"type": "text", "text": "Performance on NuScenes val set. We assess the effect of adding pseudo-LiDAR samples during training using CP-Voxel [5] with a voxel size of [0.075, 0.075, 0.2]. As shown in Table 1, the incorporation of pseudo-LiDAR samples into the GT database significantly improves the overall detection performance, including minority classes, in terms of mAP and NDS (compare 1st vs. 2nd, 3rd vs. 4th, and 5th vs. 6th columns). Our placement approach surpasses existing methods (compare 1st, 3rd vs. 5th columns). Combining our two methods achieves the best performance, with $69.1\\%$ in NDS and $63.5\\%$ in mAP, suggesting that our high-quality pseudo-LiDAR samples effectively improve detection performance for minority classes without compromising majority classes. ", "page_idx": 6}, {"type": "text", "text": "Performance on NuScenes test set. Lastly, we evaluate our model on nuScenes test set based on CP-Voxel [5] and Transfusion-L [55] as baseline detection models. We observe in Table 2 that our model consistently achieves the best NDS and mAP scores (compared to Real-Aug [12]). Notably, our method shows significant performance gains for minor classes such as Trailer, Truck, Motorcycle, etc. Note that we applied the same Test Time Augmentation (TTA) technique to CP-Voxel as their official submission to nuScenes leaderboard. ", "page_idx": 6}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/7ccf5eba904cd0739da83b12235de0c389ab53f7c27ad8067faf8ef075c0b09b.jpg", "table_caption": ["Table 2: Detection performance comparison on nuScenes test set in terms of minority class AP, mAP for all 10 classes, and NDS. \u2020: our reproduction, $^\\ddag$ : test time augmentation enabled. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/0e3ecc9c1516ec2c908f3d5976781147d4f8fdc21ef3fcaf7d71c5978343cf71.jpg", "table_caption": ["Table 3: Comparisons between baseline and PGT-Aug for individual models on nuScenes val set. Abbr. C.V: Construction Vehicle, Ped: Pedestrian, T.C: Traffic Cone, M.C: Motorcycle, B.C: Bicycle. \u2020: our reproduction. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Comparison with Different Model Architectures. We compared detection performance among GT-Aug, Real-Aug, and PGT-Aug using five baselines, as detailed in Table 3. All detectors were tested under same conditions, ensuring that no additional information about the generated objects was utilized during the evaluation process. PGT-Aug brings significant improvements over other augmentations in all types of models, such as center-based models (CP-Pillar, CP-Voxel [5]), anchorbased model (SECOND [1]), and other types (VoxelNeXt [6], Transfusion-L [55]). This confirms that our method can generally be applied to various detection models, boosting the model\u2019s accuracy for minority classes without sacrificing accuracy for majority classes. ", "page_idx": 7}, {"type": "text", "text": "5 Ablation Studies ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Quality of Pseudo Labels. To evaluate the quality of our generated objects, we measure FID scores using SE(3)-transformer [56] trained on the nuScenes dataset. As shown in Table 4, our generated pseudo-LiDAR objects show similar or lower FID scores (than true samples), which may confirm their plausibility and high quality (compare 5th and 6th vs. 7th and 8th columns). We also observe that the pseudo-LiDAR object quality improves with (i) similar Azimuth resolution to the target dataset sensor, (ii) the use of RGB values additionally as input, and (iii) the regularization by group intensity loss. Finally, we used objects generated by Plenoxel with the parameters that gave the best FID score for all 3D object detection tasks. We provide more details in the Supplementary Material. ", "page_idx": 7}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/d4903f76d6d176183a52ed51326541781a1b405ec66dbbd76edaf28d675fec42.jpg", "table_caption": ["Table 4: Quality of Pseudo LiDAR Point Clouds. FID scores (squared Wasserstein distance between given samples and nuScenes samples, thus lower is better) comparison between variants of our models and public LiDAR datasets, Lyft [17] and A2D2 [18]. Abbr. G.S: Gaussian Splatting "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/b33220b3011e6145fb805c3494c19b05684cb8c2057896bffb2443245a63932f.jpg", "table_caption": ["Table 5: Mixing ratio between GT and PGT objects. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/221924d667b690e62bc8b7bde22fd37ddc1e849169935af3d3376029e4af27f4.jpg", "table_caption": ["Table 6: Continuously increasing pseudoLiDAR data. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/49b1122dc7d97232526dc0ffd2d783eaa4c23570d2989cd254d4c1b1dbc14926.jpg", "table_caption": ["Table 7: Comparison between other methods that aim for class imbalance problems. Abbr. C.V: Construction Vehicle, Ped: Pedestrian, T.C: Traffic Cone, M.C: Motorcycle, B.C: Bicycle. \u2020: our reproduction. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Performance based on FID scores. We conducted experiments to assess how the quality of generated objects as FID scores affects detection performance. We generated objects in all comparison groups to have the same shape distribution. As shown in the last three rows of columns 1 to 5 of Table 4, we observe a positive correlation between the average FID scores and the detection performance. ", "page_idx": 8}, {"type": "text", "text": "Samples from Other Datasets. The evaluation was conducted not only through self-validation but also using other public datasets such as Lyft [17] and A2D2 [18]. Despite differences in class ontology and sensor settings from nuScenes, we can prove the effectiveness of our augmentation and confirm a correlation between the FID score and the number of samples in performance gain as shown in Table 4. See the Supplementary Material for matching classes across datasets. ", "page_idx": 8}, {"type": "text", "text": "Samples from Different Renderer. To demonstrate the baseline capability of the proposed pipeline, we applied the results generated by replacing the rendering model with Gaussian-splatting [16] instead of Plenoxels [14]. Due to Gaussian-splatting [16] generates higher-quality objects, so the detection performance improves accordingly, as shown in Table 4. ", "page_idx": 8}, {"type": "text", "text": "Mixing Ratio for Domain Alignments. Even when several methods are applied to reduce the domain gap between the original and generated pseudo objects, there is still a difference between the two sample groups. Therefore, when out-of-distribution data are only used, we can see that the detection performance might drop. To alleviate this discrepancy, we used a strategy that combines the original object bank with the pseudo object bank to reduce the gap. We experimentally demonstrate that this strategy can mitigate the domain gap, allowing pseudo objects to be used effectively for detection tasks. It is especially effective when the mixing ratio is 1:1, which can be confirmed through Table 5. ", "page_idx": 8}, {"type": "text", "text": "Performance based on Bank Size. We discuss the importance of the size of the object bank in the detection task. To examine the impact of varying object shapes, we adjusted the size of the generated bank by decreasing the number of object shapes per class by 1/2 and 1/4. As shown in Table 6, we found that as the types of object increased, the performance improved in the validation set. ", "page_idx": 8}, {"type": "text", "text": "Comparison between other approaches for class imbalance problems. As shown in Table 7, we provide the results of comparative experiments with [34, 57]. To align with the baseline of Dynamic Weight Average (DWA) [34], we conducted experiments on PointPillars [3]. We re-implemented Class-Balanced Loss (CBLoss) [57] with a beta value of 0.9999 and resampled the number of objects. While we observed that loss-balancing methods like DWA [34] and CBLoss [57] effectively improve the performance on minority classes, PGT-Aug, a data-augmentation-based method, achieved the largest performance improvement among all methods. Furthermore, our experiments demonstrate that combining these two types of methods can yield a synergistic effect. ", "page_idx": 8}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/c1b5b2109d2f8a13f29b8e52895ef35b39c8c0868f565640c030fe6a3229968d.jpg", "table_caption": ["Table 8: PGT Performance on KITTI val set in terms of AP and mAP. "], "table_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/70f2668bac48d82566454181a3174c5d445dbbb5a0abc4a2644ab4e27b74b93c.jpg", "table_caption": ["Table 9: PGT Performance on Lyft val set. Abbr. E.V: Emergency Vehicle, O.V: Other Vehicle, M.C: Motorcycle, B.C: Bicycle. Ped: Pedestrian "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "Performance on Other Datasets. Lastly, we applied the proposed framework to KITTI [8] and Lyft [17] with different sensor configurations, ranges, and the number of sweeps. Both datasets did not provide map information, so we modified our scene composition similar to the ground-only composition by using Patchworks [58] to estimate ground. As shown in Table 8 and Table 9, we can see that our framework demonstrates performance improvement across all datasets and is applicable in various environments. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion, Limitations, and Broader Impacts ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose PGT-Aug, a low-cost yet effective data augmentation framework for class imbalance in 3D object detection. To efficiently obtain rare class objects, we start by generating objects from miniatures or web videos at a low cost, then transform them to resemble real LiDAR data, and finally apply map-assistant data augmentation to insert them consistently into the scene information. Even though PGT-Aug achieves significant improvements on various 3D object detection benchmarks, we believe that domain discrepancies still exist in both datasets and categories. Furthermore, our approach must be extended to dynamic and deformable objects, such as animals. While the generated pseudo objects have the potential to render both images and point clouds, our current implementation is limited to point clouds. Regarding broader impact, our work applies not only to objects for autonomous driving but also to secure facilities or military equipment in the same data format. Thus, it could be used for the development of AI models in military or security applications. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Yan Yan, Yuxing Mao, and Bo Li. SECOND: sparsely embedded convolutional detection. Sensors, 18(10): 3337, 2018. doi: 10.3390/S18103337. URL https://doi.org/10.3390/s18103337. ", "page_idx": 10}, {"type": "text", "text": "[2] Yin Zhou and Oncel Tuzel. Voxelnet: End-to-end learning for point cloud based 3d object detection. In 2018 IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2018, Salt Lake City, UT, USA, June 18-22, 2018, pages 4490\u20134499. Computer Vision Foundation / IEEE Computer Society, 2018. doi: 10.1109/CVPR.2018.00472. URL http://openaccess.thecvf.com/content_cvpr_ 2018/html/Zhou_VoxelNet_End-to-End_Learning_CVPR_2018_paper.html.   \n[3] Alex H. Lang, Sourabh Vora, Holger Caesar, Lubing Zhou, Jiong Yang, and Oscar Beijbom. Pointpillars: Fast encoders for object detection from point clouds. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2019, Long Beach, CA, USA, June 16-20, 2019, pages 12697\u201312705. Computer Vision Foundation / IEEE, 2019. doi: 10.1109/CVPR.2019.01298. URL http://openaccess.thecvf.com/content_CVPR_2019/html/Lang_PointPillars_Fast_ Encoders_for_Object_Detection_From_Point_Clouds_CVPR_2019_paper.html.   \n[4] Shaoshuai Shi, Chaoxu Guo, Li Jiang, Zhe Wang, Jianping Shi, Xiaogang Wang, and Hongsheng Li. PV-RCNN: point-voxel feature set abstraction for 3d object detection. In 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2020, Seattle, WA, USA, June 13-19, 2020, pages 10526\u201310535. Computer Vision Foundation / IEEE, 2020. doi: 10.1109/CVPR42600.2020.01054. URL https://openaccess.thecvf.com/content_CVPR_2020/html/Shi_PV-RCNN_Point-Voxel_ Feature_Set_Abstraction_for_3D_Object_Detection_CVPR_2020_paper.html.   \n[5] Tianwei Yin, Xingyi Zhou, and Philipp Kr\u00e4henb\u00fchl. Center-based 3d object detection and tracking. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2021, virtual, June 19-25, 2021, pages 11784\u201311793. Computer Vision Foundation / IEEE, 2021. doi: 10.1109/CVPR46437.2021. 01161. URL https://openaccess.thecvf.com/content/CVPR2021/html/Yin_Center-Based_ 3D_Object_Detection_and_Tracking_CVPR_2021_paper.html.   \n[6] Yukang Chen, Jianhui Liu, Xiangyu Zhang, Xiaojuan Qi, and Jiaya Jia. Voxelnext: Fully sparse voxelnet for 3d object detection and tracking. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2023, Vancouver, BC, Canada, June 17-24, 2023, pages 21674\u201321683. IEEE, 2023. doi: 10.1109/ CVPR52729.2023.02076. URL https://doi.org/10.1109/CVPR52729.2023.02076.   \n[7] Haiyang Wang, Chen Shi, Shaoshuai Shi, Meng Lei, Sen Wang, Di He, Bernt Schiele, and Liwei Wang. DSVT: dynamic sparse voxel transformer with rotated sets. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2023, Vancouver, BC, Canada, June 17-24, 2023, pages 13520\u201313529. IEEE, 2023. doi: 10.1109/CVPR52729.2023.01299. URL https://doi.org/10.1109/CVPR52729. 2023.01299.   \n[8] Andreas Geiger, Philip Lenz, Christoph Stiller, and Raquel Urtasun. Vision meets robotics: The KITTI dataset. Int. J. Robotics Res., 32(11):1231\u20131237, 2013. doi: 10.1177/0278364913491297. URL https: //doi.org/10.1177/0278364913491297.   \n[9] Holger Caesar, Varun Bankiti, Alex H. Lang, Sourabh Vora, Venice Erin Liong, Qiang Xu, Anush Krishnan, Yu Pan, Giancarlo Baldan, and Oscar Beijbom. nuscenes: A multimodal dataset for autonomous driving. In 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2020, Seattle, WA, USA, June 13-19, 2020, pages 11618\u201311628. Computer Vision Foundation / IEEE, 2020. doi: 10.1109/CVPR42600.2020. 01164. URL https://openaccess.thecvf.com/content_CVPR_2020/html/Caesar_nuScenes_ A_Multimodal_Dataset_for_Autonomous_Driving_CVPR_2020_paper.html.   \n[10] Jin Fang, Xinxin Zuo, Dingfu Zhou, Shengze Jin, Sen Wang, and Liangjun Zhang. Lidar-aug: A general rendering-based augmentation framework for 3d object detection. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2021, virtual, June 19-25, 2021, pages 4710\u20134720. Computer Vision Foundation / IEEE, 2021. doi: 10.1109/CVPR46437.2021.00468. URL https://openaccess.thecvf.com/ content/CVPR2021/html/Fang_LiDAR-Aug_A_General_Rendering-Based_Augmentation_ Framework_for_3D_Object_Detection_CVPR_2021_paper.html.   \n[11] Hongge Chen, Zhao Chen, Gregory P. Meyer, Dennis Park, Carl Vondrick, Ashish Shrivastava, and Yuning Chai. SHIFT3D: synthesizing hard inputs for tricking 3d detectors. CoRR, abs/2309.05810, 2023. doi: 10.48550/ARXIV.2309.05810. URL https://doi.org/10.48550/arXiv.2309.05810.   \n[12] Jinglin Zhan, Tiejun Liu, Rengang Li, Jingwei Zhang, Zhaoxiang Zhang, and Yuntao Chen. Real-aug: Realistic scene synthesis for lidar augmentation in 3d object detection. CoRR, abs/2305.12853, 2023. doi: 10.48550/ARXIV.2305.12853. URL https://doi.org/10.48550/arXiv.2305.12853.   \n[13] Ben Mildenhall, Pratul P. Srinivasan, Matthew Tancik, Jonathan T. Barron, Ravi Ramamoorthi, and Ren Ng. Nerf: representing scenes as neural radiance fields for view synthesis. Commun. ACM, 65(1):99\u2013106, 2022. doi: 10.1145/3503250. URL https://doi.org/10.1145/3503250.   \n[14] Sara Fridovich-Keil, Alex Yu, Matthew Tancik, Qinhong Chen, Benjamin Recht, and Angjoo Kanazawa. Plenoxels: Radiance fields without neural networks. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2022, New Orleans, LA, USA, June 18-24, 2022, pages 5491\u20135500. IEEE, 2022. doi: 10.1109/CVPR52688.2022.00542. URL https://doi.org/10.1109/CVPR52688.2022.00542.   \n[15] Thomas M\u00fcller, Alex Evans, Christoph Schied, and Alexander Keller. Instant neural graphics primitives with a multiresolution hash encoding. ACM Trans. Graph., 41(4):102:1\u2013102:15, 2022. doi: 10.1145/ 3528223.3530127. URL https://doi.org/10.1145/3528223.3530127.   \n[16] Bernhard Kerbl, Georgios Kopanas, Thomas Leimk\u00fchler, and George Drettakis. 3d gaussian splatting for real-time radiance field rendering. ACM Trans. Graph., 42(4):139:1\u2013139:14, 2023. doi: 10.1145/3592433. URL https://doi.org/10.1145/3592433.   \n[17] John Houston, Guido Zuidhof, Luca Bergamini, Yawei Ye, Long Chen, Ashesh Jain, Sammy Omari, Vladimir Iglovikov, and Peter Ondruska. One thousand and one hours: Self-driving motion prediction dataset. In Jens Kober, Fabio Ramos, and Claire J. Tomlin, editors, 4th Conference on Robot Learning, CoRL 2020, 16-18 November 2020, Virtual Event / Cambridge, MA, USA, volume 155 of Proceedings of Machine Learning Research, pages 409\u2013418. PMLR, 2020. URL https://proceedings.mlr.press/ v155/houston21a.html.   \n[18] Jakob Geyer, Yohannes Kassahun, Mentar Mahmudi, Xavier Ricou, Rupesh Durgesh, Andrew S. Chung, Lorenz Hauswald, Viet Hoang Pham, Maximilian M\u00fchlegg, Sebastian Dorn, Tiffany Fernandez, Martin J\u00e4nicke, Sudesh Mirashi, Chiragkumar Savani, Martin Sturm, Oleksandr Vorobiov, Martin Oelker, Sebastian Garreis, and Peter Schuberth. A2D2: audi autonomous driving dataset. CoRR, abs/2004.06320, 2020. URL https://arxiv.org/abs/2004.06320.   \n[19] Jiageng Mao, Minzhe Niu, Chenhan Jiang, Hanxue Liang, Jingheng Chen, Xiaodan Liang, Yamin Li, Chaoqiang Ye, Wei Zhang, Zhenguo Li, Jie Yu, Chunjing Xu, and Hang Xu. One million scenes for autonomous driving: ONCE dataset. In Joaquin Vanschoren and Sai-Kit Yeung, editors, Proceedings of the Neural Information Processing Systems Track on Datasets and Benchmarks 1, NeurIPS Datasets and Benchmarks 2021, December 2021, virtual, 2021. URL https://datasets-benchmarks-proceedings.neurips. cc/paper/2021/hash/67c6a1e7ce56d3d6fa748ab6d9af3fd7-Abstract-round1.html.   \n[20] Jieru Mei, Alex Zihao Zhu, Xinchen Yan, Hang Yan, Siyuan Qiao, Liang-Chieh Chen, and Henrik Kretzschmar. Waymo open dataset: Panoramic video panoptic segmentation. In Shai Avidan, Gabriel J. Brostow, Moustapha Ciss\u00e9, Giovanni Maria Farinella, and Tal Hassner, editors, Computer Vision - ECCV 2022 - 17th European Conference, Tel Aviv, Israel, October 23-27, 2022, Proceedings, Part XXIX, volume 13689 of Lecture Notes in Computer Science, pages 53\u201372. Springer, 2022. doi: 10.1007/978-3-031-19818-2\\_4. URL https://doi.org/10.1007/978-3-031-19818-2_4.   \n[21] Kemal Oksuz, Baris Can Cam, Sinan Kalkan, and Emre Akbas. Imbalance problems in object detection: A review. IEEE Trans. Pattern Anal. Mach. Intell., 43(10):3388\u20133415, 2021. doi: 10.1109/TPAMI.2020. 2981890. URL https://doi.org/10.1109/TPAMI.2020.2981890.   \n[22] Lanxiao Li and Michael Heizmann. Applying plain transformers to real-world point clouds. CoRR, abs/2303.00086, 2023. doi: 10.48550/ARXIV.2303.00086. URL https://doi.org/10.48550/arXiv. 2303.00086.   \n[23] Hongyu Guo and Herna L. Viktor. Learning from imbalanced data sets with boosting and data generation: the databoost-im approach. SIGKDD Explor., 6(1):30\u201339, 2004. doi: 10.1145/1007730.1007736. URL https://doi.org/10.1145/1007730.1007736.   \n[24] Nitesh V. Chawla, Kevin W. Bowyer, Lawrence O. Hall, and W. Philip Kegelmeyer. SMOTE: synthetic minority over-sampling technique. J. Artif. Intell. Res., 16:321\u2013357, 2002. doi: 10.1613/JAIR.953. URL https://doi.org/10.1613/jair.953.   \n[25] Xinting Hu, Yi Jiang, Kaihua Tang, Jingyuan Chen, Chunyan Miao, and Hanwang Zhang. Learning to segment the tail. In 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2020, Seattle, WA, USA, June 13-19, 2020, pages 14042\u201314051. Computer Vision Foundation / IEEE, 2020. doi: 10.1109/CVPR42600.2020.01406. URL https://openaccess.thecvf.com/content_CVPR_2020/ html/Hu_Learning_to_Segment_the_Tail_CVPR_2020_paper.html.   \n[26] Shin Ando and Chun-Yuan Huang. Deep over-sampling framework for classifying imbalanced data. In Michelangelo Ceci, Jaakko Hollm\u00e9n, Ljupco Todorovski, Celine Vens, and Saso Dzeroski, editors, Machine Learning and Knowledge Discovery in Databases - European Conference, ECML PKDD 2017, Skopje, Macedonia, September 18-22, 2017, Proceedings, Part I, volume 10534 of Lecture Notes in Computer Science, pages 770\u2013785. Springer, 2017. doi: 10.1007/978-3-319-71249-9\\_46. URL https: //doi.org/10.1007/978-3-319-71249-9_46.   \n[27] Mateusz Buda, Atsuto Maki, and Maciej A. Mazurowski. A systematic study of the class imbalance problem in convolutional neural networks. Neural Networks, 106:249\u2013259, 2018. doi: 10.1016/J.NEUNET. 2018.07.011. URL https://doi.org/10.1016/j.neunet.2018.07.011.   \n[28] Sangdoo Yun, Dongyoon Han, Sanghyuk Chun, Seong Joon Oh, Youngjoon Yoo, and Junsuk Choe. Cutmix: Regularization strategy to train strong classifiers with localizable features. In 2019 IEEE/CVF International Conference on Computer Vision, ICCV 2019, Seoul, Korea (South), October 27 - November 2, 2019, pages 6022\u20136031. IEEE, 2019. doi: 10.1109/ICCV.2019.00612. URL https://doi.org/10. 1109/ICCV.2019.00612.   \n[29] Brandon Trabucco, Kyle Doherty, Max Gurinas, and Ruslan Salakhutdinov. Effective data augmentation with diffusion models. In The Twelfth International Conference on Learning Representations, ICLR 2024, Vienna, Austria, May 7-11, 2024. OpenReview.net, 2024. URL https://openreview.net/forum?id= ZWzUA9zeAg.   \n[30] Khawar Islam, Muhammad Zaigham Zaheer, Arif Mahmood, and Karthik Nandakumar. Diffusemix: Labelpreserving data augmentation with diffusion models. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2024, Seattle, WA, USA, June 16-22, 2024, pages 27611\u201327620. IEEE, 2024. doi: 10.1109/CVPR52733.2024.02608. URL https://doi.org/10.1109/CVPR52733.2024.02608.   \n[31] Alexey Dosovitskiy, Germ\u00e1n Ros, Felipe Codevilla, Antonio M. L\u00f3pez, and Vladlen Koltun. CARLA: an open urban driving simulator. In 1st Annual Conference on Robot Learning, CoRL 2017, Mountain View, California, USA, November 13-15, 2017, Proceedings, volume 78 of Proceedings of Machine Learning Research, pages 1\u201316. PMLR, 2017. URL http://proceedings.mlr.press/v78/dosovitskiy17a. html.   \n[32] Sivabalan Manivasagam, Shenlong Wang, Kelvin Wong, Wenyuan Zeng, Mikita Sazanovich, Shuhan Tan, Bin Yang, Wei-Chiu Ma, and Raquel Urtasun. Lidarsim: Realistic lidar simulation by leveraging the real world. In 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2020, Seattle, WA, USA, June 13-19, 2020, pages 11164\u201311173. Computer Vision Foundation / IEEE, 2020. doi: 10.1109/CVPR42600.2020.01118. URL https://openaccess.thecvf.com/content_CVPR_2020/html/Manivasagam_LiDARsim_ Realistic_LiDAR_Simulation_by_Leveraging_the_Real_World_CVPR_2020_paper.html.   \n[33] Vlas Zyrianov, Xiyue Zhu, and Shenlong Wang. Learning to generate realistic lidar point clouds. In Shai Avidan, Gabriel J. Brostow, Moustapha Ciss\u00e9, Giovanni Maria Farinella, and Tal Hassner, editors, Computer Vision - ECCV 2022 - 17th European Conference, Tel Aviv, Israel, October 23-27, 2022, Proceedings, Part XXIII, volume 13683 of Lecture Notes in Computer Science, pages 17\u201335. Springer, 2022. doi: 10.1007/978-3-031-20050-2\\_2. URL https://doi.org/10.1007/978-3-031-20050-2_2.   \n[34] Daeun Lee and Jinkyu Kim. Resolving class imbalance for lidar-based object detector by dynamic weight average and contextual ground truth sampling. In IEEE/CVF Winter Conference on Applications of Computer Vision, WACV 2023, Waikoloa, HI, USA, January 2-7, 2023, pages 682\u2013691. IEEE, 2023. doi: 10.1109/WACV56688.2023.00075. URL https://doi.org/10.1109/WACV56688.2023.00075.   \n[35] Benjin Zhu, Zhengkai Jiang, Xiangxin Zhou, Zeming Li, and Gang Yu. Class-balanced grouping and sampling for point cloud 3d object detection. CoRR, abs/1908.09492, 2019. URL http://arxiv.org/ abs/1908.09492.   \n[36] Aoran Xiao, Jiaxing Huang, Dayan Guan, Kaiwen Cui, Shijian Lu, and Ling Shao. Polarmix: A general data augmentation technique for lidar point clouds. In NeurIPS, 2022. URL http://papers.nips.cc/paper_files/paper/2022/hash/ 475b85eb74d201bead9927807e713e95-Abstract-Conference.html.   \n[37] Kazuto Nakashima and Ryo Kurazume. Lidar data synthesis with denoising diffusion probabilistic models. CoRR, abs/2309.09256, 2023. doi: 10.48550/ARXIV.2309.09256. URL https://doi.org/10.48550/ arXiv.2309.09256.   \n[38] Jin Fang, Dingfu Zhou, Feilong Yan, Tongtong Zhao, Feihu Zhang, Yu Ma, Liang Wang, and Ruigang Yang. Augmented lidar simulator for autonomous driving. IEEE Robotics Autom. Lett., 5(2):1931\u20131938, 2020. doi: 10.1109/LRA.2020.2969927. URL https://doi.org/10.1109/LRA.2020.2969927.   \n[39] Jeong Joon Park, Peter R. Florence, Julian Straub, Richard A. Newcombe, and Steven Lovegrove. Deepsdf: Learning continuous signed distance functions for shape representation. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2019, Long Beach, CA, USA, June 16-20, 2019, pages 165\u2013174. Computer Vision Foundation / IEEE, 2019. doi: 10.1109/CVPR.2019.00025. URL http: //openaccess.thecvf.com/content_CVPR_2019/html/Park_DeepSDF_Learning_Continuous_ Signed_Distance_Functions_for_Shape_Representation_CVPR_2019_paper.html.   \n[40] Shunsuke Saito, Zeng Huang, Ryota Natsume, Shigeo Morishima, Hao Li, and Angjoo Kanazawa. Pifu: Pixel-aligned implicit function for high-resolution clothed human digitization. In 2019 IEEE/CVF International Conference on Computer Vision, ICCV 2019, Seoul, Korea (South), October 27 - November 2, 2019, pages 2304\u20132314. IEEE, 2019. doi: 10.1109/ICCV.2019.00239. URL https://doi.org/10. 1109/ICCV.2019.00239.   \n[41] Songyou Peng, Michael Niemeyer, Lars M. Mescheder, Marc Pollefeys, and Andreas Geiger. Convolutional occupancy networks. In Andrea Vedaldi, Horst Bischof, Thomas Brox, and Jan-Michael Frahm, editors, Computer Vision - ECCV 2020 - 16th European Conference, Glasgow, UK, August 23-28, 2020, Proceedings, Part III, volume 12348 of Lecture Notes in Computer Science, pages 523\u2013540. Springer, 2020. doi: 10.1007/978-3-030-58580-8\\_31. URL https://doi.org/10.1007/978-3-030-58580-8_31.   \n[42] Jonathan T. Barron, Ben Mildenhall, Matthew Tancik, Peter Hedman, Ricardo Martin-Brualla, and Pratul P. Srinivasan. Mip-nerf: A multiscale representation for anti-aliasing neural radiance fields. In 2021 IEEE/CVF International Conference on Computer Vision, ICCV 2021, Montreal, QC, Canada, October 10-17, 2021, pages 5835\u20135844. IEEE, 2021. doi: 10.1109/ICCV48922.2021.00580. URL https://doi.org/10.1109/ICCV48922.2021.00580.   \n[43] Jonathan T. Barron, Ben Mildenhall, Dor Verbin, Pratul P. Srinivasan, and Peter Hedman. Mip-nerf 360: Unbounded anti-aliased neural radiance fields. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2022, New Orleans, LA, USA, June 18-24, 2022, pages 5460\u20135469. IEEE, 2022. doi: 10.1109/CVPR52688.2022.00539. URL https://doi.org/10.1109/CVPR52688.2022.00539.   \n[44] Yoonwoo Jeong, Seungjoo Shin, Junha Lee, Christopher B. Choy, Anima Anandkumar, Minsu Cho, and Jaesik Park. Perfception: Perception using radiance fields. In NeurIPS, 2022. URL http://papers.nips.cc/paper_files/paper/2022/hash/ a76a757ed479a1e6a5f8134bea492f83-Abstract-Datasets_and_Benchmarks.html.   \n[45] Johannes L. Sch\u00f6nberger and Jan-Michael Frahm. Structure-from-motion revisited. In 2016 IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2016, Las Vegas, NV, USA, June 27-30, 2016, pages 4104\u20134113. IEEE Computer Society, 2016. doi: 10.1109/CVPR.2016.445. URL https: //doi.org/10.1109/CVPR.2016.445.   \n[46] Kai Zhang, Gernot Riegler, Noah Snavely, and Vladlen Koltun. Nerf $^{++}$ : Analyzing and improving neural radiance fields. CoRR, abs/2010.07492, 2020. URL https://arxiv.org/abs/2010.07492.   \n[47] Yangming Cheng, Liulei Li, Yuanyou Xu, Xiaodi Li, Zongxin Yang, Wenguan Wang, and Yi Yang. Segment and track anything. CoRR, abs/2305.06558, 2023. doi: 10.48550/ARXIV.2305.06558. URL https://doi.org/10.48550/arXiv.2305.06558.   \n[48] Heewoo Jun and Alex Nichol. Shap-e: Generating conditional 3d implicit functions. CoRR, abs/2305.02463, 2023. doi: 10.48550/ARXIV.2305.02463. URL https://doi.org/10.48550/arXiv.2305.02463.   \n[49] Ruoshi Liu, Rundi Wu, Basile Van Hoorick, Pavel Tokmakov, Sergey Zakharov, and Carl Vondrick. Zero1-to-3: Zero-shot one image to 3d object. In IEEE/CVF International Conference on Computer Vision, ICCV 2023, Paris, France, October 1-6, 2023, pages 9264\u20139275. IEEE, 2023. doi: 10.1109/ICCV51070. 2023.00853. URL https://doi.org/10.1109/ICCV51070.2023.00853.   \n[50] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A. Efros. Unpaired image-to-image translation using cycle-consistent adversarial networks. In IEEE International Conference on Computer Vision, ICCV 2017, Venice, Italy, October 22-29, 2017, pages 2242\u20132251. IEEE Computer Society, 2017. doi: 10.1109/ICCV.2017.244. URL https://doi.org/10.1109/ICCV.2017.244.   \n[51] Charles Ruizhongtai Qi, Li Yi, Hao Su, and Leonidas J. Guibas. Pointnet++: Deep hierarchical feature learning on point sets in a metric space. In Isabelle Guyon, Ulrike von Luxburg, Samy Bengio, Hanna M. Wallach, Rob Fergus, S. V. N. Vishwanathan, and Roman Garnett, editors, Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems 2017, December 4-9, 2017, Long Beach, CA, USA, pages 5099\u20135108, 2017. URL https://proceedings.neurips.cc/ paper/2017/hash/d8bf84be3800d12f74d8b05e9b89836f-Abstract.html.   \n[52] Chen Zhao, Jiaqi Yang, Xin Xiong, Angfan Zhu, Zhiguo Cao, and Xin Li. Rotation invariant point cloud analysis: Where local geometry meets global topology. Pattern Recognit., 127:108626, 2022. doi: 10.1016/J.PATCOG.2022.108626. URL https://doi.org/10.1016/j.patcog.2022.108626.   \n[53] Guocheng Qian, Yuchen Li, Houwen Peng, Jinjie Mai, Hasan Hammoud, Mohamed Elhoseiny, and Bernard Ghanem. Pointnext: Revisiting pointnet++ with improved training and scaling strategies. In NeurIPS, 2022. URL http://papers.nips.cc/paper_files/paper/2022/hash/ 9318763d049edf9a1f2779b2a59911d3-Abstract-Conference.html.   \n[54] OpenPCDet Development Team. Openpcdet: An open-source toolbox for 3d object detection from point clouds. https://github.com/open-mmlab/OpenPCDet, 2020.   \n[55] Xuyang Bai, Zeyu Hu, Xinge Zhu, Qingqiu Huang, Yilun Chen, Hongbo Fu, and Chiew-Lan Tai. Transfusion: Robust lidar-camera fusion for 3d object detection with transformers. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2022, New Orleans, LA, USA, June 18-24, 2022, pages 1080\u20131089. IEEE, 2022. doi: 10.1109/CVPR52688.2022.00116. URL https: //doi.org/10.1109/CVPR52688.2022.00116.   \n[56] Fabian Fuchs, Daniel E. Worrall, Volker Fischer, and Max Welling. Se(3)-transformers: 3d rototranslation equivariant attention networks. In Hugo Larochelle, Marc\u2019Aurelio Ranzato, Raia Hadsell, Maria-Florina Balcan, and Hsuan-Tien Lin, editors, Advances in Neural Information Processing Systems 33: Annual Conference on Neural Information Processing Systems 2020, NeurIPS 2020, December 6-12, 2020, virtual, 2020. URL https://proceedings.neurips.cc/paper/2020/hash/ 15231a7ce4ba789d13b722cc5c955834-Abstract.html.   \n[57] Yin Cui, Menglin Jia, Tsung-Yi Lin, Yang Song, and Serge J. Belongie. Class-balanced loss based on effective number of samples. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2019, Long Beach, CA, USA, June 16-20, 2019, pages 9268\u2013 9277. Computer Vision Foundation / IEEE, 2019. doi: 10.1109/CVPR.2019.00949. URL http://openaccess.thecvf.com/content_CVPR_2019/html/Cui_Class-Balanced_Loss_ Based_on_Effective_Number_of_Samples_CVPR_2019_paper.html.   \n[58] Hyungtae Lim, Minho Oh, and Hyun Myung. Patchwork: Concentric zone-based region-wise ground segmentation with ground likelihood estimation using a 3d lidar sensor. IEEE Robotics Autom. Lett., 6 (4):6458\u20136465, 2021. doi: 10.1109/LRA.2021.3093009. URL https://doi.org/10.1109/LRA.2021. 3093009.   \n[59] Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua Bengio and Yann LeCun, editors, 3rd International Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015. URL http://arxiv.org/abs/1412. 6980.   \n[60] Xudong Mao, Qing Li, Haoran Xie, Raymond Y. K. Lau, Zhen Wang, and Stephen Paul Smolley. Least squares generative adversarial networks. In IEEE International Conference on Computer Vision, ICCV 2017, Venice, Italy, October 22-29, 2017, pages 2813\u20132821. IEEE Computer Society, 2017. doi: 10.1109/ ICCV.2017.304. URL https://doi.org/10.1109/ICCV.2017.304.   \n[61] Seungjae Lee, Hyungtae Lim, and Hyun Myung. Patchwork $^{-+}$ : Fast and robust ground segmentation solving partial under-segmentation using 3d point cloud. In IEEE/RSJ International Conference on Intelligent Robots and Systems, IROS 2022, Kyoto, Japan, October 23-27, 2022, pages 13276\u201313283. IEEE, 2022. doi: 10.1109/IROS47612.2022.9981561. URL https://doi.org/10.1109/IROS47612. 2022.9981561.   \n[62] Alexander Lehner, Stefano Gasperini, Alvaro Marcos-Ramiro, Michael Schmidt, Mohammad-Ali Nikouei Mahani, Nassir Navab, Benjamin Busam, and Federico Tombari. 3d-vfield: Adversarial augmentation of point clouds for domain generalization in 3d object detection. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2022, New Orleans, LA, USA, June 18-24, 2022, pages 17274\u201317283. IEEE, 2022. doi: 10.1109/CVPR52688.2022.01678. URL https://doi.org/10.1109/CVPR52688. 2022.01678.   \n[63] Xuzhong Hu, Zaipeng Duan, Xiao Huang, Ziwen Xu, Delie Ming, and Jie Ma. Context-aware data augmentation for LIDAR 3d object detection. In IEEE International Conference on Image Processing, ICIP 2023, Kuala Lumpur, Malaysia, October 8-11, 2023, pages 11\u201315. IEEE, 2023. doi: 10.1109/ ICIP49359.2023.10222773. URL https://doi.org/10.1109/ICIP49359.2023.10222773.   \n[64] Jeremy Reizenstein, Roman Shapovalov, Philipp Henzler, Luca Sbordone, Patrick Labatut, and David Novotn\u00fd. Common objects in 3d: Large-scale learning and evaluation of real-life 3d category reconstruction. In 2021 IEEE/CVF International Conference on Computer Vision, ICCV 2021, Montreal, QC, Canada, October 10-17, 2021, pages 10881\u201310891. IEEE, 2021. doi: 10.1109/ICCV48922.2021.01072. URL https://doi.org/10.1109/ICCV48922.2021.01072.   \n[65] Daniel Russo, Benjamin Van Roy, Abbas Kazerouni, Ian Osband, and Zheng Wen. A tutorial on thompson sampling. Found. Trends Mach. Learn., 11(1):1\u201396, 2018. doi: 10.1561/2200000070. URL https: //doi.org/10.1561/2200000070.   \n[66] Shuzhe Wang, Vincent Leroy, Yohann Cabon, Boris Chidlovskii, and J\u00e9r\u00f4me Revaud. Dust3r: Geometric 3d vision made easy. CoRR, abs/2312.14132, 2023. doi: 10.48550/ARXIV.2312.14132. URL https: //doi.org/10.48550/arXiv.2312.14132.   \n[67] Yawar Siddiqui, Antonio Alliegro, Alexey Artemov, Tatiana Tommasi, Daniele Sirigatti, Vladislav Rosov, Angela Dai, and Matthias Nie\u00dfner. Meshgpt: Generating triangle meshes with decoder-only transformers. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2024, Seattle, WA, USA, June 16-22, 2024, pages 19615\u201319625. IEEE, 2024. doi: 10.1109/CVPR52733.2024.01855. URL https://doi.org/10.1109/CVPR52733.2024.01855.   \n[68] Peihao Wang, Dejia Xu, Zhiwen Fan, Dilin Wang, Sreyas Mohan, Forrest N. Iandola, Rakesh Ranjan, Yilei Li, Qiang Liu, Zhangyang Wang, and Vikas Chandra. Taming mode collapse in score distillation for text-to-3d generation. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, CVPR 2024, Seattle, WA, USA, June 16-22, 2024, pages 9037\u20139047. IEEE, 2024. doi: 10.1109/CVPR52733.2024.00863. URL https://doi.org/10.1109/CVPR52733.2024.00863. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "A.1 Dataset Details ", "text_level": 1, "page_idx": 16}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/f2c0588fcfc56f829ae4ed85960b666d21c8c1115aabfee9f60a1a0f081f7f09.jpg", "img_caption": [], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "", "img_caption": ["Figure 7: Instance Distribution on various benchmarks. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "Data Collections. We first provide the number of videos collected from miniatures and web pages as shown in Table 10. We purchased various miniatures within a budget of around $\\mathbb{S}100$ , and crawled data using the following keywords on Google: $360^{\\circ}$ camera, surround view, turntable, sales, and second-hand. Finally, the video collection consists of $64\\ensuremath{\\mathrm{\\truc{ks}}^{3}}$ , 21 motorcycles4, and 10 buses5 from YouTube, along with additional footage of construction vehicles from the Ritchie Bros Auction website6. We provide examples of our dataset collection in Fig. 8. ", "page_idx": 16}, {"type": "text", "text": "Table 10: Statistics for our data collection. (i) Videos capturing surround view of miniatures and (ii) publicly available videos of given minor-class objects. Abbr. C.V: Construction Vehicle, M.C: Motorcycle, B.C: Bicycle ", "page_idx": 16}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/7c55b092bc7c84ea6a608aa92d2cf658be71beac87313df76adc73992f644b3b.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/30b74cc73b963d418a86204f345df1b8b9a62de5cb22d508c61bd697b674638b.jpg", "img_caption": ["Figure 8: Dataset Collection. We demonstrate our collection of miniature images and crawled web videos. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "Volumetric 3D Instance Collection. To aid in understanding the operation of the proposed framework, we present all results from input images to output results including foreground segmentation masks, extracted foreground objects, camera poses, and the corresponding dense RGB-colored point clouds in Fig. 9. ", "page_idx": 18}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/3e3678a4048dd6181f2eab2544a46d195ae2b432ed723ff5101f3ba3ae312693.jpg", "img_caption": ["Figure 9: Volumetric 3D rendering Results of RGB Point Clouds. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "Object-level Domain Alignment. We demonstrate the effect of our rearranged range projection as shown in Fig. 10. Not only qualitative differences, but also by reflecting the sensor configuration, we can reduce the discrepancy to the actual data domain. ", "page_idx": 19}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/d162606491d2b5ac4dcf0d2ad7cb6314a42ed61ea6a54a9055192d52434b1ae4.jpg", "img_caption": ["(a) Vanilla Range Projection  (b) Rearranged Range Projection "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "Figure 10: Examples of Generated Point Clouds (a) with and (b) without rearranged range projection. We use Azimuth resolution: 1080, Vertical FOV: $-30^{\\circ}~10^{\\circ}$ , Channels: 32 for sensor configuration. ", "page_idx": 19}, {"type": "text", "text": "A.2 Implementation Details ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "View-agnostic Color Representation. We provide a pseudo-code for ad-hoc module to obtain representative colors for each voxel grid or point based on the estimated mean color values from different views. We mainly adopt PeRFception [44] framework to implement view-agnostic 2D-to-3D rendering. ", "page_idx": 19}, {"type": "text", "text": "Algorithm 1 Pseudocode for estimating mean RGB value of point cloud in a pretrained voxel grid or point cloud.   \nInput $(H\\times W)$ rays from $N$ views, Spherical Harmonic (SH) coefficients $s h$ , step size $t_{s t e p}$ , Spatial indices of the 3D data structure (Voxels or 3D Gaussians) $l$   \nOutput RGB PointCloud   \n1: for each $i$ -th view in $N$ do   \n2: for each $j$ -th ray in $H\\times W$ do   \n3: Define $R G B_{s u m}$ , count to store RGB value and counts at $i$ -th view.   \n4: Calculate ray origin and direction $r_{d}$ , $,r_{o}\\gets\\mathrm{ray}\\;r_{i j}$   \n5: Calculate SH basis $s h_{b a s i s}$ with $r_{d}/\\hat{r_{d}}$ .   \n6: Calculate the ray $r_{i j}$ \u2019s far bound $t_{m a x}$ , and the near bound $t_{m i n}$ .   \n7: Set t as tmin.   \n8: while $t<t_{m a x}$ do   \n9: Extract the position in the range $[t,t+t_{s t e p})$ of ray $r_{i j}$ .   \n10: Obtain spatial index $l_{i d x}$ of the position.   \n11: Obtain SH coefficients $s h_{c}\\gets s h[l_{i d x}]$ .   \n12: Calculate RGB of voxels or Gaussians by $\\Sigma(s h_{c}\\times s h_{b a s i s})$ .   \n13: Add RGB value and one to $R G B_{s u m}$ , count at index $l_{i d x}$ , respectively.   \n14: Increment t by tstep   \n15: end while   \n16: end for   \n17: Append RGB sum, and counts of voxels or Gaussians in $i$ -th view to arrays   \n18: end for ", "page_idx": 19}, {"type": "text", "text": "Front-back Classification. For the front-and-back binary classifier, we build a conventional PointNetbased model and train the model during 100 epochs with binary cross-entropy loss, using Adam optimizer [59] with beta values (0.9, 0.999). The learning rate decreases from 0.001 through the step decay scheduler with a step size of 20 and a gamma of 0.5. We used NuScenes [9] point clouds as the training set and flipped the point cloud with a probability of 0.5 to the model input. The model transfers input data into 128-dimensional feature vectors. These are then mapped into scalar probability to classify whether the vehicle is heading forward or backward. ", "page_idx": 20}, {"type": "text", "text": "LiDAR Intensity Simulator. Our model is based on CycleGAN [50] for unpaired translation between RGB and intensity, including class-specific PointNeXt [53] generators and discriminators. For the intensity domain, we randomly selected 300 target class samples from nuScenes dataset [9]. We then generated another 300 samples for the RGB domain by performing view-dependent point filtering on RGB dense point clouds from 2D-to-3D renderers according to the location and heading of the nuScenes sample. For batch training, we convert input samples more than 256 points into samples with 256 points using farthest point sampling. Consequently, we trained the intensity simulator for each target class over 200 epochs with batch size 16, using Adam optimizer [59] with beta values (0.5, 0.999) and a learning rate of 0.001. ", "page_idx": 20}, {"type": "text", "text": "For two generators $G_{D_{r g b}\\rightarrow D_{i n t}}$ , $G_{D_{i n t}\\rightarrow D_{r g b}}$ , and two discriminators $D_{\\mathcal{D}_{i n t}},\\,D_{\\mathcal{D}_{r g b}}$ , we use a weighted loss consisting of group intensity loss, cyclic loss, and LSGAN loss [60], ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}\\left(G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}},G_{\\mathcal{D}_{i n t}\\to\\mathcal{D}_{r g b}},D_{\\mathcal{D}_{r g b}},D_{\\mathcal{D}_{i n t}}\\right)=}\\\\ {\\mathcal{L}_{\\mathrm{LSGAN}}\\left(G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}},D_{\\mathcal{D}_{i n t}},\\mathcal{D}_{i n t},\\mathcal{D}_{r g b}\\right)}\\\\ {+\\mathcal{L}_{\\mathrm{LSGAN}}\\left(G_{\\mathcal{D}_{i n t}\\to\\mathcal{D}_{r g b}},D_{\\mathcal{D}_{r g b}},\\mathcal{D}_{r g b},\\mathcal{D}_{i n t}\\right)}\\\\ {+\\mathcal{L}_{\\mathrm{cyc}}\\left(G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}},G_{\\mathcal{D}_{i n t}\\to\\mathcal{D}_{r g b}}\\right)}\\\\ {+\\lambda\\mathcal{L}_{\\mathrm{group}}\\left(G_{\\mathcal{D}_{r g b}\\to\\mathcal{D}_{i n t}},\\mathcal{D}_{i n t},G_{\\mathcal{D}_{i n t}\\to\\mathcal{D}_{r g b}},\\mathcal{D}_{r g b}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "A.3 Experiments Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Pseudo Object Bank Details. To verify the impact of the proposed pipeline on the 3D object detection task on nuScenes dataset [9], we created a pseudo object bank from RGB points generated by Plenoxel [14]. We used the intensity estimator trained from the point cloud with RGB features, with group intensity loss and CycleGAN loss, and performed point filtering and rearrangement according to the sensor configuration of the nuScenes dataset [9]. This pseudo object bank has the FID score 7.7 on the nuScenes GT object bank (see Table 4). For each dense RGB point cloud object, our 2D-to-3D renderer, including view-agnostic color extraction, took approximately 20 minutes. Training the intensity simulator for each class took approximately 30 minutes, and the generation of pseudo object bank samples, which includes axis alignment and projection, took 1 hour. These processes were completed using 4 AMD EPYC 7313 16-Core Processors and an NVIDIA A100. ", "page_idx": 20}, {"type": "text", "text": "Detection Models. We provide all the YAML configuration files for the OpenPCDet [54] models used in the paper. Note that we only modified the augmentation part of the configuration for a fair comparison. We adopt Adam optimizer with one-cycle learning rate policy and Patchwork $^{++}$ [61] to obtain ground points of the input scenes. Note that SECOND [1] was performed on a voxel with a size of [0.1, 0.1, 0.2]. The CP-Pillar [5] was performed on a voxel with a size of [0.1, 0.1, 8], while the other remaining models were performed with a voxel size of [0.075, 0.075, 0.2]. Training each model took approximately 36 hours using four Nvidia A100s, 256Gi memory and 4 AMD EPYC 7313 16-Core Processors on a single workstation. ", "page_idx": 20}, {"type": "text", "text": "A.4 Ablation Studies Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "To demonstrate the effect of the quality and quantity of the pseudo object banks, we performed various ablation studies. All experiments for the 3D object detection task are conducted based on CP-Voxel [5] operating on the input voxel size [0.075, 0.075, 0.2], while maintaining the setting of the remaining hyperparameters from OpenPCDet [54]. ", "page_idx": 20}, {"type": "text", "text": "Quality of Pseudo Labels. We conducted experiments to assess how plausible and realistic our generated object points are compared to existing real-world datasets. To measure FID scores, we use a SE(3)-transformer [56] model trained on nuScenes dataset over 100 epochs with batch size 4, using Adam optimizer [59] with a learning rate of 0.002 and a weight decay parameter of 0.5. We first sort the objects in nuScenes in descending order based on the number of points, divide them into 32 groups, and sequentially sample objects with many points, resulting in class sets with 593 objects. Note that A2D2 [18], Lyft [17], and our pseudo GT bank use all available samples. The class mapping between different detection datasets is shown in Table 11. In feature extraction, the object is sampled with 64 points, followed by local grouping with the nearest 32 points. These features are inputted into the SE(3)-transformer [56] to extract the object-aware feature. Our implementation codes originate from https://github.com/NVIDIA/DeepLearningExamples/tree/master/ DGLPyTorch/DrugDiscovery/SE3Transformer. ", "page_idx": 21}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/b88517cb5bad05703c1830075b81771a9f0c5ec1b74ea7ce4d944d83bb6a6b02.jpg", "table_caption": ["Table 11: Categories agreement among datasets for FID evaluation and 3D object detection. "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "Samples from Other Datasets. Besides pseudo LiDAR generation for nuScenes dataset, we also generated object banks for KITTI [18] and Lyft [17] to demonstrate PGT-Aug\u2019s effectiveness on different detecction benchmarks. We adopt perception range of $x$ from $-40$ to $40\\mathrm{m}$ and $y$ from 0 to $70\\mathrm{m}$ at the interval of $5\\mathrm{m}$ for KITTI [18], and adopt range from ${}_{-80\\mathrm{m}}$ to $80\\mathrm{m}$ for Lyft [17] according to dataset specific evaluation schemes. We use 13 heading directions (from $-180^{\\circ}$ to $180^{\\circ}$ at intervals of $30^{\\circ}$ ). We augment pseudo LiDAR for [cyclist] class for KITTI [18], and augment [truck, motorcycle, bicycle, bus, other vehicle] classes for Lyft [17]. ", "page_idx": 21}, {"type": "text", "text": "A.5 Efficiency and Real-time Applicability of Pre-trained Models ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Memory usage and inference time If Object-level Domain Alignment is performed during detection training, it may introduce additional time overhead compared to GT-Aug or Real-Aug. In 3D object detection methods, the objects to be inserted are generated and stored prior to training, and these stored objects are loaded and inserted during the training phase. The process of loading these objects from disk into memory for scene insertion incurs time, and the memory and time complexity per batch is $O(n)$ for the number of objects $n$ to be inserted, similar to Real-Aug. As a result, real-time performance was not a primary consideration in our approach. ", "page_idx": 21}, {"type": "text", "text": "We would like to emphasize two key points: (1) the pseudo LiDAR point clouds are generated and stored offline, and (2) these generated point clouds are loaded from memory and augmented during the training of 3D object detectors. Therefore, the requirement to run pre-trained models (e.g., unpaired domain transfer models) in real-time becomes less critical. In other words, we would like to emphasize two key points: (1) the pseudo LiDAR point clouds can be stored offline, and (2) the insertion of sampled objects from a ground truth instance bank is already a common practice, in typical 3D object detector training. Additionally, in Table 12, we analyze the processing time and memory usage for generating pseudo LiDAR point clouds across various object classes, such as construction vehicles, trucks, and trailers. This analysis confirms that our pipeline can efficiently generate point clouds, with a total processing time of less than ${300}\\mathrm{ms}$ . ", "page_idx": 21}, {"type": "text", "text": "Table 12: Average processing time (per instance, in msec) and memory usage (MB) C.V: Construction Vehicle, Ped: Pedestrian, T.C: Traffic Cone, M.C: Motorcycle, B.C: Bicycle. ", "page_idx": 22}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/c0d068cd70b64c1901e67d0d689fbd7d3f6191a053153210e5906dcd0dc62754.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "A.6 Qualitative Analysis for 3D Detection Task ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "We provide additional qualitative results for the model trained with the proposed PGT-Aug in Fig. 11. ", "page_idx": 22}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/3949a08543f828ab8937c983f8b1043e428f5250a693960ffbfccffd2057ba30.jpg", "img_caption": ["Figure 11: Detection output comparison between Real-Aug and PGT-Aug (ours). We provide bounding boxes of (a) ground truth and detected by (b) Real-Aug [12] and (c) PGT-Aug. "], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "B Additional experiments. ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "B.1 Additional Ablation Studies. ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Comparison with using only first spherical harmonic coefficient. As shown in Table 13, we compare our method with a variant model (where Plenoxel\u2019s spherical harmonic (SH) coefficients are set to 0) to see the quality of generated pseudo LiDAR point clouds in terms of FID score. The experimental results confirm that our approach can generate point clouds that are more similar to the real LiDAR data. ", "page_idx": 23}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/8e035ae24724600535c81f73c4f66be45a993f153c50664045a2d7382c2f7bd9.jpg", "table_caption": ["Table 13: FID score evaluation between SH coefficient 0 and ours. Abbr. C.V: Construction Vehicle, Ped: Pedestrian, T.C: Traffic Cone, M.C: Motorcycle, B.C: Bicycle. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Ablation study on the impact of pre-trained models. To assess the impact of pre-trained models, we conducted additional experiments under the following conditions: (A) constant intensity without intensity generation, (B) random sampling without view-dependent point filtering, (C) no rigid motion model, and (D) and (E) instance generation based on changes in the number of images. As shown in Table 14, the removal of intensity generation in pseudo LiDAR led to a performance decline in downstream detection tasks. Moreover, as the percentage of multiview images used for 3D reconstruction decreased, the overall detection performance decreased accordingly. Lastly, we performed experiments on general alignment by replacing object-level alignment with random sampling of points from dense RGB point clouds and removing the motion models. Both experiments demonstrated suboptimal performance compared to PGT-Aug. ", "page_idx": 23}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/0b9f109a0822fcca7d428c469a68b60df2255a080ad5aff762e241d191eda66b.jpg", "table_caption": ["Table 14: Ablation study in intensity, the number of images, data alignment on nuScenes val set. Abbr. C.V: Construction Vehicle, Ped: Pedestrian, T.C: Traffic Cone, M.C: Motorcycle, B.C: Bicycle. \u2020: our reproduction. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "B.2 Effect of PGT-Aug on the majority of classes ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Our primary objective is to generate and insert the minority classes instead of the majority classes to relieve the class imbalance issue. Thus, we anticipated that the performance of the minority would improve, while the performance of the majority classes would either remain stable or improve slightly due to the synergy effect from addressing the imbalance. To verify the effectiveness of the pipeline to majority classes, we compare PGT-Aug with other 3D data augmentation methods, including LiDAR-Aug [10], 3D-VField [62], and CA-Aug [63], on the KITTI [18] Car benchmark. To match their baseline, we conducted the experiments on PointPillars [3]. We reconstructed 10 cars of 3D RGB point clouds from CO3D dataset [64] and created about 16,000 pseudo LiDARs of Car class. We apply pseudo LiDARs along with GT LiDARs during augmentation, and our PGT-Aug performance largely outperforms GT-Aug, Real-Aug, and other augmentation methods in the car detection benchmark as shown in Table 15. ", "page_idx": 23}, {"type": "text", "text": "Instance sample details. As shown in Fig. 12, we create pseudo LiDAR point clouds for our method by randomly sampling ten cars from the CO3D dataset. The instances used are as follows: 106_12650_23736, 106_12662_23043, 157_17286_33548, 185_19982_37678, 194_20899_41094, 216_22796_47484, 216_22827_48422, 421_58405_112551, 206_21799_45886, and 421_58407_112553. ", "page_idx": 23}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/08829ae9e7a493b02a06ca3205baf6e37c7d0821761384d7a16efb6b0b1e306b.jpg", "table_caption": ["Table 15: Performance comparison with other data augmentation approaches. \u2020: our reproduction "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "", "page_idx": 24}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/1bc4939dd23b419cda35456eaec294a4a78047e999c135e96fcf3455dfb2e272.jpg", "img_caption": ["Figure 12: Examples of pseudo GT samples generated by our pipeline for the Car class from the CO3D dataset. "], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "B.3 Discussion Towards Better Performance ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We introduce some novel techniques for improving the effectiveness of PGT-Aug that were not applied in the main paper for a fair comparison in Table 16. We expect that these methods will be helpful for future research. In these experiments, the same pseudo-object bank in Section 4 was used. ", "page_idx": 24}, {"type": "text", "text": "Ray tracing and Distance filtering. Ray tracing can simulate a partially occluded form of objects when obstacles exist between the newly inserted object and the location of the LiDAR sensor by a range projection. Through this method, we can generate realistic scenes. For distance filtering, we observed that ground truths located outside the perception range can increase the class uncertainty due to sparsity. Therefore, we can reduce the sample uncertainty by eliminating those samples in the ground truth bank. In this experiment, we set a distance threshold of $54m$ . ", "page_idx": 24}, {"type": "text", "text": "Bandit Algorithm for Object Placement. The advantage of our pipeline is that it can generate fully volumetric objects, allowing it to be inserted at any location. To maximize the advantage, we used Thompson sampling [65] to determine the candidate positions for pseudo LiDAR samples during training. We formulate this position decision as a bandit problem of selecting cells of a grid representing a quantized space around the ego vehicle. First, for cells with the ground truth box, if the confidence score of the prediction is greater than 0.5, the detector is considered to have performed well in the cell area and the success count of the cell increases. On the other hand, if the confidence score of the negative samples is greater than 0.5, it is considered a failure, and the failure count of the cell increases. For each cell, Thompson Sampling is performed by setting the alpha of the beta distribution as the failure count and the beta as the success count. After that, the top $n$ cells with the highest probability are selected. This process allows us to insert objects where the detector fails during training. We set the grid size $0.075\\times8m$ in this experiment. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "table", "img_path": "NlpHKNjNNZ/tmp/1dafa6d22f1f29021135c025731000ee6d6146a2388d6d812407ed5334b8e93e.jpg", "table_caption": ["Table 16: Detection performance comparison for additional modules on nuScenes val set in terms of AP, mAP, and NDS. We use CP-Voxel [5] and Transfusion-L [55] as a baseline model. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "C Significance of the Proposed Method ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "In 3D object detection, there have been studies aimed at addressing class imbalance problems by modifying model structures (CBGS) [35] or adjusting the loss function [34]. The most widely used method is the over-sampling known as GT-Aug, which involves inserting objects from other frames into the current frame. However, this method is limited to inserting objects from a predefined pool (training set), which restricts learning intra-class diversity, and generating or collecting 3D data for various objects has been extremely challenging and expensive. Recent advancements in differentiable 3D reconstruction techniques, such as NeRF and Gaussian Splatting, have made it possible to reconstruct dense 3D points at a lower cost. By leveraging these 3D reconstruction techniques, we proposed a novel and practical pipeline that overcomes the limitations of traditional insertion methods, particularly in terms of cost and diversity. Also, our pipeline is not limited to a specific generative model and can be applied to any renderers. ", "page_idx": 25}, {"type": "text", "text": "C.1 Generalization by Different Renderers. ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "To prove the capability of the proposed framework, we show the generated RGB-colored point clouds and the simulated LiDAR point clouds of the yellow loader by different renderers: Plenoxels [14], Gaussian-Splatting [16], and DUSt3R [66] in Fig. 13. Even when different models are applied, we can observe that our proposed framework can consistently generate high-quality LiDAR objects. ", "page_idx": 25}, {"type": "image", "img_path": "NlpHKNjNNZ/tmp/6e6f2bace9b49c8636873e0f2b666bd5448d81b709c356efa9a0641b3a13f419.jpg", "img_caption": ["Figure 13: Examples of RGB Point Clouds and Generated Pseudo LiDAR from Various 2D to 3D Renderers. "], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "C.2 Reason for using Neural Scene Representations, not Generations. ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "In order to place the restored objects in various positions, it is necessary to restore the entire shape of the object and create a bounding box. We chose explicit 3D representation models (3DGS Plenoxel, or various NeRF methods) that can reliably reconstruct the entire shape and perform robustly with relatively small objects, rather than Text-to-3D Generation models (Shap-E [48], MeshGPT [67], etc.), which tend to collapse modes when the target image distribution is overly concentrated in a single peak, resulting in abnormal 3D objects that are strongly related to specific views (Janus problem) [68]. ", "page_idx": 26}, {"type": "text", "text": "C.3 Data Size. ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Our dataset is created to provide pseudo-LiDAR point clouds of minority-class objects, which can be augmented into typical driving datasets to compensate for the class imbalance problem. Thus, the volume of our dataset should be smaller than that of these datasets but sufficient to compensate for the class imbalance problem, as we reported in our experiments. Moreover, our approach offers significant advantages in data generation and flexibility: (i) We provide an automated pipeline to generate pseudo-LiDAR point clouds, enabling the community to easily produce and expand datasets with various objects. (ii) Our method can generate view-dependent pseudo-LiDAR point clouds that can be flexibly placed anywhere in the scene. These features allow for rapid and efficient dataset expansion, significantly improving data efficiency and enabling researchers to quickly increase their dataset size with minimal effort. ", "page_idx": 26}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our claims in abstract and introduction clearly elaborate on our work\u2019s motivation to solve class-imbalance in 3D LiDAR-based detection and three contributions. We also provided experimental results to certify our claims. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 27}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: We addressed the limitations of our synthetic datasets and pipeline in the paper. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 27}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] . ", "page_idx": 28}, {"type": "text", "text": "Justification: The paper does not include theoretical results. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 28}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: We provide a detailed explanation of the methodology for reproducing our results and experimental settings and demonstrate the robustness of our approach through various experimental results. Through a fixed seed, we ensure deterministic behavior in all experiments. More details on the implementation are provided in the supplemental material. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 28}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We attached our dense RGB point cloud data, part of the pseudo-LiDAR object bank, and a visualization code as the supplemental material. Our code and data will be made available through the project page. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 29}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We have specified our details of training and test datasets, and details of experimental settings such as batch size, hyperparameters, hardwares, codebase, size of synthetic datasets. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 29}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [No] ", "page_idx": 29}, {"type": "text", "text": "Justification: We answered no but created the fixed object bank for augmentation to eliminate randomness. Through a fixed seed, we ensure deterministic behavior in all experiments. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. ", "page_idx": 29}, {"type": "text", "text": "\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 30}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We clearly address the computer resources for our experiments in both main paper and supplemental material. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 30}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We have reviewed our work according to NeurIPS Code of Ethics. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 30}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We have addressed societal impacts of our work in the paper. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 31}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: Our released datasets and detector checkpoints do not pose such risks. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 31}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We specified the source of scraped real-world videos of long-tail classes and properly cited the use of existing models, code package, and dataset. The source code of PeRFception and OpenPCDet have Apache License 2.0 and the source code of CycleGAN has BSD License, and Segment-and-Track-Anything has AGPL-3.0 License. The corresponding license is properly inserted in each readme. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 31}, {"type": "text", "text": "", "page_idx": 32}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided along with the assets? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: We provide detailed description of our newly created pseudo-LiDAR object bank in the main paper, alongside analysis on integration of new assets with existing detection pipeline. We also provide README instructions that include execution methods for the source code and folder structure for our object bank. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 32}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 32}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 32}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 33}]