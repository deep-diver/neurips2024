[{"figure_path": "XkvNQPDFqV/tables/tables_8_1.jpg", "caption": "Table 1: Byte savings, per element, from compressing SIFT1M [Jegou et al., 2010] and BigANN [J\u00e9gou et al., 2011] as a function of number of elements and clusters. Values in columns RCC, ROC-2, and ROC-1, indicate the gap, in percentage (lower is better), to the optimal savings in bytes-per-element, in column log|\u03a0|. A value of 0.00 indicates the method achieves the maximum bit savings shown in column log|II|. Columns Max. and Min. show the theoretical maximum and minimum savings as discussed in Section 5.1.", "description": "This table presents the byte savings achieved by three different methods (RCC, ROC-2, and ROC-1) when compressing two large-scale datasets, SIFT1M and BigANN, with varying numbers of elements and clusters.  The savings are compared to the theoretical optimal savings (log|\u03a0|). Lower values indicate better performance, with 0.00 representing optimal compression.", "section": "5 Experiments"}, {"figure_path": "XkvNQPDFqV/tables/tables_8_2.jpg", "caption": "Table 2: Columns under \"% Savings\" show the savings, in percentage, for the setting of Johnson et al. [2019] where the number of clusters is held fixed to approximately \u221an. Savings in bytes-per-element are shown in the second column, where log|II| = \u221anlog((\u221an \u2212 1)!), and agree with Table 1. For external ids, 8 bytes are added to log|II| to compute the total size per element, as well as to the cost under RCC. Meanwhile, log(n) bits are added to log|II| for sequential ids, but not to the cost under RCC, as RCC does not require ids to represent clustering information. See Section 5.3 for a full discussion.", "description": "This table shows the percentage savings achieved by RCC compared to using sequential or external IDs for representing cluster assignments in the context of vector databases.  The savings are broken down by the number of elements (n) and the size of IDs (4, 8, or 16 bytes).  The table highlights the significant space savings RCC provides, especially when dealing with large datasets.", "section": "5 Experiments"}]