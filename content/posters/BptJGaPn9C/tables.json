[{"figure_path": "BptJGaPn9C/tables/tables_1_1.jpg", "caption": "Table 1: Time complexity comparison of various methods for computing and updating G\" in LiGAMs. Here, n is the number of variables, d is the length of the updated block of the permutation, and k is the number of folds considered in k-fold cross-validation.", "description": "The table compares the time complexity of different methods for computing and updating the graph G\" in Linear Gaussian Acyclic Models (LiGAMs).  It shows the initial complexity (for constructing the graph from scratch) and the update complexity (for updating the graph after a change in the permutation). The complexities are expressed in terms of n (the number of variables) and d (the length of the updated block of the permutation), and k for the CV General method (k-fold cross validation).  The methods compared are QWO (the proposed method), BIC, BDeu, and CV General.", "section": "3 Permutation-Based Causal Discovery in LiGAMs"}, {"figure_path": "BptJGaPn9C/tables/tables_7_1.jpg", "caption": "Table 1: Time complexity comparison of various methods for computing and updating G\" in LiGAMs. Here, n is the number of variables, d is the length of the updated block of the permutation, and k is the number of folds considered in k-fold cross-validation.", "description": "This table compares the time complexity of different methods for computing and updating the graph G\" in linear Gaussian acyclic models (LiGAMs).  The complexity is analyzed for both the initial computation of G\" and for updates after a change to the permutation. The parameters considered in the complexity analysis are 'n' (number of variables), 'd' (length of the updated permutation block), and 'k' (number of folds for cross-validation). The methods compared include QWO (the proposed method), BIC, BDeu, and CV General.", "section": "3 Permutation-Based Causal Discovery in LiGAMs"}]