[{"figure_path": "XHWkHFWi3k/figures/figures_1_1.jpg", "caption": "Figure 1: A visualization of the iterative refinement provided by the SRDS algorithm on a sample from StableDiffusion with the prompt \u2018a beautiful castle, matte painting.\u2019 The initial coarse solve (left) via limited steps provides a rough estimate of the sample, which iteratively refined through iterations of our algorithm. Early convergence is observed as the 3rd output nearly matches, a key feature that enables efficient generation.", "description": "This figure shows how the Self-Refining Diffusion Sampler (SRDS) algorithm iteratively refines a sample generated by Stable Diffusion. Starting from a rough estimate (leftmost image) produced with fewer steps, the algorithm progressively improves the quality of the sample through parallel iterations, with the third iteration showing almost perfect convergence to the final, high-quality image.", "section": "1 Introduction"}, {"figure_path": "XHWkHFWi3k/figures/figures_3_1.jpg", "caption": "Figure 2: First iteration of the parareal algorithm to solve an example ODE. The black curve represents the desired solution from the fine solver. The magenta dots indicate the running solution after one iteration of predictor-corrector updates. Figure inspiration from Pentland et al. [25].", "description": "This figure illustrates the first iteration of the Parareal algorithm, a parallel-in-time integration method.  The black curve shows the exact solution obtained using a computationally expensive \"fine\" solver. The orange curve is a rough initial estimate of the solution from a fast \"coarse\" solver. The algorithm then refines this estimate in parallel using the fine solver on subintervals and updates using a predictor-corrector mechanism. The magenta dots show the improved solution after the first iteration. The process is repeated until convergence to the exact solution.", "section": "3.1 Parareal Algorithm"}, {"figure_path": "XHWkHFWi3k/figures/figures_5_1.jpg", "caption": "Figure 3: Computation graph for diffusion sampling. For SRDS, the red arrows correspond to fine solves, and each block [0, \u221aN], [\u221aN, 2\u221aN], and so on can be perform the fine solves independently in parallel. The blue arrows correspond to 1-step coarse solves.", "description": "This figure illustrates the computational difference between sequential sampling and the proposed SRDS algorithm.  Sequential sampling (a) shows a linear chain of computations, where each step depends on the previous one.  In contrast, SRDS (b) employs a parallel-in-time approach.  It starts with a coarse estimation of the entire trajectory (yellow nodes), which is then refined iteratively using parallel fine solves (red arrows) in blocks.  The fine solves within a block are independent of each other, thus allowing parallelization. Blue arrows represent coarse solves, which update the overall trajectory after each parallel fine solve iteration.  The dotted red line in (b) indicates convergence where additional iterations would not significantly change the result.", "section": "3.4 Batched Inference and Pipelining"}, {"figure_path": "XHWkHFWi3k/figures/figures_6_1.jpg", "caption": "Figure 4: Illustration of the pipelined version of the SRDS algorithm on N = 16 denoising steps, which results in a direct 2x speedup compared to the vanilla version.", "description": "This figure illustrates how pipelining in SRDS leads to a 2x speedup.  The top shows the non-pipelined version, where each iteration of the algorithm completes before the next begins. The bottom shows the pipelined version. The fine solves (red arrows) in each time interval can start as soon as the previous interval's results are available, enabling parallel computation of the fine solvers which drastically reduces latency. The blue arrows represent the 1-step coarse solves. This pipelining results in a significant speedup over the non-pipelined version.", "section": "3.4 Batched Inference and Pipelining"}, {"figure_path": "XHWkHFWi3k/figures/figures_8_1.jpg", "caption": "Figure 5: Convergence of the SRDS algorithm for a trajectory of length 25 (left) and 100 (right) showcase how early termination of the algorithm can yield equivalent sample quality. In particular, longer trajectories with increased parallelism appear to converge faster.", "description": "This figure shows the convergence of the Self-Refining Diffusion Sampler (SRDS) algorithm for different trajectory lengths (25 and 100). The y-axis represents the CLIP score, a metric for image quality, and the x-axis shows the number of SRDS iterations.  The figure demonstrates that even with a limited number of iterations, SRDS can achieve similar image quality to a full sequential sampling process. Notably, longer trajectories seem to converge faster, highlighting the benefit of parallelism in SRDS.", "section": "3.2 Self-Refining Diffusion Samplers"}, {"figure_path": "XHWkHFWi3k/figures/figures_9_1.jpg", "caption": "Figure 6: Sample generation from StableDiffusion-v2 with the SRDS algorithm with text prompts based on examples from DrawBench. We plot the early converged SRDS figure (top) and the result of the serial trajectory (bottom); the two rows are essentially indistinguishable, highlighting the approximation-free nature of SRDS.", "description": "This figure demonstrates the results of using the Self-Refining Diffusion Sampler (SRDS) algorithm on Stable Diffusion v2.  The top row shows images generated by SRDS after only a few iterations, while the bottom row shows the corresponding images generated by a standard, sequential approach. The near-identical quality of the images in both rows highlights that SRDS achieves the same level of accuracy as the sequential method, but much faster, due to its parallelization capabilities.", "section": "Experiments on Diffusion Image Generation"}, {"figure_path": "XHWkHFWi3k/figures/figures_16_1.jpg", "caption": "Figure 7: Convergence of the SRDS algorithm on LSUN Church.", "description": "The figure shows how the FID score of generated samples changes as the number of SRDS iterations increases.  It demonstrates the rapid convergence of the FID score towards the value obtained by a sequential sampling method within a small number of SRDS iterations. This illustrates the algorithm's efficiency in achieving high-quality sample generation with fewer steps.", "section": "F Additional Convergence Experiments"}, {"figure_path": "XHWkHFWi3k/figures/figures_17_1.jpg", "caption": "Figure 6: Sample generation from StableDiffusion-v2 with the SRDS algorithm with text prompts based on examples from DrawBench. We plot the early converged SRDS figure (top) and the result of the serial trajectory (bottom); the two rows are essentially indistinguishable, highlighting the approximation-free nature of SRDS.", "description": "This figure shows sample generations from Stable Diffusion v2 using both the standard method and the SRDS method.  The top row displays images generated by SRDS, showing how a relatively quick, rough estimate is iteratively refined to match the quality of the bottom row, which shows images generated using the standard, slower method. The close similarity highlights SRDS's ability to achieve high-quality results efficiently.", "section": "Experiments on Diffusion Image Generation"}, {"figure_path": "XHWkHFWi3k/figures/figures_17_2.jpg", "caption": "Figure 1: A visualization of the iterative refinement provided by the SRDS algorithm on a sample from StableDiffusion with the prompt \u2018a beautiful castle, matte painting.\u2019 The initial coarse solve (left) via limited steps provides a rough estimate of the sample, which iteratively refined through iterations of our algorithm. Early convergence is observed as the 3rd output nearly matches, a key feature that enables efficient generation.", "description": "This figure shows the iterative refinement process of the Self-Refining Diffusion Samplers (SRDS) algorithm. Starting from a coarse estimate of the sample (leftmost image), the algorithm iteratively refines the sample through parallel iterations, quickly converging to a high-fidelity sample (rightmost image) that is nearly identical to the final output after just three iterations. This demonstrates the efficiency and effectiveness of the SRDS algorithm in accelerating the sampling process.", "section": "1 Introduction"}, {"figure_path": "XHWkHFWi3k/figures/figures_17_3.jpg", "caption": "Figure 8: Convergence of the SRDS algorithm on various samples from DrawBench.", "description": "This figure shows sample generations from Stable Diffusion v2 using different prompts from the Drawbench dataset.  The top row shows the results obtained using the Self-Refining Diffusion Sampler (SRDS) algorithm, and the bottom row displays the results of the serial trajectory (traditional method). The image pairs demonstrate that SRDS produces samples of comparable quality to the traditional approach, but using a significantly faster method. This highlights the algorithm's efficiency and approximation-free nature.", "section": "G Additional Samples from SRDS"}]