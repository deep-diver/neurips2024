[{"figure_path": "nQl8EjyMzh/figures/figures_6_1.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the forecasting performance of three different diffusion models (Joint AR, Amortised, and Universal Amortised) on the Kuramoto-Sivashinsky (KS) and Kolmogorov datasets.  The x-axis shows different conditioning scenarios represented as P|C, where P is the number of generated states and C is the number of conditioning states.  The y-axis represents the high correlation time, a metric indicating the model's ability to generate accurate and long-range forecasts.  Error bars show mean \u00b1 3 standard errors across the test trajectories, indicating the variability in the results. The figure demonstrates that the models' performance varies across different conditioning scenarios and datasets.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_7_1.jpg", "caption": "Figure 2: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the forecasting performance of three different diffusion models: the joint model, the amortised model, and the universal amortised model.  The models are evaluated on two datasets: the Kuramoto-Sivashinsky (KS) equation and the Kolmogorov flow equation.  The performance metric is the high correlation time, which measures the length of time that the model's predictions remain highly correlated with the true solution. The figure shows that the universal amortised model generally outperforms the other two models across a range of conditioning scenarios (different combinations of generated states (P) and conditioned states (C)). The error bars represent the mean \u00b1 3 standard errors, indicating the variability of the results.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_8_1.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure displays the results of offline data assimilation experiments using four different methods: Joint AR, Joint AAO (0), Joint AAO (1), and Universal Amortised.  The top row shows the Root Mean Squared Deviation (RMSD) for the Kuramoto-Sivashinsky (KS) and Kolmogorov flow datasets at various levels of data sparsity (proportion of observed data).  The bottom row shows the computational cost (in minutes) for each method and sparsity level.  The results indicate that the AR method generally outperforms the AAO methods, especially in sparse data scenarios, though using more corrector steps (AAO(1) vs AAO(0)) improves AAO accuracy. The Universal Amortised method shows competitive performance.", "section": "Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_20_1.jpg", "caption": "Figure 4: True test trajectories from solving the Burgers\u2019 equation following the setup of [77]. In this case, both training, validation, and test trajectories have the same length. We used \u2206\u03c4 = 0.01s, so the trajectory contains states from time t = 0s to t = 1s. The spatial dimension is discretized in 128 evenly distributed states", "description": "This figure shows three example trajectories generated by solving the Burgers' equation.  The trajectories represent the training, validation, and test sets. Each trajectory shows the evolution of the solution over time (from t=0s to t=1s), with the spatial dimension discretized into 128 points. The parameters used in generating these examples are consistent with the setup described in reference [77]. All three trajectories have the same length. The time-step used is \u2206\u03c4 = 0.01s.", "section": "D Data generation and implementation details"}, {"figure_path": "nQl8EjyMzh/figures/figures_21_1.jpg", "caption": "Figure 5: Examples from the Kuramoto-Sivashinsky dataset. Training trajectories are shorter than those used to evaluate the models. Training trajectories have 140 time steps generated every \u0394\u03c4 = 0.2s, i.e. training trajectories contain examples from 0s to 28s. Validation and test trajectories, instead, show the evolution of the equation for 640 steps, i.e. from 0s to 128s. The spatial dimension is discretised in 256 evenly distributed states.", "description": "This figure shows examples of training, validation, and testing trajectories from the Kuramoto-Sivashinsky dataset.  The key difference highlighted is the length of the trajectories: training trajectories are shorter (140 time steps, 0-28 seconds), while validation and testing trajectories are longer (640 time steps, 0-128 seconds). The spatial resolution is consistent across all examples (256 evenly distributed states).", "section": "D Data generation and implementation details"}, {"figure_path": "nQl8EjyMzh/figures/figures_22_1.jpg", "caption": "Figure 6: Examples from the Kolmogorov dataset. Training, validation, and test trajectories all have 64 time steps. For each example, we only show a subset of the states, corresponding to t \u2208 {\u2206\u03c4, 8\u2206\u03c4, 16\u2206\u03c4, 24\u2206\u03c4, 32\u2206\u03c4, 40\u2206\u03c4, 48\u2206\u03c4, 56\u2206\u03c4, 64\u2206\u03c4}", "description": "This figure shows examples of the Kolmogorov flow dataset used in the paper.  The dataset consists of 2D PDE trajectories (velocity fields) at different time points. The figure displays 3 example trajectories from the training, validation, and test sets of the dataset. Each row shows a different trajectory. Within each row, different time steps (t) are shown in different frames. The visualization emphasizes the time evolution of the complex, swirling patterns characteristic of the Kolmogorov flow.", "section": "D.3 2D Kolmogorov-Flow equation"}, {"figure_path": "nQl8EjyMzh/figures/figures_24_1.jpg", "caption": "Figure 7: RMSD for Burgers' for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure compares the performance of two different solvers (DPM++ and EI) and two different time schedules (quadratic and linear) for generating samples using the all-at-once (AAO) approach. The results are shown for different numbers of corrector steps (0, 5, and 25). It shows that with few corrector steps, the choice of solver and time schedule does not affect the results significantly, but with 25 corrector steps, the quadratic time schedule performs slightly better.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_24_2.jpg", "caption": "Figure 7: RMSD for Burgers' for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure shows the impact of different solvers (DPM++, EI) and time scheduling methods (quadratic, linear) on the Root Mean Square Deviation (RMSD) for the Burgers' equation.  The left, middle and right panels show results for 0, 5, and 25 corrector steps respectively.  The results indicate that with few corrector steps, solver and scheduling choices have little impact on the RMSD. However, with 25 corrector steps, the quadratic time schedule shows lower RMSD.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_25_1.jpg", "caption": "Figure 7: RMSD for Burgers\u2019 for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure displays box plots comparing the root mean squared error (RMSE) for different solver and time scheduling methods when applied to the Burgers' equation.  Three levels of corrector steps (0, 5, 25) are shown, for two solvers (DPM++, EI) and two time scheduling approaches (linear, quadratic).  The results show relatively little difference in RMSE between the solvers and time scheduling methods when the number of corrector steps is low;  however, with 25 corrector steps the quadratic schedule shows a noticeably lower RMSE.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_25_2.jpg", "caption": "Figure 7: RMSD for Burgers\u2019 for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "The figure is a box plot showing the results of the RMSD for the Burgers' dataset for different numbers of corrector steps using two different solvers (DPM++ and EI) and two different time schedules (quadratic and linear). The plot shows that when using 0 or a small number of corrector steps, the RMSD is not significantly affected by the choice of solver or time schedule. However, when using 25 corrector steps, the quadratic time schedule appears to produce slightly lower RMSD values.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_26_1.jpg", "caption": "Figure 11: RMSD for Burgers' for AAO and AR generation with a window of 5. The number of corrections for AAO generation was chosen to match the computational budget of the AR sampling technique, yet the AR technique is clearly superior.", "description": "This figure compares the root mean square deviation (RMSD) between the generated samples and true trajectories for both All-at-once (AAO) and Autoregressive (AR) sampling methods on the Burgers' dataset.  The window size used for the score network was 5. The number of corrector steps for AAO was chosen to match the computational cost of AR sampling with 0 corrector steps. The results show that AR sampling, which iteratively generates states conditioned on previous ones, significantly outperforms the AAO approach, which generates the entire trajectory at once. This demonstrates the superior performance of the AR method for forecasting PDE dynamics.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_26_2.jpg", "caption": "Figure 12: Comparison between the true samples (top), AAO samples (middle), and AR samples (bottom) for Burgers'. The AAO samples are only able to capture the initial states correctly, while the AR-generated samples maintain very good correlation with the ground truth even at long rollouts (101 time steps).", "description": "This figure compares the true samples, AAO samples, and AR samples for the Burgers' dataset. The top row shows the ground truth. The middle row shows AAO samples, which only correctly capture the initial states. The bottom row shows the AR samples, which maintain a good correlation with the ground truth even for long trajectories of 101 timesteps. This demonstrates the superiority of AR sampling over AAO sampling for long-term prediction.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_27_1.jpg", "caption": "Figure 7: RMSD for Burgers\u2019 for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure compares the Root Mean Squared Deviation (RMSD) for the Burgers\u2019 equation using two different solvers (DPM++ and EI) and two different time schedules (quadratic and linear).  It shows results for 0, 5, and 25 corrector steps.  The key takeaway is that with few corrector steps, the solver and schedule choice have minimal impact on the accuracy, but with many (25) steps, the quadratic schedule is slightly better.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_27_2.jpg", "caption": "Figure 37: Qualitative comparison between the true, predicted (with the joint AR model), and\ninterpolated trajectories, as well as the observed values for the Kolmogorov dataset. The top plot\ncorresponds to a proportion of observed data of 10-2, while the bottom corresponds to 10-1.", "description": "This figure shows a comparison of true, predicted (using joint AR model), and interpolated trajectories against the observed data for Kolmogorov dataset. The top part shows the case where 10% of the data was observed while the bottom part shows the case where 1% of the data was observed. The predicted trajectory using the joint AR model generally more closely matches the observed data than the interpolated trajectory.", "section": "G.3 Comparison to interpolation"}, {"figure_path": "nQl8EjyMzh/figures/figures_28_1.jpg", "caption": "Figure 12: Comparison between the true samples (top), AAO samples (middle), and AR samples (bottom) for Burgers'. The AAO samples are only able to capture the initial states correctly, while the AR-generated samples maintain very good correlation with the ground truth even at long rollouts (101 time steps).", "description": "This figure compares the performance of All-at-once (AAO) and Autoregressive (AR) sampling methods on the Burgers' dataset. The top panel shows the true values. The middle panel shows the AAO samples. The bottom panel shows the AR samples.  The AAO method only captures the initial states correctly, while the AR method maintains a good correlation with the ground truth throughout the entire 101 time steps of the trajectory.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_28_2.jpg", "caption": "Figure 7: RMSD for Burgers' for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure displays the results of an experiment comparing the performance of two different solvers (DPM++ and EI) and two time scheduling methods (quadratic and linear) for the Burgers' equation. The mean squared error (MSE) is calculated for varying numbers of corrector steps (0, 5, and 25). The results show that with few corrector steps, the choice of solver and scheduling method has little impact on the MSE. However, with 25 corrector steps, the quadratic time scheduling method shows a slight advantage in terms of lower RMSD.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_29_1.jpg", "caption": "Figure 7: RMSD for Burgers' for the two solvers (DPM++ and EI), and the two time schedules (quadratic and linear) used. The results are shown for 0 (left), 5 (middle), and 25 (right) corrector steps. When using no/only a few corrector steps, the RMSD is not highly impacted by the choice of solver and time schedule. However, at 25 corrector steps, the quadratic time schedule seems to lead to lower RMSD.", "description": "This figure compares the Root Mean Squared Deviation (RMSD) for the Burgers' equation using two different solvers (DPM++ and EI) and two different time schedules (quadratic and linear) for generating samples. The results are displayed for different numbers of corrector steps (0, 5, and 25).  The key finding is that when using few or no corrector steps, the RMSD is relatively insensitive to the solver or time schedule. However, with many corrector steps (25), the quadratic time schedule shows a slightly lower RMSD.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_29_2.jpg", "caption": "Figure 6: Examples from the Kolmogorov dataset. Training, validation, and test trajectories all have 64 time steps. For each example, we only show subset of the states, corresponding to t \u2208 {\u2206\u03c4, 8\u2206\u03c4, 16\u2206\u03c4, 24\u2206\u03c4, 32\u2206\u03c4, 40\u2206\u03c4, 48\u2206\u03c4, 56\u2206\u03c4, 64\u2206\u03c4}", "description": "This figure shows example trajectory snapshots from the Kolmogorov dataset. The training, validation, and test trajectories all have 64 time steps.  Only a subset of these time steps (t \u2208 {\u2206\u03c4, 8\u2206\u03c4, 16\u2206\u03c4, 24\u2206\u03c4, 32\u2206\u03c4, 40\u2206\u03c4, 48\u2206\u03c4, 56\u2206\u03c4, 64\u2206\u03c4}) are displayed for each example to illustrate the flow and evolution of the dataset.", "section": "D.3 2D Kolmogorov-Flow equation"}, {"figure_path": "nQl8EjyMzh/figures/figures_29_3.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the performance of three different diffusion models (Joint AR, Amortised, and Universal Amortised) on two different datasets (KS and Kolmogorov) for the task of forecasting.  The x-axis represents different combinations of P (number of generated states) and C (number of conditioned states), representing varying lengths of forecasting and history lengths used. The y-axis represents the high correlation time which indicates the forecasting ability of the model.  The longer the high correlation time the better the model is at accurately forecasting the future states.  Error bars are included to show the uncertainty in measurements. The results indicate that the universal amortised model generally performs better.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_30_1.jpg", "caption": "Figure 18: Forecasting performance of the joint model in the Kolmogorov dataset for \u03b3 \u2208 {0.03, 0.05, 0.1, 0.2, 0.3} for varying window sizes and P | C conditioning scenarios. The top row shows the RMSD, while the bottom one shows the high correlation time.", "description": "This figure shows the forecasting performance of the joint model on the Kolmogorov dataset. It explores the impact of different values of the guidance strength parameter (\u03b3) and various conditioning scenarios (P|C) on both the root mean squared deviation (RMSD) and high correlation time.  The top row displays the RMSD for different P|C settings and gamma values, while the bottom row shows the corresponding high correlation times. The results help illustrate how different parameter choices affect the model's ability to forecast accurately and for how long.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_30_2.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure shows the root mean square deviation (RMSD) and computational cost for different data assimilation scenarios.  The top row displays the RMSD error for the Kuramoto-Sivashinsky (KS) and Kolmogorov flow equations, comparing the performance of the models as the proportion of observed data varies from very sparse to fully observed. The bottom row illustrates the computational cost for each scenario, highlighting that the autoregressive (AR) approach's cost is dependent on the specific conditioning parameters (P|C), unlike the all-at-once (AAO) approach.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_30_3.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the forecasting performance of three different diffusion models (joint, amortised, and universal amortised) across various conditioning scenarios. The x-axis represents different combinations of generated states (P) and conditioned states (C), while the y-axis displays the high correlation time, a metric evaluating the accuracy and consistency of long-term predictions. Error bars represent the mean \u00b1 3 standard errors calculated from test trajectories.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_31_1.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the forecasting performance of three different diffusion models (Joint AR, Amortised, and Universal Amortised) on two datasets (KS and Kolmogorov).  The x-axis shows different combinations of  P (number of states generated) and C (number of states conditioned on) during sampling, which represents the model's ability to extrapolate from a history of observations. The y-axis shows the high correlation time, which measures the accuracy and length of the forecast. The results show that the Universal Amortised model achieves the best performance in most scenarios, indicating superior ability to handle forecasting under various history lengths.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_31_2.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P|C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure displays the root mean square deviation (RMSD) and computation cost for different data sparsity levels in offline data assimilation for the Kuramoto-Sivashinsky (KS) and Kolmogorov flow equations.  The top panels show RMSD, demonstrating how the error varies with the proportion of observed data. The bottom panels illustrate the computational cost.  Autoregressive (AR) methods show better performance in sparse observation settings but increase computation time with the amount of data.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_32_1.jpg", "caption": "Figure 23: MSE along the trajectory length for KS (left) and Kolmogorov (right) for 1) the joint AR model (blue), 2) the universal amortised model (orange), and the two forecasting benchmarks considered\u20143) persistence (black) and 4) climatology (grey). The error bars indicate \u00b1 3 standard errors. Our models outperform climatology for about two thirds of the trajectory length.", "description": "The figure compares the forecasting performance of the joint AR and universal amortised models against two common baselines: persistence and climatology. The mean squared error (MSE) is plotted against trajectory length for both the Kuramoto-Sivashinsky (KS) and Kolmogorov datasets. Error bars represent \u00b1 3 standard errors. The results show that both models significantly outperform climatology for a substantial portion of the trajectory length, indicating their ability to capture the underlying dynamics better than simply predicting the average value or the previous value.", "section": "Additional experimental results on forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_32_2.jpg", "caption": "Figure 24: Example true trajectories, and model predictions for the joint 1 | 8 (middle) and universal amortised 8 | 1 (bottom) model on the KS dataset. The top left/right example corresponds to one of the trajectories with the highest/lowest RMSD.", "description": "This figure compares the performance of the joint and universal amortised models on the Kuramoto-Sivashinsky (KS) dataset for forecasting.  The top row shows the ground truth trajectories. The middle row shows the predictions from the joint model, which uses 1 state for prediction and 8 states for conditioning. The bottom row shows the predictions from the universal amortised model, which uses 8 states for prediction and 1 state for conditioning.  The right-hand column shows the error between the predictions and ground truth for each model. The top-left example corresponds to a trajectory where both models perform well, and the top-right example corresponds to a trajectory where the models' predictions are less accurate.", "section": "F.5 Example samples"}, {"figure_path": "nQl8EjyMzh/figures/figures_33_1.jpg", "caption": "Figure 25: Example vorticity fields at different time steps and for four different initial states. Each plot consists of three different rows corresponding to the true trajectories (top), to the trajectories predicted by the joint 1 | 4 model (middle), and to those predicted by the universal amortised 1 | 4 model (bottom).", "description": "This figure compares the vorticity fields generated by the joint and universal amortised models with the ground truth for the Kolmogorov dataset.  It shows results for four different initial conditions and at eight time points (t = \u0394\u03c4, t = 9\u0394\u03c4, t = 17\u0394\u03c4, t = 25\u0394\u03c4, t = 33\u0394\u03c4, t = 41\u0394\u03c4, t = 49\u0394\u03c4, t = 57\u0394\u03c4).  Each row displays the results for one model (ground truth, joint, amortised), making it easy to visually assess the differences between models in generating realistic fluid flow patterns at various times.", "section": "F.5 Example samples"}, {"figure_path": "nQl8EjyMzh/figures/figures_35_1.jpg", "caption": "Figure 26: RMSD on the KS dataset for the joint model queried AAO with 0 (AAO (0) - left) and 1 (AAO (1) - right) corrections. We show results for a window of size 9. Confidence intervals indicate \u00b1 3 standard errors.", "description": "This figure shows the results of the offline data assimilation experiment using the joint model with a window size of 9 on the Kuramoto-Sivashinsky (KS) dataset.  It compares the performance of the all-at-once (AAO) sampling method with 0 and 1 corrector steps, across various levels of sparsity (indicated on the x-axis as the \"proportion observed\"). Different lines represent various values of \u03b3, a hyperparameter controlling the guidance strength. The error bars represent \u00b1 3 standard errors, indicating the uncertainty in the results.", "section": "G.1 Influence of the guidance strength for the joint model"}, {"figure_path": "nQl8EjyMzh/figures/figures_35_2.jpg", "caption": "Figure 26: RMSD on the KS dataset for the joint model queried AAO with 0 (AAO (0) - left) and 1 (AAO (1) - right) corrections. We show results for a window of size 9. Confidence intervals indicate \u00b1 3 standard errors.", "description": "The figure shows the results of the offline data assimilation experiments using the joint model and AAO sampling with 0 and 1 corrections. The x-axis represents the proportion of observed data, and the y-axis represents the RMSD. Different lines represent different values of the guidance strength (gamma).  The results indicate that decreasing gamma (increasing guidance strength) too much can lead to decreased performance and larger standard errors.", "section": "G.1 Influence of the guidance strength for the joint model"}, {"figure_path": "nQl8EjyMzh/figures/figures_35_3.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure compares the performance of different diffusion models on the offline data assimilation task. The top row of plots shows the root mean squared deviation (RMSD) for various sparsity levels (the proportion of observed data points), while the bottom row shows the computation time required for generating samples.  The results demonstrate that the autoregressive (AR) approach is generally more efficient than the all-at-once (AAO) approach, especially for scenarios with sparse data. The performance difference between AR and AAO is particularly pronounced in cases with limited observations, highlighting the advantages of AR for data assimilation tasks.", "section": "Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_37_1.jpg", "caption": "Figure 22: RMSD for universal amortised model (left) and amortised model (right) in the KS dataset with varying P and C. Universal amortised model is more stable as well as outperforms the amortised model across all combinations of P and C.", "description": "This figure compares the performance of two different models for solving partial differential equations. The first model is a universal amortized model, which is a type of neural network that can be trained on many different data sets and then used to make predictions on new data sets. The second model is an amortized model, which is a type of neural network that is trained on a specific data set and then used to make predictions on new data sets of the same type. The figure shows that the universal amortized model is more stable and outperforms the amortized model across all combinations of parameters.", "section": "F.3 Forecasting performance of different conditioning scenarios P|C"}, {"figure_path": "nQl8EjyMzh/figures/figures_37_2.jpg", "caption": "Figure 29: Left: RMSD for the KS dataset on offline DA for the universal amortised model with all conditioning done via architecture. The model is compared against an identical universal amortised model that, in contrast, uses reconstruction guidance for conditioning on sparse observations. Right: The input that is used for model conditioning depending on the AR step (the longer the trajectory, the more AR steps are performed). The red line divides the previously generated C states used for conditioning and the observations of the true trajectory within window P. The observations of the true trajectory are not fully observed by the model, but are illustrated without masks for more clarity. The vertical axis stands for the state within the window size used in the score network (9 in this case), while the horizontal one illustrates space discretisation of the PDE.", "description": "This figure compares the performance of two universal amortised models on the offline data assimilation task for the KS dataset.  The left panel shows the root mean squared deviation (RMSD) for each model across various levels of observed data. One model uses only architectural conditioning, while the other uses reconstruction guidance to condition on sparse observations.  The right panel visualizes the input data used by the models during each autoregressive (AR) step; this highlights how the model input changes as the sampling process progresses, revealing the difference in information available between models.", "section": "G.1.1 Conditioning for DA in the universal amortised model"}, {"figure_path": "nQl8EjyMzh/figures/figures_38_1.jpg", "caption": "Figure 30: RMSD for the KS dataset on the offline DA task for two models, one with a window of size 5 (dashed lines), and one with a window size of 9 (solid lines). The left plot shows the results for AR sampling, while the right plot shows the results for AAO sampling with 0 and 1 corrections. The error bars indicate \u00b1 3 standard errors. Note the logarithmic y scale.", "description": "This figure compares the performance of two models with different window sizes (5 and 9) on the offline data assimilation task for the Kuramoto-Sivashinsky (KS) equation.  The left panel shows results using autoregressive (AR) sampling, and the right panel displays results obtained using all-at-once (AAO) sampling with 0 and 1 correction.  The x-axis represents the proportion of observed data, while the y-axis (RMSD) shows the root mean square deviation between the model prediction and the ground truth, illustrating the impact of window size and sampling method on data assimilation accuracy.  Error bars show \u00b1 3 standard errors.", "section": "G.2 Performance for varying window sizes"}, {"figure_path": "nQl8EjyMzh/figures/figures_38_2.jpg", "caption": "Figure 31: RMSD for the KS dataset on the offline DA task for two models, one with a window of size 5 queried autoregressively (dashed blue), and one with a window size of 9 and sampled AAO (solid purple). We show results for 0, 1, and 2 corrector steps, indicated with the c in AAO (c). The error bars indicate \u00b1 3 standard errors. The right plot shows the same results as the left one, but on a logarithmic y scale.", "description": "This figure compares the performance of autoregressive (AR) sampling with all-at-once (AAO) sampling for offline data assimilation on the Kuramoto-Sivashinsky (KS) dataset.  Two models are used: one with a window size of 5 and one with a window size of 9. The AAO model uses 0, 1, and 2 corrector steps.  The results show that AR sampling generally outperforms AAO sampling, especially at lower proportions of observed data. The right-hand plot presents the data on a logarithmic scale to better visualize the differences between the methods across different sparsity levels.", "section": "G.2.1 Comparison between AR (k) and AAO (2k)"}, {"figure_path": "nQl8EjyMzh/figures/figures_39_1.jpg", "caption": "Figure 32: RMSD for the KS dataset on the offline DA task for two models, one with a window of size 5 (left), and one with a window size of 9 (right) for varying P | C scenarios (indicated in the legend). Confidence intervals indicate \u00b1 3 standard errors. Note the logarithmic y scale.", "description": "This figure compares the root mean squared deviation (RMSD) for different conditioning scenarios (P|C) in offline data assimilation using two different diffusion models. The x-axis shows the proportion of observed data, ranging from very sparse to nearly full observation. The y-axis represents the RMSD, measured on a logarithmic scale. The left panel corresponds to a model with a window of size 5, while the right panel represents a model with a window of size 9. Each line represents a different P|C conditioning scenario (where P is the number of states predicted per iteration and C is the number of conditioning states). The figure demonstrates the impact of the conditioning scenarios and the window size on the accuracy of the models.", "section": "G.2.2 Performance for varying conditioning scenarios P | C"}, {"figure_path": "nQl8EjyMzh/figures/figures_40_1.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure compares the Root Mean Squared Deviation (RMSD) and computational cost of different models for offline data assimilation (DA) tasks on the Kuramoto-Sivashinsky (KS) and Kolmogorov datasets.  The top part of the figure shows the RMSD for various levels of data sparsity. The bottom part shows the computational cost (in minutes) associated with each model and sparsity level.  The results demonstrate that autoregressive (AR) sampling achieves better performance, especially in low-data regimes, but at a higher computational cost compared to the all-at-once (AAO) approach which is quicker but less accurate.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_40_2.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the forecasting performance of three different diffusion models (Joint AR, Amortised, and Universal Amortised) on two datasets (KS and Kolmogorov).  The x-axis represents different conditioning scenarios, specified by the parameters P (number of generated states) and C (number of conditioned states). The y-axis shows the high correlation time, a measure of forecasting accuracy. Error bars represent the mean \u00b1 3 standard errors, indicating the statistical significance of the results.  The figure demonstrates the impact of different conditioning strategies on model performance across varying data complexities.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_41_1.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure compares the Root Mean Squared Deviation (RMSD) and computational cost of different models on the offline data assimilation (DA) task for the Kuramoto-Sivashinsky (KS) and Kolmogorov flow equations.  The top row shows the RMSD for various sparsity levels (i.e., proportions of observed data). The bottom row shows the computational cost for each sparsity level and for different sampling methods (AAO and AR).  The key observation is that AR generally outperforms AAO, especially in sparse data regimes, but that its computational cost is higher, with the difference in cost also varying with the number of correction steps used.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_41_2.jpg", "caption": "Figure 36: Qualitative comparison between the true, predicted (with the joint AR model), and interpolated trajectories, as well as the observed values for the KS dataset. The left plot corresponds to a proportion of observed data of 10\u207b\u00b2, while the right corresponds to 10\u207b\u00b9. ", "description": "This figure compares the true trajectories of the Kuramoto-Sivashinsky (KS) equation with the predictions made by the joint autoregressive (AR) model and the results obtained using a simple interpolation method.  It showcases the performance of the model under different levels of data sparsity (10% and 1%). The top row displays the original true trajectories and the corresponding observed, sparsely sampled data. The bottom row presents the model's predictions alongside the results of the interpolation technique.  This visualization is intended to highlight the model's ability to capture the underlying dynamics even when a substantial portion of the data is missing, thereby contrasting its performance against a simpler interpolation approach.", "section": "G.3 Comparison to interpolation"}, {"figure_path": "nQl8EjyMzh/figures/figures_42_1.jpg", "caption": "Figure 36: Qualitative comparison between the true, predicted (with the joint AR model), and interpolated trajectories, as well as the observed values for the KS dataset. The left plot corresponds to a proportion of observed data of 10<sup>-2</sup>, while the right corresponds to 10<sup>-1</sup>.", "description": "This figure compares the true, predicted (using the joint AR model), and interpolated trajectories of the Kuramoto-Sivashinsky (KS) equation, alongside the observed values, for two different proportions of observed data: 10\u207b\u00b2 (left) and 10\u207b\u00b9 (right).  The comparison visually demonstrates the model's ability to capture the underlying dynamics of the KS equation, especially when compared to simple interpolation, which struggles to accurately reconstruct the trajectory, particularly in sparser data conditions.", "section": "G.3 Comparison to interpolation"}, {"figure_path": "nQl8EjyMzh/figures/figures_43_1.jpg", "caption": "Figure 38: Setup for the online DA task for the KS dataset for a proportion of observed data of 0.1. Every 20 time steps, we get access to sparse observations from blocks of 20 states. At the first DA step we predict the first 400 states based on the sparse observations from the first 20 states. At the next DA step, we use the previously-generated forecast, as well as the new sparse observations coming from the next block (time step 20-40) to predict the next trajectory of length 400 (from time step 20 to 420). This repeats until the end of the sequence (640 time steps).", "description": "This figure illustrates the setup for the online data assimilation task using the Kuramoto-Sivashinsky (KS) dataset.  The task involves forecasting future states while incorporating sparse observations that arrive every 20 time steps.  At each step, the model uses a block of 20 sparse observations and its previous forecast to predict the next 400 states.  This process continues until the entire trajectory of length 640 is predicted, demonstrating how the model handles both forecasting and data assimilation simultaneously.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_43_2.jpg", "caption": "Figure 39: RMSD for the joint model on the KS (left) and Kolmogorov (right) datasets for varying  P | C scenarios. For KS we use a window 9 model, whereas for Kolmogorov we use a window 5 model.", "description": "This figure compares the performance of the joint model on the Kuramoto-Sivashinsky (KS) and Kolmogorov datasets in the online data assimilation task for varying conditioning scenarios.  The x-axis represents different combinations of P (number of states generated at each iteration) and C (number of conditioned states). For KS, a window size of 9 is used; for Kolmogorov, the window size is 5.  The RMSD (root mean squared error) is shown for each combination of P and C, indicating the model's forecasting accuracy under different levels of data sparsity.", "section": "5.3 Online DA: combining forecasting and data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_43_3.jpg", "caption": "Figure 3: RMSD (mean \u00b1 3 standard errors) for KS (left) and Kolmogorov (right) on the offline DA setting for varying sparsity levels (top), and the computational cost associated with each setting (bottom). The latter is the same for all sparsity settings for AAO, but differs for AR since it depends on the P | C setting that was used. The c in AAO (c) refers to the number of corrector steps used.", "description": "This figure compares the performance of different diffusion models on the offline data assimilation task.  The top row shows the root mean squared deviation (RMSD) of the model predictions from the ground truth, for varying levels of data sparsity, indicating the amount of observed data. The models are Joint AR (autoregressive), Joint AAO (all-at-once), and Universal Amortised. The bottom row shows the computational cost of each approach. AAO has a consistent computational cost for all sparsity levels, whereas AR's cost varies with the choice of the hyperparameter P|C.  The results demonstrate that AR generally outperforms AAO for sparse data, but their performance is similar for dense data. The figure also highlights the impact of the number of corrector steps (c) in AAO on both accuracy and computational cost.", "section": "5.2 Offline data assimilation"}, {"figure_path": "nQl8EjyMzh/figures/figures_44_1.jpg", "caption": "Figure 1: High correlation time (\u2191) on the KS (left) and Kolmogorov (right) datasets for different PC conditioning scenarios of the joint, amortised and universal amortised models, where P indicates the number of generated states and C the number of states conditioned upon. We show mean \u00b1 3 standard errors, as computed on the test trajectories.", "description": "This figure compares the performance of three different diffusion models (joint, amortised, and universal amortised) on forecasting tasks for two different PDEs (Kuramoto-Sivashinsky and Kolmogorov).  The performance is measured by the \"high correlation time\", which reflects how long the model's predictions accurately match the true trajectory.  The x-axis shows different conditioning scenarios, where 'P' is the number of predicted states and 'C' is the number of conditioned states (i.e., states used as input to the model). The results show that the universal amortised model generally outperforms the other two models, especially for longer predictive horizons.", "section": "5.1 Forecasting"}, {"figure_path": "nQl8EjyMzh/figures/figures_45_1.jpg", "caption": "Figure 41: Analysis of the spectra of two KS trajectories for different methods (Joint AR, universal amortised, PDE-Refiner, MSE-trained U-Net, MSE-trained FNO). Each row corresponds to a different trajectory. The first column shows the spectra of states closer to the initial state, while the second corresponds to states further away.", "description": "This figure compares the frequency spectrums of KS trajectories generated by different methods: Joint AR, universal amortised, PDE-Refiner, MSE-trained U-Net, and MSE-trained FNO.  Each row shows the spectrum for a different trajectory, with the left column displaying the spectrum of states closer to the initial state, and the right column showing states further from the initial state.  The analysis aims to show how well each method captures the high-frequency components of the trajectories, which is important for long-term forecasting accuracy.", "section": "Frequency Analysis"}, {"figure_path": "nQl8EjyMzh/figures/figures_45_2.jpg", "caption": "Figure 43: Example of a long trajectory (2000\u2206\u03c4 steps, corresponding to 400s) generated by the joint AR (middle) and universal amortised (bottom) models. Note how, even if we are generating longer trajectories than what the models have been trained on, the states remain visually plausible.", "description": "This figure shows a comparison of long-term predictions for the Kuramoto-Sivashinsky equation using three different approaches: the ground truth, the joint AR model and the universal amortized model. The results demonstrate that both the joint AR and universal amortized models can generate reasonably realistic trajectories even for time periods much longer than those seen in training.", "section": "J Stability of long rollouts"}, {"figure_path": "nQl8EjyMzh/figures/figures_46_1.jpg", "caption": "Figure 44: Frequency spectra of a state close to the initial state (top left), in the middle of the trajectory (top right), and towards the end of the trajectory (bottom). In each plot, we show the ground truth spectrum (blue), as well as the spectra of the trajectories generated by the joint AR (blue) and universal amortised models (orange).", "description": "This figure compares the frequency spectra of different models' predictions against the ground truth for a long trajectory. The top row shows results for states close to the beginning, the middle row for states in the middle, and the bottom row for states close to the end of the trajectory.  The plot helps visualize how well different models (Joint AR and Universal Amortised) capture the frequency characteristics of the true data at different points in time along the trajectory.", "section": "J Stability of long rollouts"}]