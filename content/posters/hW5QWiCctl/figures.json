[{"figure_path": "hW5QWiCctl/figures/figures_1_1.jpg", "caption": "Figure 1: Illustrating the impact of topological feature utilization on segmentation accuracy. (a) An input neuron image. Column (b) Ground truth with segmented membranes (white) and its centerline (blue lines); the constructed graph (nodes in red, edges in green). Column (c) and (d) Predictions of two methods [26, 37] without explicit topological learning, highlighting broken branches (false negatives in yellow), redundant branches (false positives in green), and topological errors (in red). Column (e) Our GraphMorph guarantees topological accuracy by learning explicit branch-level features. Details of skeletonization and graph construction are given in Appendix B. Evaluation metrics: Dice and clDice (higher is better), \u03b20 error and x error (lower is better).", "description": "This figure compares the performance of GraphMorph against two other methods on a neuron image segmentation task.  It highlights the importance of using topological features for accurate segmentation by showing how GraphMorph avoids common errors like broken or extra branches, resulting in improved accuracy metrics (Dice, clDice, \u03b20 error, x error).", "section": "1 Introduction"}, {"figure_path": "hW5QWiCctl/figures/figures_3_1.jpg", "caption": "Figure 2: Overview of the training process. Given an image, the segmentation network outputs a probability map of the centerline or segmentation and produces multi-scale feature maps. Then, R regions of interest (ROIs) are randomly sampled from the image, and their corresponding features are fed into the Graph Decoder, which predicts the nodes within these ROIs using a modified Deformable DETR and outputs the adjacency matrices utilizing the proposed link prediction module.", "description": "This figure illustrates the training process of GraphMorph.  It shows how a segmentation network processes an input image, generating a probability map and multi-scale feature maps.  Regions of interest (ROIs) are sampled, and their features are fed into a Graph Decoder (using a modified Deformable DETR). The Graph Decoder predicts nodes within the ROIs and their adjacency matrices using a link prediction module.  The training process involves pixel-wise, bipartite matching, and weighted-BCE losses.", "section": "3 Method"}, {"figure_path": "hW5QWiCctl/figures/figures_6_1.jpg", "caption": "Figure 3: Inference process of centerline extraction. First, the segmentation network generates a centerline probability map Pm along with multi-scale image features. Subsequently, the Graph Decoder utilizes the image features to predict graphs G via sliding window inference. Finally, the Morph Module employs Pm to find the optimal path between each pair of connected nodes in G, resulting in a final centerline mask. This approach achieves higher topological accuracy compared to direct thresholding of Pm.", "description": "This figure illustrates the inference process of centerline extraction in the GraphMorph method.  It starts with a segmentation network producing a centerline probability map and multi-scale features. These features are fed into a Graph Decoder, which uses a sliding window approach to predict graphs representing the tubular structures in the image. Finally, the predicted graphs and probability map are combined in the Morph Module to generate a final, topologically accurate centerline mask. The final result is contrasted with a simpler thresholding approach to highlight the improved topological accuracy of GraphMorph.", "section": "3.4 Morph Module and Inference"}, {"figure_path": "hW5QWiCctl/figures/figures_9_1.jpg", "caption": "Figure 4: Visual comparison for our GraphMorph with other methods (zoom for details). Areas indicated by yellow arrows show false negatives (FNs), areas pointed by green arrows demonstrate false positives (FPs), and regions highlighted by red arrows are topological errors (TEs) identifiable in other methods but are accurately resolved by our approach.", "description": "This figure provides a visual comparison of GraphMorph's performance against other methods on the segmentation and centerline extraction tasks.  It highlights specific examples where GraphMorph successfully addresses false negatives (missing parts of the structure), false positives (incorrectly identified parts), and topological errors (incorrect connections or branchings). The yellow, green, and red arrows point to the specific errors that are corrected by the GraphMorph method.", "section": "4.4 Qualitative Results"}, {"figure_path": "hW5QWiCctl/figures/figures_14_1.jpg", "caption": "Figure 5: (a) Stages of graph construction from the binary mask of a road network. The first stage demonstrates skeletonization process to a centerline mask. In the second image, we highlight the endpoints in orange and junctions in purple. Adjacent junctions are merged and considered as a single junction. Subsequent stages illustrate resolving Loops and reducing Multiple edges. (b) Example of calculating N.", "description": "This figure shows the steps involved in constructing a graph from a binary mask of a road network.  It starts with skeletonization, then identifies endpoints and junctions, merges nearby junctions, and finally resolves loops and multiple edges to create a simplified graph suitable for efficient processing.  The subfigure (b) demonstrates how the number of neighbouring centerline points (N) is calculated for each point.", "section": "B Graph Construction"}, {"figure_path": "hW5QWiCctl/figures/figures_17_1.jpg", "caption": "Figure 1: Illustrating the impact of topological feature utilization on segmentation accuracy. (a) An input neuron image. Column (b) Ground truth with segmented membranes (white) and its centerline (blue lines); the constructed graph (nodes in red, edges in green). Column (c) and (d) Predictions of two methods [26, 37] without explicit topological learning, highlighting broken branches (false negatives in yellow), redundant branches (false positives in green), and topological errors (in red). Column (e) Our GraphMorph guarantees topological accuracy by learning explicit branch-level features. Details of skeletonization and graph construction are given in Appendix B. Evaluation metrics: Dice and clDice (higher is better), \u03b20 error and x error (lower is better).", "description": "This figure demonstrates the importance of considering topology in tubular structure segmentation. It compares the results of GraphMorph with two other methods that don't explicitly model topology. The figure shows that GraphMorph significantly improves segmentation accuracy by learning branch-level features and reducing topological errors, such as broken or redundant branches.", "section": "1 Introduction"}, {"figure_path": "hW5QWiCctl/figures/figures_18_1.jpg", "caption": "Figure 6: Visualization of intermediate results in the centerline extraction task. The results in the fourth column are obtained by thresholding  at 0.5. Comparisons across the first four rows illustrate that GraphMorph achieves improved results through morphing predicted graphs. The last two rows demonstrate how the settings of  in the Morph Module may lead to concessions to , resulting in false negatives.", "description": "This figure visualizes the intermediate steps in the centerline extraction process using GraphMorph. It compares the results of GraphMorph with a simpler thresholding method. The top four rows show that GraphMorph improves results by morphing predicted graphs; however, the bottom two rows illustrate that inaccurate probability maps can cause GraphMorph to miss some true positives.", "section": "3.4 Morph Module and Inference"}, {"figure_path": "hW5QWiCctl/figures/figures_19_1.jpg", "caption": "Figure 7: Visualization of the effect of the post-processing in the segmentation task across four datasets. Columns represent, from left to right: original images, ground truth segmentation labels, thresholded output from the segmentation network (w.o. Post), and results with post-processing. Green arrows highlight areas where false positives have been successfully suppressed.", "description": "This figure shows a comparison of segmentation results with and without the post-processing step applied in GraphMorph.  Four datasets are used for the comparison: DRIVE, STARE, ISBI12, and MassRoad. For each dataset, the figure shows the original image, the ground truth segmentation, the results obtained without the post-processing step (using a simple threshold), and the final results produced by GraphMorph, which incorporates a post-processing step to suppress false positives. Green arrows highlight areas where the post-processing successfully removes false positive predictions.", "section": "4.4 Qualitative Results"}, {"figure_path": "hW5QWiCctl/figures/figures_19_2.jpg", "caption": "Figure 8: Visual comparison for our GraphMorph with baseline on the segmentation task. Areas indicated by yellow arrows show false negatives (FNs) and areas pointed by green arrows demonstrate false positives (FPs) appear in baseline but are accurately predicted by our approach.", "description": "This figure compares the segmentation results of GraphMorph and a baseline method (SoftDice) on a sample image.  Yellow arrows highlight areas where the baseline method missed parts of the tubular structure (false negatives), while green arrows point to regions where the baseline incorrectly identified non-tubular regions as part of the structure (false positives).  The image shows that GraphMorph more accurately identifies the tubular structure, reducing both false negatives and false positives.", "section": "4.4 Qualitative Results"}]