[{"type": "text", "text": "Neural Collapse versus Low-rank Bias: Is Deep Neural Collapse Really Optimal? ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Peter S\u00faken\u00edk Christoph Lampert\u2217 Institute of Science and Technology Austria Institute of Science and Technology Austria 3400 Klosterneuburg, Austria 3400 Klosterneuburg, Austria peter.sukenik@ista.ac.at chl@ista.ac.at ", "page_idx": 0}, {"type": "text", "text": "Marco Mondelli\u2217 Institute of Science and Technology Austria 3400 Klosterneuburg, Austria marco.mondelli@ista.ac.at ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Deep neural networks (DNNs) exhibit a surprising structure in their final layer known as neural collapse (NC), and a growing body of works has currently investigated the propagation of neural collapse to earlier layers of DNNs \u2013 a phenomenon called deep neural collapse (DNC). However, existing theoretical results are restricted to special cases: linear models, only two layers or binary classification. In contrast, we focus on non-linear models of arbitrary depth in multi-class classification and reveal a surprising qualitative shift. As soon as we go beyond two layers or two classes, DNC stops being optimal for the deep unconstrained features model (DUFM) \u2013 the standard theoretical framework for the analysis of collapse. The main culprit is a low-rank bias of multi-layer regularization schemes: this bias leads to optimal solutions of even lower rank than the neural collapse. We support our theoretical findings with experiments on both DUFM and real data, which show the emergence of the low-rank structure in the solution found by gradient descent. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "What is the geometric structure of layers and learned representations in deep neural networks (DNNs)? To address this question, Papyan et al. [39] focused on the very last layer of DNNs at convergence and experimentally measured what is now widely known as Neural Collapse (NC). This phenomenon refers to four properties that simultaneously emerge during the terminal phase of training: feature vectors of training samples from the same class collapse to the common class-mean (NC1); the class means form a simplex equiangular tight frame or an orthogonal frame (NC2); the class means are aligned with the rows of the last layer\u2019s weight matrix (NC3); and, finally, the classifier in the last layer is a nearest class center classifier (NC4). Since the influential paper [39], a line of research has aimed at explaining the emergence of NC theoretically, mostly focusing on the unconstrained features model (UFM) [36]. In this model, motivated by the network\u2019s perfect expressivity, one treats the last layer\u2019s feature vectors as a free variable and explicitly optimizes them together with the last layer\u2019s weight matrix, \u201cpeeling off\u201d the rest of the network [9, 23]. With UFM, the NC was demonstrated in a variety of settings, both as the global optimum and as the convergence point of gradient flow. ", "page_idx": 0}, {"type": "text", "text": "The emergence of the NC in the last layer led to a natural research question \u2013 does some form of collapse propagate beyond the last layer to earlier layers of DNNs? A number of empirical works [20, 17, 43, 40, 35] gave evidence that this is indeed the case, and we will refer to this phenomenon as Deep Neural Collapse (DNC). On the theoretical side, the optimality of the DNC was obtained (i) for the UFM with two layers connected by a non-linearity in [51], (ii) for the UFM with several linear layers in [7], and (iii) for the deep UFM (DUFM) with non-linear activations in the context of binary classification [48]. No existing work handles the general case in which there are multiple classes and the UFM is deep and non-linear. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "In this work, we close the gap and reveal a surprising behavior not occurring in the simpler settings above: for multiple classes and layers, the DNC as formulated in previous works is not an optimal solution of DUFM. In particular, the class means at the optimum do not form an orthogonal frame (nor an equiangular tight frame), thus violating the second property of DNC. ", "page_idx": 1}, {"type": "text", "text": "Let $L$ and $K$ denote the number of layers and classes, respectively. Then, if either $L\\geq3$ and $K\\geq10$ or $L\\geq4$ and $K\\ge6$ , we provide an explicit combinatorial construction of a class of solutions that outperforms DNC. Specifically, the loss achieved by our construction is a factor $K^{(L-3)/(2L+2)}$ lower than the loss of the DNC solution. Our result holds as long as all matrices are regularized. ", "page_idx": 1}, {"type": "text", "text": "We also identify the reason behind the sub-optimality of DNC: a low-rank bias. Intuitively, this bias arises from the representation cost of a DNN with $l_{2}$ regularization, which equals the Schatten- $\\boldsymbol{p}$ quasi norm [37] in the deep linear case. The quasi norm is well approximated by the rank, and\u221a this intuition carries over to the non-linear case as well. In fact, the rank of our construction is $\\Theta({\\sqrt{K}})$ , while the rank of the DNC solution is $K$ . We note that after the application of the ReLU, the rank of the final layer is again equal to $K$ , in order to fti the training data. We also show that the first property of neural collapse (convergence to class means) continues to be strictly optimal even in this general setting and its deep counterpart is approximately optimal with smoothed ReLU activations. ", "page_idx": 1}, {"type": "text", "text": "We support our theoretical results with empirical findings in three regimes: (i) DUFM training, $(i i)$ training on standard datasets (MNIST [31], CIFAR-10 [28]) with DUFM-like regularization, and (iii) training on standard datasets with standard regularization. In all cases, gradient descent retrieves solutions with very low rank, which can exhibit symmetric structures in agreement with our combinatorial construction, see e.g. the lower-right plot of Figure 4. We also investigate the effect of three common hyperparameters \u2013 weight decay, learning rate and width \u2013 on the rank of the solution at convergence. On the one hand, high weight decay, high learning rate and small width lead to a strong low-rank bias. On the other hand, small (yet still non-zero!) weight decay, small learning rate or large width (and more complex datasets as well) lead to a higher-rank solution, even if that is not the global optimum, and this solution often coincides with DNC, which is in agreement with earlier experimental evidence. Altogether, our findings show that if a DNC solution is found, it is not because of its global optimality, but just because of an implicit bias of the optimization procedure. ", "page_idx": 1}, {"type": "text", "text": "The implications of our results go beyond deep neural collapse. In fact, our theory suggests that even the NC2 in the last layer is not optimal, and this is corroborated by our experiments, where the singular value structure of the last layer\u2019s class-mean matrices is imbalanced, ruling out orthogonality. This means that standard single-layer UFM, as well as its deep-linear or two-layer extensions, are not sufficient to describe the full picture, as they display a qualitatively different phenomenology. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Neural Collapse. Several papers (a non-exhaustive list includes [12, 15, 5, 32, 33, 58]) use neural collapse as a practical tool in applications, among which OOD detection and transfer learning are the most prevalent. On the theoretical side, the emergence of NC has been investigated, with the majority of works considering some form of UFM [36, 9]. [55, 34] show global optimality of NC under the cross-entropy (CE) loss, and [59] under the MSE loss. Similar results are obtained by [9, 49, 18, 8] for the class-imbalanced setting. [61, 23, 59] refine the analysis by showing that the loss landscape of the UFM model is benign \u2013 all stationary points are either local minima or strict saddle points which can be escaped by conventional optimizers. A more loss-agnostic approach connecting CE and MSE loss is considered in [60]. NC has also been analyzed for a large number of classes [25], in an NTK regime [45], or in graph neural networks [27]. We refer the reader to [26] for a survey. ", "page_idx": 1}, {"type": "text", "text": "The emergence of NC has also been studied through the lens of the gradient flow dynamics. [36] considers MSE loss and small initialization, and [16] a renormalized gradient flow of the last layer\u2019s features after fixing the last layer\u2019s weights to be conditionally optimal. [23] studies the CE loss dynamics and shows convergence in direction of the gradient flow to a KKT point of the max-margin problem of the UFM, extending a similar analysis for the last layer\u2019s weights in [47]. The convergence speed under both losses is described in [53]. Going beyond UFM, [57, 41, 42, 29] study the emergence of NC in homogeneous networks under gradient flow; [38] provides sufficient conditions for neural collapse; and [52] perturbs the unconstrained features to account for the limitations of the model. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "More recently, [20] mentions a possible propagation of the NC to earlier layers of DNNs, giving preliminary measurements. These are then significantly extended in [17, 43, 11, 40], which measure the emergence of some form of DNC in DNNs. On the theoretical front, an extension to a two-layer non-linear model is provided in [51], to a deep linear model in [7, 14] and to a deep non-linear model for binary classification in [48]. Alternatively to DUFM, [4] studies DNC in an end-to-end setting with a special layer-wise training procedure. ", "page_idx": 2}, {"type": "text", "text": "Low-rank bias. The low-rank bias is a well-known phenomenon, especially in the context of matrix/tensor factorization and deep linear networks (see e.g. [2, 6, 44, 24, 54]). For non-linear DNNs, [50] studies the gradient flow optimization of ReLU networks, giving lower and upper bounds on the average soft rank. [13] studies SGD training on deep ReLU networks, showing upper bounds on the rank of the weight matrices as a function of batch size, weight decay and learning rate. [30] proves several training invariances that may lead to low-rank, but the results require the norm of at least one weight matrix to diverge and the architecture to end with a couple of linear layers. [3] presents bounds on the singular values of non-linear layers in a rather generic setting, not necessarily at convergence. More closely related to our work is [37], which considers a deep linear network followed by a single non-linearity and then by a single layer. Their arguments to study the low-rank bias are similar to the intuitive explanation of Section 4. [19] shows that increasing the depth results in lower effective rank of the penultimate layer\u2019s Gram matrix both at initialization and at convergence. The true rank is also measured, but on rather shallow networks and it is far above the DNC rank. [1] shows a strong low-rank bias of sharpness-aware minimization, although only in layers where DNC does not yet occur and the rank is high. [10, 22] study special functional ranks (Jacobi and bottleneck) of DNNs, providing asymptotic results and empirical measurements. These results are refined in [21, 56], which show a bottleneck structure of the rank both experimentally and theoretically. The measurements of the singular values at convergence in [56] are in agreement with those of Section 6.3. We highlight that none of the results above allows to reason about DNC optimality, as they focus on infinite width/depth, effective or functional ranks, orthogonal settings, or are not quantitative enough. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We study the class balanced setting with $N\\,=\\,K n$ samples from $K$ classes, $n$ per class. Let $f(x)={\\bar{W}}_{L}\\sigma(W_{L-1}\\sigma(\\dots W_{1}{\\mathcal{B}}(x)\\dots))$ be a DNN with backbone $B(\\cdot)$ . The backbone represents the majority of the deep network before the last $L$ layers, e.g. the convolutional part of a ResNet20. Let $X\\in\\check{\\mathbb{R}}^{d\\times\\check{N}}$ be the training data, and $H_{1}={\\mathcal{B}}(X)\\stackrel{*}{\\in}\\mathbb{R}^{d_{1}\\times N},H_{2}=\\sigma(W_{1}H_{1})\\stackrel{*}{\\in}\\mathbb{R}^{d_{2}\\times N},\\dotsc,H_{L}=$ $\\sigma(W_{L-1}H_{L-1})\\in\\mathbb{R}^{d_{L}\\times N}$ its feature vector representations in the last $L$ layers, with ${\\tilde{H}}_{l}$ denoting their counterparts before applying the ReLU $\\sigma$ . We refer to $h_{c i}^{l}$ and $\\tilde{h}_{c i}^{l}$ as to the $i^{\\th}$ -th sample of $c$ -th class of $H_{l}$ and ${\\tilde{H}}_{l}$ , respectively. Let $\\begin{array}{r}{\\mu_{c}^{l}=\\frac{1}{n}\\sum_{i=1}^{n}h_{c i}^{l}}\\end{array}$ and $\\begin{array}{r}{\\tilde{\\mu}_{c}^{l}=\\frac{1}{n}\\sum_{i=1}^{n}\\tilde{h}_{c i}^{l}}\\end{array}$ be the class means at layer $l$ after and before applying $\\sigma$ , and $M_{l}$ , $\\tilde{M_{l}}$ the matrices of the respective class means stacked into columns. We organize the training samples so that the labels $Y\\in\\mathbb{R}^{\\mathbf{\\hat{\\boldsymbol{K}}}\\times\\mathbf{\\boldsymbol{N}}}$ equal $I_{K}\\otimes{\\bf1}_{n}^{T}$ , where $I_{K}$ is a $K\\times K$ identity matrix, $\\otimes$ is the Kronecker product and ${\\mathbf{1}}_{n}$ the all-one vector of size $n$ . ", "page_idx": 2}, {"type": "text", "text": "Deep neural collapse (DNC). As there are no biases in our network model, the second property of DNC requires the class mean matrices to be orthogonal (instead of forming an ETF) [43, 48]. ", "page_idx": 2}, {"type": "text", "text": "Definition 1. We say that layer l exhibits DNC 1, 2 or 3 if the corresponding conditions are satisfied   \n(the properties can be stated for both after and before the application of ReLU):   \nDNC1: The within-class variability of either $H_{l}$ or $\\tilde{H_{l}}$ is 0. Formally, $h_{c i}^{l}=h_{c j}^{l},\\tilde{h}_{c i}^{l}=\\tilde{h}_{c j}^{l}$ for all $i,j\\in[n]$ or, in matrix notation, $H_{l}=M_{l}\\otimes\\mathbf{1}_{n}^{T},\\tilde{H}_{l}=\\tilde{M}_{l}\\otimes\\mathbf{1}_{n}^{T}$ .   \nDNC2: The class-mean matrices $M_{l},\\tilde{M}_{l}$ are orthogonal, i.e., $M_{l}^{T}M_{l}\\propto I_{K},\\tilde{M}_{l}^{T}\\tilde{M}_{l}\\propto I_{K}.$ .   \nDNC3: The rows of the weight matrix $W_{l}$ are either $O$ or collinear with one of the columns of the class-means matrix $M_{l}$ . ", "page_idx": 2}, {"type": "text", "text": "Deep unconstrained features model. To define DUFM, we generalize the model in [48] to an arbitrary number of classes $K$ . ", "page_idx": 2}, {"type": "text", "text": "Definition 2. The $L$ -layer deep unconstrained features model (L-DUFM) denotes the following optimization problem: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{I_{1},W_{1},\\ldots,W_{L}}\\frac{1}{2N}\\left\\|W_{L}\\sigma(W_{L-1}\\sigma(\\ldots W_{2}\\sigma(W_{1}H_{1})\\ldots))-Y\\right\\|_{F}^{2}+\\sum_{l=1}^{L}\\frac{\\lambda_{W_{l}}}{2}\\left\\|W_{l}\\right\\|_{F}^{2}+\\frac{\\lambda_{H_{1}}}{2}\\left\\|H_{1}\\right\\|_{F}^{2},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "4 Low-rank solutions outperform deep neural collapse ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Intuitive explanation of the low-rank bias. Consider a simplified version of $L$ \u2212DUFM: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{H_{1},W_{1},\\ldots,W_{L}}\\frac{1}{2N}\\left\\|W_{L}\\sigma(W_{L-1}\\ldots W_{2}W_{1}H_{1})-Y\\right\\|_{F}^{2}+\\sum_{l=1}^{L}\\frac{\\lambda_{W_{l}}}{2}\\left\\|W_{l}\\right\\|_{F}^{2}+\\frac{\\lambda_{H_{1}}}{2}\\left\\|H_{1}\\right\\|_{F}^{2}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Compared to (1), (2) removes all non-linearities except in the last layer, making the remaining part of the network a deep linear model, a construction similar to the one in [37]. Now, we leverage the variational form of the Schatten- $p$ quasi-norm [46], which gives ", "page_idx": 3}, {"type": "equation", "text": "$$\nc\\left\\|\\tilde{H}_{L}\\right\\|_{S_{2/L}}^{2/L}=\\operatorname*{min}_{\\substack{H_{1},W_{1},\\ldots,W_{L-1}:H_{1}W_{1}\\ldots W_{L-1}=\\tilde{H}_{L}}}\\sum_{l=1}^{L-1}\\frac{\\lambda_{W_{l}}}{2}\\left\\|W_{l}\\right\\|_{F}^{2}+\\frac{\\lambda_{H_{1}}}{2}\\left\\|H_{1}\\right\\|_{F}^{2},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $c$ can be computed explicitly. Thus, after solving for $H_{1},W_{1},\\dots,W_{L-1}$ , the simplified $L$ -DUFM problem (2) can be reduced to ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\tilde{H}_{L}W_{L}}\\,\\frac{1}{2N}\\left\\|{W_{L}\\sigma(\\tilde{H}_{L})}-Y\\right\\|_{F}^{2}+\\frac{\\lambda_{W_{L}}}{2}\\left\\|{W_{L}}\\right\\|_{F}^{2}+\\frac{\\lambda_{\\tilde{H}_{L}}}{2}\\left\\|{\\tilde{H}_{L}}\\right\\|_{S_{2/L}}^{2/L}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For large values of $L$ , $\\left\\|\\tilde{H}_{L}\\right\\|_{S_{2/L}}^{2/L}$ is well approximated by the rank of $\\tilde{H}_{L}$ . Hence, the objective value is low when the output $W_{L}H_{L}$ fits $Y$ closely, while keeping $\\tilde{H}_{L}$ low-rank, which justifies the low-rank bias. Crucially, the presence of additional non-linearities in the $L$ -DUFM model (1) does not change this effect much, as long as one is able to define solutions for which most of the intermediate feature matrices ${\\tilde{H}}_{l}$ are non-negative (so that ReLU does not have an effect). ", "page_idx": 3}, {"type": "text", "text": "Low-rank solution outperforming DNC. We define the combinatorial solution that outperforms DNC, starting from the graph structure on which the construction is based. ", "page_idx": 3}, {"type": "text", "text": "Definition 3. A triangular graph $\\mathcal{T}_{n}$ of order $n$ is a line graph of a complete graph $\\kappa_{n}$ of order $n$ . ${\\mathcal{T}}_{n}$ has $\\binom{n}{2}$ vertices, each representing an edge of the complete graph, and there is an edge between $a$ pair of vertices if and only if the corresponding edges in the complete graph share a vertex. Moreover, let $T_{n}$ be the normalized incidence matrix of $\\kappa_{n}$ , i.e., $\\begin{array}{r}{(T_{n})_{i,j}\\doteq\\frac{1^{\\circ}}{\\sqrt{n-1}}}\\end{array}$ if vertex $i$ belongs to edge $j$ and 0 otherwise. Let $G_{n}$ denote the adjacency matrix of $\\mathcal{T}_{n}$ . ", "page_idx": 3}, {"type": "text", "text": "We recall that ${\\mathcal{T}}_{n}$ is a strongly regular graph with parameters $(n(n-1)/2,2(n-2),n-2,4)$ and spectrum $2(n-2)$ with multiplicity 1, $n\\,-\\,4$ with multiplicity $n-1$ and $-2$ with multiplicity $n(n-3)/2$ . Next, we construct an explicit solution $(H_{1},W_{1},\\dots,W_{L})$ based on the triangular graph. For ease of exposition, we focus on the case where the number of classes $K$ equals $\\binom{r}{2}$ for some $r\\geq4$ , deferring the general definition to Appendix A.1. ", "page_idx": 3}, {"type": "text", "text": "Definition 4. Let $K=\\binom{r}{2}$ for $r\\geq4.$ . Then, a strongly regular graph (SRG) solution of the $L$ -DUFM problem (1) is obtained by setting the matrices $(H_{1},W_{1},\\dots,W_{L})$ as follows: ", "page_idx": 3}, {"type": "text", "text": "\u2022 For all $l$ , the feature matrices $H_{l},{\\tilde{H}}_{l}$ are DNC1 collapsed, i.e., $H_{l}\\,=\\,M_{l}\\,\\otimes\\,{\\bf1}_{n}^{T},\\tilde{H}_{l}\\,=$ $\\tilde{M}_{l}\\otimes{\\bf1}_{n}^{T}$ .   \n\u2022 For $2\\leq l\\leq L-1$ , $M_{l}={\\tilde{M}}_{l},$ , each row of $\\tilde{M_{l}}$ is a non-negative multiple of a row of $T_{r}$ (as in Definition 3), and the sum of squared norms of the rows of $\\tilde{M_{l}}$ corresponding to a row of $T_{r}$ is the same for each row of $T_{r}$ . Since $\\tilde{M_{l}}$ is entry-wise non-negative, $M_{l}={\\tilde{M}}_{l}$ .   \n\u2022 For $l=1$ , $W_{1},M_{1}$ are any pair of matrices minimizing the objective conditionally on $M_{2}$ defined above. ", "page_idx": 3}, {"type": "image", "img_path": "0jld45XGgJ/tmp/b9f82a6e6f9ee269404911e07f5fd54bf143d8d78a5f44b1375d929ea1943b95.jpg", "img_caption": ["Figure 1: Strongly regular graph (SRG) solution with $L=4$ , $K=10$ and $r=5$ . Left: Class-mean matrix of the third layer $M_{3}$ . The non-zero entries of each row have the same value and their number is $r-1$ , which corresponds to the degree of the complete graph $\\kappa_{r}$ . Middle: Class-mean matrix of the fourth layer before ReLU $\\tilde{M}_{4}$ (middle left), and its Gram matrix $\\tilde{M}_{4}^{T}\\tilde{M}_{4}$ (middle right). The SRG construction has very low rank before ReLU: $\\mathrm{rank}(\\tilde{M}_{4})=r$ and $\\bar{\\mathrm{rank}}(\\sigma(\\tilde{M}_{4}))=K$ . Right: $\\tilde{M}_{4}^{T}\\tilde{M}_{4}$ for DNC. The DNC solution has rank $K$ in all layers before and after ReLU. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "\u2022 For $l\\geq2$ , $W_{l}$ minimizes the objective conditional to input and output to that layer. ", "page_idx": 4}, {"type": "text", "text": "\u2022 As for the last layer $L$ , let $A_{L}$ be a $K\\times r$ matrix where the set of rows equals the set of vectors with two $(-1)$ entries and $r-2\\left(+1\\right)$ entries. Then, $M_{L}=\\bar{\\sigma}(\\tilde{M}_{L}),$ , the rows of $\\tilde{M_{L}}$ are a non-negative multiple of $A_{L}T_{r}$ , and the sum of their squared norms corresponding to either row of $A_{L}T_{r}$ is equal.   \n\u2022 Finally, the Frobenius norms (i.e. scales) of $M_{1},W_{1},\\ldots,W_{L}$ are chosen so as to minimize (1) while satisfying the construction above. ", "page_idx": 4}, {"type": "text", "text": "In this construction, columns and rows of class-mean matrices are associated to edges and vertices of the complete graph $\\kappa_{r}$ . Each row (corresponding to a vertex) has non-zero entries at columns that correspond to edges containing the vertex. In the final layer, each row of $\\tilde{M}_{L}$ corresponds to a weighting of vertices in $\\kappa_{r}$ s.t. exactly two vertices get $-1$ weight and the rest $+1$ , and the value at a column is the sum of the values of the vertices of the edge. The class-mean matrices of the SRG solution are illustrated in Figure 1 for $L=4$ and $K=10$ (which gives $r=5$ ): we display $M_{3},\\tilde{M}_{4},\\tilde{M}_{4}^{T}\\tilde{M}_{4}$ and, for comparison, also $\\tilde{M}_{4}^{T}\\tilde{M}_{4}$ of a DNC solution. Very similar solutions to SRG are shown for $K=6$ and $K=15$ in Figures 7 and 8 of Appendix B.1. ", "page_idx": 4}, {"type": "text", "text": "Let us highlight the properties of the SRG solution, which are crucial to outperform DNC. First, the rank of the intermediate feature and weight matrices is very low, only of order $\\Theta(K^{1/2})$ , since by construction there are only $r=\\Theta(K^{1/2})$ linearly independent rows. This is contrasted with the DNC solution that has rank $K$ in all intermediate feature and weight matrices. The low rank of the SRG solution is due to the specific structure of the triangular graph, which has many eigenvalues equal to $-2$ that become 0 after adding twice a diagonal matrix. Second, the definition of $\\tilde{M}_{L}$ ensures that $M_{L}=\\sigma(\\tilde{M}_{L})$ has full rank $K$ . This allows the output $W_{L}M_{L}$ to also have full rank and, therefore, fit the identity matrix $I_{K}$ , thus reducing the first term in the loss (1). Finally, the highly symmetric nature of the SRG solution balances the feature and weight matrices so as to minimize large entries and, therefore, the Frobenius norms, thus reducing the other terms in the loss (1). ", "page_idx": 4}, {"type": "text", "text": "Main result. For any $L$ -DUFM problem (specified by $K,n$ and all the regularization parameters), let $\\mathcal{L}_{S R G},\\mathcal{L}_{D N C}$ be the losses incurred by the SRG and DNC solutions, see Definitions 4 and 1, respectively. At this point we are ready to state our key result. ", "page_idx": 4}, {"type": "text", "text": "Theorem 5. If $K\\,\\geq\\,6,L\\,\\geq\\,4$ or $K\\,\\geq\\,10,L\\,=\\,3$ and $d_{l}\\,\\geq\\,K$ for all $l$ , then $\\mathcal{L}_{S R G}\\,<\\,\\mathcal{L}_{D N C}$ . Moreover, consider any sequence of $L$ -DUFM problems for which $K\\rightarrow\\infty$ so that $0.499>{\\mathcal{L}}_{D N C}$ for each problem. In that case, ", "page_idx": 4}, {"type": "equation", "text": "$$\n{\\frac{{\\mathcal{L}}_{S R G}}{{\\mathcal{L}}_{D N C}}}={\\mathcal{O}}(K^{{\\frac{3-L}{2(L+1)}}}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In words, as long as the number of classes and layers is not too small, the SRG solution always outperforms the collapsed one and the gap grows with the number of classes $K$ . ", "page_idx": 4}, {"type": "text", "text": "The proof first computes the conditionally optimal values of $\\|\\boldsymbol{W_{l}}\\|_{F}^{2}$ for both the SRG and DNC solutions. The specific structure of these solutions enables to calculate pseudoinverses of the intermediate features, thus enabling the explicit computation of the weight norms. All these values depend only on the singular values of the feature matrices, which are explicitly given by their scale. As a result, both $\\mathcal{L}_{S R G}$ and $\\mathcal{L}_{D N C}$ are expressed via an optimization problem in a single scalar variable and, by comparing these problems, the statement follows. The details are deferred to Appendix A.1. ", "page_idx": 5}, {"type": "text", "text": "Although the argument requires $L=3,K\\geq10$ or $L\\ge4,K\\ge6$ , the experiments in Appendix B.1 show that the DNC solution is not optimal when $L\\ge4,K\\ge3$ or $L=3,K\\ge7$ . Furthermore, for $L=3$ and large $K$ , there is a large gap between $\\mathcal{L}_{S R G}$ and $\\mathcal{L}_{D N C}$ (even if (3) trivializes). For either $K=2$ or $L=2$ , the DNC is optimal, as shown in [51, 48]. ", "page_idx": 5}, {"type": "text", "text": "5 Within-class variability collapse is still optimal ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "While the DNC2 property conflicts with the low-rank bias, the same is not true for DNC1, as the within-class variability collapse supports a low rank. We show below that the last-layer NC1 property remains optimal for any $L$ -DUFM problem. A proof sketch follows, with the complete argument deferred to Appendix A.2. ", "page_idx": 5}, {"type": "text", "text": "Theorem 6. The optimal solutions of the $L$ -DUFM (1) exhibit DNC1 at layer $L$ , i.e., ", "page_idx": 5}, {"type": "equation", "text": "$$\nH_{L}^{*}=M_{L}^{*}\\otimes{\\bf1}_{n}^{T}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "holds for any optimal solution $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ of the $L$ -DUFM problem. ", "page_idx": 5}, {"type": "text", "text": "Proof sketch: Assume by contradiction that there exists an optimal solution of (1) with regularization parameters $\\left(\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ , denoted as $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ , which does not exhibit neural collapse at layer $L$ . Then, we can construct two different optimal solutions of the $L$ -DUFM problem with $n=1$ and regularization parameters $\\left(n\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ of the form $(H_{1}^{(1)},W_{1}^{*},\\dots,W_{L}^{*})$ and $(H_{1}^{(2)},W_{1}^{*},\\dots,W_{L}^{*})$ . These two solutions share the weight matrices, and $H_{1}$ (and, therefore, $H_{L}$ ) only differs in a single column (w.l.o.g., the first column). The optimality of these solutions can be proved using separability and symmetry of the loss function w.r.t. the columns of $H_{1}$ . ", "page_idx": 5}, {"type": "text", "text": "Denote the first (differing) columns of H(L1)and H(L2)as x and y, respectively. By exploiting the linearity of the loss function on a ray $\\{t h_{11}^{1},t\\geq0\\}$ for any $h_{11}^{1}$ , a direct computation gives that $x$ and $y$ are not aligned. Let $\\mathcal{L}$ be the loss in (1). By optimality of both solutions, we get ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(1)},W_{1}^{*},\\ldots,W_{L}^{*})}=0=\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(2)},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "An application of the chain rule gives ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\frac{\\partial\\tilde{H}_{L+1}}{\\partial W_{L}}+\\lambda_{W_{L}}W_{L}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}H_{L}^{T}+\\lambda_{W_{L}}W_{L},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\tilde{H}_{L+1}$ is the model output and ${\\mathcal{L}}_{F}$ the first term of $\\mathcal{L}$ , corresponding to the label fti. Plugging this back into (4) and using that $W_{L}^{*}$ is the same in both expressions, we get $A(H_{L}^{(1)})^{T}=B(H_{L}^{(\\bar{2}\\bar{)}})^{T}$ , where we have denoted by $A$ and $B$ the partial derivatives $\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}$ evaluated at $(H_{1}^{(1)},W_{1}^{*},\\dots,W_{L}^{*})$ and $(H_{1}^{(2)},W_{1}^{*},\\dots,W_{L}^{*})$ , respectively. As ${\\mathcal{L}}_{F}$ is separable with respect to the columns of $H_{l},{\\tilde{H}}_{l}$ for all $l$ , the matrices $A,B$ can only differ in their first columns (denoted by $a,b)$ , and they are identical otherwise. This implies that $\\bar{a\\d x}^{T}=b y^{T}$ . After some simple considerations and using that $x$ and $y$ are not aligned, we reach a contradiction, as we conclude that $x\\neq y$ is impossible. \u53e3 ", "page_idx": 5}, {"type": "text", "text": "The difficulty in extending Theorem 6 to a result on the unique optimality of DNC1 for all layers stems from the special role of $W_{L}$ as the loss is differentiable w.r.t. it. By considering a differentiable relaxation of ReLU, we show below an approximate result for a relaxed $L$ -DUFM model. ", "page_idx": 5}, {"type": "text", "text": "Definition 7. We denote by $R e L U_{\\epsilon}$ (or $\\sigma_{\\epsilon}$ ) a function satisfying the following conditions: (i) $\\sigma_{\\epsilon}(x)=$ $\\sigma(x)$ , for $x\\in(-\\infty,0]\\cup[\\epsilon,\\infty)$ , (ii) $0<\\sigma_{\\epsilon}(x)<\\sigma(x)$ for $x\\in(0,\\epsilon)$ , and (iii) $\\sigma_{\\epsilon}$ is continuously differentiable with derivative bounded by a universal constant and strictly positive on $(0,\\epsilon)$ . ", "page_idx": 5}, {"type": "text", "text": "Theorem 8. Denote by $L{-}D U F M_{\\epsilon}$ the equivalent of (1), with $\\sigma$ replaced by $\\sigma_{\\epsilon}$ . Let ${\\cal D}\\_=$ $\\operatorname*{max}\\{d_{2},d_{3},\\ldots,d_{L}\\}$ and $\\bar{\\lambda}=\\lambda_{H_{1}}\\lambda_{W_{1}}\\ldots\\bar{\\lambda}_{W_{L}}$ , with the regularization parameters upper bounded by $1/(L+1)$ . Then, for any globally optimal solution of the L-DUFM\u03f5 problem, the distance between any two feature vectors of the same class in any layer is at most ", "page_idx": 6}, {"type": "equation", "text": "$$\n{\\frac{6\\epsilon\\sqrt{D(L+1)}}{(L+1)^{L+1}{\\bar{\\lambda}}\\sqrt{n}}}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "In words, as the activation function approaches ReLU (i.e., $\\epsilon\\rightarrow0$ ), the within-class variability tends to 0. The proof starts with a similar strategy as the argument of Theorem 6 and then explicitly tracks the error due to replacing $\\sigma$ with $\\sigma_{\\epsilon}$ through the layers. The full argument is in Appendix A.2. ", "page_idx": 6}, {"type": "text", "text": "6 Numerical results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We employ the standard DNC1 metric $\\mathrm{tr}(\\Sigma_{W})/\\mathrm{tr}(\\Sigma_{B})$ , where $\\Sigma_{W},\\Sigma_{B}$ are the within and between class variabilities. This is widely used in the literature [52, 43, 4] and considered more stable than other metrics [43]. We measure the DNC2 metric as the condition number of $M_{l}$ for $l\\geq1$ [48]. We do not measure DNC3 here, as it is not well-defined for solutions that do not satisfy DNC2. For end-to-end DNN experiments, we employ a model from [48] where an MLP with a few layers is attached to a ResNet20 backbone. The output of the backbone is then treated as unconstrained features, and DNC metrics are measured for the MLP layers. ", "page_idx": 6}, {"type": "text", "text": "6.1 DUFM training ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We start with the $L$ -DUFM model (1), training both features and weights. In the top row of Figure 2, we consider a 4-DUFM, with $K=10$ and $n=50$ , presenting the training progression of the losses (left plot), the DNC1 metrics (center plot) and the singular values at convergence (right plot). ", "page_idx": 6}, {"type": "text", "text": "The results are in excellent agreement with our theory. First, the training loss outperforms that of the DNC solution, and it is rather close to that of the SRG solution. Second, DNC1 holds in a clear way in all layers, especially in the last ones. Third, the solution at convergence exhibits a strong low rank bias: the ranks of intermediate layers range from 5 to 8, and they are always the same in all intermediate layers within one run. For comparison, we recall that the intermediate layers of the DNC solution have full rank $K=10$ . Third, for a few runs, the Gram matrices of the intermediate class means resulting from gradient descent training coincide with those of an SRG solution. Finally we highlight that, similarly to our theory, the solutions found in all our experiments in the entire Section 6 have non-negative pre-activations in all intermediate layers of the MLP head except the last one. ", "page_idx": 6}, {"type": "text", "text": "Impact of number of classes and depth. For $K=2$ or $L=2$ , we recover the results of [48, 51] irrespective of other hyperparameters. The higher the number of classes, the more prevalent are lowrank solutions, while finding DNC solutions becomes challenging. The same holds for increasing the number of layers. For $L=3$ and low number of classes $(K\\leq6)$ ), we weren\u2019t able to experimentally find solutions that would outperform DNC, which aligns nicely with the fact that SRG outperforms DNC only from $K=10$ for $L=3$ . For large number of classes, the difference between the loss of low-rank solutions and the DNC loss is considerable already for $L=3$ and becomes even larger for higher $L$ . This is illustrated in the left plot of Figure 3. ", "page_idx": 6}, {"type": "text", "text": "For $L\\leq5$ and moderate number of classes $K\\le30]$ ), gradient descent solutions are as follows: until layer $L-1$ , feature matrices share the same rank and have similar Gram matrices; intermediate activations are typically non-negative, and the ReLU has no effect; then, the rank jumps to $K$ after the final ReLU, as pre-activations are also negative. For large $L$ or large $K$ , the rank of the first few layers is low, growing gradually in the last couple of layers (see Figure 6 in Appendix B.1); the ReLU is active only in the final layers. This means that not only very low-rank solutions outperform DNC (as shown by our theory), but such solutions are routinely reached by gradient descent. ", "page_idx": 6}, {"type": "text", "text": "Impact of weight decay and width. While neither weight decay nor width influence Theorem 5 \u2013 which shows that DNC is not optimal \u2013 both quantities influence the nature of the solutions found by gradient descent. In particular, the stronger the weight decay, the lower the rank, see the middle plot in Figure 3. For very small weight decay, DNC is sometimes recovered; for very high weight decay, it is never recovered. The width has an opposite effect, see the right plot of Figure 3. For small width, low-rank solutions are much more likely to be found; large width has a strong implicit bias towards DNC and, thus, rank $K$ solutions. This means that, surprisingly, a larger width leads to a larger loss, since low-rank solutions exhibit a smaller loss than DNC. Thus, at least in DUFM, the infinite-width limit prevents gradient descent from finding a globally optimal solution, and sub-optimal solutions are reached with increasingly high probability. ", "page_idx": 6}, {"type": "image", "img_path": "0jld45XGgJ/tmp/3ee31061f9f390f8520a96f30627b96a61c88524b008b62bfc178a856e76ff80.jpg", "img_caption": ["Figure 2: Training loss compared against DNC and SRG losses (left), DNC1 metric training progression (middle) and singular value distribution at convergence (right). Top row: 4-DUFM training with $K=10$ , $\\lambda=0.004$ for all regularization parameters, learning rate of 0.5 and width 30. Results are averaged over 10 runs, and we show the confidence intervals at 1 standard deviation. Bottom row: Training of a ResNet20 with a 4-layer MLP head on CIFAR10, using a DUFM-like regularization. We use weight decay 0.005 except $\\lambda_{H_{1}}=0.000005$ (to compensate for $n=5000$ , which significantly influences the total regularization strength), learning rate 0.05 and width 64 for all the MLP layers. Results are averaged over 5 runs, and we show the confidence intervals at 1 standard deviation. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "0jld45XGgJ/tmp/0e422f91b953826c73391c04d2f266735b75d5f285e295416a49a9bfc86b5067.jpg", "img_caption": ["Figure 3: All experiments refer to the training of an $L$ -DUFM model. Results are averaged over 5 runs, and we show the confidence intervals at 1 standard deviation. Left: Ratio between SRG and DNC loss $(\\mathcal{L}_{S R G}/\\mathcal{L}_{D N C})$ , as a function of $r$ , where the number of classes is $K=\\binom{r}{2}$ . Different curves correspond to different values of $L\\in\\{3,4,5\\}$ . Middle: Average rank at convergence, as a function of the weight decay in $\\mathrm{log_{2}}$ -scale, when $L=4$ and $K=15$ . Right: Empirical probability of finding a DNC solution as a function of the width, when $L=4$ and $K=10$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "6.2 End-to-end experiments with DUFM-like regularization ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Next, we train a DNN backbone with an MLP head, regularizing only the output of the backbone and the layers of the MLP head (and not the layers of the backbone). This regularization is closer to our theory than the standard one, since we explicitly regularize the Frobenius norm of the unconstrained features. We also note that training with such a regularization scheme is easier than training with the standard regularization scheme. In the bottom row of Figure 2, we consider a ResNet20 backbone with a 4-layer MLP head trained on CIFAR10. ", "page_idx": 7}, {"type": "image", "img_path": "0jld45XGgJ/tmp/ea66e4a69d1dbc43feb355fc0c911263373ea85f719e1a02c02f0e33fc7eb2cb.jpg", "img_caption": ["Figure 4: Training of a ResNet20 with a 5-layer MLP head on CIFAR-10 (top row) and MNIST (bottom row), using the standard regularization. We pick a large weight decay (0.08 for CIFAR-10 and 0.04 for MNIST) and a large learning rate (0.005 for CIFAR-10 and 0.01 for MNIST). Results are averaged over 5 runs, and we show the confidence intervals at 1 standard deviation. Left: DNC1 metric training progression. Middle: Singular value distributions at convergence for all the layers. Right: Gram matrices of $M_{3}$ (CIFAR-10) and $\\tilde{M}_{5}$ (MNIST). "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "The results agree well with our theory, and they are qualitatively similar to those of Section 6.1 for DUFM training. The DNNs consistently outperform the DNC loss, but still achieve DNC1. The ranks of class-mean matrices range from 5 to 6, and they are always the same in all intermediate layers within one run. Remarkably, the SRG solution was found by gradient descent also in this setting. ", "page_idx": 8}, {"type": "text", "text": "Both weight decay and learning rate affect the average rank of the solutions found by gradient descent. Varying the width can lead to unexpected results, as it changes the ratio between the number of parameters in the MLP and that in the backbone, so the effect of the width is harder to interpret. Similar results can be seen on MNIST. ", "page_idx": 8}, {"type": "text", "text": "6.3 End-to-end experiments ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Finally, we perform experiments with standard regularization and the same architecture (i.e., DNN backbone plus MLP head) as in Section 6.2. In particular, in Figure 4 we consider a ResNet20 backbone with a 5-layer MLP head trained on CIFAR10 and MNIST with standard weight regularization. ", "page_idx": 8}, {"type": "text", "text": "Overall, the results remain qualitatively similar to those discussed above. This demonstrates that, in spite of a different loss landscape compared to previous settings, the low-rank bias is still responsible for DNC2 not being attained. Specifically, for CIFAR10, the rank in the third layer ranges between 8 and 9, and for MNIST ranges between 5 and 7; in contrast, the DNC solution has rank $K=10$ . All DNNs display DNC1 across all layers. Remarkably, for the MNIST experiment the solution displayed in Figure 4 found by gradient descent is the SRG solution (compare the gram matrices in bottom right plot of Figure 4 with the right-most plot of Figure 1). ", "page_idx": 8}, {"type": "text", "text": "The difficulty of the learning task plays a significant role in this setting: when training on MNIST, it is rather easy to reach low-rank solutions and rather difficult to reach DNC solutions and the rank depends heavily on the regularization strength as shown in Figure 10 of Appendix B.3; when training on CIFAR-10, the weight decay needs to be high for the class mean matrices to be rank deficient. Moreover, the learning rate no longer exhibits a clear relation with the rank, since gradient descent diverges when the learning is too large. We also observe that the rank deficiency is the strongest in the mid-layer of the MLP head, creating a \u201crank bottleneck\u201d. This can be seen by a closer look at the tails of the singular values, which better match zero at intermediate layers (the green and red curves corresponding to layers 3 and 4 have tails slightly lower than the other curves). In a more precise manner, we further measured effective ranks of all the layers in Figure 4. For instance, the effective ranks of CIFAR10 experiment layers are 8.96, 7.46, 6.88, 7.04, 7.73), which shows the middle layer is closest to a low hard rank matrix. The rank bottleneck is also mentioned in [22, 21, 56]. In fact, these works also measure extremely low ranks, but [22, 21] do it on synthetic data with very low inner dimension, while [56] focuses on fully convolutional architectures trained with CE loss and including biases. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "In summary, Figure 4 shows that both the low-rank bias and the optimality of DNC1 carry over to the standard training regime. This means that there are hyperparameter settings for which deep neural collapse, including in the very last layer, is not reached (and likely not even optimal). Although the sub-optimality of DNC in the last layer is not proved formally, this phenomenon is supported by evidence across all experimental settings and further corroborated by our theory where our SRG construction is far from being DNC2-collapsed in the last layer. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we reveal that the deep neural collapse is not an optimal solution of the deep unconstrained features model \u2013 the extension of the widely used unconstrained features model. This finding considerably changes our overall understanding of DNC, as all the previous models in simplified settings showed the global optimality of neural collapse and of its deep counterpart. The main culprit \u2013 the low-rank bias \u2013 makes the orthogonal frame property of DNC, and thus DNC as a whole, too high rank to be optimal. We demonstrate this low-rank bias across a variety of experimental settings, from DUFM training to end-to-end training with the standard weight regularization. While the structure of the Gram matrices of class means is not captured by orthogonal matrices (or by the ETF), the within-class variability collapse remains optimal. Our theoretical analysis proves this for the DUFM problem, and our numerical results showcase the phenomenon across various settings. ", "page_idx": 9}, {"type": "text", "text": "Our analysis focuses on the MSE loss, but we expect similar results to hold for the cross-entropy loss and, in particular, that the same SRG construction proposed here would still refute the optimality of DNC. We leave as an open question whether DNC1 is strictly optimal across all layers. While proving this would likely require new ideas, we note that none of our experiments converged to a solution that would not be DNC1-collapsed. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Marco Mondelli is partially supported by the 2019 Lopez-Loreta prize. This research was supported by the Scientific Service Units (SSU) of ISTA through resources provided by Scientific Computing (SciComp). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Maksym Andriushchenko, Dara Bahri, Hossein Mobahi, and Nicolas Flammarion. Sharpnessaware minimization leads to low-rank features. In Conference on Neural Information Processing Systems (NeurIPS), volume 36, 2023.   \n[2] Sanjeev Arora, Nadav Cohen, Wei Hu, and Yuping Luo. Implicit regularization in deep matrix factorization. In Conference on Neural Information Processing Systems (NeurIPS), 2019.   \n[3] Bradley T Baker, Barak A Pearlmutter, Robyn Miller, Vince D Calhoun, and Sergey M Plis. Low-rank learning by design: the role of network architecture and activation linearity in gradient rank collapse. arXiv preprint arXiv:2402.06751, 2024.   \n[4] Daniel Beaglehole, Peter S\u00faken\u00edk, Marco Mondelli, and Mikhail Belkin. Average gradient outer product as a mechanism for deep neural collapse. arXiv preprint arXiv:2402.13728, 2024.   \n[5] Ido Ben-Shaul and Shai Dekel. Nearest class-center simplification through intermediate layers. In Topological, Algebraic and Geometric Learning Workshops, 2022.   \n[6] Hung-Hsu Chou, Carsten Gieshoff, Johannes Maly, and Holger Rauhut. Gradient descent for deep matrix factorization: Dynamics and implicit bias towards low rank. Applied and Computational Harmonic Analysis, 68, 2024. [7] Hien Dang, Tan Nguyen, Tho Tran, Hung Tran, and Nhat Ho. Neural collapse in deep linear network: From balanced to imbalanced data. In International Conference on Machine Learning (ICML), 2023. [8] Hien Dang, Tho Tran, Tan Nguyen, and Nhat Ho. Neural collapse for cross-entropy classimbalanced learning with unconstrained ReLU feature model. arXiv preprint arXiv:2401.02058, 2024.   \n[9] Cong Fang, Hangfeng He, Qi Long, and Weijie J Su. Exploring deep neural networks via layer-peeled model: Minority collapse in imbalanced training. In Proceedings of the National Academy of Sciences (PNAS), volume 118, 2021.   \n[10] Ruili Feng, Kecheng Zheng, Yukun Huang, Deli Zhao, Michael Jordan, and Zheng-Jun Zha. Rank diminishing in deep neural networks. In Conference on Neural Information Processing Systems (NeurIPS), 2022.   \n[11] Tomer Galanti, Liane Galanti, and Ido Ben-Shaul. On the implicit bias towards minimal depth of deep neural networks. arXiv preprint arXiv:2202.09028, 2022.   \n[12] Tomer Galanti, Andr\u00e1s Gy\u00f6rgy, and Marcus Hutter. Improved generalization bounds for transfer learning via neural collapse. In First Workshop on Pre-training: Perspectives, Pitfalls, and Paths Forward at ICML, 2022.   \n[13] Tomer Galanti, Zachary S Siegel, Aparna Gupte, and Tomaso Poggio. SGD and weight decay provably induce a low-rank bias in neural networks. arXiv preprint arXiv:2206.05794, 2022.   \n[14] Connall Garrod and Jonathan P Keating. Unifying low dimensional observations in deep learning through the deep linear unconstrained feature model. arXiv preprint arXiv:2404.06106, 2024.   \n[15] Jarrod Haas, William Yolland, and Bernhard T Rabus. Linking neural collapse and l2 normalization with improved out-of-distribution detection in deep neural networks. Transactions on Machine Learning Research (TMLR), 2022.   \n[16] X. Y. Han, Vardan Papyan, and David L Donoho. Neural collapse under mse loss: Proximity to and dynamics on the central path. In International Conference on Learning Representations (ICLR), 2022.   \n[17] Hangfeng He and Weijie J Su. A law of data separation in deep learning. Proceedings of the National Academy of Sciences, 120(36), 2023.   \n[18] Wanli Hong and Shuyang Ling. Neural collapse for unconstrained feature model under crossentropy loss with imbalanced data. arXiv preprint arXiv:2309.09725, 2023.   \n[19] Minyoung Huh, Hossein Mobahi, Richard Zhang, Brian Cheung, Pulkit Agrawal, and Phillip Isola. The low-rank simplicity bias in deep networks. Transactions on Machine Learning Research, 2022.   \n[20] Like Hui, Mikhail Belkin, and Preetum Nakkiran. Limitations of neural collapse for understanding generalization in deep learning. arXiv preprint arXiv:2202.08384, 2022.   \n[21] Arthur Jacot. Bottleneck structure in learned features: Low-dimension vs regularity tradeoff. In Conference on Neural Information Processing Systems (NeurIPS), 2023.   \n[22] Arthur Jacot. Implicit bias of large depth networks: a notion of rank for nonlinear functions. In International Conference on Learning Representations (ICLR), 2023.   \n[23] Wenlong Ji, Yiping Lu, Yiliang Zhang, Zhun Deng, and Weijie J Su. An unconstrained layerpeeled perspective on neural collapse. In International Conference on Learning Representations (ICLR), 2022.   \n[24] Ziwei Ji and Matus Telgarsky. Gradient descent aligns the layers of deep linear networks. In International Conference on Learning Representations (ICLR), 2018.   \n[25] Jiachen Jiang, Jinxin Zhou, Peng Wang, Qing Qu, Dustin G Mixon, Chong You, and Zhihui Zhu. Generalized neural collapse for a large number of classes. In Conference on Parsimony and Learning (Recent Spotlight Track), 2023.   \n[26] Vignesh Kothapalli. Neural collapse: A review on modelling principles and generalization. In Transactions on Machine Learning Research (TMLR), 2023.   \n[27] Vignesh Kothapalli, Tom Tirer, and Joan Bruna. A neural collapse perspective on feature evolution in graph neural networks. In Conference on Neural Information Processing Systems (NeurIPS), volume 36, 2023.   \n[28] Alex Krizhevsky and Geoffrey Hinton. Learning multiple layers of features from tiny images. Technical report, University of Toronto, 2009.   \n[29] Daniel Kunin, Atsushi Yamamura, Chao Ma, and Surya Ganguli. The asymmetric maximum margin bias of quasi-homogeneous neural networks. In International Conference on Learning Representations (ICLR), 2022.   \n[30] Thien Le and Stefanie Jegelka. Training invariances and the low-rank phenomenon: beyond linear networks. In International Conference on Learning Representations (ICLR), 2022.   \n[31] Yann LeCun, L\u00e9on Bottou, Yoshua Bengio, and Patrick Haffner. Gradient-based learning applied to document recognition. Proceedings of the IEEE, 86(11), 1998.   \n[32] Xiao Li, Sheng Liu, Jinxin Zhou, Xinyu Lu, Carlos Fernandez-Granda, Zhihui Zhu, and Qing Qu. Principled and efficient transfer learning of deep models via neural collapse. In Conference on Parsimony and Learning (Recent Spotlight Track), 2023.   \n[33] Zexi Li, Xinyi Shang, Rui He, Tao Lin, and Chao Wu. No fear of classifier biases: Neural collapse inspired federated learning with synthetic and fixed classifier. In Conference on Computer Vision and Pattern Recognition (CVPR), 2023.   \n[34] Jianfeng Lu and Stefan Steinerberger. Neural collapse under cross-entropy loss. Applied and Computational Harmonic Analysis, 59, 2022.   \n[35] Wojciech Masarczyk, Mateusz Ostaszewski, Ehsan Imani, Razvan Pascanu, Piotr Mi\u0142o\u00b4s, and Tomasz Trzcinski. The tunnel effect: Building data representations in deep neural networks. Conference on Neural Information Processing Systems (NeurIPS), 36, 2023.   \n[36] Dustin G Mixon, Hans Parshall, and Jianzong Pi. Neural collapse with unconstrained features. arXiv preprint arXiv:2011.11619, 2020.   \n[37] Greg Ongie and Rebecca Willett. The role of linear layers in nonlinear interpolating networks. arXiv preprint arXiv:2202.00856, 2022.   \n[38] Leyan Pan and Xinyuan Cao. Towards understanding neural collapse: The effects of batch normalization and weight decay. arXiv preprint arXiv:2309.04644, 2023.   \n[39] Vardan Papyan, X. Y. Han, and David L Donoho. Prevalence of neural collapse during the terminal phase of deep learning training. In Proceedings of the National Academy of Sciences (PNAS), volume 117, 2020.   \n[40] Liam Parker, Emre Onal, Anton Stengel, and Jake Intrater. Neural collapse in the intermediate hidden layers of classification neural networks. arXiv preprint arXiv:2308.02760, 2023.   \n[41] Tomaso Poggio and Qianli Liao. Explicit regularization and implicit bias in deep network classifiers trained with the square loss. arXiv preprint arXiv:2101.00072, 2020.   \n[42] Tomaso Poggio and Qianli Liao. Implicit dynamic regularization in deep networks. Technical report, Center for Brains, Minds and Machines (CBMM), 2020.   \n[43] Akshay Rangamani, Marius Lindegaard, Tomer Galanti, and Tomaso Poggio. Feature learning in deep classifiers through intermediate neural collapse. Technical Report, 2023.   \n[44] Noam Razin, Asaf Maman, and Nadav Cohen. Implicit regularization in tensor factorization. In International Conference on Machine Learning (ICML), 2021.   \n[45] Mariia Seleznova, Dana Weitzner, Raja Giryes, Gitta Kutyniok, and Hung-Hsu Chou. Neural (tangent kernel) collapse. In Conference on Neural Information Processing Systems (NeurIPS), volume 36, 2023.   \n[46] Fanhua Shang, Yuanyuan Liu, Fanjie Shang, Hongying Liu, Lin Kong, and Licheng Jiao. A unified scalable equivalent formulation for Schatten quasi-norms. Mathematics, 8(8), 2020.   \n[47] Daniel Soudry, Elad Hoffer, Mor Shpigel Nacson, Suriya Gunasekar, and Nathan Srebro. The implicit bias of gradient descent on separable data. In Journal of Machine Learning Research, volume 19, 2018.   \n[48] Peter S\u00faken\u00edk, Marco Mondelli, and Christoph Lampert. Deep neural collapse is provably optimal for the deep unconstrained features model. In Conference on Neural Information Processing Systems (NeurIPS), 2023.   \n[49] Christos Thrampoulidis, Ganesh Ramachandra Kini, Vala Vakilian, and Tina Behnia. Imbalance trouble: Revisiting neural-collapse geometry. In Conference on Neural Information Processing Systems (NeurIPS), 2022.   \n[50] Nadav Timor, Gal Vardi, and Ohad Shamir. Implicit regularization towards rank minimization in relu networks. In Algorithmic Learning Theory (ALT), 2023.   \n[51] Tom Tirer and Joan Bruna. Extended unconstrained features model for exploring deep neural collapse. In International Conference on Machine Learning (ICML), 2022.   \n[52] Tom Tirer, Haoxiang Huang, and Jonathan Niles-Weed. Perturbation analysis of neural collapse. In International Conference on Machine Learning (ICML), 2023.   \n[53] Peng Wang, Huikang Liu, Can Yaras, Laura Balzano, and Qing Qu. Linear convergence analysis of neural collapse with unconstrained features. In NeurIPS Workshop on Optimization for Machine Learning (OPT), 2022.   \n[54] Zihan Wang and Arthur Jacot. Implicit bias of SGD in $L_{2}$ -regularized linear DNNs: One-way jumps from high to low rank. In International Conference on Learning Representations (ICLR), 2024.   \n[55] E Weinan and Stephan Wojtowytsch. On the emergence of simplex symmetry in the final and penultimate layers of neural network classifiers. In Mathematical and Scientific Machine Learning, 2022.   \n[56] Yuxiao Wen and Arthur Jacot. Which frequencies do CNNs need? Emergent bottleneck structure in feature learning. arXiv preprint arXiv:2402.08010, 2024.   \n[57] Mengjia Xu, Akshay Rangamani, Qianli Liao, Tomer Galanti, and Tomaso Poggio. Dynamics in deep classifiers trained with the square loss: Normalization, low rank, neural collapse, and generalization bounds. In Research, volume 6, 2023.   \n[58] Jiawei Zhang, Yufan Chen, Cheng Jin, Lei Zhu, and Yuantao Gu. EPA: neural collapse inspired robust out-of-distribution detector. arXiv preprint arXiv:2401.01710, 2024.   \n[59] Jinxin Zhou, Xiao Li, Tianyu Ding, Chong You, Qing Qu, and Zhihui Zhu. On the optimization landscape of neural collapse under MSE loss: Global optimality with unconstrained features. In International Conference on Machine Learning (ICML), 2022.   \n[60] Jinxin Zhou, Chong You, Xiao Li, Kangning Liu, Sheng Liu, Qing Qu, and Zhihui Zhu. Are all losses created equal: A neural collapse perspective. In Conference on Neural Information Processing Systems (NeurIPS), 2022.   \n[61] Zhihui Zhu, Tianyu Ding, Jinxin Zhou, Xiao Li, Chong You, Jeremias Sulam, and Qing Qu. A geometric analysis of neural collapse with unconstrained features. In Conference on Neural Information Processing Systems (NeurIPS), 2021. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Proofs ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Low-rank solutions outperform deep neural collapse ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We start by providing more detailed definitions of SRG and DNC solutions. ", "page_idx": 13}, {"type": "text", "text": "Definition 9. Let $K=\\binom{r}{2}$ for $r\\geq4.$ . Then, a strongly regular graph (SRG) solution of the $L$ -DUFM problem (1) is obtained by setting the matrices $(H_{1},W_{1},\\dots,W_{L})$ as follows. For all $l_{:}$ , the feature matrices $H_{l},{\\tilde{H}}_{l}$ are DNC1 collapsed, i.e., $H_{l}\\,=\\,M_{l}\\otimes{\\bf1}_{n}^{T},\\tilde{H}_{l}\\,=\\,\\tilde{M}_{l}\\otimes{\\bf1}_{n}^{T}$ . For $2\\,\\le\\,l\\,\\le\\,L-1$ , $M_{l}\\,=\\,\\tilde{M}_{l}$ and $M_{l}\\,=\\,A_{l}T_{r}$ , where each row of $A_{l}$ is a multiple of the standard basis vector of dimension $r$ and the sum of squared multiples corresponding to one basis vector equals the same parameter $\\alpha_{l}$ . In other words, each row of $M_{l}$ is a multiple of a row of $T_{r}$ and the sum of squared norms of the rows of $M_{l}$ corresponding to a row of $T_{r}$ is the same for each row of $T_{r}$ . For $l=1$ , $W_{1},M_{1}$ are any pair of matrices that minimize the objective conditionally on $M_{2}$ being defined as above. For $l\\geq2$ , $W_{l}$ minimizes the objective conditional to the input and output to that layer. Let ${A}_{L}^{(1)}$ be a $K\\times r$ matrix where each row has exactly two $(-1)$ entries and exactly $r-2\\left(+1\\right)$ entries. Then, normalize the matrix $A_{L}^{(1)}T_{r}$ so that each row is unit norm and multiply from the left with ${A}_{L}^{(2)}$ of dimension $d_{L}\\times K$ , where each of the rows of $A_{l}^{(2)}$ is a multiple of a standard basis vector of dimension $K$ and the total sum of squared multiples corresponding to each basis vector is $\\alpha_{L}$ . Then, $\\tilde{M}_{L}$ is obtained via this procedure, and $M_{L}=\\bar{\\sigma}(\\tilde{M}_{L})$ . Finally, the parameters $\\{\\alpha_{l}\\}_{l=2}^{L}$ satisfy ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\alpha_{l}=\\frac{\\left(\\sqrt{n\\lambda_{H_{1}}\\lambda_{W_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)\\right)^{l-2}}{r^{l-2}\\prod_{i=2}^{l-1}\\lambda_{W_{i}}}q^{l},\\qquad2\\leq l\\leq L-1,}\\\\ &{\\alpha_{L}=\\frac{\\left(\\sqrt{n\\lambda_{H_{1}}\\lambda_{W_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)\\right)^{L-2}4((r-2)(r-3)+2)}{r^{L-1}(r-1)^{2}\\prod_{i=2}^{L-1}\\lambda_{W_{i}}}q^{L},}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "and the parameter $q\\geq0$ is chosen to minimize the objective function in (1). ", "page_idx": 13}, {"type": "text", "text": "Definition 10. A deep neural collapse (DNC) solution for any number of classes $K$ of the $L$ -DUFM problem (1) is obtained by setting the matrices $(H_{1},W_{1},\\dots,W_{L})$ as follows. For all $l$ , the feature matrices $H_{l},{\\tilde{H}}_{l}$ are DNC1 collapsed, i.e., $H_{l}=M_{l}\\otimes{\\bf1}_{n}^{T},\\tilde{H}_{l}=\\tilde{M}_{l}\\otimes{\\bf1}_{n}^{T}.$ . For $2\\leq l\\leq L,$ , $M_{l}={\\tilde{M}}_{l}$ and $M_{l}^{T}M_{l}\\,=\\,\\alpha_{l}I_{K}$ . For $l\\,=\\,1$ , $W_{1},M_{1}$ are any pair of matrices that minimize the objective conditionally on $M_{2}$ being defined as above. For $l\\geq2$ , $W_{l}$ minimizes the objective conditional to the input and output to that layer. Finally, the parameters $\\{\\alpha_{l}\\}_{l=2}^{L}$ satisfy ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\alpha_{l-1}=\\frac{\\lambda_{W_{L-1}}^{l-1}}{\\lambda_{H_{1}}n\\prod_{i=1}^{l-1}\\lambda_{W_{i}}}q^{l-1},}&{{}}&{2\\leq l\\leq L-1,}\\\\ {\\alpha_{L}=\\frac{\\lambda_{W_{L-1}}^{L-1}}{\\lambda_{H_{1}}n\\prod_{i=1}^{L-2}\\lambda_{W_{i}}}q^{L},}&{{}}&{}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "and the parameter $q\\geq0$ is chosen to minimize the objective function in (1). ", "page_idx": 13}, {"type": "text", "text": "Next, we define the SRG solution when $K\\neq\\binom{r}{2}$ for any $r$ , and provide two constructions, each useful for different parts of the proof of Theorem 5. ", "page_idx": 13}, {"type": "text", "text": "Definition 11. A strongly regular graph (SRG) solution for $K\\geq6$ of the $L$ -DUFM problem (1), is obtained in one of the two following ways. ", "page_idx": 13}, {"type": "text", "text": "1. First, we take the largest r s.t. $K\\geq{\\binom{r}{2}}$ and construct the SRG solution $(\\bar{H}_{1},\\bar{W}_{1},\\dots,\\bar{W}_{L})$ as in Definition $^{9}$ setting the number of classes to $\\binom{r}{2}$ . Next, we construct a DNC solution $(\\tilde{H}_{1},\\tilde{W}_{1},\\dots,\\tilde{W}_{L})$ as in Definition $I O$ setting the number of classes to $K-\\binom{r}{2}$ . Then, to construct $H_{1}$ of the SRG solution, we create it as a diagonal block matrix with number of columns equal to $K$ and number of rows equal to $\\bar{d}_{1}+\\tilde{d}_{1}$ , where these are the numbers of rows of the respective $H$ matrices; the first block is $\\bar{H}_{1}$ , the second block is $\\tilde{H_{1}}^{2}$ , and the off-diagonal blocks are zero matrices. Similarly, we extend the weight matrices such that, for any $l$ , $W_{l}$ is a block diagonal matrix where the number of rows is $\\tilde{d}_{l+1}+\\bar{d}_{l+1}$ and the number of columns is $\\tilde{d}_{l}+\\bar{d}_{l}$ ; the first block is $\\bar{W}_{l}$ , the second block is $\\tilde{W}_{l}$ , and the off-diagonal blocks are zero matrices. ", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "2. First, we take the smallest r s.t. $K\\leq\\binom{r}{2}$ and construct the SRG solution as in Definition 9 setting the number of classes to $\\binom{r}{2}$ . Then, we just remove the ${\\binom{r}{2}}-K$ columns of $H_{1}$ that achieve the highest individual fit losses (in case of a tie choose arbitrarily), and define the SRG solution as the original solution without these columns. ", "page_idx": 14}, {"type": "text", "text": "We recall our main result and give the proof. ", "page_idx": 14}, {"type": "text", "text": "Theorem 5. If $K\\,\\geq\\,6,L\\,\\geq\\,4$ or $K\\,\\geq\\,10,L\\,=\\,3$ and $d_{l}\\,\\geq\\,K$ for all $l$ , then $\\mathcal{L}_{S R G}\\,<\\,\\mathcal{L}_{D N C}$ . Moreover, consider any sequence of $L$ -DUFM problems for which $K\\rightarrow\\infty$ so that $0.499>{\\mathcal{L}}_{D N C}$ for each problem. In that case, ", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\frac{{\\mathcal{L}}_{S R G}}{{\\mathcal{L}}_{D N C}}}={\\mathcal{O}}(K^{{\\frac{3-L}{2(L+1)}}}).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Proof. We start by considering the case $K\\,=\\,\\binom{r}{2}$ for some $r$ . Without loss of generality we can assume $n=1$ , because all comparisons are between solutions that are by definition DNC1 collapsed, and the ratio $\\mathcal{L}_{S R G}/\\mathcal{L}_{D N C}$ in the theorem statement does not depend on $n$ . ", "page_idx": 14}, {"type": "text", "text": "We first compute the loss of the SRG solution as in Definition 9 up to only one degree of freedom. Let us go term-by-term. The simplest to evaluate is $\\frac{\\lambda_{W_{l}}}{2}\\left\\|\\boldsymbol{W_{l}}\\right\\|_{F}^{2}$ for $2\\leq l\\leq L-2$ . Using Lemma 13 (which relies on Lemma 12), we get ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\frac{\\lambda_{W_{l}}}{2}\\left\\|W_{l}\\right\\|_{F}^{2}=\\frac{r\\lambda_{W_{l}}}{2}\\frac{\\alpha_{l+1}}{\\alpha_{l}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Similarly, for layer $L-1$ , we use Lemma 14 (again relying on Lemma 12) to compute: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\frac{\\lambda_{W_{L-1}}}{2}\\left\\|{W_{L-1}}\\right\\|_{F}^{2}=\\frac{r^{2}(r-1)^{2}\\lambda_{W_{L-1}}}{8((r-2)(r-3)+2)}\\frac{\\alpha_{L}}{\\alpha_{L-1}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Combining Lemma 15 with Lemma 18 we get: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\frac{\\lambda_{W_{1}}}{2}\\left\\|\\boldsymbol{W}_{1}\\right\\|_{F}^{2}+\\frac{\\lambda_{H_{1}}}{2}\\left\\|\\boldsymbol{H}_{1}\\right\\|_{F}^{2}=\\sqrt{\\lambda_{W_{1}}\\lambda_{H-1}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)\\alpha_{2}^{\\frac{1}{2}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Finally, combining Lemma 17 with Lemma 16 we get: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\frac{1}{2K}\\left\\|{W_{L}}{M_{L}}-{I_{K}}\\right\\|_{F}^{2}+\\frac{\\lambda_{W_{L}}}{2}\\left\\|{W_{L}}\\right\\|_{F}^{2}=\\frac{\\lambda_{W_{L}}}{2}\\frac{1}{\\frac{\\left(r-2\\right)\\left(5r-19\\right)}{\\left(r-2\\right)\\left(r-3\\right)+2}\\alpha_{L}+\\frac{r\\left(r-1\\right)}{2}\\lambda_{W_{L}}}}\\\\ &{}&{\\qquad+\\,\\frac{\\lambda_{W_{L}}}{2}\\frac{r-1}{\\frac{2\\left(r-3\\right)^{2}}{\\left(r-2\\right)\\left(r-3\\right)+2}\\alpha_{L}+\\frac{r\\left(r-1\\right)}{2}\\lambda_{W_{L}}}}\\\\ &{}&{\\qquad+\\,\\frac{\\lambda_{W_{L}}}{2}\\frac{\\frac{r\\left(r-3\\right)}{2}}{\\frac{2}{\\left(r-2\\right)\\left(r-3\\right)+2}\\alpha_{L}+\\frac{r\\left(r-1\\right)}{2}\\lambda_{W_{L}}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The total loss of the SRG solution is just the sum of all these terms, which is expressed in terms of $\\alpha_{2},\\alpha_{3},\\ldots,\\alpha_{L}$ . We now verify that the choice in (6) minimizes the loss, having set $q\\equiv\\alpha_{2}^{1/2}$ . To do so, we compute the partial derivatives of $\\mathcal{L}$ w.r.t. the $\\alpha_{l}$ \u2019s and set them to 0: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{0=\\cfrac{\\partial\\mathcal{L}}{\\partial\\alpha_{2}}=-r\\lambda_{W_{2}}\\cfrac{\\alpha_{3}}{\\alpha_{2}^{2}}+\\sqrt{\\lambda_{W_{1}}\\lambda_{H-1}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)\\alpha_{2}^{-\\frac{1}{2}}\\iff}\\\\ &{\\frac{\\alpha_{3}}{\\alpha_{2}}=\\cfrac{\\sqrt{\\lambda_{W_{1}}\\lambda_{H-1}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}{r\\lambda_{W_{2}}}q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "For $3\\le l\\le L-2$ , we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{0=\\cfrac{\\partial\\mathcal{L}}{\\partial\\alpha_{l}}=-\\cfrac{r\\lambda_{W_{l}}}{2}\\cfrac{\\alpha_{l+1}}{\\alpha_{l}^{2}}+\\cfrac{r\\lambda_{W_{l-1}}}{2}\\cfrac{1}{\\alpha_{l-1}}\\iff}\\\\ &{\\quad\\cfrac{\\alpha_{l+1}}{\\alpha_{l}}=\\cfrac{\\lambda_{W_{l-1}}}{\\lambda_{W_{l}}}\\cfrac{\\alpha_{l}}{\\alpha_{l-1}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "And finally, for layer $L-1$ , we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{0=\\displaystyle\\frac{\\partial\\mathcal{L}}{\\partial\\alpha_{L-1}}=-\\frac{\\lambda_{W_{L-1}}}{2}\\frac{r^{2}(r-1)^{2}}{4((r-2)(r-3)+2)}\\frac{\\alpha_{L}}{\\alpha_{L-1}^{2}}+\\frac{r\\lambda_{W_{L-2}}}{2}\\frac{1}{\\alpha_{L-2}}\\,\\Longleftrightarrow}}\\\\ {{\\frac{\\alpha_{L}}{\\alpha_{L-1}}=\\displaystyle\\frac{\\lambda_{W_{L-2}}}{\\lambda_{W_{L-1}}}\\frac{4((r-2)(r-3)+2)}{r(r-1)^{2}}\\frac{\\alpha_{L-1}}{\\alpha_{L-2}}.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Denoting by $p=\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)$ , we can express these fractions as ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\frac{\\alpha_{l+1}}{\\alpha_{l}}=\\frac{p}{r\\lambda_{W_{l}}}q,\\quad\\quad2\\leq l\\leq L-2,}\\\\ &{}&{\\frac{\\alpha_{L}}{\\alpha_{L-1}}=\\frac{4((r-2)(r-3)+2)p}{r^{2}(r-1)^{2}\\lambda_{W_{L-1}}}q,}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "which gives the expressions in (6). Finally, plugging this back into the loss function we get a univariate $q$ -dependent function of the following form: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathcal{L}_{S R G}(q)=\\frac{\\lambda W_{L}}{2}\\frac{\\Big(\\!(r-2)(5r-19)\\!\\Big(\\sqrt{\\lambda w_{1}\\lambda n_{1}}\\Big(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\Big)\\Big)^{L-2}}{r^{L-1}(r-1)^{2}\\prod_{i=2}^{L-1}\\lambda w_{i}}q^{L}+\\frac{r(r-1)}{2}\\lambda w_{L}}\\\\ {+\\frac{\\lambda W_{L}}{2}\\frac{\\Big(\\!(\\!r-\\!1\\!w_{1}\\!)\\!\\Big(\\sqrt{\\lambda w_{1}\\lambda n_{1}}\\Big(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\Big)\\Big)^{L-2}}{r^{L-1}(r-1)^{2}\\prod_{i=2}^{L-1}\\lambda w_{i}}q^{L}+\\frac{r(r-1)}{2}\\lambda w_{L}}\\\\ {+\\frac{\\lambda W_{L}}{2}\\frac{\\Big(\\!r\\!-\\!1\\!w_{1}\\!\\Big(r\\!)\\!\\Big(\\sqrt{\\lambda w_{1}\\lambda n_{1}}\\Big(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\Big)\\Big)^{L-2}}{r^{L-1}(r-1)^{2}\\prod_{i=2}^{L-1}\\lambda w_{i}}q^{L}+\\frac{r(r-1)}{2}\\lambda w_{L}}\\\\ {+\\frac{L}{2}\\sqrt{\\lambda w_{1}\\lambda n_{1}}\\Big(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\Big)}q^{L}}\\\\ {+\\frac{L}{2}\\sqrt{\\lambda w_{1}\\lambda n_{1}}\\Big(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\Big)\\thinspace q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The loss of the DNC solution can be computed by a simple extension of the expression (17) from [48]: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathcal{L}_{D N C}(q)=\\frac{\\lambda_{W_{L}}}{2}\\frac{\\frac{r(r-1)}{2}}{\\frac{\\lambda_{W_{L-1}}^{L-1}}{\\lambda_{H_{1}}\\prod_{i=1}^{L-2}\\lambda_{W_{i}}}q^{L}+\\frac{r(r-1)}{2}\\lambda_{W_{L}}}+\\frac{L}{2}\\frac{r(r-1)}{2}\\lambda_{W_{L-1}q}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "At this point, we split our analysis for $L=3$ and for $L>3$ . We start with $L>3$ , which is simpler. Analysis for $L>3.$ . As $K\\geq6$ , the following upper bound holds: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{S R G}(q)\\leq\\bar{\\mathcal{L}}_{S R G}(q):=\\!\\frac{\\lambda W_{L}}{2}\\frac{\\frac{r(r-1)}{2}}{\\frac{8\\left(\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)\\right)^{L-2}}{r^{L-1}(r-1)^{2}\\prod_{i=2}^{L-1}\\lambda_{W_{i}}}q^{L}+\\frac{r(r-1)}{2}\\lambda_{W_{L}}}}\\\\ &{\\quad\\qquad\\qquad\\qquad\\qquad+\\,\\frac{L}{2}\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Now we reparametrize $\\mathcal{L}_{D N C}(q)$ and the upper bound on $\\mathcal{L}_{S R G}(q)$ , so that they look as similar as possible. By replacing $\\lambda_{W_{L-1}q}$ with $q$ , we get ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{q\\ge0}\\mathcal{L}_{D N C}(q)=\\operatorname*{min}_{q\\ge0}\\frac{\\lambda_{W_{L}}}{2}\\frac{\\frac{r(r-1)}{2}}{\\frac{1}{\\lambda_{H_{1}}\\prod_{i=1}^{L-1}\\lambda_{W_{i}}}q^{L}+\\frac{r(r-1)}{2}\\lambda_{W_{L}}}+\\frac{L}{2}r\\frac{(r-1)}{2}q.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Similarly, by replacing $\\begin{array}{r}{\\frac{\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}{r}q}\\end{array}$ with $q$ , we get: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\operatorname*{min}_{q\\ge0}\\bar{\\mathcal{L}}_{S R G}(q)=\\displaystyle\\operatorname*{min}_{q\\ge0}\\frac{\\lambda_{W_{L}}}{2}\\frac{\\frac{r(r-1)}{2}}{\\overline{{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)^{2}\\lambda_{H_{1}}\\prod_{i=1}^{L-1}\\lambda_{W_{i}}}}q^{L}+\\frac{r(r-1)}{2}\\lambda_{W_{L}}}}\\\\ {\\displaystyle\\qquad\\qquad\\qquad+\\,\\frac{L}{2}r q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Next, by replacing $\\begin{array}{r}{\\left(\\frac{8r}{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)^{2}}\\right)^{\\frac{1}{L}}q}\\end{array}$ with q, we get: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{q\\ge0}{\\operatorname*{min}}\\;\\bar{\\mathcal{L}}_{S R G}(q)=\\underset{q\\ge0}{\\operatorname*{min}}\\;\\frac{\\lambda_{W_{L}}}{2}\\frac{\\frac{r(r-1)}{2}}{\\frac{1}{\\lambda_{H_{1}}\\prod_{i=1}^{L-1}\\lambda_{W_{i}}}q^{L}+\\frac{r(r-1)}{2}\\lambda_{W_{L}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\;\\displaystyle\\frac{L}{2}r\\left(\\frac{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)^{2}}{8r}\\right)^{\\frac{1}{L}}q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "After the reparameterization, $\\mathcal{L}_{D N C}(q)$ and $\\bar{\\mathcal{L}}_{S R G}(q)$ have almost the same form except for the multiplier $\\textstyle{\\frac{r{\\dot{}}-1}{2}}$ in the DNC case and ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\left({\\frac{\\left({\\sqrt{2}}+{\\sqrt{(r-1)(r-2)}}\\right)^{2}(r-1)^{2}}{8r}}\\right)^{\\frac{1}{L}}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "in the SRG case. Therefore, the inequality between $\\mathcal{L}_{D N C}$ and $\\bar{\\mathcal{L}}_{S R G}$ is fully determined by the inequality between these two terms. We can write: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\displaystyle\\frac{r-1}{2}>\\left(\\frac{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)^{2}}{8r}\\right)^{\\frac{1}{L}}\\iff}\\\\ {r(r-1)^{L-2}>2^{L-3}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "We first solve it for $L=4$ and any $r\\geq4$ (which is guaranteed by $K\\geq6$ ). We get the inequality $r(r-1)^{2}>2(r-1)(r-2)+4+4\\sqrt{2(r-1)(r-2)}$ . This inequality is equivalent to $(r-1)(r^{2}-$ $3r+4)>4+4{\\sqrt{2(r-1)(r-2)}}$ , which holds for all $r\\geq4$ . ", "page_idx": 16}, {"type": "text", "text": "Compared to the case $L=4$ , for general $L$ the LHS gets multiplied by $(r-1)^{L-4}$ and the RHS gets multiplied by $2^{L-4}$ , which is smaller for $r\\geq4$ . Hence, the inequality holds as well. ", "page_idx": 16}, {"type": "text", "text": "Analysis for $L=3$ . Here, we need a tighter upper bound than $\\bar{\\mathcal{L}}_{S R G}(q)$ . Thus, we write ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{S R G}(q)\\leq\\frac{\\lambda W_{3}}{2}\\underbrace{\\frac{r}{8(r-3)^{2}\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}}_{r^{2}(r-1)^{2}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}\\\\ &{\\qquad\\qquad+\\underbrace{\\lambda_{W_{3}}}_{\\geq}\\frac{\\frac{r(r-3)}{2}}{\\underbrace{8\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}_{r^{L-1}(r-1)^{2}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad+\\underbrace{\\frac{3}{2}\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}_{\\geq}q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "We equivalently re-write this by extending both of the ratios by $\\frac{r\\!-\\!2}{r\\!-\\!2}\\,\\frac{r\\!-\\!1}{r\\!-\\!1}$ and then moving $\\frac{r\\!-\\!2}{r\\!-\\!1}$ to denominator. Thus, ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{S R G}(q)\\leq\\tilde{\\mathcal{L}}_{S R G}(q):=\\frac{\\lambda_{W_{3}}}{2}\\frac{\\frac{r(r-1)}{r-2}}{\\frac{8(r-3)^{2}\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}{r^{2}(r-1)(r-2)\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\frac{\\lambda_{W_{3}}}{2}\\frac{\\frac{r(r-3)(r-1)}{2(r-2)}}{\\frac{8\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}{r^{2}(r-1)(r-2)\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\frac{3}{2}\\sqrt{\\lambda_{W_{1}}\\lambda_{H_{1}}}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Now, we perform the same reparametrizations as for $L>4$ , with the only exception of treating $(r-1)(r\\bar{-2})$ in the denominator of the denominator of the current ratios as $\\dot{(r-1)^{2}}$ in the previous case. Then, we have ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{\\underset{\\eta\\ge0}{\\operatorname*{min}}}{q\\ge0}\\tilde{\\mathcal{L}}_{S R G}(q)=\\underset{q\\ge0}{\\operatorname*{min}}\\;\\frac{\\lambda_{W_{3}}}{2}\\frac{\\frac{r(r-1)}{r-2}}{\\frac{(r-3)^{2}}{\\lambda_{H_{1}}\\lambda_{W_{1}}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\;\\frac{\\lambda_{W_{3}}}{2}\\frac{\\frac{r(r-3)(r-1)}{2(r-2)}}{\\frac{1}{\\lambda_{H_{1}}\\lambda_{W_{1}}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\;\\frac{3}{2}r\\left(\\frac{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)(r-2)}{8r}\\right)^{\\frac{1}{3}}q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Assume that the following inequality holds: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\frac{1}{\\frac{(r-3)^{2}}{\\lambda_{H_{1}}\\lambda_{W_{1}}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}\\leq\\frac{1}{2}\\frac{1}{\\frac{1}{\\lambda_{H_{1}}\\lambda_{W_{1}}\\lambda_{W_{2}}}q^{3}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Then, ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{t\\ge0}{\\operatorname*{min}}\\ \\tilde{\\mathcal{L}}_{S R G}(q)\\le\\underset{q\\ge0}{\\operatorname*{min}}\\ \\bar{\\mathcal{L}}_{S R G}(q):=\\underset{q\\ge0}{\\operatorname*{min}}\\ \\frac{\\lambda_{W_{3}}}{2}\\frac{\\frac{r(r-1)}{2}}{\\frac{1}{\\lambda_{H_{1}}\\lambda_{W_{1}}\\lambda_{W_{2}}q^{3}}+\\frac{r(r-1)}{2}\\lambda_{W_{3}}}}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad+\\ \\frac{3}{2}r\\left(\\frac{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}(r-1)(r-2)}{8r}\\right)^{\\frac{1}{3}}q.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "The only difference between the expression considered here and the one considered in the $L>3$ case is that here we have $(r-1)(r-2)$ instead of $(r-1)^{2}$ within the expression. By comparing against $\\mathcal{L}_{D N C}$ again, we get that $\\bar{\\mathcal{L}}_{S R G}<\\mathcal{L}_{D N C}$ if and only if $r(r\\!-\\!1)^{2}>\\dot{\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)}^{2}\\left(r\\!-$ 2). This is equivalent to $(r-1)(3r-4)>2(r-2)+2(r-2)\\sqrt{2(r-1)(r-2)}$ , which holds for all $r\\geq4$ . ", "page_idx": 17}, {"type": "text", "text": "It remains to show that (9) holds, and it suffices to do so for the minimizer $q^{*}$ of ${\\mathcal{L}}_{D N C}$ , as $\\begin{array}{r}{\\operatorname*{min}_{q\\ge0}\\tilde{\\mathcal{L}}_{S R G}(q)\\le\\tilde{\\mathcal{L}}_{S R G}(q^{*})\\le\\bar{\\mathcal{L}}_{S R G}(q^{*})<\\mathcal{L}_{D N C}(q^{*})=\\operatorname*{min}_{q\\ge0}\\mathcal{L}_{D N C}(q)}\\end{array}$ . Note that this is equivalent to ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\frac{r(r-1)}{2}\\lambda_{W_{3}}<\\frac{(r-3)^{2}-2}{\\lambda_{W_{1}}\\lambda_{W_{2}}\\lambda_{H_{1}}}(q^{*})^{3}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Note that the minimum of the function in (7) (having the same reparametrization as $\\bar{\\mathcal{L}}_{S R G})-$ if it is not at $\\boldsymbol{q}^{*}=0$ , in which case the statement of the theorem is trivial \u2013 must come after the unique inflection point of the function. A direct computation yields that this inflection point satisfies ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\frac{r(r-1)}{2}\\lambda_{W_{3}}=\\frac{2}{\\lambda_{W_{1}}\\lambda_{W_{2}}\\lambda_{H_{1}}}q^{3}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Therefore, the minimum of (7) is attained at $q^{*}$ for which ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\frac{r(r-1)}{2}\\lambda_{W_{3}}<\\frac{2}{\\lambda_{W_{2}}\\lambda_{W_{1}}\\lambda_{H_{1}}}(q^{*})^{3}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "For $r\\geq5$ , this implies that such a $q^{*}$ satisfies (9), which concludes the argument for $K=\\binom{r}{2}$ . ", "page_idx": 17}, {"type": "text", "text": "For a general $K$ , the extension is rather simple. Note that the first type of SRG solution in Definition 11 is constructed in a way so that the losses attained by the SRG and DNC parts sum up. Therefore, we can split the analysis for the SRG and DNC parts. The DNC part obviously attains equal loss to the DNC solution. For the SRG part, the analysis done above applies, and the argument is complete. ", "page_idx": 17}, {"type": "text", "text": "It remains to show the statement on the asymptotic relationship between $\\mathcal{L}_{S R G}$ and $\\mathcal{L}_{D N C}$ for $K\\rightarrow\\infty$ when $L\\geq4$ . Formally, we should consider sequences of the problems and label everything with an extra index corresponding to the order within the sequence. However, with an abuse of notation, we drop this indexing and switch to the $O,\\Theta$ notations whenever convenient. ", "page_idx": 18}, {"type": "text", "text": "As before, we start by considering $K$ of the form $\\binom{r}{2}$ for some $r$ . Let $\\begin{array}{r}{\\Lambda\\,=\\,\\lambda_{H_{1}}\\prod_{i=1}^{L}\\lambda_{W_{i}}}\\end{array}$ and $\\begin{array}{r}{\\Psi(K)=\\left(\\frac{2^{L-3}\\left(\\sqrt{2}+\\sqrt{(r-1)(r-2)}\\right)^{2}}{r(r-1)^{L-2}}\\right)^{\\frac{1}{L}}}\\end{array}$ , where $r$ corresponds to the value s.t. ${\\binom{r}{2}}=K$ . We note that $\\Psi(K)\\,=\\,\\Theta(K^{\\frac{3-L}{2L}})$ . Since we are interested in the ratio $\\frac{\\mathcal{L}_{S R G}}{\\mathcal{L}_{D N C}}$ , we do a few changes and reparametrizations to the expressions in (7) and (8): we multiply both by 2, divide all terms in the left summands by $\\lambda_{W_{L}}$ , rewrite $\\textstyle{\\frac{r(r-1)}{2}}$ as $K$ , plug in the defined quantities, divide all the terms in the left summands by $K$ and finally replace $\\Lambda^{-\\frac{1}{L}}K^{-\\frac{1}{L}}q$ with $q$ to obtain the following expression ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\frac{1}{q^{L}+1}+L K^{\\frac{L+1}{L}}\\Lambda^{\\frac{1}{L}}q\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "for the DNC loss, and the following expression ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\frac{1}{q^{L}+1}+L K^{\\frac{L+1}{L}}\\Lambda^{\\frac{1}{L}}\\Psi(K)q\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "for the SRG loss. Using a similar trick as in the previous analysis for $L\\,=\\,3$ , we have that the minimum of the function in (10) is achieved when $q>1$ . Hence, we can lower bound (10) by ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\frac13q^{-L}+L K^{\\frac{L+1}{L}}\\Lambda^{\\frac1L}q.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "For this convex expression, we can find the optimal solution by setting to zero the derivative, which gives that the optimal solution is $(1+L)3^{-\\frac{1}{L+1}}K\\Lambda^{\\frac{1}{L+1}}$ . Similarly, we can upper bound (11) by ", "page_idx": 18}, {"type": "equation", "text": "$$\nq^{-L}+L K^{\\frac{L+1}{L}}\\Lambda^{\\frac{1}{L}}\\Psi(K)q\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "and after finding the optimal solution we get that it equals $(1+L)K\\Lambda^{\\frac{1}{L+1}}\\Psi(K)^{\\frac{L}{L+1}}$ . This allows us to conclude that ", "page_idx": 18}, {"type": "equation", "text": "$$\n{\\frac{{\\mathcal{L}}_{S R G}}{{\\mathcal{L}}_{D N C}}}={\\mathcal{O}}(K^{{\\frac{3-L}{2(L+1)}}}).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "To get the same formula when the number of classes is not of the form $\\binom{r}{2}$ , we only need simple adjustments. For this part, we will employ the upper-index notation to denote the number of classes $K$ to which the solution corresponds. First, note that the optimal value of (10) is continuous in the coefficient in front of the linear term $q$ . Therefore, if $\\mathcal{L}_{D N C}^{K}<0.499$ , then, choosing the smallest $r$ for which K \u2264 r2 := K\u00af, we see that L DK\u00afNC < 0.5 for the same set of regularization parameters, as KK\u00af \u2212K\u2212\u2212\u2212\u2192\u2212\u221e\u21921. Since the argument above does not need LDNC < 0.499 but only LDNC < 0.5, we can now use that L SK\u00afR with the same regularization parameters is still $O(K^{\\frac{3-L}{2(L+1)}})$ . Finally, choosing the second construction in Definition 11, we construct the SRG solution for $K$ classes from the SRG solution for $\\bar{K}$ classes with the same regularization parameters (thus also the same regularization as for the DNC solution with $K$ classes). To conclude, it just suffices to see that $\\mathcal{L}_{S R G}^{\\bar{K}}\\geq\\mathcal{L}_{S R G}^{K}$ because we removed columns from $H_{1}$ , decreasing its norm and the fit loss is at most as big because the columns with the worst fit loss were removed and the fit loss is an average over the columns. This concludes the proof also for general $K$ . \u53e3 ", "page_idx": 18}, {"type": "text", "text": "We conclude the section by stating and proving a few auxiliary lemmas that were used in the proof of Theorem 5. ", "page_idx": 18}, {"type": "text", "text": "Lemma 12. Consider the following optimization problem: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{w}{\\operatorname*{min}}\\left\\|w\\right\\|^{2}}\\\\ &{s.t.\\ \\boldsymbol{z}^{T}=w^{T}A_{l}T_{r}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Then, the value of the optimal solution is ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\frac{(r-1)^{2}}{\\alpha_{l}(r-2)^{2}}z^{T}T_{r}^{T}\\left(I_{r}-\\frac{3r-4}{4(r-1)^{2}}{\\bf1}_{r}{\\bf1}_{r}^{T}\\right)T_{r}z.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Proof. Multiplying the constraint with $T_{r}^{T}(T_{r}T_{r}^{T})^{-1}$ from the right we get $z^{T}T_{r}^{T}(T_{r}T_{r}^{T})^{-1}\\,=$ $w^{T}\\bar{A}_{l}$ . Now, we can use that the minimum $l_{2}$ norm solution of such a system can be computed by multiplying with the right pseudoinverse of $A_{l}$ . Thus, we get $w=A_{l}(\\overset{\\cdot}{A}_{l}^{T}A_{l})^{-1}(T_{r}T_{r}^{T})^{\\overset{\\cdot}{-1}}T_{r}z\\overset{\\cdot}{=}$ $1/\\alpha_{l}A_{l}(T_{r}T_{r}^{T})^{-1}T_{r}z$ . Then the squared norm of this is simply: ", "page_idx": 19}, {"type": "equation", "text": "$$\nw^{T}w=\\frac{1}{\\alpha_{l}^{2}}z^{T}T_{r}^{T}(T_{r}T_{r}^{T})^{-1}A_{l}^{T}A_{l}(T_{r}T_{r}^{T})^{-1}T_{r}z=\\frac{1}{\\alpha_{l}}z^{T}T_{r}^{T}(T_{r}T_{r}^{T})^{-2}T_{r}z.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Now, we know that ", "page_idx": 19}, {"type": "equation", "text": "$$\nT_{r}T_{r}^{T}=\\frac{r-2}{r-1}I_{r}+\\frac{1}{r-1}{\\bf11}^{T}=\\frac{r-2}{r-1}\\left(I+\\frac{1}{r-2}{\\bf11}^{T}\\right).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "This can be seen by looking at the structure of $\\kappa_{n}$ where two vertices have exactly one edge between them. Now we can compute the the inverse of this matrix using the Sherman-Morrison formula ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\left(I+\\frac{1}{r-2}\\mathbf{1}\\mathbf{1}^{T}\\right)^{-1}=I-\\frac{1}{2(r-1)}\\mathbf{1}\\mathbf{1}^{T}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "and the square is: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\left(I+\\frac{1}{r-2}\\mathbf{1}\\mathbf{1}^{T}\\right)^{-2}=I-\\frac{3r-4}{4(r-1)^{2}}\\mathbf{1}\\mathbf{1}^{T}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Putting this all together, the proof is complete. ", "page_idx": 19}, {"type": "text", "text": "Lemma 13. Let $2\\leq l\\leq L-2$ . Consider $\\tilde{M}_{l+1},M_{l}$ as in Definition $^{\\,g}$ of the SRG solution. Then, the following optimization problem: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\underset{W}{\\operatorname*{min}}\\left\\|W\\right\\|_{F}^{2}}\\\\ {s.t.~\\tilde{M}_{l+1}=W M_{l}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "achieves optimal value of $\\frac{r\\alpha\\iota\\!+\\!1}{\\alpha_{l}}$ . ", "page_idx": 19}, {"type": "text", "text": "Proof. This is a direct consequence of Lemma 12. Denote $\\gamma z_{0}$ a row from $\\tilde{M}_{l+1}$ which corresponds to the first row of $T_{r}$ and such that $\\|z_{0}\\|\\,=1$ . Then, $T_{r}\\gamma z_{0}=\\gamma(1,1/(r-\\bar{1}),\\ldots,1/(r-\\bar{1}))^{T}$ . Directly evaluating the expression in Lemma 12 will yield $\\gamma^{2}\\alpha_{l}^{-1}$ for a single row and thus for all rows we get the value from the lemma statement. \u53e3 ", "page_idx": 19}, {"type": "text", "text": "Lemma 14. Consider $\\tilde{M}_{L},M_{L-1}$ as in Definition $^{\\,g}$ of the SRG solution. Then, the following optimization problem: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\underset{W}{\\operatorname*{min}}\\left\\|\\boldsymbol{W}\\right\\|_{F}^{2}}\\\\ {s.t.~\\tilde{M}_{L}=\\boldsymbol{W}M_{L-1}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "achieves optimal value of ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\frac{\\alpha_{L}}{\\alpha_{L-1}}\\frac{r^{2}(r-1)^{2}}{4((r-2)(r-3)+2)}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Proof. We first need to characterize the rows of $\\tilde{M}_{L}$ . Note that $\\tilde{M}_{L}$ comes from the multiplication of $T_{r}$ and $A_{L}^{(1)}$ , see Definition 9. This operation can be seen as weighting vertices of $\\kappa_{r}$ (rows of $T_{r}$ and then looking at what the sum of the weights of adjacent vertices of each edge (column of $T_{r}$ ) is. We can easily see that the resulting vector has exactly one \u201c $-1^{\\bullet}$ entry (for the edge corresponding to the two vertices given negative weight) and exactly $\\binom{r-2}{2}$ entries with \u201c $\\cdot+1^{\\circ}$ . Therefore, it must be scaled with the inverse of (r\u22122)2(r\u22123)+ 1 to be unit norm. Now, let z1 be one of these vectors with the negative edge between first two vertices. Then, ", "page_idx": 19}, {"type": "equation", "text": "$$\nT_{r}z_{1}=\\left(-{\\frac{1}{s{\\sqrt{r-1}}}},-{\\frac{1}{s{\\sqrt{r-1}}}},{\\frac{r-3}{s{\\sqrt{r-1}}}},{\\frac{r-3}{s{\\sqrt{r-1}}}},\\cdot\\cdot\\cdot\\right)^{T},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "which can be easily derived if we imagine doing edge-wise dot-product between two vertex weightings, one with two \u201c $\\mathrm{\\nabla-1s^{\\circ}}$ for $z_{1}$ and the other type with one \u201c $\\mathbf{\\omega}^{\\cdot}+1^{\\bullet}$ representing the rows of $T_{r}$ . For the other vectors in $\\tilde{H}_{L}$ , the resulting vectors would be similar, except they would have the negative entries for different pairs of vertices of $\\kappa_{r}$ . Note that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\quad z_{1}^{T}T_{r}^{T}T_{r}z=\\cfrac{2}{s^{2}(r-1)}+\\cfrac{(r-3)^{2}(r-2)}{s^{2}(r-1)},}\\\\ &{\\quad\\quad z_{1}^{T}T_{r}^{T}\\mathbf{1}_{r}\\mathbf{1}_{r}^{T}T_{r}z=\\cfrac{\\left((r-3)(r-2)-2\\right)^{2}}{s^{2}(r-1)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Therefore, if we are optimizing for $\\gamma z_{1}$ , then an application of Lemma 12 gives ", "page_idx": 20}, {"type": "equation", "text": "$$\nw^{T}w=\\gamma^{2}\\alpha_{L-1}^{-1}\\frac{(r-1)^{2}}{(r-2)^{2}}\\left(\\frac{2}{s^{2}(r-1)}+\\frac{(r-3)^{2}(r-2)}{s^{2}(r-1)}-\\frac{3r-4}{4(r-1)^{2}}\\frac{((r-3)(r-2)-2)^{2}}{s^{2}(r-1)}\\right),\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where $w$ denotes a row of $W$ . Simplifying this expression, we get ", "page_idx": 20}, {"type": "equation", "text": "$$\nw^{T}w=\\gamma^{2}\\alpha_{L-1}^{-1}\\frac{r(r-1)}{2((r-2)(r-3)+2)}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "To conclude, it suffices to sum up $\\textstyle{\\frac{r(r-1)}{2}}$ such rows having total $l_{2}$ norm squared $\\alpha_{L}$ (and, hence, $\\gamma^{2}=\\alpha_{L},$ ), which gives ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\left\\Vert W\\right\\Vert_{F}^{2}=\\frac{\\alpha_{L}}{\\alpha_{L-1}}\\frac{r^{2}(r-1)^{2}}{4((r-2)(r-3)+2)},\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "and concludes the proof. ", "page_idx": 20}, {"type": "text", "text": "Lemma 15. For $2\\,\\le\\,l\\,\\le\\,L-1$ , consider $M_{l},\\tilde{M}_{l}$ as in Definition $^{\\,g}$ of the SRG solution. Then, $M_{l}={\\tilde{M}}_{l}$ and the eigenvalues of $M_{l}^{T}M_{l}$ are: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\mu_{1}=2\\alpha_{l}\\ \\ \\ w i t h\\,m u l t i p l i c i t y\\ \\ 1,}}\\\\ {{\\mu_{2}=\\displaystyle\\frac{r-2}{r-1}\\alpha_{l}\\ \\ \\ w i t h\\,m u l t i p l i c i t y\\ \\ r-1,}}\\\\ {{\\mu_{3}=0\\ \\ \\ w i t h\\,m u l t i p l i c i t y\\ \\displaystyle\\frac{r(r-3)}{2}.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Proof. From the definition, it readily follows that $M_{l}={\\tilde{M}}_{l}$ , so let us compute $M_{l}^{T}M_{l}$ . Looking at any row of $M_{l}$ , we see that it has non-negative equal entries of value $\\sqrt{\\alpha_{i j}}/\\sqrt{r-1}$ , where $\\textstyle\\sum_{j}\\alpha_{i j}=\\alpha_{l}$ on all the $r-1$ edges of $\\kappa_{r}$ that contain the vertex corresponding to that row. Therefore, by definition of $\\alpha_{l}$ , the sum of squares of all entries corresponding to one row type within any column is $\\alpha_{l}/(r-1)$ . Each edge (and, thus, column) contains exactly two vertices, thus the diagonal elements of $M_{l}^{T}M_{l}$ , which are the $l_{2}$ norms squared of the columns of $M_{l}$ , are simply equal to $\\frac{2\\alpha_{l}}{r\\!-\\!1}$ . There are two possible off-diagonal values. One is for the pairs of columns that correspond to edges that share a vertex and one is for those pairs that do not share a vertex. The pairs of columns whose edges do not share a vertex do not have any entries which would both be jointly positive, because either a vertex does not belong to one edge or to the other. Therefore, the value of off-diagonal entries corresponding to such pairs is simply 0. On the other hand, there is exactly one vertex that has non-zero values for both edges corresponding to columns whose edges do share a vertex \u2013 it is the shared vertex. Therefore the value of off-diagonal entries of this type is $\\frac{\\alpha_{L}}{r\\!-\\!1}$ . Crucially, the structure of the off-diagonal entries is fully determined by the graph $\\mathcal{T}_{r}$ , because two edges in $\\kappa_{r}$ share a vertex if and only if they are connected in the graph $\\mathcal{T}_{r}$ . Therefore, $M_{l}^{T}M_{l}$ can be written as a weighted sum of $I_{K}$ and the adjacency matrix $G_{r}$ of $\\tau_{r}$ , where the weight of $I_{K}$ simply corresponds to the size of the diagonal term and the weight of $G_{r}$ to the positive off-diagonal term. In conclusion, we get ", "page_idx": 20}, {"type": "equation", "text": "$$\nM_{l}^{T}M_{l}=\\frac{2\\alpha_{l}}{r-1}I_{K}+\\frac{\\alpha_{l}}{r-1}G_{r}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "As $\\tau_{r}$ is a strongly regular graph with parameters $(r(r-1)/2,2(r-2),r-2,4)$ , $G_{r}$ has a single eigenvalue equal to $2(r-2),r-1$ eigenvalues equal to $r-4$ and $r(r-3)/2$ eigenvalues equal to $-2$ , which concludes the proof. \u53e3 ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{l l}{\\displaystyle\\mu_{1}=\\frac{(r-2)(5r-19)\\alpha_{L}}{(r-2)(r-3)+2}}&{w i t h\\,m u l t i p l i c i t y\\ 1,}\\\\ {\\displaystyle\\mu_{2}=\\frac{2(r-3)^{2}\\alpha_{L}}{(r-2)(r-3)+2}}&{w i t h\\,m u l t i p l i c i t y\\ r-1,}\\\\ {\\displaystyle\\mu_{3}=\\frac{2\\alpha_{L}}{(r-2)(r-3)+2}}&{w i t h\\,m u l t i p l i c i t y\\ \\frac{r(r-3)}{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Proof. Let us compute $M_{L}^{T}M_{L}$ . Looking at any row of $M_{L}$ , we see that it has non-negative equal entries of value $\\sqrt{\\alpha_{i j}}/s$ , where $\\begin{array}{r}{s=\\sqrt{\\frac{(r-2)(r-3)}{2}+1}}\\end{array}$ and $\\textstyle\\sum_{j}\\alpha_{i j}=\\alpha_{L}$ on all edges in a subgraph of $\\kappa_{r}$ of size $r-2$ . Therefore, by definition of $\\alpha_{L}$ , the sum of squares of all entries corresponding to one row type within any column is $\\alpha_{L}/s^{2}$ . However, not all row types have non-zero value on any particular column. Namely, a row type will only have non-zero value on a column, if the row-type corresponds to such a subgraph of $\\kappa_{r}$ , which is disjoint with the edge corresponding to the column. This is because all edges outside the complete subgraph of $r-2$ vertices corresponding to the row type are assigned 0 in $M_{L}$ . Therefore, the number of row types that assign non-zero value in a particular column is equal to the number of $r-2$ vertex sets. This corresponds to the number of edges in $\\kappa_{r}$ , which is equal to $\\binom{r-2}{2}=s^{2}-1$ . Thus, the diagonal elements of $M_{L}^{T}M_{L}$ , which are the $l_{2}$ norms squared of the columns of $M_{L}$ , are simply equal to (s2\u2212s21)\u03b1L. There are two possible off-diagonal values. One is for the pairs of columns that correspond to edges that share a vertex, and one is for those pairs that don\u2019t share a vertex. Let us compute the number of row types assigning positive value to both of these columns jointly. Using the same interpretation, the columns correspond to edges and only row types that correspond to $r-2$ vertex subsets disjoint with them assign positive value to the column of that edge. If we want this to be satisfied for both rows jointly, we need to take the intersection of those $r-2$ vertex subsets, which in this case will result in an $r-3$ vertex subset. Thus, exactly $\\binom{r-3}{2}$ row types will jointly assign a positive value. Therefore, we have value (r\u22123)2(rs2\u22124)\u03b1L on these off-diagonal entries. For the pairs of columns that correspond to edges with disjoint vertices, the same intersection will now yield a set of vertices of size only $r-4$ . Therefore, the value of this off-diagonal entry is $\\frac{(r\\!-\\!4)(r\\!-\\!5)\\alpha_{L}}{2s^{2}}$ . Crucially, the structure of the off-diagonal entries is fully determined by the graph $\\mathcal{T}_{r}$ , because two edges in $\\kappa_{r}$ share a vertex if and only if they are connected in the graph ${\\mathcal{T}}_{r}$ . Therefore, $M_{L}^{T}M_{L}$ can be written as a weighted sum of $\\mathbf{1}_{K}\\mathbf{\\dot{1}}_{K}^{T},I_{K}$ and the adjacency matrix $G_{r}$ of $\\mathcal{T}_{r}$ . The weights can be determined as follows: we first subtract a multiple of $\\mathbf{1}_{K}\\mathbf{1}_{K}^{T}$ to make the smaller off-diagonal entry of $M_{L}^{T}M_{L}$ zero, then we subtract what is left of the diagonal and we take the rest to be a multiple of $G_{r}$ . In conclusion, we get ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{M_{L}^{T}M_{L}=\\!\\frac{\\displaystyle(r-4)(r-5)\\alpha_{L}}{\\displaystyle2s^{2}}{\\bf1}_{K}{\\bf1}_{K}^{T}}\\\\ &{\\qquad\\quad+\\left(\\frac{\\displaystyle(s^{2}-1)\\alpha_{L}}{\\displaystyle s^{2}}-\\frac{(r-4)(r-5)\\alpha_{L}}{2s^{2}}\\right)I_{K}}\\\\ &{\\qquad\\quad+\\left(\\frac{\\displaystyle(r-3)(r-4)\\alpha_{L}}{\\displaystyle2s^{2}}-\\frac{(r-4)(r-5)\\alpha_{L}}{2s^{2}}\\right)G_{r}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "As $\\tau_{r}$ is a strongly regular graph with parameters $(r(r-1)/2,2(r-2),r-2,4)$ , $G_{r}$ has a single eigenvalue equal to $2(r-2)$ , $r-1$ eigenvalues equal to $r-4$ and $r(r-3)/2$ eigenvalues equal to $-2$ . The summation with $I_{K}$ only shifts all the eigenvalues. The term ${\\bf1}_{K}{\\bf1}_{K}^{T}$ has only one non-zero eigenvalue, and the eigenvector is identical to that of the eigenvector corresponding to the dominant eigenvalue of $G_{r}$ . This concludes the proof. \u53e3 ", "page_idx": 21}, {"type": "text", "text": "Lemma 17. Assuming DNC1, let $M_{L}$ be the mean matrix of the last layer. Let $M_{L}=U\\Sigma V^{T}$ be the full SVD of $M_{L}$ and let $\\sigma_{i}$ , $i\\in[K]$ , be the singular values of $M_{L}$ . Then, the following optimization problem: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{W_{L}}\\frac{1}{2K}\\left\\|W_{L}M_{L}-I_{K}\\right\\|_{F}^{2}+\\frac{\\lambda_{W_{L}}}{2}\\left\\|W_{L}\\right\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "attains the minimum of ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{\\lambda_{W_{L}}}{2}\\sum_{i=1}^{K}\\frac{1}{\\sigma_{i}^{2}+K\\lambda_{W_{L}}}.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "Proof. The proof consists in a direct computation. Let $W_{L}^{*}$ denote the minimizer. Computing the gradient and setting it to 0 gives that ", "page_idx": 22}, {"type": "equation", "text": "$$\nW_{L}^{*}=M_{L}^{T}\\big(M_{L}M_{L}^{T}+\\lambda_{W_{L}}K I_{d_{L}}\\big)^{-1}=V\\Sigma^{T}\\big(\\Sigma\\Sigma^{T}+\\lambda_{W_{L}}K I_{d_{L}}\\big)^{-1}U^{T},\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "which readily implies that ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\displaystyle\\|\\boldsymbol{W}_{L}^{*}\\|_{F}^{2}=\\displaystyle\\sum_{i=1}^{K}\\frac{\\sigma_{i}^{2}}{(\\sigma_{i}^{2}+\\lambda_{W_{L}}K)^{2}},}\\\\ {\\displaystyle\\left\\|\\boldsymbol{W}_{L}\\boldsymbol{M}_{L}-\\boldsymbol{I}_{K}\\right\\|_{F}^{2}=\\displaystyle\\left\\|\\boldsymbol{V}\\boldsymbol{\\Sigma}^{T}(\\boldsymbol{\\Sigma}\\boldsymbol{\\Sigma}^{T}+\\lambda_{W_{L}}K\\boldsymbol{I}_{d_{L}})^{-1}\\boldsymbol{\\Sigma}\\boldsymbol{V}^{T}-\\boldsymbol{V}\\boldsymbol{V}^{T}\\right\\|_{F}^{2}}\\\\ {\\displaystyle=\\displaystyle\\sum_{i=1}^{K}\\left(\\frac{\\sigma_{i}^{2}}{\\sigma_{i}^{2}+\\lambda_{W_{L}}K}-1\\right)^{2}=\\displaystyle\\sum_{i=1}^{K}\\frac{K^{2}\\lambda_{W_{L}}^{2}}{(\\sigma_{i}^{2}+\\lambda_{W_{L}}K)^{2}},}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "thus concluding the argument. ", "page_idx": 22}, {"type": "text", "text": "Lemma 18. The optimization problem ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{A,B;C=A B}\\quad\\frac{\\lambda_{A}}{2}\\left\\|A\\right\\|_{F}^{2}+\\frac{\\lambda_{B}}{2}\\left\\|B\\right\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "attains the minimum of $\\sqrt{\\lambda_{A}\\lambda_{B}}\\left\\|C\\right\\|_{*}$ , and the minimizers are of the form $A^{*}=\\gamma_{A}U\\Sigma^{1/2}R^{T},B^{*}=$ $\\gamma_{B}R\\Sigma^{1/2}V^{T}$ . Here, the constants $\\gamma_{A},\\gamma_{B}$ only depend on $\\lambda_{A},\\lambda_{B};U\\Sigma V^{T}$ is the SVD of $C$ ; and $R$ is an orthogonal matrix. ", "page_idx": 22}, {"type": "text", "text": "Proof. See Lemma C.1 of [51]. ", "page_idx": 22}, {"type": "text", "text": "A.2 No within-class variability is still optimal ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Theorem 6. The optimal solutions of the $L$ -DUFM (1) exhibit DNC1 at layer $L$ , i.e., ", "page_idx": 22}, {"type": "equation", "text": "$$\nH_{L}^{*}=M_{L}^{*}\\otimes{\\bf1}_{n}^{T}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "holds for any optimal solution $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ of the $L$ -DUFM problem. ", "page_idx": 22}, {"type": "text", "text": "Proof. Step 1: Reduction to $n\\ =\\ 1$ . In the first step, assume by contradiction that there exists an optimal solution of (1) with regularization parameters $\\left(\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ denoted as $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ which does not exhibit deep neural collapse at layer $L$ . This means that there exist indices $c,i,j$ s.t. $h_{c i}^{L}\\neq h_{c j}^{L}$ . Let us construct two solutions of the $n=1$ $L$ -DUFM. They will share the weight matrices which will equal $(W_{1}^{*},\\ldots,W_{L}^{*})$ \u2013 the weight matrices of the original solution. To construct the features, for every class except the $c$ -th, pick any sample and share it between both solutions. For the class $c$ , take the samples $h_{c i}^{L},h_{c j}^{L}$ and put one in one solution and the other one in the other solution. Denote $H_{1}^{(1)},H_{1}^{(2)}$ the two $n\\,=\\,1$ sample matrices. It is not hard to see that both $(H_{1}^{(1)},W_{1}^{*},\\dots,W_{L}^{*})$ and $(H_{1}^{(2)},W_{1}^{*},\\dots,W_{L}^{*})$ are optimal solutions of (1) with regularization parameters $\\left(n\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ . To prove it, assume by contradiction that, without loss of generality, $(H_{1}^{(2)},W_{1}^{*},\\dots,W_{L}^{*})$ is not an optimal solution of the corresponding problem. Then, there exists an alternative $(H_{1}^{(0)},\\hat{W}_{1}^{*},\\dots,\\hat{W}_{L}^{*})$ that achieves smaller loss for this problem. Let us duplicate all the samples of $\\hat{H}_{1}^{(0)}$ for $n$ times, thus constructing $\\hat{H}_{1}^{*}=H_{1}^{(0)}\\otimes{\\bf1}_{n}^{T}$ . The solution $(\\hat{H}_{1}^{*},\\hat{W}_{1}^{*},\\dots,\\hat{W}_{L}^{*})$ has the same loss under the $L$ -DUFM problem with regularization parameters $\\left(\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ as the solution $(H_{1}^{(0)},\\hat{W}_{1}^{*},\\dots,\\hat{W}_{L}^{*})$ for the $L$ -DUFM with $n\\,=\\,1$ and parameters $\\left(n\\lambda_{H_{1}},\\lambda_{W_{1}},\\ldots,\\lambda_{W_{L}}\\right)$ . This is easy to see from the separability of both $\\|H_{1}\\|_{F}^{2}$ and the fit part of the loss in (1) w.r.t. the columns of $H_{1}$ . For the same reasons, the loss functions for $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ in the original problem equals the loss function of the solutions $(H_{1}^{(1)},W_{1}^{*},\\dots,W_{L}^{*})$ or $(H_{1}^{(2)},W_{1}^{*},\\dots,W_{L}^{*})$ in the reduced problem. In fact, if this was not the case, there would need to be an inequality between the losses exhibited by two different columns of $H_{1}$ belonging to the same class, from which we could arrive at a contradiction by taking the better column and multiplying it to all columns within that class, thereby obtaining a better solution. This means that the loss of $(\\bar{H}_{1}^{*},\\hat{W}_{1}^{*},\\ldots,\\hat{W}_{L}^{*})$ in the original problem is smaller than the loss of $(H_{1}^{*},W_{1}^{*},\\dots,W_{L}^{*})$ , which is a contradiction. ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "Step 2: Excluding an aligned case. By assumption we know that not only $H_{1}^{(1)}$ and $H_{1}^{(2)}$ differ in the $c$ -th column (from now on we assume without loss of generality that it is the first column) but also H(L1) and $H_{L}^{(2)}$ do. Denote for simplicity the first (differing) columns of $H_{L}^{(1)}$ ) nd H(L2) a as $x,y$ respectively. We now show that it is not possible that $y=\\alpha x$ . First, $\\alpha$ has to be non-negative since $x,y$ are entry-wise non-negative given that they come after the application of $\\sigma$ . Assume w.l.o.g. $\\alpha>1$ (otherwise, we can just exchange the roles of $x$ and $y$ ). Consider a reduced problem where we only optimize for the size of the first column of either $H_{L}^{(1)}$ or (L2 ), focusing on that part of the problem (1) which is relevant for this column, being: ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{t\\geq0}\\,\\frac{1}{2N}\\left\\|t W_{L}h_{11}^{L(i)}-e_{1}\\right\\|_{2}^{2}+\\frac{n\\lambda_{H_{1}}}{2}\\left\\|t h_{11}^{1(i)}\\right\\|_{2}^{2}.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "This problem is strongly convex, quadratic and simple enough to give the following: if $\\alpha>1$ , then $\\left|\\left|h_{11}^{1(1)}\\right|\\right|_{2}^{2}>\\left|\\left|h_{11}^{1(2)}\\right|\\right|_{2}^{2}$ and simultaneously $\\left\\|W_{L}x-e_{1}\\right\\|_{2}^{2}>\\left\\|W_{L}y-e_{1}\\right\\|_{2}^{2}$ . This means that $H_{1}^{(2)}$ is a strictly better solution than $H_{1}^{(1)}-\\mathbf{a}$ contradiction. ", "page_idx": 23}, {"type": "text", "text": "Step 3: Contradiction by zero gradient condition. By optimality of both solutions we get ", "text_level": 1, "page_idx": 23}, {"type": "equation", "text": "$$\n\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(1)},W_{1}^{*},\\ldots,W_{L}^{*})}=0=\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(2)},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "An application of the chain rule gives ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}}{\\partial W_{L}}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\frac{\\partial\\tilde{H}_{L+1}}{\\partial W_{L}}+\\lambda_{W_{L}}W_{L}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}H_{L}^{T}+\\lambda_{W_{L}}W_{L},\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where $\\tilde{H}_{L+1}$ is the output of our model. Plugging this back to the previous equation and using that $W_{L}^{*}$ is the same in both expressions, we get ", "page_idx": 23}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\Bigg|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(1)},W_{1}^{*},\\ldots,W_{L}^{*})}\\left(H_{L}^{(1)}\\right)^{T}=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(2)},W_{1}^{*},\\ldots,W_{L}^{*})}(H_{L}^{(2)})^{T}\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Let us denote ", "page_idx": 23}, {"type": "equation", "text": "$$\nA=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(1)},W_{1}^{*},\\ldots,W_{L}^{*})}\\,,\\,\\ B=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{L+1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{(2)},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "Due to the separability of ${\\mathcal{L}}_{F}$ with respect to the columns of $H_{1}$ (and, thus, also of $H_{l},\\tilde{H_{l}}$ for all $l\\le L+1)$ , we get that the matrices $A,B$ can only differ in their first columns and are identical otherwise. We denote these columns $a,b$ for $A,B$ , respectively. This implies that $a x^{T}=b y^{T}$ . ", "page_idx": 23}, {"type": "text", "text": "Now we exclude a few cases. First, neither $a$ nor $b$ can be zero, because by the exact formula that exists for them, this would mean that exact fit was achieved for either of the columns. This is impossible with non-zero weight-decay, because decreasing the norm of the column of $H_{1}^{(1)}$ or $H_{1}^{(2)}$ that achieves the exact fti by a sufficiently small value would necessarily lead to an improvement on the objective value. Moreover, if $x=y=0$ , then this is a contradiction with the assumption that $x\\neq y$ . Finally, the case $x\\neq y=0$ or $0=x\\neq y$ is excluded already in the step 2. ", "page_idx": 23}, {"type": "text", "text": "Thus we get $x,y,a,b$ are all non-zero. Looking at any fixed row (column) of $a x^{T}$ and $b y^{T}$ we see that necessarily $x,y\\ (a,b)$ are aligned. However, this case is already solved in step 2 and leads to $x=y$ , which is the contradiction. This concludes the proof. \u53e3 ", "page_idx": 23}, {"type": "text", "text": "Theorem 8. Denote by $L{-}D U F M_{\\epsilon}$ the equivalent of (1), with $\\sigma$ replaced by $\\sigma_{\\epsilon}$ . Let ${\\cal D}\\_=$ $\\operatorname*{max}\\{d_{2},d_{3},\\ldots,d_{L}\\}$ and $\\bar{\\lambda}=\\lambda_{H_{1}}\\lambda_{W_{1}}\\ldots\\bar{\\lambda}_{W_{L}}$ , with the regularization parameters upper bounded by $1/(L+1)$ . Then, for any globally optimal solution of the L-DUFM\u03f5 problem, the distance between any two feature vectors of the same class in any layer is at most ", "page_idx": 24}, {"type": "equation", "text": "$$\n{\\frac{6\\epsilon\\sqrt{D(L+1)}}{(L+1)^{L+1}{\\bar{\\lambda}}\\sqrt{n}}}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Proof. In order not to mix approximation technical details with the gist of the proof, we split the argument into two parts: in the first part, we provide a heuristic for $\\epsilon=0$ by assuming that ReLU is differentiable at 0; in the second part, we discuss what changes in the proof if we use the relaxation and then execute a technical computation that bounds the error based on the strength of the approximation (the size of $\\epsilon$ ). It is useful to split the loss function $\\mathcal{L}$ into the two terms ${\\mathcal{L}}_{F}$ and $\\displaystyle{\\mathcal{L}}_{R}$ . The former represents the fit part of the loss (which penalizes for deviation of the predictions from $Y$ ), and the latter represents the regularization part of the loss. ", "page_idx": 24}, {"type": "text", "text": "Part 1: Heuristic for $\\epsilon=0$ . We start identically to the proof of Theorem 6. As in Step $^{\\,l}$ of that argument, if we have a globally optimal solution that does not exhibit DNC1 in the first layer, we can construct two different solutions of the $n=1$ $L$ -DUFM problem where the two solutions only differ in the first column of the $H_{1}$ matrix. Let us denote two such constructions $H_{1}^{x}\\neq H_{1}^{y}$ , where we denote $x\\neq y$ , to be the mentioned first columns, respectively. We emphasize that $H_{1}^{x},H_{1}^{y}$ both form optimal solutions of the $n=1$ $L$ -DUFM with the same tuple of weight matrices $(\\bar{W}_{1}^{*},\\bar{\\cdot}\\cdot\\cdot,W_{L}^{*})$ . In particular, this means that ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}=0=\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "An application of the chain rule gives ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}}{\\partial W_{1}}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}\\frac{\\partial\\tilde{H}_{2}}{\\partial W_{1}}+\\lambda_{W_{1}}W_{1}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}H_{1}^{T}+\\lambda_{W_{1}}W_{1}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Plugging this back to the previous equation and using that the $W_{1}^{*}$ is the same in both expressions, we get ", "page_idx": 24}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}\\bigg|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}\\big(H_{1}^{x}\\big)^{T}=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}(H_{1}^{y})^{T}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Let us denote ", "page_idx": 24}, {"type": "equation", "text": "$$\nA=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}\\,,\\;\\;B=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{2}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Due to the separability of ${\\mathcal{L}}_{F}$ with respect to the columns of $H_{1}$ (and, thus, also $H_{l}$ for all $l\\leq L$ ), we get that the matrices $A,B$ can only differ in their first columns and are identical otherwise. We denote these columns $a,b$ for $A,B$ , respectively. This implies that $a x^{T}=b y^{T}$ . ", "page_idx": 24}, {"type": "text", "text": "Now, we treat a few cases. First, assume $a=b=0$ . Since it holds that $(H_{1}^{x},W_{1}^{*},\\cdot\\cdot\\cdot,W_{L}^{*})$ is the optimal solution, then necessarily ", "page_idx": 24}, {"type": "equation", "text": "$$\n0=\\left.\\frac{\\partial\\mathcal{L}}{\\partial h_{11}^{1}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}=(W_{1}^{*})^{T}a+\\lambda_{H_{1}}x\\iff0=x.\n$$", "text_format": "latex", "page_idx": 24}, {"type": "text", "text": "Similarly, we get $y=0$ , but that is a contradiction with $x\\neq y$ . Therefore, at least one of $a,b$ is non-zero. Next assume $x=0$ . Then $\\ a x^{T}=0$ . If $b=0$ then $y=0$ and we have a contradiction. On the other hand, if $b\\ne0$ , then the row of $b y^{T}$ that corresponds to a non-zero entry of $b$ must be zero and thus $y=0$ . Similarly, if $y=0$ we can get $x=0$ . ", "page_idx": 24}, {"type": "text", "text": "Let us therefore assume $x,y$ are both non-zero, which also implies $a,b$ are both non-zero. Looking at any fixed row (column) of $\\stackrel{.}{a}\\!x^{T}$ and $b y^{T}$ we see that necessarily $x,y\\ (a,b)$ are aligned. Let us write $x=\\alpha y$ and $\\alpha a=b$ for some $\\alpha\\neq0$ . We will first show that if $\\alpha>0$ then necessarily $\\alpha=1$ and $x=y$ . For this, let us fix any ray $r\\in\\mathbb{R}^{d_{1}}$ . The ray $r$ represents a set of possible first columns in ", "page_idx": 24}, {"type": "text", "text": "$H_{1}$ . Let us fix any $(W_{1},\\ldots,W_{L})$ . Since $\\mathcal{L}$ is separable in the columns of $H_{1}$ , we can consider an optimization over $\\beta\\geq0$ to minimize $\\mathcal{L}$ on $(\\beta r,W_{1},\\ldots,W_{L})$ . However, ${\\mathcal{L}}_{F}$ is convex by assumption and the mapping $h_{11}^{1}\\to h_{11}^{L}$ is ray-linear, therefore ${\\mathcal{L}}_{F}$ is convex in $\\beta$ . Moreover $\\mathcal{L}_{R}$ is strongly convex in $h_{11}^{1}$ and therefore $\\mathcal{L}$ is strongly convex in $\\beta$ . This means it has a unique optimal solution $\\beta^{*}$ . ", "page_idx": 25}, {"type": "text", "text": "We have just showed that, if $\\alpha>0$ , then since $x,y$ are aligned and thus lie on the same ray and are both optimal together with the same tuple of weight matrices, they must necessarily be identical and so $\\alpha=1,x=y$ . This is a contradiction and thus we are left with the case $\\alpha<0$ . Denote $s=W_{1}^{*}x$ , $t\\,=\\,W_{1}^{*}y$ . From linearity, we have $s\\,=\\,\\alpha t$ . Note that if $s\\,=\\,t\\,=\\,0$ , then necessarily $x=y=0$ because they don\u2019t have any effect on ${\\mathcal{L}}_{F}$ and they minimize $\\mathcal{L}$ at 0. Thus, $s,t$ are non-zero and negative entries of $s$ are positive entries of $t$ and vice-versa. This means that $\\sigma(s)$ and $\\sigma(t)$ have different sets of positive entries. However, from the optimality of the both solutions we know: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{2}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}=0=\\left.\\frac{\\partial\\mathcal{L}}{\\partial W_{2}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Again, using the chain rule we get: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}}{\\partial W_{2}}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}\\frac{\\partial\\tilde{H}_{3}}{\\partial W_{2}}+\\lambda_{W_{2}}W_{2}=\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}H_{2}^{T}+\\lambda_{W_{2}}W_{2}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Plugging this back to the previous equation and using that $W_{2}^{*}$ is the same in both expressions, we get ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}\\bigg|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}\\big(H_{2}^{x}\\big)^{T}=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}(H_{2}^{y})^{T}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Let us denote ", "page_idx": 25}, {"type": "equation", "text": "$$\nC=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{x},W_{1}^{*},\\ldots,W_{L}^{*})}\\,,\\;\\;D=\\left.\\frac{\\partial\\mathcal{L}_{F}}{\\partial\\tilde{H}_{3}}\\right|_{(H_{1},W_{1},\\ldots,W_{L})=(H_{1}^{y},W_{1}^{*},\\ldots,W_{L}^{*})}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "Due to the separability of ${\\mathcal{L}}_{F}$ with respect to the columns of $H_{1}$ (and, thus, also $H_{l}$ for all $l\\leq L$ ), we get that the matrices $C,D$ can only differ in their first columns and are identical otherwise. We denote these columns $c,d$ for $C,D$ respectively. This implies that $c\\sigma(s)^{T}=d\\sigma(t)^{T}$ . ", "page_idx": 25}, {"type": "text", "text": "As above, if either $c$ or $d$ is zero, using the chain rule we would get that $x$ or $y$ (respectively) are zero too, which cannot happen. Therefore, both $c$ and $d$ are non-zero and $\\sigma(s),\\sigma(t)$ must be aligned. Since they are non-zero, non-negative and with different supports, we have reached a contradiction. This proves that $\\alpha<0$ is also impossible and the only possible case is $\\alpha=1$ , but that forces $x=y$ , which is also a contradiction. ", "page_idx": 25}, {"type": "text", "text": "Part 2: Relaxation to $\\mathbf{ReLU}_{\\epsilon}$ . The difficulty in making the previous heuristic rigorous is that ReLU is not differentiable at 0 and, thus, we do not have the desired analytical statement that global solutions must necessarily admit zero derivative (because the loss might not be differentiable at them at all). If we tried to use the same proof as in part $^{\\,l}$ with the differentiable relaxed version of ReLU \u2013 $\\mathbf{ReLU}_{\\epsilon}$ , an issue would occur when showing that, if $x,y$ are aligned and $\\alpha\\geq0$ , then $\\alpha$ must be 1. The reason is that the mapping $h_{11}^{1}\\to h_{11}^{L}$ is no longer ray-linear and the corresponding optimization problem on any fixed ray is no longer quadratic and strongly convex. However, we can prove that the optimization problem admits a solution that is close to the solution of the corresponding ReLU optimization problem. For this, let us fix any direction $r$ such that $\\|r\\|=1$ and an optimization parameter $t\\geq0$ , and define the following two losses: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle{\\cal L}_{0}(t,r)=\\frac{1}{2K}\\left\\|W_{L}^{*}\\sigma(W_{L-1}^{*}\\sigma(\\dots W_{2}^{*}\\sigma(W_{1}^{*}t r)\\dots))-e_{1}\\right\\|_{F}^{2}+\\frac{n\\lambda_{H_{1}}}{2}t^{2},}}\\\\ {{\\displaystyle{\\cal L}_{\\epsilon}(t,r)=\\frac{1}{2K}\\left\\|W_{L}^{*}\\sigma_{\\epsilon}(W_{L-1}^{*}\\sigma_{\\epsilon}(\\dots W_{2}^{*}\\sigma_{\\epsilon}(W_{1}^{*}t r)\\dots))-e_{1}\\right\\|_{F}^{2}+\\frac{n\\lambda_{H_{1}}}{2}t^{2}.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "We now bound $\\operatorname*{nax}_{t\\ge0}|L_{0}(t,r)-L_{\\epsilon}(t,r)|$ . For this, we fix any $t\\geq0$ , and bound the accumulated $l_{2}$ error of using $\\sigma_{\\epsilon}$ instead of $\\sigma$ throughout the layers. For this, a useful statement that we will need is the following: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\frac{\\lambda_{W_{L}}}{2}\\left\\|\\boldsymbol{W}_{L}^{*}\\right\\|_{F}^{2}=\\frac{\\lambda_{W_{L-1}}}{2}\\left\\|\\boldsymbol{W}_{L-1}^{*}\\right\\|_{F}^{2}=\\cdot\\cdot\\cdot=\\frac{\\lambda_{W_{1}}}{2}\\left\\|\\boldsymbol{W}_{1}^{*}\\right\\|_{F}^{2}=\\frac{n\\lambda_{H_{1}}}{2}\\left\\|\\boldsymbol{H}_{1}^{*}\\right\\|_{F}^{2}\\leq\\frac{1}{2(L+1)}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "This is true because, by a simple computation, we get that the terms must be balanced and the inequality comes from the fact that the solution $(0,0,\\ldots,0)$ achieves full loss $1/2$ in the $L$ -DUFM as well as $L{\\mathrm{-DUFM}}_{\\epsilon}$ problems and, thus, $\\mathcal{L}_{R}$ is trivially upper-bounded by this. This implies that, for each Wl (and H1), \u2225Wl\u2225\u2264\u2225Wl\u2225F \u2264\u221a(L+11)\u03bbW. ", "page_idx": 26}, {"type": "text", "text": "For ease of exposition, we set $t=1$ (the same argument would work for all $t$ ). We see that $W_{1}r$ does not introduce any $l_{2}$ error\u221a. Then, the $l_{2}$ error that is introduced in the application of the ReLU is trivially upper-bounded by $\\epsilon\\sqrt{d_{2}}$ . After applying $W_{2}$ , we can use the bound on the operator norm $\\lVert W_{2}\\rVert$ obtained above to upper bound the propagated $l_{2}$ error by ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\frac{1}{\\sqrt{(L+1)\\lambda_{W_{2}}}}\\epsilon\\sqrt{d_{2}}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "After that, we obtain an additive $l_{2}$ error of $\\epsilon\\sqrt{d_{3}}$ by applying $\\sigma_{\\epsilon}$ , which gives a total $l_{2}$ error of ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\frac{1}{\\sqrt{(L+1)\\lambda_{W_{2}}}}\\epsilon\\sqrt{d_{2}}+\\epsilon\\sqrt{d_{3}}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Then, again, we multiply this whole expression with $\\frac{1}{\\sqrt{(L+1)\\lambda_{W_{3}}}}$ to account for the multiplication by $W_{3}$ . Inductively, the upper bound on the $l_{2}$ error in the output space is ", "page_idx": 26}, {"type": "equation", "text": "$$\n\\epsilon\\sum_{l=2}^{L}\\frac{\\sqrt{d_{l}}}{(L+1)^{\\frac{L-l+1}{2}}}\\prod_{j=l}^{L}\\frac{1}{\\sqrt{\\lambda_{W_{j}}}}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "This can be further upper bounded as ", "page_idx": 26}, {"type": "equation", "text": "$$\n{\\frac{\\epsilon{\\sqrt{D}}\\sqrt{\\lambda_{H_{1}}\\lambda_{W_{1}}}}{(L+1)^{\\frac{L-1}{2}}{\\sqrt{\\lambda}}}}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Using the triangle inequality, the upper bound on $|L_{0}(t,r)-L_{\\epsilon}(t,r)|$ is this expression squared. On the other hand, the second derivative of $\\boldsymbol{L}_{0}(t,\\boldsymbol{r})$ with respect to $t$ is lower bounded by $n\\lambda_{H_{1}}$ . ", "page_idx": 26}, {"type": "text", "text": "Given two functions $f_{1}$ and $f_{2}$ , with $f_{1}$ strongly convex with second derivative at least $c$ and $f_{2}$ everywhere at most $d$ distant from $f_{1}$ , then the distance between their global minimizers is at most $2\\sqrt{d/c}$ . Applying this to our case, we get that the distance between the minimizers $t_{0}$ and $t_{\\epsilon}$ of $L_{0}(t,r)$ and $L_{\\epsilon}(t,r)$ is at most ", "page_idx": 26}, {"type": "equation", "text": "$$\n{\\frac{2\\epsilon{\\sqrt{D(L+1)}}}{(L+1)^{\\frac{L+1}{2}}{\\sqrt{\\bar{\\lambda}{n}}}}}.\n$$", "text_format": "latex", "page_idx": 26}, {"type": "text", "text": "Since the ray $r$ is unit-norm, this is also the upper bound on the distance between two feature vectors of any globally optimal solution in the first layer. To obtain the upper bound on the distance between two vectors in any layer, we proceed as follows. ", "page_idx": 26}, {"type": "text", "text": "Assume we have two input vectors of the first class (now we know they need to be aligned): $x^{1},y^{1}=\\alpha^{1}x^{1}$ , where $\\alpha^{\\dim}>1$ . As before, $\\tilde{x}^{l},x^{l},\\tilde{y}^{l},y^{l}$ are the $l$ -th layer representations of these vectors before and after \u03c3\u03f5. If we would compute\u2202\u2202WLl with respect to any layer $l\\geq2$ and used the same arguments as in part 1 (that still carry to the analysis for $\\sigma_{\\epsilon}$ ), we would find out that in each layer, we need to have $y^{l}\\,=\\,\\alpha^{l}x^{l}$ . Moreover, we can assume that $\\tilde{x}^{l},x^{l},\\tilde{y}^{l},y^{l}$ are non-zero at all layers because otherwise the same argument in part $^{\\,l}$ would trivialize the rest of the proof. By a simple inductive argument, since $\\alpha_{1}>1$ , we know that $\\alpha_{2}>1$ as well because $\\sigma_{\\epsilon}$ is strictly increasing on $[0,\\infty)$ . Similarly, $\\alpha_{l}>1$ for all $l$ . Note that, if there exists at least one index $i$ on which $\\boldsymbol{x}_{i}^{l}$ is bigger or equal than $\\epsilon$ , then necessarily $\\alpha^{l}=\\alpha^{l-1}$ , because $\\sigma_{\\epsilon}$ is the identity on inputs of at least $\\epsilon$ , and the $\\alpha_{l}$ can be uniquely determined from $y_{i}^{l}/x_{i}^{l}=y_{i}^{l-1}/x_{i}^{l-1}$ li\u22121. Having \u03b1l = \u03b1l\u22121 makes us have more control over the distance between $x^{l}$ and $y^{l}$ . If this fails to hold at some layer, we need a separate analysis. ", "page_idx": 26}, {"type": "text", "text": "For this, let $l_{0}$ denote the first layer (assuming it exists), where $\\tilde{x}^{l_{0}}$ does not have any entries that are bigger or equal than $\\epsilon$ . This means that $\\left\\|x^{l_{0}}\\right\\|\\leq\\epsilon\\sqrt{d_{l_{0}}}$ . We now compute the maximal possible norm of $y^{l_{0}}$ . Since $\\alpha_{1}=\\alpha_{2}=\\cdot\\cdot\\cdot=\\alpha_{l_{0}-1}$ , for all $2\\leq l<l_{0}$ and for each index $i$ , either $\\tilde{x}_{i}^{l},\\tilde{y}_{i}^{l}\\leq\\epsilon$ or $\\epsilon\\leq\\tilde{x}_{i}^{l},\\tilde{y}_{i}^{l}$ . Otherwise, since $\\sigma_{\\epsilon}(x)<x\\,\\forall x\\in(0,\\epsilon)$ , $y_{i}^{l}/x_{i}^{l}>\\alpha_{l}$ , a contradiction. Thus, we get $\\left\\|{\\tilde{x}}^{l}-{\\tilde{y}}^{l}\\right\\|\\geq\\left\\|x^{l}-y^{l}\\right\\|.$ Therefore, $\\left\\|x^{l}-y^{l}\\right\\|$ can only grow by applying $W_{l}$ . Thus, after applying $\\dot{W}_{1},\\ensuremath{W_{2}},\\dot{\\ldots},\\ddot{W}_{l_{0}-1}$ and using the operator norm bound with all of the matrices, we get ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "equation", "text": "$$\n\\left\\|x^{l}-y^{l}\\right\\|\\leq\\frac{2\\epsilon\\sqrt{D(L+1)}}{(L+1)^{\\frac{L+1}{2}}\\sqrt{\\bar{\\lambda}n}}\\frac{1}{(L+1)^{\\frac{l_{0}-1}{2}}\\sqrt{\\lambda_{W_{1}}\\lambda_{W_{2}}\\cdot\\cdot\\cdot\\lambda_{W_{l_{0}-1}}}}.\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Combining with $\\left\\|x^{l_{0}}\\right\\|\\leq\\epsilon\\sqrt{d_{l_{0}}}$ and using the triangle inequality, we get ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\left\\|y^{l}\\right\\|\\leq\\frac{2\\epsilon\\sqrt{D(L+1)}}{(L+1)^{\\frac{L+1}{2}}\\sqrt{\\bar{\\lambda}n}}\\frac{1}{(L+1)^{\\frac{l_{0}-1}{2}}\\sqrt{\\lambda_{W_{1}}\\lambda_{W_{2}}\\ldots\\lambda_{W_{l_{0}-1}}}}+\\epsilon\\sqrt{d_{l_{0}}}.\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Applying the operator norm bound with $W_{l_{0}},W_{l_{0}+1},\\ldots,W_{L-1}$ , we get: ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left\\|y^{L}\\right\\|\\leq\\frac{2\\epsilon\\sqrt{D(L+1)}}{(L+1)^{\\frac{L+1}{2}\\sqrt{\\lambda n}}}\\frac{1}{(L+1)^{\\frac{L-1}{2}}\\sqrt{\\lambda_{W_{1}}\\lambda_{W_{2}}\\ldots\\lambda_{W_{L-1}}}}}\\\\ &{\\qquad\\qquad\\qquad+\\,\\epsilon\\sqrt{d_{l_{0}}}\\frac{1}{(L+1)^{\\frac{L-l_{0}}{2}}\\sqrt{\\lambda_{W_{l_{0}}}\\lambda_{W_{l_{0}+1}}\\ldots\\lambda_{W_{L-1}}}}}\\\\ &{\\qquad\\leq\\frac{3\\epsilon\\sqrt{D(L+1)}}{(L+1)^{L+1}\\bar{\\lambda}\\sqrt{n}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Since $\\|x^{L}\\|\\leq\\|y^{L}\\|$ we can use the triangle inequality again to obtain the final: ", "page_idx": 27}, {"type": "equation", "text": "$$\n\\left\\|x^{L}-y^{L}\\right\\|\\leq{\\frac{6\\epsilon\\sqrt{D(L+1)}}{(L+1)^{L+1}{\\bar{\\lambda}}\\sqrt{n}}}.\n$$", "text_format": "latex", "page_idx": 27}, {"type": "text", "text": "Note that the same bound is an upper bound for any layer, since in each layer we are increasing the upper bound by at least a factor $(L+1)^{-1/2}\\lambda_{W_{l}}^{-1/2}$ . ", "page_idx": 27}, {"type": "text", "text": "In case such a layer $l_{0}$ does not exist, the upper bound above is still valid, since we can simply use the error propagation through all the layers, as we did for $l<l_{0}$ in the previous case. We would arrive at the same bound as above but with 4 instead of 6 as a multiplicative factor (because we would not introduce the additive error $\\epsilon\\sqrt{d_{l_{0}}})$ . \u53e3 ", "page_idx": 27}, {"type": "text", "text": "B Further experimental evidence ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "B.1 $L$ -DUFM experiments ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Experiments on small number of classes and layers. For $L=3$ , we weren\u2019t able to find any solutions that would outperform DNC for $K\\leq6$ . For $K=7$ , the difference in the losses is extremely small. For $K=6$ , we did find some low rank solutions, but these were either slightly worse than DNC or the losses were the same up to four decimal places. Already for $L\\geq4$ , we find low-rank solutions for all $K\\geq3$ . We present some of them for $K\\in\\{3,4,5\\}$ in Figure 5. Note, that all these solutions were found automatically by gradient descent through the optimization process. ", "page_idx": 27}, {"type": "text", "text": "We specifically highlight the solution for $K=4$ , as it represents another graph structure different from SRG. Namely, this solution is based on the square graph. We see that each column (edge) has positive scalar product with exactly two other columns (the corresponding edges share a vertex), and it is orthogonal to one other column (the non-touching sides of a square). Each row (vertex) has only two positive values, and these correspond to the two sides (edges) to which they belong. ", "page_idx": 27}, {"type": "text", "text": "Experiments on large number of classes or layers. For large $L$ or $K$ , the behavior of the low-rank solutions is slightly different from the behavior when both $L$ and $K$ are moderate. When $l$ is close to $L$ , it no longer holds that $\\tilde{M}_{l}=M_{l}$ , and the rank of $M_{l}$ is larger as the singular values do not decay sharply to 0. However, we note that the singular values are rather small and, thus, it is not clear whether they would disappear with a longer training (we trained for 200000 steps of full gradient descent with learning rate 0.5). In Figure 6, we take $L=7,K=15$ , and weight decay 0.0025 in all layers. We highlight that ${\\tilde{M}}_{6}\\neq M_{6}$ and the singular values of $M_{6}$ are small but non-zero after the 3 dominant values. We also highlight that the rank of previous layers is 3, which is remarkably small (and also smaller than the rank of the SRG solution). ", "page_idx": 27}, {"type": "image", "img_path": "0jld45XGgJ/tmp/06c03f7c30d1a3a9e009b47f396cfbe9836363ff34d5cc12546f528d01476d7c.jpg", "img_caption": ["Figure 5: 4-DUFM training for $K=3$ (top), $K=4$ (middle), and $K=5$ (bottom). Left: Loss progression, also decomposed into the fit and regularization terms. Middle left: Visualization of the matrix $M_{3}$ . Middle right: Visualization of the matrix $\\tilde{M}_{4}$ . Right: Visualization of the matrix $M_{3}^{T}M_{3}$ . "], "img_footnote": [], "page_idx": 28}, {"type": "text", "text": "SRG solutions. In Figure 1 presented in the main body, we recover the SRG solution for $K=10$ . In Figures 7 and 8, we show that solutions very similar to SRG are recovered for $K=6$ and $K=15$ , respectively. The only difference with SRG is in the construction of $\\tilde{M}_{L}$ . We note that the losses of these solutions are slightly lower than the loss of our construction, which proves that the SRG solution itself is not necessarily globally optimal. ", "page_idx": 28}, {"type": "text", "text": "B.2 End-to-end experiments with DUFM-like regularization ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "We complement the experiments of Figure 3 with two extra ablation studies for ResNet20 trained on CIFAR-10 with a 4-layer MLP head. We focus on the dependence of the average rank on the weight decay and the learning rate, and present the results in Figure 9. The weight decay has a clear effect on the rank of the solutions found by gradient descent, similarly to the results in Figure 3 for the $L$ -DUFM model. The effect of the learning rate is slightly less clear, but we still see a general downward trend. ", "page_idx": 28}, {"type": "text", "text": "B.3 End-to-end experiments with standard regularization ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Finally, in Figure 10, we include the analysis of the average rank as a function of weight decay in the standard regularization setting for training on the MNIST dataset. The results confirm the trend from the previous experimental settings, showing that the weight decay strength is a crucial predictor of the final rank even in standard regularization setting, which has a different loss landscape compared to the $L$ -DUFM. ", "page_idx": 28}, {"type": "image", "img_path": "0jld45XGgJ/tmp/8f25d89004fe98e567dd4565083b8da86c4e7282032a25388dcba9e36bcdc10d.jpg", "img_caption": ["Figure 6: Class-mean matrices and singular values at convergence for a DUFM model with $K=15$ and $L=7$ . Top row: Singular values of $\\tilde{M}_{2}$ , and visualization of the matrices $\\tilde{M}_{2},\\tilde{M}_{6},M_{6}$ and Bottom row: Singular values of $\\tilde{M}_{6}$ and $M_{6}$ . "], "img_footnote": [], "page_idx": 29}, {"type": "image", "img_path": "0jld45XGgJ/tmp/0bc01bb381ce2bc7411c8c440efb02095b44674a71823d957408fda37fbdead5.jpg", "img_caption": ["Figure 7: 4-DUFM training for $K=6$ . Top row: Visualization of the matrices $\\tilde{M}_{3}^{T}\\tilde{M}_{3},\\tilde{M}_{3}$ , and $\\tilde{M}_{4}$ . Bottom row: Singular values of $H_{3}$ , and loss progression including its decomposition into fit and regularization terms. "], "img_footnote": [], "page_idx": 29}, {"type": "image", "img_path": "0jld45XGgJ/tmp/857c9f85db34e9adce13e8930fcbeec42bace1b528aa2e3e5a5819ab15b4cd21.jpg", "img_caption": ["Figure 8: 4-DUFM training for $K=15$ . Top row: Visualization of the matrices $\\tilde{M}_{3}^{T}\\tilde{M}_{3},\\tilde{M}_{3}$ and $\\tilde{M}_{4}$ . Bottom row: Loss progression including its decomposition into fit and regularization terms. "], "img_footnote": [], "page_idx": 30}, {"type": "image", "img_path": "0jld45XGgJ/tmp/62c11ad58d5c89016ef0fe29d31270f766eb28d014f2ba36fe20fe6ad56357c2.jpg", "img_caption": ["Figure 9: Average ranks as a function of $\\mathrm{log_{2}}$ weight decay (left) and $\\mathrm{log_{2}}$ learning rate (right). We trained ResNet20 with 4-layer MLP head on CIFAR-10. The experiments are averaged over three and two independent runs, respectively. "], "img_footnote": [], "page_idx": 30}, {"type": "image", "img_path": "0jld45XGgJ/tmp/d5f0d34d11f886a457014744491ad2d824fd4ef61c2876a917192c4611674a4b.jpg", "img_caption": [], "img_footnote": [], "page_idx": 31}, {"type": "text", "text": "Figure 10: Average rank as a function of the $\\mathrm{log_{2}}$ weight decay. We trained ResNet20 with 5-layer MLP head on MNIST. The experiments are averaged over 4 independent runs. ", "page_idx": 31}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: The main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 32}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Justification: The paper discusses the limitations of the work performed by the authors. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 32}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: The paper provides the full set of assumptions and complete proofs in the appendix. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 33}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 33}, {"type": "text", "text": "Justification: The paper includes enough details so as to perform the same kind of experiments as the ones presented in the paper. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 33}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 34}, {"type": "text", "text": "Answer: [No] ", "page_idx": 34}, {"type": "text", "text": "Justification: The contribution of our paper is mostly theoretical. The experiments are for illustrative purposes. The source code will be provided on request. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 34}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 34}, {"type": "text", "text": "Answer: [No] ", "page_idx": 34}, {"type": "text", "text": "Justification: We do provide most of the experimental details in the manuscript. Additional (minor) parameter choices can be derived from the source code, which is available on request. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 34}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: The paper reports error bars. ", "page_idx": 34}, {"type": "text", "text": "Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 34}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 35}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 35}, {"type": "text", "text": "Answer: [No] ", "page_idx": 35}, {"type": "text", "text": "Justification: The experiments do not require any specific hardware setup. Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 35}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: The research conducted in the paper conforms with the NeurIPS Code of Ethics. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 35}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 35}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 35}, {"type": "text", "text": "Justification: no societal impact of the work performed ", "page_idx": 35}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 35}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 36}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 36}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 36}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 36}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: We provide references for the datasets used. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 36}, {"type": "text", "text": "", "page_idx": 37}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 37}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 37}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 37}, {"type": "text", "text": "", "page_idx": 38}]