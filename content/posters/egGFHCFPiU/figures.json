[{"figure_path": "egGFHCFPiU/figures/figures_1_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "The figure shows two diagrams illustrating critical steps in graph planning. Diagram (a) shows the process of expanding the planning graph by selecting promising actions from a large set of potential actions. Diagram (b) illustrates backtracking, where a small number of action sets is chosen to explore when searching for solutions among many possible action sets.", "section": "3 Our LLMs4Plan approach"}, {"figure_path": "egGFHCFPiU/figures/figures_3_1.jpg", "caption": "Figure 2: The framework of a planning graph", "description": "This figure illustrates the structure of a planning graph used in the LLMs4Plan approach.  The graph alternates between layers of \"state-levels\" (representing the world's state) and \"action-levels\" (representing possible actions).  Nodes in state-levels depict literals (facts about the world), while those in action-levels represent actions.  Edges indicate preconditions (connecting actions to the prior state-level facts required for action execution) and effects (connecting actions to the resulting state-level facts modified by executing the action). Maintenance actions ensure that facts persist between state levels when no change is caused by an action.", "section": "3.1 Building Planning Graphs with LLMs"}, {"figure_path": "egGFHCFPiU/figures/figures_3_2.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure illustrates two crucial steps in graph-based planning: (a) expanding the planning graph by selecting a subset of promising actions, and (b) backtracking from the goal state by selecting a subset of non-mutually exclusive action sets.  The goal is to reduce the search space and improve efficiency.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_4_1.jpg", "caption": "Figure 4: Mutual exclusion of actions", "description": "This figure illustrates three types of mutual exclusion constraints among actions in a planning graph. (a) Inconsistent effects: An effect of one action negates an effect of another. (b) Interference: One action deletes a precondition of another. (c) Competing needs: Two actions have mutually exclusive preconditions.", "section": "3.2 Building Mutual Constraints"}, {"figure_path": "egGFHCFPiU/figures/figures_4_2.jpg", "caption": "Figure 5: An example planning graph and mutual constraints indicated in RED arcs", "description": "This figure shows an example of a planning graph with mutual constraints highlighted in red arcs.  The graph visually represents the search space for finding a solution to a planning problem. It alternates between layers of ground literals (states) and actions.  The red arcs indicate mutex relations between actions (inconsistent effects, interference, or competing needs) or literals (inconsistent support). The graph illustrates how the planning algorithm explores possible action sequences to reach a goal state, considering constraints and avoiding conflicts.", "section": "3.2 Building Mutual Constraints"}, {"figure_path": "egGFHCFPiU/figures/figures_4_3.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure shows two crucial steps in graph planning: (a) expanding the planning graph by selecting promising actions and (b) backtracking from the goal state by selecting candidate action sets, which is not mutually exclusive.  LLMs can be used to improve the efficiency and effectiveness of both steps by selecting the most promising actions and action sets.", "section": "1 Introduction"}, {"figure_path": "egGFHCFPiU/figures/figures_8_1.jpg", "caption": "Figure 7: An example of action pruning. Both the GP and LLMs4Plan-GPT4 methods expanded through 10 layers. The horizontal axis represents the layer number, with lower numbers indicating proximity to the initial state and higher numbers nearing the goal state. The vertical axis shows the count of expanded actions, including both domain-specific actions and numerous empty actions, characteristic of the graph planning algorithm. This implies a high pruning ratio for genuinely effective actions. LLMs prune almost every layer of expansion actions and the data in the table also contains many empty actions.", "description": "This figure compares the number of actions expanded by the traditional graph-based planning (GP) algorithm and the proposed LLMs4Plan-GPT4 algorithm across 10 layers of planning.  The x-axis represents the planning layer, with lower numbers indicating proximity to the initial state and higher numbers to the goal state.  The y-axis shows the number of actions expanded at each layer. LLMs4Plan-GPT4 significantly reduces the number of expanded actions at almost every layer compared to the GP algorithm, demonstrating the effectiveness of its action pruning capabilities.  The reduced number of actions shows a high pruning rate, even with many \"empty actions\" (actions that don't change the state) typical of graph-based planning.", "section": "4.3 Experimental Results"}, {"figure_path": "egGFHCFPiU/figures/figures_12_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure shows two crucial steps in graph-based planning.  (a) illustrates expanding the planning graph by proposing promising actions to add to the action level. (b) illustrates backtracking from the goal state by selecting a subset of non-mutually exclusive action sets to explore.  LLMs are proposed to improve efficiency and effectiveness in both steps by reducing the search space of actions and sets of actions.", "section": "1 Introduction"}, {"figure_path": "egGFHCFPiU/figures/figures_13_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure illustrates two crucial steps in the Graphplan algorithm: (a) expanding the planning graph by proposing promising actions at each action level, and (b) backtracking from the goal state to find a valid plan by selecting a subset of non-mutually exclusive action sets.  LLMs are proposed to improve the efficiency and effectiveness of these steps, which are often computationally expensive.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_14_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "The figure shows two crucial steps in graph planning: (a) expanding the planning graph by selecting promising actions to generate action-level i and (b) backtracking from state-level K by selecting a small number of candidate sets of actions to explore based on mutual constraints. LLMs are proposed to enhance efficiency in both steps by reducing the search space.", "section": "3 Our LLMs4Plan approach"}, {"figure_path": "egGFHCFPiU/figures/figures_20_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure shows two crucial steps in the graph planning process.  (a) shows the expansion of the planning graph, where selecting promising actions from a potentially large set is important for efficiency. (b) shows backtracking from the goal state, where choosing efficient sets of non-mutually exclusive actions is crucial to avoid combinatorial explosion.  LLMs are used to improve efficiency in both steps in the proposed LLMs4Plan framework.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_23_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "The figure shows two crucial steps in graph-based planning: expanding the planning graph and backtracking.  (a) Expanding involves selecting promising actions to add to the graph.  (b) Backtracking involves choosing a subset of actions to explore when searching for a solution, taking into account mutual constraints.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_26_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure illustrates two crucial steps in the graph planning process.  (a) shows the expansion of the planning graph, where selecting promising actions from a large set is a key challenge. (b) shows backtracking from the goal state, where choosing efficient non-mutually exclusive action sets from a vast number of possibilities is also critical.  LLMs are proposed to improve efficiency in both of these steps.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_29_1.jpg", "caption": "Figure 5: An example planning graph and mutual constraints indicated in RED arcs", "description": "This figure shows a planning graph with mutual constraints highlighted in red.  The graph visually represents the planning process, showing the progression of states and actions over time. The red arcs indicate mutual exclusivity between actions (e.g., two actions that cannot happen simultaneously).  This is a key component of graph-based planning, illustrating how the planner considers the constraints when finding a solution.", "section": "3.2 Building Mutual Constraints"}, {"figure_path": "egGFHCFPiU/figures/figures_37_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure illustrates two crucial steps in graph planning: (a) expanding the planning graph, where LLMs are used to select a promising subset of actions, and (b) backtracking, where LLMs help in selecting a small number of candidate action sets to explore, reducing the search space and improving efficiency.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_40_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "The figure shows two crucial steps in graph planning: (a) expanding the planning graph, where LLMs can help select a small subset of promising actions to avoid exploring all possible actions; and (b) backtracking, where LLMs can help select a small number of candidate sets of actions to backtrack, thereby improving efficiency.", "section": "2 Problem Formulation"}, {"figure_path": "egGFHCFPiU/figures/figures_41_1.jpg", "caption": "Figure 5: An example planning graph and mutual constraints indicated in RED arcs", "description": "This figure shows an example of a planning graph with mutual constraints highlighted in red.  The graph visually represents the states (circles) and actions (squares) involved in a planning problem. The red arcs connecting the nodes indicate mutual exclusion constraints between actions or states, illustrating that certain combinations of actions or states cannot occur simultaneously within a valid plan. This example visually clarifies the concept of mutual exclusion constraints within the planning graph framework and its importance for efficient plan generation.", "section": "3.2 Building Mutual Constraints"}, {"figure_path": "egGFHCFPiU/figures/figures_45_1.jpg", "caption": "Figure 1: Two critical steps in planning", "description": "This figure illustrates two crucial steps in graph planning: (a) expanding the planning graph by selecting promising actions and (b) backtracking from the goal state by selecting a small number of candidate action sets.  The image emphasizes that in both steps there could be a large number of choices, making the planning process computationally expensive. LLMs are proposed to help reduce this cost by selecting subsets of the choices in both steps.", "section": "2 Problem Formulation"}]