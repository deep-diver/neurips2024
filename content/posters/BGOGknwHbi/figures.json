[{"figure_path": "BGOGknwHbi/figures/figures_3_1.jpg", "caption": "Figure 1: Self-Guiding Exploration. The generative model autonomously addresses a combinatorial problem task Q through a five-phase process: (1) Exploration of N solution trajectories, where each trajectory offers potential solutions; (2) Decomposition of these trajectories into K subtasks, outlining specific steps for each method; (3) Resolution of each subtask, executing the outlined steps; (4) Feedback and Refinement, where feedback is gathered and used to refine each subtask; (5) Integration of all trajectories into a consolidated final solution A. Distinct from traditional exploration/decomposition techniques, SGE(Q) functions entirely autonomously, eliminating the reliance on task-specific queries or manually created thought exemplars. This independence makes it universally applicable to all CP tasks without necessitating modifications.", "description": "This figure illustrates the Self-Guiding Exploration (SGE) algorithm's workflow.  The algorithm processes a combinatorial problem (Q) through five phases: exploration (generating multiple solution trajectories), decomposition (breaking trajectories into subtasks), subtask resolution (executing subtasks), feedback and refinement (improving results), and integration (combining results into a final solution, A). The key feature is the algorithm's autonomous operation, eliminating the need for task-specific prompts.", "section": "4 Method"}, {"figure_path": "BGOGknwHbi/figures/figures_6_1.jpg", "caption": "Figure 1: Self-Guiding Exploration. The generative model autonomously addresses a combinatorial problem task Q through a five-phase process: (1) Exploration of N solution trajectories, where each trajectory offers potential solutions; (2) Decomposition of these trajectories into K subtasks, outlining specific steps for each method; (3) Resolution of each subtask, executing the outlined steps; (4) Feedback and Refinement, where feedback is gathered and used to refine each subtask; (5) Integration of all trajectories into a consolidated final solution A. Distinct from traditional exploration/decomposition techniques, SGE(Q) functions entirely autonomously, eliminating the reliance on task-specific queries or manually created thought exemplars. This independence makes it universally applicable to all CP tasks without necessitating modifications.", "description": "This figure illustrates the Self-Guiding Exploration (SGE) method's five phases: exploration, decomposition, subtask resolution, feedback and refinement, and integration.  It shows how the model autonomously generates multiple solution trajectories, breaks them down into subtasks, solves them, refines the results based on feedback, and combines everything into a final solution.  The key is that it's fully autonomous, unlike many other methods that rely on task-specific prompts or manual intervention.", "section": "4 Method"}, {"figure_path": "BGOGknwHbi/figures/figures_7_1.jpg", "caption": "Figure 3: Effect of Problem Size on Performance Improvement relative to the IO solution using gpt-4 w/ code interpreter. The analysis spans problem instances of varying sizes, systematically presented from the smallest to the largest, specifically ranging from n = 5 to n = 20 nodes. Results are organized to highlight the impact of increasing problem complexity on the effectiveness of the solution.", "description": "The bar chart visualizes the performance improvement of the Self-Guiding Exploration (SGE) method compared to the Input-Output (IO) baseline across six combinatorial problems (Assignment, Knapsack, Bin Packing, TSP, VRP, JSP) with varying problem sizes (5, 8, 12, 15, 20 nodes).  The chart demonstrates how the performance improvement of SGE diminishes with increasing problem size, suggesting that the complexity of larger instances presents greater challenges for the model.", "section": "5.2 Results on CP tasks"}, {"figure_path": "BGOGknwHbi/figures/figures_7_2.jpg", "caption": "Figure 4: Effect of Model Choice on Performance Improvement relative to the IO solution.", "description": "This bar chart visualizes the performance improvement of Self-Guiding Exploration (SGE) across different Large Language Models (LLMs) for six combinatorial tasks (Assignment, Knapsack, Bin Packing, TSP, VRP, JSP).  Each bar represents a task, and the height indicates the percentage improvement in performance achieved by SGE compared to the baseline Input-Output (IO) method for that task, broken down by LLM used. The chart helps to assess how the choice of the LLM affects the efficacy of SGE in solving combinatorial problems.", "section": "5.2 Results on CP tasks"}]