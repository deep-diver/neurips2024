[{"figure_path": "G7QS68ICPJ/tables/tables_5_1.jpg", "caption": "Table 1: Comparison of the computation and communication for multiplication of two matrices with dimension k \u00d7 m and m \u00d7 n. kw, mw, nw are the window size corresponding to matrix dimensions.", "description": "This table compares the computation and communication complexities of the server-side inner product (SIP) protocol and the proposed client-side outer product (COP) protocol for matrix multiplication in the context of secure two-party computation.  It breaks down the comparison by the number of communicated ciphertexts and the computational complexities for both the server and client sides using homomorphic encryption. The complexities are expressed in Big O notation and depend on parameters like matrix dimensions (k, m, n) and window sizes (kw, mw, nw), with N representing the polynomial degree in the homomorphic encryption scheme.", "section": "3 Secure Computation of Linear Layers"}, {"figure_path": "G7QS68ICPJ/tables/tables_7_1.jpg", "caption": "Table 2: Accuracy comparison of floating-point (FP) baseline, BumbleBee, Nimbus (without finetuning), and Nimbus (with finetuning).", "description": "This table compares the accuracy of four different methods (Floating-point baseline, BumbleBee, Nimbus without finetuning, and Nimbus with finetuning) across eight different tasks (COLA, SST-2, MRPC, STS-B, QQP, MNLI, QNLI, RTE).  Each task has multiple metrics (Matthews correlation, Accuracy, F1 score, Pearson correlation, and Accuracy), providing a comprehensive evaluation of the different approaches' performance in terms of accuracy.", "section": "5.1 Accuracy Comparison"}, {"figure_path": "G7QS68ICPJ/tables/tables_9_1.jpg", "caption": "Table 3: Communication cost (megabytes) and rounds comparison on one Transformer block.", "description": "This table compares the communication costs (in megabytes) and the number of communication rounds required for different layers (Linearqkv, Linearo, Linearh1, Linearh2, Softmax, GELU) of a Transformer block, using three different secure computation methods: Iron, BumbleBee, and Nimbus.  It highlights the communication efficiency improvements achieved by Nimbus compared to the other methods.  The reduction in communication rounds is particularly notable for the Softmax and GELU layers, showing Nimbus's enhanced efficiency in handling non-linear functions.", "section": "5.3 Communication Analysis"}, {"figure_path": "G7QS68ICPJ/tables/tables_14_1.jpg", "caption": "Table 1: Comparison of the computation and communication for multiplication of two matrices with dimension k \u00d7 m and m \u00d7 n. kw, mw, nw are the window size corresponding to matrix dimensions.", "description": "This table compares the computational and communication complexities of the server-side inner product (SIP) protocol and the proposed client-side outer product (COP) protocol for matrix multiplication in the context of secure two-party computation.  It details the number of communicated ciphertexts and the computational complexity (in Big O notation) for both the server and the client, considering various window sizes (kw, mw, nw) used to partition the input matrices. The COP protocol aims for efficiency improvements by reducing communication and computation.", "section": "3 Secure Computation of Linear Layers"}, {"figure_path": "G7QS68ICPJ/tables/tables_17_1.jpg", "caption": "Table 1: Comparison of the computation and communication for multiplication of two matrices with dimension k \u00d7 m and m \u00d7 n. kw, mw, nw are the window size corresponding to matrix dimensions.", "description": "This table compares the computational and communication complexities of the server-side inner product (SIP) protocol and the client-side outer product (COP) protocol for matrix multiplication.  It shows the number of communicated ciphertexts and the computational complexity for both the server and the client. The COP protocol shows significant improvements in both communication and computation compared to the SIP protocol, particularly with the reduction of the number of communicated ciphertexts.", "section": "3 Secure Computation of Linear Layers"}, {"figure_path": "G7QS68ICPJ/tables/tables_21_1.jpg", "caption": "Table 2: Accuracy comparison of floating-point (FP) baseline, BumbleBee, Nimbus (without finetuning), and Nimbus (with finetuning).", "description": "This table compares the accuracy of four different methods: a floating-point baseline (FP baseline), BumbleBee, Nimbus (without fine-tuning), and Nimbus (with fine-tuning). The accuracy is measured across eight different tasks from the GLUE benchmark (COLA, SST-2, MRPC, STS-B, QQP, MNLI, QNLI, RTE).  Each task uses a different metric (Matthews correlation, accuracy, F1 score, Pearson correlation, accuracy, etc.), reflecting the specific nature of each task. The table shows the relative performance of each method compared to the FP baseline, highlighting the impact of different techniques on the model's accuracy.  The 'Nimbus\u2020' row indicates that fine-tuning improved the accuracy of Nimbus.", "section": "5.1 Accuracy Comparison"}, {"figure_path": "G7QS68ICPJ/tables/tables_22_1.jpg", "caption": "Table 6: Efficiency comparison of BumbleBee, MPCFormer (Quad+2ReLU), BOLT, Nimbus", "description": "This table presents a comparison of the efficiency of four different methods (BumbleBee, MPCFormer, BOLT, and Nimbus) for performing secure computation of Softmax and GLUE tasks. The comparison is done for two different network settings: LAN (3Gbps, 0.8ms) and WAN (200Mbps, 40ms).  The values represent the execution times in seconds.", "section": "5.2 Efficiency Comparison"}]