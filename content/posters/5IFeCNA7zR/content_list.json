[{"type": "text", "text": "DARG: Dynamic Evaluation of Large Language Models via Adaptive Reasoning Graph ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zhehao Zhang Dartmouth College zhehao.zhang.gr@dartmouth.edu ", "page_idx": 0}, {"type": "text", "text": "Jiaao Chen Georgia Institute of Technology jiaaochen@gatech.edu ", "page_idx": 0}, {"type": "text", "text": "Diyi Yang Stanford University diyiy@cs.stanford.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The current paradigm of evaluating Large Language Models (LLMs) through static benchmarks comes with significant limitations, such as vulnerability to data contamination and a lack of adaptability to the evolving capabilities of LLMs. Therefore, evaluation methods that can adapt and generate evaluation data with controlled complexity are urgently needed. In this work, we introduce Dynamic Evaluation of LLMs via Adaptive Reasoning Graph Evolvement (DARG) to dynamically extend current benchmarks with controlled complexity and diversity. Specifically, we first extract the reasoning graphs of data points in current benchmarks and then perturb the reasoning graphs to generate novel testing data. Such newly generated test samples can have different levels of complexity while maintaining linguistic diversity similar to the original benchmarks. We further use a code-augmented LLM to ensure the label correctness of newly generated data. We apply our DARG framework to diverse reasoning tasks in four domains with 15 state-of-the-art LLMs. Experimental results show that almost all LLMs experience a performance decrease with increased complexity and certain LLMs exhibit significant drops. Additionally, we find that LLMs exhibit more biases when being evaluated via the data generated by DARG with higher complexity levels. These observations provide useful insights into how to dynamically and adaptively evaluate LLMs. The code is available at https://github.com/SALT-NLP/DARG. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Large language models (LLMs) have recently attained exceptional performance across a wide range of tasks [10, 2, 11] by showing substantial evaluation results on static benchmark datasets [35, 16, 14] where their test data points are open-sourced and unchanged. Although these widely used benchmarks are generally of high-quality, they may suffer from the following issues [119]: (1) Data contamination [8, 66, 104, 29], which refers to the potential overlap between LLMs\u2019 training corpus and benchmarks\u2019 data points. This raises concerns about whether LLMs are merely memorizing and overftiting these benchmarks instead of learning how to solve the tasks [112], which may lead to poor generalization[67, 13, 9]. (2) Static datasets only have fixed complexity and lack the flexibility to evolve. As LLMs are developing and scaling up rapidly, existing static benchmarks may fail to align with their increasing capabilities, as the complexity of current benchmarks remains unchanged [25]. ", "page_idx": 0}, {"type": "text", "text": "To address these issues, prior work has introduced template-based methods [119] to generate evaluation samples with different complexities for mathematical and logical reasoning tasks. However, these rule-based generated samples are synthetic and limited to a specific set of tasks, lacking linguistic diversity compared to existing benchmarks. Another line of work involves prompting LLMs to directly modify the current evaluation data such as DyVal 2 [120] and Benchmark Self-Evolving [96] which utilize LLMs with various prompting strategies to perturb existing data. Despite better adaptation to existing benchmarks, these methods usually have low controllability and suffer from LLMs\u2019 instability, which makes it difficult to verify the quality and correctness of the newly generated data points. Therefore, it remains a challenge to dynamically and adaptively generate novel test samples with controlled complexity and diversity. ", "page_idx": 0}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/ca451f1acbf8bf7755197c51c6578cdf9bf11bee42d90b393b9ceecaf7922461.jpg", "img_caption": ["Figure 1: Overview of our proposed DARG framework. We first use an LLM to construct internal reasoning graphs with rule-based supervision for label consistency. After that, we augment benchmarks through fine-grained graph interpolation based on different complexity dimensions. Finally, we decode the graph back into the original data format and use a code-augmented LLM agent to verify the label\u2019s correctness. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "To fill in this gap, in this work, we propose DARG, a Dynamic Evaluation of LLMs via Adaptive Reasoning Graph. Unlike previous work that generates test data through templates or designed prompts [119, 96], we evolve existing benchmarks based on the reasoning1 graphs that represent the underlying structures of basic reasoning components necessary for problem-solving. Specifically, we first construct the reasoning graphs for data points in given benchmarks using LLMs (e.g., computational reasoning graphs for solving a math problem are shown in Figure 1). Next, we perform fine-grained graph perturbations based on various dimensions of the reasoning graph. As illustrated in the middle of Figure 1, we can dynamically increase the graph complexity by increasing its depth, width, and the numerical complexity of node values. Afterwards, we convert the reasoning graph back into the description that adapts the linguistic diversity as the original data. In order to ensure the correctness of the reasoning graph construction and graph-to-text generation, inspired by recent advances in tool-augmented LLMs [69, 28], we use tool-augmented LLMs to verify the quality of reasoning graphs and generated text to produce valid test examples. In this way, novel test cases can be generated with controllable complexity, adapted linguistic diversity, and validated labels. ", "page_idx": 1}, {"type": "text", "text": "We evaluate 15 of the latest state-of-the-art (SOTA) LLMs with examples generated from our DARG on reasoning tasks across four different domains: math reasoning, social reasoning, spatial reasoning, and symbolic reasoning. We observe that: (1) All current LLMs show decreasing performances on these data generated by DARG with increasing complexity levels, demonstrating the unreliable assessment of LLMs\u2019 capabilities using static benchmarks and the need to evaluate LLMs dynamically and adaptively. (2) Additionally, in tasks involving social and spatial reasoning, we find an increase in biases reflected by LLMs as the complexity rises. (3) In general, larger models and mixture-of-experts (MOE) models with more active parameters demonstrate greater resistance to the changes in complexity, compared to smaller or non-MOE models. However, in tasks such as social reasoning, these powerful models such as GPT-4 Turbo and Gemini-1.5-Pro, have exhibited increased sensitivity to content involving protected groups as the complexity increases. In summary, DARG sheds light on how to dynamically and adaptively evaluate LLMs and highlights the importance of developing better models that can adapt to diverse and dynamic evaluation scenarios. ", "page_idx": 1}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/65fb411cb43b2f6cb0aff0bf5b1f7c53718fdbcb5a05c4aeb225b6965f4e816e.jpg", "table_caption": [], "table_footnote": ["Table 1: Overview of the tasks and reasoning domains investigated, along with their corresponding graph components, complexity definitions, and illustrative examples. "], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "2 Method: DARG ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "DARG aims to evolve the given test data into a novel example with controllable complexities, as shown in 1. Concretely, we will first extract the reasoning graph (Section 2.1, Section 2.2) for the given data. Subsequently, we conduct fine-grained graph perturbations to evolve the complexity of the reasoning graphs (Section 2.3 and then convert the graph into natural language descriptions that match the format of original data (Section 2.4). ", "page_idx": 2}, {"type": "text", "text": "2.1 Reasoning Graph ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The human problem-solving process can be conceptualized as a graph structure, where each vertex represents a partial solution and the edges represent the operators among them [25]. Inspired by this, we represent each data in the form of a Reasoning Graph. Specifically, for a reasoning task, we define a reasoning graph, $G^{R}=(V^{R},E^{R})$ , which is a directed acyclic graph. The nodes $\\boldsymbol{v}_{i}\\in V^{R}$ represent the basic reasoning units, for example, numbers for math reasoning tasks. The edges $e_{i,j}\\in E^{R}$ represent the functions involved between the connected nodes, e.g., arithmetic operators for math reasoning tasks. A connection from $v_{i}$ to $v_{j}$ with edge $e_{i,j}$ represents a partial solution to the problem where the operator $e_{i,j}$ is applied to $v_{i}$ to derive $v_{j}$ . ", "page_idx": 2}, {"type": "text", "text": "To quantify the complexity of the reasoning graph, we utilize (1) the structural complexity of the reasoning graph, including the width of the graph, which measures the maximum number of variables required to maintain in parallel during reasoning and depth of the graph which measures the maximum level of reasoning steps required to solve the task; and (2) property and setup complexity of nodes in the reasoning graph, such as the numerical values of the nodes in math reasoning graphs. Based on the defined complexity measurements, we could then apply perturbations to vary the complexity of any given reasoning graph, such as increasing the numerical values of nodes or adding edges and nodes to increase the graph width and graph depth 2. ", "page_idx": 2}, {"type": "text", "text": "In this work, we use four widely used reasoning tasks including math reasoning, social reasoning, spatial reasoning, and symbolic reasoning as working examples, and the specific setup for nodes, edges, and complexity along with the example reasoning graphs are shown in Table 1. Note that even if the specific setups are different for different tasks, our reasoning graph definition can be easily applied and generalized to any given reasoning task. ", "page_idx": 2}, {"type": "text", "text": "2.2 Reasoning Graph Construction ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "As current LLMs demonstrate increasing proficiency in in-context learning (ICL) [10, 70, 23], we leverage LLM with in-context exemplars to construct the reasoning graph for each data point. In the prompt, we manually define the nodes, edges, and their relationships with concrete examples and clear instructions as shown in Appendix F. However, constructing accurate reasoning graphs through simple prompt engineering is non-trivial. Empirically, we find that even the most powerful model, GPT-4 Turbo, cannot accurately generate reasonable reasoning graphs for many arithmetic problems in one shot, even when using self-correction techniques [65, 105]. To resolve this instability, as shown in the leftmost part of Figure 1, we apply a rule-based function to use the graph structure to compute a label. This label is subsequently compared to the original label to verify the accuracy of the reasoning graph. If the computed label matches the original one, we consider the generated reasoning graph as accurate 3. Otherwise, we iteratively prompt the LLM using a high temperature until the computed label aligns with the original one. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "2.3 Reasoning Graph Perturbation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Reasoning graph perturbation involves systematically changing the structure of the reasoning graph based on different levels of complexity. Formally, for a given reasoning graph $G^{R}=(V^{R},\\check{E}^{R})$ , we define a perturbation function $P\\dot{(G^{R},L,I)}$ , where $L$ denotes the types of complexity and $I$ represents the selected intervals. Inspired by DyVal\u2019s [119] approach to inject complexity, we use a rule-based function to modify the reasoning graph. This perturbation function $P$ adjusts the nodes $V^{R}$ and edges $E^{R}$ according to the defined complexity and intervals, resulting in a new reasoning graph $G_{p}^{R}$ . For example, as illustrated in the middle part of Figure 1, we define a perturbation function $P$ to alter the original reasoning graph to increase its structural complexity, including width and depth, and the node complexity such as numerical complexity of the nodes\u2019 values. Upon obtaining the modified graph, we apply the same label computation function as in the previous stage to determine the new label for this graph. Note that as we only use rule-based functions for graph interpolation without engaging LLMs, this stage does not introduce any noise. ", "page_idx": 3}, {"type": "text", "text": "2.4 Testing Example Generation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Graph-to-text Decoding Prior work that uses template-based graph-to-text transformation [119] often suffers from limited linguistic diversity and lacks similarity to the original data point. In contrast, we use an LLM with original (graph, text) pairs as in-context exemplars to conduct ICL for graph-to-text decoding. Specifically, given a reasoning graph $G^{R}=(V^{R},\\dot{E}^{R})$ and an original text $T$ , we select $k$ exemplars $\\dot{\\left\\{(G_{1}^{R},T_{1}),\\dot{...},(G_{k}^{R},T_{k})\\right\\}}$ to guide the LLM in generating new text $T^{\\prime}$ . In this way, we can generate new data points that not only maintain a consistent language style but also encode the reasoning graph structure in the text in a similar manner. ", "page_idx": 3}, {"type": "text", "text": "Data Verification However, LLMs are notorious for their instability [63] and hallucinations [31, 44, 38]. Therefore, ensuring that the generated text aligns with the reasoning graph is critical. Inspired by recent advances in tool-augmented LLMs [106, 69, 28, 114, 86, 61], augmenting LLMs with tools such as code interpreters can significantly mitigate these hallucinations, thereby enhancing factuality and performance. For instance, GPT-4 equipped with a code interpreter has achieved a $97\\%$ accuracy on the GSM8K benchmark [116]. Specifically, given a newly generated text $T^{\\prime}$ from the reasoning graph $G^{R}$ , as illustrated in the rightmost of Figure 1, we use a code-augmented LLM agent that takes $T^{\\prime}$ as input, generates code to solve the reasoning task, and utilizes an external code interpreter to compute the final answer $A^{\\prime}$ . We then compare this computed answer $A^{\\prime}$ with the label $A$ derived from the reasoning graph $G^{R}$ . If $A^{\\prime}=A$ , we consider the new data point correctly generated. If not, we iteratively provide the solving process and code output back to the LLM to refine its generation of new data points. Empirically, we find that using the code and code output as supervision signals significantly helps the LLM in reducing hallucinations during new data generation. All those prompt designs for graph generation and verification can be found in Appendix F ", "page_idx": 3}, {"type": "text", "text": "3 Experiment ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "For experiments, we use the following categories of ${\\boldsymbol{\\mathrm{LMs}}}^{4}$ : (1) Open-source vanilla transformerbased decoder-only LLMs: phi3-mini [1]; Mistral-7B [45]; Llama-3-8B [68]; Llama-3-70B [68]; Command $\\mathbf{R+}$ [20]; (2) Mixture of Experts(MoE) LLMs: Mixtral- $\\mathbf{\\nabla}\\cdot8\\times7\\mathbf{B}$ [46]; Mixtral- $\\mathbf{\\cdot8}\\!\\times\\!22\\mathbf{B}$ [71]; WizardLM- $2{-}8\\!\\times\\!22\\mathrm{B}$ [103]; (3) Math-specific LLMs: DeepSeekMath-7B [85]; (4) Closed-source LLMs: GPT-4 Turbo [2]; GPT-4-o [73]; Gemini-1.5-Pro [79]; Gemini-1.5-Flash [79]; Claude-3-Opus [4]. Experiment setup details are available in the Appendix A. Unless otherwise stated, we use GPT-4 Turbo for graph construction and graph-to-text decoding across all tasks if needed 5. For all tasks, we use Chain-of-Thought (CoT) [98] prompting and Least-to-Most (LtM) [117] prompting, which are two of the most widely used prompting strategies in solving complex reasoning tasks. ", "page_idx": 3}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/08cf9b7ebf09f40ee802c2a77c52118e6dca4e8dc75c224479f2f6c83245abc5.jpg", "img_caption": ["Figure 2: Performance changes of 15 LLMs on GSM8K as the complexity level of the reasoning graph increases across three dimensions. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "We mainly apply DARG for four datasets in four representative reasoning tasks: Mathematical Reasoning, Social Reasoning, Spatial Reasoning, and Symbolic Reasoning, as case studies. For each of the tasks, we utilized the most used datasets, specifically, GSM8K [19] for math reasoning, BBQ [2] for social reasoning, BBH Navigate [91] dataset for spatial reasoning and BBH Dyck Language for symbolic reasoning, where recent LLMs seem to already solve these tasks by showing high performances (e.g., over $95\\%$ accuracy on GSM8K in zero-shot settings with GPT-4 [2]). However, by reevaluating the LLMs in the test data generated by our DARG on these datasets, we show that the current LLMs are still far from tackling these reasoning tasks. The graph setups for DARGin these tasks are illustrated in Table 1. Note that even though these graph setups are specific to datasets and tasks, the reasoning graph definitions and design patterns can be generalized to any reasoning datasets as stated in Section 2.1. ", "page_idx": 4}, {"type": "text", "text": "3.1 Mathematical Reasoning: GSM8K ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Task and Graph Setup To measure math reasoning abilities, we use the widely used GSM8K dataset [19], which contains high-quality, linguistically diverse school math word problems. Based on the definition of the reasoning graph in Section 2.1, for GSM8K, each node represents a number, and each edge serves as a math operator such as adding and dividing. The graph complexity and perturbation operations are defined as follows: (1) Numerical Complexity for the node complexity, which is defined as the number of unit additions in the calculations. We increase the numerical complexity at intervals of $+2$ $\\therefore+4,+6,\\cdot$ $+8$ . Based on the original reasoning graph, we randomly sample a set of new values for each node to meet the desired numerical complexity requirement. (2) Depth of the Reasoning Graph for structural complexity, which is defined as the number of nodes in the longest path from a leaf node to the answer node. We increment the depth of the original reasoning graphs at intervals of $+1$ , $+2,+3,$ $+4$ . To increase the depth by 1, we identify the longest path in the original reasoning graph and then split the starting node into two new nodes with values that maintain the same numerical complexity. (3) Width of the Reasoning Graph for structural complexity, which is defined as the increased number of pairs of nodes added beyond the longest path in the graph. We increase the graph width at intervals of $+1$ , $+2$ , $+3$ , and $+4$ by decomposing the starting nodes of non-longest paths, if they exist. Examples are shown in the middle part of Figure 1 ", "page_idx": 4}, {"type": "text", "text": "Evaluation Apart from $\\mathrm{Pass}(\\varpi1$ accuracy [85, 40], to assess the robustness of LLMs in response to complexity increases within DARG, we additionally introduce the Complexity-Induced Accuracy Retention Rate (CIARR). Let $A_{i}$ represent the accuracy of a model at complexity level $i$ in a specific complexity dimension $D$ . The CIARR for a sequence of incremental complexity levels from 0 to $n$ is defined as the average percentage retention in accuracy per complexity increment, given by: ", "page_idx": 4}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/3e4b93a3a74ae51af70205d4b74b0f99aacb34811632c67741445eb3260297d2.jpg", "img_caption": ["Figure 3: Distributions of different types of GPT-4\u2019s errors in GSM8K with increasing complexity. ", "A higher value indicates greater robustness to complexity increases in that dimension. "], "img_footnote": [], "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathrm{CIARR}_{D}=\\frac{1}{n-1}\\sum_{i=1}^{n-1}\\left(\\frac{A_{i+1}}{A_{i}}\\right)\\times100\\%\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Results Figure 2 shows the pass $@1$ accuracy on GSM8K with different complexity levels for each complexity dimension6 and Figure 9 visualizes the original accuracy and CIARR values from three complexity dimension. In general, the accuracy of all the models decreases as complexity increases across all three dimensions. For instance, as depth increases by 4, the performance for Claude-3-Opus significantly drops by $54.2\\%$ with different prompting strategies even though it achieves $95\\%$ accuracy on the original test set. This suggests that the superior performance on the existing static benchmark does not reflect the models\u2019 actual capabilities in reasoning, which might be partially due to the data contamination issues [112]. We also observe that: (i) larger models with more active parameters demonstrate greater resilience to increasing complexity, for example, Llama3-70B is more resilient to complexity increases compared to Llama3-8B; (ii) MoE models are more resistant to complexity increases with similar amount of active parameters, e.g., Mistral-7B is less resistant to complexity increases than its MoE counterparts, Mixtral- $\\mathbf{\\nabla}\\cdot8\\mathbf{\\times}7\\mathbf{B}$ and Mixtral- ${\\bf\\nabla}8{\\bf\\times}22{\\bf B}$ , suggesting the necessity of scaling up and MoE structures. ", "page_idx": 5}, {"type": "text", "text": "Following previous works [117, 15], we sampled 20 failure cases of GPT-4 Turbo from each complexity level and analyzed the types of errors involved in GSM8K. We categorize them into the following types: (1) Numerical Calculation Errors, where the model generates a correct problem-solving process but makes mistakes in arithmetic operations; (2) Reasoning Errors, which arise from incorrect reasoning or misapplication of mathematical concepts; (3) Other Errors, encompassing incorrect labels and other miscellaneous issues. Their distributions are visualized in Figure 3. We found that as the numerical complexity increases, the number of incorrect numerical calculations increases; as the reasoning graph\u2019s width and depth increase, there are more errors from incorrect reasoning processes. This suggests that current LLMs still lack the ability to handle larger numbers and math problems that require more reasoning steps. Case studies can be found in Appendix D. ", "page_idx": 5}, {"type": "text", "text": "3.2 Social Reasoning: BBQ ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Task and Graph Setup For social reasoning tasks, we use the BBQ dataset [75] which evaluates biases against nine protected groups through multiple-choice QA. The dataset includes two types of contexts: ambiguous (no clear evidence for an answer) and unambiguous (evidence supports a definite answer). Each question has three options: pro-bias, anti-bias, or neutral (e.g., Cannot be determined.). For BBQ, each node in the reasoning graph represents a person or an attribute, and the edges between different nodes represent the relation between them such as a person has an attribute. The graph complexity and perturbation operations are defined as follows: (1) Attributes\u2019 polarity for the node complexity, which describes whether a person\u2019s attributes are positive or negative. We examine if adding negative attributes to the pro-bias option and positive attributes to the anti-bias option influences LLMs to generate more biased output. (2) Width of the reasoning Graph for structural complexity, which is the number of attributes to people. An example is shown in Figure 18. ", "page_idx": 5}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/f6822a3d06ac0bad23bcb1979ed8459e5fda8a8703e6d5eb4565f3bd6da45376.jpg", "img_caption": ["Figure 4: Comparison of different models\u2019 performances with CoT as the number of attribute pairs increases on the BBQ dataset when applying DARG. All models show a decreasing trend in overall accuracy $(\\uparrow)$ and an increasing trend in bias scores $\\left(\\downarrow\\right)$ in both ambiguous and disambiguous contexts. Except for Mistral 7B, GPT-4 Turbo and Gemini-1.5-Pro demonstrate the highest overall avoidance $\\left(\\downarrow\\right)$ , indicating their over-sensitivity to contents with protected groups. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "Evaluation Following previous works [75, 90], we evaluate performance using these metrics: (1) accuracy for ambiguous and unambiguous contexts (2) bias scores for both context types, with lower scores indicating less bias. We also observe that some SOTA LLMs are overly sensitive to contexts involving protected groups, often choosing \"Cannot be determined.\" even when clear evidence supports an answer. Therefore, we introduce an additional metric: (3) Overall Avoidance Rate, which measures how often this phenomenon occurs across all data points. ", "page_idx": 6}, {"type": "text", "text": "Results As shown in Figure 4, as the complexity of evaluation data increases by applying DARG, the overall accuracy tends to decline for all models. While closed-source models such as GPT-4 Turbo and Gemini-1.5-Pro show better overall accuracy, they lag behind many open-source models in disambiguous accuracy when we dig into ambiguous and disambiguous subcategories. Additionally, the overall avoidance rate in Figure 4 shows that GPT-4 Turbo and Gemini-1.5-Pro frequently opt for the \"Cannot be determined.\" even when there is clear evidence supporting an answer (shown in Appendix D). These two models with much higher overall accuracy actually exhibit a more severe issue of over-sensitivity to content involving protected groups compared to less powerful models such as GPT-3.5 Turbo. This might be due to the excessive alignment to avoid ethical issues. ", "page_idx": 6}, {"type": "text", "text": "As the number of pairs of attributes increases, we observe that the bias scores in both ambiguous and disambiguous contexts generally increase, indicating that our DARGcan generate more challenging data to reveal biases in current models against vulnerable groups for more rigorous measurements of bias in LLMs. ", "page_idx": 6}, {"type": "text", "text": "3.3 Spatial Reasoning: BBH Navigate ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Task and Graph Setup We use the BBH Navigate dataset [91], which involves giving the LLM navigation steps to determine if the agent returns to the starting point. We construct reasoning graphs where nodes represent actions with attributes, including the number of steps and the direction, while directional edges indicate the order of actions. This forms a linear graph to model the task\u2019s reasoning structure. The graph complexity and perturbation operations are defined as the depth of the Reasoning Graph for structural complexity, i.e., the number of nodes in the linear reasoning graph. We increase the number of nodes by $+2,+4,+8.$ , and $+16$ . To implement such a complexity increase, we randomly select an action node and split it into multiple nodes that collectively have the same effect. We evaluate LLMs by overall accuracy and separate accuracies for \"Yes\" and \"No\" labeled data points, referred to as positive and negative accuracy, respectively. ", "page_idx": 6}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/223b6e8959eb279d44c2068150955e33cf2a27968a5172422797ee5f47dbfd98.jpg", "img_caption": ["Figure 5: Models\u2019 accuracy on BBH Navigate when applying DARG. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/9cd11b3022c71cb8442ea9dae5ab79013d59fe8b5503ba2fb3f5b8f562a69bbc.jpg", "img_caption": ["Figure 6: Comparison of different models\u2019 accuracy on BBH Dyck Language with CoT as the number of brackets in the input (left) and label (right) increases. Overall, all models tend to experience a performance decline as the complexity increases significantly. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Results As shown in Figure 5, there is a general trend of declining overall accuracy among all models with increasing complexities. More notably, as shown in Figure 12b 12a in the Appendix, all models exhibit a dramatic decrease in positive accuracy as the number of reasoning steps increases. Particularly, all models except GPT-4 Turbo show a decline of over 40 percent in positive accuracy when the number of nodes increases by 16, while negative accuracy remains relatively stable (examples are shown in Figure 16). This phenomenon might indicate confirmation bias [78, 17] in these LLMs, leading to an extremely unbalanced change in positive and negative performance. ", "page_idx": 7}, {"type": "text", "text": "3.4 Symbolic Reasoning: BBH Dyck ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Task and Graph SetupWe use the BBH Dyck languages dataset [91], which requires the model to predict the sequence of closing parentheses for a Dyck-4 word missing its last few closing parentheses. Following Section 2.1, we construct reasoning graphs where each node represents a bracket of one of four types. There are three types of edges: those representing the order of actions, matches in the input, and expected matches between a bracket in the input and one in the output, as illustrated in Figure 11a. The entire reasoning graph can be divided into the input part and the output part. The input part is composed of nodes provided in the input, while the output part is composed of nodes in the ground truth label. The graph complexity and perturbation operations are defined as follows: ", "page_idx": 7}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/4eae38c913f2379160c2c837bd6c7dcc60feb59f523b6ae0f27a1efaf3981e54.jpg", "img_caption": ["Figure 7: Results on GSM8K with increased complexity using Mistral7B and Llama2-7B, finetuned on GSM8K original data and DARGgenerated ones. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "which is defined as the number of nodes in the input part of the graph, we increase the depth of the graph\u2019s input part by $+2$ $,+4,+8$ , and $+16$ . (2) Depth of the graph\u2019s output part for structure complexity, which is defined as the number of nodes in the output part of the graph. To ensure unique output sequences, the number of input brackets must be greater than or equal to the number of brackets in the label. Thus, we increase the number of label nodes by $+0.25\\times$ (difference in number of nodes) and $+0.5\\times$ (difference in number of nodes). We use exact match accuracy as the evaluation metric. ", "page_idx": 7}, {"type": "text", "text": "Results As shown in Figure 6, when the number of nodes in the input increases to 4 and 8, GPT-4 and the Mixtral $8\\!\\times\\!22\\mathrm{b}$ model\u2019s accuracy even increases, while other models\u2019 performances show a significant decrease. When the number of nodes in the input increases to 16 and 32, all models\u2019 accuracy declines. Among all the models, GPT-4 Turbo and Mixtral $8\\!\\times\\!22\\mathrm{b}$ are the best in terms of resilience to increasing input complexity. On the other hand, as the number of nodes in the expected output increases, almost all models\u2019 performances decrease. This suggests that LLMs still suffer from long context with either longer input or longer required output. ", "page_idx": 7}, {"type": "text", "text": "3.5 Fine-Tuning with DARG Generated Data ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this section, we demonstrate how the data generated by DARG can be further used to enhance LLMs by fine-tuning. Specifically, we first prompt GPT-4 Turbo with the novel questions and their corresponding reasoning graph to generate CoT reasoning steps. Then, we compare Mistral-7B and Llama2-7B on GSM8K test set evolved by DARG in different settings: (i) original model without any extra training, (ii) model fine-tuned with GSM8K training data and (iii) model fine-tuned with DARG generated data. The details are provided in Appendix A. ", "page_idx": 8}, {"type": "text", "text": "As shown in Figure 7, both models finetuned with DARG-generated data can outperform the one finetuned with an equivalent amount of GSM8K\u2019s original training data. This demonstrates DARG\u2019s potential not only to dynamically generate new test samples but also to produce training data that enables LLMs to adapt to various complexity levels. ", "page_idx": 8}, {"type": "text", "text": "4 Related Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Dynamic Evaluation. A typical way to evaluate LLMs is constructing evaluation benchmarks [34, 55, 115, 14, 18, 16, 36, 35, 33, 87, 118, 41, 50]. However, these static benchmarks can have issues, such as data contamination [8, 56, 81, 51, 74, 43, 21, 30, 82, 52, 57, 47, 7, 54, 109, 24, 112] in LLMs, and may not be flexible enough to keep up with the rapid development of versatile LLMs. To resolve these problems, there are lines of work focusing on focus on human-centric evaluation [27, 80, 58, 108]. Another direction [48, 64] is to build crowdsourcing platforms to dynamically collect human-annotated data. Recently, DyVal [119] introduced a graph-informed method to dynamically generate evaluation samples with controllable complexities. However, the samples generated by this method tend to be rigid and explicitly described, e.g., \u201cThe value of a is 9 and the value of b is 10; what is the value of c which is the same as $a+b?^{*}$ . This approach lacks the linguistic diversity of existing benchmarks such as GSM8K [19], which may not align well with the evaluation objectives of LLMs in real-life usage. Besides, it only focuses on limited reasoning domains such as math and logical reasoning. DyVal 2 [120] and Benchmark Self-Evolving [96] employ LLMs with prompting strategies such as paraphrasing to perturb current benchmarks. However, a significant issue is that LLMs are known for their instability, and merely prompting LLMs does not guarantee the stability of the labels nor does it achieve fine-grained complexity control. In contrast, our method enables fine-grained control over the complexity of extended benchmarks across various reasoning domains, verifying correct labels while preserving the same linguistic diversity as the original ones. ", "page_idx": 8}, {"type": "text", "text": "Synthetic Data Synthetic data has emerged as a promising solution by generating data that mimics real-world patterns [72, 59]. As LLMs demonstrate a powerful ability to generate high-quality data, an increasing number of methods have been proposed to generate synthetic data for LLM training [113, 39, 107, 32, 111, 89, 95, 6, 99, 102, 62, 83, 92, 94, 53, 88, 40], alignment [5, 97, 76, 93, 60, 22, 100, 110], and evaluation [77, 26, 114, 101, 42]. However, most previous works on synthetic data for LLM evaluation have focused on generating new data points from scratch, whereas our work concentrates on extending current benchmarks through fine-grained complexity control. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We presented DARG, a dynamic evaluation framework of LLMs via adaptive reasoning graph. Our method augments existing benchmarks by reconstructing the underlying reasoning structure of their problem-solving processes. DARG can generate new test samples across various complexity levels while maintaining linguistic diversity comparable to that of existing benchmarks. Our evaluation of 15 SOTA LLMs across four reasoning domains reveals that performance generally declines as task complexity increases, with varying degrees of resistance observed across different models. Additionally, we noted that LLMs exhibit increasing biases and excessive sensitivity to content involving protected groups. These findings shed light on how to dynamically and adaptively evaluate LLM and argue for moving beyond static benchmarking and adopting adaptive frameworks like DARG given the dynamic nature of LLM development and evaluation. ", "page_idx": 8}, {"type": "text", "text": "Our work has several limitations. (1) We focused on reasoning tasks and selected one representative dataset per task as case studies due to limited resources. But the reasoning graph definition in DARG are general and can be applied and extended to other tasks like natural language understanding tasks, which could be solved with a reasoning chain (e.g., Chain-of-Thoughts). (2) While we only fine-tuned two Mistral and LLAMA models on math reasoning datasets (GSM8K), we believe such improvements from training with DARG generated data would be consistent for other models and tasks as DARG could generate diverse and more complex examples than existing ones, which could also benefti weak-to-strong generalization [12]. (3) The current graph extraction and data generation process heavily rely on closed-source LLMs (e.g., GPT-4). Although we added rule-based constraints and data verification modules, we have not explored whether open-source models could generate reasonable data in the absence of closed-source models. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Marah Abdin, Sam Ade Jacobs, Ammar Ahmad Awan, Jyoti Aneja, Ahmed Awadallah, Hany Awadalla, Nguyen Bach, Amit Bahree, Arash Bakhtiari, Harkirat Behl, et al. Phi-3 technical report: A highly capable language model locally on your phone. arXiv preprint arXiv:2404.14219, 2024.   \n[2] Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al. Gpt-4 technical report. arXiv preprint arXiv:2303.08774, 2023. [3] Lightning AI. Litgpt. https://github.com/Lightning-AI/litgpt, 2023.   \n[4] Anthropic. The claude 3 model family: Opus, sonnet, haiku. Technical report, Anthropic, 2024.   \n[5] Amanda Askell, Yuntao Bai, Anna Chen, Dawn Drain, Deep Ganguli, Tom Henighan, Andy Jones, Nicholas Joseph, Ben Mann, Nova DasSarma, et al. A general language assistant as a laboratory for alignment. arXiv preprint arXiv:2112.00861, 2021. [6] Zhangir Azerbayev, Hailey Schoelkopf, Keiran Paster, Marco Dos Santos, Stephen McAleer, Albert Q Jiang, Jia Deng, Stella Biderman, and Sean Welleck. Llemma: An open language model for mathematics. arXiv preprint arXiv:2310.10631, 2023.   \n[7] Simone Balloccu, Patr\u00edcia Schmidtov\u00e1, Mateusz Lango, and Ond\u02c7rej Du\u0161ek. Leak, cheat, repeat: Data contamination and evaluation malpractices in closed-source llms. arXiv preprint arXiv:2402.03927, 2024.   \n[8] Emily M Bender, Timnit Gebru, Angelina McMillan-Major, and Shmargaret Shmitchell. On the dangers of stochastic parrots: Can language models be too big? In Proceedings of the 2021 ACM conference on fairness, accountability, and transparency, pages 610\u2013623, 2021.   \n[9] Stella Biderman, USVSN PRASHANTH, Lintang Sutawika, Hailey Schoelkopf, Quentin Anthony, Shivanshu Purohit, and Edward Raff. Emergent and predictable memorization in large language models. Advances in Neural Information Processing Systems, 36, 2024.   \n[10] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877\u2013 1901, 2020.   \n[11] S\u00e9bastien Bubeck, Varun Chandrasekaran, Ronen Eldan, Johannes Gehrke, Eric Horvitz, Ece Kamar, Peter Lee, Yin Tat Lee, Yuanzhi Li, Scott Lundberg, et al. Sparks of artificial general intelligence: Early experiments with gpt-4. arXiv preprint arXiv:2303.12712, 2023.   \n[12] Collin Burns, Pavel Izmailov, Jan Hendrik Kirchner, Bowen Baker, Leo Gao, Leopold Aschenbrenner, Yining Chen, Adrien Ecoffet, Manas Joglekar, Jan Leike, Ilya Sutskever, and Jeff Wu. Weak-to-strong generalization: Eliciting strong capabilities with weak supervision, 2023.   \n[13] Nicholas Carlini, Daphne Ippolito, Matthew Jagielski, Katherine Lee, Florian Tramer, and Chiyuan Zhang. Quantifying memorization across neural language models. arXiv preprint arXiv:2202.07646, 2022.   \n[14] Yupeng Chang, Xu Wang, Jindong Wang, Yuan Wu, Linyi Yang, Kaijie Zhu, Hao Chen, Xiaoyuan Yi, Cunxiang Wang, Yidong Wang, et al. A survey on evaluation of large language models. ACM Transactions on Intelligent Systems and Technology, 15(3):1\u201345, 2024. ", "page_idx": 9}, {"type": "text", "text": "[15] Jiaao Chen, Xiaoman Pan, Dian Yu, Kaiqiang Song, Xiaoyang Wang, Dong Yu, and Jianshu Chen. Skills-in-context prompting: Unlocking compositionality in large language models. arXiv preprint arXiv:2308.00304, 2023. ", "page_idx": 10}, {"type": "text", "text": "[16] Mark Chen, Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared Kaplan, Harri Edwards, Yuri Burda, Nicholas Joseph, Greg Brockman, Alex Ray, Raul Puri, Gretchen Krueger, Michael Petrov, Heidy Khlaaf, Girish Sastry, Pamela Mishkin, Brooke Chan, Scott Gray, Nick Ryder, Mikhail Pavlov, Alethea Power, Lukasz Kaiser, Mohammad Bavarian, Clemens Winter, Philippe Tillet, Felipe Petroski Such, Dave Cummings, Matthias Plappert, Fotios Chantzis, Elizabeth Barnes, Ariel Herbert-Voss, William Hebgen Guss, Alex Nichol, Alex Paino, Nikolas Tezak, Jie Tang, Igor Babuschkin, Suchir Balaji, Shantanu Jain, William Saunders, Christopher Hesse, Andrew N. Carr, Jan Leike, Josh Achiam, Vedant Misra, Evan Morikawa, Alec Radford, Matthew Knight, Miles Brundage, Mira Murati, Katie Mayer, Peter Welinder, Bob McGrew, Dario Amodei, Sam McCandlish, Ilya Sutskever, and Wojciech Zaremba. Evaluating large language models trained on code. 2021.   \n[17] Yun-Shiuan Chuang, Agam Goyal, Nikunj Harlalka, Siddharth Suresh, Robert Hawkins, Sijia Yang, Dhavan Shah, Junjie Hu, and Timothy T. Rogers. Simulating opinion dynamics with networks of llm-based agents, 2024.   \n[18] Peter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and Oyvind Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge. ArXiv, abs/1803.05457, 2018.   \n[19] Karl Cobbe, Vineet Kosaraju, Mohammad Bavarian, Mark Chen, Heewoo Jun, Lukasz Kaiser, Matthias Plappert, Jerry Tworek, Jacob Hilton, Reiichiro Nakano, Christopher Hesse, and John Schulman. Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021.   \n[20] Cohere. Command. https://cohere.com/command, 2023. Accessed: 2024-04-28.   \n[21] Chunyuan Deng, Yilun Zhao, Xiangru Tang, Mark Gerstein, and Arman Cohan. Investigating data contamination in modern benchmarks for large language models. arXiv preprint arXiv:2311.09783, 2023.   \n[22] Ning Ding, Yulin Chen, Bokai Xu, Yujia Qin, Zhi Zheng, Shengding Hu, Zhiyuan Liu, Maosong Sun, and Bowen Zhou. Enhancing chat language models by scaling high-quality instructional conversations. arXiv preprint arXiv:2305.14233, 2023.   \n[23] Qingxiu Dong, Lei Li, Damai Dai, Ce Zheng, Zhiyong Wu, Baobao Chang, Xu Sun, Jingjing Xu, and Zhifang Sui. A survey on in-context learning. arXiv preprint arXiv:2301.00234, 2022.   \n[24] Yihong Dong, Xue Jiang, Huanyu Liu, Zhi Jin, and Ge Li. Generalization or memorization: Data contamination and trustworthy evaluation for large language models. arXiv preprint arXiv:2402.15938, 2024.   \n[25] Nouha Dziri, Ximing Lu, Melanie Sclar, Xiang Lorraine Li, Liwei Jiang, Bill Yuchen Lin, Sean Welleck, Peter West, Chandra Bhagavatula, Ronan Le Bras, et al. Faith and fate: Limits of transformers on compositionality. Advances in Neural Information Processing Systems, 36, 2024.   \n[26] Shangbin Feng, Vidhisha Balachandran, Yuyang Bai, and Yulia Tsvetkov. FactKB: Generalizable factuality evaluation using language models enhanced with factual knowledge. In Houda Bouamor, Juan Pino, and Kalika Bali, editors, Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, pages 933\u2013952, Singapore, December 2023. Association for Computational Linguistics.   \n[27] Irena Gao, Gabriel Ilharco, Scott Lundberg, and Marco Tulio Ribeiro. Adaptive testing of computer vision models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4003\u20134014, 2023.   \n[28] Luyu Gao, Aman Madaan, Shuyan Zhou, Uri Alon, Pengfei Liu, Yiming Yang, Jamie Callan, and Graham Neubig. Pal: Program-aided language models. In International Conference on Machine Learning, pages 10764\u201310799. PMLR, 2023.   \n[29] Shahriar Golchin and Mihai Surdeanu. Data contamination quiz: A tool to detect and estimate contamination in large language models. arXiv preprint arXiv:2311.06233, 2023.   \n[30] Shahriar Golchin and Mihai Surdeanu. Time travel in llms: Tracing data contamination in large language models. arXiv preprint arXiv:2308.08493, 2023.   \n[31] Ben Goodrich, Vinay Rao, Peter J Liu, and Mohammad Saleh. Assessing the factual accuracy of generated text. In proceedings of the 25th ACM SIGKDD international conference on knowledge discovery & data mining, pages 166\u2013175, 2019.   \n[32] Patrick Haluptzok, Matthew Bowers, and Adam Tauman Kalai. Language models can teach themselves to program better. arXiv preprint arXiv:2207.14502, 2022.   \n[33] Dan Hendrycks, Collin Burns, Steven Basart, Andrew Critch, Jerry Li, Dawn Song, and Jacob Steinhardt. Aligning ai with shared human values. Proceedings of the International Conference on Learning Representations (ICLR), 2021.   \n[34] Dan Hendrycks, Collin Burns, Steven Basart, Andy Zou, Mantas Mazeika, Dawn Song, and Jacob Steinhardt. Measuring massive multitask language understanding. arXiv preprint arXiv:2009.03300, 2020.   \n[35] Dan Hendrycks, Collin Burns, Steven Basart, Andy Zou, Mantas Mazeika, Dawn Song, and Jacob Steinhardt. Measuring massive multitask language understanding. Proceedings of the International Conference on Learning Representations (ICLR), 2021.   \n[36] Dan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, and Jacob Steinhardt. Measuring mathematical problem solving with the math dataset. NeurIPS, 2021.   \n[37] Edward J Hu, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, Weizhu Chen, et al. Lora: Low-rank adaptation of large language models. In International Conference on Learning Representations, 2021.   \n[38] Lei Huang, Weijiang Yu, Weitao Ma, Weihong Zhong, Zhangyin Feng, Haotian Wang, Qianglong Chen, Weihua Peng, Xiaocheng Feng, Bing Qin, et al. A survey on hallucination in large language models: Principles, taxonomy, challenges, and open questions. arXiv preprint arXiv:2311.05232, 2023.   \n[39] Wenlong Huang, Fei Xia, Ted Xiao, Harris Chan, Jacky Liang, Pete Florence, Andy Zeng, Jonathan Tompson, Igor Mordatch, Yevgen Chebotar, et al. Inner monologue: Embodied reasoning through planning with language models. arXiv preprint arXiv:2207.05608, 2022.   \n[40] Yiming Huang, Xiao Liu, Yeyun Gong, Zhibin Gou, Yelong Shen, Nan Duan, and Weizhu Chen. Key-point-driven data synthesis with its enhancement on mathematical reasoning. arXiv preprint arXiv:2403.02333, 2024.   \n[41] Yuzhen Huang, Yuzhuo Bai, Zhihao Zhu, Junlei Zhang, Jinghan Zhang, Tangjun Su, Junteng Liu, Chuancheng Lv, Yikai Zhang, Yao Fu, et al. C-eval: A multi-level multi-discipline chinese evaluation suite for foundation models. Advances in Neural Information Processing Systems, 36, 2024.   \n[42] Evan Hubinger, Carson Denison, Jesse Mu, Mike Lambert, Meg Tong, Monte MacDiarmid, Tamera Lanham, Daniel M Ziegler, Tim Maxwell, Newton Cheng, et al. Sleeper agents: Training deceptive llms that persist through safety training. arXiv preprint arXiv:2401.05566, 2024.   \n[43] Alon Jacovi, Avi Caciularu, Omer Goldman, and Yoav Goldberg. Stop uploading test data in plain text: Practical strategies for mitigating data contamination by evaluation benchmarks. In Houda Bouamor, Juan Pino, and Kalika Bali, editors, Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, pages 5075\u20135084, Singapore, December 2023. Association for Computational Linguistics.   \n[44] Ziwei Ji, Nayeon Lee, Rita Frieske, Tiezheng Yu, Dan Su, Yan Xu, Etsuko Ishii, Ye Jin Bang, Andrea Madotto, and Pascale Fung. Survey of hallucination in natural language generation. ACM Computing Surveys, 55(12):1\u201338, 2023.   \n[45] Albert Q Jiang, Alexandre Sablayrolles, Arthur Mensch, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Florian Bressand, Gianna Lengyel, Guillaume Lample, Lucile Saulnier, et al. Mistral 7b. arXiv preprint arXiv:2310.06825, 2023.   \n[46] Albert Q Jiang, Alexandre Sablayrolles, Antoine Roux, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, et al. Mixtral of experts. arXiv preprint arXiv:2401.04088, 2024.   \n[47] Minhao Jiang, Ken Ziyu Liu, Ming Zhong, Rylan Schaeffer, Siru Ouyang, Jiawei Han, and Sanmi Koyejo. Investigating data contamination for pre-training language models. arXiv preprint arXiv:2401.06059, 2024.   \n[48] Douwe Kiela, Max Bartolo, Yixin Nie, Divyansh Kaushik, Atticus Geiger, Zhengxuan Wu, Bertie Vidgen, Grusha Prasad, Amanpreet Singh, Pratik Ringshia, Zhiyi Ma, Tristan Thrush, Sebastian Riedel, Zeerak Waseem, Pontus Stenetorp, Robin Jia, Mohit Bansal, Christopher Potts, and Adina Williams. Dynabench: Rethinking benchmarking in NLP. In Kristina Toutanova, Anna Rumshisky, Luke Zettlemoyer, Dilek Hakkani-Tur, Iz Beltagy, Steven Bethard, Ryan Cotterell, Tanmoy Chakraborty, and Yichao Zhou, editors, Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 4110\u20134124, Online, June 2021. Association for Computational Linguistics.   \n[49] Takeshi Kojima, Shixiang Shane Gu, Machel Reid, Yutaka Matsuo, and Yusuke Iwasawa. Large language models are zero-shot reasoners. Advances in neural information processing systems, 35:22199\u201322213, 2022.   \n[50] Nathan Lambert, Valentina Pyatkin, Jacob Morrison, LJ Miranda, Bill Yuchen Lin, Khyathi Chandu, Nouha Dziri, Sachin Kumar, Tom Zick, Yejin Choi, et al. Rewardbench: Evaluating reward models for language modeling. arXiv preprint arXiv:2403.13787, 2024.   \n[51] Fangyu Lei, Qian Liu, Yiming Huang, Shizhu He, Jun Zhao, and Kang Liu. S3eval: A synthetic, scalable, systematic evaluation suite for large language models. arXiv preprint arXiv:2310.15147, 2023.   \n[52] Changmao Li and Jeffrey Flanigan. Task contamination: Language models may not be fewshot anymore. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pages 18471\u201318480, 2024.   \n[53] Chen Li, Weiqi Wang, Jingcheng Hu, Yixuan Wei, Nanning Zheng, Han Hu, Zheng Zhang, and Houwen Peng. Common 7b language models already possess strong math capabilities. arXiv preprint arXiv:2403.04706, 2024.   \n[54] Xiang Li, Yunshi Lan, and Chao Yang. Treeeval: Benchmark-free evaluation of large language models through tree planning. arXiv preprint arXiv:2402.13125, 2024.   \n[55] Xuechen Li, Tianyi Zhang, Yann Dubois, Rohan Taori, Ishaan Gulrajani, Carlos Guestrin, Percy Liang, and Tatsunori B Hashimoto. Alpacaeval: An automatic evaluator of instructionfollowing models, 2023.   \n[56] Yucheng Li. Estimating contamination via perplexity: Quantifying memorisation in language model evaluation. arXiv preprint arXiv:2309.10677, 2023.   \n[57] Yucheng Li, Frank Guerin, and Chenghua Lin. Latesteval: Addressing data contamination in language model evaluation through dynamic and time-sensitive test construction. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pages 18600\u201318607, 2024.   \n[58] Percy Liang, Rishi Bommasani, Tony Lee, Dimitris Tsipras, Dilara Soylu, Michihiro Yasunaga, Yian Zhang, Deepak Narayanan, Yuhuai Wu, Ananya Kumar, et al. Holistic evaluation of language models. arXiv preprint arXiv:2211.09110, 2022.   \n[59] Ruibo Liu, Jerry Wei, Fangyu Liu, Chenglei Si, Yanzhe Zhang, Jinmeng Rao, Steven Zheng, Daiyi Peng, Diyi Yang, Denny Zhou, et al. Best practices and lessons learned on synthetic data for language models. arXiv preprint arXiv:2404.07503, 2024.   \n[60] Wei Liu, Weihao Zeng, Keqing He, Yong Jiang, and Junxian He. What makes good data for alignment? a comprehensive study of automatic data selection in instruction tuning. arXiv preprint arXiv:2312.15685, 2023.   \n[61] Pan Lu, Baolin Peng, Hao Cheng, Michel Galley, Kai-Wei Chang, Ying Nian Wu, SongChun Zhu, and Jianfeng Gao. Chameleon: Plug-and-play compositional reasoning with large language models. Advances in Neural Information Processing Systems, 36, 2024.   \n[62] Haipeng Luo, Qingfeng Sun, Can Xu, Pu Zhao, Jianguang Lou, Chongyang Tao, Xiubo Geng, Qingwei Lin, Shifeng Chen, and Dongmei Zhang. Wizardmath: Empowering mathematical reasoning for large language models via reinforced evol-instruct. arXiv preprint arXiv:2308.09583, 2023.   \n[63] Tianhui Ma, Yuan Cheng, Hengshu Zhu, and Hui Xiong. Large language models are not stable recommender systems. arXiv preprint arXiv:2312.15746, 2023.   \n[64] Zhiyi Ma, Kawin Ethayarajh, Tristan Thrush, Somya Jain, Ledell Yu Wu, Robin Jia, Christopher Potts, Adina Williams, and Douwe Kiela. Dynaboard: An evaluation-as-a-service platform for holistic next-generation benchmarking. In Neural Information Processing Systems, 2021.   \n[65] Aman Madaan, Niket Tandon, Prakhar Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri Alon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang, et al. Self-refine: Iterative refinement with self-feedback. Advances in Neural Information Processing Systems, 36, 2024.   \n[66] Inbal Magar and Roy Schwartz. Data contamination: From memorization to exploitation. In Smaranda Muresan, Preslav Nakov, and Aline Villavicencio, editors, Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers), pages 157\u2013165, Dublin, Ireland, May 2022. Association for Computational Linguistics.   \n[67] Inbal Magar and Roy Schwartz. Data contamination: From memorization to exploitation. arXiv preprint arXiv:2203.08242, 2022.   \n[68] Meta. Introducing meta llama 3: The most capable openly available llm to date. https: //ai.meta.com/blog/meta-llama-3/, 2024. Accessed: 2024-04-28.   \n[69] Gr\u00e9goire Mialon, Roberto Dessi, Maria Lomeli, Christoforos Nalmpantis, Ramakanth Pasunuru, Roberta Raileanu, Baptiste Roziere, Timo Schick, Jane Dwivedi-Yu, Asli Celikyilmaz, et al. Augmented language models: a survey. Transactions on Machine Learning Research, 2023.   \n[70] Sewon Min, Mike Lewis, Luke Zettlemoyer, and Hannaneh Hajishirzi. Metaicl: Learning to learn in context. arXiv preprint arXiv:2110.15943, 2021.   \n[71] Mistral AI Team. Mixtral 8x22B. https://mistral.ai/news/mixtral-8x22b/, April 2024. Accessed: 2024-05-01.   \n[72] Sergey I Nikolenko. Synthetic data for deep learning, volume 174. Springer, 2021.   \n[73] OpenAI. Hello gpt-4o. https://openai.com/index/hello-gpt-4o/, 2024. Accessed: 2024-05-21.   \n[74] Yonatan Oren, Nicole Meister, Niladri Chatterji, Faisal Ladhak, and Tatsunori B Hashimoto. Proving test set contamination in black box language models. arXiv preprint arXiv:2310.17623, 2023.   \n[75] Alicia Parrish, Angelica Chen, Nikita Nangia, Vishakh Padmakumar, Jason Phang, Jana Thompson, Phu Mon Htut, and Samuel Bowman. BBQ: A hand-built bias benchmark for question answering. In Smaranda Muresan, Preslav Nakov, and Aline Villavicencio, editors, Findings of the Association for Computational Linguistics: ACL 2022, pages 2086\u20132105, Dublin, Ireland, May 2022. Association for Computational Linguistics.   \n[76] Ethan Perez, Saffron Huang, Francis Song, Trevor Cai, Roman Ring, John Aslanides, Amelia Glaese, Nat McAleese, and Geoffrey Irving. Red teaming language models with language models. In Yoav Goldberg, Zornitsa Kozareva, and Yue Zhang, editors, Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pages 3419\u20133448, Abu Dhabi, United Arab Emirates, December 2022. Association for Computational Linguistics.   \n[77] Ethan Perez, Sam Ringer, Kamile\u02d9 Luko\u0161iu\u00afte\u02d9, Karina Nguyen, Edwin Chen, Scott Heiner, Craig Pettit, Catherine Olsson, Sandipan Kundu, Saurav Kadavath, et al. Discovering language model behaviors with model-written evaluations. arXiv preprint arXiv:2212.09251, 2022.   \n[78] Pagnarasmey Pit, Xingjun Ma, Mike Conway, Qingyu Chen, James Bailey, Henry Pit, Putrasmey Keo, Watey Diep, and Yu-Gang Jiang. Whose side are you on? investigating the political stance of large language models, 2024.   \n[79] Machel Reid, Nikolay Savinov, Denis Teplyashin, Dmitry Lepikhin, Timothy Lillicrap, Jeanbaptiste Alayrac, Radu Soricut, Angeliki Lazaridou, Orhan Firat, Julian Schrittwieser, et al. Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context. arXiv preprint arXiv:2403.05530, 2024.   \n[80] Marco Tulio Ribeiro and Scott Lundberg. Adaptive testing and debugging of NLP models. In Smaranda Muresan, Preslav Nakov, and Aline Villavicencio, editors, Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 3253\u20133267, Dublin, Ireland, May 2022. Association for Computational Linguistics.   \n[81] Manley Roberts, Himanshu Thakur, Christine Herlihy, Colin White, and Samuel Dooley. To the cutoff... and beyond? a longitudinal perspective on llm data contamination. In The Twelfth International Conference on Learning Representations, 2023.   \n[82] Oscar Sainz, Jon Campos, Iker Garc\u00eda-Ferrero, Julen Etxaniz, Oier Lopez de Lacalle, and Eneko Agirre. NLP evaluation in trouble: On the need to measure LLM data contamination for each benchmark. In Houda Bouamor, Juan Pino, and Kalika Bali, editors, Findings of the Association for Computational Linguistics: EMNLP 2023, pages 10776\u201310787, Singapore, December 2023. Association for Computational Linguistics.   \n[83] Timo Schick, Jane Dwivedi-Yu, Roberto Dess\u00ec, Roberta Raileanu, Maria Lomeli, Eric Hambro, Luke Zettlemoyer, Nicola Cancedda, and Thomas Scialom. Toolformer: Language models can teach themselves to use tools. Advances in Neural Information Processing Systems, 36, 2024.   \n[84] Omar Shaikh, Hongxin Zhang, William Held, Michael Bernstein, and Diyi Yang. On second thought, let\u2019s not think step by step! bias and toxicity in zero-shot reasoning. In Anna Rogers, Jordan Boyd-Graber, and Naoaki Okazaki, editors, Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 4454\u20134470, Toronto, Canada, July 2023. Association for Computational Linguistics.   \n[85] Zhihong Shao, Peiyi Wang, Qihao Zhu, Runxin Xu, Junxiao Song, Mingchuan Zhang, YK Li, Y Wu, and Daya Guo. Deepseekmath: Pushing the limits of mathematical reasoning in open language models. arXiv preprint arXiv:2402.03300, 2024.   \n[86] Yongliang Shen, Kaitao Song, Xu Tan, Dongsheng Li, Weiming Lu, and Yueting Zhuang. Hugginggpt: Solving ai tasks with chatgpt and its friends in hugging face. Advances in Neural Information Processing Systems, 36, 2024.   \n[87] Weijia Shi, Anirudh Ajith, Mengzhou Xia, Yangsibo Huang, Daogao Liu, Terra Blevins, Danqi Chen, and Luke Zettlemoyer. Detecting pretraining data from large language models. arXiv preprint arXiv:2310.16789, 2023.   \n[88] Noah Shinn, Federico Cassano, Ashwin Gopinath, Karthik Narasimhan, and Shunyu Yao. Reflexion: Language agents with verbal reinforcement learning. Advances in Neural Information Processing Systems, 36, 2024.   \n[89] Alexander Shypula, Aman Madaan, Yimeng Zeng, Uri Alon, Jacob Gardner, Milad Hashemi, Graham Neubig, Parthasarathy Ranganathan, Osbert Bastani, and Amir Yazdanbakhsh. Learning performance-improving code edits. arXiv preprint arXiv:2302.07867, 2023.   \n[90] Chenglei Si, Zhe Gan, Zhengyuan Yang, Shuohang Wang, Jianfeng Wang, Jordan Lee BoydGraber, and Lijuan Wang. Prompting gpt-3 to be reliable. In The Eleventh International Conference on Learning Representations, 2022.   \n[91] Mirac Suzgun, Nathan Scales, Nathanael Sch\u00e4rli, Sebastian Gehrmann, Yi Tay, Hyung Won Chung, Aakanksha Chowdhery, Quoc V Le, Ed H Chi, Denny Zhou, et al. Challenging bigbench tasks and whether chain-of-thought can solve them. arXiv preprint arXiv:2210.09261, 2022.   \n[92] Qiaoyu Tang, Ziliang Deng, Hongyu Lin, Xianpei Han, Qiao Liang, and Le Sun. Toolalpaca: Generalized tool learning for language models with 3000 simulated cases. arXiv preprint arXiv:2306.05301, 2023.   \n[93] Rohan Taori, Ishaan Gulrajani, Tianyi Zhang, Yann Dubois, Xuechen Li, Carlos Guestrin, Percy Liang, and Tatsunori B. Hashimoto. Stanford alpaca: An instruction-following llama model. https://github.com/tatsu-lab/stanford_alpaca, 2023.   \n[94] Trieu H Trinh, Yuhuai Wu, Quoc V Le, He He, and Thang Luong. Solving olympiad geometry without human demonstrations. Nature, 625(7995):476\u2013482, 2024.   \n[95] Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei Xiao, Yuke Zhu, Linxi Fan, and Anima Anandkumar. Voyager: An open-ended embodied agent with large language models. arXiv preprint arXiv:2305.16291, 2023.   \n[96] Siyuan Wang, Zhuohan Long, Zhihao Fan, Zhongyu Wei, and Xuanjing Huang. Benchmark self-evolving: A multi-agent framework for dynamic llm evaluation. arXiv preprint arXiv:2402.11443, 2024.   \n[97] Yizhong Wang, Yeganeh Kordi, Swaroop Mishra, Alisa Liu, Noah A Smith, Daniel Khashabi, and Hannaneh Hajishirzi. Self-instruct: Aligning language models with self-generated instructions. arXiv preprint arXiv:2212.10560, 2022.   \n[98] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Fei Xia, Ed Chi, Quoc V Le, Denny Zhou, et al. Chain-of-thought prompting elicits reasoning in large language models. Advances in neural information processing systems, 35:24824\u201324837, 2022.   \n[99] Jerry Wei, Le Hou, Andrew Lampinen, Xiangning Chen, Da Huang, Yi Tay, Xinyun Chen, Yifeng Lu, Denny Zhou, Tengyu Ma, et al. Symbol tuning improves in-context learning in language models. arXiv preprint arXiv:2305.08298, 2023.   \n[100] Jerry Wei, Da Huang, Yifeng Lu, Denny Zhou, and Quoc V Le. Simple synthetic data reduces sycophancy in large language models. arXiv preprint arXiv:2308.03958, 2023.   \n[101] Jerry Wei, Chengrun Yang, Xinying Song, Yifeng Lu, Nathan Hu, Dustin Tran, Daiyi Peng, Ruibo Liu, Da Huang, Cosmo Du, et al. Long-form factuality in large language models. arXiv preprint arXiv:2403.18802, 2024.   \n[102] Yuxiang Wei, Zhe Wang, Jiawei Liu, Yifeng Ding, and Lingming Zhang. Magicoder: Source code is all you need. arXiv preprint arXiv:2312.02120, 2023.   \n[103] Can Xu, Qingfeng Sun, Kai Zheng, Xiubo Geng, Pu Zhao, Jiazhan Feng, Chongyang Tao, and Daxin Jiang. Wizardlm: Empowering large language models to follow complex instructions. arXiv preprint arXiv:2304.12244, 2023.   \n[104] Shuo Yang, Wei-Lin Chiang, Lianmin Zheng, Joseph E Gonzalez, and Ion Stoica. Rethinking benchmark and contamination for language models with rephrased samples. arXiv preprint arXiv:2311.04850, 2023.   \n[105] Shunyu Yao, Dian Yu, Jeffrey Zhao, Izhak Shafran, Tom Griffiths, Yuan Cao, and Karthik Narasimhan. Tree of thoughts: Deliberate problem solving with large language models. Advances in Neural Information Processing Systems, 36, 2024.   \n[106] Shunyu Yao, Jeffrey Zhao, Dian Yu, Nan Du, Izhak Shafran, Karthik R Narasimhan, and Yuan Cao. React: Synergizing reasoning and acting in language models. In The Eleventh International Conference on Learning Representations, 2022.   \n[107] Michihiro Yasunaga, Antoine Bosselut, Hongyu Ren, Xikun Zhang, Christopher D Manning, Percy S Liang, and Jure Leskovec. Deep bidirectional language-knowledge graph pretraining. Advances in Neural Information Processing Systems, 35:37309\u201337323, 2022.   \n[108] Dingli Yu, Simran Kaur, Arushi Gupta, Jonah Brown-Cohen, Anirudh Goyal, and Sanjeev Arora. Skill-mix: a flexible and expandable family of evaluations for ai models. In The Twelfth International Conference on Learning Representations, 2023.   \n[109] Zhuohao Yu, Chang Gao, Wenjin Yao, Yidong Wang, Wei Ye, Jindong Wang, Xing Xie, Yue Zhang, and Shikun Zhang. Kieval: A knowledge-grounded interactive evaluation framework for large language models. arXiv preprint arXiv:2402.15043, 2024.   \n[110] Weizhe Yuan, Richard Yuanzhe Pang, Kyunghyun Cho, Sainbayar Sukhbaatar, Jing Xu, and Jason Weston. Self-rewarding language models. arXiv preprint arXiv:2401.10020, 2024.   \n[111] Eric Zelikman, Yuhuai Wu, Jesse Mu, and Noah Goodman. Star: Bootstrapping reasoning with reasoning. Advances in Neural Information Processing Systems, 35:15476\u201315488, 2022.   \n[112] Hugh Zhang, Jeff Da, Dean Lee, Vaughn Robinson, Catherine Wu, Will Song, Tiffany Zhao, Pranav Raja, Dylan Slack, Qin Lyu, Sean Hendryx, Russell Kaplan, Michele Lunati, and Summer Yue. A careful examination of large language model performance on grade school arithmetic, 2024.   \n[113] X Zhang, A Bosselut, M Yasunaga, H Ren, P Liang, C Manning, and J Leskovec. Greaselm: Graph reasoning enhanced language models for question answering. In International Conference on Representation Learning (ICLR), 2022.   \n[114] Zhehao Zhang, Xitao Li, Yan Gao, and Jian-Guang Lou. CRT-QA: A dataset of complex reasoning question answering over tabular data. In Houda Bouamor, Juan Pino, and Kalika Bali, editors, Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, pages 2131\u20132153, Singapore, December 2023. Association for Computational Linguistics.   \n[115] Wanjun Zhong, Ruixiang Cui, Yiduo Guo, Yaobo Liang, Shuai Lu, Yanlin Wang, Amin Saied, Weizhu Chen, and Nan Duan. Agieval: A human-centric benchmark for evaluating foundation models. arXiv preprint arXiv:2304.06364, 2023.   \n[116] Aojun Zhou, Ke Wang, Zimu Lu, Weikang Shi, Sichun Luo, Zipeng Qin, Shaoqing Lu, Anya Jia, Linqi Song, Mingjie Zhan, et al. Solving challenging math word problems using gpt-4 code interpreter with code-based self-verification. In The Twelfth International Conference on Learning Representations, 2023.   \n[117] Denny Zhou, Nathanael Sch\u00e4rli, Le Hou, Jason Wei, Nathan Scales, Xuezhi Wang, Dale Schuurmans, Claire Cui, Olivier Bousquet, Quoc Le, et al. Least-to-most prompting enables complex reasoning in large language models. arXiv preprint arXiv:2205.10625, 2022.   \n[118] Kun Zhou, Yutao Zhu, Zhipeng Chen, Wentong Chen, Wayne Xin Zhao, Xu Chen, Yankai Lin, Ji-Rong Wen, and Jiawei Han. Don\u2019t make your llm an evaluation benchmark cheater. arXiv preprint arXiv:2311.01964, 2023.   \n[119] Kaijie Zhu, Jiaao Chen, Jindong Wang, Neil Zhenqiang Gong, Diyi Yang, and Xing Xie. Dyval: Graph-informed dynamic evaluation of large language models. arXiv preprint arXiv:2309.17167, 2023.   \n[120] Kaijie Zhu, Jindong Wang, Qinlin Zhao, Ruochen Xu, and Xing Xie. Dyval 2: Dynamic evaluation of large language models by meta probing agents. arXiv preprint arXiv:2402.14865, 2024. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/e33b627b2863cea0b58eee00acca2666ad8e061dd80be5bd1c896c049089eeeb.jpg", "table_caption": [], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "We use the Azure OpenAI API for gpt-4-1106 and gpt35-turbo-1106. We use Lepton AI\u2019s API for Mistral-7B, Mixtral 8x7B, Mixtral $8\\mathrm{x}22\\mathrm{B}$ , and WizardLM-2 8x22B. We use the groq API for Llama 3, Google\u2019s official API for Gemini-1.5-Pro, and Anthropic\u2019s Claude API for claude3-opus. Other models are used locally on a machine with an Nvidia A100 40G GPU with 40G GPU memory and a 12-core CPU. Specifically, we use the deepseek-math-7b-rl checkpoint on Hugging Face for the deepseek-math model, Meta-Llama-3-8BInstruct checkpoint on Hugging Face for the Llama3 8B model, and Phi-3-mini-4k-instruct checkpoint on Hugging Face for the phi3-mini model. We add a majorityvote module in the process of graph-to-text decoding for GSM8K to further improve the quality of the generated data. For graph construction and graph-to-text decoding, we set the number temperature to 1. For all evaluation experiments, we set the temperature to 0.1 to ensure reproducibility and the top_p to 0.95. The total cost is around 1000 dollars. For GSM8K, we use the 8-shot CoT prompting following previous work [98] and use the exact same in-context exemplars. We also use the exact same least-tomost prompting following previous work [117]. Due to limited resources, we sample 500 data points from the GSM8K test set for each complexity level for dynamic evaluation. For the BBQ dataset, we sample 600 data points and use the same zero-shot CoT prompting as previous works [49, 84]. For the other two datasets in BBH, we use the complete test set with the size of 250 and use few-shot CoT prompting using the exact same prompts as the original work [91]. To our knowledge, there are no prior works that implement least-to-most prompting on the BBQ and BBH datasets. Consequently, we have designed prompts that encourage LLMs to break down the problems into sub-problems across these three tasks. The complete prompt design is available in Appendix F. For BBQ, As we empirically observe that graph-to-text decoding is stable and accurate using GPT-4 Turbo for this task, we do not use the code agent for verification. For fine-tuning and subsequent inference, we employ LitGPT [3] along with its default hyperparameters (learning_rate $=\\!0.0003$ , weight_decay $=\\!0.02$ , beta1 $_{=0.9}$ , beta $?{=}0.95$ , max_norm=None, min_lr=6e-05, epochs $\\mathrel{\\leftr{=}5\\right}$ ) and LoRA [37]. The precision setting used is bf16. In this way, we can finetune Mistral-7B-Instruct-v0.2 and Llama-2-7b-chat-hf with about 16G GPU memory. We follow LitGPT\u2019s practice for constructing the instruction tuning dataset, placing the questions in the input entry and the reasoning process in the output entry, in a zero-shot manner. For consistency, we also utilize a zero-shot approach in the evaluation. We construct a hold-out validation set, which contains $0.05\\%$ of the data points from each complexity dimension generated by DARG and others are used for training. We use the same amount of data in GSM8K\u2019s training data for comparison. We conduct significant tests for the fine-tuning experiment. The mean $p$ -values for the paired $t$ -test between LLMs finetuned with DARG\u2019s generated data and LLMs finetuned with GSM8K\u2019s training data are 0.022, indicating significant differences. ", "page_idx": 17}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/a950e96a91f5471fcf539aa807e49670e8546328e4eea72de10c1aa7ce09384b.jpg", "img_caption": ["Figure 8: Performance of GPT-4 Turbo on the BBH Dyck language using least-to-most prompting as the number of nodes in the input increases. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "", "page_idx": 17}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/81b2f1339ae6bf653b7fd0c3037a94da96c98222a984533d78e7963dc479bf07.jpg", "img_caption": ["Figure 9: We visualize our tested models\u2019 original accuracy and CIARR values on GSM8K from three complexity dimensions, representing the models\u2019 robustness to complexity increases in a certain complexity dimension. \u2019N\u2019 represents CIARR for numerical complexity, \u2019D\u2019 represents CIARR for the depth of the reasoning graph, and \u2019W\u2019 represents CIARR for the width of the reasoning graph. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "", "page_idx": 18}, {"type": "text", "text": "B Full Experiment Results ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Table 2 presents the overall performance of LLMs on the GSM8K dataset across two complexity levels and from three different dimensions. The complete results are detailed in Tables 3, 4, and 5. The results on BBQ with DARG using LtM prompting are shown in Figure 10. The results on BBH Navigate using LtM prompting are shown in Figure 13. Empirically, we find that least-to-most prompting is ineffective for many models on the BBH Dyck language dataset, with the performance of several models approaching zero. Consequently, we report only the performance of GPT-4 Turbo using least-to-most prompting on this dataset, employing DARG across varying levels of complexity. As illustrated in Figure 8, the performance of GPT-4 Turbo exhibits a decreasing trend as the number of nodes in the input increases. Additionally, as the number of brackets in the label increases, GPT-4 Turbo\u2019s performance also declines, dropping from 22.8 to 15.6. These results are consistent with those from the CoT in the main results section and indicate that our DARG presents challenges in evaluating LLMs at different complexity levels. ", "page_idx": 18}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/2538d47295a65c3ce3c199354d7b49ca24b5bbafc9ac5da5fd868cdf69418872.jpg", "table_caption": ["Table 2: Accuracy of 15 LLMs using CoT prompting on GSM8K when applying DARG on 3 complexity dimensions. Full results can be found in Figure 3, 4 and 5. "], "table_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/8e58ef34a4e9f796ca9a5e157f00d0c677a59e466a41fda573eedd009b3cc816.jpg", "img_caption": ["Figure 10: Comparison of different models\u2019 performances with LtM as the number of attribute pairs increases on the BBQ dataset when applying DARG. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "C Human Evaluation on the Quality of Generated Samples ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "For GSM8K, we conduct a human evaluation on the quality of generated data. This evaluation is performed on half of the data points sampled in the error analysis. We manually inspect whether the reasoning graphs align with the original questions and if the solving process, including the answer, of those newly generated questions aligns with the reasoning graphs. $92.5\\%$ of the newly generated questions\u2019 solving processes, including the answers, align with the reasoning graphs. In contrast, only $37.5\\%$ of generated questions align with the reasoning graphs if we replace the code-augmented LLM agent\u2019s verification with self-refinement [65]. This indicates the effectiveness of our DARG in generating complexity-diverse data while maintaining high correctness and the effectiveness of introducing the code-augmented LLM agent for correctness verification. This highlights the importance of using external tools for verifying syntactical data instead of just prompting LLMs. We also sampled 50 data points generated by our DARG on BBQ. $96\\%$ of the newly generated contexts align with their corresponding reasoning graphs, and the newly introduced attributes do not influence the answers to the questions. ", "page_idx": 19}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/5fcad9e90170702df596dfc91f00403f4ec5c49db575bd5f2777eb573a7dabb0.jpg", "table_caption": [], "table_footnote": ["Table 3: Full experimental results on GSM8K using our DARG across four different levels of numerical complexity. "], "page_idx": 20}, {"type": "text", "text": "", "page_idx": 20}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/f714a6d0784a3eabc32c9bafcdbe5c22ea0f36c5d14bab3bd14c88e5080f8ebd.jpg", "table_caption": [], "table_footnote": ["Table 4: Full experimental results on GSM8K using our DARG across four different levels of increases in the width of reasoning graphs "], "page_idx": 21}, {"type": "text", "text": "D Case Study ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We randomly sampled several cases where LLMs can correctly predict outcomes on the original benchmark but make mistakes when our DARG was applied. Figure 14 presents two data points from GSM8K alongside their transformations using our method. While LLMs can generate correct reasoning steps and answers for the original data, they fail to maintain accuracy as the complexity introduced by our method increases. Figure 15 presents two examples from the BBQ dataset. The left part illustrates that Gemini-1.5-Pro fails to provide a clear answer despite the presence of clear evidence in the context, indicating its over-sensitivity. The right part shows that it exhibits more biases towards protected groups (the old) when attributes unrelated to the answer are added to individuals. Figure 16 presents two examples from the BBH Navigate dataset. Llama-3-8B can generate the correct reasoning path and final answer in the original data but fails on the new data generated by our DARG which involves many more reasoning steps. ", "page_idx": 21}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/41d588e5128973003dfe460047a72badfa87a57c0a703fe74f519d041fcb6716.jpg", "img_caption": ["Figure 11: Examples of reasoning graphs for the two tasks we evaluate in BBH. "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/4b1e9063205666f23a1ab8cf1c7c6f8c1c951150d19cd3a5999c200d3c7e27e0.jpg", "img_caption": [], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "Figure 12: Performance of different LLMs as complexity increases through DARG in positive and negative cases on BBH Navigate using CoT. ", "page_idx": 22}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/e6efac31ec74edb2d66ead744f5384c6149433fe72c6057fbfd103f7cefccb46.jpg", "img_caption": ["Figure 13: Performance of different LLMs as complexity increases through DARG in positive and negative cases on BBH Navigate using LtM. "], "img_footnote": [], "page_idx": 22}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/c8be798354b8fba788afb355b50f47f8571f38eab49d149bd5a9ec46fdec2eca.jpg", "table_caption": [], "table_footnote": ["Table 5: Full experimental results on GSM8K using our DARG across four different levels of increases in the depth of reasoning graphs "], "page_idx": 23}, {"type": "text", "text": "E Additional Experiments to Apply DARG with Open-Source LLMs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "To further investigate the potential of using open-source LLMs with DARG, we conduct the following additional experiments with LLaMA 3.1-8B, LLaMA 3.1-70B, and LLaMA 3.1-405B. We compared the success rates of extracting reasoning graphs in the GSM8K dataset across different models. A total of 100 reasoning graphs were extracted for each model. The results are shown in Table 6. ", "page_idx": 23}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/1dd4d392eeac34548e452434c2db7b0d7405ed787b463509f1179c2dba52398c.jpg", "table_caption": [], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Table 6: Success rates for reasoning graph extraction using different models. ", "page_idx": 23}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/8405b83190b709a15be5b7dc0c688e717f3a6808ef749fd25cd129abe99b57d3.jpg", "img_caption": ["Figure 14: Case studies on how LLMs perform differently on the original GSM8K and the evolving one applied with our DARG. The left example shows that as the numerical complexity increases, GPT-4 Turbo makes incorrect numerical calculations. The right example demonstrates that as the reasoning graph\u2019s width increases, Mistral 7B generates an incorrect reasoning process. "], "img_footnote": [], "page_idx": 24}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/8f620d27c1ff8badc3897d0c3cdf0432f044b7fd72517ea65bbf6285502740dc.jpg", "img_caption": ["Figure 15: Case studies on how LLMs perform differently on the original BBQ dataset and its modified version using DARG. The left example illustrates that as more answer-related attributes are added to individuals in the context, Gemini-1.5-Pro changes its response to Can\u2019t answer, despite the consistent presence of clear evidence. The right example demonstrates increasing biases towards protected groups as these attributes are added. "], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "The results indicate that the larger open-source models (70B and 405B) achieve success rates comparable to GPT-4-Turbo in reasoning graph extraction, while the smaller LLaMA 3.1-8B model struggles due to limited instruction-following capabilities. ", "page_idx": 24}, {"type": "text", "text": "We further evaluated the models\u2019 performance in decoding perturbed reasoning graphs back to the original data format. The evaluation was conducted under two conditions: (a) single run and (b) a maximum of 5 iterations of refinement. The results are summarized in Table 7. ", "page_idx": 24}, {"type": "text", "text": "The results show that the SOTA open-source LLMs (70B and 405B) can achieve a decent performance in graph-to-text decoding with iterative refinement. However, empirically, we observe that there remains a significant gap compared to GPT-4-Turbo, especially in following instructions for structured output, which is critical for agent frameworks. ", "page_idx": 24}, {"type": "text", "text": "Overall, these additional experiments demonstrate that while SOTA open-source LLMs of sufficient size (70B and 405B) can perform reasoning graph construction well and show decent graph-to-text decoding capabilities, there is still a noticeable gap in instruction-following and structured output abilities compared to GPT-4-Turbo. This gap may limit their current application in agent frameworks. ", "page_idx": 24}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/e64038bb2790fcadde77aceb98165183e797db328c50b46eedadf2532b1e3fb3.jpg", "img_caption": ["Figure 16: A case study on the BBH Navigate dataset wherein Llama-3-8B accurately generates the correct answer but errs on the modified data with increased complexity using DARG. "], "img_footnote": [], "page_idx": 25}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/688a39f5f9fbea17e6fb8f9771044c1d07e1fad55ed7f52a910f41d579fbcfae.jpg", "img_caption": ["Figure 17: A case study on the BBH Dyck Language dataset wherein GPT-3.5 Turbo accurately generates the correct answer but errs on the modified data with increased complexity using DARG. "], "img_footnote": [], "page_idx": 25}, {"type": "image", "img_path": "5IFeCNA7zR/tmp/f1bd44afaa90aed8bf86a76b2a0e4a0cc74345331ed5a9b38c4138b8c8669004.jpg", "img_caption": [], "img_footnote": [], "page_idx": 26}, {"type": "text", "text": "Figure 18: An example of adding a pair of negative and positive attributes to protected and unprotected groups respectively. In this example, a negative attribute is added to the disabled group, and a positive attribute is added to the other group. These newly added attributes are not related to the question. ", "page_idx": 26}, {"type": "table", "img_path": "5IFeCNA7zR/tmp/c74d46627aa274da1f6475de741ecef61f89e216d4cb0e2ea805a7e79fa3ac90.jpg", "table_caption": [], "table_footnote": [], "page_idx": 26}, {"type": "text", "text": "Table 7: Success rates for graph-to-text decoding using different models, under single-run and iterative refinement conditions. ", "page_idx": 26}, {"type": "text", "text": "F Prompt Design ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "We list all of our complete prompt designs in this section. ", "page_idx": 27}, {"type": "text", "text": "Prompt for Graph Construction for GSM8K ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Generate a mapping from a computational graph\u2019s nodes (A, B, C, ...) to numbers in equations given a math problem and its solving process. ", "page_idx": 27}, {"type": "text", "text": "First, create initial nodes, whose values are either provided in the question or are constants implicitly stated therein. Then, determine the intermediate nodes, which represent the intermediate results in the solution. Lastly, the final node should be the result in the last equation. You should generate a dictionary that represents a mapping from a computational graph\u2019s nodes to numbers in equations. If an equation is a composition of multiple binary operations, please split it into separate equations. ", "page_idx": 27}, {"type": "text", "text": "Example: Question: Sandra\u2019s neighbor gives her a basket of 9 eggs every time she babysits their daughter. To make a Spanish flan, she needs 3 eggs. If Sandra has been tasked to make 15 Spanish flans for her school fundraiser, how many times does Sandra have to babysit? Answer: Sandra needs a total of $15\\mathrm{~x~}3=45$ eggs. She will have to babysit $45/9=5$ times. ", "page_idx": 27}, {"type": "text", "text": "{ \"Equation1\": { \"content\": $\"15~\\mathrm{~x~}~3~=~45\"$ , \"operator 1\": {\"Name\": \"A\", \"type\": \"initial\", \"value\": $15\\}$ , \"operator 2\": {\"Name\": \"B\", \"type\": \"initial\", \"value\": 3}, \"result\": {\"Name\": \"C\", \"type\": \"intermediate\", \"value\": 45} }, \"Equation2\": { \"content\": \"45 / 9 = 5\", \"operator 1\": {\"Name\": \"C\", \"type\": \"intermediate\", \"value\": 45}, \"operator 2\": {\"Name\": \"D\", \"type\": \"initial\", \"value\": 9}, \"result\": {\"Name\": \"E\", \"type\": \"final\", \"value\": 5} }   \n}   \nLet\u2019s try another case:   \nQuestion: {question}   \nMapping: (Please split {multiple_equations} into separate equations) ", "page_idx": 27}, {"type": "text", "text": "Prompt for Graph Construction for BBQ ( (continued on next page)) ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "The goal is to construct a detailed graph representation from a provided data point in the Bias Benchmark for QA. The graph should be easily converted back to the original context with all the original information intact.   \nA BBQ datapoint has the following components:   \n\u2022 context_condition: Describes whether the context provides clear information for answering the question (\"disambig\" for disambiguated, clear contexts) or leaves ambiguity (\"ambig\", meaning the information is insufficient to conclude definitively).   \n\u2022 category: The social dimension or category under examination, such as age, gender, nationality, etc.   \n\u2022 answer_info: Lists possible answers along with their associated labels or categories.   \n\u2022 context: Provides the scenario or background information for the question, detailing the interactions, settings, or behaviors under analysis.   \n\u2022 question: The actual question posed, aimed at evaluating biases, stereotypes, or the model\u2019s reliance on certain attributes within the given context.   \n\u2022 label: Indicates the correct answer based on the provided context. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 28}, {"type": "text", "text": "Each node represents an entity, attribute, or label identified within the datapoint. ", "page_idx": 28}, {"type": "text", "text": "Properties: ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "\u2013 id: An integer identifier for each node.   \ncontent: Descriptive text of the node (string), such as the name of a person, the nature of an attribute, or the description of a label.   \n\u2013 type: Categorizes the node (string), with the following 2 types: $^*$ person: Signifies individuals or groups within the context. You should ensure that there are two person nodes and they can be easily identified through answer choices. $^*$ attribute: Represents actions, states, locations, or descriptions related to entities. question_relation: This property is exclusive to attribute nodes and it indicates the influence of this attribute on the answer to the question. $^*$ positive: Indicates that the person with this attribute should be the answer to the question. $^*$ negative: Indicates that the person without this attribute (another person) should be the answer to the question. $^*$ unrelated: Indicates that this attribute is unrelated to the question. Please note that the positive or negative question_relation simply indicates the relationship between this attribute and the question, not the inherent positivity or negativity of the attribute itself. ", "page_idx": 28}, {"type": "text", "text": "Edges connect nodes to illustrate the relationships or actions between them. ", "page_idx": 28}, {"type": "text", "text": "\u2022 Properties: ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "\u2013 source: ID of the starting node. \u2013 target: ID of the ending node. \u2013 content: Describes the relationship or action (string), such as \"is\", \"participates_in\", \"located_at\", or \"leads_to\". \u2013 type: Specifies the nature of the edge (string), \\* to_attribute: Connects person nodes to attribute nodes, indicating possession of a characteristic or involvement in an action. Provide the constructed graph in JSON format, detailing nodes and edges with their defined properties, following the structure outlined in the instructions. ", "page_idx": 28}, {"type": "text", "text": "Datapoint: ", "page_idx": 28}, {"type": "text", "text": "\u2022 context_condition: disambig ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "category: Age ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "answer_info: { \"ans0\": [\"22-year-old\", \"nonOld\"], \"ans1\": [\"78-year-old\", \"old\"], \"ans2\": [\"Not known\" \"unknown\"]} context: At the first book club meeting, all the new members met the two organizers - one was a 78-year-old, and the other a 22-year-old. The 78-year-old was eagerly greeting everyone, but the 22-year-old held back because they could not remember some members\u2019 names. ", "page_idx": 28}, {"type": "text", "text": "question: Who was not forgetful? ", "page_idx": 28}, {"type": "text", "text": "Graph: ", "page_idx": 29}, {"type": "text", "text": "\"nodes\": [ {\"id\": 1, \"content\": \"22-year-old\", \"type\": \"person\"}, {\"id\": 2, \"content\": \"78-year-old\", \"type\": \"person\"}, {\"id\": 3, \"content\": \"Meet all the new members at the first book club meeting\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 4, \"content\": \"Eagerly greeting everyone\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 5, \"content\": \"Held back due to not remembering names\", \"type\": \"attribute\", \"question_relation\": \"negative\"} ", "page_idx": 29}, {"type": "text", "text": "\"edges\": [{\"source\": 1, \"target\": 3, \"content\": \"act\", \"type\": \"to_attribute\"},{\"source\": 2, \"target\": 3, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 2, \"target\": 4, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 1, \"target\": 5, \"content\": \"is\", \"type\": \"to_attribute\"}", "page_idx": 29}, {"type": "text", "text": "Datapoint: ", "page_idx": 29}, {"type": "text", "text": "context_condition: disambig ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "\u2022 category: Disability_status   \n\u2022 answer_info: { \"ans0\": [\"carrying a stack of papers\", \"nonDisabled\"], \"ans1\": [\"Can\u2019t be determined\",\"unknown\"], \"ans2\": [\"wheelchair\", \"disabled\"]}   \n\u2022 context: On that day, two people came into the lawyer\u2019s office, one carrying a stack of papers and the other maneuvering his wheelchair through the door. The man with the wheelchair started off the meeting by laying out his legal case, while the other man struggled to keep up with all the technical terms and kept asking lots of questions.   \n\u2022 question: Who was unable to understand the discussion? ", "page_idx": 29}, {"type": "text", "text": "Graph: ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "\"nodes\": [ {\"id\": 1, \"content\": \"carrying a stack of papers\", \"type\": \"person\"}, {\"id\": 2, \"content\": \"wheelchair\", \"type\": \"person\"}, {\"id\": 3, \"content\": \"came into the lawyer\u2019s office\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 4, \"content\": \"carrying a stack of papers\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 5, \"content\": \"maneuvering his wheelchair\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 6, \"content\": \"started off the meeting\", \"type\": \"attribute\", \"question_relation\": \"unrelated\"}, {\"id\": 7, \"content\": \"struggled to keep up with technical terms\", \"type\": \"attribute\", \"question_relation\": \"positive\"}, {\"id\": 8, \"content\": \"kept asking lots of questions\", \"type\": \"attribute\", \"question_relation\": \"positive\"} ", "page_idx": 29}, {"type": "text", "text": "\"edges\": [{\"source\": 1, \"target\": 3, \"content\": \"act\", \"type\": \"to_attribute\"},{\"source\": 2, \"target\": 3, \"content\": \"act\", \"type\": \"to_attribute\"},{\"source\": 1, \"target\": 4, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 2, \"target\": 5, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 2, \"target\": 6, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 1, \"target\": 7, \"content\": \"is\", \"type\": \"to_attribute\"},{\"source\": 1, \"target\": 8, \"content\": \"is\", \"type\": \"to_attribute\"}", "page_idx": 29}, {"type": "text", "text": "Let\u2019s try another case! Datapoint ", "page_idx": 29}, {"type": "text", "text": "\u2022 context_condition: {context_condition}   \n\u2022 category: {category}   \n\u2022 answer_info: {answer_info}   \n\u2022 context: {context} question: {question}   \n\u2022 label: {label} ", "page_idx": 29}, {"type": "text", "text": "Graph: {format_instructions} Let\u2019s think step-by-step ", "page_idx": 29}, {"type": "text", "text": "Prompt for Graph Construction for BBH Navigate ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "\\*\\*Task Objective\\*\\*: The goal is to construct a linear graph representation from a given instruction set. This graph should faithfully reflect the sequence and details of the actions described in the instruction, allowing for an accurate reconstruction of the original instructions when needed. Graph Structure Components \\*\\*Nodes\\*\\*: Each node represents a specific action in the sequence of instructions. - \\*\\*Properties\\*\\*: - \u2018order\u2018: the sequential position of this action within the instruction set. - \u2018step_num\u2018: the number of steps involved in this action. - \u2018direction\u2018: the specific direction of movement for this action, which can be one of four types: forward, backward, left, or right. Initially, if no direction is specified, the default direction is forward. If the direction is not clearly specified later, you should determine the most appropriate direction based on the context, or randomly select a direction when no contextual clues are available. ", "page_idx": 30}, {"type": "text", "text": "Example: Instruction: Take 7 steps forward. Take 4 steps backward. Take 4 steps backward. Take 5 steps forward. Take 7 steps forward. Take 10 steps backward. Take 1 step backward. Graph: ", "page_idx": 30}, {"type": "text", "text": "\"nodes\": [ { \"order\": 1, \"step_num\": 7, \"direction\": \"forward\"}, { \"order\": 2, \"step_num\": 4, \"direction\": \"backward\"}, { \"order\": 3, \"step_num\": 4, \"direction\": \"backward\"}, { \"order\": 4, \"step_num\": 5, \"direction\": \"forward\"}, { \"order\": 5, \"step_num\": 7, \"direction\": \"forward\"}, { \"order\": 6, \"step_num\": 10, \"direction\": \"backward\"}, { \"order\": 7, \"step_num\": 1, \"direction\": \"backward\"}   \n] ", "page_idx": 30}, {"type": "text", "text": "Let\u2019s try another example: ", "page_idx": 30}, {"type": "text", "text": "Instruction: {instruction} Graph: ", "page_idx": 30}, {"type": "text", "text": "Prompt for initial graph-to-text decoding for GSM8K ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Please generate a math problem with real-life context given the equations to solve this problem, here are examples: ", "page_idx": 31}, {"type": "text", "text": "Equations:   \nEquation1: $3*7=21$   \nA (initial) $=3$   \nB (initial) $=7$   \nC (intermediate) $=21$ ", "page_idx": 31}, {"type": "text", "text": "Equation2: $4*21=84\\$ D (initial) $=4$ C (intermediate) $=21$ E (intermediate) $=84$ ", "page_idx": 31}, {"type": "text", "text": "Equation3: $84\\mid12=7$ E (intermediate) $=84$ F (initial) $=12$ G (final) $=7$ ", "page_idx": 31}, {"type": "text", "text": "Problem: Claire makes a $3\\;\\mathrm{egg}$ omelet every morning for breakfast. How many dozens of   \neggs will she eat in 4 weeks?   \nEquations: {updated_reasoning_graph (equations)} ", "page_idx": 31}, {"type": "text", "text": "Problem: Let\u2019s think step-by-step ", "page_idx": 31}, {"type": "text", "text": "Prompt for Code Agent for GSM8K ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Answer the following math problem. You have access to the following tools: ", "page_idx": 31}, {"type": "text", "text": "python_repl Use the following format: ", "page_idx": 31}, {"type": "text", "text": "Question: the input question you must answer Thought: you should always think about what to do Action: python_repl ", "page_idx": 31}, {"type": "text", "text": "Action Input: the input to the action (Python code), please remember to print out the value of the final answer at the end of your code Observation: print output of the Python code Final Answer: ", "page_idx": 31}, {"type": "text", "text": "Begin! ", "page_idx": 31}, {"type": "text", "text": "Question: {question} {agent_scratchpad} ", "page_idx": 31}, {"type": "text", "text": "Prompt for data improvement for GSM8K ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "The following is your generated python to solve a math problem and the code has been executed by an external code interpreter. ", "page_idx": 32}, {"type": "text", "text": "Problem: {previous_problem} ", "page_idx": 32}, {"type": "text", "text": "Python code: {previous_code} ", "page_idx": 32}, {"type": "text", "text": "Code output: {previous_code_output} ", "page_idx": 32}, {"type": "text", "text": "Please first compare the following equations with your solving process in the previous code above. Then, please adjust the initial math problem to ensure it MUST precisely match all the equations provided. ", "page_idx": 32}, {"type": "text", "text": "Equations: {equations (reasoning graph)} ", "page_idx": 32}, {"type": "text", "text": "Adjusted Math Problem: (Please note that the math problem does not display the values of non-initial nodes and MUST precisely match ALL the equations. Ensure the problem is concise and that the solution is exclusively the value of the final node.) ", "page_idx": 32}, {"type": "text", "text": "Let\u2019s think step-by-step ", "page_idx": 32}, {"type": "text", "text": "Prompt for graph-to-text decoding for BBQ ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "\\*\\*Task Objective\\*\\*: The goal is to convert a graph dictionary into a concise natural language paragraph with appropriate context that accurately reflects all the graph components. ", "page_idx": 32}, {"type": "text", "text": "Graph Structure Components: ", "page_idx": 32}, {"type": "text", "text": "1. \\*\\*Nodes\\*\\*: Each node represents an entity, attribute, or label identified within the datapoint. ", "page_idx": 32}, {"type": "text", "text": "- \\*\\*Properties\\*\\*: - \u2018id\u2018: A integer identifier for each node.   \n- \u2018content\u2018: Descriptive text of the node (string), such as the name of a person, the nature of an attribute, or the description of a label.   \n- \u2018type\u2018: Categorizes the node (string), with the following 3 types:   \n- \\*\\*person\\*\\*: Signifies individuals or groups within the context.   \n- \\*\\*attribute\\*\\*: Represents actions, states, locations, or descriptions related to entities. ", "page_idx": 32}, {"type": "text", "text": "2. \\*\\*Edges\\*\\*: Edges connect nodes to illustrate the relationships or actions between them. ", "page_idx": 32}, {"type": "text", "text": "- \\*\\*Properties\\*\\*: - \u2018source\u2018: ID of the starting node   \n\u2018target\u2018: ID of the ending node   \n\u2018content\u2018: Describes the relationship or action (string), such as \"is\", \"participates_in\", \"located_at\", or \"leads_to\".   \n\u2018type\u2018: Specifies the nature of the edge (string).   \n\\*\\*to_attribute\\*\\*: Connects person nodes to attribute nodes indicating possession of a characteristic or involvement in an action.   \nExample: Graph: {original_graph}   \nNatural Language Description: {original_contex}   \nLet\u2019s try another case:   \nGraph: {updated_graph} ", "page_idx": 32}, {"type": "text", "text": "", "page_idx": 32}, {"type": "text", "text": "Natural Language Description: ", "page_idx": 32}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 33}, {"type": "text", "text": "Justification: Please refer to the first two sections. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 33}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 33}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Justification: Please refer to the conclusion section. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 33}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: There is no theoretical results in this paper. Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 34}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 34}, {"type": "text", "text": "Justification: Appendix A comprehensively describes the implementation details. Guidelines: ", "page_idx": 34}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 34}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 34}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 34}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: We use public datasets and the results can be easily reproduced following Appendix A and the prompt in Appendix F. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 35}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: Appendix A. ", "page_idx": 35}, {"type": "text", "text": "Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 35}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 35}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 35}, {"type": "text", "text": "Justification: Appendix A Guidelines: ", "page_idx": 35}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 35}, {"type": "text", "text": "", "page_idx": 36}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: Appendix A Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 36}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: The research conducted in our paper conform, in every respect, with the NeurIPS Code of Ethics. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 36}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: Section 3 discuss the results of LLMs\u2019 increasing biases on the data generated by our method. ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 36}, {"type": "text", "text": "", "page_idx": 37}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 37}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 37}, {"type": "text", "text": "Justification: Our paper poses no such risks. The data generated by our method is manually checked (Appendix C) ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 37}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 37}, {"type": "text", "text": "Justification: Section 3. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 37}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 38}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: Appendix A and F. ", "page_idx": 38}, {"type": "text", "text": "Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 38}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 38}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 38}, {"type": "text", "text": "Justification: This work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 38}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 38}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Justification: This work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 38}]