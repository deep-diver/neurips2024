[{"type": "text", "text": "TreeVI: Reparameterizable Tree-structured Variational Inference for Instance-level Correlation Capturing ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "1School of Computer Science and Engineering, Sun Yat-sen University, Guangzhou, China 2Guangdong Key Laboratory of Big Data Analysis and Processing, Guangzhou, China xiaojx7@mail2.sysu.edu.cn suqliang@mail.sysu.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Mean-field variational inference (VI) is computationally scalable, but its highlydemanding independence requirement hinders it from being applied to wider scenarios. Although many VI methods that take correlation into account have been proposed, these methods generally are not scalable enough to capture the correlation among data instances, which often arises in applications involving graphs or explicit constraints among instances. In this paper, we developed the Tree-structured Variational Inference $(\\mathrm{Tree}\\mathrm{VI})^{2}$ , which uses a tree to capture the correlation among latent variables in the posterior. We show that samples from the tree-structured posterior can be reparameterized efficiently and parallelly, making its training cost just 2 or 3 times that of VI under the mean-field assumption. To capture correlation with more complicated structure, the TreeVI is further extended to the multiple-tree case. Furthermore, we show that the underlying tree structure can be automatically learned from training data. With experiments on synthetic datasets, constrained clustering, user matching and link prediction, we demonstrate the efficacy of TreeVI in capturing instance-level correlation in posteriors and enhancing the performance of downstream applications. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Variational inference is a probabilistic method that is widely used for approximating the exact posterior in latent-variable models $p(\\mathbf{X},\\mathbf{Z})\\,=\\,p(\\mathbf{X}|\\mathbf{Z})p(\\mathbf{Z})$ , with $\\mathbf{X}$ and $\\mathbf{Z}$ being the observed data and latent variable, respectively. When not considering the existence of any relation among instances, we can write the model into a factorized form as $\\begin{array}{r}{p(\\mathbf{X},\\mathbf{Z})=\\prod_{i}p(\\grave{\\mathbf{x}_{i}}|\\mathbf{z}_{i})p(\\mathbf{z}_{i})}\\end{array}$ , where $\\mathbf{x}_{i}$ and $\\mathbf{z}_{i}$ denote the $i$ -th data instance and latent variable. Thanks to the  factorized form, we can reasonably use the mean-field posterior $\\begin{array}{r}{q(\\mathbf{Z}|\\mathbf{X})=\\prod_{i}q(\\mathbf{z}_{i}|\\mathbf{x}_{i})}\\end{array}$ for model inference and training. However, there are also many circumstances, under  which complex relations among instances exist. For instances, in graph-structured data, VGAE [19] uses two instances\u2019 latent representations to model the probability of existing an edge $e_{i j}$ between them via $p(e_{i j}|\\mathbf{z}_{i},\\mathbf{z}_{j})$ , which, obviously, makes all instances coupled together. Also, in the constrained clustering, DC-GMM [24] designs a prior $p(\\mathbf{c};\\mathbf{W})$ to specify the assignment constraints and then uses it to construct the prior distribution $\\begin{array}{r}{p(\\mathbf{Z},\\mathbf{c})=p(\\bar{\\mathbf{c}};\\mathbf{W})\\prod_{i}p(\\mathbf{z}_{i}|\\bar{c}_{i})}\\end{array}$ , which will also cause all $\\mathbf{z}_{i}$ to be correlated with each other. Obviously, under these ci rcumstances, due to the existence of correlation among instances, it is unreasonable to assume a factorized form for the posterior anymore. ", "page_idx": 0}, {"type": "text", "text": "There has been many work on incorporating correlation structures into posterior approximation in variational inference recently [23, 31, 43], and they are mainly focused on modeling correlation structure among different dimensions within each latent variable. However, the amount of latent dimensions is usually no more than a few hundred, at a completely different level from the size of dataset which might be as large as millions. Therefore, these variational inference methods modeling correlations among dimensions cannot be leveraged to capture instance-level correlation especially for large datasets. To investigate correlations among different instances, Tang et al. [36] recently used a tree structure over latent variables to take instance-level correlations into consideration, but only capable of capturing correlations between immediately connected nodes. ", "page_idx": 1}, {"type": "text", "text": "In this work we propose a novel posterior approximation for variational inference, the Tree-structured Variational Inference (TreeVI), that models the latent correlation structure with a tree-structureinduced distribution and enables modeling high-order correlations between non-adjacent latent variables. Our method provides a matrix-form reparametreization for tree-structured correlated latents based on ancestral sampling, that is scalable to large datasets with computational complexity comparable to mean-field variational inference methods. To better capture structural correlation, we also generalize TreeVI to multiple trees, and propose a continuous optimization algorithm to stochastically learn a theoretically correlation-rich tree or mixture-of-trees structure. ", "page_idx": 1}, {"type": "text", "text": "2 Tree-structured Variational Inference ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Consider a latent-variable model $p_{\\pmb\\theta}(\\mathbf{X},\\mathbf{Z})\\,=\\,p_{\\pmb\\theta}(\\mathbf{X}|\\mathbf{Z})p(\\mathbf{Z})$ , where $\\mathbf{X}=[\\mathbf{x}_{1}^{\\top},\\mathbf{x}_{2}^{\\top},\\cdots,\\mathbf{x}_{N}^{\\top}]$ and $\\mathbf{Z}=[\\mathbf{z}_{1}^{\\top},\\mathbf{z}_{2}^{\\top},\\cdots,\\mathbf{z}_{N}^{\\top}]$ ; and $\\mathbf{x}_{i}$ and $\\mathbf{z}_{i}\\,\\in\\,\\mathbb{R}^{D}$ denote the $i$ -th data instance and its corresponding latent variable, respectively. Given the latent-variable model $p_{\\theta}(\\mathbf{X},\\mathbf{Z})$ , variational inference aims to find a distribution that is closet to the true posterior $p_{\\theta}(\\mathbf{Z}|\\mathbf{X})$ from a distribution family $\\mathcal{Q}$ , which is achieved by maximizing the evidence lower bound (ELBO) ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathcal{L}(\\pmb{\\theta},\\pmb{\\phi})=\\mathbb{E}_{\\mathbf{Z}\\sim q_{\\phi}(\\mathbf{Z}|\\mathbf{X})}\\left[\\log p_{\\theta}\\!\\left(\\mathbf{X},\\mathbf{Z}\\right)-\\log q_{\\phi}(\\mathbf{Z}|\\mathbf{X})\\right],\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $q_{\\phi}(\\mathbf{Z}|\\mathbf{X})\\in\\mathcal{Q}$ denotes the approximate posterior parameterized by $\\phi$ . In most of current works, the latent-variable model is assumed to take a factorized form as $\\begin{array}{r}{p_{\\theta}(\\mathbf{X},\\mathbf{Z})=\\prod_{i=1}^{N}p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i})p(\\mathbf{z}_{i})}\\end{array}$ due to the observed independence among data instances. With the factorized form for the model, it can be seen that the true posterior $p_{\\theta}(\\mathbf{Z}|\\mathbf{X})$ also takes a factorized form, hence it is reasonable to choose a fully factorized form $\\begin{array}{r}{q_{\\phi}(\\mathbf{Z}|\\mathbf{X})=\\prod_{i=1}^{N}q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})}\\end{array}$ for the approximate posterior. However, for applications like constrained clusterin g with generative model and generative modeling on graph data, we often need to impose some constraints among the latent variables $\\{\\mathbf{z}_{i}\\}_{i=1}^{N}$ by using a correlated prior distribution $p(\\mathbf{Z})$ with $\\begin{array}{r}{p(\\mathbf{Z})\\,\\neq\\,\\prod_{i=1}^{N}p(\\mathbf{z}_{i})}\\end{array}$ , or use several latent variables $\\mathbf{z}_{j}$ to be responsible for generating a data instance $\\mathbf{x}_{i}$ (e.g., $\\mathbf{x}_{i}$ representing an edge), which will result in $\\begin{array}{r}{p_{\\theta}(\\mathbf{X}|\\mathbf{Z})\\neq\\prod_{i=1}^{N}p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i})}\\end{array}$ . Obviously, under these scenarios, latent variables $\\{\\mathbf{z}_{i}\\}_{i=1}^{N}$ from the true posteri or $p_{\\theta}(\\mathbf{Z}|\\mathbf{X})$ are not independent anymore. Thus, if a factorized posterior $\\begin{array}{r}{q_{\\phi}(\\mathbf{Z}|\\mathbf{X})\\,=\\,\\prod_{i=1}^{N}q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})}\\end{array}$ is still employed to approximate the true posterior, the model will lose the ability to capture the correlations among data instances. To alleviate the deviation caused by mean-field approximation, we propose to approximate the correlation structure with a tree or a mixture-of-tree structure as shown in Fig. 1, respectively. ", "page_idx": 1}, {"type": "text", "text": "2.1 TreeVI: Variational Inference under a Single Tree ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "To capture the correlations among latent variables $\\{\\mathbf{z}_{i}\\}_{i=1}^{N}$ in the posterior distribution, a multivariate normal distribution $q(\\mathbf{Z}|\\mathbf{X})=\\mathcal{N}(\\mathbf{Z};\\mu_{\\mathbf{z}},\\Sigma_{\\mathbf{z}})$ can be used, where $\\mu_{\\mathbf{z}}=[\\pmb{\\mu}_{1}^{\\top},\\cdots,\\pmb{\\mu}_{N}^{\\top}]^{\\top}\\in$ $\\mathbb{R}^{N D}$ is the mean and $\\Sigma_{\\mathbf{z}}\\,=\\,\\mathrm{diag}(\\pmb{\\sigma}_{\\mathbf{z}})\\mathbf{R}\\,\\mathrm{diag}(\\pmb{\\sigma}_{\\mathbf{z}})$ is the $N D\\times N D$ covariance matrix; $\\sigma_{\\mathbf{z}}~=$ $[\\pmb{\\sigma}_{1}^{\\top},\\cdot\\cdot\\cdot\\mathbf{\\tau},\\pmb{\\sigma}_{N}^{\\top}]^{\\top}\\,\\in\\,\\mathbb{R}^{N D}$ is the standard deviation; and $\\mathbf{R}$ means the correlation matrix, with its $(i,j)$ -th block taking the form ", "page_idx": 1}, {"type": "equation", "text": "$$\n[{\\bf R}]_{i j}=\\mathrm{diag}(\\gamma_{i j});\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "$\\gamma_{i j}\\,\\in\\,(-1,1)^{D}$ for $i\\neq j$ denotes the correlation strength between latent variable $\\mathbf{z}_{i}$ and $\\mathbf{z}_{j}$ and $\\gamma_{i i}\\triangleq\\mathbf{1}_{D}$ for $i\\in\\mathcal{V}\\triangleq\\{1,2,\\cdot\\cdot\\cdot,N\\}$ . Here, the diagonal structure assumed for the $(i,j)$ -th block $[\\mathbf{R}]_{i j}$ implies that we are only interested in capturing the correlation among different variables, without considering the correlation of different dimensions within one variable. Actually, due to the relatively low dimensions of a latent variable $\\mathbf{z}_{i}$ , the correlation within a variable can be captured by combining with existing VI methods, but we here omit the modeling of correlation among dimensions for simplicity. In the following context, the diagonal operators are omitted for conciseness. ", "page_idx": 1}, {"type": "image", "img_path": "YjZ6fQAvT7/tmp/a82e197fbbdfa6571f9f237db97ba993313e8e511c02fc40e91d716cd7729921.jpg", "img_caption": ["Figure 1: Comparison between the fully-connected correlation structure and approximation by single and multiple tree-structured variational inference "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "A crucial part of the variational inference is to determine appropriate values for the correlation parameters $\\Gamma^{0}=\\{\\gamma_{i j}:i\\neq j\\in\\mathcal{V}\\}$ . For a general multivariate normal distribution, all correlation parameters in $\\boldsymbol{\\Gamma}^{0}$ are learnable, which admits a highly expressive correlation structure, but also resulting in high computational complexity. The widely-used mean-field approximation reduces the cost by assuming an independence structure within any pair of latent variables, i.e., $\\gamma_{i j}=\\mathbf{0}_{D}$ for any $i\\neq j$ , completely ignoring the correlation among latent variables. In order to achieve a balance between expressiveness and complexity, we propose to approximate the fully-connected correlation structure with a tree structure, introducing our TreeVI, namely tree-structured variational inference. ", "page_idx": 2}, {"type": "text", "text": "The idea of tree-structured variational inference is to impose a tree correlation structure $\\mathbb{T}=(\\mathcal{V},\\mathcal{E})$ among latent variables, as illustrated in the quin-variate example in Fig. 1b. In our TreeVI, given a tree structure $\\mathbb{T}=(\\mathcal{V},\\mathcal{E})$ , we only specify the correlation parameters $\\gamma_{i j}$ for latent variables $(\\mathbf{z}_{i},\\mathbf{z}_{j})$ adjacent on the tree, and for any non-adjacent latent variables $(\\mathbf{z}_{i},\\mathbf{z}_{j})$ , the correlation between then are directly computed as the multiplication of correlation parameters along $\\mathbb{P}_{i\\to j}$ , that is ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\tilde{\\gamma}_{i j}=\\prod_{(s,t)\\in\\mathbb{P}_{i\\to j}}\\gamma_{s t},\\quad(i,j)\\notin\\mathcal{E},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathbb{P}_{i\\to j}$ denotes the path connecting the latent variable $\\mathbf{z}_{i}$ to $\\mathbf{z}_{j}$ on the tree $\\mathbb{T}$ , and the vector multiplication is assigned as Hadamard product. Therefore, only the correlation strengths w.r.t. the edges of the tree $\\mathbb{T}$ are learnable, which can be denoted as $\\mathbf{T}^{\\overline{{\\mathbb{T}}}}=\\{\\gamma_{i j}:(i,j)\\in\\mathcal{E}\\}\\subset\\mathbf{T}^{0}$ . The parameterization leads to a correlation matrix $[\\mathbf{R}^{(\\mathbb{T})}]_{i j}=\\tilde{\\gamma}_{i j}$ that is totally determined by parameters in $\\Gamma^{\\mathbb{T}}$ , with $\\tilde{\\gamma}_{i i}=\\mathbf{1}_{D}$ for $i\\in\\mathcal{V}$ . For example, for the quin-variate tree structure in Fig. 1b, the correlation parameter between $\\mathbf{z}_{1}$ and $\\mathbf{z}_{5}$ is fixed as $\\tilde{\\gamma}_{15}=\\gamma_{12}\\odot\\gamma_{23}\\odot\\gamma_{35}$ . ", "page_idx": 2}, {"type": "text", "text": "With the tree-structured correlation defined above, it can be easily shown that the distribution $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ forms a Markov random field defined by the tree $\\mathbb{T}$ [3], and its joint probability can be expressed as ", "page_idx": 2}, {"type": "equation", "text": "$$\nq_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})=\\prod_{i\\in\\mathcal{V}}q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})\\prod_{(i,j)\\in\\mathcal{E}}\\frac{q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})}{q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})q_{\\phi}(\\mathbf{z}_{j}|\\mathbf{x}_{j})},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the marginal distribution $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})=\\mathcal{N}(\\mathbf{z}_{i};\\pmb{\\mu}_{i},\\mathrm{diag}(\\pmb{\\sigma}_{i}^{2}))$ , and pairwise marginal distribution for adjacent variables $(i,j)\\,\\in\\,{\\dot{\\mathcal{E}}}$ is $q(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})\\,=\\mathcal{N}(\\mathbf{z}_{i},\\mathbf{z}_{j};\\pmb{\\mu}_{i j},\\pmb{\\Sigma}_{i j})$ ; and the mean $\\pmb{\\mu}_{i j}\\ =$ $[\\pmb{\\mu}_{i}^{\\top},\\pmb{\\mu}_{j}^{\\top}]^{\\top}$ and covariance matrix ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\pmb{\\Sigma}_{i j}=\\left[\\pmb{\\sigma}_{i}\\odot\\pmb{\\sigma}_{i}\\qquad\\pmb{\\gamma}_{i j}\\odot\\pmb{\\sigma}_{i}\\odot\\pmb{\\sigma}_{j}\\right];\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "$\\gamma_{i j}$ is the correlation parameter between two adjacent variables. Furthermore, we can also see that the distribution $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ can be represented by an acyclic Bayesian network of the form ", "page_idx": 2}, {"type": "equation", "text": "$$\nq_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})=q_{\\phi}(\\mathbf{z}_{1})\\prod_{(i,j)\\in\\mathcal{E}}q_{\\phi}(\\mathbf{z}_{j}|\\mathbf{z}_{i}),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the conditioning on data $\\mathbf{x}_{i}$ is omitted for conciseness; $\\mathbf{z}_{1}$ is assumed to be the root node; the conditional distribution of latent variables with respect to an edge $(i,j)\\in\\mathcal{E}$ is ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{q_{\\phi}(\\mathbf{z}_{j}|\\mathbf{z}_{i})=\\mathcal{N}\\left(\\mathbf{z}_{j};\\mu_{j}+\\gamma_{i j}\\odot\\sigma_{j}\\odot\\sigma_{i}^{-1}\\odot(\\mathbf{z}_{i}-\\mu_{i}),\\sigma_{j}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{i j}^{2}}\\right).}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "With the conditional distribution $q_{\\phi}(\\mathbf{z}_{j}|\\mathbf{z}_{i})$ , joint samples $(\\mathbf{z}_{1},\\mathbf{z}_{2},\\cdots,\\mathbf{z}_{N})$ can be drawn from $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ with ancestral sampling. By sampling $\\mathbf{z}_{i}$ one by one with ancestral sampling, we can show that the joint sample $\\left(\\mathbf{z}_{1},\\mathbf{z}_{2},\\cdots,\\mathbf{z}_{N}\\right)$ can be equivalently represented by a set of $N$ independent Gaussian noises $\\bar{\\{\\epsilon_{i}\\}}_{i=1}^{N}$ with $\\mathbf{\\epsilon}_{\\epsilon_{i}}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ , as stated in the theorem below. ", "page_idx": 3}, {"type": "text", "text": "Theorem 1. Suppose that $N$ latent variables $\\mathbf{Z}=[\\mathbf{z}_{1},\\cdots\\,,\\mathbf{z}_{N}]^{\\top}$ follow a tree-structured posterior distribution $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ with the tree structure $\\mathbb{T}\\,=\\,(\\mathcal{V},\\mathcal{E})$ , the joint sample $({\\bf z}_{1},{\\bf z}_{2},\\cdot\\cdot\\cdot\\:,{\\bf z}_{N})\\;\\sim$ $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ can be expressed as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{z}_{j}=\\mu_{j}+\\tilde{\\gamma}_{1j}\\odot\\epsilon_{1}\\odot\\sigma_{j}+\\sum_{\\substack{i\\in\\mathbb{P}_{1\\rightarrow j},\\,i\\neq1}}\\tilde{\\gamma}_{i j}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{\\mathrm{pa}(i),i}^{2}}\\odot\\epsilon_{i}\\odot\\sigma_{j},\\quad f o r\\ \\,j\\in\\mathcal{V},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\boldsymbol{\\epsilon}_{i}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ is a Gaussian random noise and $\\mathrm{pa}(i)$ denotes the parent node of $\\mathbf{z}_{i}$ with respect to $i\\in\\mathcal{V}$ . ", "page_idx": 3}, {"type": "text", "text": "For the proof and a concrete example, we refer to Appendix B. With the reparameterization of sample $\\mathbf{z}_{j}$ in Eq. (8), the joint sample $\\mathbf{Z}\\doteq[\\mathbf{\\dot{z}}_{1}^{\\top},\\cdots,\\mathbf{z}_{N}^{\\top}]^{\\top}$ can be re-parameterized in a matrix-form as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{Z}^{(\\mathbb{T})}=\\pmb{\\mu}_{\\mathbf{z}}+\\mathbf{L}_{\\mathbf{z}}^{(\\mathbb{T})}\\pmb{\\epsilon}\\quad\\mathrm{with}\\quad\\pmb{\\epsilon}=[\\epsilon_{1}^{\\top},\\cdot\\cdot\\cdot\\,,\\epsilon_{N}^{\\top}]^{\\top},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\pmb{\\epsilon}_{i}\\;\\sim\\;\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ for $\\textit{i}\\in\\textit{\\V}$ ; and ${\\bf L}_{\\bf z}^{(\\mathbb{T})}$ is a $N D\\,\\times\\,N D$ matrix, with its $(i,j)$ -th block $[\\mathbf{L}_{\\mathbf{z}}^{(\\mathbb{T})}]_{i j}=\\mathrm{diag}(\\ell_{i j})$ , and ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\ell_{i j}=\\left\\{\\begin{array}{l l}{\\tilde{\\gamma}_{1j}\\odot\\pmb{\\sigma}_{j},}&{i=1,j\\in\\mathcal{V},}\\\\ {\\tilde{\\gamma}_{i j}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{\\mathrm{pa}(i),i}^{2}}\\odot\\pmb{\\sigma}_{j},}&{i\\not=1,i\\in\\mathbb{P}_{1\\rightarrow j},j\\in\\mathcal{V},}\\\\ {\\mathbf{0}_{D},}&{\\mathrm{otherwise}.}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Actually, if the variables are indexed according to their positions on the tree $\\mathbb{T}$ from left to right and then top to bottom, it can be easily shown that ${\\bf L}_{\\bf z}^{(\\mathbb{T})}$ is a lower-triangular block matrix. For example, the matrix L(zT) corresponding to the quin-variate example of Fig. 1b can be written as follows ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{L}_{\\mathbf{z}}^{\\mathrm{(T)}}=\\mathrm{diag}(\\sigma_{\\mathbf{z}})\\left[\\begin{array}{l l l}{\\mathbf{1}_{D}}&&\\\\ {\\widetilde{\\gamma}_{12}}&{\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}}&\\\\ {\\widetilde{\\gamma}_{13}}&{\\widetilde{\\gamma}_{23}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}}&{\\sqrt{\\mathbf{1}_{D}-\\gamma_{23}^{2}}}\\\\ {\\widetilde{\\gamma}_{14}}&{\\widetilde{\\gamma}_{24}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}}&{\\mathbf{0}_{D}}&{\\sqrt{\\mathbf{1}_{D}-\\gamma_{24}^{2}}}\\\\ {\\widetilde{\\gamma}_{15}}&{\\widetilde{\\gamma}_{25}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}}&{\\widetilde{\\gamma}_{35}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{23}^{2}}}&{\\mathbf{0}_{D}}&{\\sqrt{\\mathbf{1}_{D}-\\gamma_{35}^{2}}.}\\end{array}\\right]\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathrm{diag(\\cdot)}$ has been omitted for conciseness. ", "page_idx": 3}, {"type": "text", "text": "By parameterizing the mean $\\pmb{\\mu}_{i}$ , standard deviation $\\sigma_{i}$ and the correlation parameters $\\gamma_{i j}$ for $(i,j)\\in$ $\\mathcal{E}$ with a neural network $f_{\\phi}(\\cdot,\\cdot)$ as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\gamma_{i j}=f_{\\phi}(\\mathbf{x}_{i},\\mathbf{x}_{j}),\\quad(i,j)\\in\\mathcal{E},}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "according to Eq. (9), samples drawn from $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ can be reparameterized in the form of neural network parameters $\\phi$ and random Gaussian noise $\\epsilon$ , which can facilitate the training of variational inference significantly. Importantly, except the mean and standard deviation, we only need to reparameterize the parameters $\\mathbf{r}^{\\mathbb{T}}=\\{\\gamma_{i j}:(i,j)\\in\\mathcal{E}\\}$ , while computing the other non-zero elements in ${\\bf L}_{\\bf z}^{(\\mathbb{T})}$ with $\\Gamma^{\\mathbb{T}}$ . In this way, we only need to re-parameterize $|\\mathcal{E}|$ parameters, and thus only need to run $|\\mathcal{E}|$ times of neural network $f_{\\phi}(\\cdot,\\cdot)$ , instead of $\\mathcal{O}(N^{2})$ times in the vanilla method. For a tree, the number of edges $|\\mathcal{E}|\\leq N-1$ , thus we only need to additionally run $\\mathcal{O}(N)$ times of neural networks $f_{\\phi}(\\cdot,\\cdot)$ , in addition to the runs required by the mean-field method. For a mean-field variational inference that assumes independence among instances, for each epoch, it also needs to run $\\mathcal{O}(N)$ ", "page_idx": 3}, {"type": "text", "text": "times of neural network. Thus, the complexity of our proposed method is roughly only 2 times of the mean-field method. As seen in the experiments on constrained clustering, the consumed time of our TreeVI is only 2 to 3 times that of mean-field variational inference methods. ", "page_idx": 4}, {"type": "text", "text": "It should be pointed that if we simply apply Cholesky decomposition to the correlation matrix $\\mathbf{R}$ to produce $\\dot{\\mathbf{R}}=\\mathbf{L}\\mathbf{L}^{\\top}$ and then directly re-parameterize the elements $\\ell_{i j}$ in the lower-triangular matrix $\\mathbf{L}$ by a neural network $f_{\\phi}(\\cdot,\\cdot)$ , that is, $\\ell_{i j}\\,=\\,f_{\\phi}\\bigl(\\mathbf{x}_{i},\\mathbf{x}_{j}\\bigr)$ , then we have to re-parameterize as many as $N(N+1)/2$ elements, i.e., all elements from the lower-triangular positions of $\\mathbf{L}$ need to be re-parameterized, where $N$ is the number of instances in training dataset. That means we need to run the neural network $f_{\\phi}(\\cdot,\\cdot)$ by $\\mathcal{O}(N^{2})$ times for every epoch, which is computationally unacceptable, especially considering that $N$ could be as large as millions in practice. And our main contribution lies at finding a way to reduce the required times of running the neural network $f_{\\phi}(\\cdot,\\cdot)$ from $\\mathcal{O}(N^{2})$ to $\\mathcal{O}(N)$ by restricting the correlation matrix $\\mathbf{R}$ to a special form $\\mathbf{R}^{(\\mathbb{T})}$ constructed from a tree $\\mathbb{T}=(\\mathcal{V},\\mathcal{E})$ , which is actually a dense matrix with its $(i,j)$ -th element $[\\mathbf{R}^{(\\mathbb{T})}]_{i j}=\\tilde{\\gamma}_{i j}$ defined as Eq. (3) for $(i,j)\\notin\\mathcal{E}$ . Under the restricted correlation matrix $\\mathbf{R}^{(\\mathbb{T})}$ , the lower-triangular matrix ${\\bf L}_{\\bf z}^{(\\mathbb{T})}$ possesses a very elegant form, as shown in Eq. (10). The elegance lies at that although ${\\bf L}_{\\bf z}^{(\\mathbb{T})}$ still has $\\mathcal{O}(N^{2})$ non-zero elements, all of these non-zero elements can be explicitly computed from the $\\vert\\mathcal{E}\\vert$ parameters $\\mathbf{\\boldsymbol{\\Gamma}}^{\\mathbb{T}}=\\{\\gamma_{i j}:(i,j)\\in\\mathcal{E}\\}$ . ", "page_idx": 4}, {"type": "text", "text": "With the tree-structured posterior, the data log-likelihood has the evidence lower bound $\\log p(\\mathbf{X})\\geq$ $\\mathbb{E}_{\\mathbf{Z}\\sim q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})}[\\log p_{\\theta}(\\mathbf{X},\\mathbf{Z})]\\,+\\,\\mathcal{H}[q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})]$ , where the first term can be estimated by reparameterization ${\\bf Z}^{(\\mathbb{T})}~\\sim~q_{\\phi}^{\\mathbb{T}}({\\bf Z}|{\\bf X})$ , and the entropy $\\mathcal{H}$ of the tree-structured posterior distribution $\\begin{array}{r}{q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})=\\prod_{i\\in\\mathcal{V}}q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})\\prod_{(i,j)\\in\\mathcal{E}}\\frac{q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})}{q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})q_{\\phi}(\\mathbf{z}_{j}|\\mathbf{x}_{j})}}\\end{array}$ respect to singleton posterior $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ and pairwise posterior can be decomposed as entropy terms with $q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}\\vert\\mathbf{x}_{i},\\mathbf{x}_{j})$ which can be both directly computed (for detailed expressions we refer to Appendix). Therefore, the optimization of variational inference with tree-structured posterior approximation can be simplified as maximizing the following sampling-based evidence lower bound of our proposed TreeVI ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}^{\\mathbb{T}}(\\pmb{\\theta},\\pmb{\\phi},\\mathbf{X})=\\log p_{\\pmb{\\theta}}(\\mathbf{X},\\mathbf{Z}^{\\mathbb{(T)}})+\\mathcal{H}[q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathbf{Z}^{(\\mathbb{T})}$ denotes the tree-structured reparameterization for latent variables with respect to the tree structure $\\mathbb{T}$ . For detailed computation for the evidence lower bound, we refer to Appendix C.1. ", "page_idx": 4}, {"type": "text", "text": "2.2 Extension to Multiple Trees ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The expressiveness of a single tree-structured posterior is still restrictive. To alleviate this issue, we propose to approximate the true posterior with a mixture-of-trees posterior distribution ", "page_idx": 4}, {"type": "equation", "text": "$$\nq_{\\phi}^{\\mathbb{M T}}(\\mathbf{Z}|\\mathbf{X})=\\sum_{m=1}^{M}\\pi_{m}q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where we use a weighted mixture of tree structures $\\mathbb{M T}=\\{\\mathbb{T}_{1},\\cdot\\cdot\\cdot,\\mathbb{T}_{M}\\}$ , as shown in Fig. 1c, to approximate the underlying correlation structure, and the posterior $q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X})$ with respect to the $m$ -th tree component is expressed in the form of Eq. (4). Each tree component $\\mathbb{T}_{m}=(\\boldsymbol{\\nu},\\boldsymbol{\\mathcal{E}}_{m})$ corresponds to a set of latent indices $\\mathcal{V}=\\{1,\\cdots\\,,N\\}$ , a set of pairwise connections $\\mathcal{E}_{m}$ , a set of correlation parameters $\\Gamma^{\\mathbb{T}_{m}}=\\{\\gamma_{i j}^{m}:(i,j)\\in\\mathcal{E}_{m}\\}$ to be learned, and a weight controlled by a tree coefficient $\\pi_{m}$ , where $m=1,\\cdot\\cdot\\cdot,\\mathbf{\\bar{{M}}}$ . ", "page_idx": 4}, {"type": "text", "text": "With the mixture-of-trees posterior, the data log-likelihood has the evidence lower bound $\\log p(\\mathbf{X})\\geq$ $\\begin{array}{r}{\\sum_{m=1}^{M}\\pi_{m}\\mathbb{E}_{\\mathbf{Z}\\sim q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X})}[\\log p_{\\theta}(\\mathbf{X},\\mathbf{Z})]+\\mathcal{H}[q_{\\phi}^{\\mathbb{M T}}(\\mathbf{Z}|\\mathbf{X})]}\\end{array}$ , where the first term can be estimated by tree-structured reparameterization ${\\bf Z}^{(\\mathbb{T}_{m})}\\sim q_{\\phi}^{\\mathbb{T}_{m}}({\\bf Z}|{\\bf X})$ within each tree component $\\mathbb{T}_{m}$ for $m=$ $1,\\cdot\\cdot\\cdot,M$ , but the entropy term has no explicit expression. Since the entropy $\\mathcal{H}[p]$ is concave in the pbryo tbhaeb ilwiteyi gdhitsterdi bsuutimo n $p$ , etnhter oepnitreos pwy iothf  trhees pmeicxtt tuor e-eoafc-htr tereese  pcoostmerpioorn ednist , $\\begin{array}{r}{\\sum_{m=1}^{M}\\pi_{m}\\mathcal{H}[q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X})]}\\end{array}$ which can be similarly computed by the singular and pairwise marginal posterior distributions with respect to each tree component $\\mathbb{T}_{m}$ , $m=1,\\cdot\\cdot\\cdot,M$ . Therefore, the optimization of variational inference with mixture-of-trees posterior approximation can be simplified as maximizing the following sampling-based evidence lower bound of our proposed MTreeVI ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}^{\\mathrm{MT}}(\\boldsymbol{\\theta},\\boldsymbol{\\phi},\\mathbf{X})=\\sum_{m=1}^{M}\\pi_{m}\\left[\\log p_{\\boldsymbol{\\theta}}(\\mathbf{X},\\mathbf{Z}^{(\\mathbb{T}_{m})})+\\mathcal{H}[q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X})]\\right],\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathbf{Z}^{(\\mathbb{T}_{m})}$ denotes the tree-structured reparameterization for latent variables with respect to the tree structure $\\mathbb{T}_{m}$ . For detailed computation for the evidence lower bound, we refer to Appendix C.2. ", "page_idx": 5}, {"type": "text", "text": "2.3 Learning the Tree Structure from Data ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Our proposed tree-structured and mixture-of-trees structured posterior approximation make variational inference with pairwise latent correlations feasible, but a specific tree structure over latent variables need to be determined in advance. In this section, our goal is to develop an efficient algorithm for learning correlation-rich tree structures to approximate the underlying posterior correlation structure. ", "page_idx": 5}, {"type": "text", "text": "To learn a meaningful tree structure from the latent embeddings, we adopt a symmetric binary matrix $\\mathbf{A}\\in\\{0,1\\}^{N\\times N}$ with entries 0 along the diagonal, where each element $a_{i j}\\in\\{0,1\\}$ represents an edge between latents $\\mathbf{z}_{i}$ and $\\mathbf{z}_{j}$ , $i\\neq\\bar{j}\\in\\{1,\\cdots,N\\}$ (here we assume $D=1$ for convenience). ", "page_idx": 5}, {"type": "text", "text": "Proposition 1. Suppose that the symmetric adjacency matrix $\\mathbf{A}\\in\\{0,1\\}^{N\\times N}$ , then the undirected structure induced by adjacency matrix A is acyclic if and only if ", "page_idx": 5}, {"type": "equation", "text": "$$\nh(\\mathbf{A})=\\operatorname{tr}\\mathbf{A}\\exp(\\mathbf{A}^{2})=0\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\operatorname{tr}(\\cdot)$ and $\\exp(\\cdot)$ represent the trace and exponential of a matrix respectively, and $\\odot$ is the Hadamard product. ", "page_idx": 5}, {"type": "text", "text": "For the proof we refer to the Appendix D.1. Inherited from the idea of Zheng et al. [45], we use a similar indicator function $h(\\mathbf{A})$ in Eq. (16) to check the acyclicity of the structure induced by the symmetric binary matrix A. If and only if $h(\\mathbf{A})=0$ , the adjacency matrix A determines a unique acyclic undirected graph, which can be leveraged to build a tree structure $\\mathbb{T}(\\mathbf{A})=(\\mathcal{V},\\mathcal{E})$ with nodes $\\mathcal{V}\\subset\\{1,\\cdots,N\\}$ and edges $\\mathcal{E}=\\{(i,j):a_{i j}\\neq0$ , $i\\neq j\\in\\mathcal{V}\\}$ . Under the constraints Eq. (16), we seek to establish the following continuous optimization problem ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\theta,\\phi,\\mathbf{A}}\\ell(\\theta,\\phi,\\mathbf{X},\\mathbf{A}),\\quad{\\mathrm{subject~to~}}h(\\mathbf{A})=0,\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\ell(\\pmb{\\theta},\\phi,\\mathbf{X},\\mathbf{A})=-\\mathcal{L}^{\\mathbb{T}(\\mathbf{A})}(\\pmb{\\theta},\\phi,\\mathbf{X})$ is the negative of the evidence lower bound given by Eq. (13), and the correlation parameters $\\mathbf{\\Delta}\\mathbf{\\Gamma}^{\\mathbb{T}(\\mathbf{A})}\\,=\\,\\{\\gamma_{i j}\\,:\\,a_{i j}\\,\\neq\\,0,\\,i\\,\\neq\\,j\\,\\in\\,\\mathcal{V}\\}$ of the learned tree is determined by the binary adjacency matrix A with $\\gamma_{i j}\\,=\\,f_{\\phi}\\big(\\mathbf{x}_{i},\\mathbf{x}_{j}\\big)$ calculated by the neural network. A similar optimization can be implemented to stochastically learn a meaningful mixture of trees by using a set of symmetric adjacency matrices $\\mathcal{A}=\\left\\{\\mathbf{A}_{1},\\cdot\\cdot\\cdot\\,,\\mathbf{\\dot{A}}_{M}\\right\\}$ to represent multiple tree components, and further maximizing the evidence lower bound Eq. (15) under acyclic constraints Eq. (16) of each matrix in $\\boldsymbol{\\mathcal{A}}$ . The constrained optimization problem above can be further converted into unconstrained subproblems with Lagrangian multiplies and efficiently solved by numerical algorithms or stochastic gradient methods. For implementation details, we refer to Appendix D.3. ", "page_idx": 5}, {"type": "text", "text": "To initialize the tree structure before constrained optimization, the easiest way is to randomly build from the fully connected graph over data instances by using depth-first search (DFS) algorithm. To enrich the initialized tree structure with neighboring correlation information, the uniform sampling process in the DFS algorithm can be further modified to generate a meaningful neighborhood for each instance, by assigning the probability of sampling a neighbor of each instance according to their similarity. For detailed implementation of the tree initialization, we refer to the Appendix D.2. ", "page_idx": 5}, {"type": "text", "text": "3 Related Work ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Variational inference is broadly used for approximating intractable posterior in latent variable models, but notorious for its restricted variational families, especially mean-field variational family which is still widely used by modern generative models [4, 37]. So far there has been a wide variety of variational inference methods that attempt to improve on traditional mean-field variational inference by modeling dependence structures within latent posterior distribution, such as constructing the variational distribution with a normalizing flow [30, 6, 39], which deterministically transforms a simple probability distribution over latent variable to a complex one through a sequence of invertible and differentiable functions with tractable Jacobians. Besides deterministic transformations, the form of structured variational inference can be diverse, such as constructing with implicit models [12, 35, 26], modeling dependencies between local and global parameters [11, 38], constructing with a mixture of variational distributions [16, 27, 20], determining pairwise dependencies between univariate marginals with copula functions [34, 13, 33], and designing variational distribution with hierarchies [38, 1, 25]. However, these work are mostly focused on distributional assumption over latent dimensions, that fail to be directly extended to capture instance-level correlation structure. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Recently, there has been some work on incorporating instance-level correlation structure in variational inference [24, 36, 29]. Manduchi et al. [24] designs a prior information matrix to express must-link and cannot-link constraints between data in an explicit way, and integrates the instance-level prior information into the framework of variational inference by conditioning on the prior clustering preferences. But the instance-level correlation is only considered in the generative process regardless of the correlation structure induced from latent posterior by still adopting an amortized mean-field variational distribution. The work of Tang et al. [36] is the most related to ours, which takes instancelevel correlation structure into consideration when learning latent representations, but restricts both the prior and posterior distributions to be identically tree-structured for tractable optimization. However, this assumption is unrealistic in most variational inference scenarios, and high-order correlations are unable to be modeled within the tree structure. ", "page_idx": 6}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Tasks & Datasets. We evaluate our methods with four different tasks: synthetic evidence lower bound test, constrained clustering, user matching and link prediction, on synthetic dataset, standard datasets (MNIST, Fashion MNIST, Reuters and STL-10), public movie rating and product rating datasets, respectively. We refer to Appendix E.1 for more dataset details. ", "page_idx": 6}, {"type": "text", "text": "Baselines & Implementation Details. For baselines on the user matching and link prediction tasks, we include the standard variational auto-encoders [18] and a recent modification to VAE [36] taking instance-level correlation structure into consideration. And we also compare our method to the state-of-the-art method learning latent embeddings with graph convolutional networks, GraphSAGE [8]. With regard to the constrained clustering task, we take a variety of constrained clustering methods, e.g., the traditional pairwise constrained K-means (PCKmeans, [2]), deterministic deep constrained clustering method based on DEC (SDEC, [32]) and constrained IDEC (C-IDEC, [44]), as stateof-the-art constrained clustering methods for comparison. We also include the generative models, the unsupervised VaDE [14], the graph augmented VaDE (DGG, [42]), and the weakly-supervised DC-GMM [24]. For comparison, we experiment on our methods TreeVI and MTreeVI, where the number of tree components for the mixture-of-trees posterior is fixed as $M=3$ . Aadditional information related to experimental implementation details are in Appendix E.2. ", "page_idx": 6}, {"type": "text", "text": "4.1 Synthetic VAE ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We design a synthetic dataset with a graph-structured latent variable model. The dataset contains $N=6000$ data points $\\mathbf{x}_{1},\\cdots,\\mathbf{x}_{N}\\in\\mathbb{R}^{D}$ with $D\\,=\\,4$ , each independently generated from the conditional distribution $p(\\mathbf{x}|\\mathbf{z})=\\mathcal{N}(\\mathbf{x};\\mathbf{z},\\sigma^{2}\\mathbf{I}_{4})$ given latent embeddings $\\mathbf{z}_{1},\\cdots,\\mathbf{z}_{N}\\,\\in\\,\\mathbb{R}^{D}$ where $\\sigma^{2}$ is a fixed value and set to 0.5. The latent embeddings $\\mathbf{z}_{1},\\cdots,\\mathbf{z}_{N}$ are drawn from a zero-mean normal distribution $p(\\mathbf{z})\\;=\\;$ $\\mathcal{N}(\\mathbf{z};\\mathbf{0}_{4},\\Sigma_{\\mathbf{z}})$ , and the graph-structured correlation is incorporated into the latent covariance matrix $\\pmb{\\Sigma}_{\\mathbf{z}}=\\mathbf{I}_{4}+\\lambda\\mathbf{A}$ via an affinity matrix $\\mathbf{A}\\,\\in\\,\\mathbb{R}^{4\\times4}$ assigned with a loopy graph structure ", "page_idx": 6}, {"type": "text", "text": "Table 1: Estimated lower bounds (ELBO) of VAE with posterior distributions approximation by meanfield distributions, tree structures $\\mathbb{T}_{1}$ and $\\mathbb{T}_{2}$ , as well as their mixture model $\\mathrm{MTreeVI}(\\mathbb{T}_{1},\\mathbb{T}_{2})$ , compared to ground truth log-likelihood $\\operatorname{\\bar{log}}p(\\mathbf{X})$ . ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathbf{A}={\\left[\\begin{array}{l l l l}{0}&{1}&{0}&{0.3}\\\\ {1}&{0}&{1}&{0.3}\\\\ {0}&{1}&{0}&{0.4}\\\\ {0.3}&{0.3}&{0.4}&{0}\\end{array}\\right]}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/29ba2c8fc375deaf3595626080e945ca81c4e56f80aa521b6d94f25966f4dec1.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/90e4d11c736b8c8ab1d3d705dc1d40d6c617be7bf0c714090fe70b93b801e6d2.jpg", "table_caption": ["Table 2: Clustering performances $(\\%)$ of our proposed methods TreeVI and MTreeVI compared with baselines. Means and standard deviations are computed across 10 runs with different random initializations. $\\dagger$ Results taken from DC-GMM [24] "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "where $\\lambda$ is leveraged to control the overall correlation strength and set to 0.5. Two tree structures over latent dimensions $\\mathbb{T}_{1}=(\\mathcal{V},\\mathcal{E}_{1})$ and $\\mathbb{T}_{2}=(\\mathcal{V},\\mathcal{E}_{2})$ are designed with vertex set $\\mathcal{V}=\\{1,2,3,4\\}$ and edge sets $\\mathcal{E}_{1}=\\{(1,2),(1,3),(2,4)\\}$ and $\\mathcal{E}_{2}=\\{(1,2),(\\bar{1},4),(2,3)\\}$ , respectively. The posterior correlation structure is modeled by $\\mathbb{T}_{1}$ , $\\mathbb{T}_{2}$ and their mixture model $\\mathrm{MTreeVI}(\\mathbb{T}_{1},\\mathbb{T}_{2})$ , with the estimated evidence lower bounds and ground truth log-likelihood shown in Table 1. It can be seen that tree-structured posteriors can learn more correlation information than traditional mean-field approximations. Moreover, different choices of the tree structures influence the amount of correlation information, and mixture of tree components can obtain more correlations than each individual. ", "page_idx": 7}, {"type": "text", "text": "4.2 Constrained Clustering ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Constrained clustering tasks differ from the classic clustering scenario with access to instance-level constraints, consisting of must-links if two samples are believed to belong to the same cluster, and cannot-links, otherwise. Based on the variational deep embedding (VaDE) framework [14], constrained clustering can be formulated as a probabilistic clustering problem with joint probability $p_{\\theta}(\\mathbf{X},\\mathbf{Z},\\mathbf{c})=p_{\\theta}\\mathbf{\\bar{(X|Z)}}p(\\mathbf{Z|c})p(\\mathbf{c})$ , where the sample $\\mathbf{x}_{i}$ is generated from a normal distribution conditioned on $\\mathbf{z}_{i},\\mathbf{z}_{i}$ is sampled from $p(\\mathbf{z}_{i}|c_{i})=\\mathcal{N}(\\mathbf{z}_{i};\\pmb{\\mu}_{c_{i}},\\mathrm{diag}(\\pmb{\\sigma}_{c_{i}}^{2}))$ , and the cluster assignments $\\mathbf{c}\\,=\\,\\{c_{i}\\}_{i=1}^{N}$ are sampled from a categorical distribution. Following previous work [24], we incorporate the clustering preference through a conditional probability $p(\\mathbf{c}|\\mathbf{W})$ with a pairwise prior information matrix W ", "page_idx": 7}, {"type": "equation", "text": "$$\np(\\mathbf{c}|\\mathbf{W}):=\\frac{\\prod_{i}\\pi_{c_{i}}h_{i}(\\mathbf{c},\\mathbf{W})}{\\sum_{\\mathbf{c}}\\prod_{j}\\pi_{c_{j}}h_{j}(\\mathbf{c},\\mathbf{W})}=\\frac{1}{\\Omega(\\pi)}\\prod_{i}\\pi_{c_{i}}h_{i}(\\mathbf{c},\\mathbf{W})\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "where $\\pmb{\\pi}=\\{\\pi_{k}\\}_{k=1}^{K}$ are the weights associated to each cluster, $\\Omega(\\pi)$ is the normalization factor and $\\begin{array}{r}{h_{i}(\\mathbf{c},\\mathbf{W})=\\prod_{j\\neq i}\\bar{\\exp}(\\mathbf{W}_{i j}\\delta_{c_{i}c_{j}})}\\end{array}$ is a weighting function. The pairwise prior information matrix $\\mathbf{W}$ is defined as a symmetric matrix containing the pairwise constraints: $\\mathbf{W}_{i j}>0$ if there is a must-link constraint between $\\mathbf{x}_{i}$ and $\\mathbf{x}_{j}$ , $\\mathbf{W}_{i j}<0$ if there is a cannot-link constraint between $\\mathbf{x}_{i}$ and $\\mathbf{x}_{j}$ , and $\\mathbf{W}_{i j}=0$ otherwise. The values $|\\bar{\\mathbf{W}}_{i j}|\\in[0,\\infty)$ reflect the degree of certainty in the constraints, and are set to $10^{4}$ for all datasets. And 6000 pairwise constraints are used for experiments on both our methods and other constrained clustering baselines. ", "page_idx": 7}, {"type": "text", "text": "The variational posterior distribution is defined as $q_{\\phi}(\\mathbf{Z},\\mathbf{c}|\\mathbf{X})=q_{\\phi}(\\mathbf{Z}|\\mathbf{X})q(\\mathbf{c}|\\mathbf{Z})$ , where the probability of cluster assignments is factorized as $\\begin{array}{r}{q(\\mathbf{c}|\\mathbf{Z})=\\prod_{i}q(c_{i}|\\mathbf{z}_{i})}\\end{array}$ which can be easily computed by Bayes theorem. In the work of DC-GMM [24], the posterior distribution $q_{\\phi}(\\mathbf{Z}|\\mathbf{X})$ for latent variables is assumed to be mean-field which fails to capture the posterior correlation structure, while in our methods TreeVI and MTreeVI, the latent posterior is approximated by tree-structured and mixture-of-trees distribution, respectively. In Table 2 we report the averaged clustering performances across 10 turns of both our proposed methods against baseline methods. Accuracy (ACC), Normalized Mutual Information (NMI), and Adjusted Rand Index (ARI) are used as evaluation metrics. It can be easily observed that our models reach the state-of-the-art clustering performance in all metrics and datasets, benefiting from the correlation structures captured by our designed correlated posteriors. Moreover, due to high efficiency of tree-structured reparameterization, our methods have computational complexity comparable to DC-GMM that adopts the fully factorized posterior distribution. For example, the training of DC-GMM on MNIST dataset each epoch takes 2 to 3 seconds on GeForce RTX 3090, while our TreeVI and MTreeVI take around 5 and 9 seconds, respectively. Further, we plot the tree learned over the constrained clustering experiment on MNIST dataset, as shown in Figure 2. From the figure, we can see that instances from the same category are connected more tightly than those from different categories in the learned tree. This demonstrates that our method has the abilities to capture the underlying inherent correlations among different instances. ", "page_idx": 7}, {"type": "image", "img_path": "YjZ6fQAvT7/tmp/101e95930886bb23e544b2a1bafd695882d1820e664c6511cb871214a734ae5b.jpg", "img_caption": ["Figure 2: T-SNE visualization of MNIST samples in the embedded space and the learnt tree structure of our proposed TreeVI. 100 samples are randomly selected to plot their instance-level tree structure (colored in black). "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "4.3 User Matching ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We evaluate our methods against the baselines on a public movie rating dataset MovieLens 20M. The ratings of each user $u_{i}$ are binarized as a bag-of-word vector $\\mathbf{x}_{u_{i}}$ $(i=1,2,\\cdots,N)$ , and only ratings for movies that have been rated over 1000 times are preserved for simplicity. In our experiments, the watch history of each user $u_{i}$ is randomly split into two halves, leading to two synthetic users $u_{i}^{A}$ and $u_{i}^{B}$ with the most similar movie preference, and a correlation graph $\\mathbb{G}=(\\mathcal{V},\\mathcal{E})$ with nodes $\\bar{\\nu^{\\prime}}=\\{u_{i}^{A},u_{i}^{B}:i=1,\\cdots,N\\}$ and edges $\\mathcal{E}=\\{(u_{i}^{A},u_{i}^{B}):i=1,\\cdot\\cdot\\cdot,N\\}$ . ", "page_idx": 8}, {"type": "text", "text": "Suppose that the joint distribution of rating data $\\mathbf{X}$ and the corresponding latent embeddings $\\mathbf{Z}$ is modeled by $p_{\\theta}(\\dot{\\mathbf{X}},\\mathbf{Z})\\,=\\,p_{\\theta}(\\mathbf{X}|\\mathbf{Z})p(\\mathbf{Z})$ , and the variational posterior distribution is modeled by $q_{\\phi}(\\mathbf{Z}|\\mathbf{X})$ . In the work of CVAE [36], both the prior distribution $p(\\mathbf{Z})$ and posterior distribution $q_{\\phi}(\\mathbf{Z}|\\mathbf{X})$ are designed as weighted sums of tree-structured distributions with respect to each maximal acyclic subgraph of the correlation graph $\\mathbb{G}$ . While in our work, the latent representations are drawn from a Gaussian distribution of the form $p(\\mathbf{Z})=\\mathcal{N}(\\mathbf{Z};\\mathbf{0}_{2N};(\\mathbf{I}_{2N}+\\lambda\\mathbf{A})\\otimes\\mathbf{I}_{D})$ , where the hyper-parameter $\\lambda\\in(0,1)$ is used to control the overall correlation strength, and the affinity matrix $\\bar{\\mathbf{A}}=[\\bar{a}_{i j}]_{i,j\\in\\mathcal{V}}$ is derived from the correlation graph with $a_{i j}=1$ if $(i,j)\\in\\mathcal{E}$ and $a_{i j}=0$ otherwise. And our latent posterior distribution $q_{\\phi}(\\mathbf{Z}|\\bar{\\mathbf{X}})$ is modeled by tree-structured and mixture-of-trees distributions, respectively. ", "page_idx": 8}, {"type": "text", "text": "And our goal is to identify the dual user $u_{i}^{B}$ given a synthetic user $u_{i}^{A}$ from a held-out set in terms of the latent embedding distance. The user data are implemented a random train/test split with a 90/10 ratio, and the synthetic user pairs from the training set are used to train all the methods. To evaluate the user matching accuracies, a fixed number $N^{\\mathrm{eval}}=1000$ of synthetic user pairs are selected from the test set and for each synthetic user $u_{i}^{A}$ (or $u_{i}^{B}$ ), we summarize the ranking of its dual user $u_{i}^{B}$ (or $u_{i}^{A})$ among all other $2N^{\\mathrm{eval}}-1$ synthetic user candidates in terms of latent embedding distances. ", "page_idx": 8}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/23b3b14aef02da050ee310598604fa12e798713ecbf4892ee87711c9ddb78b3d.jpg", "table_caption": ["Table 3: Synthetic user matching test RR "], "table_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/779f08f86e337534f0c1307ac6952a4cc19941ff045c9d380c8c48162663de54.jpg", "table_caption": ["Table 4: Link prediction test Normalized CRR "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "In Table 3 we show the average Reciprocal Ranking (RR) for all the methods, which demonstrates superiority of our model over both implementations for the baseline method CVAE. ", "page_idx": 9}, {"type": "text", "text": "4.4 Link Prediction ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We perform link prediction task on a constructed undirected correlation graph $\\mathbb{G}=(\\mathcal{V},\\mathcal{E})$ within the public product rating dataset Epinions. The rating data are binarized into bag-of-words feature vectors $\\mathbf{x}_{u_{i}}$ for each user $u_{i}$ , and only products that have been rated at least 100 times are kept and users who have rated these products at least once are considered. To construct the undirected graph $\\mathbb{G}$ from the single-directional \"trust\" statements between users $u_{i},u_{j}\\in\\mathcal{V}$ provided by the dataset, we only build an edge $(u_{i},u_{j})\\,\\in\\,\\mathcal{E}$ if both $u_{i}$ trusts $u_{j}$ and $u_{j}$ trusts $u_{i}$ . The experiment setting of our TreeVI and MTreeVI are similar to the user matching task, by defining a correlation graph incorporated prior distribution and approximating latent posterior distribution with tree-structured and mixture-of-trees distributions, respectively. ", "page_idx": 9}, {"type": "text", "text": "The product rating dataset is split for each user $u_{i}~\\in~\\mathcal{V}$ into training and test sets, with emdagxe $\\left(1,{\\frac{1}{20}}\\cdot{\\mathrm{degree}}{\\overline{{(}}}u_{i})\\right)$ terdagine sa lhl elmde tohuot dfso ro tne tsth ee dpgroe dsuect $\\mathcal{E}_{\\mathrm{test}}$ n. g Tdhaet ar.e Tmoa ienvianlgu aetde gtehse  floinr kt hper etrdaiicntiinogn $\\bar{\\mathcal{E}}_{\\mathrm{train}}$ accuracies, we calculate for each user $u_{i}$ the Normalized Cumulative Reciprocal Rank $\\mathrm{{NCRR}_{i}}$ of the ratings of $u_{i}$ \u2019s test edges among all possible connections except for the training edges, in terms of latent embedding distance metrics. Formally, the NCRR value is the $[0,1]$ -normalization of the Cumulative Reciprocal Rank (CRR) formulated as $\\begin{array}{r}{\\mathrm{CRR}_{i}=\\sum_{(u_{i},u_{j})\\in\\dot{\\mathcal{E}}_{\\mathrm{test}}}\\bar{|}\\{k:(u_{i},u_{k})\\notin\\mathcal{E}_{\\mathrm{test}}\\}}\\end{array}$ $\\mathcal{E}_{\\mathrm{train}}$ , $d_{i k}\\leq d_{i j}\\}|^{-1}$ , where $d_{i j}$ represents the latent embedding distance between users $u_{i}$ and $u_{j}$ for $1\\leq i\\neq j\\leq N$ . Larger $\\mathrm{NCRR}_{i}$ indicates better ability to predict held-out test links with respect to each user $u_{i}$ , and the averaged results for all methods are reported in Table 4. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we present a novel variational inference method called TreeVI, that approximates the intractable latent posterior distribution with a tree-structured distribution. This induces a Bayesian network whose ancestral sampling gives a matrix-form reparameterization for the correlated latents and enables efficient optimization. To enrich the correlation structure, TreeVI is further extended to MTreeVI with a mixture of trees to better approximate the underlying posterior. Furthermore, the tree and mixture-of-trees structures are allowed stochastically learned from data by solving a constrained optimization problem under our proposed acyclicity constraints. With correlated posteriors, we show that our methods can capture more correlation information and achieve superior performances in real-world tasks. ", "page_idx": 9}, {"type": "text", "text": "Limitations & Future Work The proposed method requires a tree structure to approximate the graph-structured posterior correlation structure. This limitation is mitigated by adopting a weighted mixture of trees and stochastically learning a correlation-rich tree or mixture-of-trees structure with our proposed constrained optimization. For future work, we will further investigate on correlation structures with higher expressivity for approximating the latent posterior. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgment This work is supported by the National Natural Science Foundation of China (No.   \n62276280, U1811264), Guangzhou Science and Technology Planning Project (No. 2024A04J9967). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Agrawal, A. and Domke, J. (2021). Amortized variational inference for simple hierarchical models. In Neural Information Processing Systems.   \n[2] Basu, S., Banerjee, A., and Mooney, R. J. (2004). Active semi-supervision for pairwise constrained clustering. In Proceedings of the 2004 SIAM international conference on data mining.   \n[3] Bedford, T. and Cooke, R. M. (2001). Probability density decomposition for conditionally dependent random variables modeled by vines. Annals of Mathematics and Artificial Intelligence, 32:245\u2013268.   \n[4] Blei, D. M., Kucukelbir, A., and McAuliffe, J. D. (2016). Variational inference: A review for statisticians. Journal of the American Statistical Association, 112:859 \u2013 877.   \n[5] Byrd, R. H., Lu, P., Nocedal, J., and Zhu, C. (1995). A limited memory algorithm for bound constrained optimization. SIAM Journal on scientific computing, pages 1190\u20131208.   \n[6] Caterini, A., Cornish, R., Sejdinovic, D., and Doucet, A. (2021). Variational inference with continuously-indexed normalizing flows. In Uncertainty in Artificial Intelligence.   \n[7] Coates, A., Ng, A., and Lee, H. (2011). An analysis of single-layer networks in unsupervised feature learning. In International Conference on Artificial Intelligence and Statistics.   \n[8] Hamilton, W. L., Ying, Z., and Leskovec, J. (2017). Inductive representation learning on large graphs. In Neural Information Processing Systems.   \n[9] Harper, F. M., Konstan, J. A., and A., J. (2016). The movielens datasets: History and context. ACM Trans. Interact. Intell. Syst.   \n[10] He, K., Zhang, X., Ren, S., and Sun, J. (2015). Deep residual learning for image recognition. 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 770\u2013778.   \n[11] Hoffman, M. D. and Blei, D. M. (2014). Stochastic structured variational inference. In International Conference on Artificial Intelligence and Statistics.   \n[12] Husz\u00e1r, F. (2017). Variational inference using implicit distributions. ArXiv, abs/1702.08235.   \n[13] Janke, T., Ghanmi, M., and Steinke, F. (2021). Implicit generative copulas. In Neural Information Processing Systems.   \n[14] Jiang, Z., Zheng, Y., Tan, H., Tang, B., and Zhou, H. (2016a). Variational deep embedding: An unsupervised and generative approach to clustering. In International Joint Conference on Artificial Intelligence.   \n[15] Jiang, Z., Zheng, Y., Tan, H., Tang, B., and Zhou, H. (2016b). Variational deep embedding: An unsupervised and generative approach to clustering. In International Joint Conference on Artificial Intelligence.   \n[16] Kim, M. and Pavlovic, V. (2020). Recursive inference for variational autoencoders. Advances in Neural Information Processing Systems.   \n[17] Kingma, D. P. and Ba, J. (2014). Adam: A method for stochastic optimization. CoRR, abs/1412.6980.   \n[18] Kingma, D. P. and Welling, M. (2013). Auto-encoding variational bayes. CoRR.   \n[19] Kipf, T. and Welling, M. (2016). Variational graph auto-encoders. ArXiv, abs/1611.07308.   \n[20] Lambert, M., Chewi, S., Bach, F., Bonnabel, S., and Rigollet, P. (2022). Variational inference via wasserstein gradient flows. Advances in Neural Information Processing Systems.   \n[21] LeCun, Y. and Cortes, C. (2010). MNIST handwritten digit database.   \n[22] Lewis, D. D., Yang, Y., Russell-Rose, T., and Li, F. (2004). Rcv1: A new benchmark collection for text categorization research. Journal of machine learning research, pages 361\u2013397.   \n[23] Lin, W., Hubacher, N., and Khan, M. E. (2018). Variational message passing with structured inference networks. arXiv: Machine Learning.   \n[24] Manduchi, L., Chin-Cheong, K., Michel, H., Wellmann, S., and Vogt, J. (2021). Deep conditional gaussian mixture model for constrained clustering. Advances in Neural Information Processing Systems.   \n[25] Manduchi, L., Vandenhirtz, M., Ryser, A., and Vogt, J. (2023). Tree variational autoencoders. Advances in Neural Information Processing Systems.   \n[26] Moens, V., Ren, H., Maraval, A., Tutunov, R., Wang, J., and Ammar, H. (2021). Efficient semi-implicit variational inference. CoRR, abs/2101.06070.   \n[27] Morningstar, W. R., Vikram, S., Ham, C., Gallagher, A., and Dillon, J. V. (2020). Automatic differentiation variational inference with mixtures. In International Conference on Artificial Intelligence and Statistics.   \n[28] Nemirovski, A. (1999). Optimization II: Standard Numerical Methods for Nonlinear Continuous Optimization.   \n[29] Ou, Z., Su, Q., Yu, J., Liu, B., Wang, J., Zhao, R., Chen, C., and Zheng, Y. (2021). Integrating semantics and neighborhood information with graph-driven generative models for document retrieval. In ACL/IJCNLP (1), pages 2238\u20132249.   \n[30] Papamakarios, G., Pavlakou, T., and Murray, I. (2017). Masked autoregressive flow for density estimation. Advances in neural information processing systems, 30.   \n[31] Pearce, M., Chiappa, S., and Paquet, U. (2018). Comparing interpretable inference models for videos of physical motion. In 1st symposium on advances in approximate bayesian inference.   \n[32] Ren, Y., Hu, K., Dai, X., Pan, L., Hoi, S. C. H., and Xu, Z. (2019). Semi-supervised deep embedded clustering. Neurocomputing, pages 121\u2013130.   \n[33] Smith, M. S. and Loaiza-Maya, R. (2021). Implicit copula variational inference. Journal of Computational and Graphical Statistics.   \n[34] Smith, M. S., Loaiza-Maya, R., and Nott, D. J. (2019). High-dimensional copula variational approximation through transformation. Journal of Computational and Graphical Statistics.   \n[35] Song, J., Meng, C., and Ermon, S. (2021). Denoising diffusion implicit models. In 9th International Conference on Learning Representations.   \n[36] Tang, D., Liang, D., Jebara, T., and Ruozzi, N. (2019). Correlated variational auto-encoders. In International Conference on Machine Learning.   \n[37] T\u00f6lle, M. and Schlaefer, A. (2021). A mean-field variational inference approach to deep image prior for inverse problems in medical imaging. In International Conference on Medical Imaging with Deep Learning.   \n[38] Wang, Q. and Van Hoof, H. (2020). Doubly stochastic variational inference for neural processes with hierarchical latent variables. In International Conference on Machine Learning.   \n[39] Wang, Y., Liu, F., and Schiavazzi, D. E. (2022). Variational inference with nofas: Normalizing flow with adaptive surrogate for computationally expensive models. Journal of Computational Physics.   \n[40] Xiao, H., Rasul, K., and Vollgraf, R. (2017). Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms. ArXiv, abs/1708.07747.   \n[41] Xie, J., Girshick, R. B., and Farhadi, A. (2016). Unsupervised deep embedding for clustering analysis. In ICML.   \n[42] Yang, L., Cheung, N.-M., Li, J., and Fang, J. (2019). Deep clustering by gaussian mixture variational autoencoders with graph embedding. In Proceedings of the IEEE/CVF international conference on computer vision.   \n[43] Yin, P., Zhou, C., He, J., and Neubig, G. (2018). Structvae: Tree-structured latent variable models for semi-supervised semantic parsing. ArXiv, abs/1806.07832.   \n[44] Zhang, H., Basu, S., and Davidson, I. (2019). A framework for deep constrained clustering - algorithms and advances. In ECML/PKDD.   \n[45] Zheng, X., Aragam, B., Ravikumar, P., and Xing, E. P. (2018). Dags with no tears: Continuous optimization for structure learning. In Neural Information Processing Systems. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Precision Matrix of Tree-structured Posterior ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "When latent variables $\\mathbf{Z}=[\\mathbf{z}_{1},\\cdots,\\mathbf{z}_{N}]^{\\top}$ are all Gaussian, it is a well-known consequence of the Hammersley-Clifford theorem that the entries of the precision matrix $\\mathbf{P_{z}}=\\Sigma_{\\mathbf{z}}^{-1}$ correspond to rescaled conditional correlations. Denote $\\mathbf{P_{z}}\\,=\\,[\\mathrm{diag}(\\mathbf{p}_{i j})]_{i,j=1,\\cdots,N}$ with $\\mathbf{p}_{i j}\\,\\bar{\\in}\\,\\mathbb{R}^{D}$ , then the magnitude of $\\mathbf{p}_{i j}$ expresses the correlation of $\\mathbf{z}_{i}$ and $\\mathbf{z}_{j}$ conditioned on other latent variables. In particular, the sparsity pattern of $\\mathbf{p}_{i j}$ reflects the edge structure of the correlation graph: $\\mathbf{p}_{i j}=\\mathbf{0}_{D}$ if and only if zi \u22a5\u22a5zj|z{1,\u00b7\u00b7\u00b7 ,N}\\{i,j}. ", "page_idx": 13}, {"type": "text", "text": "The tree structure $\\mathbb{T}=(\\mathcal{V},\\mathcal{E})$ with non-adjacent correlation parameters defined as Eq. (3) forms a Markov random field with joint probability given by Eq. (4), which follows the principle of conditional independence. Therefore, the precision vector $\\mathbf{p}_{i j}\\neq\\mathbf{0}_{D}$ if and only if latent variables $\\mathbf{z}_{i}$ and $\\mathbf{z}_{j}$ are adjacent, that is, $(i,j)\\in\\mathcal{E}$ . ", "page_idx": 13}, {"type": "text", "text": "Example. In the example of tree-structured correlation approximation with 5 latent variables as shown in Fig. 1b, the precision matrix corresponding to the tree-structured latent covariance matrix can be expressed as ", "page_idx": 13}, {"type": "equation", "text": "$$\n[\\Sigma_{\\mathbf{z}}^{(\\mathbb{T})}]^{-1}=\\mathrm{diag}(\\pmb{\\sigma}_{\\mathbf{z}}^{-1})[\\mathbf{R}^{(\\mathbb{T})}]^{-1}\\,\\mathrm{diag}(\\pmb{\\sigma}_{\\mathbf{z}}^{-1}),\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "with the inverse of tree-structured correlation matrix given by ", "page_idx": 13}, {"type": "equation", "text": "$$\n[\\mathbf{R}^{(\\mathbb{T})}]^{-1}=\\left[\\begin{array}{c c c c c}{\\mathbf{s}_{11}}&{\\mathbf{s}_{12}}&&&\\\\ {\\mathbf{s}_{12}}&{\\mathbf{s}_{22}}&{\\mathbf{s}_{23}}&{\\mathbf{s}_{24}}&\\\\ &{\\mathbf{s}_{23}}&{\\mathbf{s}_{33}}&&{\\mathbf{s}_{35}}\\\\ &{\\mathbf{s}_{24}}&&{\\mathbf{s}_{44}}&\\\\ &&{\\mathbf{s}_{35}}&&{\\mathbf{s}_{55}}\\end{array}\\right],\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "demonstrating that only correlation parameters along the edge set $\\mathcal{E}=\\{(1,2),(2,3),(2,4),(3,5)\\}$ of tree structure $\\mathbb{T}$ has been essentially captured in the underlying correlation structure, where all of the matrix elements are simply combinations of correlation parameters from $\\mathbf{I}^{\\mathbb{T}}=\\{\\gamma_{12},\\gamma_{23},\\gamma_{24},\\gamma_{35}\\}$ : ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{s}_{11}=(\\mathbf{1}_{D}-\\gamma_{12}^{2})^{-1},}\\\\ &{\\mathbf{s}_{12}=-\\gamma_{12}\\odot(\\mathbf{1}_{D}-\\gamma_{12}^{2})^{-1},}\\\\ &{\\mathbf{s}_{22}=(\\mathbf{1}_{D}+2\\gamma_{12}^{2})\\odot\\gamma_{23}^{2}\\odot\\gamma_{24}^{2}-\\gamma_{12}^{2}\\odot\\gamma_{23}^{2}-\\gamma_{12}^{2}\\odot\\gamma_{24}^{2}-\\gamma_{23}^{2}\\odot\\gamma_{24}^{2}]}\\\\ &{\\phantom{2p c}\\odot(\\mathbf{1}_{D}-\\gamma_{12}^{2})^{-1}\\odot(\\mathbf{1}_{D}-\\gamma_{23}^{2})^{-1}\\odot(\\mathbf{1}_{D}-\\gamma_{24}^{2})^{-1},}\\\\ &{\\mathbf{s}_{23}=-\\gamma_{23}\\odot(\\mathbf{1}_{D}-\\gamma_{23}^{2})^{-1},}\\\\ &{\\mathbf{s}_{24}=-\\gamma_{24}\\odot(\\mathbf{1}_{D}-\\gamma_{24}^{2})^{-1},}\\\\ &{\\mathbf{s}_{33}=(\\mathbf{1}_{D}-\\gamma_{23}^{2})^{-1}\\odot(\\mathbf{1}_{D}-\\gamma_{23}^{2})^{-1}\\odot(\\mathbf{1}_{D}-\\gamma_{35}^{2})^{-1},}\\\\ &{\\mathbf{s}_{35}=-\\gamma_{35}\\odot(\\mathbf{1}_{D}-\\gamma_{36}^{2})^{-1},}\\\\ &{\\mathbf{s}_{44}=(\\mathbf{1}_{D}-\\gamma_{24}^{2})^{-1},}\\\\ &{\\mathbf{s}_{55}=(\\mathbf{1}_{D}-\\gamma_{35}^{2})^{-1}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "B Ancestral Sampling for Tree-structured Posterior ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "B.1 Proof of Theorem 1 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Suppose that $N$ latent variables $\\mathbf{Z}=[\\mathbf{z}_{1},\\cdots\\,,\\mathbf{z}_{N}]^{\\top}$ follow a tree-structured posterior distribution given the tree structure $\\mathbb{T}=(\\mathcal{V},\\mathcal{E})$ with $\\mathcal{V}=\\{1,\\cdots\\,,N\\}$ , the ancestral sampling for each latent variable $\\mathbf{z}_{j},j\\in\\mathcal{V}$ can be expressed by ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbf{z}_{j}=\\mu_{j}+\\tilde{\\gamma}_{1j}\\odot\\epsilon_{1}\\odot\\sigma_{j}+\\sum_{\\substack{i\\in\\mathbb{P}_{1\\rightarrow j},i\\neq1}}\\tilde{\\gamma}_{i j}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{\\mathrm{pa}(i),i}^{2}}\\odot\\epsilon_{i}\\odot\\sigma_{j},\\quad j\\in\\mathcal{V},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\pmb{\\epsilon}_{i}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ is a randomly sampled noise from the standard normal distribution and $\\mathrm{pa}(i)$ denotes the parent node of $\\mathbf{z}_{i}$ with respect to $i\\in\\mathcal{V}$ . ", "page_idx": 13}, {"type": "text", "text": "Proof. For each latent variable $\\mathbf{z}_{j}$ , there exist a unique path $\\mathbb{P}_{1\\rightarrow j}\\,=\\,(v_{1},v_{2},\\cdot\\cdot\\cdot\\,,v_{n})$ along the tree-structured Bayesian network that starts from the root node $v_{1}=1$ and ends at the goal node $v_{n}=j$ . The joint distribution along the path $\\mathbb{P}_{1\\rightarrow j}$ is given by ", "page_idx": 14}, {"type": "equation", "text": "$$\nq_{\\phi}(\\mathbf{z}_{v_{1}},\\mathbf{z}_{v_{2}},\\cdot\\cdot\\cdot\\mathbf{\\phi},\\mathbf{z}_{v_{n}})=q_{\\phi}(\\mathbf{z}_{v_{1}})\\prod_{i=1}^{n}q_{\\phi}(\\mathbf{z}_{v_{i+1}}|\\mathbf{z}_{v_{i}}).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The ancestral sampling starts by sampling from $q_{\\phi}(\\mathbf{z}_{v_{1}})\\colon\\mathbf{z}_{v_{1}}=\\mu_{v_{1}}+\\sigma_{v_{1}}\\odot\\epsilon_{v_{1}}$ , where $\\epsilon_{v_{1}}\\sim$ $\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ . Given the observation of ${\\bf z}_{v_{1}}$ , then the latent variable ${\\bf z}_{v_{2}}$ can be sampled using the conditional distribution Eq. (7): ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{z}_{v_{2}}=\\mu_{v_{2}}+\\gamma_{v_{1}v_{2}}\\odot\\pmb{\\sigma}_{v_{2}}\\odot\\pmb{\\sigma}_{v_{1}}^{-1}\\odot\\left(\\mathbf{z}_{v_{1}}-\\mu_{v_{1}}\\right)+\\sqrt{\\mathbf{1}_{D}-\\gamma_{v_{1}v_{2}}^{2}}\\odot\\mathbf{\\epsilon}_{v_{2}}\\odot\\pmb{\\sigma}_{v_{2}}}\\\\ &{\\mathrm{~\\~\\}=\\mu_{v_{2}}+\\gamma_{v_{1}v_{2}}\\odot\\epsilon_{v_{1}}\\odot\\pmb{\\sigma}_{v_{2}}+\\sqrt{\\mathbf{1}_{D}-\\gamma_{v_{1}v_{2}}^{2}}\\odot\\epsilon_{v_{2}}\\odot\\sigma_{v_{2}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Assume that at the $k$ -th step of the ancestral sampling, we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathbf{z}_{v_{k}}=\\mu_{v_{k}}+\\tilde{\\gamma}_{v_{1}v_{k}}\\odot\\epsilon_{v_{1}}\\odot\\sigma_{v_{k}}+\\sum_{i=2}^{k}\\tilde{\\gamma}_{v_{i}v_{k}}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{v_{i-1}v_{i}}^{2}}\\odot\\epsilon_{v_{i}}\\odot\\sigma_{v_{k}},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\tilde{\\gamma}_{v_{i}v_{k}}=\\gamma_{v_{i}v_{i+1}}\\odot\\cdot\\cdot\\odot\\gamma_{v_{k-1}v_{k}}$ for $i<k$ and $\\tilde{\\gamma}_{v_{k}v_{k}}=\\mathbf{1}_{D}$ . Then at the $(k+1)$ -th step of the ancestral sampling, the latent variable $\\mathbf{z}_{v_{k+1}}$ can be similarly sampled by conditional sampling ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{z}_{v_{k+1}}=\\mu_{v_{k+1}}+\\gamma_{v_{k}v_{k+1}}\\odot\\sigma_{v_{k+1}}\\odot\\sigma_{v_{k}}^{-1}\\odot\\left(\\mathbf{z}_{v_{k}}-\\mu_{v_{k}}\\right)+\\sqrt{\\mathbf{1}_{D}-\\gamma_{v_{k}v_{k+1}}^{2}}\\odot\\epsilon_{v_{k+1}}\\odot\\sigma_{v_{k+1}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "equation", "text": "$$\n=\\mu_{v_{k+1}}+\\tilde{\\gamma}_{v_{1}v_{k+1}}\\odot\\epsilon_{v_{1}}\\odot\\sigma_{v_{k+1}}+\\sum_{i=2}^{k+1}\\tilde{\\gamma}_{v_{i}v_{k+1}}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{v_{i-1}v_{i}}^{2}}\\odot\\epsilon_{v_{i}}\\odot\\sigma_{v_{k+1}}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Therefore by induction, the ancestral sampling for the latent variable $\\mathbf{z}_{j}$ can be expressed as ", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\bf z}_{v_{j}}=\\mu_{v_{j}}+\\tilde{\\gamma}_{v_{1}v_{j}}\\odot\\epsilon_{v_{1}}\\odot\\sigma_{v_{j}}+\\sum_{i=2}^{j}\\tilde{\\gamma}_{v_{i}v_{j}}\\odot\\sqrt{{\\bf1}_{D}-\\gamma_{v_{i-1}v_{i}}^{2}}\\odot\\epsilon_{v_{i}}\\odot\\sigma_{v_{j}},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "which is consistent with the expression of Eq. (31). ", "page_idx": 14}, {"type": "text", "text": "B.2 Example of Ancestral Sampling Procedure ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "For the quin-variate example in Fig. 1b, we assume $\\mathbf{z}_{1}$ as the root node, and the detailed ancestral sampling procedure for the tree-structured Bayesian network Eq. (6) is shown as follows. ", "page_idx": 14}, {"type": "text", "text": "1. Start by sampling from $q_{\\phi}(\\mathbf{z}_{1})$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathbf{z}_{1}=\\mu_{1}+\\sigma_{1}\\odot\\epsilon_{1},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\boldsymbol{\\epsilon}_{1}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ ; ", "page_idx": 14}, {"type": "text", "text": "2. Then sample from $q_{\\phi}(\\mathbf{z}_{2}|\\mathbf{z}_{1})$ given the observation of $\\mathbf{z}_{1}$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbf{z}_{2}=\\mu_{2}+\\gamma_{12}\\odot\\pmb{\\sigma}_{2}\\odot\\epsilon_{1}+\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}\\odot\\pmb{\\sigma}_{2}\\odot\\epsilon_{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\mathbf{\\epsilon}_{\\epsilon_{2}}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ ; ", "page_idx": 14}, {"type": "text", "text": "3. Then sample from $q_{\\phi}(\\mathbf{z}_{3}|\\mathbf{z}_{2})$ given the observation of $\\mathbf{z}_{2}$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{z}_{3}=\\mu_{3}+\\gamma_{23}\\odot\\sigma_{3}\\odot\\left(\\gamma_{12}\\odot\\epsilon_{1}+\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}\\odot\\epsilon_{2}\\right)+\\sqrt{\\mathbf{1}_{D}-\\gamma_{23}^{2}}\\odot\\sigma_{3}\\odot\\epsilon_{3}}\\\\ &{\\quad=\\mu_{3}+\\gamma_{12}\\odot\\gamma_{23}\\odot\\sigma_{3}\\odot\\epsilon_{1}+\\gamma_{23}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}\\odot\\sigma_{3}\\odot\\epsilon_{2}}\\\\ &{\\quad\\quad\\quad+\\sqrt{\\mathbf{1}_{D}-\\gamma_{23}^{2}}\\odot\\sigma_{3}\\odot\\epsilon_{3}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "4. Then sample from $q_{\\phi}(\\mathbf{z}_{4}|\\mathbf{z}_{2})$ given the observation of $\\mathbf{z}_{2}$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{z}_{4}=\\mu_{4}+\\gamma_{12}\\odot\\gamma_{24}\\odot\\sigma_{4}\\odot\\epsilon_{1}+\\gamma_{24}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}\\odot\\pmb{\\sigma}_{4}\\odot\\epsilon_{2}}\\\\ &{\\qquad\\qquad+\\,\\sqrt{\\mathbf{1}_{D}-\\gamma_{24}^{2}}\\odot\\pmb{\\sigma}_{4}\\odot\\epsilon_{4}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\mathbf{\\epsilon}_{4}\\sim\\mathcal{N}(\\mathbf{0}_{D},\\mathbf{I}_{D})$ ; ", "page_idx": 15}, {"type": "text", "text": "5. Finally, sample from $q_{\\phi}(\\mathbf{z}_{5}|\\mathbf{z}_{3})$ given the observation of $\\mathbf{z}_{3}$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbf{z}_{5}=\\mu_{5}+\\gamma_{12}\\odot\\gamma_{23}\\odot\\gamma_{35}\\odot\\sigma_{5}\\odot\\epsilon_{1}+\\gamma_{23}\\odot\\gamma_{35}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{12}^{2}}\\odot\\sigma_{5}\\odot\\epsilon_{2}}\\\\ &{\\qquad\\qquad+\\,\\gamma_{35}\\odot\\sqrt{\\mathbf{1}_{D}-\\gamma_{23}^{2}}\\odot\\sigma_{5}\\odot\\epsilon_{3}+\\sqrt{\\mathbf{1}_{D}-\\gamma_{35}^{2}}\\odot\\sigma_{5}\\odot\\epsilon_{5}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "It is easily noted that, the expression of each latent sample in this ancestral sampling procedure is consistent to Eq. (8). ", "page_idx": 15}, {"type": "text", "text": "C Evidence Lower Bound ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "C.1 Evidence Lower Bound for TreeVI ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "For a tree-structured posterior approximation with respect to the tree structure $\\mathbb{T}=\\left(\\mathcal{V},\\mathcal{E}\\right)$ , the evidence lower bound of our proposed TreeVI is given by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}^{\\mathbb{T}}(\\pmb{\\theta},\\pmb{\\phi},\\mathbf{X})=\\log p_{\\pmb{\\theta}}(\\mathbf{X},\\mathbf{Z}^{\\mathrm{(T)}})+\\mathcal{H}[q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})],}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\mathbf{Z}^{(\\mathbb{T})}$ denotes the tree-structured reparameterization for latent variables. The first term can be directly computed by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\log p_{\\theta}(\\mathbf{X},\\mathbf{Z}^{\\mathrm{(T)}})=\\sum_{i=1}^{N}\\log p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i}^{\\mathrm{(T)}})+\\log p(\\mathbf{z}_{i}^{\\mathrm{(T)}}),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $\\mathbf{z}_{i}^{(\\mathbb{T})}$ is the reparameterization for latent variable $\\mathbf{z}_{i}$ , $i=1,\\cdot\\cdot\\cdot,N$ . And the entropy of the treestructured posterior $q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})$ can be factorized as entropy terms with respect to singleton posterior $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ and pairwise posterior $q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}\\vert\\mathbf{x}_{i},\\mathbf{x}_{j})$ ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathcal{H}[q_{\\phi}^{\\mathbb{T}}(\\mathbf{Z}|\\mathbf{X})]=\\sum_{i\\in\\nu}\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})]+\\sum_{(i,j)\\in\\mathcal{E}}\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})]-\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})]-\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where the entropy of singleton posterior $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})=\\mathcal{N}(\\mathbf{z}_{i};\\pmb{\\mu}_{i},\\mathrm{diag}(\\pmb{\\sigma}_{i}^{2}))$ is given by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})]=-\\mathbb{E}_{\\mathbf{z}_{i}\\sim q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})}[\\log{q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})}]}}\\\\ &{}&{=-\\mathbb{E}_{\\mathbf{z}_{i}\\sim q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})}\\left[\\log{\\left[(2\\pi)^{-\\frac{D}{2}}|\\mathbf{\\sum}_{i}|^{-\\frac{1}{2}}\\exp{\\left(-\\frac{1}{2}(\\mathbf{z}_{i}-\\mu_{i})^{\\top}\\mathbf{\\Sigma}_{i}^{-1}(\\mathbf{z}_{i}-\\mu_{i})\\right)}\\right]}\\right]}\\\\ &{}&{\\stackrel{(4)}{=}\\frac{D}{2}[1+\\log(2\\pi)]+\\frac{1}{2}\\log|\\mathbf{\\Sigma}_{i}|}\\\\ &{}&{=\\frac{D}{2}[1+\\log(2\\pi)]+\\frac{1}{2}\\displaystyle\\sum_{d=1}^{D}\\log\\sigma_{d d}^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $\\begin{array}{r}{\\Sigma_{i}=\\mathrm{diag}(\\pmb{\\sigma}_{i}^{2})}\\end{array}$ , and the step $\\star$ relies on several properties of the trace operator: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{\\mathbf{z}_{i}}\\left[(\\mathbf{z}_{i}-\\mu_{i})^{\\top}\\Sigma_{i}^{-1}(\\mathbf{z}_{i}-\\mu_{i})\\right]=\\mathbb{E}_{\\mathbf{z}_{i}}\\left[\\mathrm{tr}\\left((\\mathbf{z}_{i}-\\mu_{i})^{\\top}\\Sigma_{i}^{-1}(\\mathbf{z}_{i}-\\mu_{i})\\right)\\right]}\\\\ &{\\phantom{=}=\\mathbb{E}_{\\mathbf{z}_{i}}\\left[\\mathrm{tr}\\left(\\Sigma_{i}^{-1}(\\mathbf{z}_{i}-\\mu_{i})^{\\top}(\\mathbf{z}_{i}-\\mu_{i})\\right)\\right]}\\\\ &{\\phantom{=}=\\mathrm{tr}\\left(\\Sigma_{i}^{-1}\\mathbb{E}_{\\mathbf{z}_{i}}\\left[(\\mathbf{z}_{i}-\\mu_{i})^{\\top}(\\mathbf{z}_{i}-\\mu_{i})\\right]\\right)}\\\\ &{\\phantom{=}=\\mathrm{tr}\\big(\\Sigma_{i}^{-1}\\Sigma\\big)=\\mathrm{tr}(\\mathbf{I}_{D})=D.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "And the entropy of pairwise posterior $q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})\\,=\\mathcal{N}(\\mathbf{z}_{i},\\mathbf{z}_{j};\\pmb{\\mu}_{i j},\\pmb{\\Sigma}_{i j})$ with mean $\\pmb{\\mu}_{i j}\\,=$ $[\\pmb{\\mu}_{i},\\pmb{\\mu}_{j}]^{\\top}$ and covariance matrix ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\pmb{\\Sigma}_{i j}=\\left[\\pmb{\\sigma}_{i}\\odot\\pmb{\\sigma}_{i}\\qquad\\pmb{\\gamma}_{i j}\\odot\\pmb{\\sigma}_{i}\\odot\\pmb{\\sigma}_{j}\\right]\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "is similarly given by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\mathcal{H}[q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})]=-\\mathbb{E}_{\\mathbf{z}_{i},\\mathbf{z}_{j}}[\\log q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}|\\mathbf{x}_{i},\\mathbf{x}_{j})]}&{{}\\quad\\mathrm{(56)}}\\\\ {=-\\mathbb{E}_{\\mathbf{z}_{i j}}\\left[\\log\\left[(2\\pi)^{-D}|\\mathbf{\\Sigma}_{i j}|^{-\\frac{1}{2}}\\exp\\left(-\\frac{1}{2}(\\mathbf{z}_{i j}-\\mu_{i j})^{\\top}\\mathbf{\\Sigma}_{i j}^{-1}(\\mathbf{z}_{i j}-\\mu_{i j})\\right)\\right]\\right]}&{{}\\quad}&{}\\\\ {\\quad}&{{}}&{\\quad\\mathrm{(57)}}\\\\ {=D+D\\log(2\\pi)+\\frac{1}{2}\\log|\\mathbf{\\Sigma}_{i j}|}&{{}\\quad\\mathrm{(58)}}\\\\ {\\quad}&{{}=D+D\\log(2\\pi)+\\frac{1}{2}\\displaystyle\\sum_{d=1}^{D}\\left[\\log(1-\\gamma_{i j d}^{2})+\\log\\sigma_{i d}^{2}+\\log\\sigma_{j d}^{2}\\right]}&{{}\\quad\\mathrm{(59)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where we denote $\\mathbf{z}_{i j}=[\\mathbf{z}_{i},\\mathbf{z}_{j}]^{\\top}$ . ", "page_idx": 16}, {"type": "text", "text": "C.2 Evidence Lower Bound for MTreeVI ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "For a mixture-of-trees structured posterior approximation with respect to the mixture of tree components $\\mathbb{M T}=\\{\\mathbb{T}_{1},\\cdot\\cdot\\cdot,\\mathbb{T}_{M}\\}$ , the evidence lower bound of our proposed MTreeVI is given by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathcal{L}^{\\mathrm{MT}}(\\pmb{\\theta},\\pmb{\\phi},\\mathbf{X})=\\sum_{m=1}^{M}\\pi_{m}\\left[\\log p_{\\pmb{\\theta}}(\\mathbf{X},\\mathbf{Z}^{(\\mathbb{T}_{m})})+\\mathcal{H}[q_{\\phi}^{\\mathbb{T}_{m}}(\\mathbf{Z}|\\mathbf{X})]\\right],\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $\\mathbf{Z}^{(\\mathbb{T}_{m})}$ denotes the tree-structured reparameterization for latent variables with respect to the $m$ -th tree component $\\mathbb{T}_{m}$ , $m=1,\\cdot\\cdot\\cdot,M$ . The first weighted summations can be directly computed by ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\sum_{m=1}^{M}\\pi_{m}\\log p_{\\theta}(\\mathbf{X},\\mathbf{Z}^{(\\mathbb{T}_{m})})=\\sum_{m=1}^{M}\\pi_{m}\\sum_{i=1}^{N}\\log p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i}^{(\\mathbb{T}_{m})})+\\log p(\\mathbf{z}_{i}^{(\\mathbb{T}_{m})}),\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $\\mathbf{z}_{i}^{(\\mathbb{T}_{m})}$ is the reparameterization for latent variable $\\mathbf{z}_{i}$ , $i=1,\\cdot\\cdot\\cdot,N$ with respect to the $m$ -th tree component, $m=1,\\cdot\\cdot\\cdot,M$ . And the weighted summations of the entropy terms can be similarly ", "page_idx": 16}, {"type": "text", "text": "factorized and calculated as Appendix C.1 by entropy terms with respect to singleton posteriors $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ and pairwise posteriors $q_{\\phi}(\\mathbf{z}_{i},\\mathbf{z}_{j}\\vert\\mathbf{x}_{i},\\mathbf{x}_{j})$ . ", "page_idx": 17}, {"type": "text", "text": "D Constrained Optimization Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "D.1 Proof of Proposition 1 ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Recall that the spectral radius $r(\\cdot)$ is the largest absolute eigenvalue of a matrix. The following show characterizations for acyclicity of the undirected structure induced by the symmetric matrix A: ", "page_idx": 17}, {"type": "text", "text": "1. Suppose that $\\mathbf{A}\\in\\{0,1\\}^{N\\times N}$ and $r(\\mathbf{A})<1.$ , then A is acyclic if and only if ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{tr}\\mathbf{A}(\\mathbf{I}_{N}-\\mathbf{A}^{2})^{-1}=0.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "2. Suppose that $\\mathbf{A}\\in\\{0,1\\}^{N\\times N}$ , then A is acyclic if and only if ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{tr}\\mathbf{A}\\exp(\\mathbf{A}^{2})=0.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "3. Suppose that ${\\bf A}\\in\\mathbb{R}^{N\\times N}$ , then A is acyclic if and only if ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{tr}(\\mathbf{A}\\odot\\mathbf{A})\\exp[(\\mathbf{A}\\odot\\mathbf{A})^{2}]=0,\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where $\\operatorname{tr}(\\cdot)$ and $\\exp(\\cdot)$ represent the trace and exponential of a matrix respectively, and $\\odot$ is the Hadamard product. ", "page_idx": 17}, {"type": "text", "text": "Proof. The proof relies on the fact that $\\mathrm{tr}\\,\\mathbf{A}^{k}$ counts the number of length- $k$ closed walks in a directed graph. ", "page_idx": 17}, {"type": "text", "text": "Clearly the directed graph induced by the symmetric matrix A will only have self-loops, and hence $\\operatorname{tr}\\mathbf{A}^{2k+1}\\breve{=}\\,0$ for all $k=1,\\cdots,\\infty$ . In other words, $\\mathbf{A}$ has no cycles if and only if $\\begin{array}{r}{f(\\mathbf{A})=\\sum_{k=1}^{\\infty}\\sum_{i=1}^{N}(\\mathbf{A}^{2k+1})_{i i}=0}\\end{array}$ , then ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{tr}\\mathbf{A}(\\mathbf{I}_{N}-\\mathbf{A}^{2})^{-1}=\\operatorname{tr}\\sum_{k=1}^{\\infty}\\mathbf{A}^{2k+1}=\\sum_{k=1}^{\\infty}\\sum_{i=1}^{N}(\\mathbf{A}^{2k+1})_{i i}=0.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "The desired result follows. ", "page_idx": 17}, {"type": "text", "text": "2. Similar to the proof of Proposition 1.1 by noting that $\\mathbf{A}$ has no cycles if and only if $(\\mathbf{A}^{2k+1})_{i i}=0$ for all $k\\geq1$ and all $i\\in\\{1,\\cdots\\,,N\\}$ , which is true if and only if ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\operatorname{tr}\\mathbf{A}\\exp(\\mathbf{A}^{2})=\\operatorname{tr}\\sum_{k=1}^{\\infty}{\\frac{1}{k!}}\\mathbf{A}^{2k+1}=\\sum_{k=1}^{\\infty}\\sum_{i=1}^{N}{\\frac{1}{k!}}(\\mathbf{A}^{2k+1})_{i i}=0.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "3. The proof is similar to Proposition 1.2 by replacing $\\mathbf{A}$ with $\\mathbf{A}\\odot\\mathbf{A}$ , which counts weighted closed walks. ", "page_idx": 17}, {"type": "text", "text": "D.2 Greedy Searched Initialization ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "The constrained optimization of tree structure requires an initialization by construction from data, and the easiest way of tree construction is to randomly build from the fully-connected graph by using depth-first-search (DFS) algorithm. Algorithm 1 shows the DFS algorithm for our tree initialization. In the algorithm, $R C_{[\\cdot]}$ means randomly choosing one index according to the indicator function; $I D_{[\\cdot]}$ represents the set of node indexes satisfying the indicator condition and $\\mathcal{N}(i)$ denotes the neighbors of node $i$ . ", "page_idx": 17}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/c40692c9a78ee3dba6635773ce1e2b747a4b4b0df1def8baa916491cb7cddb80.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "To enrich the constructed spanning tree with neighboring correlation information, the uniform sampling process (line 16 in Algorithm 1) in the DFS algorithm can be further modified to generate a meaningful neighborhood for each data instance, by assigning the probability of sampling neighbor $j$ of instance $i$ as ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\frac{\\exp(\\cos(\\mathbf{x}_{j}^{\\top}\\mathbf{x}_{i})/\\alpha)}{\\sum_{k\\in\\mathcal{N}(i}\\exp(\\cos(\\mathbf{x}_{k}^{\\top}\\mathbf{x}_{i})/\\alpha)},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where $\\alpha$ is the temperature parameter controlling the trade-off between the precision and diversity of edges, and we find the best configuration of $\\alpha$ on the validation set with the values in $\\{0.1,0.2,\\cdots\\,,1.0\\}$ . ", "page_idx": 18}, {"type": "text", "text": "In Table 5, we show the constrained clustering accuracies on the MNIST dataset, with different initializations, and with or without our constrained optimization. It can be seen that without constrained optimization, both initializations underperform. And with constrained optimization, both initializations converge to substantially better performances, with the greedy-searched initialization slightly better. Overall, the constrained optimization procedure makes our proposed TreeVI less sensitive to initializations. ", "page_idx": 18}, {"type": "text", "text": "Table 5: Constrained clustering accuracies $(\\%)$ on the MNIST dataset, with random tree or greedysearched tree initializations, with or without our constrained optimization ", "page_idx": 18}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/23c4b000ea0a7e8b2ef1bc03c2f49e9eca5d09ae4168ea475f5b01506aa34627.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "D.3 Solving Constrained Optimization ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "In section 2.3, we establish a continuous characterization of acyclicity, leading to the following equality-constrained program (ECP) ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\underset{\\mathbf{A}\\in\\mathbb{R}^{N\\times N}}{\\mathrm{min}}}&{\\ell(\\mathbf{A})}\\\\ {\\mathrm{subject\\,to}}&{h(\\mathbf{A})=0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Solving the constrained optimization requires classical techniques from the mathematical optimization literature. However, this is a nonconvex program since $\\{\\mathbf{A}:h(\\mathbf{A})=0\\}$ is a non-convex constraint, and hence we are aiming to find its stationary points with non-convex optimization. The algorithm for solving Eq. (68) consists of three steps: $(i)$ converting the constrained problem into a series of unconstrained subproblems, $(i i)$ optimizing the unconstrained subproblems, and $(i i i)$ thresholding. The full algorithm is outlined in Algorithm 2. ", "page_idx": 19}, {"type": "text", "text": "Algorithm 2 Algorithm for Constrained Optimization ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Input: Initial guess $\\left(\\mathbf{A}_{0},\\alpha_{0}\\right)$ ; progress rate $c\\in(0,1)$ ; tolerance $\\epsilon>0$ ; threshold $\\omega>0$   \nOutput: Threshold matrix A   \n1: for $t=0,1,2,\\cdot\\cdot\\cdot$ do   \n2: Solve $\\mathbf{A}_{t+1}\\leftarrow\\arg\\operatorname*{min}_{\\mathbf{A}}$ $L^{\\rho}(\\mathbf{A},\\alpha_{t})$ with $\\rho$ such that $h(\\mathbf{A}_{t+1})<c h(\\mathbf{A}_{t})$   \n3: $\\alpha_{t+1}\\leftarrow\\alpha_{t}+\\rho h(\\mathbf{A}_{t+1})$ \u25b7Dual ascent   \n4: if $h(\\mathbf{A}_{t+1})<\\epsilon$ then   \n5: $\\widehat{\\mathbf{A}}\\gets\\mathbf{A}_{t+1}$   \n6: break   \n7: end if   \n8: end for   \n9: $\\mathbf{A}\\gets\\mathbf{\\widehat{A}}\\odot\\mathbf{1}(|\\mathbf{\\widehat{A}}|>\\omega)$ ", "page_idx": 19}, {"type": "text", "text": "Converting constrained optimization into unconstrained subproblems. The augmented Lagrangian method [28] can be leveraged to solve the equality-constrained program Eq. (68) by first augmenting the original problem with a quadratic penalty: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\displaystyle\\min_{\\mathbf{A}\\in\\mathbb{R}^{N\\times N}}}&{\\displaystyle\\ell(\\mathbf{A})+\\frac{\\rho}{2}|h(\\mathbf{A})|^{2}}\\\\ {\\mathrm{subject\\,to}}&{h(\\mathbf{A})=0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "with a penalty parameter $\\rho>0$ , which approximates well the solution of the original constrained problem by the solution of unconstrained problems without increasing $\\rho$ to infinity. Then the algorithm implements dual ascent for Eq. (69) by defining a dual function with Lagrange multiplier $\\alpha$ ", "page_idx": 19}, {"type": "equation", "text": "$$\nD(\\alpha)=\\operatorname*{min}_{\\mathbf{A}\\in\\mathbb{R}^{N\\times N}}L^{\\rho}(\\mathbf{A},\\alpha),\n$$", "text_format": "latex", "page_idx": 19}, {"type": "equation", "text": "$L^{\\rho}(\\mathbf{A},\\alpha)=\\ell(\\mathbf{A})+{\\frac{\\rho}{2}}|h(\\mathbf{A})|^{2}+\\alpha h(\\mathbf{A})$ ", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "is the augmented Lagrangian. And the goal is to find a local solution to the dual problem ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\alpha\\in\\mathbb{R}}D(\\alpha).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Let $\\mathbf{A}_{\\alpha}^{*}$ be the local minimizer of the Lagrangian (70) at $\\alpha$ , i.e., $D(\\alpha)=L^{\\rho}(\\mathbf{A}_{\\alpha}^{*},\\alpha)$ . Since the dual objective $D(\\alpha)$ is linear in $\\alpha$ with the derivative simply given by $\\nabla D(\\alpha)=h(\\mathbf{A}_{\\alpha}^{*})$ , one can perform dual gradient ascent to optimize the dual problem (72): ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\alpha\\leftarrow\\alpha+\\rho h(\\mathbf{A}_{\\alpha}^{*}).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Solving the unconstrained subproblem. The augmented Lagrangian converts the constrained problem (69) into a series of subproblems (70), and our goal is to solve these subproblems efficiently. Let $\\pmb{a}=\\mathrm{vec}(\\mathbf{A})\\in\\mathbf{R}^{p}$ , with $p=N^{2}$ . The unconstrained subproblem (70) can be considered as a ", "page_idx": 19}, {"type": "text", "text": "typical minimization problem over real vectors: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{a\\in\\mathbb{R}^{p}}f(a),\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "is a smooth objective, for which a number of efficient numerical algorithms are available, such as L-BFGS [5]. In our experiments, the values of $\\textbf{\\em a}$ can be learned by a neural network that encodes pairwise correlation. ", "page_idx": 20}, {"type": "text", "text": "Thresholding. Motivated by post-processing estimates of coefficients via hard thresholding, we threshold the edge weights as follows: after obtaining a stationary point $\\widehat{\\bf A}$ of (69) given a fixed threshold $\\omega>0$ , set any weights smaller than $\\omega$ in absolute value to zero. This strategy also has the effect of \"rounding\" the numerical solution of the augmented Lagrangian (69), since the solution satisfies $h(\\widehat{\\mathbf{A}})\\leq\\epsilon$ for some all tolerance $\\epsilon$ (set to $\\epsilon=10^{-8}$ in our experiments) instead of $h(\\widehat{\\mathbf{A}})=0$ strictly due  to numerical precisions. However, a small threshold $\\omega$ suffices to rule out cycle-i nducing edges since $h(\\widehat{\\mathbf{A}})$ explicity quantifies the acyclicity of $\\widehat{\\bf A}$ . Following [45], a fixed value of threshold $\\omega=0.3$ is set in all our experiments. ", "page_idx": 20}, {"type": "text", "text": "E Experimental Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "E.1 Datasets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "The datasets used in the experiments are the followings: ", "page_idx": 20}, {"type": "text", "text": "\u2022 MovieLens 20M: A dataset describing ratings and free-text tagging activities from MovieLens, a movie recommendation service. It contains 20,000,263 ratings and 465,564 tag applications across 27,278 movies created by 138,493 users [9].   \n\u2022 Epinions: A dataset that records ratings and trust statements issued by users from Epinions, a consumers opinion site where users can review items and assign them numeric ratings in the range 1 to 5, and also express their Web of Trust by issuing trust statements. It consists of 49,290 users who rated a total of 139,738 different items at least once. The total number of review is 664,824. The total number of issued trust statements is 487,181.   \n\u2022 MNIST: It consists of 70,000 handwritten digits. The images are centered and of size 28 by 28 pixels, each reshaped to a 784-dimensional vector [21].   \n\u2022 Fashion MNIST: A dataset of Zalando\u2019s article images consisting of a training set of 60,000 examples and a test set of 10,000 examples [40].   \n\u2022 Reuters: It contains 810,000 English news stories [22]. Following the work of [41], we used 4 root categories: corporate/industrial, government/social, markets, and economics as labels and discarded all documents with multiple labels, which results in a 685,071-article dataset. We computed tf-idf features on the 2000 most frequent words to represent all articles. A random subset of 10,000 documents is then sampled.   \n\u2022 STL-10: It contains color images of 96-by-96 pixel size. There are 10 classes with 13,000 examples each [7]. As pre-processing, we extracted features from the STL-10 image dataset using a ResNet-50 [10], as in previous works [15]. ", "page_idx": 20}, {"type": "text", "text": "E.2 Implementation Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Synthetic Data. For synthetic VAEs, we apply a two-layer feed-forward neural network for the generative model $p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i})$ and a two-layer feed-forward neural network for the variational posterior approximation $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ , with each $\\mathbf{z}_{i}\\ \\in\\ \\mathbb{R}^{D}$ where $D\\ =\\ 4$ . The traditional meanfield approximation assumes the posterior distribution for each latent to be fully factorized: $\\begin{array}{r}{q_{\\phi}(\\mathbf{z}_{i}|\\bar{\\mathbf{x}_{i}})=\\prod_{d=1}^{D}q_{\\phi}(z_{i d}|x_{i d})}\\end{array}$ d, , wwhihliec hin  coaunr  bme eftahcotdosr itzheed  pionsttoe rsiionrg ilse taosns upmosetde rtioo rb uarnedd $q_{\\phi}(z_{i d}|x_{i d})$ pairwise posterior $q_{\\phi}(z_{i d},z_{i e}\\vert x_{i d},x_{i e})$ both assumed to be Gaussian. Each edge in the tree structure corresponds to a correlation parameter $\\gamma_{d e}$ to be learned in the bi-variate normal distribution, which is shared for all data points to capture dimension-level correlation. Our synthetic VAE is trained for 200 epochs for all methods. We apply stochastic gradient optimizations with a step size of 0.005, and use the Adam algorithm [17] to adjust the learning rates. ", "page_idx": 20}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/e6ed174d27d48e810c9ac3bc257cbf616af5a3cb52da608fd7d6f79e17b30155.jpg", "table_caption": ["Table 6: Hyperparameters setting of constrained clustering task. "], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "Constrained Clustering. To implement our methods, we are careful in maintaining a fair comparison with the baseline methods. In particular, we adopt the same encoder and decoder feed-forward architecture used by the baseline method: four layers of 500, 500, 2000, $D$ units respectively, where $D=10$ unless stated otherwise. VAE-based baselines and the VAEs equipped with our posterior approximation methods are pretrained for 10 epochs while the DEC-based baselines involve 50 epochs of pretraining for each layer and 100 epochs of pretraining as finetuning. Each dataset is divided into training and test sets, where the former one is used for training and our reported results are operated on the latter one. The pairwise constraints used in our experiments are randomly chosen within the training set, by randomly sampling any two data points and assigning a must-link if they have the same label and a cannot-link otherwise. The absolute values of the elements $|W_{i j}|$ in the pairwise prior information matrix are set to $10^{4}$ for all datasets for convenience, and 6000 pairwise constraints are sampled for training both our methods and other baselines. Following DC-GMM [24], the hyper-parameters are universally set for four different datasets, as shown in Table 6. The learning rate is set to 0.001 and it decreases every 20 epochs with a decay rate of 0.9. The number of tree components adopted in our MTreeVI is set to $M=3$ . ", "page_idx": 21}, {"type": "text", "text": "User Matching & Link Prediction. For both tasks of user matching and link prediction, we set the dimensionality of latent embeddings as $D=100$ for all methods. For VAE-based methods (including TreeVI and MTreeVI), we apply a two-layer feed-forward neural network for the generative model $p_{\\theta}(\\mathbf{x}_{i}|\\mathbf{z}_{i})$ and a two-layer feed-forward neural network for the posterior approximation $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ . The model likelihood function $p_{\\pmb{\\theta}}(\\mathbf{X}|\\mathbf{Z})$ is a multinomial distribution, and the singleton posterior distributions $q_{\\phi}(\\mathbf{z}_{i}|\\mathbf{x}_{i})$ are all diagonal normal distributions. For $\\mathrm{CVAE_{\\mathrm{corr}}}$ and our methods, we also learn a two-layer feed-forward neural network that takes the concatenation $[\\mathbf{x}_{i};\\mathbf{x}_{j}]$ as input and output the correlation parameter between $\\mathbf{z}_{i}$ and $\\mathbf{z}_{j}$ on each of the $D$ dimensions. To determine the tree structure for TreeVI and MTreeVI, we take average of these correlation parameters across all $D$ dimensions and obtain a correlation matrix $\\mathbf{A}\\in\\mathbb{R}^{N\\times N}$ or a set of correlation matrices that is used for constrained optimization. For GraphSAGE, we choose to use $K=2$ aggregation steps and use the mean aggregator function. We use $Q=20$ negative samples to optimize the loss function. For all methods, we apply stochastic gradient optimizations with a step size of 0.001, and use the Adam optimizer to adjust the learning rates. The number of tree components adopted in our MTreeVI is set to $M=3$ for both tasks. ", "page_idx": 21}, {"type": "text", "text": "E.3 Further Experiments ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Synthetic Data. We design a synthetic dataset with a graph-structured latent variable model. The dataset contains $N\\,=\\,6000$ data points $\\mathbf{x}_{1},\\cdots,\\mathbf{x}_{N}\\in\\vec{\\mathbb{R}}^{D}$ with $D=4$ , each independently generated from the conditional distribution $p(\\mathbf{x}|\\mathbf{z})\\,=\\,\\mathcal{N}(\\mathbf{x};\\theta\\mathbf{z},\\sigma^{2}\\mathbf{I}_{4})$ given latent embeddings $\\bar{\\mathbf{z}}_{1},\\cdots,\\mathbf{z}_{N}\\in\\mathbb{R}^{D}$ where $\\sigma^{2}$ is a fixed value and set to 0.5. The latent embeddings $\\mathbf{z}_{1},\\cdots,\\mathbf{z}_{N}$ are drawn from a standard normal distribution $p(\\mathbf{z})=\\mathcal{N}(\\mathbf{z};\\mathbf{0}_{4},\\mathbf{I}_{4})$ , and the graph-structured correlation ", "page_idx": 21}, {"type": "text", "text": "Table 7: Estimated lower bounds (ELBO) of VAE with posterior distributions approximation by meanfield, tree-structured, and mixture-of-trees distributions, compared to ground truth log-likelihood $\\log p(\\mathbf{X})$ . ", "page_idx": 22}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/5a9d3d54648a312e6f308840b3ee68c0c5914ad6abb9b89c32f5c0740eb45bf8.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "table", "img_path": "YjZ6fQAvT7/tmp/bb17ca8c1eea4289cf5ede5a1c50f7b8c1c110b54269812320233c8b6de3f400.jpg", "table_caption": ["Table 8: Clustering with constructed affinity matrices performances $(\\%)$ of our proposed methods TreeVI and MTreeVI compared with baselines "], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "is incorporated into the sample generation via a coefficient matrix $\\pmb{\\theta}$ ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\theta={\\left[\\begin{array}{l l l l}{2}&{0}&{1}&{0}\\\\ {1}&{2}&{0}&{0}\\\\ {0}&{1}&{2}&{0}\\\\ {0.3}&{0.3}&{0.4}&{2}\\end{array}\\right]}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "And we adopt different number of tree components to model the posterior correlation, the comparison of their estimated evidence lower bounds to the ground truth log-likelihood is presented in Table 7. It can be observed that tree-structured poterior beneftis from capturing more pairwise correlations, and the mixture of more tree components better approximates the ground truth log-likelihood. ", "page_idx": 22}, {"type": "text", "text": "Clustering with Constructed Affinity Matrix. Besides the weak supervision of pairwise constraints, we also analyze the unsupervised scenario of constructed affinity matrix in this work, where we construct an affinity matrix under a specific similarity measure and each entry is a value between $[0,1]$ reflecting the similarity between a sample pair. To construct the affinity matrix $\\mathbf{W}$ , we find a set of nearest neighbors for a given data point and compute their similarity using a predefined kernel function, such as Gaussian kernel ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\mathbf{W}_{i j}=\\left\\{\\stackrel{\\exp\\left(-\\frac{\\left\\|\\mathbf{x}_{i}-\\mathbf{x}_{j}\\right\\|_{2}^{2}}{2s_{i}^{2}}\\right),}{\\left\\|0,\\right\\|}\\right.\\}\\;\\;\\mathrm{if}\\;\\mathbf{x}_{j}\\in\\mathcal{N}(\\mathbf{x}_{i})\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where $s_{i}$ is a predefined scalar, $\\mathcal{N}(\\mathbf{x}_{i})$ denotes the set consisting of the nearest $N_{s}$ neighbors of $\\mathbf{x}_{i}$ . To enhance robustness to different datasets, we train a Siamese network to measure the similarity between data points. With the constructed affinity matrix $\\mathbf{W}$ , the conditional distribution of the cluster assignment can be similarly defined as Eq. (19), with the weighting function modified as ", "page_idx": 22}, {"type": "equation", "text": "$$\nh_{i}(\\mathbf{c},\\mathbf{W})=\\prod_{j\\neq i}\\exp\\left[\\mathbf{W}_{i j}\\delta_{c_{i}c_{j}}+(1-\\mathbf{W}_{i j})(1-\\delta_{c_{i}c_{j}})\\right].\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "The clustering performances of our proposed methods against baseline methods are shown in Table 8. ", "page_idx": 22}, {"type": "text", "text": "E.4 Resource Usage ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Experiments were conducted on an internal computing cluster. Each experiment configuration used one NVIDIA GPU (either a 2080TI or 3090TI), 16 CPUs and a total of 24GB of memory. ", "page_idx": 23}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The main claims in the abstract and introduction have clearly reflected the paper\u2019s main contributions in the following context. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 24}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: Limitations of our work has been discussed in Section 5 in the paper. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 24}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Assumptions for the theoretical results are given in the descriptions of theorem or proposition, and the proofs are included in the Appendix 31 and D.1, respectively. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 25}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: The datasets, baseline methods and implementation details needed to reproduce the experimental results are included in the Section 4, and we refer to Appendix E for more experimental details. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 25}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 26}, {"type": "text", "text": "Answer: [No] ", "page_idx": 26}, {"type": "text", "text": "Justification: The datasets and experimental settings are provided in Section 4 and Appendix E, and our code will be submitted to the GitHub repository soon. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 26}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: Training details of all our experiments have been specified in the Appendix E. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 26}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: The statistical significances of our experiments that support the main claims of the paper are shown in Table 1, Table 2, Table 3 and Table 4, respectively. And the related metrics have been depicted in the context. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 26}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 27}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The computer resources needed to reproduce our experiments have been specified in Appendix E.4. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 27}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We have reviewed the NeurIPS Code of Ethics, and make sure that our research follows the Code of Ethics. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 27}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our work mainly focuses on basic theory about combination of variational inference and instance-level correlation structure, meaning that there is no societal impact to be addressed. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 28}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: Our experiments are conducted on standard and public datasets available for everyone, and our proposed methods focus on basic theory with regards to variational inference without safety risks. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 28}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: Datasets used in our experiments are all public, and their related papers have been cited in our paper. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: No new assets are introduced or released in our paper. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 29}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 29}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 29}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 30}]