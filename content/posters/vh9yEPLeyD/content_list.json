[{"type": "text", "text": "Can We Leave Deepfake Data Behind in Training Deepfake Detector? ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jikang Cheng1,\u2217 Zhiyuan Yan2, Ying Zhang3, Yuhao Luo2, Zhongyuan Wang1,\u2020 Chen Li3 ", "page_idx": 0}, {"type": "text", "text": "1 School of Computer Science, Wuhan University 2 The Chinese University of Hong Kong, Shenzhen (CUHK-Shenzhen) 3 WeChat, Tencent Inc. ChengJikang@whu.edu.cn, wzy_hope@163.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The generalization ability of deepfake detectors is vital for their applications in realworld scenarios. One effective solution to enhance this ability is to train the models with manually-blended data, which we termed \u201cblendfake\u201d, encouraging models to learn generic forgery artifacts like blending boundary. Interestingly, current SoTA methods utilize blendfake without incorporating any deepfake data in their training process. This is likely because previous empirical observations suggest that vanilla hybrid training (VHT), which combines deepfake and blendfake data, results in inferior performance to methods using only blendfake data (so-called $^{\\ast}1\\!+\\!1\\!<\\!2^{\\ast}.$ ). Therefore, a critical question arises: Can we leave deepfake behind and rely solely on blendfake data to train an effective deepfake detector? Intuitively, as deepfakes also contain additional informative forgery clues (e.g., deep generative artifacts), excluding all deepfake data in training deepfake detectors seems counter-intuitive. In this paper, we rethink the role of blendfake in detecting deepfakes and formulate the process from \"real to blendfake to deepfake\" to be a progressive transition. Specifically, blendfake and deepfake can be explicitly delineated as the oriented pivot anchors between \"real-to-fake\" transitions. The accumulation of forgery information should be oriented and progressively increasing during this transition process. To this end, we propose an Oriented Progressive Regularizor (OPR) to establish the constraints that compel the distribution of anchors to be discretely arranged. Furthermore, we introduce feature bridging to facilitate the smooth transition between adjacent anchors. Extensive experiments confirm that our design allows leveraging forgery information from both blendfake and deepfake effectively and comprehensively. Code is available at https://github.com/beautyremain/ProDet. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In recent years, the development of deepfake3 has aroused significant concerns regarding privacy and security among the public. Deepfake detection aims to identify whether a face from an unknown source has been manipulated by deepfake techniques. Most detection methods perform promisingly when trained and tested on identical manipulations. However, given the unpredictability and complexity of real-world scenarios, it is increasingly critical for these methods to generalize and identify previously unseen manipulations. One particularly effective and mainstream solution is data synthesis, which involves image blending to create new training forgery samples [7, 28, 39, 27, 55]. ", "page_idx": 0}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/17f4796e0620481746ceb5e7fc2a948f8ce13e09c3a1ef271c7b75cc893e9a7e.jpg", "img_caption": ["Figure 1: 1a: The detection performance experiences an abnormal decline when naively combining deepfake and blendfake as the negative sample for training, even though the forgery information is enriched in this process. 1b: Illustration Example for illustrating latent space organization. With progressively organized latent space (ours), information in both deepfake and blendfake is effectively leveraged, and deepfake samples become easier to distinguish from the real. See Fig. 4a and 9 for experimental results of actual latent-space distribution. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Specifically, these methods aim to synthesize pseudo-fake data that share forgery similarities with the actual deepfake data. The pseudo-fake data is generated by blending a real face with a near-landmark fake face [7], near-landmark real face [55, 27], or a real face itself [28, 39]. Considering the \u201cdeep\u201d process is not involved during pseudo-fake data generation (without utilizing any deep network), we term these manually-blended pseudo-fake faces as blendfake faces to differentiate them from deepfake faces. The learned information from training on blendfake is similar to that on Deepfake: by simulating the blending operations in the Deepfake generation process, detectors trained on blendfake can identify generalized blending clues. In comparison to deepfake, blendfake necessitates the use of two images with closely matching landmarks (or with itself) for generation, thereby curtailing its practical utility. However, this also means that blendfake contains fewer forgery clues compared with Deepfake and its distribution is closer to that of real images, making blendfake a conveniently obtained hard sample for detector training. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we commence with a question that many researchers may ponder: Can the blendfake face entirely substitute the actual AI-generated deepfake face in training deepfake detectors? As shown in Fig. 1a, considering the empirically inferior performance of using both deepfake and blendfake for training, exclusively utilizing blendfake as the negative sample becomes the mainstream scheme for data-synthesis methods [39, 27], where actual deepfake data is deliberately excluded. However, given that actual deepfake data is widely available in real-world scenarios, and it should contain extra forgery clues (e.g., generative artifacts in deep net) absent in blendfake, training a deepfake detector without using any deepfake data seems counter-intuitive. Therefore, we argue that the significance of deepfake samples is underestimated due to insufficient exploration of how to appropriately utilize these samples. As illustrated in Fig. 1b, we attribute the abnormal efficiency of VHT to the unorganized latent-space distribution, while a carefully organized latent-space distribution is proven advantageous to network performance [26, 53, 2]. Specifically, since deepfake and blendfake are entangled while also distinctly containing forgery clues, the direct VHT may fail to disentangle the learned representation in the latent space. Inspired by introducing inductive bias that can reflect the structure of the underlying data (i.e., real, blendfake, and deepfake in our case) is beneficial to feature robustness and generalization ability [19, 13, 23], we want to organize the latent space based on an inductive observation. As shown in Fig. 2, it can be observed that the transition from real to fake is a progressive process. Based on the observation, we posit that the latent space distribution from real to blendfake to deepfake should also be conceptualized as a progressive process, where real can gradually become deepfake through a continuous transition. That is, in the latent feature space, the distribution of blendfake and deepfake can be regarded as \u201coriented pivot anchors\u201d in the progressive transition from real to fake. Achieving this progressive organization can disentangle learned representations of blendfake and deepfake data, thereby enabling more effective use of forgery clues from both data types. Consequently, we propose ProDet (deepfake Detection with Progressive transition) to achieve the progressive transition in the latent space that we envisioned. ", "page_idx": 1}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/f32b68b67c19dc714f81dc49e9dd21ec7a2604c0286d1d40306735c234cf8a59.jpg", "img_caption": ["Figure 2: The progressive transition from real to fake, where blendfake and deepfake are explicitly delineated as the oriented pivot anchors according to their inherent forgery attributes. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "As shown in Fig. 2, the oriented anchors used in this paper include four types: real, SBI [39], CBI [27], and fake, where both SBI (self-blended image) and CBI (cross-blended image) represent blendfakes. Within our framework, the anticipated progressive transition can be concretely understood as a progressive accumulation of forgery information, encompassing three specific aspects: the presence of blending clues, identity inconsistency, and generative artifacts of deep neural nets. To implement the aforementioned progressive effect, we consider ordering the distribution of these transition anchors by allocating different hard labels. Therefore, we introduce a module named Oriented Progressive Regularizer (OPR) to fully utilize the forgery information in all oriented anchors. OPR contains a triplet one-hot classifier corresponding to the forgery attributes and a projector to re-dimension the output auxiliary attention map, which is aligned with the feature dimensions and serves to guide the final detection results. Based on the inherent forgery attributes of different anchors, the label of the triplet one-hot output can be viewed as a cumulative three-bit binary number. Consequently, we establish the constraints that compel the distribution of anchors to be arranged in a progressive manner. To \u201cbuild bridges\u201d between the distinct adjacent anchors, we propose feature bridging to simulate continuous transitions between adjacent anchors. Specifically, feature bridging conducts the mixup to the extracted features of two adjacent anchors at random ratios, predicting mixed labels for these blended features to facilitate a smooth and continuous transition process. Additionally, to enhance the progressive transition process between different anchor distributions, we further propose the transition loss, which constrains an extracted feature to transform into its adjacent distribution after undergoing noise addition and specific mapping. ", "page_idx": 2}, {"type": "text", "text": "2 Related Works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "2.1 Deepfake Detection Toward Generalization Ability ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Deepfake detection aims to determine the authenticity of images potentially manipulated by deepfake approaches. Various detection methods concentrate on distinct facial features, such as movements of the lips [22] and the consistency of facial action units [4]. In parallel, several studies aim to optimize neural network architectures, including MesoNet [1], Xception [12], and CapsuleNet [34], to elevate detection efficacy. Based on the observation of model bias in the detector, many methods [51, 30] are proposed to remove certain general biases found in the forgery samples. Moreover, Chen et al. [20] construct a test sample-specific auxiliary task to improve the detection performance. To capture local-to-global information, Guan et al. [8] propose LTTD to focus on the temporal information within the local sequence. In the spectral domain, techniques like SPSL [31] and SRM [33] utilize phase spectra and high-frequency disturbances to augment the forgery details used in training. These strategies [31, 20, 8, 33, 22, 4, 24, 30, 51, 10, 6] target particular weaknesses found in deepfake technologies, and are highly effective in identifying deepfake images characterized by these flaws. ", "page_idx": 2}, {"type": "text", "text": "2.2 Deepfake Detectors with Blendfake Faces ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Blendfake refers to a series of forgery detection methods that employ data generation schemes. These methods [7, 28, 39, 27, 55] manually create new fake samples that imitate general forgery clues that are similar to deepfake based on real samples from the dataset. Specifically, SLADD [7] dynamically crops a portion of a fake image and blends it onto a real image, thereby generating a fake sample that is more challenging to distinguish. Both CBI [27] and I2G [55] involve randomly selecting a real image as the base image, and then searching for another source real image with closely matching facial landmarks. Following a color transfer, the face of the source real image is attached to the base image according to the landmarks, ultimately producing a new fake sample. The resulting blendfake image is cross-face blended and exhibits inconsistencies in identity and also blending clues. FWA [28] and SBI [39] omit the landmark matching process, instead generating two different versions of a base real image through distinct transformations, and subsequently blending these two versions to create a new fake image. The blendfake images generated in this way contain only blending clues, causing their distribution to resemble real images more closely. ", "page_idx": 2}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/58b984164f5b0612ce35a3b84b26399201e72441a4c6c35bf371655dffb3aec7.jpg", "img_caption": ["Figure 3: Overall pipeline of our method. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Owing to their superior implementation designs, SBI and CBI have demonstrated advanced performance in deepfake detection. Notably, they chose to use the generated blendfake solely instead of deepfake during training, thereby completely excluding deepfake from the detector training process. ", "page_idx": 3}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this paper, we aim to devise an appropriate scheme to simultaneously leverage the forgery information inherent in both deepfake and blendfake, thereby training a more effective detector termed ProDet. Firstly, we consider constraining the oriented anchors, that is, the real, blendfake, and deepfake features, to be progressively distributed in a discrete manner. Then, we propose feature bridging to simulate the continuous and progressive transition between adjacent anchors. Lastly, a transition loss is introduced further to enhance our simulation of the progressive transition process. As shown in Fig. 3, our method is simple yet effective in organizing the latent space in a progressive manner. ", "page_idx": 3}, {"type": "text", "text": "3.1 Anchoring Oriented Distributions in Latent Space ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "To regularize a progressive distribution in latent space, we design a module termed Oriented Progressive Regularizor (OPR) using multi-attribute classification constraints. Specifically, blendfake images generated by both SBI [39] and CBI [27] are introduced as oriented pivot anchors to construct the process of progressive transition. Since SBI contains no clues of ID inconsistency compared to CBI, it is notably more difficult to identify SBI as fake data. Consequently, in a mini-batch during training, we incorporate four types of samples aligned with the same frame in the same video. They can be organized progressively from real to fake as follows: real $({\\bf{I}}_{r})$ , SBI $(\\mathbf{I}_{s})$ , CBI $(\\mathbf{I}_{c})$ , and deepfake $(\\mathbf{I}_{d})$ , as depicted in Fig. 2. To facilitate progressive anchor organization, we employ an attribute classifier $\\mathcal{C}_{a}$ that introduces three two-class classification heads. Instead of independently discerning the oriented anchors, where a lack of progressive relation is evident, three classification heads are tasked with the actual determination of forgery attributes, allowing for a progressive forgery accumulation. The classified two-class forgery attributes $\\mathbf{A}=\\{a_{0},a_{1},\\bar{a}_{2}\\}\\in[0,\\bar{1}]^{3}$ respectively represent the likelihood of containing 1) Blending clue in ${\\bf{I}}_{s}$ , ${\\mathbf{I}}_{c}$ , and $\\mathbf{I}_{d}$ ; 2) Identity inconsistency in ${{\\mathbf{I}}_{c}}$ , and $\\mathbf{I}_{d}$ ; 3) Generative artifacts in $\\mathbf{I}_{d}$ . As illustrated in Fig. 3, it is straightforward to assign the ground-truth attribute label groups $\\mathbf{A}^{\\prime}=\\{{a_{0}}^{\\prime},{a_{1}}^{\\prime},{a_{2}}^{\\prime}\\}\\in\\{0,\\mathbf{\\bar{1}}\\}^{3}$ to these oriented anchors, thereby enabling the progressive forgery accumulation through multi-labeling. Therefore, each image I \u2208RH\u00d7W \u00d73 will be first extracted a feature $\\mathbf{F}\\in\\mathbb{R}^{h\\times w\\times\\bar{c}}$ by the backbone encoder, then predicted with three forgery attributes: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{A}={\\mathcal{C}}_{a}(\\mathbf{F}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "To effectively leverage information from OPR during inference and obtain a conclusive deepfake detection result, the outputs of multi-attribute classification are re-dimensioned to an auxiliary ", "page_idx": 3}, {"type": "text", "text": "attention map $\\mathbf{M}\\in\\mathbb{R}^{h\\times w\\times c}$ as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbf{M}=\\mathcal{P}(\\mathbf{A}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathcal{P}$ is a projector that re-dimensions the classification results. $\\mathbf{M}$ is aligned and integrated with the extracted feature $\\mathbf{F}$ and provides supplemental information that improves the final deepfake detection outcome $y$ . Therefore, $y$ can be written as: ", "page_idx": 4}, {"type": "equation", "text": "$$\ny=\\mathcal{C}_{f}(\\mathbf{F}\\odot\\mathbf{M}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\odot$ denotes element-wise multiplication, $\\mathcal{C}_{f}$ denotes the final classifier for deepfake detection. ", "page_idx": 4}, {"type": "text", "text": "In fact, several alternative strategies can also achieve a similar multi-attribute classification for distribution anchoring, including multi-class, multi-label, and triplet binary (ours) classification. The multi-class classification is actually detecting different types of negative data instead of perceiving their forgery accumulation. Therefore, it cannot organize the latent space in a progressive manner as we anticipate. The multi-label strategy with three classes can be interpreted as using one vector to represent three parallel forgery attributes, which may achieve a comparable progressive accumulation. However, it is constrained by the mapping capability of a single detection head, limiting its effectiveness in distinguishing among different forgery attributes. In contrast, the deployed triplet binary strategy can effectively differentiate the distributions of the oriented anchor with progressive accumulation. The experimental results can be found in Sec. 4.3. ", "page_idx": 4}, {"type": "text", "text": "3.2 Simulating Continuous Transition via Feature Bridging ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "By assigning progressively multi-labels to different data distributions, we successfully placed discrete anchors for the real-to-fake progressive transition in the latent space. However, as analyzed in Sec. 1, the progressive transition from real to fake should be continuous rather than discrete. Therefore, we consider simulating this continuous progressive transition by constructing bridges between adjacent anchors, thus further clarifying the orientation. Here, we propose feature bridging to flil the continuous latent space between oriented anchors. Specifically, given four extracted features $\\{\\mathbf{F}_{r},\\mathbf{F}_{s},\\mathbf{F}_{c},\\mathbf{F}_{d}\\}$ and their one-hot label groups $\\{{\\bf A}_{r}^{\\prime},{\\bf A}_{s}^{\\prime},{\\bf A}_{c}^{\\prime},{\\bf A}_{d}^{\\prime}\\}$ in an aligned mini-batch, we conduct mixup to each pair of adjacent features and labels. We take bridging real to SBI as an example: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbf{F}_{r,s},\\mathbf{A}_{r,s}^{\\prime}=M i x(\\mathbf{F}_{r},\\mathbf{F}_{s}),M i x(\\mathbf{A}_{r}^{\\prime},\\mathbf{A}_{s}^{\\prime}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $M i x(a,b)=\\alpha\\times a+(1\\!-\\!\\alpha)\\times b$ , and $\\alpha\\in[0,1]$ is a random mixing ratio. It is important to note that, to ensure that the information mixed during the feature bridging process is the desired deepfakerelated context and to exclude interference from deepfake-unrelated content (e.g., background, identity, and pose), the images used for mixing should be aligned to the same video frame. Therefore, we can assign the forgery attribute label of ${\\bf F}_{r,s}$ as ${\\bf A}_{r,s}^{\\prime}$ to simulate the continuous transition between two adjacent anchors. Since feature bridging across skip-neighbor anchors introduces short-cut transition paths, thereby disrupting the oriented progressive transition in the \u201creal-SBI-CBI-deepfake\u201d process, we only conduct feature bridging on two adjacent anchors instead of any arbitrary pair. ", "page_idx": 4}, {"type": "text", "text": "3.3 Loss Function ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Transition Loss. Given that a real distribution can be progressively transitioned to a fake distribution, features augmented with noise should be mapped to a more fake distribution. Therefore, we take this noise-augmented transition as an additional constraint to further enhance the simulation of progressive transition. Specifically, we first randomly generate random noise $\\mathbf{N}$ that has the same shape as $\\mathbf{F}$ . Subsequently, we introduce a group of convolutional layers to merge and transform $\\mathbf{F}$ and $\\mathbf{N}$ , producing a new feature $\\mathbf{F}^{\\prime}\\in\\mathbb{R}^{h\\times w\\times c}$ . We named the above process as feature transition $(\\tau)$ . Since ${\\bf F}^{\\prime}=\\bar{T}({\\bf N},{\\bf F})$ is expected to be transitioned to a more fake anchor distribution, we introduce the following transition loss: ", "page_idx": 4}, {"type": "equation", "text": "$$\nL_{t}=\\sum_{i=0}^{2}||\\mathcal{T}(\\mathbf{N},\\mathbf{F}_{i})-\\mathbf{F}_{i+1}||_{2},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathbf{F}_{i}$ represents the $i$ -th feature in the mini-batch $\\{\\mathbf{F}_{r},\\mathbf{F}_{s},\\mathbf{F}_{c},\\mathbf{F}_{d}\\}$ , thus $\\mathbf{F}_{i+1}$ denotes the subsequent feature to $\\mathbf{F}_{i}$ . ", "page_idx": 4}, {"type": "text", "text": "Oriented Loss. Oriented loss is deployed to both discrete anchors and continuous bridging features. Given a feature $\\mathbf{F}$ and its one-hot label groups ${\\bf A}^{\\prime}=\\{a_{0}^{\\;\\prime},a_{1}^{\\;\\prime},a_{2}^{\\;\\prime}\\}$ either directly extracted or mixed, ", "page_idx": 4}, {"type": "text", "text": "its three attributes $\\mathbf{A}=\\{a_{0},a_{1},a_{2}\\}$ predicted by $\\ensuremath{\\mathcal{C}}_{t}$ are constrained respectively. Formally, the oriented loss can be written as: ", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{o}=-\\mathbf{A}^{\\prime}\\log(\\mathbf{A}^{\\mathrm{T}})-(1-\\mathbf{A}^{\\prime})\\log(1-\\mathbf{A}^{\\mathrm{T}}),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\mathbf{A}^{\\mathrm{T}}$ denotes the transpose matrix of $\\mathbf{A}$ . ", "page_idx": 5}, {"type": "text", "text": "Detection Loss. We deploy detection loss on the discretely oriented anchors to constrain the final detection result used in both training and inference, which is formulated as: ", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{d}=y^{\\prime}\\log(y)+(1-y^{\\prime})\\log(1-y),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $y^{\\prime}$ is the label that takes both blendfake and deepfake as the negative samples. ", "page_idx": 5}, {"type": "text", "text": "Therefore, the overall loss function in our method is: ", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{o v e r a l l}=L_{d}+\\beta L_{o}+\\gamma L_{t},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\beta$ and $\\gamma$ are trade-off parameters. The algorithm of training the proposed deepfake detection with progressive transition in the latent space (ProDet) is summarized in Algorithm 1. ", "page_idx": 5}, {"type": "text", "text": "Algorithm 1: Training ProDet ", "text_level": 1, "page_idx": 5}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/d9445ec006461fcb3105a7dbec53f9bf3bdb343501f07bc16a9e1f61f37834f7.jpg", "table_caption": [], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "end Output: learned model parameter $\\theta$ . ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Experimental Setting ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets. To extensively explore the generalization ability of deepfake detectors, the most advanced and widely used deepfake datasets are applied in our experiments. FaceForensics $^{\\mathsf{h}+}$ $\\mathrm{(FF++)}$ [37] is constructed by four forgery methods including Deepfakes (DF) [15], Face2Face (F2F) [44], FaceSwap (FS) [18], and NeuralTextures (NT) [43]. $\\mathrm{FF++}$ with High Quality (HQ) is employed as the training dataset for all experiments in our paper. The base images to generate blendfake images are also from $\\mathrm{FF++}$ (HQ) real. For cross-dataset evaluations, we introduce Celeb-DF-v1 (CDFv1) [29], Celeb-DF-v2 (CDFv2) [29], DeepFake Detection Challenge Preview (DFDCP) [16], and DeepFake Detection Challenge (DFDC) [16]. ", "page_idx": 5}, {"type": "text", "text": "Implementation Details. For preprocessing and training, we strictly follow the official code and settings provided by DeepFakeBench [52] to ensure fair comparison. EfficientNetB4 [42] is employed as the backbone of our detector. The trade-off parameters are set to $\\beta=1$ and $\\gamma=10$ . The Adam optimizer is used with a learning rate of 0.0002, epoch of 20, input size of $256\\times256$ , and batch size of 24. Feature Bridging is deployed after a warm-up phase of two epochs. Frame-level Area Under Curve (AUC) and Equal Error Rate (EER) [52] are applied as the evaluation metrics of experimental results. All experiments are conducted on two NVIDIA Tesla V100 GPUs. ", "page_idx": 5}, {"type": "text", "text": "Table 1: Cross-dataset evaluations (AUC) from $\\mathrm{FF++}$ [37] (in-dataset) to CDFv1 [29], CDFv2 [29], DFDCP [17] and DFDC [17] (cross-dataset). C-Avg. denotes the average value of cross-dataset results. The best results are highlighted in bold. Cross-dataset improvements compared with the previous best one are written in pink. See Appendix for comparisons with video-based methods. ", "page_idx": 6}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/e97013346072b9f3854fa8e027ea0a6b13eecaed98f956dfce706e28315957c7.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4.2 Overall Performance on Comprehensive Datasets ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In Tab. 1, we provide extensive comparison results with existing state-of-the-art (SoTA) deepfake detectors based on DeepFakeBench [52], where all methods are trained on $\\mathrm{FF++}$ (HQ) and tested on other datasets. The 18 methods provided in the table are within the benchmark with the exact same experimental setting as our method. EfficientB4 can be treated as the baseline of only using deepfake data. X-ray (CBI) and SBI are the baselines of only using one specific type of blendfake data. Since we effectively incorporate SoTA generative methods [39, 27] and actual deepfake data, our method outperforms other detectors in all evaluated cross-data metrics. ", "page_idx": 6}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In Tab. 2, we provide the baseline results in the upper part. Specifically, Blendfake-only (BF-only) represents using only blendfake data (i.e., CBI [27] and SBI [39]) to train the deepfake detector. Vanilla Hybrid Training (VHT) represents simply incorporates all three data (i.e., Deepfake, CBI [27], and SBI [39]) into training. It can be observed that VHT is outperformed by BF-only in all crossdataset metrics, which demonstrates the empirical basis of solely using blendfake data. ", "page_idx": 6}, {"type": "text", "text": "Overall Ablation. In the middle part of Tab. 2, we provide the results of removing each proposed component sequentially to evaluate their effectiveness. $L_{t}$ can enhance the simulation of the progressive transition and thus improve the overall detection performance. Meanwhile, Feature Bridging (FB) plays a crucial role in fliling the continuous space between discrete anchors. In the case of w/o $L_{o}$ , OPR cannot constrain the anchors to organize progressively and can be treated as an operation of feature self-attention, while feature bridging functions as a simple manifold mixup. The inferior performances of w/o $L_{o}$ demonstrate the effectiveness of progressively organizing latent space, rather than relying on simple tricks that might coincidentally improve performance. ", "page_idx": 6}, {"type": "text", "text": "Effect of Classification Strategies. In Sec. 3.1, we analyze the effect of alternative strategies for multi-attribute classification in OPR. Here, we conduct experiments to validate the performance of three different strategies, that is, Multi-class (M-C), Multi-label (M-L), and Triplet Binary (TB) strategies. The results in the lower part of Tab. 2 show that M-C performs better when in-dataset while cross-dataset performance is only marginally improved. This is because the disentanglement of one-hot values allows deepfake learning independently but does not utilize both datasets for crossdataset generalization. M-L performs similarly to the proposed TB since it can achieve progressive transition. Still, our method exhibits superior effectiveness considering its improved capability in discerning different forgery attributes. ", "page_idx": 6}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/cddbbcf6b30833e8c6671828bf65723b8bd139f9c2e5fc04a83725dd87832d44.jpg", "table_caption": ["Table 2: Ablations for each network component (AUC\u2191and EER\u2193). All variants are trained on $\\mathrm{FF++}$ (in-dataset) and evaluated on other datasets (cross-dataset). BF-only represents using only blendfake data as the negative samples. M-C, M-L, and TB denotes Multi-Class, Multi-Label, and Triplet Binary strategies, respectively. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/07bfe5fdf55a28c6ba61637a2df0a89ede7561c4c9dce9228e7f509590101b8d.jpg", "table_caption": ["Table 3: Ablations on leveraging oriented anchors progressively (AUC). All variants are trained on $\\mathrm{FF++}$ (in-dataset) and evaluated on other datasets (cross-dataset). "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Progressively Leveraging Data. To further verify the superiority of the progressive transition distribution, we explore the effects of various hybrid training schemes from an experimental perspective. As shown in Tab. 3, we consider progressively incorporating pivot anchor data into the training samples from real to deepfake, and augmenting anchors with feature bridging (FB). Overall, by learning a progressive transition process, our method is capable of effectively utilizing forgery information contained within both blendfake and deepfake data. ", "page_idx": 7}, {"type": "text", "text": "4.4 Robustness against Unseen Perturbations ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "To comprehensively evaluate the robustness against unseen perturbations of our method, we conduct experiments from two perspectives, that is, feature robustness (mPD) and detection robustness (AUC). In Tab. 4, we provide the detailed performance on the three types of distinct unseen perturbations, that is, Block-wise masking (Block-wise), Gaussian noise (Noise), and Shifting (Shift). All perturbations are applied with random intensity ten times. Namely, Block-wise is applied with a ratio of 0.1 and $4\\times4$ grids. Noise is applied with a random variance selected from the range of 10 to 50. Shift is applied with the range of -50 to 50 on both x and y axes. In Fig. 5, we further provide the robustness comparisons with multiple perturbation intensities. The superior robustness of our method stems from the organized latent space, which allows the network to leverage the rich information in hybrid training more effectively. ", "page_idx": 7}, {"type": "text", "text": "4.5 Analysis of Learned Feature in Latent Space ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "To obtain features with dimensions that can be directly visualized, we cleverly construct toy models to facilitate our analysis of the learned feature distribution. The reasons for not applying clustering visualization methods (e.g., t-SNE [45]) are demonstrated in Appendix. Specifically, we modify the architecture of the backbone to extract features from 512 to 2 dimensions. Subsequently, we train two toy models using VHT and our approach while keeping all other settings consistent. Based on these toy models, we can easily visualize the actual learned features directly in the 2D space. ", "page_idx": 7}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/fe85ba6258a40894c37f11282de219c1d5b49bbaa5704ebee409abd27e0cf1a6.jpg", "img_caption": ["Figure 4: 4a: Illustration of feature organization, where our method can organize different anchors in a progressive manner, while VHT is unorganized and fails to discern blendfake and deepfake. 4b: Illustration of feature regularity. The heatmap values represent the PD at each point, and mPD is the mean PD in the distribution, while smaller mPD implies better feature regularity. The results show that our method has a smaller mPD and superior regularity. "], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/3dbbb8ebd6eb5aa53aeac5fda1a70f3384f9de4609ab985a56a1ef4726cee85d.jpg", "img_caption": ["Figure 5: Robustness against unseen perturbation with different intensity levels. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Feature Organization. In Fig. 4a, it can be observed that the distribution of features extracted by our method is aligned with our anticipated progressive transition. Simultaneously, our method enhances the separation between real and fake features, leading to improved clustering and more effective detection. In contrast, the features from VHT are unorganized and highly entangled, which is detrimental to both decision-making and feature generalization ability. ", "page_idx": 8}, {"type": "text", "text": "Feature Regularity. Feature regularity measures the domain shifting issue in the latent space, while a better regularity implies that the learned features are more accurate, robust, and generalizable [41, 5, 54]. To analyze the regularity of the latent space organization achieved by our progressive transition scheme, we apply random unseen perturbations to each data point and calculate a new metric named Perturbed Distance (PD). A smaller PD suggests that the image with its perturbed versions is mapped more closely in the latent space, indicating superior feature regularity and smoothness. Subsequently, mPD denotes the mean PD in a distribution. See Appendix for the precise formulation and definition of PD and mPD. As shown in Fig. 4b, the result demonstrates that our scheme can organize the latent space with enhanced regularity, which is beneficial for generalization. It also indicates the improved robustness of our method against unseen perturbations. ", "page_idx": 8}, {"type": "text", "text": "4.6 Evaluation on Alternative Organized Distribution ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To further establish the superiority of the proposed organization of latent space, we conduct comparisons with other feasible latent space distributions, including 1) Real to Deepfake to Blendfake transition (R2D2B). 2) Like a circle, blendfake and deepfake surround real with similar distances (Surround). The proposed Real to Blendfake to Deepfake transition is denoted by R2B2D. In Tab. 5, it can be observed that R2D2B performs the worst since it violates the inductive observation, that is, the real-to-fake progressive transition. Surround may be treated as another improved distribution organization compared with VHT, while it is still empirically inferior to the proposed organization. ", "page_idx": 8}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/3386a951f40a7cfcd836578a9381fa1de2b6ae9fd6dbe213013ac5898a25fde8.jpg", "table_caption": ["Table 4: The mPD\u2193and AUC\u2191for robustness against unseen perturbations on $\\mathrm{FF++}$ test set. "], "table_footnote": [], "page_idx": 9}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/b764dc44b0b4c9ee8a193e72b18a9c3fa87f0af8b3b1cdfdd202d7d15d83aba9.jpg", "table_caption": ["Table 5: Evaluation on different latent space organizations (AUC). All variants are trained on $\\mathrm{FF++}$ (in-dataset) and evaluated on other datasets (cross-dataset). "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "5 Conclusion and Discussions ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we commence with a question that many researchers may ponder: Can we leave deepfake data behind in training deepfake detectors? We argue that the abnormal data efficacy of vanilla hybrid training may stem from the poor latent space organization. Hence, we propose to formulate the process of \u201creal to blendfake to deepfake\u201d to be a progressive transition. By progressively organizing blendfake and deepfake as oriented anchors and bridging them to simulate the continuous transition, the proposed ProDet effectively utilizes both data and exhibits superior detection performance. ", "page_idx": 9}, {"type": "text", "text": "Limitations and future work. It is intuitive to observe that the current deepfake is easier to distinguish compared to blendfake. Naturally, we can organize them based on the \u201creal-blendfakedeepfake\u201d to improve the learned representation. However, with the advancement of deepfake techniques, all forgery attributes in deepfake data might be significantly reduced, thus making the intuitive argument that \"deepfakes are easier to distinguish than blendfakes\" potentially inaccurate. Nevertheless, to simultaneously utilize blendfake and deepfake data, a rational organization of the latent space still plays a crucial role. Therefore, in future work, we may identify more universally distinctive characteristics between blendfake and deepfake to effectively organize the latent space. ", "page_idx": 9}, {"type": "text", "text": "Ethic Impacts. The proposed method strives to minimize negative social impacts and provide stronger protection for privacy, including the societal harms introduced by AIGC and the implications and challenges posed by detection errors. Specifically, our method improves the effectiveness and generalization ability of the deepfake detector, which could be crucial for reducing errors and mitigating the negative impact of malicious deepfake content. ", "page_idx": 9}, {"type": "text", "text": "6 Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We would like to thank all the reviewers for their constructive comments. Our work was supported in National Natural Science Foundation of China (NSFC) under Grant No.62171324, No.62371350, and No.62072347. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Darius Afchar, Vincent Nozick, Junichi Yamagishi, and Isao Echizen. Mesonet: a compact facial video forgery detection network. In IEEE International Workshop on Information Forensics and Security, pages 1\u20137. IEEE, 2018. ", "page_idx": 9}, {"type": "text", "text": "[2] Sharjeel Ali and Oliver van Kaick. Evaluation of latent space learning with procedurallygenerated datasets of shapes. In ICCV, pages 2086\u20132094, 2021. ", "page_idx": 9}, {"type": "text", "text": "[3] Sanjeev Arora, Wei Hu, and Pravesh K Kothari. An analysis of the t-sne algorithm for data visualization. In COLT, pages 1455\u20131462. PMLR, 2018. [4] Weiming Bai, Yufan Liu, Zhipeng Zhang, Bing Li, and Weiming Hu. Aunet: Learning relations between action units for face forgery detection. In CVPR, pages 24709\u201324719, 2023. [5] Francesco Barbato, Marco Toldo, Umberto Michieli, and Pietro Zanuttigh. Latent space regularization for unsupervised domain adaptation in semantic segmentation. In CVPRW, pages 2835\u20132845, 2021.   \n[6] Junyi Cao, Chao Ma, Taiping Yao, Shen Chen, Shouhong Ding, and Xiaokang Yang. End-to-end reconstruction-classification learning for face forgery detection. In CVPR, pages 4113\u20134122, 2022. [7] Liang Chen, Yong Zhang, Yibing Song, Lingqiao Liu, and Jue Wang. Self-supervised learning of adversarial example: Towards good generalizations for deepfake detection. In CVPR, pages 18710\u201318719, 2022.   \n[8] Liang Chen, Yong Zhang, Yibing Song, Jue Wang, and Lingqiao Liu. Ost: Improving generalization of deepfake detection via one-shot test-time training. NeurIPS, 35:24597\u201324610, 2022. [9] Zhongxi Chen, Ke Sun, Ziyin Zhou, Xianming Lin, Xiaoshuai Sun, Liujuan Cao, and Rongrong Ji. Diffusionface: Towards a comprehensive dataset for diffusion-based face forgery analysis. arXiv preprint arXiv:2403.18471, 2024.   \n[10] Jikang Cheng, Ying Zhang, Qin Zou, Zhiyuan Yan, Chao Liang, Zhongyuan Wang, and Chen Li. Ed 4: Explicit data-level debiasing for deepfake detection. arXiv preprint arXiv:2408.06779, 2024.   \n[11] Jongwook Choi, Taehoon Kim, Yonghyun Jeong, Seungryul Baek, and Jongwon Choi. Exploiting style latent flows for generalizing deepfake detection video detection. arXiv preprint arXiv:2403.06592, 2024.   \n[12] Fran\u00e7ois Chollet. Xception: Deep learning with depthwise separable convolutions. In CVPR, pages 1251\u20131258, 2017.   \n[13] Taco Cohen and Max Welling. Group equivariant convolutional networks. In ICML, pages 2990\u20132999. PMLR, 2016.   \n[14] Hao Dang, Feng Liu, Joel Stehouwer, Xiaoming Liu, and Anil K Jain. On the detection of digital face manipulation. In CVPR, 2020.   \n[15] DeepFakes. www.github.com/deepfakes/faceswap Accessed 2021-04-24.   \n[16] Deepfake detection challenge. https://www.kaggle.com/c/ deepfake-detection-challenge Accessed 2021-04-24.   \n[17] Brian Dolhansky, Joanna Bitton, Ben Pflaum, Jikuo Lu, Russ Howes, Menglin Wang, and Cristian Canton Ferrer. The deepfake detection challenge dataset. arXiv preprint arXiv:2006.07397, 2020.   \n[18] FaceSwap. www.github.com/MarekKowalski/FaceSwap Accessed 2021-04-24.   \n[19] Marta Garnelo, Kai Arulkumaran, and Murray Shanahan. Towards deep symbolic reinforcement learning. arXiv preprint arXiv:1609.05518, 2016.   \n[20] Jiazhi Guan, Hang Zhou, Zhibin Hong, Errui Ding, Jingdong Wang, Chengbin Quan, and Youjian Zhao. Delving into sequential patches for deepfake detection. NeurIPS, 35:4517\u20134530, 2022.   \n[21] Alexandros Haliassos, Rodrigo Mira, Stavros Petridis, and Maja Pantic. Leveraging real talking faces via self-supervision for robust forgery detection. In CVPR, pages 14950\u201314962, 2022.   \n[22] Alexandros Haliassos, Konstantinos Vougioukas, Stavros Petridis, and Maja Pantic. Lips don\u2019t lie: A generalisable and robust approach to face forgery detection. In CVPR, 2021.   \n[23] Irina Higgins, David Amos, David Pfau, Sebastien Racaniere, Loic Matthey, Danilo Rezende, and Alexander Lerchner. Towards a definition of disentangled representations. arXiv preprint arXiv:1812.02230, 2018.   \n[24] Baojin Huang, Zhongyuan Wang, Jifan Yang, Jiaxin Ai, Qin Zou, Qian Wang, and Dengpan Ye. Implicit identity driven deepfake face swapping detection. In CVPR, pages 4490\u20134499, 2023.   \n[25] Davis E King. Dlib-ml: A machine learning toolkit. JMLR, 10:1755\u20131758, 2009.   \n[26] Hiroki Kojima and Takashi Ikegami. Organization of a latent space structure in vae/gan trained by navigation data. Neural Networks, 152:234\u2013243, 2022.   \n[27] Lingzhi Li, Jianmin Bao, Ting Zhang, Hao Yang, Dong Chen, Fang Wen, and Baining Guo. Face x-ray for more general face forgery detection. In CVPR, 2020.   \n[28] Yuezun Li and Siwei Lyu. Exposing deepfake videos by detecting face warping artifacts. arXiv preprint arXiv:1811.00656, 2018.   \n[29] Yuezun Li, Xin Yang, Pu Sun, Honggang Qi, and Siwei Lyu. Celeb-df: A new dataset for deepfake forensics. In CVPR, 2020.   \n[30] Jiahao Liang, Huafeng Shi, and Weihong Deng. Exploring disentangled content information for face forgery detection. In ECCV, pages 128\u2013145. Springer, 2022.   \n[31] Honggu Liu, Xiaodan Li, Wenbo Zhou, Yuefeng Chen, Yuan He, Hui Xue, Weiming Zhang, and Nenghai Yu. Spatial-phase shallow learning: rethinking face forgery detection in frequency domain. In CVPR, pages 772\u2013781, 2021.   \n[32] Zhian Liu, Maomao Li, Yong Zhang, Cairong Wang, Qi Zhang, Jue Wang, and Yongwei Nie. Fine-grained face swapping via regional gan inversion. In CVPR, pages 8578\u20138587, 2023.   \n[33] Yuchen Luo, Yong Zhang, Junchi Yan, and Wei Liu. Generalizing face forgery detection with high-frequency features. In CVPR, 2021.   \n[34] Huy H Nguyen, Junichi Yamagishi, and Isao Echizen. Capsule-forensics: Using capsule networks to detect forged images and videos. In ICASSP, pages 2307\u20132311. IEEE, 2019.   \n[35] Yunsheng Ni, Depu Meng, Changqian Yu, Chengbin Quan, Dongchun Ren, and Youjian Zhao. Core: Consistent representation learning for face forgery detection. In CVPR Workshop, pages 12\u201321, 2022.   \n[36] Yuyang Qian, Guojun Yin, Lu Sheng, Zixuan Chen, and Jing Shao. Thinking in frequency: Face forgery detection by mining frequency-aware clues. In ECCV, pages 86\u2013103. Springer, 2020.   \n[37] Andreas Rossler, Davide Cozzolino, Luisa Verdoliva, Christian Riess, Justus Thies, and Matthias Nie\u00dfner. Faceforensics++: Learning to detect manipulated facial images. In ICCV, pages 1\u201311, 2019.   \n[38] Ramprasaath R Selvaraju, Michael Cogswell, Abhishek Das, Ramakrishna Vedantam, Devi Parikh, and Dhruv Batra. Grad-cam: Visual explanations from deep networks via gradient-based localization. In ICCV, pages 618\u2013626, 2017.   \n[39] Kaede Shiohara and Toshihiko Yamasaki. Detecting deepfakes with self-blended images. In CVPR, pages 18720\u201318729, 2022.   \n[40] Kaede Shiohara, Xingchao Yang, and Takafumi Taketomi. Blendface: Re-designing identity encoders for face-swapping. In ICCV, pages 7634\u20137644, 2023.   \n[41] Samarth Sinha and Adji Bousso Dieng. Consistency regularization for variational auto-encoders. NeurIPS, 34:12943\u201312954, 2021.   \n[42] Mingxing Tan and Quoc Le. Efficientnet: Rethinking model scaling for convolutional neural networks. In ICML, pages 6105\u20136114. PMLR, 2019.   \n[43] Justus Thies, Michael Zollh\u00f6fer, and Matthias Nie\u00dfner. Deferred neural rendering: Image synthesis using neural textures. TOG, 38(4):1\u201312, 2019.   \n[44] Justus Thies, Michael Zollhofer, Marc Stamminger, Christian Theobalt, and Matthias Nie\u00dfner. Face2face: Real-time face capture and reenactment of rgb videos. In CVPR, pages 2387\u20132395, 2016.   \n[45] Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of machine learning research, 9(11), 2008.   \n[46] Sheng-Yu Wang, Oliver Wang, Richard Zhang, Andrew Owens, and Alexei A Efros. Cnngenerated images are surprisingly easy to spot... for now. In CVPR, pages 8695\u20138704, 2020.   \n[47] Zhendong Wang, Jianmin Bao, Wengang Zhou, Weilun Wang, and Houqiang Li. Altfreezing for more general video face forgery detection. In CVPR, pages 4129\u20134138, 2023.   \n[48] Chao Xu, Jiangning Zhang, Yue Han, Guanzhong Tian, Xianfang Zeng, Ying Tai, Yabiao Wang, Chengjie Wang, and Yong Liu. Designing one unified framework for high-fidelity face reenactment and swapping. In ECCV, pages 54\u201371. Springer, 2022.   \n[49] Zhiliang Xu, Zhibin Hong, Changxing Ding, Zhen Zhu, Junyu Han, Jingtuo Liu, and Errui Ding. Mobilefaceswap: A lightweight framework for video face swapping. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 36, pages 2973\u20132981, 2022.   \n[50] Zhiyuan Yan, Taiping Yao, Shen Chen, Yandan Zhao, Xinghe Fu, Junwei Zhu, Donghao Luo, Li Yuan, Chengjie Wang, Shouhong Ding, et al. Df40: Toward next-generation deepfake detection. arXiv preprint arXiv:2406.13495, 2024.   \n[51] Zhiyuan Yan, Yong Zhang, Yanbo Fan, and Baoyuan Wu. Ucf: Uncovering common features for generalizable deepfake detection. ICCV, 2023.   \n[52] Zhiyuan Yan, Yong Zhang, Xinhang Yuan, Siwei Lyu, and Baoyuan Wu. Deepfakebench: A comprehensive benchmark of deepfake detection. arXiv preprint arXiv:2307.01426, 2023.   \n[53] Fengyu Yang and Chenyang Ma. Sparse and complete latent organization for geospatial semantic segmentation. In CVPR, pages 1809\u20131818, 2022.   \n[54] Shufei Zhang, Zhuang Qian, Kaizhu Huang, Qiufeng Wang, Rui Zhang, and Xinping Yi. Towards better robust generalization with shift consistency regularization. In ICML, pages 12524\u201312534. PMLR, 2021.   \n[55] Tianchen Zhao, Xiang Xu, Mingze Xu, Hui Ding, Yuanjun Xiong, and Wei Xia. Learning self-consistency for deepfake detection. In ICCV, pages 15023\u201315033, 2021.   \n[56] Wenliang Zhao, Yongming Rao, Weikang Shi, Zuyan Liu, Jie Zhou, and Jiwen Lu. Diffswap: High-fidelity and controllable face swapping via 3d-aware masked diffusion. In CVPR, pages 8568\u20138577, 2023.   \n[57] Yinglin Zheng, Jianmin Bao, Dong Chen, Ming Zeng, and Fang Wen. Exploring temporal coherence for more general video face forgery detection. In ICCV, pages 15044\u201315054, 2021. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/fcaa358a0db21f031da896c1ae65cbe0e15e17f71d76c3d1ddc0f38d410bb914.jpg", "img_caption": ["Figure 6: The examples for the real-to-fake progressive transition. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "7.1 More Perceptual Examples for the Inductive Observation of real-to-fake Progressive Transition ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Considering that this paper is primarily based on the observation of a \"progressive transition from real to fake\", in Fig. 6, we present additional perceptual examples to provide a comprehensive impression. It is evident that sequentially from real to blendfake to deepfake, they become easier to distinguish as fake and the forgery information is accumulated. Therefore, it is intuitive to improve the latent space organization based on such inductive observation. ", "page_idx": 13}, {"type": "text", "text": "7.2 Detailed Experimental Environments for Reproducibility ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this paper, all experiments are conducted based on an open-source benchmark DeepfakeBench [52]. Specifically, for face extraction, we deploy an 81 facial landmarks shape predictor in Dlib [25] and select the detected rectangle with the biggest area in one frame. We use 32 frames in each video for both training and testing. During training, various data augmentation techniques are deployed including JPEG compression, random brightness and contrast, rotation, and median blur. ", "page_idx": 13}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/428ae2abb0cee2a2e49b118a1149627386fff7dd8e330bd21dc8f0ec7931db8d.jpg", "img_caption": [], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "Figure 7: Three different strategies for the multi-attribute classifier in OPR. The solid patterns signify the detected classes, whereas hollow patterns denote those that are not detected. ", "page_idx": 13}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/6ea03ce4374e6c60f2540cdff844b7091bf4249f8ade662d180010e4d42ac1e3.jpg", "table_caption": ["Table 6: Cross-dataset performance comparisons with video-based methods. We use video-level AUC as the evaluation metric. All methods are trained on $\\mathrm{FF++}$ [37] and test on other datasets. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "7.3 Detailed Implementation of Classification Strategies ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "As shown in Fig. 7, we provide the detailed implementation of three different strategies. For the multi-class strategy with four classes, labels appear to be progressively assigned from 0 to 3. Namely, it can be treated as classifying real, SBI, CBI, and deepfake, respectively. However, the positions of each one-hot value are disentangled and can be rearranged arbitrarily. Therefore, the multi-class strategy is inherently unable to grant different anchors to be organized in a progressive manner. The latter two strategies can achieve similar effects of accumulating forgery attributes, therefore, their experimental performances are relatively closer. Still, we attribute the superior performance of triplet binary classification to its enhanced ability in disentangling forgery attributes. ", "page_idx": 14}, {"type": "text", "text": "7.4 Precise Formulation and Definition of Mean Perturbed Distance (mPD) ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "As we discussed in the main paper, we designed a new metric termed mean perturbed distance $(\\mathrm{mPD})$ to measure the feature robustness of each data point. Supposing the data point and its extracted feature as $\\mathbf{I}$ and $\\mathbf{F}$ , applying perturbation on I can be written as $\\mathcal{P}(\\mathbf{I},r)$ , where $\\mathcal{P}()$ is the perturbation function and $r$ is a randomly generated value for the perturbation intensity. By performing $\\mathcal{P}(\\mathbf{I},r)$ with random $\\mathcal{P}$ and $r$ and extracting their features, we can obtain a set of perturbed feature $\\{\\mathbf{F}_{1},\\dot{\\mathbf{F}}_{2},...,\\mathbf{F}_{n}\\}$ . Then, we calculate the average Euclidean distances between the original features and ten perturbed features. Finally, we standardize the distances in distribution with different orders of magnitude. Therefore, the PD can be written as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathrm{PD}=\\sum_{i=1}^{n}\\frac{\\sqrt{\\left(\\mathbf{F}_{i}\\right)^{2}+\\left(\\mathbf{F}\\right)^{2}}}{n\\mathbf{F}_{s t d}},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\mathbf{F}_{s t d}$ denotes the standard deviation of each dimension in one distribution. Finally, the mPD of one distribution $\\{\\mathbf{F}^{1},\\mathbf{F}^{2},...,\\mathbf{F}^{m}\\}$ can be formulated as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathrm{mPD}=\\sum_{j=1}^{m}\\sum_{i=1}^{n}\\frac{\\sqrt{\\left(\\mathbf{F}_{i}^{j}\\right)^{2}+\\left(\\mathbf{F}^{j}\\right)^{2}}}{m n\\mathbf{F}_{s t d}}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "7.5 Generalization Assessment on Wider Scales ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Comparison with Video-level Methods. Given that the proposed method makes decisions based on one single image frame, the main paper includes comparisons with other frame-level methods and measures their performance using frame-level AUC. Nevertheless, video-based deepfake detection methods can also achieve promising results. Therefore, in Tab. 6, we compare the cross-dataset generalization ability of our method with state-of-the-art video-based methods, taking video-level AUC as the metric. The results of comparison methods are copied from their official papers. By leveraging both blendfake and deepfake effectively, our method achieves the best performance among those methods. ", "page_idx": 14}, {"type": "text", "text": "Evaluations on More Various and Advanced Datasets. We further enlarge the evaluation scope by considering several key aspects. Firstly, we utilize nine different deepfake datasets to ensure the diversity and comprehensiveness of the testing data in our evaluation. Secondly, we include the latest synthesis methods by using testing data from newly released deepfake datasets in 2024. These datasets incorporate advanced deepfake techniques such as UniFace [48], E4S [32], BlendFace [40], and MobileSwap [49] from DF40 [50], as well as DiffSwap [56] from DiffusionFace [9]. Finally, our evaluation design involves different variants, including Deepfake-only (DF-only), Blendfake-only (BF-only), VHT, and our proposed method. These variants are used in ablation studies using both frame-level/video-level AUC. As shown in Tab. 7, we can observe that our method consistently exhibits superiority in almost every testing data, which empirically suggests an improved generalization result. ", "page_idx": 14}, {"type": "table", "img_path": "vh9yEPLeyD/tmp/180864d62e082a702f591d0d8a90d75d6162ff037f0ac02e682274bf80aa9afe.jpg", "table_caption": ["Table 7: Generalization evaluations on comprehensive datasets. "], "table_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/ca95b6ac7152c5360ce19fa37ba2fc9d0f29602fb38e1ef7225ee218a97e58db.jpg", "img_caption": ["Figure 8: Saliency map visualization for VHT (left) and our method (right). "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "7.6 Analysis of Attention Regions ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "To analyze the regions of interest in the network, we used Grad-CAM [38] to generate saliency maps for visualization. As shown in Fig. 8, VHT consistently focuses on partial regions of the face and fails to discern different fake data in aligned video frames. In contrast, our method can perceive forgery information from the broader regions of the face and the attention regions are more adaptive to different fake data. ", "page_idx": 15}, {"type": "text", "text": "7.7 Further experiments for learned feature representations. ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "7.7.1 Discussion on the t-SNE Visualization ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Here, we demonstrate through experiments why we chose to construct toy models rather than directly visualizing the features extracted from original models using t-SNE [45]. In Fig. 9, the t-SNE and the actual feature distribution (see Fig. 4a) of the toy model are highly similar in terms of clustering. However, unlike the actual distribution, the progressive transitions between anchors are not precisely presented by t-SNE. This indicates that t-SNE is good at clustering [3] but performs limited in visualizing the distribution of progressive transitions, which is crucial for estimating our method. We also provide the t-SNE results of the original model. Based on our prior analysis of the t-SNE-feature pair results on the toy models, it can be anticipated that the progressive transitions in the t-SNE results will not be prominent. Nonetheless, it is still evident that our approach exhibits better clustering while exhibiting progressive transitions to a certain extent. ", "page_idx": 15}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/2d864cb656ebb47f4ca1c0625f5af9f947cccb623e824d680763be23e4866e4a.jpg", "img_caption": ["Figure 9: The t-SNE visualization for both toy and original models. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "vh9yEPLeyD/tmp/3caaee2caf8410fdf7d595201794c5f2cca26b3afdcaac02fa91086f827f4fab.jpg", "img_caption": ["Figure 10: Distributions of the predicted confidence and logit outputs of Ours and VHT on DFDCP and Celeb-DF-v2. The y-value represents the probability of one sample falling within the corresponding $\\mathbf{X}$ -value interval. Zoom in for better illustration. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "7.7.2 Distributions of the predicted confidence and logit outputs. ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In Fig. 10, we provide a further investigation of the learned information of VHT and our method. Specifically, we summarize and analyze the distribution of logits output and confidence from VHT and Ours. We notice that VHT is less confident in both fake and real data. As we discussed, this may be because naively combining DF and BF for training confuses the network, thus limiting its confidence in \u201cunderstanding\u201d the forgery representation of distinct BF and DF. In contrast, our model can predict both fake and real with high confidence since the model \"understands\" how real gradually becomes more and more fakes. ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our abstract and introduction have precisely and concisely summarized the contributions of this paper. ", "page_idx": 18}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: Currently, we have not discovered significant limitations of our method. ", "page_idx": 18}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: This paper does not include theoretical results. ", "page_idx": 18}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have fully disclosed the information for the reproduction of experimental results in this paper. ", "page_idx": 18}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We will open-source the code shortly after publication. ", "page_idx": 18}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have clearly demonstrated the experimental setting that is necessary to understand the reported results. ", "page_idx": 18}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have considered the randomness that may occur in the experiments. ", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have clearly illustrated the resources used for experiments. ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] Justification: The research in this paper is conformed with the NeurIPS Code of Ethics. ", "page_idx": 19}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We have discuss the potential societal impacts of the research in this paper. ", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: Our research has no such risks. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: Our code and data are properly credited with the proper license. ", "page_idx": 19}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] Justification: The paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 19}]