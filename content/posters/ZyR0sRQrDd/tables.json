[{"figure_path": "ZyR0sRQrDd/tables/tables_6_1.jpg", "caption": "Table 1: Occupancy prediction performance on Occ3D-nuScenes [38]. \"8f\" and \"16f\" denote models fusing temporal information from 8 or 16 frames, respectively. Baseline results are directly copied from their corresponding papers or the SparseOcc [21]. FPS results are measured on an A100 GPU.", "description": "This table presents a quantitative comparison of the proposed OPUS model with several state-of-the-art occupancy prediction methods on the Occ3D-nuScenes dataset.  The table shows the performance metrics (mIoU, RayIoU at different distances, and FPS) for each method.  It includes both dense and sparse methods, and also compares different versions of OPUS that incorporate more or fewer frames (8f and 16f) in the temporal fusion.  FPS values are reported for comparison.", "section": "Main results"}, {"figure_path": "ZyR0sRQrDd/tables/tables_8_1.jpg", "caption": "Table 3: Comparison of various treatments on initial locations P\u00ba. \"Grid\" and \"Random\" indicate that points are sampled uniformly in BEV space and randomly in the 3D space, respectively. \"Optimized\" means that points are randomly initialized but supervised with ground-truths via the CDR loss.", "description": "This table shows the performance comparison of three different initialization methods for the initial point locations (P\u00ba) in the OPUS model. The three methods are: Grid initialization (uniformly sampling points in BEV space), Random initialization (randomly sampling points in 3D space), and Optimized initialization (random initialization with supervision from ground truth using Chamfer Distance loss). The table presents the mIoU and RayIoU (at different distances: 1m, 2m, 4m) for each initialization method, showing that the \"Optimized\" method yields the best performance.", "section": "4.3 Ablation study and visualizations"}, {"figure_path": "ZyR0sRQrDd/tables/tables_9_1.jpg", "caption": "Table 4: Comparisons between different sparsification strategies.", "description": "This table compares the performance of OPUS against two other models employing different sparsification strategies: SparseOcc, which uses a multi-stage approach to filter out empty voxels, and PETR v2, which uses a pillar-patch-based method.  The metrics used for comparison include RayIoU at various distance thresholds (1m, 2m, 4m) and the overall RayIoU, as well as FPS (frames per second).  The number of queries (Q) and the number of points predicted per query (R) are also shown for each method.  The results demonstrate OPUS's superior performance.", "section": "4.2 Main results"}, {"figure_path": "ZyR0sRQrDd/tables/tables_9_2.jpg", "caption": "Table 5: Performance on the Waymo-Occ3D dataset.", "description": "This table presents a quantitative comparison of the OPUS model's performance against other state-of-the-art occupancy prediction methods on the Waymo-Occ3D dataset.  The results are broken down by semantic class (e.g., vehicle, pedestrian, bicycle) and include metrics such as mIoU and RayIoU, showing the model's accuracy and efficiency.", "section": "4.2 Main results"}, {"figure_path": "ZyR0sRQrDd/tables/tables_14_1.jpg", "caption": "Table 6: Comparison of Hungarian algorithm and our label assignment scheme.", "description": "This table compares the performance of the Hungarian algorithm and the proposed label assignment method in terms of time and GPU memory consumption for matching point clouds of different sizes (100, 1000, 10000, and 100000 points). The results show that the proposed method is significantly faster and more memory-efficient, especially for larger point clouds.", "section": "Appendix"}, {"figure_path": "ZyR0sRQrDd/tables/tables_14_2.jpg", "caption": "Table 7: Configurations for different models.", "description": "This table presents the hyperparameters used for training four different models of the OPUS architecture.  Each row represents a different model variant (OPUS-T, OPUS-S, OPUS-M, OPUS-L), distinguished by the number of queries (Q) and the number of points sampled from each query (S) at different decoder layers. The columns 's1' through 's6' represent the number of points predicted at each of the six decoder layers. This design allows for coarse-to-fine learning in the occupancy prediction task, with varying computational demands and performance trade-offs.", "section": "D.2 Detailed configuration for different versions."}, {"figure_path": "ZyR0sRQrDd/tables/tables_14_3.jpg", "caption": "Table 8: Performance with different points predicted.", "description": "This table presents the results of an ablation study on the number of points predicted in the last layer of the OPUS model.  It shows how varying the number of points (8, 16, 32, 64) affects the model's performance, measured by mIoU and RayIoU at different distance thresholds (1m, 2m, 4m).  The results reveal a trade-off between accuracy (mIoU) and speed (RayIoU), with an optimal point number depending on the desired balance.", "section": "4.3 Ablation study and visualizations"}, {"figure_path": "ZyR0sRQrDd/tables/tables_15_1.jpg", "caption": "Table 9: Performance across different distances.", "description": "This table presents a comparison of the performance of FB-Occ and OPUS-L across different distance ranges. The overall RayIoU is shown, along with the RayIoU for distances 0-20 meters, 20-40 meters, and greater than 40 meters.  The results indicate that OPUS-L significantly outperforms FB-Occ across all distance ranges, particularly in close proximity to the sensor.", "section": "4.2 Main results"}]