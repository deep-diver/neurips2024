[{"figure_path": "xnmm1jThkv/figures/figures_3_1.jpg", "caption": "Figure 1: Illustrative DAG, where x\u2081 is a root, x\u2083 is a leaf, x\u2083 \u2208 Ch(x\u2082), x\u2083 \u2208 De(x\u2081).", "description": "This figure shows a simple directed acyclic graph (DAG) with three nodes, illustrating different types of nodes and their relationships.  Node x\u2081 is a root node (no incoming edges), node x\u2083 is a leaf node (no outgoing edges), and node x\u2082 is an intermediate node. The arrows indicate the direction of causality, showing that x\u2081 causes x\u2082, and both x\u2081 and x\u2082 cause x\u2083.  x\u2083 is a descendent of x\u2081, and x\u2082 is a child of x\u2081.", "section": "2 Preliminaries"}, {"figure_path": "xnmm1jThkv/figures/figures_3_2.jpg", "caption": "Figure 2: Enumeration of active causal path relation types between a pair of nodes xi and xj. Dashed arrows indicate ancestorship.", "description": "This figure illustrates the four possible relationships between two nodes (xi and xj) in terms of active causal paths.  It shows different combinations of active frontdoor and backdoor paths. \n\n* **AP1:** No active path exists between xi and xj.\n* **AP2:** There is only an active backdoor path between xi and xj.\n* **AP3:** There is only an active frontdoor path between xi and xj.\n* **AP4:** There are both active frontdoor and backdoor paths between xi and xj. The dashed arrows represent ancestral relationships.", "section": "Ancestral Relations and Active Causal Paths"}, {"figure_path": "xnmm1jThkv/figures/figures_5_1.jpg", "caption": "Figure 3: Enumeration of the potential active causal paths among a fixed variable xj, one of its potential parents xi, and set C = PA(xj) \\ xi. Solid arrows denote parenthood relations, and undirected dashed connections indicate the existence of active paths.", "description": "This figure shows the four possible types of active causal parental path relations between a variable and one of its parents, considering other parents of that variable.  These relations are used in the nonlinear topological sorting algorithm (NHTS) to identify parent-child relationships.", "section": "Nonlinear setting"}, {"figure_path": "xnmm1jThkv/figures/figures_7_1.jpg", "caption": "Figure 4: DAG corresponding to Lemma 5.1, which tests whether xi \u2208 Pa(xj) (i.e., whether the red arrow exists).", "description": "This figure is a directed acyclic graph (DAG) used to illustrate Lemma 5.1 in the paper.  The lemma provides a sufficient condition for determining whether a directed edge exists between two vertices, xi and xj, in a DAG.  The DAG shows three vertices: xi, xj and a set of vertices denoted as Zij, where Zij = Cij U Mij. Cij represents potential confounders of xi and xj, and Mij represents potential mediators between xi and xj.  The red arrow shows the direct edge between xi and xj that Lemma 5.1 is testing for. The lemma states that if xi and xj are conditionally independent given Zij, then there is no direct causal relationship between xi and xj. Conversely, if they are not conditionally independent given Zij, then there is a direct causal relationship (represented by the red arrow).", "section": "5 Edge discovery"}, {"figure_path": "xnmm1jThkv/figures/figures_8_1.jpg", "caption": "Figure 5: Performance of LHTS on synthetic data. Top row: n = 500 with varying dimension d. Bottom row: d = 10 with varying sample size n. See Appendix D.1 for runtime results.", "description": "This figure shows the performance of the LHTS algorithm for linear topological sorting.  The top row displays the ordering accuracy (Atop) and ordering compactness (ordering length) as a function of the dimension (d) of the data, with a fixed sample size (n=500).  The bottom row shows the same metrics, but this time as a function of the sample size (n), holding the dimension fixed at d=10.  The results are compared to two baseline algorithms, DirectLiNGAM and R^2-Sort. The appendix provides additional details on the runtime performance.", "section": "6 Experiments"}, {"figure_path": "xnmm1jThkv/figures/figures_9_1.jpg", "caption": "Figure 6: Performance of NHTS on synthetic data, n = 300, dimension d = 10, with varying error distributions: Gaussian, Laplace, Uniform (left, middle, right). See Appendix D.2 for runtime results.", "description": "This figure shows the performance of the Nonlinear Hierarchical Topological Sort (NHTS) algorithm compared to other baseline methods (DirectLiNGAM, NoGAM, GES, GRaSP, GSP, and R2-Sort) on synthetic datasets.  The datasets were generated with varying noise distributions (Gaussian, Laplace, and Uniform) and a fixed number of samples (n=300) and dimensions (d=10).  The results demonstrate that NHTS outperforms the baseline methods in terms of ordering accuracy (Atop), a metric that represents the percentage of correctly ordered edges. Appendix D.2 provides additional runtime information for the experiments. ", "section": "Nonlinear Topological Sorts"}, {"figure_path": "xnmm1jThkv/figures/figures_9_2.jpg", "caption": "Figure 7: Performance of ED on synthetic data, uniform noise. Left, middle: n = 500 with varying dimension d. Right: d = 10 with varying sample size n. See Appendix D.5 for runtime results.", "description": "This figure shows the performance of the edge discovery algorithm (ED) on synthetic data with uniform noise. The left and middle panels display the F1-score of ED against dimension (d) with a fixed sample size (n=500), comparing it to Lasso, GAM, and RESIT. The right panel shows the F1-score against sample size (n) with a fixed dimension (d=10), also comparing it to Lasso and GAM (RESIT is excluded due to runtime issues at larger sample sizes).  The results demonstrate that ED generally outperforms the baselines in terms of F1-score, especially as the dimension and sample size increase.  Appendix D.5 provides further details on the runtime of the experiments.", "section": "Edge discovery"}, {"figure_path": "xnmm1jThkv/figures/figures_18_1.jpg", "caption": "Figure 5: Performance of LHTS on synthetic data. Top row: n = 500 with varying dimension d. Bottom row: d = 10 with varying sample size n. See Appendix D.1 for runtime results.", "description": "This figure shows the performance of the Linear Hierarchical Topological Sort (LHTS) algorithm on synthetic data. The top row illustrates the ordering accuracy (Atop) and compactness (ordering length) with a fixed sample size (n=500) and varying dimensions (d=10, 20, 30, 50).  The bottom row displays the same metrics but with a fixed dimension (d=10) and varying sample sizes (n=100, 300, 500, 700, 1000, 1500, 2000). Appendix D.1 provides details on the runtime results.", "section": "Experiments"}, {"figure_path": "xnmm1jThkv/figures/figures_23_1.jpg", "caption": "Figure 5: Performance of LHTS on synthetic data. Top row: n = 500 with varying dimension d. Bottom row: d = 10 with varying sample size n. See Appendix D.1 for runtime results.", "description": "This figure shows the performance of the LHTS algorithm for linear topological sorting. The top row displays the ordering accuracy (Atop) and ordering compactness (ordering length) for different dimensions (d) with a fixed sample size (n=500).  The bottom row illustrates the same metrics but with a varying sample size (n) and a fixed dimension (d=10).  Appendix D.1 provides additional details on the runtime performance.", "section": "Linear Topological Sorts"}, {"figure_path": "xnmm1jThkv/figures/figures_24_1.jpg", "caption": "Figure 4: DAG corresponding to Lemma 5.1, which tests whether xi \u2208 Pa(xj) (i.e., whether the red arrow exists).", "description": "This figure illustrates Lemma 5.1, which provides a sufficient condition for determining whether a directed edge exists between two nodes in a DAG given a topological ordering.  It shows a DAG where the key is to show that the only active path from xi to xj is the direct edge, meaning there are no confounding or mediating effects.  The conditioning set Zij ensures that only the direct causal effect from xi to xj is present, allowing for accurate determination of causality.", "section": "5 Edge discovery"}, {"figure_path": "xnmm1jThkv/figures/figures_28_1.jpg", "caption": "Figure 6: Performance of NHTS on synthetic data, n = 300, dimension d = 10, with varying error distributions: Gaussian, Laplace, Uniform (left, middle, right). See Appendix D.2 for runtime results.", "description": "This figure shows the performance of the Nonlinear Hierarchical Topological Sort (NHTS) algorithm compared to other baseline methods (DirectLiNGAM, NoGAM, GES, GRaSP, GSP, and R2-Sort) across different noise distributions (Gaussian, Laplace, and Uniform).  The results demonstrate NHTS's superior performance in terms of topological ordering accuracy (Atop) for various scenarios.  Appendix D.2 provides the runtimes for these experiments.", "section": "Nonlinear Topological Sorts"}, {"figure_path": "xnmm1jThkv/figures/figures_29_1.jpg", "caption": "Figure 13: Performance of ED on data generated with Gaussian, Laplace, or Uniform noise (left, middle, right columns), the average number of edges set to 2d, 3d, or 4d (top, middle, bottom rows).", "description": "This figure shows the performance of the ED (Edge Discovery) algorithm on synthetic data with different noise distributions (Gaussian, Laplace, Uniform) and varying graph densities (average number of edges 2d, 3d, 4d).  The box plots illustrate the F1-score achieved by ED, compared against Lasso and GAM (Generalized Additive Models) baselines. The results demonstrate ED's performance across different noise types and graph densities, highlighting its robustness and effectiveness in causal discovery.", "section": "Edge Pruning"}]