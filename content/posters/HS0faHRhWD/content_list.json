[{"type": "text", "text": "TIME-FFM: Towards LM-Empowered Federated Foundation Model for Time Series Forecasting ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Qingxiang Liu1,2 Xu Liu3 Chenghao Liu4 Qingsong Wen5 Yuxuan Liang1\u2217 ", "page_idx": 0}, {"type": "text", "text": "1 The Hong Kong University of Science and Technology (Guangzhou) 2 Institute of Computing Technology Chinese Academy of Sciences 3 National University of Singapore 4 Salesforce AI Research 5 Squirrel AI qingxiangliu737@gmail.com, liuxu@comp.nus.edu.sg chenghao.liu@salesforce.com, qingsongedu@gmail.com, yuxliang@outlook.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Unlike natural language processing and computer vision, the development of Foundation Models (FMs) for time series forecasting is blocked due to data scarcity. While recent efforts are focused on building such FMs by unlocking the potential of language models (LMs) for time series analysis, dedicated parameters for various downstream forecasting tasks need training, which hinders the common knowledge sharing across domains. Moreover, data owners may hesitate to share the access to local data due to privacy concerns and copyright protection, which makes it impossible to simply construct a FM on cross-domain training instances. To address these issues, we propose TIME-FFM, a Federated Foundation Model for TIME series forecasting by leveraging pretrained LMs. Specifically, we begin by transforming time series into the modality of text tokens. To bootstrap LMs for time series reasoning, we propose a prompt adaption module to determine domain-customized prompts dynamically instead of artificially. Given the data heterogeneity across domains, we design a personalized federated training strategy by learning global encoders and local prediction heads. Our comprehensive experiments indicate that TIME-FFM outperforms state-of-the-arts and promises effective few-shot and zero-shot forecaster. The code is available at https://github.com/CityMindLab/NeurIPS24-Time-FFM/tree/main. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Time series forecasting plays an important role in many real-world application domains [1], such as energy consumption prediction, weather forecasting, and disease transmission. Recently, a multitude of deep learning models have been designed for time series forecasting based on Convolutional Neural Networks [2, 3, 4], Recurrent Neural Networks [5, 6], and Transformers [7, 8, 9, 10]. Inspired by the prominent performance gained by Foundation Models (FMs) in the realms of Natural Language Processing (NLP) [11, 12, 13, 14] and Computer Vision (CV) [15, 16], great research interests have been triggered to build pretrained FMs for time series community [17, 18, 19, 20, 21]. Nonetheless, due to significant time series data scarcity, these FMs are of poor capability to cultivate general representations, failing to promise remarkable fine-tuning or zero-shot performance for diverse downstream forecasting tasks [22, 23]. As a result, a collection of methods have been proposed to borrow the pretrained language FMs to time series community by cross-modality adaption [24, 22, 23], thus unlocking the tapped potential of language models (LMs) for time series modeling. ", "page_idx": 0}, {"type": "image", "img_path": "HS0faHRhWD/tmp/7ba6d3365794e5106576222a4aa394b7c09676446303e9f6a68315fb9d63d06a.jpg", "img_caption": ["Figure 1: (a) Specific prediction models are trained for diverse domains. (b) A unified model is trained for cross-domain time series. (c) The current in-modality adaption in FL setting fine-tunes LM for NLP tasks, with all the trained parameters are exchanged between clients and the server. (d) Our proposal investigates how to construct a FM by unlocking the potential of LM for cross-domain time series forecasting in FL paradigm. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "While these endeavors provide FMs for time series forecasting, the incorporated cross-modality adaption modules and unfrozen components of pretrained LMs need training from scratch for specific domains, thus restricting the mining of underlying temporal commonality in cross-domain time series data. As is shown in Figure 1(a), disease and economics datasets are employed for training the FM respectively to obtain domain-optimal model parameters, hardly generalizing to other domains. [25] proposes to train a unified model (named UniTime) on the mixture of cross-domain time series data (Figure 1(b)), which ensures the cultivation of general-purpose representations, thus promising the zero-shot performance on unseen domains. Despite its effectiveness, they adopt the centralized training mode, where the historical records of time series across diverse domains are uploaded to a central server for optimizing the unified model. Due to copyright protection and privacy concerns, data owners may hesitate to share the access to these domain-specific raw records. ", "page_idx": 1}, {"type": "text", "text": "Federated Learning (FL) [26, 27] provides the mainstream solution for the aforementioned problem, where data owners train prediction models locally and exchange the intermediate model parameters or gradients with the central server, without the disclosure of raw data records. Moreover, in UniTime, a retractable prediction head is introduced to accommodate the heterogeneous output needs whereas FL paradigm makes it possible to construct domain-customized heads. However, current efforts are merely focused on how to fine-tune LMs in federated setting for NLP tasks (i.e., in-modality adaption of LMs for target tasks in Figure 1(c)) [28, 29, 30, 31], rather than cross-modality adaption of LMs for time series forecasting. The realization of this federated FM is non-trivial technically, given the ubiquitous heterogeneity in cross-domain time series data. (1) Heterogeneous inputs: Cross-domain time series data input into the FM are heterogeneous in terms of dimensions and historical readings, posing evident difficulty to modality alignment. (2) Rigid instructions as prompts: Prompts are adopted to bootstrap LMs for time series reasoning hinging on rigid domain-specific instructions [25, 22], rather than the understanding of LMs, exhibiting poor robustness for unseen domains. (3) Conflicts between generalization and personalization: The ideal FM needs to learn the common temporal representations across domains and simultaneously enable the personalized prediction for domain-specific inputs. ", "page_idx": 1}, {"type": "text", "text": "To address the challenges, we propose TIME-FFM, a Federated Foundation Model for TIME series forecasting by repurposing LMs (Figure 1(d)). First, we perform modality alignment by transforming time series data into text tokens to empower the pretrained LM for time series reasoning. Second, we design a prompt adaption module to dynamically determine domain-specific prompts, which can bootstrap the LM for cross-domain time series analysis from the perspective of LM itself, rather than from human cognition by employing hand-crafted instructions as prompts. To tackle the data heterogeneity across domains, we introduce a personalized federated training strategy by learning a global encoder and personalized prediction heads, given the shared representations across domains. Our main contributions are summarized as follows. ", "page_idx": 1}, {"type": "text", "text": "\u2022 We present the first attempt to build a federated FM for time series forecasting by exploiting the sequence reasoning potential of LMs, avoiding the disclosure of local data. \u2022 We propose TIME-FFM, which firstly aligns the modality from time series data to natural language and adaptively determines prompts to guide the LM for time series reasoning. Moreover, we intro", "page_idx": 1}, {"type": "text", "text": "duce a personalized FL strategy to strike a balance between sharing common temporal knowledge and ensuring customized prediction results. \u2022 The extensive evaluation results demonstrate that TIME-FFM leads to state-of-the-art performance in mainstream forecasting tasks, especially in few-shot or zero-shot forecasting settings. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "FMs for Time Series Forecasting. Recent studies have demonstrated the effectiveness of fine-tuning pretrained FMs for various downstream tasks, such as BERT [11], GPT [12], GPT2 [13], and LLaMA [14] in NLP and DEiT [15] and BEiT [16] in CV. Inspired by the success, some efforts have been focused on developing FMs for time series community, such as [17, 18, 21, 32]. However, due to data deficiencies, these pretrained models cannot guarantee the learning of general-purpose representations for time series analysis and hence fail to apply to a multitude of downstream tasks. Another line of researches attempt to leverage pretrained FMs in NLP or CV for time series analysis by crossmodality adaption strategies [33, 34, 35, 24, 23, 22], such as fine-tuning and model reprogramming, which hinges on the powerful generalization capability of Transformers for sequence tokens. [23] freezes the self-attention modules and feedforward layers of GPT2, and only fine-tunes the positional embedding and normalization layers. The proposed GPT4TS outperforms the relevant models in most time series tasks. On the contrary, [22] freezes the LM as a whole and transforms the modality of time series to natural language by patch reprogramming. These methods enable unified model structure rather than unified parameters for diverse downstream tasks, which makes the proposed FMs learn impaired temporal commonality. [25] proposes to train a unified prediction model for cross-domain time series forecasting, which enables to learn the intrinsic temporal patterns. However, the centralized training mode brings privacy concerns for cross-domain data owners and FL paradigm may provide a promising solution. ", "page_idx": 2}, {"type": "text", "text": "Federated Fine-tuning of LMs. Given the exceptional performance of LMs and the emerging privacy preserving resolutions, incorporating LMs with FL is becoming a popular research trend. There have been some implementation frameworks [36, 29, 37, 38, 39, 40] to support fine-tuning LMs in FL setting. Moreover, considering the immense communication cost, some communication-efficient federated fine-tuning methods have been proposed, such as [38, 41, 30, 28]. A few researches aim to investigate the effects of data heterogeneity on fine-tuning performance, and then propose the personalized federated instruction tuning methods, e.g., [42, 29, 31]. Nonetheless, these methods concentrate on fine-tuning or fully-tuning pretrained LMs in FL paradigm for NLP tasks, but fail to cover the cross-modality adaption of LMs for time series forecasting. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 Problem Definition ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Given $N$ domains, let $\\pmb{x}_{i,t}\\,=\\,\\{x_{i,t}^{1},\\cdot\\cdot\\cdot,x_{i,t}^{c_{i}}\\}\\,\\in\\,\\mathbb{R}^{c_{i}}$ denote the observation of domain $i$ at the time step , where $c_{i}$ represents the number of dimensions (channels). In the context of time series forecasting, we denote $\\pmb{X}_{i}=\\{\\pmb{x}_{i,1},\\cdot\\cdot\\cdot,\\pmb{x}_{i,L_{i}}\\}\\in\\mathbb{R}^{L_{i}\\times c_{i}}$ as the input of the prediction model $f_{i}(\\cdot)$ , where $L_{i}$ represents the domain-variant lookback window. The ground truths can be denoted as ${\\bf Y}_{i}=\\{{\\pmb x}_{i,L_{i}+1},\\cdot\\cdot\\cdot,{\\pmb x}_{i,L_{i}+F_{i}}\\}\\in\\mathbb{R}^{F_{i}\\times c_{i}}$ , where $F_{i}$ represents the future prediction window. Let $D_{i}\\;=\\;\\{({\\pmb X}_{i};{\\pmb Y}_{i})\\}$ denote the local data set of $i$ and $D_{i}\\,=\\,|\\mathcal{D}_{i}|$ the data size. Given the set of personalized model parameters $\\{w_{i}\\}$ , the objective of federated FM for cross-domain time series forecasting can be formulated as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\{w_{1},\\cdots,w_{N}\\}}\\mathcal{L}=\\frac{1}{N}\\sum_{i=1}^{N}\\frac{1}{D_{i}}\\!\\sum_{({\\bf{X}}_{i};{\\bf{Y}}_{i})\\in\\mathcal{D}_{i}}\\parallel Y_{i}-f_{i}(w_{i};{\\bf{X}}_{i})\\parallel_{2}^{2}\\,.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "3.2 Model Structure ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The model architecture is elaborated in Figure 2. Our model encompasses three components: (1) modality alignment and prompt adaption, (2) LM backbone, and (3) prediction head. The modules of modality alignment and prompt adaption are designed for cross-modality alignment and adaptive prompt determination. We employ the backbone of GPT2 [13] with freezing all parameters. The prediction head enables domain-specific prediction results. ", "page_idx": 2}, {"type": "image", "img_path": "HS0faHRhWD/tmp/5399ae9ccd323fe8b259db1bd19d4ebebcd6a9d3239e9edb7d47ddb1bd13448d.jpg", "img_caption": ["Figure 2: Overall architecture of TIME-FFM. Each round begins with $\\circled{1}$ downloading global parameters of modality alignment and prompt adaption modules. We $\\circled{2}$ conduct modality alignment to generate patch tokens and $\\circled{3}$ adaptively determine prompt tokens. $\\circled{4}$ The two tokens are input into the LM backbone and $\\circled{5}$ the outputs are projected to generate the prediction results. After local optimization, $\\circled{6}$ the updated parameters of modality alignment and prompt adaption modules are uploaded to the server for aggregation. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Modality Alignment. Here we transform time series into the modality of text tokens. To accommodate domain-variant channels $c_{i}$ , we adopt the channel-independent strategy [43] to split multivariate time series $X_{i}$ into $c_{i}$ univariate series and individually process each. Let $\\dot{X}_{i}^{j}=\\{x_{i,1}^{j},\\cdot\\cdot\\cdot x_{i,L_{i}}^{j}\\}\\in\\mathbb{R}^{1\\times L_{i}}$ denote the $j$ -th univariate series from $X_{i}$ . Then we normalize each series $X_{i}^{j}$ to mitigate the effect of distribution diversity [44]. Since each data point of $X_{i}^{j}$ does not have explicit semantic knowledge like words in sentences, we adopt the patching technique [43] to segment $X_{i}^{j}$ into subseries (termed patches), each of which can aggregate the local information and better retain the temporal knowledge. Specifically, let $P$ denote the patch length and $S_{i}$ denote the stride length of domain $i$ . Hence, the number of patches can be defined as $\\begin{array}{r}{B_{i}=\\left\\lceil\\frac{L_{i}-P}{S_{i}}\\right\\rceil+1}\\end{array}$ . We denote $X_{i,S}^{j}\\in\\mathbb{R}^{B_{i}\\times P}$ as the generated patches from $X_{i}^{j}$ . We subsequently employ a linear layer to project the patches into tokens $\\hat{\\pmb{X}}_{i,S}^{j}\\in\\mathbb{R}^{B_{i}\\times D}$ , where $D$ is the input dimension size of the LM backbone. $\\hat{X}_{i,S}^{j}$ together with prompt tokens (in the next part) will be input into the LM backbone. ", "page_idx": 3}, {"type": "text", "text": "Prompt Adaption. In the time series forecasting FMs based on LMs, domain instructions are designed as prompts to complement the patch tokens and inform the LM backbone of domain-specific knowledge [22, 25]. These manually-designed prompts depend completely on experts\u2019 knowledge and may vary from each other due to different understandings. Furthermore, according to the results, more detailed instructions can always yield better prediction performance [22], which may make us naturally draw a conclusion that the ultimate performance hinges on the length of prompts. However, longer prompt tokens will present substantial challenge on the computation burden. Different from images [45] or acoustic data [33], which can be \u201ctranslated\u201d into natural language seamlessly, the manually-crafted prompts are error-prone to describe the characteristics of the raw time series. To this end, a better way is to design prompts from LM\u2019s understandings of the patch tokens rather than human cognition of raw time series data. Here, we propose to adaptively determine prompts based on patch tokens from the source corpus of pretrained LM (which includes $V$ pretrained word embeddings, denoted as $E\\in\\mathbb{R}^{V\\times D})$ . Similar to [22], we project $\\pmb{E}$ to a smaller collection of text prototypes, denoted as $E^{\\prime}\\in\\mathbb{R}^{V^{\\prime}\\times D}$ by a linear layer, with $V^{\\prime}\\ll V$ , to avoid the potential large parameter space. We adopt a modified multi-head attention layer to obtain the correlation between $\\pmb{E}^{\\prime}$ and $\\hat{X}_{i,S}^{j}$ , and subsequently select $M$ mostly related text prototypes as prompts. Concretely, for each head $h\\,\\in\\,\\{1,\\cdots,H\\}$ , we have the query matrix ${\\pmb Q}_{i,h}^{j}\\,=\\,E^{\\prime}{\\pmb W}_{h}^{Q}$ W hQ and the key matrix $K_{i,h}^{j}\\;=\\;\\hat{X}_{i,S}^{j}W_{h}^{K}$ , where ${\\pmb W}_{h}^{Q},{\\pmb W}_{h}^{K}\\,\\in\\,\\mathbb R^{D\\times d}$ and $\\begin{array}{r}{d=\\,\\left\\lfloor\\frac{D}{H}\\right\\rfloor}\\end{array}$ . Since we do not aim to return a weighted value matrix according to the given query but merely evaluate the correlation of text prototypes and patch tokens, we omit the value matrix here. The attention score matrix is denoted as $\\mathbf{\\bar{O}}_{i,h}^{j}\\in\\mathbf{\\bar{R}}^{V^{\\prime}\\times B_{i}}$ and can be calculated as ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "equation", "text": "$$\n{\\pmb{O}}_{i,h}^{j}=\\mathrm{SOFTMAX}(\\frac{{\\pmb{Q}}_{i,h}^{j}{\\pmb{K}}_{i,h}^{j\\top}}{\\sqrt{d}}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We obtain $\\hat{O}_{i,h}^{j}\\in\\mathbb{R}^{V^{\\prime}\\times1}$ by calculating the summation of $O_{i,h}^{j}$ per row. Each value in $\\hat{O}_{i,h}^{j}$ represents the correlation degree of the corresponding text prototype in $\\pmb{{\\cal E}}^{\\prime}$ to all patch tokens $\\hat{X}_{i,S}^{j}$ . We select $M$ prototypes from $Q_{i,h}^{j}$ with top attention scores to form the potential prompts $Z_{i,h}^{j}\\in\\mathbb{R}^{M\\times d}$ , i.e., $\\pmb{Z}_{i,h}^{j}=\\pmb{Q}_{i,h}^{j}\\left[\\mathrm{TopM}(\\hat{\\pmb{O}}_{i,h}^{j})\\right]$ . We can obtain $Z_{i}^{j}\\in\\mathbb{R}^{M\\times D}$ by aggregating $Z_{i,h}^{j}$ from all $H$ heads. Finally, we employ a linear layer to project $Z_{i}^{j}$ to the prompt tokens $\\hat{Z}_{i}^{j}\\in\\mathbb{R}^{M\\times D}$ . ", "page_idx": 4}, {"type": "text", "text": "Prediction Head. We input the concat of ${\\hat{Z}}_{i}^{j}$ and $\\hat{X}_{i,S}^{j}$ into the LM backbone and obtain the representations $R_{i}^{j}\\in\\mathbb{R}^{(M+B_{i})\\times D}$ , which will be flattened and projected to the final results $\\hat{Y}_{i}^{j}\\in$ R1\u00d7Fi by a linear layer. ", "page_idx": 4}, {"type": "text", "text": "Personalized Strategy. Time series across different domains could be substantially heterogeneous. Consequently, a generalized global model in FL may fail to capture the disparate temporal patterns and ultimately compromises the prediction performance. Inspired by [46], which indicates that diverse data may share common feature representations, we propose to learn a global encoder (i.e., modality alignment, prompt adaption and LM backbone) and domain-customized prediction heads. The underlying motivation is to strike a balance between generalization and personalization: (1) increasing the generalization of modality alignment and prompt adaption by access to cross-domain temporal patterns; (2) ensuring prediction results specific for certain domains by personalized heads. Since we keep the LM backbone intact, in each federating round, only the parameters of modality alignment and prompt adaption are communicated. The server performs aggregation by averaging strategy. The training strategy differs from Federated Averaging framework, where the parameters of encoder and decoder are both aggregated at the central server after local optimization. ", "page_idx": 4}, {"type": "text", "text": "3.3 Training Process ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We denote $w_{t}^{g}$ as the global parameters of modality alignment and prompt adaption at the $t$ -th federated round and $w_{i,t}^{p}$ as prediction head parameters of $i$ at the $t$ -th round. We clarify that $(X_{i},Y_{i})$ here is reused to represent a training batch. $\\hat{X}_{i,S},\\hat{Z}_{i},R_{i}$ , and $\\hat{Y_{i}}$ denote the patch tokens, prompt tokens, representations and prediction results of such batch respectively. The training procedure of TIME-FFM is elaborated in Algorithm 1. (1) In the $t$ -th federated round, the server distributes the global parameters $w_{t}^{g}$ (Line 8 and 9). (2) Each domain loads the global parameters and local head parameters to perform prediction following modality alignment, prompt adaption as well as representation obtaining from LM backbone (Line 12-15) and uploads $w_{t,i}^{g^{-}}$ to the server after optimization. (3) Finally, the server aggregates local updated parameters by averaging mechanism to obtain the fresh global parameters $w_{t+1}^{\\bar{g}}$ for the $(t+1)$ -th round (Line 6). ", "page_idx": 4}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We comprehensively compare the proposed TIME-FFM with state-of-the-art models in $\\mathrm{FL}$ or centralized settings, especially those by fine-tuning LM for time series forecasting. The numerical results demonstrate the effectiveness of TIME-FFM in time series forecasting. We employ GPT2 backbone of the first 6 layers as the default LM backbone and freeze all parameters. To guarantee a fair comparison, we adhere to the experimental configurations in [25]. ", "page_idx": 4}, {"type": "table", "img_path": "HS0faHRhWD/tmp/099fe8610c73075aef9d41dd6c1549e2e66d8de496b6244d6e3a96960376e096.jpg", "table_caption": ["Algorithm 1: Training process of TIME-FFM. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Baselines. Our baselines cover a board collection of relevant methods, which can be categorised into 3 types: TY1 (federated fine-tuning methods): FedIT [31], FedAdapterH [47, 41], and FedAdapterP [48, 41]; TY2 (across-dataset centralized methods): UniTime [25], GPT4TS [23], and PatchTST [43]; 2 TY3 (dataset-specific centralized methods): TimesNet [4], DLinear [49], FEDformer [50], Autoformer [10], and Informer [9]. We directly cite the results from [25] if applicable. ", "page_idx": 5}, {"type": "text", "text": "Setups. We evaluate on 8 benchmark datasets from various domains: ETTh1, ETTh2, ETTm1, ETTm2, Electricity, Weather, Exchange, and ILI, which have been widely adopted for evaluating time series forecasting performance. Each dataset corresponds to a FL participant. Detailed introduction of implementation and datasets can be found in Appendix A. We use Mean Square Error (MSE) and Mean Absolute Error (MAE) as the evaluation metrics. ", "page_idx": 5}, {"type": "text", "text": "4.1 Main Results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Main forecasting results are presented in Table 1. TIME-FFM consistently outperforms the other FL methods (in TY1) on all datasets, except ETTh2. Specifically, TIME-FFM can improve the performance gains over all datasets by $39.01\\%$ in terms of MSE, compared with the second bestperformed FL method. Furthermore, the averaged prediction results of TIME-FFM are even superior to those of the centralized models. When compared with UniTime, the recently-proposed centralized unified model for cross-domain time series forecasting, TIME-FFM can provide more performance gains, which underscores the effectiveness of the proposed cross-modality adaption modules and personalized approach. ", "page_idx": 5}, {"type": "text", "text": "4.2 Few-Shot Forecasting ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Given the remarkable few-shot learning performance of LMs, we evaluate whether TIME-FFM can retain such capability for time series forecasting. In this section, we compare the prediction performance across TY1 and TY2 in few-shot settings with $10\\%$ and $5\\%$ time steps adopted as training samples, which is in line with the setups in [23, 22]. ", "page_idx": 5}, {"type": "text", "text": "Main results of $10\\%$ and $5\\%$ few-shot forecasting are presented in Table 2 and 3 respectively. TIMEFFM outperforms the other FL methods and even achieves comparable performance in contrast to the centralized methods, which further underscores that TIME-FFM inherits the few-shot capability of LMs and promises proficient FM for time series forecasting. Specifically, TIME-FFM outperforms the centralized methods in the realm of $5\\%$ few-shot learning, with $20\\%$ reduction in averaged MSE w.r.t UniTime. Interestingly, for all methods except UniTime, results in $10\\%$ few-shot learning are worse than those in $5\\%$ few-shot learning. We deduce that the pretrained LM is fully-tuned in ", "page_idx": 5}, {"type": "text", "text": "Table 1: Forecasting performance comparisons. All results are averaged over four prediction windows, i.e., $F_{i}\\,\\in\\,\\{24,36,48,60\\}$ for ILI and { 96, 192, 336, 720} for others. Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over all types; Bold: the second best over all types. Full results are presented in Table 13. ", "page_idx": 6}, {"type": "table", "img_path": "HS0faHRhWD/tmp/67f9a3db2b772cf470f093f5a4386f13405cd89c2d6ff55a0c5977ad2d8e093d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "UniTime and fewer training samples fail to support optimizing masses of parameters. While in the other methods, the pretrained LMs are frozen or fine-tuned, which can retain the original reasoning capability of LMs even with fewer training instances. ", "page_idx": 6}, {"type": "text", "text": "Table 2: $10\\%$ few-shot forecasting results. All results are averaged across four prediction windows, i.e., $F_{i}\\in\\{96,192,336,720\\}$ . Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. Full results are presented in Table 14. ", "page_idx": 6}, {"type": "table", "img_path": "HS0faHRhWD/tmp/2977a82045ab3843e96fdd6ea78ebc62880c3c4277c38f6d75fee01a33a47bb1.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Table 3: $5\\%$ few-shot forecasting results. All results are averaged across four prediction windows, i.e., $F_{i}\\,\\in\\,\\{96,192,336,720\\}$ . Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. Full results are presented in Table 16. ", "page_idx": 6}, {"type": "table", "img_path": "HS0faHRhWD/tmp/e5083f5281715e175e0c9b557abcfbb96b39e1105857b3b1ce54c5d379b0c006.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4.3 Zero-Shot Forecasting ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Given that language FMs are effective zero-shot forecasters, we evaluate the zero-shot learning capability of TIME-FFM, which is essential for a FM. We adhere to the zero-shot learning settings in [25], where we first train TIME-FFM on ETTh1, ETTm1, and ETTm2, and then evaluate the zero-shot testing performance on ETTh2, Electricity, and Weather. ", "page_idx": 7}, {"type": "text", "text": "Since ETTh2 hails from the same domain of ETTh1, we directly reuse the local parameters (including both encoder and head) of ETTh1 for inferring ETTh2. For the other two target datasets from different domains of the source datasets, we successively reuse local parameters of the three source datasets to perform zero-shot testing. The results presented in Table 15 show that local parameters of ETTh1 excel on both target datasets. Hence, we adopt the model parameters of ETTh1 for zero-shot testing on Electricity and Weather. For other methods in TY1, we train an optimized global model on ETTh1, ETTm1, and ETTm2, and then adopt the obtained global model to conduct zero-shot testing on ETTh2, Electricity, and Weather. The comparison in zero-shot forecasting is presented in Table 4. TIME-FFM consistently ensures significant performance gains on all three datasets, with prediction MSE decreasing by $13.9\\%$ w.r.t the second best. It is remarkable that the centralized unified model UniTime exhibits inferior zero-shot testing performance compared to TIME-FFM. We attribute the performance gains of TIME-FFM to the valid knowledge transferability across domains. ", "page_idx": 7}, {"type": "table", "img_path": "HS0faHRhWD/tmp/cec9b6f7064027d7eb8665821a939b218f7528ad28f267a5c9259b9ee8e04a39.jpg", "table_caption": ["Table 4: Zero-shot forecasting results. All results are averaged across four prediction windows, i.e., $F_{i}\\,\\in\\,\\{96,192,336,720\\}$ . Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. Full results are presented in Table 17. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "HS0faHRhWD/tmp/01834e4dee94d804ff2ff114d057b8d4ed6811f5668d19d91d46ab35efd79957.jpg", "table_caption": ["Table 5: Ablation studies of TIME-FFM on ETTh1 and ILI datasets with $F_{i}\\,\\in\\,\\{336,720\\}$ and $F_{i}\\in\\{48,60\\}$ respectively. Bold: the best. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.4 Model Analysis ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Model Ablation. We conduct ablation studies on five variants of TIME-FFM and the corresponding results are presented in Table 5 (A.1-A.6). Thereinto, TIME-FFM-D represents the distirbuted version of TIME-FFM, which ablates the aggregation process. The results demonstrate that ablating either components will compromise the forecasting performance. We have the following key observations: (1) The prompt tokens can bootstrap the LM for target domains. The absence of prompt adaption (A.2) will affect the forecasting performance. When employing instructions in [25] as prompts, A.3 is inferior to TIME-FFM, which underscores the efficacy of prompt adaption. (2) The ablation of personalized heads (A.4) will hurt the performance most. In A.4, a global prediction head is learned for all domains, hardly ensuring the personalization for cross-domain heterogeneous data. (3) In A.6, the common temporal knowledge fails to be shared among domains, which makes poorer generalization of cross-modality adaption modules, thus yielding inferior performance. This underscores the significance of building a unified model for cross-domain traffic series forecasting. ", "page_idx": 7}, {"type": "text", "text": "Table 6: Ablation studies of LM on ETTh1 and Weather datasets with $F_{i}\\,\\in\\,\\{96,192\\}$ and $F_{i}\\,\\in$ $\\{336,720\\}$ respectively. Bold: the best. ", "page_idx": 8}, {"type": "table", "img_path": "HS0faHRhWD/tmp/8597223b9cef75977bca7d4168562543f4a39a19d0ad6d1bed5453c79636c728.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "HS0faHRhWD/tmp/ee1b4d01990f50775c0fd3514052dd3f000d416f21e26b49f4a81c7326cc662d.jpg", "table_caption": ["Table 7: Efficiency analysis of TIME-FFM on ETTh1 dataset. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Language Model Variants. We investigate the variants of LM, in terms of optimization modes (B.1-B.3) and backbone layers (C.1 and C.2). Here we train all variants on seven datasets except Electricity, due to GPU memory limitation. In B.3, the backbones of LM are full-tuned. While in B.2, we only tune the positional embeddings and layer normalization components of the backbone [23]. Table 6 shows that B.3 performs best, followed by B.2 and B.1. We argue that the performance remains comparable when we freeze all backbone parameters. This demonstrates that LMs are capable in processing time series tokens by effectively modality alignment. In C.1 and C.2, 6 and 12 backbone layers are adopted. The results shows that more backbone layers ensure better performance, which indicates the scaling laws of LMs retain in TIME-FFM for time series forecasting [51, 22]. ", "page_idx": 8}, {"type": "text", "text": "Model Efficiency. Table 7 demonstrates that TIME-FFM can reduce the training parameter quantity and communication overhead with insignificant increase in training time. Moreover, the number of training parameters and communication parameters keeps intact, regardless of backbone layers. ", "page_idx": 8}, {"type": "text", "text": "Case Study. We provide a case study on prompt adaption in Figure 3. (a) shows the attention scores between 6 patch tokens and 100 text prototypes for 8 heads on ETTh1 dataset. For each head, only a small set of text prototypes (columns) have remarkable scores, which indicates that each patch token is only related to limited pretrained word embeddings and dynamically prompt adaption is promising. (b)-(d) show top $M$ prototypes of 8 heads on ETTh1, Electricity, and ILI respectively. Darker colors correspond to text prototypes with higher attention scores. From these three subplots, ", "page_idx": 8}, {"type": "image", "img_path": "HS0faHRhWD/tmp/8ef267fb6fd5d666b99a33ad3c80db7dc9eed12763c3a9b37d808dc5b3488cd6.jpg", "img_caption": ["Figure 3: A showcase of prompt adaption. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "we have the following key observations: (1) different datasets correspond to variant text prototypes; (2) the distribution of text prototypes on different datasets has commonality, i.e., gathering in shadow areas. These observations indicate the global prompt adaption module has great generalization for diverse datasets and simultaneously ensures personalization across various domains. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion and Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we propose the first federated foundation model for time series forecasting, with adaptively generating domain-specific prompts and tackling time series heterogeneity for generalpurpose learning and personalized prediction. Specifically, given the differentiation of dimensionality and horizon, we introduce the modality alignment module encompassing the channel-independent and patching techniques, which may follow the track of GPT4TS and Time-LLM. For bootstrapping the pre-trained GPT2 backbone for cross-domain time series reasoning, we propose to adaptively construct prompts from how to understand patch tokens, rather than from rigid domain instructions. Due to cross-domain time series heterogeneity, we devise a personalized federated strategy, with global encoder and personalized prediction heads. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Rationale of TIME-FFM. Compared with the modality of text, time series is more domain-specific and copyright-sensitive, i.e., private knowledge may be inferred from historical time series readings, especially in finance and healthcare domain. Hence, it is of great significance to take data privacy into account when constructing time series foundation models. Moreover, a multitude of public data cannot even be adopted for pre-training foundation models due to data license restriction, such as Kaggle public datasets. Hence, our work uniquely bridges the gap between foundation models and federated learning, which not only enhances the privacy and applicability of foundation models in sensitive domains but also opens up new avenues for leveraging rich, yet previously inaccessible, time series data for advanced predictive analytics, addressing a crucial need in this field. ", "page_idx": 9}, {"type": "text", "text": "Limitations and Future Works. We recognize some limitations of our work: the training time is increased compared with the TY1 and the performance in some case is suboptimal. In the future work, we will explore more effective and efficient modality alignment strategies. Moreover, further researches will investigate the correspondence between patch embeddings and word embeddings to explore whether time series data can be seamlessly \u201ctranslated\u201d into natural language. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is mainly supported by the National Natural Science Foundation of China (No. 62402414). This work is also supported by the Guangzhou-HKUST(GZ) Joint Funding Program (No. 2024A03J0620), Guangzhou Municipal Science and Technology Project (No. 2023A03J0011), the Guangzhou Industrial Information and Intelligent Key Laboratory Project (No. 2024A03J0628), and a grant from State Key Laboratory of Resources and Environmental Information System, and Guangdong Provincial Key Lab of Integrated Communication, Sensing and Computation for Ubiquitous Internet of Things (No. 2023B1212010007). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Qingsong Wen, Linxiao Yang, Tian Zhou, and Liang Sun. Robust time series analysis and applications: An industrial perspective. In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 4836\u20134837, 2022.   \n[2] Shaojie Bai, J Zico Kolter, and Vladlen Koltun. An empirical evaluation of generic convolutional and recurrent networks for sequence modeling. arXiv preprint arXiv:1803.01271, 2018.   \n[3] Huiqiang Wang, Jian Peng, Feihu Huang, Jince Wang, Junhui Chen, and Yifei Xiao. Micn: Multi-scale local and global context modeling for long-term series forecasting. In The Eleventh International Conference on Learning Representations, 2022.   \n[4] Haixu Wu, Tengge Hu, Yong Liu, Hang Zhou, Jianmin Wang, and Mingsheng Long. Timesnet: Temporal 2d-variation modeling for general time series analysis. In The eleventh international conference on learning representations, 2022.   \n[5] Guokun Lai, Wei-Cheng Chang, Yiming Yang, and Hanxiao Liu. Modeling long-and short-term temporal patterns with deep neural networks. In The 41st international ACM SIGIR conference on research & development in information retrieval, pages 95\u2013104, 2018.   \n[6] David Salinas, Valentin Flunkert, Jan Gasthaus, and Tim Januschowski. Deepar: Probabilistic forecasting with autoregressive recurrent networks. International journal of forecasting, 36(3):1181\u20131191, 2020.   \n[7] Weiqi Chen, Wenwei Wang, Bingqing Peng, Qingsong Wen, Tian Zhou, and Liang Sun. Learning to rotate: Quaternion transformer for complicated periodical time series forecasting. In Proceedings of the 28th ACM SIGKDD conference on knowledge discovery and data mining, pages 146\u2013156, 2022.   \n[8] Nikita Kitaev, Lukasz Kaiser, and Anselm Levskaya. Reformer: The efficient transformer. In International Conference on Learning Representations, 2019.   \n[9] Haoyi Zhou, Shanghang Zhang, Jieqi Peng, Shuai Zhang, Jianxin Li, Hui Xiong, and Wancai Zhang. Informer: Beyond efficient transformer for long sequence time-series forecasting. In Proceedings of the AAAI conference on artificial intelligence, pages 11106\u201311115, 2021.   \n[10] Haixu Wu, Jiehui Xu, Jianmin Wang, and Mingsheng Long. Autoformer: Decomposition transformers with auto-correlation for long-term series forecasting. Advances in neural information processing systems, 34:22419\u201322430, 2021.   \n[11] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: pre-training of deep bidirectional transformers for language understanding. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, NAACL-HLT 2019, 2019.   \n[12] Alec Radford, Karthik Narasimhan, Tim Salimans, Ilya Sutskever, et al. Improving language understanding by generative pre-training. 2018.   \n[13] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019.   \n[14] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023.   \n[15] Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, and Herv\u00e9 J\u00e9gou. Training data-efficient image transformers & distillation through attention. In International conference on machine learning, pages 10347\u201310357. PMLR, 2021.   \n[16] Hangbo Bao, Li Dong, Songhao Piao, and Furu Wei. Beit: Bert pre-training of image transformers. In International Conference on Learning Representations, 2021.   \n[17] Xiang Zhang, Ziyuan Zhao, Theodoros Tsiligkaridis, and Marinka Zitnik. Self-supervised contrastive pre-training for time series via time-frequency consistency. Advances in Neural Information Processing Systems, 35:3988\u20134003, 2022.   \n[18] Shohreh Deldari, Hao Xue, Aaqib Saeed, Jiayuan He, Daniel V Smith, and Flora D Salim. Beyond just vision: A review on self-supervised representation learning on multimodal and temporal data. arXiv preprint arXiv:2206.02353, 2022.   \n[19] Ming Jin, Qingsong Wen, Yuxuan Liang, Chaoli Zhang, Siqiao Xue, Xue Wang, James Zhang, Yi Wang, Haifeng Chen, Xiaoli Li, et al. Large models for time series and spatio-temporal data: A survey and outlook. arXiv preprint arXiv:2310.10196, 2023.   \n[20] Yuxuan Liang, Haomin Wen, Yuqi Nie, Yushan Jiang, Ming Jin, Dongjin Song, Shirui Pan, and Qingsong Wen. Foundation models for time series analysis: A tutorial and survey. arXiv preprint arXiv:2403.14735, 2024.   \n[21] Kexin Zhang, Qingsong Wen, Chaoli Zhang, Rongyao Cai, Ming Jin, Yong Liu, James Y Zhang, Yuxuan Liang, Guansong Pang, Dongjin Song, et al. Self-supervised learning for time series analysis: Taxonomy, progress, and prospects. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2024.   \n[22] Ming Jin, Shiyu Wang, Lintao Ma, Zhixuan Chu, James Y. Zhang, Xiaoming Shi, Pin-Yu Chen, Yuxuan Liang, Yuan-Fang Li, Shirui Pan, and Qingsong Wen. Time-LLM: Time series forecasting by reprogramming large language models. In The Twelfth International Conference on Learning Representations, 2024.   \n[23] Tian Zhou, Peisong Niu, Liang Sun, Rong Jin, et al. One fits all: Power general time series analysis by pretrained lm. Advances in neural information processing systems, 36, 2024.   \n[24] Ching Chang, Wen-Chih Peng, and Tien-Fu Chen. Llm4ts: Two-stage fine-tuning for time-series forecasting with pre-trained llms. arXiv preprint arXiv:2308.08469, 2023.   \n[25] Xu Liu, Junfeng Hu, Yuan Li, Shizhe Diao, Yuxuan Liang, Bryan Hooi, and Roger Zimmermann. Unitime: A language-empowered unified model for cross-domain time series forecasting. In Proceedings of the ACM Web Conference 2024, 2024.   \n[26] Brendan McMahan, Eider Moore, Daniel Ramage, Seth Hampson, and Blaise Aguera y Arcas. Communication-efficient learning of deep networks from decentralized data. In Artificial intelligence and statistics, pages 1273\u20131282. PMLR, 2017.   \n[27] Tian Li, Anit Kumar Sahu, Manzil Zaheer, Maziar Sanjabi, Ameet Talwalkar, and Virginia Smith. Federated optimization in heterogeneous networks. Proceedings of Machine learning and systems, 2:429\u2013450, 2020.   \n[28] Zhuo Zhang, Yuanhang Yang, Yong Dai, Qifan Wang, Yue Yu, Lizhen Qu, and Zenglin Xu. Fedpetuning: When federated learning meets the parameter-efficient tuning methods of pretrained language models. In Findings of the Association for Computational Linguistics: ACL 2023, pages 9963\u20139977, 2023.   \n[29] Tianshi Che, Ji Liu, Yang Zhou, Jiaxiang Ren, Jiwen Zhou, Victor Sheng, Huaiyu Dai, and Dejing Dou. Federated learning of large language models with parameter-efficient prompt tuning and adaptive optimization. In Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, pages 7871\u20137888, 2023.   \n[30] Ningxin Su, Chenghao Hu, Baochun Li, and Bo Li. Titanic: Towards production federated learning with large language models. In IEEE INFOCOM 2024 - IEEE Conference on Computer Communications, 2024.   \n[31] Jianyi Zhang, Saeed Vahidian, Martin Kuo, Chunyuan Li, Ruiyi Zhang, Tong Yu, Guoyin Wang, and Yiran Chen. Towards building the federatedgpt: Federated instruction tuning. In ICASSP 2024-2024 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 6915\u20136919. IEEE, 2024.   \n[32] Gerald Woo, Chenghao Liu, Akshat Kumar, Caiming Xiong, Silvio Savarese, and Doyen Sahoo. Unified training of universal time series forecasting transformers. arXiv preprint arXiv:2402.02592, 2024.   \n[33] Chao-Han Huck Yang, Yun-Yun Tsai, and Pin-Yu Chen. Voice2series: Reprogramming acoustic models for time series classification. In International conference on machine learning, pages 11808\u201311819. PMLR, 2021.   \n[34] Shukang Yin, Chaoyou Fu, Sirui Zhao, Ke Li, Xing Sun, Tong Xu, and Enhong Chen. A survey on multimodal large language models. arXiv preprint arXiv:2306.13549, 2023.   \n[35] Pin-Yu Chen. Model reprogramming: Resource-efficient cross-domain machine learning. In Proceedings of the AAAI Conference on Artificial Intelligence, pages 22584\u201322591, 2024.   \n[36] Weirui Kuang, Bingchen Qian, Zitao Li, Daoyuan Chen, Dawei Gao, Xuchen Pan, Yuexiang Xie, Yaliang Li, Bolin Ding, and Jingren Zhou. Federatedscope-llm: A comprehensive package for fine-tuning large language models in federated learning. arXiv preprint arXiv:2309.00363, 2023.   \n[37] Rui Ye, Wenhao Wang, Jingyi Chai, Dihan Li, Zexi Li, Yinda Xu, Yaxin Du, Yanfeng Wang, and Siheng Chen. Openfedllm: Training large language models on decentralized private data via federated learning. arXiv preprint arXiv:2402.06954, 2024.   \n[38] Tao Fan, Yan Kang, Guoqiang Ma, Weijing Chen, Wenbin Wei, Lixin Fan, and Qiang Yang. Fate-llm: A industrial grade federated learning framework for large language models. arXiv preprint arXiv:2310.10049, 2023.   \n[39] Ronghui Xu, Hao Miao, Senzhang Wang, Philip S Yu, and Jianxin Wang. Pefad: A parameterefficient federated framework for time series anomaly detection. In SIGKDD, pages 3621\u20133632, 2024.   \n[40] Chenxi Liu, Qianxiong Xu, Hao Miao, Sun Yang, Lingzheng Zhang, Cheng Long, Ziyue Li, and Rui Zhao. Timecma: Towards llm-empowered time series forecasting via cross-modality alignment. arXiv preprint arXiv:2406.01638, 2024.   \n[41] Guangyu Sun, Matias Mendieta, Taojiannan Yang, and Chen Chen. Conquering the communication constraints to enable large pre-trained models in federated learning. arXiv preprint arXiv:2210.01708, 2022.   \n[42] Pengyu Zhang, Yingbo Zhou, Ming Hu, Junxian Feng, Jiawen Weng, and Mingsong Chen. Personalized federated instruction tuning via neural architecture search. arXiv preprint arXiv:2402.16919, 2024.   \n[43] Yuqi Nie, Nam H Nguyen, Phanwadee Sinthong, and Jayant Kalagnanam. A time series is worth 64 words: Long-term forecasting with transformers. In The Eleventh International Conference on Learning Representations, 2022.   \n[44] Taesung Kim, Jinhee Kim, Yunwon Tae, Cheonbok Park, Jang-Ho Choi, and Jaegul Choo. Reversible instance normalization for accurate time-series forecasting against distribution shift. In International Conference on Learning Representations, 2021.   \n[45] Diganta Misra, Agam Goyal, Bharat Runwal, and Pin Yu Chen. Reprogramming under constraints: Revisiting efficient and reliable transferability of lottery tickets. arXiv preprint arXiv:2308.14969, 2023.   \n[46] Liam Collins, Hamed Hassani, Aryan Mokhtari, and Sanjay Shakkottai. Exploiting shared representations for personalized federated learning. In International conference on machine learning, pages 2089\u20132099. PMLR, 2021.   \n[47] Neil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe, Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly. Parameter-efficient transfer learning for nlp. In International conference on machine learning, pages 2790\u20132799. PMLR, 2019.   \n[48] Jonas Pfeiffer, Aishwarya Kamath, Andreas R\u00fcckl\u00e9, Kyunghyun Cho, and Iryna Gurevych. Adapterfusion: Non-destructive task composition for transfer learning. In Proceedings of the 16th Conference of the European Chapter of the Association for Computational Linguistics: Main Volume, pages 487\u2013503, 2021.   \n[49] Ailing Zeng, Muxi Chen, Lei Zhang, and Qiang Xu. Are transformers effective for time series forecasting? In Proceedings of the AAAI conference on artificial intelligence, pages 11121\u201311128, 2023.   \n[50] Tian Zhou, Ziqing Ma, Qingsong Wen, Xue Wang, Liang Sun, and Rong Jin. Fedformer: Frequency enhanced decomposed transformer for long-term series forecasting. In International conference on machine learning, pages 27268\u201327286. PMLR, 2022.   \n[51] Jared Kaplan, Sam McCandlish, Tom Henighan, Tom B Brown, Benjamin Chess, Rewon Child, Scott Gray, Alec Radford, Jeffrey Wu, and Dario Amodei. Scaling laws for neural language models. arXiv preprint arXiv:2001.08361, 2020.   \n[52] Yong Liu, Tengge Hu, Haoran Zhang, Haixu Wu, Shiyu Wang, Lintao Ma, and Mingsheng Long. itransformer: Inverted transformers are effective for time series forecasting. In The Twelfth International Conference on Learning Representations, 2024.   \n[53] Boris N. Oreshkin, Dmitri Carpov, Nicolas Chapados, and Yoshua Bengio. N-beats: Neural basis expansion analysis for interpretable time series forecasting. In International Conference on Learning Representations, 2020.   \n[54] Ria Doshi, Homer Walke, Oier Mees, Sudeep Dasari, and Sergey Levine. Scaling crossembodied learning: One policy for manipulation, navigation, locomotion and aviation. arXiv preprint arXiv:2408.11812, 2024.   \n[55] Xu Liu, Juncheng Liu, Gerald Woo, Taha Aksu, Yuxuan Liang, Roger Zimmermann, Chenghao Liu, Silvio Savarese, Caiming Xiong, and Doyen Sahoo. Moirai-moe: Empowering time series foundation models with sparse mixture of experts. arXiv preprint arXiv:2410.10469, 2024. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "[56] Mononito Goswami, Konrad Szafer, Arjun Choudhry, Yifu Cai, Shuo Li, and Artur Dubrawski. Moment: A family of open time-series foundation models. In International Conference on Machine Learning, 2024. ", "page_idx": 13}, {"type": "text", "text": "A Experimental Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Implementation. The Adam optimizer with the initial learning rate of $10^{-4}$ is adopted in the training process. The lookback window $L_{i}$ is set to 36 for the ILI dataset, and 96 for the others. The future prediction window $F_{i}$ is set to $\\{24,36,48,60\\}$ for the ILI dataset, and $\\{96,192,336,720\\}$ for other ones. We adopt the pretrained GPT2-backbone of the first 6 layers as the LM encoder. The local epoch $E$ is set to 1 for all domains. The global round number $T$ is set to $100.\\ V^{\\prime}$ , $M$ , $P$ and $H$ are set to 100, 12, 16, and 8 respectively for all domains. $S_{i}$ is set to 4 for the ILI dataset, and 16 for other ones. In each round, we calculate the averaged values of validation loss. The round with lowest validation value serves as the optimal round, and then the corresponding model is used for test. All models are implemented on PyTorch with all experiments conducted on NVIDIA A100-80G GPUs. ", "page_idx": 14}, {"type": "table", "img_path": "HS0faHRhWD/tmp/f9f714c3f7b9ababfed23a2f23c7c4b8ab36969cd44fb74566c209ad0e24f4b0.jpg", "table_caption": ["Table 8: Detailed descriptions of datasets. The dataset size is organized in (training, validation, test). "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "Training Configurations. The experimental evaluations are conducted on 8 real-world benchmark datasets which include 5 domains. We present the detailed description of these datasets in Table 8. For fair comparison, we perform batch division and oversampling as per [25]. In each federated round, we do not train local models with all training samples, considering large quantity of training samples. Instead, we proportionately calculate the number of batches for each domain in the following steps. (1) We calculate the summation of training batches over all datsets before oversampling. (2) We count training times of each domain after oversampling, i.e., 13 for ILI and 1 for the others, and then we perform normalization to obtain a batch ratio for each domain, i.e., 0.65 for ILI and 0.05 for the others. (3) we can obtain the number of training batches for each domain (denoted as $b_{i}$ ) by multiply the summation (in (1)) and ratios (in (2)) respectively. Actually, for ILI the value is higher than the number of training batches, while the opposite is true for the others. In each round, each local model is trained with training batches sequentially until $b_{i}$ is reached. ", "page_idx": 14}, {"type": "text", "text": "We evaluate the effectiveness of oversampling strategy in TIME-FFM and present the results in Table 9. \u201cw/o OverSampling\u201d represents each local model is trained with all local batches in each FL round. We attribute the performance gains in TIME-FFM to it that the introduction of oversampling strategy can balance the contribution to the global knowledge. For ILI, despite data sparsity, its local knowledge can be augmented in the global encoder. We observe that such local knowledge can enhance forecasting for not only ILI itself but also the other domains. ", "page_idx": 14}, {"type": "table", "img_path": "HS0faHRhWD/tmp/abcc3eb37d296c8e3e8391a5702b043f8d84edfa0bb3a652ec5e05a043567a74.jpg", "table_caption": ["Table 9: Effectiveness evaluation of oversampling. All results are averaged over four prediction windows, i.e., $F_{i}\\in\\{24,36,48,60\\}$ for ILI and { 96, 192, 336, 720} for others. Bold: Better. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "B Hyperparameter Sensitivity ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we conduct hyperparameter investigation of 3 important hyperparameters, i.e., the number of text prototypes $V^{\\prime}$ , the number of prompt tokens $M$ , and the number of self-attention heads $H$ . Figure 4 shows prediction performance on ILI dataset with the variation of the 3 hyperparameters respectively. We have the key observations as follows: (1) When the value of $V^{\\prime}$ is lower, word embeddings are projected into less text prototypes. Each prototype will contain both relevant and irrelevant knowledge, which will affect the accuracy of prompt adaption. When text prototypes are more, a stable number of prompt tokens will not cover all relevant knowledge. Hence lower or higher values of $V^{\\prime}$ will yield subpar performance. (2) Fewer prompt tokens may not fully cover the useful knowledge. Hence, the best performance is achieved when $M$ is equal to 12. (3) Increasing the number of attention heads cannot always promise better performance because more heads may break the semantic integrity of text prototypes and patch embeddings. ", "page_idx": 14}, {"type": "image", "img_path": "HS0faHRhWD/tmp/553984e98701de768a36403817f684a24c6c21805ee1d156742d7e6eb1d60d97.jpg", "img_caption": ["Figure 4: Hyperparameter sensitivity studies on ILI dataset. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "C Additional Results ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We compare forecasting performance with PatchTST-FL and DLinear-FL, the federated version of PatchTST and DLinear. As is presented in Table 10, TIME-FFM consistently outperforms the two novel federated methods on all datasets. ", "page_idx": 15}, {"type": "table", "img_path": "HS0faHRhWD/tmp/0e4c69973f4fc4a29ad9dfd8e5dc6556c8fa0f92e9a40c3b8fa4e19e9b13dda3.jpg", "table_caption": ["Table 10: Performance comparison with PatchTST-FL and DLinear-FL. Bold: the best. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "We further compare the forecasting performance with three baselines, i.e., iTransformer [52], NBEATS [53], and Crossformer [54]. These three baselines can be categorized into TY3. The numerical results are presented in Table 11. We have the key observation that TIME-FFM, though trained in federated paradigm, can outperform these three centralized methods. ", "page_idx": 15}, {"type": "table", "img_path": "HS0faHRhWD/tmp/f7e995496805523999ebdfc87e548d6858d64a1175ba2427deeaf5edfd66ac99.jpg", "table_caption": ["Table 11: Performance comparison with iTransformer, N-BEATS, and Crossformer. Bold: the best. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "Some researches delve into training a foundation model from scratch based on the collected time series datasets [55, 32, 56]. We compare our proposed federated foundation model with Moirai [32] and MOMENT [56] in Table 12. Notably, TIME-FFM achieves comparable performance with the two foundation models which are pre-trained firstly on large-scale time series archive. ", "page_idx": 16}, {"type": "table", "img_path": "HS0faHRhWD/tmp/cb7f3dec6c25aed474cad1719623531c90cda1e286d7c0d7793bf92cdee73364.jpg", "table_caption": ["Table 12: Performance comparison with MOIRAI and Moment. Bold: the best. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "D Full Results ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Full results of forecasting performance comparison on 8 time series benchmarks are presented in Table 13. TIME-FFM exhibits SOTA performance in 32 out of 42 instances, which demonstrates the effectiveness of the cross-modality adaption module, i.e., modality alignment and prompt adaption, as well as the personalized prediction heads. ", "page_idx": 16}, {"type": "text", "text": "Our complete results of performance comparison in $10\\%$ and $5\\%$ few-shot settings are presented in Table 14 and 16 respectively. In both settings, TIME-FFM outperforms the other FL methods in TY1. In the setting of $10\\%$ few-shot forecasting, TIME-FFM achieves comparable performance against methods in TY2. In the setting of $5\\%$ few-shot learning, TIME-FFM attains SOTA performance on 20 out of 48 instances across five time series benchmarks. The results underscore that TIME-FFM promises effective few-shot forecaster. ", "page_idx": 16}, {"type": "text", "text": "E Error Bars ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We conduct the experiments of TY1 for three times and report the mean values and standard deviations in Table 18. The results demonstrate the superiority of our proposed TIME-FFM, which agrees with Table 1. ", "page_idx": 16}, {"type": "text", "text": "F Border Impacts ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this paper, we propose to build a foundation model for time series forecasting hinging on the impressive capability of pretrained language models for sequence tokens reasoning. The promising advantages are two folds: (1) Data owners do not need to share the access to the private data samples which mitigates the privacy concerns and cater for data protection regulations (say GDPR). (2) The problem of \u201cdata island\u201d can be tackled, which makes it possible to generate satisfactory performance in spite of data scarcity. To the best of our knowledge, our research do not have obvious negative social impacts. ", "page_idx": 16}, {"type": "table", "img_path": "HS0faHRhWD/tmp/885f523db652efd47d89bd3deeceea68888fb1c37594fee2b0827919d9e484c0.jpg", "table_caption": [], "table_footnote": [], "page_idx": 17}, {"type": "table", "img_path": "HS0faHRhWD/tmp/72a731d3facd9b28b3c456bf2b8620a64938761ac30e96cca23730983d2678e0.jpg", "table_caption": ["Table 14: $10\\%$ few-shot forecasting results. Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. \u2018-\u2019 means $10\\%$ time series is not sufficient to constitute a training set. "], "table_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "HS0faHRhWD/tmp/8c8b4d88ffa0b7fdbcd61fad40edb9b317da866c211d8d90e9dde8c08916287f.jpg", "table_caption": ["Table 15: Zero-shot forecasting results of Exectricity and Weather with selecting different local parameters. Lower values correspond to better performance. Bold: the best. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "Table 16: $5\\%$ few-shot forecasting results. Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. \u2018-\u2019 means $5\\%$ time series is not sufficient to constitute a training set. ", "page_idx": 19}, {"type": "table", "img_path": "HS0faHRhWD/tmp/17dc8cb21ea612dc489ab80556834f81e8090e2f4d5dcb1b5cf88e3ba4ce3a6f.jpg", "table_caption": [], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "Table 17: Zero-shot forecasting results. Lower values correspond to better performance. Yellow : the best in TY1; Blue : the second best in TY1. Underline: the best over both types; Bold: the second best over both types. ", "page_idx": 19}, {"type": "table", "img_path": "HS0faHRhWD/tmp/17abb14781d28cc0126930bae38862e1c7b7a0b7fb9161a15e9932a6da2dee2e.jpg", "table_caption": [], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "HS0faHRhWD/tmp/6e9421d57799858bfc0c1b6ce86ad6f24d0179f212505499adda553a4f0c15dd.jpg", "table_caption": ["Table 18: Mean values and standard deviations of TY1. "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The contributions and evaluation results in abstract and introduction are elaborated in Section 3 and 4 respectively. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 21}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: We discuss the limitations and future work in Section 5. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: We do not include the theoretical analysis for our proposed model, just like other relevant works. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 22}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We elaborate the our model architecture and how to perform training and inference in Section 3 and provide the experimental details in Section 4 ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: The code is available at https://github.com/CityMind-Lab/NeurIPS24-TimeFFM/tree/main. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 23}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide the experimental settings and benchmark data in Section 4. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide the error bars in Appendix 18. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We provide the implementation details in Appendix A. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 24}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: The research conform with all terms of NeurIPS Code of Ethics. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: We analyze border impacts of our research in Appendix F. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: Our paper does not pose the risk for misuse. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 25}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: In the Section of Methodology (3) and Experiments (4) we have provided the proper citations for the adopted technologies and results. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 25}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 26}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We have provided detailed information of the model and the available source code at https://github.com/CityMind-Lab/NeurIPS24-Time-FFM/tree/main. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 26}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 26}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}]