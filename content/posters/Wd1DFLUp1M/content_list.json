[{"type": "text", "text": "Aligning Diffusion Behaviors with Q-functions for Efficient Continuous Control ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "", "page_idx": 0}, {"type": "text", "text": "Huayu Chen1,2, Kaiwen Zheng1,2, Hang $\\mathbf{S}\\mathbf{u}^{1,2,3}$ , $\\mathbf{J}\\mathbf{u}\\mathbf{n}\\,\\mathbf{Z}\\mathbf{h}\\mathbf{u}^{1,2,3\\,*}$ 1Department of Computer Science and Technology, Tsinghua University 2Institute for AI, BNRist Center, Tsinghua-Bosch Joint ML Center, THBI Lab, Tsinghua University 3Pazhou Lab (Huangpu), Guangzhou, China ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Drawing upon recent advances in language model alignment, we formulate offilne Reinforcement Learning as a two-stage optimization problem: First pretraining expressive generative policies on reward-free behavior datasets, then fine-tuning these policies to align with task-specific annotations like Q-values. This strategy allows us to leverage abundant and diverse behavior data to enhance generalization and enable rapid adaptation to downstream tasks using minimal annotations. In particular, we introduce Efficient Diffusion Alignment (EDA) for solving continuous control problems. EDA utilizes diffusion models for behavior modeling. However, unlike previous approaches, we represent diffusion policies as the derivative of a scalar neural network with respect to action inputs. This representation is critical because it enables direct density calculation for diffusion models, making them compatible with existing LLM alignment theories. During policy fine-tuning, we extend preference-based alignment methods like Direct Preference Optimization (DPO) to align diffusion behaviors with continuous $\\mathrm{^Q}$ -functions. Our evaluation on the D4RL benchmark shows that EDA exceeds all baseline methods in overall performance. Notably, EDA maintains about $95\\%$ of performance and still outperforms several baselines given only $1\\%$ of Q-labelled data during fine-tuning. Code: https://github.com/thu-ml/Efficient-Diffusion-Alignment ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Learning diverse behaviors is generative modeling; transforming them into optimized policies is reinforcement learning. Recent studies have identified diffusion policies as a powerful tool for representing heterogeneous behavior datasets [21, 38]. However, these behavior policies incorporate suboptimal decisions in datasets, making them unsuitable for direct deployment in downstream tasks. To get optimized policies, typical methods involve either augmenting the behavior policy with an additional guidance/evaluation network [21, 32, 15] or training a new evaluation policy supervised by the behavior policy [13, 4]. While functional, these methods fail to leverage the full potential of pretrained behaviors as they require constructing some new policy models from scratch. This raises the question: Can we directly fine-tune pretrained diffusion behaviors into optimized policies? ", "page_idx": 0}, {"type": "text", "text": "Recent advances in Large Language Model (LLM) alignment techniques [57, 37, 43] offer valuable insights for fine-tuning diffusion behavior policies due to the fundamental similarity of the issues they aim to address (Fig. 1). While pretrained LLMs accurately imitate language patterns from web-scale corpus, they also capture toxic or unwanted content within the dataset. Alignment algorithms, such as Direct Preference Optimization (DPO, [41]), are designed to remove harmful or useless content learned during pretraining. They enable quick adaptations of pretrained LLMs to human intentions by fine-tuning them on a small dataset annotated with human preference labels. These strategies, due to their simplicity and effectiveness, have seen widespread applications in academia and industry. ", "page_idx": 0}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/73640750ca92f0a4f3578816be41fe5faac9b1bcd5801267f7aec565816e8f40.jpg", "img_caption": ["Figure 1: Comparison between alignment strategies for LLMs and diffusion policies (ours). "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Despite the high similarity in problem formulation and the immense potential of LLM alignment techniques, they cannot be directly applied to fine-tune diffusion policy in domains like continuous control. This is primarily because LLMs employ Categorical models to deal with discrete actions (tokens). Their alignment relies on computing data probabilities for maximum likelihood training (Sec. 2.2). However, diffusion models lack a tractable probability calculation method in continuous action space [5]. Additionally, the data annotation method differs significantly between two areas: LM alignment uses binary preference labels for comparing responses, while continuous control uses scalar Q-functions for evaluating actions (Fig. 1). ", "page_idx": 1}, {"type": "text", "text": "To allow aligning diffusion behavior models with Q-functions for policy optimization, we introduce Efficient Diffusion Alignment (EDA). EDA consists of two stages: behavior pretraining and policy fine-tuning. During the pretraining stage, we learn a conditional diffusion behavior model on rewardfree datasets. Different from previous work which constructs diffusion models as an end-to-end network, we represent diffusion policies as the derivative of a scalar neural network with respect to action inputs. This representation is critical because it enables direct density calculation for diffusion policies. We demonstrate that the scalar network exactly outputs the unnormalized density of behavior distributions, making diffusion policies compatible with existing LLM alignment theories. ", "page_idx": 1}, {"type": "text", "text": "During the fine-tuning stage, we propose a novel algorithm that directly fine-tunes pretrained behavior models into optimized diffusion policies. The training objective is strictly derived by constructing a classification task to predict the optimal action using log-probability ratios between the policy and the behavior model. Our approach innovatively expands DPO by allowing fine-tuning on an arbitrary number of actions annotated with explicit Q-values, beyond just the typical binary preference data. ", "page_idx": 1}, {"type": "text", "text": "One main advantage of EDA is that it enables fast and data-efficient adaptations of behavior models in downstream tasks. Our experiments on the D4RL benchmark [10] show that EDA maintains $95\\;\\%$ of its performance and still surpasses baselines like IQL [25] with just $1\\%$ of Q-labelled data relative to the pretraining phase. Besides, EDA exhibits rapid convergence during fine-tuning, requiring only about 20K gradient steps (about $2\\%$ of the typical 1M policy training steps) to achieve convergence. Finally, EDA outperforms all reference baselines in overall performance with access to the full datasets. We attribute the high efficiency of EDA to its exploitation of the diffusion behavior models\u2019 generalization ability acquired during pretraining. ", "page_idx": 1}, {"type": "text", "text": "Our key contributions: 1. We represent diffusion policies as the derivative of a scalar value network to allow direct density estimation. This makes diffusion policies compatible with the existing alignment framework. 2. We extend preference-based alignment methods and propose EDA to align diffusion behaviors with scalar Q-functions, showcasing its vast potential in continuous control. ", "page_idx": 1}, {"type": "text", "text": "2 Background ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Offline Reinforcement Learning ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Offline RL aims to tackle decision-making problems by solely utilizing a pre-collected behavior dataset. Consider a typical Markov Decision Process (MDP) described by the tuple $\\langle S,A,P,r,\\gamma\\rangle$ . $\\boldsymbol{S}$ is the state space, $\\boldsymbol{\\mathcal{A}}$ is the action space, $P(s^{\\prime}|s,a)$ is the transition function, $r(s,a)$ is the reward function and $\\gamma$ is the discount factor. Given a static dataset ${\\cal D}^{\\mu}:=\\left\\{s,a,r,s^{\\prime}\\right\\}$ representing interaction history between an implicit policy $\\mu$ and the MDP environment, our goal is to learn a new policy that maximizes cumulative rewards in this MDP while staying close to the behavior policy $\\mu$ . ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Offline RL can be formalized as a constrained policy optimization problem [26, 35, 53]: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\pi}\\mathbb{E}_{s\\sim\\mathcal{D}^{\\mu},{\\pmb a}\\sim\\pi(\\cdot|s)}Q({\\pmb s},{\\pmb a})-\\beta D_{\\mathrm{KL}}\\left[\\pi(\\cdot|s)||\\mu(\\cdot|s)\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $Q(s,a)$ is an action evaluation network that can be learned from $\\mathcal{D}^{\\mu}$ . $\\beta$ is a temperature coefficient. Previous work [40, 39] proves that the optimal solution for solving Eq. 1 is: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\pi^{*}(a|s)=\\frac{1}{Z(s)}\\mu(a|s)e^{Q(s,a)/\\beta}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "In this paper, we focus on how to efficiently learn parameterized policies for modeling $\\pi^{*}$ . ", "page_idx": 2}, {"type": "text", "text": "2.2 Direct Preference Optimization for Language Model Alignment ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Direct Preference Optimization (DPO, [41]) is a fine-tuning technique for aligning pretrained LLMs with human feedback. Suppose we already have a pretrained LLM model $\\mu(\\pmb{a}|\\pmb{s})$ , where $\\pmb{s}$ represents user instructions, and $\\textbf{\\em a}$ represents generated responses. The goal is to align $\\mu_{\\phi}$ with some implicit evaluation rewards $r^{\\mathrm{LM}}(s,a)$ that reflect human preference. Our target model is $\\pi^{*}(\\pmb{a}|s)\\overset{\\cdot}{\\propto}\\mu_{\\phi}(\\pmb{a}|s)e^{r^{\\mathrm{LM}}(s,\\pmb{a})/\\beta}$ . ", "page_idx": 2}, {"type": "text", "text": "DPO assumes we only have access to some pairwise preference data $\\{s\\,\\to\\,(a_{w}\\,>\\,a_{l})\\}$ and the preference probability is influenced by $r^{\\mathrm{LM}}(s,a)$ . Formally, ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{p(a_{w}\\succ a_{l}|s):=\\frac{e^{r^{\\mathrm{LM}}(s,a_{w})}}{e^{r^{\\mathrm{LM}}(s,a_{l})}+e^{r^{\\mathrm{LM}}(s,a_{w})}}=\\sigma(r^{\\mathrm{LM}}(s,a_{w})-r^{\\mathrm{LM}}(s,a_{l})),}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\sigma$ is the sigmoid function. ", "page_idx": 2}, {"type": "text", "text": "In order to learn $\\pi_{\\theta}\\approx\\pi^{*}(\\pmb{a}|\\pmb{s})\\propto\\mu_{\\phi}(\\pmb{a}|\\pmb{s})e^{r^{\\mathrm{LM}}(\\pmb{s},\\pmb{a})/\\beta}$ , DPO first parameterizes a reward model using the log-probability ratio between $\\pi_{\\theta}$ and $\\mu_{\\phi}$ , and then optimizes this reward model through maximum likelihood training: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathrm{DPO}}=-\\mathbb{E}_{\\left\\{s,a_{w}\\succ a_{l}\\right\\}}\\log\\sigma(r_{\\theta}^{\\mathrm{LM}}(s,a_{w})-r_{\\theta}^{\\mathrm{LM}}(s,a_{l})),}\\\\ &{\\mathrm{where}\\qquad r_{\\theta}^{\\mathrm{LM}}(s,a):=\\beta\\log\\frac{\\pi_{\\theta}(a|s)}{\\mu_{\\phi}(a|s)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The key insight behind DPO\u2019s loss function is the equivalence and mutual convertibility between the policy model and the reward model. This offers a new perspective for solving generative policy optimization problems by applying discriminative classification loss. ", "page_idx": 2}, {"type": "text", "text": "2.3 Diffusion Modeling for Estimating Behavior Score Functions ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Recent studies show that diffusion models [45, 20, 49] excel at representing heterogeneous behavior policies in continuous control [21, 5, 38]. To train a diffusion behavior model, we first gradually inject Gaussian noise into action points according to the forward diffusion process: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbf{\\boldsymbol{a}}_{t}=\\alpha_{t}\\mathbf{\\boldsymbol{a}}+\\sigma_{t}\\mathbf{\\boldsymbol{\\epsilon}},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $t\\in[0,1]$ , and $\\epsilon$ is standard Gaussian noise. $\\alpha_{t},\\sigma_{t}\\in[0,1]$ are manually defined so that at time $t=0$ , we have $\\mathbf{}a_{t}=a$ and at time $t=1$ , we have $\\mathbf{a}_{t}\\approx\\mathbf{\\epsilon}$ . When $\\textbf{\\em a}$ is sampled from the behavior policy $\\mu(\\pmb{a}|\\pmb{s})$ , the marginal distribution of $\\pmb{a}_{t}$ at various time $t$ satisfies ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mu_{t}(\\pmb{a}_{t}|\\pmb{s},t)=\\int\\mathcal{N}(\\pmb{a}_{t}|\\alpha_{t}\\pmb{a},\\sigma_{t}^{2}\\pmb{I})\\mu(\\pmb{a}|\\pmb{s},t)\\mathrm{d}\\pmb{a}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Intuitively, the diffusion training objective predicts the noise added to the original behavior actions: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\phi}\\mathbb{E}_{t,\\epsilon,s,a\\sim\\mu(\\cdot|s)}\\left[\\|\\epsilon_{\\phi}(\\mathbf{a}_{t}|s,t)-\\epsilon\\|_{2}^{2}\\right]_{a_{t}=\\alpha_{t}a+\\sigma_{t}\\epsilon}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "More formally, it can be proved that the learned \"noise predictor\" $\\epsilon_{\\phi}$ actually represents the score function $\\nabla_{\\pmb{a}_{t}}\\log\\mu_{t}(\\pmb{a}_{t}|\\pmb{s},t)$ of the diffused behavior distribution $\\mu_{t}$ [49]: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\nabla_{a_{t}}\\log\\mu_{t}(a_{t}|s,t)=-\\epsilon^{*}(a_{t}|s,t)/\\sigma_{t}\\approx-\\epsilon_{\\phi}(a_{t}|s,t)/\\sigma_{t}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "With such a score-function estimator, we can employ existing numerical solvers [46, 33] to reverse the diffusion process, and sample actions from the learned behavior policy $\\mu_{\\phi}$ . ", "page_idx": 2}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/836d510bb4eeb87d5996ec359e75fbc56c3ae4ee3e7e8e24ec33fcb95582028c.jpg", "img_caption": ["Figure 2: Algorithm overview. Left: In behavior pretraining, the diffusion behavior model is represented as the derivative of a scalar neural network with respect to action inputs. The scalar outputs of the network can later be utilized to estimate behavior density. Right: In policy fine-tuning, we predict the optimality of actions in a contrastive manner among $K$ candidates. The prediction logit for each action is the density gap between the learned policy model and the frozen behavior model. We use cross-entropy loss to align prediction logits $\\bar{\\triangle f_{\\theta}}:=f_{\\theta}^{\\pi}-f_{\\theta}^{\\mu}$ with dataset Q-labels. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We decompose the policy optimization problem into two stages: behavior pretraining (Sec. 3.1) and policy alignment (Sec. 3.2). ", "page_idx": 3}, {"type": "text", "text": "3.1 Bottleneck Diffusion Models for Efficient Behavior Density Estimation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Recent advances in alignment techniques cannot be readily applied to continuous control tasks. Their successful applications in LLM fine-tuning require two essential prerequisites: ", "page_idx": 3}, {"type": "text", "text": "1. A powerful foundation model capable of capturing diverse behaviors within datasets.   \n2. A tractable probability calculation method that allows direct density estimation (Eq. 4). ", "page_idx": 3}, {"type": "text", "text": "Language models primarily deal with discrete actions (tokens) defined by a vocabulary set $\\nu$ , and thus employ Categorical models. This modeling method enables easy calculation of data probability through a softmax operation and is capable of representing any discrete distribution. In contrast, for continuous action space, direct density estimation is not so feasible. Diffusion policies only estimate the gradient field (a.k.a., score) of data density instead of the density value itself [49], making it impossible to directly apply LLM alignment techniques [41, 9, 3]. Conventional Gaussian policies have a tractable probability formulation but lack enough expressivity and multimodality needed to accurately model behavior datasets [52, 13, 5], and catastrophically fail in our initial experiments. ", "page_idx": 3}, {"type": "text", "text": "To address the above limitation of diffusion models, we propose a new diffusion modeling technique to enable direct density estimation. Normally, a conditional diffusion policy $\\epsilon_{\\phi}(a_{t}|s,t):\\bar{A}\\!\\times\\!S\\!\\times\\!\\mathbb{R}^{\\top}\\!\\to$ $\\mathbb{R}^{|A|}$ maps noisy actions $a_{t}$ to predicted noises $\\epsilon\\in\\mathbb{R}^{|A|}$ . In our approach, we redefine $\\epsilon_{\\phi}$ as the derivative of a scalar network $f_{\\phi}(a_{t}|s,t):\\mathcal{A}\\times\\mathcal{S}\\times\\mathbb{R}\\to\\mathbb{R}$ with respect to input $a_{t}$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon_{\\phi}(a_{t}|s,t):=-\\sigma_{t}\\nabla_{a_{t}}f_{\\phi}(a_{t}|s,t).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Given that $f_{\\phi}$ is a parameterized network, its gradient computation can be conveniently performed by auto-differential libraries. The new training objective for $f_{\\phi}$ can then be reformulated from Eq. 7: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\phi}\\mathcal{L}_{\\mu}(\\phi)=\\mathbb{E}_{t,\\epsilon,(s,a)\\sim\\mathcal{D}^{\\mu}}\\left[\\|\\sigma_{t}\\nabla_{a_{t}}f_{\\phi}(a_{t}|s,t)+\\epsilon\\|_{2}^{2}\\right]_{a_{t}=\\alpha_{t}a+\\sigma_{t}\\epsilon}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "As noted by [49], with unlimited model capacity, the optimal solution for solving Eq. 10 is: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\epsilon^{*}(a_{t}|s,t)=-\\sigma_{t}\\nabla_{a_{t}}\\log\\mu_{t}(a_{t}|s,t)\\Longrightarrow f^{*}(a_{t}|s,t)=\\log\\mu_{t}(a_{t}|s,t)+C(s,t).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "An illustration is provided in Figure 2 (left). Intuitively, our proposed modeling method first compresses the input action into a scalar value with one single dimension. Then, this bottleneck value is expanded back to $\\mathbb{R}^{|A|}$ through back-propagation. We thus refer to $f_{\\phi}$ as Bottleneck Diffusion Models (BDMs). ", "page_idx": 3}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/331a4fc579aee00c83546651e7db5ba11c1c59381c75e63c53c9610015e7653b.jpg", "img_caption": ["Figure 3: Experimental results of EDA in 2D bandit settings at different diffusion times. Column 1: Visualization of diversified behavior datasets. Each dot represents a two-dimensional behavioral action. Its color reflects the action\u2019s Q-value. Column 2 & 3: Density maps of the action distribution as estimated by the pretrained or fine-tuned BDM models. The density for low-Q-value actions has been effectively decreased after fine-tuning. Column 4: The predicted action Q-values, calculated by Eq. 13, align with dataset Q-values in Column 1. See appendix B for complete results. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "The primary advantage of BDMs is their ability to efficiently estimate behavior densities in a single forward pass. Moreover, BDMs are fully compatible with existing diffusion-based codebases regarding training and sampling procedures, inheriting their key beneftis such as training stability and model expressivity. BDMs can also be viewed as a diffused version of Energy-Based Models (EBMs, [8]). We refer interested readers to Appendix A for a detailed discussion. ", "page_idx": 4}, {"type": "text", "text": "3.2 Policy Optimization by Aligning Diffusion Behaviors with Q-functions ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, our goal is to learn a new policy $\\pi_{\\theta}\\propto\\mu_{\\phi}e^{Q}$ by fine-tuning the previously pretrained behavior policy $\\mu_{\\phi}$ on a new dataset annotated by an existing Q-function $Q(s,a)$ . We show that this policy optimization problem can actually be transformed into a simple classification task for predicting the optimal action among multiple candidates. We elaborate on our method below. ", "page_idx": 4}, {"type": "text", "text": "Dataset construction. For any state $\\pmb{s}$ , we draw $K>1$ independent action samples $\\pmb{a}^{1:K}$ from $\\mu_{\\phi}(\\cdot|s)$ . Assume we already have an $Q$ -function $Q(s,a)$ that evaluates input state-action pairs in scalar values, our dataset is formed as $\\mathcal{D}^{f}:=\\{\\pmb{s},\\pmb{a}^{1:K},Q(\\pmb{s},\\pmb{a}^{k})|_{k\\in1:K}\\}$ . ", "page_idx": 4}, {"type": "text", "text": "Action optimality. We first introduce a formal notion of action optimality. We draw from the controlas-probabilistic-inference framework [29] and define a random optimality variable $O_{K}$ , which is a one-hot vector of length $K$ . The $k$ -th index of $O_{K}$ being 1 indicates that $\\pmb{a}^{k}$ is the optimal action within $K$ action candidates $\\pmb{a}^{1:K}$ . We have ", "page_idx": 4}, {"type": "equation", "text": "$$\np(\\mathcal{O}_{K}^{k}=1|s,\\pmb{a}^{1:K})=\\frac{e^{Q(s,\\pmb{a}^{k})}}{\\sum_{i=1}^{K}e^{Q(s,\\pmb{a}^{i})}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The optimality probability of a behavioral action $\\textbf{\\em a}$ is proportional to the exponential of its $\\mathrm{^Q}$ -value, aligning with the optimal policy definition $\\pi^{*}(a|s)\\propto\\bar{\\mu}(\\bar{\\pmb{a}}|s)e^{Q(\\pmb{s},\\pmb{a})/\\beta}$ . ", "page_idx": 4}, {"type": "text", "text": "From policy optimization to action classification. We construct a classification task by predicting the optimal action among $K$ candidates. This requires learning a Q-model termed $Q_{\\theta}$ first. Drawing inspiration from DPO (Sec. 2.2), we parameterize $Q_{\\theta}$ as the log probability ratio between $\\pi_{\\theta}$ and $\\mu_{\\phi}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{Q_{\\theta}(s,a):=\\beta\\log\\frac{\\pi_{\\theta}(\\pmb{a}|s)}{\\mu_{\\phi}(\\pmb{a}|s)}+\\beta\\log Z(s),}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "This parameterization allows us to directly optimize $\\pi_{\\theta}$ during training because $\\pi_{\\boldsymbol{\\theta}}(\\mathbf{a}|\\mathbf{s})\\;=\\;$ $\\begin{array}{r}{\\frac{1}{Z(s)}\\bar{\\mu}_{\\phi}(\\mathbf{a}|s)e^{Q_{\\theta}(\\mathbf{\\pmb{s}},\\mathbf{a})/\\beta}}\\end{array}$ constantly holds. Since $Q$ -values in datasets define the probability of being the optimal action, the training objective can be derived by applying cross-entropy loss: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{\\pi}(\\theta)=\\mathbb{E}_{(s,a^{1:K})\\sim\\mathcal{D}^{f}}\\left[\\sum_{k=1}^{K}\\frac{e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}e^{Q(s,a^{i})}}\\log\\frac{e^{\\beta\\log\\frac{\\pi_{\\theta}(a^{k}|s)}{\\mu_{\\phi}(a^{k}|s)}\\mp\\vec{p}\\log\\cdot Z(s)}}{\\sum_{i=1}^{K}e^{\\beta\\log\\frac{\\pi_{\\theta}(a^{i}|s)}{\\mu_{\\phi}(a^{i}|s)}\\mp\\vec{p}\\log\\cdot Z(s)}}\\right].\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The unknown partition function $Z(s)$ automatically cancels out during division. $\\beta$ is a hyperparameter that can be tuned to control how far $\\pi_{\\theta}$ deviates from $\\mu_{\\phi}$ . ", "page_idx": 5}, {"type": "text", "text": "Expanding to bottleneck diffusion behavior. A reliable behavior density estimation of $\\mu_{\\phi}(\\pmb{a}|\\pmb{s})$ is critical and is a main challenge for applying Eq. 12. Our initial experiments tested with Gaussian policies drastically failed and even underperformed vanilla behavior cloning. This highlights the necessity of adopting a much more powerful generative policy, such as the BDM model (Sec. 3.1). ", "page_idx": 5}, {"type": "text", "text": "Diffusion policies define a series of distributions $\\begin{array}{r}{\\pi_{t}(\\mathbf{a}_{t}|s,t)\\!=\\!\\int\\!\\mathcal{N}(\\mathbf{a}_{t}|\\alpha_{t}\\mathbf{a}_{0},\\sigma_{t}^{2}I)\\pi_{0}(\\mathbf{a}_{0}|s,t)\\mathrm{d}\\mathbf{a}_{0}}\\end{array}$ at different timesteps $t~\\in~[0,1]$ , rather than just a single distribution $\\pi~=~\\pi_{0}$ . Consequently, instead of directly predicting the optimal action given raw actions $\\pmb{a}^{1:K}$ , we perturb all actions with $K$ independent Gaussian noises according to the diffusion forward process by applying $\\pmb{a}_{t}^{k}=$ $\\alpha_{t}\\pmb{a}^{k}+\\sigma_{t}\\pmb{\\epsilon}^{k}$ . Then we predict action optimality given $K$ noisy action $\\pmb{a}_{t}^{1:K}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{Q_{\\theta}(s,a_{t},t):=\\!\\beta\\log\\frac{\\pi_{t,\\theta}(a_{t}|s,t)}{\\mu_{t,\\phi}(a_{t}|s,t)}+\\beta\\log Z(s)}\\\\ &{\\qquad\\qquad\\qquad=\\!\\beta[f_{\\theta}^{\\pi}(a_{t}|s,t)-f_{\\phi}^{\\mu}(a_{t}|s,t)]+\\beta[\\log Z(s,t)-C^{\\pi}(s,t)+C^{\\mu}(s,t)],}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Similar to Eq. 12, all unknown terms above automatically cancel out in the training objective: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{f}(\\theta)=\\mathbb{E}_{t,\\epsilon^{1:K},(s,a^{1:K})\\sim\\mathcal{D}^{f}}\\left[\\sum_{k=1}^{K}\\frac{e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}e^{Q(s,a^{i})}}\\log\\frac{e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{k}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{k}|s,t)]}}{\\sum_{i=1}^{K}e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{i}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{i}|s,t)]}}\\right].\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Proposition 3.1. (Proof in Appendix $C$ ) Let $f_{\\theta}^{*}$ be the optimal solution of Problem $^{l4}$ and $\\pi_{t,\\theta}^{*}\\propto e^{f_{\\theta}^{*}}$ be the optimal diffusion policy. Assuming unlimited model capacity and data samples, we have the following results: ", "page_idx": 5}, {"type": "text", "text": "(a) Optimality Guarantee. At time $t=0$ , the learned policy $\\pi_{\\theta}^{*}$ converges to the optimal target policy. ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\pi_{\\theta}^{*}(\\pmb{a}|\\pmb{s})=\\pi_{t=0,\\theta}^{*}(\\pmb{a}|\\pmb{s})\\propto\\mu_{\\phi}(\\pmb{a}|\\pmb{s})e^{Q(\\pmb{s},\\pmb{a})/\\beta}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "(b) Diffusion Consistency. At time $t>0$ , $\\pi_{t>0,\\theta}$ models the diffused distribution of $\\pi_{\\theta}^{*}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\boldsymbol{\\pi}_{t,\\theta}^{*}(\\boldsymbol{a}|\\boldsymbol{s},t)=\\int\\mathcal{N}(\\boldsymbol{a}_{t}|\\alpha_{t}\\boldsymbol{a},\\sigma_{t}^{2}I)\\pi_{\\theta}^{*}(\\boldsymbol{a}_{0}|\\boldsymbol{s})\\mathrm{d}\\boldsymbol{a}_{0}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "asymptotically holds when $K\\rightarrow\\infty$ and $\\beta=1$ , satisfying the definition of diffusion process (Eq. 6). ", "page_idx": 5}, {"type": "text", "text": "Fine-tuning Efficiency. In practice, the policy and the behavior model share the same architecture, so we can initialize $\\theta=\\phi$ to fully exploit the generalization capabilities acquired during the pretraining phase. This fine-tuning technique allows us to perform policy optimization with an incredibly small amount of $Q$ -labelled data (e.g., 10k samples) and optimization steps (e.g., 20K gradient steps). These are less than $5\\%$ of previous approaches (Sec. 5.2). ", "page_idx": 5}, {"type": "text", "text": "4 Related Work ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Diffusion Modeling for Offline Continuous Control ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Recent advancements in offline RL have identified diffusion models as an effective approach for behavior modeling [38, 16], which excels at representing complex and multimodal distributions compared with other modeling methods like Gaussians [54, 55, 24, 35, 53] or VAEs [11, 26, 12]. However, optimizing diffusion models can be a bit more tricky due to the unavailability of a tractable probability calculation method [5, 51]. Existing approaches include learning a separate guidance network to guide the sampling process during evaluation [21, 32], applying classifier-free guidance [1, 7], backpropagating sampled actions through the diffusion policy model to maximize Q-values [52, 22], distilling new policies from diffusion behaviors [13, 4], using rejection sampling to fliter out behavioral actions with low Q-values [5, 15] and applying planning-based techniques [30, 36, 16]. Our proposed method differs from all previous work in that it directly fine-tunes the pretrained behavior to align with task-specific annotations, instead of learning a new downstream policy. ", "page_idx": 5}, {"type": "table", "img_path": "Wd1DFLUp1M/tmp/49ca5f911bdfb4e2152a32747476aa853180ed5aee84673658c690399e5e0517.jpg", "table_caption": [], "table_footnote": ["Table 1: Evaluation results of D4RL benchmarks (normalized according to [10]). We report mean $\\pm$ standard deviation of algorithm performance across 5 random seeds at the end of training. Numbers within $5\\;\\%$ of the maximum are highlighted. "], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "4.2 Preference-based Alignment in Offline Reinforcement Learning ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Existing alignment algorithms are largely preference-based methods. Preference-based Reinforcement Learning (PbRL) assumes the reward function is unknown, and must be learned from data. Previous work usually applies inverse RL to learn a reward model first and then uses this reward model for standard RL training [19, 57, 28, 44, 34]. This separate learning of a reward model adds complexity to algorithm implementation and thus limits its application. To address this issue, recent work like OPPO [23], DPO [41], and CPL [17] respectively proposes methods to align Gaussian or Categorical policies directly with human preference. Despite their simplicity and effectiveness, these techniques require calculating model probability, and thus cannot be applied to diffusion policies. Existing diffusion alignment strategies [7, 56, 2, 51] are incompatible with mainstream PbRL methods. Our work effectively closes this gap by introducing bottleneck diffusion models. We also extend existing PbRL methods to align with continuous Q-functions instead of just binary preference data. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We conduct experiments to answer the following questions: ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "\u2022 How does EDA perform compared with other baselines in standard benchmarks? (Sec. 5.1) \u2022 Is the alignment stage data-efficient and training-efficient? How many training steps and annotated data does EDA require for aligning pretrained behavior models? (Sec. 5.2) \u2022 Does value-based alignment outperform preference-based alignment? (Sec. 5.3) \u2022 How do contrastive action number $K$ and other choices affect the performance? (Sec. 5.4) ", "page_idx": 6}, {"type": "text", "text": "5.1 D4RL Evaluation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Benchmark. In Table 1, we evaluate the performance of EDA in D4RL benchmarks [10]. All evaluation tasks have a continuous action space and can be broadly categorized into three types: MuJoCo locomotion are tasks for controlling legged robots to move forward, where datasets are generated by a variety of policies, including expert, medium, and mixed levels. Antmaze is about an ant robot navigating itself in a maze and requires both low-level control and high-level navigation. FrankaKitchen are manipulation tasks containing real-world datasets. It is critical to faithfully imitate human behaviors in these tasks. ", "page_idx": 7}, {"type": "text", "text": "Experimental setup. Throughout our experiments, we set the contrastive action number $K=16$ . For each task, we train an action evaluation model $Q_{\\psi}(s,a)$ for annotating behavioral data during the fine-tuning stage. Implicit Q-learning [25] is employed for training $Q_{\\psi}$ due to its simplicity and orthogonality to policy training. We compare with other critic training methods in Figure 4. The rest of the implementation details are in Appendix D. ", "page_idx": 7}, {"type": "text", "text": "Baselines. We mainly consider diffusion-based RL methods with various optimization techniques. Decision Diffuser [1] employs classifier-free guidance for optimizing behavior models. QGPO employs energy guidance. IDQL [15] does not optimize the behavior policy and simply uses rejection sampling during evaluation. Diffusion- $\\mathtt{Q L}$ [52] has no explicit behavior model, but instead adopts a diffusion regularization loss. We also reference well-studied conventional algorithms for different classes of generative policies. BCQ [11] features a VAE-based policy. DT [6] has a transformer-based architecture. CQL [27] and IQL [25] targets Gaussian policies. ", "page_idx": 7}, {"type": "text", "text": "Result analysis. From table 1, we find that EDA surpasses all referenced baselines regarding overall performance and provides a competitive number in each D4RL task. To ascertain whether this improvement stems from the alignment algorithm rather than from a superior critic model or policy class, we conduct additional controlled experiments. As outlined in Figure 4, we evaluate three variants of EDA using different Q-learning approaches and compare these against both diffusion and Gaussian baselines. The experimental results highlight the superiority of diffusion policies and further validate the effectiveness of our proposed method. ", "page_idx": 7}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/792935530f1e3839d1e2e3731de247a5ddc8bd075ada4b03b0702d1f8113f73d.jpg", "img_caption": ["Figure 4: Average performance of EDA combined with different Q-learning methods in Locomotion tasks. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/ca99df1c38450f695cce1ffc9c8faa77912399c5b288c896371ac9a8bbdbeae7.jpg", "img_caption": ["Figure 5: Aligning pretrained diffusion behaviors with task Q-functions is fast and data-efficient. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "5.2 Fine-tuning Efficiency ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "The success of the pretraining, fine-tuning paradigm in language models is largely due to its high fine-tuning efficiency, allowing pretrained models to adapt quickly to various downstream tasks. Similarly, we aim to explore data efficiency and training efficiency during EDA\u2019s fine-tuning phase. ", "page_idx": 7}, {"type": "text", "text": "To investigate EDA\u2019s data efficiency, we reduce the training data used for aligning with pretrained Q-functions by randomly excluding a portion of the available dataset (Figure 5 (a)). We compare this with IQL, which uses the same Q-model as EDA but extracts a Gaussian policy via weighted regression. We also compare with QGPO, which shares our pretrained diffusion behavior models but employs a separate guidance network to augment the behavior model during evaluation, instead of directly fine-tuning the pretrained policy. Experimental results reveal that EDA is significantly more data-efficient than the QGPO and IQL baselines. Notably, EDA maintains about $95\\%$ of its performance in locomotion tasks when using only $1\\%$ of the Q-labeled data for policy fine-tuning. This even surpasses several baselines that use the full dataset for policy training. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "In Figure 5 (b), we plot EDA\u2019s performance throughout the fine-tuning phase. EDA rapidly converges in roughly 20K gradient steps, a negligible count compared to the typical 1M steps used for behavior pretraining. Note that behavior modeling and task-oriented Q-definition are largely orthogonal in offilne RL. The high fine-tuning efficiency of EDA demonstrates the vast potential of pretraining on large-scale diversified behavior data and quickly adapting to individual downstream tasks. ", "page_idx": 8}, {"type": "text", "text": "5.3 Value Optimization v.s. Preference Optimization ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "A significant difference between EDA and existing preference-based RL methods such as DPO is that EDA is tailored for alignment with scalar Q-values instead of just preference data. ", "page_idx": 8}, {"type": "text", "text": "For preference data without explicit Q-labels, we can similarly derive an alignment loss: ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{f}^{\\mathrm{pref}}(\\theta)=\\mathbb{E}_{t,\\epsilon^{1:K},(s,a^{1:K})\\sim\\mathcal{D}^{f}}\\left[\\log\\frac{e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{w}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{w}|s,t)]}}{\\sum_{i=1}^{K}e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{i}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{i}|s,t)]}}\\right].\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "Here $\\pmb{a}^{w}$ represents the most preferred action among $\\pmb{a}^{1:K}$ . In practice, we select ${\\pmb a}^{w}$ as the action with the highest Q-value but abandon the absolute number. We\u2019d like to note that when $K=2$ , the above objective becomes exactly the DPO objective (Eq. 4) in preference learning: ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{f}^{\\mathrm{DPO}}(\\theta)=\\mathbb{E}_{t,\\epsilon^{\\{w,l\\}},s,a^{w}\\sim a^{l}}\\log\\sigma\\left[\\beta[f_{\\theta}^{\\pi}(a_{t}^{w}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{w}|s,t)]-\\beta[f_{\\theta}^{\\pi}(a_{t}^{l}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{l}|s,t)]\\right]\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "We ablate different choices of $K$ and compare our proposed value-based alignment with preference methods in 9 D4RL Locomotion tasks (Figure 6). Results show that EDA generally outperforms preference-based alignment approaches. We attribute this improvement to its ability to exploit the $Q\\cdot$ -value information provided by the pretrained Q-model. Besides, we notice the performance gap between the two methods becomes larger as $K$ increases. This is expected because preference-based optimization greedily follows a single action with the highest Q-value. However, as more action candidates are sampled ", "page_idx": 8}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/9f28928fad9b961f6d07bb1152f74d1c6e2a84faaafb0673d725186f99e63d41.jpg", "img_caption": ["Figure 6: Ablation of action numbers $K$ and optimization methods. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "from the behavior model, the final selected action will have a higher probability of being out-ofbehavior-distribution data. This further hurts performance. In contrast, EDA is a softer version of preference learning. This leads to greater tolerance for $K$ . ", "page_idx": 8}, {"type": "text", "text": "5.4 Ablation Studies ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We study the impact of varying temperature $\\beta$ on algorithm performance in Appendix E. We also illustratively compare our proposed diffusion models with other generative models for behavior modeling in 2D settings in Appendix A. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We propose Efficient Diffusion Alignment (EDA) for solving offilne continuous control tasks. EDA allows leveraging abundant and diverse behavior data to enhance generalization through behavior pretraining and enables rapid adaptation to downstream tasks using minimal annotations. Our experimental results show that EDA exceeds numerous baseline methods in D4RL tasks. It also demonstrates high sample efficiency during the fine-tuning stage. This indicates its vast potential in learning from large-scale behavior datasets and efficiently adapting to individual downstream tasks. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We would like to thank Chengyang Ying and Cheng Lu for discussion. This work was supported by NSFC Projects (Nos. 62350080, 92248303, 92370124, 62276149, 62061136001), BNRist (BNR2022RC01006), Tsinghua Institute for Guo Qiang, and the High Performance Computing Center, Tsinghua University. J. Zhu was also supported by the XPlorer Prize. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Anurag Ajay, Yilun Du, Abhi Gupta, Joshua B. Tenenbaum, Tommi S. Jaakkola, and Pulkit Agrawal. Is conditional generative modeling all you need for decision making? In The Eleventh International Conference on Learning Representations, 2023.   \n[2] Kevin Black, Michael Janner, Yilun Du, Ilya Kostrikov, and Sergey Levine. Training diffusion models with reinforcement learning. arXiv preprint arXiv:2305.13301, 2023.   \n[3] Huayu Chen, Guande He, Hang Su, and Jun Zhu. Noise contrastive alignment of language models with explicit rewards. arXiv preprint arXiv:2402.05369, 2024.   \n[4] Huayu Chen, Cheng Lu, Zhengyi Wang, Hang Su, and Jun Zhu. Score regularized policy optimization through diffusion behavior. arXiv preprint arXiv:2310.07297, 2023.   \n[5] Huayu Chen, Cheng Lu, Chengyang Ying, Hang Su, and Jun Zhu. Offilne reinforcement learning via high-fidelity generative behavior modeling. In The Eleventh International Conference on Learning Representations, 2023.   \n[6] Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Misha Laskin, Pieter Abbeel, Aravind Srinivas, and Igor Mordatch. Decision transformer: Reinforcement learning via sequence modeling. In Advances in Neural Information Processing Systems, 2021.   \n[7] Zibin Dong, Yifu Yuan, Jianye HAO, Fei Ni, Yao Mu, YAN ZHENG, Yujing Hu, Tangjie Lv, Changjie Fan, and Zhipeng Hu. Aligndiff: Aligning diverse human preferences via behavior-customisable diffusion model. In The Twelfth International Conference on Learning Representations, 2024.   \n[8] Yilun Du and Igor Mordatch. Implicit generation and modeling with energy based models. Advances in Neural Information Processing Systems, 32, 2019.   \n[9] Kawin Ethayarajh, Winnie Xu, Niklas Muennighoff, Dan Jurafsky, and Douwe Kiela. Kto: Model alignment as prospect theoretic optimization. arXiv preprint arXiv:2402.01306, 2024.   \n[10] Justin Fu, Aviral Kumar, Ofir Nachum, George Tucker, and Sergey Levine. D4rl: Datasets for deep data-driven reinforcement learning. arXiv preprint arXiv:2004.07219, 2020.   \n[11] Scott Fujimoto, David Meger, and Doina Precup. Off-policy deep reinforcement learning without exploration. In Proceedings of the 36th International Conference on Machine Learning, 2019.   \n[12] Seyed Kamyar Seyed Ghasemipour, Dale Schuurmans, and Shixiang Shane Gu. Emaq: Expected-max q-learning operator for simple yet effective offilne and online rl. In International Conference on Machine Learning, pages 3682\u20133691. PMLR, 2021.   \n[13] Wonjoon Goo and Scott Niekum. Know your boundaries: The necessity of explicit behavioral cloning in offline rl. arXiv preprint arXiv:2206.00695, 2022.   \n[14] Ulf Grenander and Michael I Miller. Representations of knowledge in complex systems. Journal of the Royal Statistical Society: Series B (Methodological), 56(4):549\u2013581, 1994.   \n[15] Philippe Hansen-Estruch, Ilya Kostrikov, Michael Janner, Jakub Grudzien Kuba, and Sergey Levine. Idql: Implicit q-learning as an actor-critic method with diffusion policies. arXiv preprint arXiv:2304.10573, 2023.   \n[16] Haoran He, Chenjia Bai, Kang Xu, Zhuoran Yang, Weinan Zhang, Dong Wang, Bin Zhao, and Xuelong Li. Diffusion model is an effective planner and data synthesizer for multi-task reinforcement learning. Advances in neural information processing systems, 36, 2024.   \n[17] Joey Hejna and Dorsa Sadigh. Inverse preference learning: Preference-based rl without a reward function. Advances in Neural Information Processing Systems, 36, 2024.   \n[18] Geoffrey E Hinton. Training products of experts by minimizing contrastive divergence. Neural computation, 14(8):1771\u20131800, 2002.   \n[19] Jonathan Ho and Stefano Ermon. Generative adversarial imitation learning. In Advances in neural information processing systems, volume 29, pages 4565\u20134573, 2016.   \n[20] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In Advances in Neural Information Processing Systems, 2020.   \n[21] Michael Janner, Yilun Du, Joshua Tenenbaum, and Sergey Levine. Planning with diffusion for flexible behavior synthesis. In International Conference on Machine Learning, 2022.   \n[22] Bingyi Kang, Xiao Ma, Chao Du, Tianyu Pang, and Shuicheng Yan. Efficient diffusion policies for offline reinforcement learning. arXiv preprint arXiv:2305.20081, 2023.   \n[23] Yachen Kang, Diyuan Shi, Jinxin Liu, Li He, and Donglin Wang. Beyond reward: Offline preference-guided policy optimization. arXiv preprint arXiv:2305.16217, 2023.   \n[24] Ilya Kostrikov, Rob Fergus, Jonathan Tompson, and Ofir Nachum. Offline reinforcement learning with fisher divergence critic regularization. In International Conference on Machine Learning, pages 5774\u20135783. PMLR, 2021.   \n[25] Ilya Kostrikov, Ashvin Nair, and Sergey Levine. Offline reinforcement learning with implicit Q-learning. In International Conference on Learning Representations, 2022.   \n[26] Aviral Kumar, Justin Fu, Matthew Soh, George Tucker, and Sergey Levine. Stabilizing offpolicy q-learning via bootstrapping error reduction. Advances in Neural Information Processing Systems, 2019.   \n[27] Aviral Kumar, Aurick Zhou, George Tucker, and Sergey Levine. Conservative q-learning for offline reinforcement learning. Advances in Neural Information Processing Systems, 2020.   \n[28] Kimin Lee, Laura Smith, Anca Dragan, and Pieter Abbeel. B-pref: Benchmarking preferencebased reinforcement learning. In Conference on Neural Information Processing Systems Datasets and Benchmarks Track (round 1), 2021.   \n[29] Sergey Levine. Reinforcement learning and control as probabilistic inference: Tutorial and review. arXiv preprint arXiv:1805.00909, 2018.   \n[30] Wenhao Li, Xiangfeng Wang, Bo Jin, and Hongyuan Zha. Hierarchical diffusion for offline decision making. In Andreas Krause, Emma Brunskill, Kyunghyun Cho, Barbara Engelhardt, Sivan Sabato, and Jonathan Scarlett, editors, Proceedings of the 40th International Conference on Machine Learning, volume 202 of Proceedings of Machine Learning Research. PMLR, 23\u201329 Jul 2023.   \n[31] Zengyi Li, Yubei Chen, and Friedrich T Sommer. Learning energy-based models in highdimensional spaces with multiscale denoising-score matching. Entropy, 25(10):1367, 2023.   \n[32] Cheng Lu, Huayu Chen, Jianfei Chen, Hang Su, Chongxuan Li, and Jun Zhu. Contrastive energy prediction for exact energy-guided diffusion sampling in offline reinforcement learning. In Proceedings of the 40th International Conference on Machine Learning, 2023.   \n[33] Cheng Lu, Yuhao Zhou, Fan Bao, Jianfei Chen, Chongxuan Li, and Jun Zhu. Dpm-solver: A fast ode solver for diffusion probabilistic model sampling in around 10 steps. arXiv preprint arXiv:2206.00927, 2022.   \n[34] Micha\u00ebl Mathieu, Sherjil Ozair, Srivatsan Srinivasan, Caglar Gulcehre, Shangtong Zhang, Ray Jiang, Tom Le Paine, Richard Powell, Konrad \u02d9Zo\u0142na, Julian Schrittwieser, et al. Alphastar unplugged: Large-scale offilne reinforcement learning. arXiv preprint arXiv:2308.03526, 2023.   \n[35] Ashvin Nair, Abhishek Gupta, Murtaza Dalal, and Sergey Levine. Awac: Accelerating online reinforcement learning with offline datasets. arXiv preprint arXiv:2006.09359, 2020.   \n[36] Fei Ni, Jianye Hao, Yao Mu, Yifu Yuan, Yan Zheng, Bin Wang, and Zhixuan Liang. Metadiffuser: Diffusion model as conditional planner for offline meta-rl. In International Conference on Machine Learning, pages 26087\u201326105. PMLR, 2023.   \n[37] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al. Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730\u201327744, 2022.   \n[38] Tim Pearce, Tabish Rashid, Anssi Kanervisto, David Bignell, Mingfei Sun, Raluca Georgescu, Sergio Valcarcel Macua, Shan Zheng Tan, Ida Momennejad, Katja Hofmann, et al. Imitating human behaviour with diffusion models. In Deep Reinforcement Learning Workshop NeurIPS, 2022.   \n[39] Xue Bin Peng, Aviral Kumar, Grace Zhang, and Sergey Levine. Advantage-weighted regression: Simple and scalable off-policy reinforcement learning. arXiv preprint arXiv:1910.00177, 2019.   \n[40] Jan Peters, Katharina Mulling, and Yasemin Altun. Relative entropy policy search. In TwentyFourth AAAI Conference on Artificial Intelligence, 2010.   \n[41] Rafael Rafailov, Archit Sharma, Eric Mitchell, Christopher D Manning, Stefano Ermon, and Chelsea Finn. Direct preference optimization: Your language model is secretly a reward model. In Thirty-seventh Conference on Neural Information Processing Systems, 2023.   \n[42] Saeed Saremi, Arash Mehrjou, Bernhard Sch\u00f6lkopf, and Aapo Hyv\u00e4rinen. Deep energy estimator networks. arXiv preprint arXiv:1805.08306, 2018.   \n[43] John Schulman, Barret Zoph, Christina Kim, Jacob Hilton, Jacob Menick, Jiayi Weng, Juan Felipe Ceron Uribe, Liam Fedus, Luke Metz, Michael Pokorny, et al. Chatgpt: Optimizing language models for dialogue. OpenAI blog, 2022.   \n[44] Daniel Shin and Daniel S Brown. Offline preference-based apprenticeship learning. arXiv preprint arXiv:2107.09251, 2021.   \n[45] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In International Conference on Machine Learning, pages 2256\u20132265, 2015.   \n[46] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2021.   \n[47] Yang Song and Stefano Ermon. Generative modeling by estimating gradients of the data distribution. Advances in neural information processing systems, 32, 2019.   \n[48] Yang Song and Diederik P Kingma. How to train your energy-based models. arXiv preprint arXiv:2101.03288, 2021.   \n[49] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2021.   \n[50] Pascal Vincent. A connection between score matching and denoising autoencoders. Neural computation, 23(7):1661\u20131674, 2011.   \n[51] Bram Wallace, Meihua Dang, Rafael Rafailov, Linqi Zhou, Aaron Lou, Senthil Purushwalkam, Stefano Ermon, Caiming Xiong, Shafiq Joty, and Nikhil Naik. Diffusion model alignment using direct preference optimization. arXiv preprint arXiv:2311.12908, 2023.   \n[52] Zhendong Wang, Jonathan J Hunt, and Mingyuan Zhou. Diffusion policies as an expressive policy class for offline reinforcement learning. In The Eleventh International Conference on Learning Representations, 2023.   \n[53] Ziyu Wang, Alexander Novikov, Konrad Zolna, Josh S Merel, Jost Tobias Springenberg, Scott E Reed, Bobak Shahriari, Noah Siegel, Caglar Gulcehre, Nicolas Heess, and Nando de Freitas. Critic regularized regression. In Advances in Neural Information Processing Systems, 2020.   \n[54] Yifan Wu, George Tucker, and Ofir Nachum. Behavior regularized offline reinforcement learning. arXiv preprint arXiv:1911.11361, 2019.   \n[55] Haoran Xu, Xianyuan Zhan, Jianxiong Li, and Honglei Yin. Offline reinforcement learning with soft behavior regularization. arXiv preprint arXiv:2110.07395, 2021.   \n[56] Zhilong Zhang, Yihao Sun, Junyin Ye, Tian-Shuo Liu, Jiaji Zhang, and Yang Yu. Flow to better: Offline preference-based reinforcement learning via preferred trajectory generation. In The Twelfth International Conference on Learning Representations, 2024.   \n[57] Daniel M Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B Brown, Alec Radford, Dario Amodei, Paul Christiano, and Geoffrey Irving. Fine-tuning language models from human preferences. arXiv preprint arXiv:1909.08593, 2019. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Comparing Bottleneck Diffusion Models with Energy-Based Models ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Our proposed Bottleneck Diffusion Models (BDMs) can be viewed as a diffused variant of EnergyBased Models (EBMs, [8]). Both methods aim to model data distribution\u2019s unnormalized log probability: ", "page_idx": 12}, {"type": "equation", "text": "$$\np_{\\theta}(\\mathbf{x})\\propto e^{-E_{\\theta}(\\mathbf{x})}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Despite their conceptual similarity, the sampling and training approaches differ between diffusion models and EBMs. A prevalent sampling method for EBMs is Langevin MCMC [14], which employs the energy gradient $\\nabla_{\\mathbf{x}}E_{\\theta}(\\mathbf{x})$ to progressively transform Gaussian noise into data samples. Langevin MCMC generally necessitates hundreds or thousands of iterative steps to achieve convergence, a significantly higher number compared with 15-50 steps required by diffusion models (Figure A). ", "page_idx": 12}, {"type": "text", "text": "Furthermore, the maximum-likelihood training of EBMs (e.g., Contrastive Divergence [18]) is more computationally expensive, as it involves online data sampling from the model during the training process [48]. To avoid online data sampling, subsequent research [50, 47] has shifted away from directly modeling $E_{\\theta}(\\mathbf{x})$ towards developing score-based models defined as $s_{\\theta}(\\mathbf{x}):=-\\nabla_{\\mathbf{x}}E_{\\theta}(\\mathbf{x})$ . The score-matching objectives utilized in training these score-based models have subsequently been adapted for training diffusion models [49]. Our work is inspired by some prior work [42, 47, 31] that employed such score-matching objectives for training EBMs. ", "page_idx": 12}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/654f397573de94a99413497a663e7a28bdd509eedd2de27f01a3a1b33d4a5f68.jpg", "img_caption": ["Figure 7: Comparison of various generative modeling methods in 2D modeling and sampling. "], "img_footnote": [], "page_idx": 12}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/4691211d69a27259acf3333b29c3b8e1f362c45731bfaa2ab0f2f068cce426a9.jpg", "img_caption": ["B Complete 2D-bandit Experiment Results ", "Figure 8: Illustration of EDA\u2019s performance in 2D bandit settings at different diffusion times. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "C Theoretical Analysis ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we present the theoretical proof for Proposition 3.1. ", "page_idx": 14}, {"type": "text", "text": "Our proof is based on the theoretical framework of Contrastive Energy Prediction (CEP) for diffusion energy guidance [32]. For the ease of readers, we incorporate the relevant theories from their work as lemmas below. ", "page_idx": 14}, {"type": "text", "text": "Lemma C.1. Let $\\hat{Q}(\\pmb{s},\\pmb{a}):\\mathcal{A}\\!\\times\\!\\mathcal{S}\\rightarrow\\mathbb{R}$ be a scalar function approximator. Consider the optimization problem ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\hat{Q}}\\mathbb{E}_{\\mu(s)\\prod_{i=1}^{K}\\mu(a^{i}|s)}\\left[\\sum_{k=1}^{K}\\frac{e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}e^{Q(s,a^{i})}}\\log\\frac{e^{\\hat{Q}(s,a^{k})}}{\\sum_{i=1}^{K}e^{\\hat{Q}(s,a^{i})}}\\right].\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The solution for Problem $^{17}$ satisfies ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\hat{Q}^{*}(s,{\\pmb a})=Q(s,{\\pmb a})+C(\\pmb{s}),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $C(s)$ can be arbitrary scalar functions conditioned on s. ", "page_idx": 14}, {"type": "text", "text": "Proof. The proof is quite straightforward. Consider two discrete distributions ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{P:=\\left\\lbrace\\frac{e^{Q(\\mathbf{s},\\mathbf{a}^{1})}}{\\sum_{i=1}^{K}e^{Q(\\mathbf{s},\\mathbf{a}^{i})}},\\frac{e^{Q(\\mathbf{s},\\mathbf{a}^{2})}}{\\sum_{i=1}^{K}e^{Q(\\mathbf{s},\\mathbf{a}^{2})}}...,\\frac{e^{Q(\\mathbf{s},\\mathbf{a}^{K})}}{\\sum_{i=1}^{K}e^{Q(\\mathbf{s},\\mathbf{a}^{i})}}\\right\\rbrace}\\\\ &{\\hat{P}:=\\left\\lbrace\\frac{e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{1})}}{\\sum_{i=1}^{K}e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{i})}},\\frac{e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{2})}}{\\sum_{i=1}^{K}e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{i})}}...,\\frac{e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{K})}}{\\sum_{i=1}^{K}e^{\\hat{Q}(\\mathbf{s},\\mathbf{a}^{i})}}\\right\\rbrace}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "For any $\\pmb{s}$ and any $\\pmb{a}^{1:K}$ , we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)\\left[\\displaystyle\\sum_{k=1}^{K}\\frac{e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}e^{Q(s,a^{i})}}\\log\\frac{e^{\\hat{Q}(s,a^{k})}}{\\sum_{i=1}^{K}e^{\\hat{Q}(s,a^{i})}}\\right]}\\\\ &{=\\!\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)-D_{\\mathrm{KL}}(P||\\hat{P})-H(P)}\\\\ &{\\le\\!\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)-H(P)}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "According to the properties of $\\mathrm{KL}$ divergence, the equality holds if and only if $P={\\hat{P}}$ for any $\\pmb{s}$ and $\\pmb{a}^{1:K}$ . This implies that ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\hat{Q}^{*}(s,{\\pmb a})=Q(s,{\\pmb a})+C(\\pmb{s}),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "constantly holds. ", "page_idx": 14}, {"type": "text", "text": "Lemma C.2. Let $\\hat{Q}(\\pmb{s},\\pmb{a}_{t},t):\\mathcal{A}\\times\\mathcal{S}\\times\\mathbb{R}\\rightarrow\\mathbb{R}$ be a scalar function approximator. $p(\\mathbf{\\boldsymbol{a}}_{t}|\\mathbf{\\boldsymbol{a}},t)$ is any conditional transition probability. Consider the optimization problem ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\hat{Q}}\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)p(a_{t}^{i}|a^{i},t)\\left[\\sum_{k=1}^{K}e^{Q(s,a^{k})}\\log\\frac{e^{\\hat{Q}(s,a_{t}^{k},t)}}{\\sum_{i=1}^{K}e^{\\hat{Q}(s,a_{t}^{i},t)}}\\right].\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The solution for Problem $I8$ satisfies ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{Q}^{*}(s,a_{t},t)=\\log\\mathbb{E}_{\\mu_{t}(a|a_{t},s,t)}e^{Q(s,a)}+C(s),}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\begin{array}{r}{\\mu_{t}(\\pmb{a}|\\pmb{a}_{t},\\pmb{s},t)=\\mu(\\pmb{a}|\\pmb{s})p(\\pmb{a}_{t}|\\pmb{a},t)/\\mu_{t}(\\pmb{a}_{t}|\\pmb{s},t)}\\end{array}$ is the posterior action distribution, $C(s)$ can be arbitrary scalar functions conditioned on $\\pmb{s}$ . ", "page_idx": 14}, {"type": "text", "text": "Proof. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{c l}{\\displaystyle\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}{\\mu(a^{i}|s)p(a_{i}^{i}|a^{i},t)}\\left[\\sum_{k=1}^{K}{e^{Q(s,a^{k})}\\log\\frac{e^{\\hat{Q}(s,a_{i}^{k},t)}}{\\sum_{i=1}^{K}{e^{\\hat{Q}(s,a_{i}^{k},t)}}}}\\right]}\\\\ {\\displaystyle=\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}{\\mu_{t}(a_{i}^{i}|s)\\mu_{t}(a^{i}|a_{i}^{k},s,t)\\left[\\sum_{k=1}^{K}{e^{Q(s,a^{k})}\\log\\frac{e^{\\hat{Q}(s,a_{i}^{k},t)}}{\\sum_{i=1}^{K}{e\\hat{Q}(s,a_{i}^{k},t)}}}\\right]}\\,,}\\\\ {\\displaystyle=\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}{\\mu_{t}(a_{i}^{i}|s)\\left[\\sum_{k=1}^{K}{\\mathbb{E}_{\\mu_{t}(a^{k}|a_{i}^{k},s,t)}e^{Q(s,a^{k})}\\log\\frac{e^{\\hat{Q}(s,a_{i}^{k},t)}}{\\sum_{i=1}^{K}{e^{\\hat{Q}(s,a_{i}^{k},t)}}}}\\right]}\\,,}\\\\ {\\displaystyle=\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}{\\mu_{t}(a_{i}^{i}|s)\\left[\\sum_{k=1}^{K}{\\frac{\\mathbb{E}_{\\mu_{t}(a^{k}|a_{i}^{k},s,t)}e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}{\\mathbb{E}_{\\mu_{t}(a^{i}|s,a_{i}^{k},t)}e^{Q(s,a^{k})}}}\\log\\frac{e^{\\hat{Q}(s,a_{i}^{k},t)}}{\\sum_{i=1}^{K}{e\\hat{Q}(s,a_{i}^{k},t)}}}\\right]}\\,.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "According to Lemma C.1, for any state $\\textbf{\\em a}$ and any diffused action $\\mathbf{\\deltaa}_{t}$ at time $t$ , the optimal solution satisfies ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{Q}^{*}(s,a_{t},t)=\\log\\mathbb{E}_{\\mu_{t}(a|a_{t},s,t)}e^{Q(s,a)}+C(s).}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Lemma C.3. Consider the behavior distribution $\\mu(\\pmb{a}|\\pmb{s})$ and the policy distribution $\\pi^{*}(a|s)\\;\\propto$ $\\mu(\\pmb{a}|\\pmb{s})e^{Q(\\pmb{s},\\pmb{a})}$ . Their diffused distribution at time $t$ are both defined by the forward diffusion process (Eq. 5). Let $p(\\pmb{a}_{t}|\\pmb{a},t):=\\mathcal{N}(\\pmb{a}_{t}|\\alpha_{t}\\pmb{a},\\sigma_{t}^{2}\\pmb{I})$ , such that ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mu_{t}(\\pmb{a}_{t}|\\pmb{s},t)=\\int\\mathcal{N}(\\pmb{a}_{t}|\\alpha_{t}\\pmb{a},\\sigma_{t}^{2}\\pmb{I})\\mu(\\pmb{a}|\\pmb{s},t)\\mathrm{d}\\pmb{a},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\pi_{t}^{*}(\\pmb{a}_{t}|\\pmb{s},t)=\\int\\mathcal{N}(\\pmb{a}_{t}|\\alpha_{t}\\pmb{a},\\sigma_{t}^{2}\\pmb{I})\\pi^{*}(\\pmb{a}|\\pmb{s},t)\\mathrm{d}\\pmb{a}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Then the relationship between $\\pi_{t}^{*}$ and $\\mu_{t}$ can be derived as ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\pi_{t}^{*}(a_{t}|s,t)\\propto\\mu_{t}(a_{t}|s,t)e^{Q_{t}(s,a_{t},t)},}\\\\ {\\jmath_{t}(s,a_{t},t):=\\log\\mathbb{E}_{\\mu_{t}(a|a_{t},s,t)}e^{Q(s,a)}.\\qquad\\qquad\\qquad\\qquad}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Proof. According to the definition, we have ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pi_{t}^{*}(a|s)=\\int N(a_{t}|\\alpha_{t},\\sigma_{t}^{2}I)\\pi^{*}(a|s,t)\\mathrm{d}a}\\\\ &{\\qquad\\qquad=\\int N(a_{t}|\\alpha_{t},\\sigma_{t}^{2}I)\\mu(a|s)\\frac{e^{Q(s,a)}}{Z(s)}\\mathrm{d}a}\\\\ &{\\qquad\\qquad=\\int p(a_{t}|a,t)\\mu(a|s)\\frac{e^{Q(s,a)}}{Z(s)}\\mathrm{d}a}\\\\ &{\\qquad\\qquad=\\int\\mu_{t}(a|a_{t},s,t)\\mu_{t}(a_{t}|s,t)\\frac{e^{Q(s,a)}}{Z(s)}\\mathrm{d}a}\\\\ &{\\qquad\\qquad=\\frac{1}{Z(s)}\\mu_{t}(a_{t}|s,t)\\int\\mu_{t}(a|a_{t},s,t)e^{Q(s,a)}\\mathrm{d}a}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\quad\\times\\mu_{t}(a_{t}|s,t)e^{Q(s,a,t)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Proposition C.4. Let $f_{\\theta}^{*}$ be the optimal solution of Problem $^{l4}$ and $\\pi_{t,\\theta}^{*}\\,\\propto\\,e^{f_{\\theta}^{*}}$ be the optimal diffusion policy. Assuming unlimited model capacity and data samples, we have the following results: (a) Optimality Guarantee. At time $t=0$ , the learned policy $\\pi_{\\theta}^{*}$ converges to the optimal target policy. ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\pi_{\\theta}^{*}(\\pmb{a}|\\pmb{s})=\\pi_{t=0,\\theta}^{*}(\\pmb{a}|\\pmb{s})\\propto\\mu_{\\phi}(\\pmb{a}|\\pmb{s})e^{Q(\\pmb{s},\\pmb{a})/\\beta}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "(b) Diffusion Consistency. At time $t>0$ , $\\pi_{t>0,\\theta}$ models the diffused distribution of $\\pi_{\\theta}^{*}$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\boldsymbol{\\pi}_{t,\\theta}^{*}(\\pmb{a}|\\pmb{s},t)=\\int\\mathcal{N}(\\pmb{a}_{t}|\\alpha_{t}\\pmb{a},\\sigma_{t}^{2}\\pmb{I})\\pi_{\\theta}^{*}(\\pmb{a}_{0}|\\pmb{s})\\mathrm{d}\\pmb{a}_{0}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "asymptotically holds when $K\\rightarrow\\infty$ and $\\beta=1$ , satisfying the definition of diffusion process (Eq. 6). Proof. We first rewrite Problem 14 below: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{f}(\\theta)=\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)p(a_{t}^{i}|a^{i},t)\\left[\\sum_{k=1}^{K}\\frac{e^{Q(s,a^{k})}}{\\sum_{i=1}^{K}e^{Q(s,a^{i})}}\\log\\frac{e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{k}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{k}|s,t)]}}{\\sum_{i=1}^{K}e^{\\beta[f_{\\theta}^{\\pi}(a_{t}^{i}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{i}|s,t)]}}\\right].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "(a) Optimality Guarantee. At time $t=0$ , we have $p(\\mathbf{a}_{t}|\\mathbf{a},t)=\\mathcal{N}(\\mathbf{a}_{t}|\\alpha_{t}\\mathbf{a},\\sigma_{t}^{2}I)=\\mathcal{N}(\\mathbf{a}_{t}|\\mathbf{a},0I)$ such that $\\mathbf{\\boldsymbol{a}}_{t}=\\mathbf{\\boldsymbol{a}}$ . ", "page_idx": 16}, {"type": "text", "text": "Define $\\hat{Q}^{*}(s,a):=\\,\\beta[f_{\\theta}^{\\pi}(\\pmb{a}_{t}^{k}|s,t\\,=\\,0)\\,-\\,f_{\\phi}^{\\mu}(\\pmb{a}_{t}^{k}|s,t\\,=\\,0)]$ . Since we assume unlimited model capacity for $f_{\\theta},\\hat{Q}^{*}$ can be arbitrary scalar functions. Lemma C.1 can then be applied: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pi_{\\theta}^{*}(a|s)=\\pi_{t=0,\\theta}^{*}(a|s)}\\\\ &{\\qquad\\qquad\\propto e^{f_{\\theta}^{\\pi}(a_{t}^{i}|s,t=0)}}\\\\ &{\\qquad\\quad=e^{f_{\\phi}^{\\mu}(a_{t}^{i}|s,t=0)+\\hat{Q}^{*}(s,a)/\\beta}}\\\\ &{\\qquad\\quad=e^{f_{\\phi}^{\\mu}(a_{t}^{i}|s,t=0)}e^{[Q(s,a)+C(s)]/\\beta}}\\\\ &{\\qquad\\quad\\propto\\mu_{\\phi}(a|s)e^{Q(s,a)/\\beta}}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "(abn)d  Dciafnf ubsei orne mCoovnesdi.s tSeentc ,e nt $K\\rightarrow\\infty$ ,z awtieo $\\begin{array}{r}{\\sum_{i=1}^{K}e^{Q(\\pmb{s},\\pmb{a}^{i})}=\\mathbb{E}_{\\mu}(\\pmb{a}|\\pmb{s})e^{Q(\\pmb{s},\\pmb{a})}}\\end{array}$ becomes constant $\\beta=1$ ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\theta}\\mathcal{L}_{f}(\\theta)=\\mathbb{E}_{\\mu(s)}\\prod_{i=1}^{K}\\mu(a^{i}|s)p(a_{t}^{i}|a^{i},t)\\left[\\sum_{k=1}^{K}e^{Q(s,a^{k})}\\log\\frac{e^{\\,[f_{\\theta}^{\\pi}(a_{t}^{k}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{k}|s,t)]}}{\\sum_{i=1}^{K}e^{[f_{\\theta}^{\\pi}(a_{t}^{i}|s,t)-f_{\\phi}^{\\mu}(a_{t}^{i}|s,t)]}}\\right].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "We can then similarly apply Lemma C.2 and get ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\log\\frac{\\pi_{t,\\theta}^{*}(a_{t}|s,t)}{\\mu_{t}(a_{t}|s,t)}=f_{\\theta}^{\\pi}(a_{t}|s,t)-f_{\\phi}^{\\mu}(a_{t}|s,t)=\\log\\mathbb{E}_{\\mu_{t}(a|a_{t},s,t)}e^{Q(s,a)}+Z(s)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "equation", "text": "$$\n\\pi_{t,\\theta}^{*}(a_{t}|s,t)\\propto\\mu_{t}(a_{t}|s,t)\\mathbb{E}_{\\mu_{t}(a|a_{t},s,t)}e^{Q(s,a)}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "According to Lemma C.3, we have ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\boldsymbol{\\pi}_{t,\\theta}^{*}(\\boldsymbol{a}|\\boldsymbol{s},t)=\\int\\!\\mathcal{N}(\\boldsymbol{a}_{t}|\\alpha_{t}\\boldsymbol{a},\\sigma_{t}^{2}I)\\boldsymbol{\\pi}_{\\boldsymbol{\\theta}}^{*}(\\boldsymbol{a}_{0}|\\boldsymbol{s})\\mathrm{d}\\boldsymbol{a}_{0}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "D Implementation Details for D4RL Tasks ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We use NVIDIA A40 GPU cards to run all experiments. ", "page_idx": 17}, {"type": "text", "text": "Behavior pretraining. For pretraining the bottleneck diffusion model, we extract a reward-free behavior dataset $\\{s,a\\}$ from ${\\cal D}^{\\mu}:=\\left\\{s,a,r,s^{\\prime}\\right\\}$ . We adopt the model architecture used by IDQL [15] and SRPO [4] but sum up the final $|{\\mathcal{A}}|$ -dimensional output to form a scalar network. The resulting model is basically a 6-layer MLP with residual connections, layer normalizations, and dropout regularization. We train the behavior network for 1M steps to ensure convergence. The batch size is 2048. The optimizer is Adam with a learning rate of 3e-4. We adopt default VPSDE [49] hyperparameters as the diffusion data perturbation method. ", "page_idx": 17}, {"type": "text", "text": "Constructing alignment dataset. First, we leverage $\\mathcal{D}^{\\mu}$ and use existing methods such as IQL [25] to learn a critic network that will later be utilized for data annotation. Then, for a random portion of state $\\pmb{s}$ in $\\mathcal{D}^{\\mu}$ , we leverage the pretrained behavior model to generate $K=16$ action samples. The original action in $\\mathcal{D}^{\\mu}$ is thrown away. We use the critic model to annotate each state-action pair and store them together as the alignment dataset $\\mathcal{D}^{f}:=\\{s,\\pmb{a}^{1:K},Q(s,\\pmb{a}^{k})|_{k\\in1:K}\\}$ . We use 2-layer MLPs with 256 hidden states. Critic training details is exactly the same with previous work [25]. Other critic learning methods used in ablation studies are also consistent with respective prior work [15, 32]. ", "page_idx": 17}, {"type": "text", "text": "Policy fine-tuning. The policy network is initialized to be the behavior network. Throughout the training, we fix the behavior model and only optimize the policy model. Behavior weights are frozen. The optimizer is Adam and the learning rate is 5e-5. All policy models are trained for $200\\mathbf{k}$ gradient steps though we observe convergence at 20K steps in most tasks. We do not employ dropout regularization during fine-tuning because we find it harms performance. For the temperature coefficient, we sweep over $\\beta\\in\\{0.1,0.2,0.3,0.5,0.8,1.0,2.0\\}$ (Figure 9&10). Similarly to [11, 15, 5, 15], we find the performance can be improved by adopting a rejection sampling technique. We select the action with the highest Q-value among 4 candidates during evaluation. We do not use such techniques in experimental plots (Figure 5&11) to better reflect policy improvement. We use 20 test seeds in all experiments and report numbers at the end of training. We train all experiments independently with 5 seeds in our main experiments and 3-5 seeds in ablation studies. ", "page_idx": 17}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/6851612ecd3ca8a819a412c696feee9e25bfe4edc88f5a048caa9b7de4b2ef81.jpg", "img_caption": ["Figure 9: Ablation of the temperature coefficient $\\beta$ in D4RL benchmarks. "], "img_footnote": [], "page_idx": 18}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/4be8163178b6a50793b61dc3548715cfbb7824dc162bca7913fed1b26b6ad741.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "Wd1DFLUp1M/tmp/2b0448baa43784de26a84b617dfb9b3910135e34538bd33d28e0e30be7ecf088.jpg", "table_caption": ["Figure 10: Ablation of the temperature coefficient $\\beta$ without rejection sampling. "], "table_footnote": ["Table 2: Temperature coefficient $\\beta$ for every individual task. "], "page_idx": 18}, {"type": "image", "img_path": "Wd1DFLUp1M/tmp/2e0aab82799b7a930d71ae76e500a5f8ffcb4cc2aed94969b5a6d852346decc3.jpg", "img_caption": ["F Additional Training Curves ", "Figure 11: Training curves of EDA (ours) and several baselines. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "G Reproducibility ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "To ensure that our work is reproducible, we submit the source code as supplementary material. The code will go open-source upon publication. Reported experimental numbers are averaged under multiple random seeds. We provide implementation details of our work in Appendix D. ", "page_idx": 20}, {"type": "text", "text": "H Limitations and Broader Impacts ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Limitations. EDA employs a diffusion policy, which is a natural fti for continuous control problems. However, it cannot be directly applied in decision-making tasks with a discrete action space. Additionally, EDA places restrictions on the diffusion model design. The diffusion policy has to be the gradient of a scalar neural network with respect to action inputs to enable direct density estimation. Lastly,as task reward is human-defined and varies from task to task, achieving optimal performance with EDA in downstream tasks requires tailored network architecture design and hyperparameter tuning. How to ensure that the same set of algorithm parameters can be applicable across various tasks remains a topic worthy of further research. ", "page_idx": 20}, {"type": "text", "text": "Broader Impacts. EDA is a rather theoretical paper and all experiments are done in simulation environments. However, its further application could assist the deployment of highly optimized AI systems in critical real-world applications, such as autonomous driving or healthcare robots. This could have unintended consequences if the systems fail or produce incorrect results. Robust testing and validation are essential to mitigate these risks. There is also a risk that EDA could be misused for malicious purposes. For instance, optimized AI policies could be employed in autonomous systems for surveillance or other invasive activities without proper regulation and oversight. ", "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: The main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 20}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: Appendix H ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. ", "page_idx": 20}, {"type": "text", "text": "\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors ", "page_idx": 20}, {"type": "text", "text": "should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: Appendix C. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 21}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: yes we have. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. ", "page_idx": 21}, {"type": "text", "text": "\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same ", "page_idx": 21}, {"type": "text", "text": "dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed. ", "page_idx": 22}, {"type": "text", "text": "\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: Source code is in supplemental material. We will open-source it upon publication. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 22}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] Justification: Appendix D ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: See Sec. 5.1 and Appendix E. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Appendix D and Sec. 5.2 ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 23}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Yes. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Appendix H. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: This paper is highly theoretical, there\u2019s little risk the released training code is misused. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 24}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Yes, we have. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: Yes, we have. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 25}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing or research with human subjects. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 25}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}]