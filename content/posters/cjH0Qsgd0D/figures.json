[{"figure_path": "cjH0Qsgd0D/figures/figures_1_1.jpg", "caption": "Figure 1: Overview of our method. Left. Data generation workflow. For each configuration x, forces on a subset of all the microscopic coordinates are calculated by the microscopic force calculator. Right. Macroscopic dynamics identification. The macroscopic dynamics is mapped to the microscopic space first, then compared with the forces on a subset of the microscopic coordinates.", "description": "This figure illustrates the overall workflow of the proposed method. The left side shows the data generation process, where forces are computed on only a subset of microscopic coordinates to reduce computational cost. The right side illustrates the process of identifying macroscopic dynamics by mapping it back to the microscopic space and comparing it with the partially computed microscopic forces. The core idea is to learn the macroscopic dynamics without computing forces on all microscopic coordinates.", "section": "1 Introduction"}, {"figure_path": "cjH0Qsgd0D/figures/figures_6_1.jpg", "caption": "Figure 2: Mean relative error on the test dataset of the Predator-Prey system. The black dashed line represents test error = 3 \u00d7 10\u22123.", "description": "This figure shows the mean relative error on a test dataset for the Predator-Prey system using different training methods.  The x-axis represents the number of training data points, and the y-axis represents the mean relative error.  Multiple lines represent different methods for learning macroscopic dynamics, with different levels of partial force computation (p). The black dashed line indicates a test error threshold of 3 x 10^-3. The graph demonstrates that with sufficient data, all methods achieve a similar low error, but methods using partial force computations (especially with smaller values of p) achieve lower error with less data.", "section": "5.1 Force Computation Efficiency"}, {"figure_path": "cjH0Qsgd0D/figures/figures_7_1.jpg", "caption": "Figure 3: Results on the Lennard-Jones system with 800 atoms and N = 4800. Forces on 50 atoms are used to train Lx,p for all the latent model structures. Each model is trained with ten repeats.", "description": "This figure shows the test error results on the Lennard-Jones system with 800 atoms (N=4800).  The models used are trained with both full forces (Lz) and partial forces (Lx,p with p=1/16), using three different latent model structures: MLP, OnsagerNet, and GFINNs. The figure highlights that the models trained with partial forces (Lx,p) consistently show lower test errors compared to those trained with full forces (Lz), demonstrating the effectiveness of the proposed method even with reduced computational cost.", "section": "5.2 Robustness to Different Latent Structures"}, {"figure_path": "cjH0Qsgd0D/figures/figures_8_1.jpg", "caption": "Figure 4: Number of force computations required to achieve etol = 3 \u00d7 10-3 on Lennard-Jones system with different sizes. Forces on 50 atoms are used to train Lx,p for systems of different sizes.", "description": "This figure compares the number of force computations needed to reach a specific error tolerance (etol = 3 \u00d7 10^-3) for two different methods (Lz and Lx,p) across Lennard-Jones systems with varying numbers of atoms.  Lz represents the method using all microscopic forces, while Lx,p is the partial force method. The results demonstrate that the Lx,p method requires significantly fewer force computations, especially as the system size increases. The x-axis represents the number of atoms, and the y-axis denotes the number of force computations.", "section": "5.1 Force Computation Efficiency"}, {"figure_path": "cjH0Qsgd0D/figures/figures_16_1.jpg", "caption": "Figure 1: Overview of our method. Left. Data generation workflow. For each configuration x, forces on a subset of all the microscopic coordinates are calculated by the microscopic force calculator. Right. Macroscopic dynamics identification. The macroscopic dynamics is mapped to the microscopic space first, then compared with the forces on a subset of the microscopic coordinates.", "description": "This figure illustrates the overall workflow of the proposed method. The left panel shows the data generation process: forces are computed on a subset of microscopic coordinates for each system configuration.  The right panel details the macroscopic dynamics identification: the macroscopic dynamics are first mapped to the microscopic space, and then compared to the partially computed forces to update the model parameters.  This comparison minimizes the loss function, leading to accurate learning of macroscopic dynamics from incomplete microscopic data.", "section": "1 Introduction"}, {"figure_path": "cjH0Qsgd0D/figures/figures_17_1.jpg", "caption": "Figure 7: Latent trajectories with initial condition \u03bc = 0.02, \u03c3 = 0.52 and \u0394t = 0.5 in the Predator-Prey system.", "description": "This figure shows the comparison of latent trajectories obtained from different methods in the Predator-Prey system. The initial condition is set as \u03bc = 0.02 and \u03c3 = 0.52, and the time step is 0.5.  The ground truth trajectories are generated by solving the microscopic equation and then encoding the results. The predictions from three methods are compared against the ground truth: Lz, which uses forces on all the microscopic coordinates; Lx, which uses forces on a subset of the microscopic coordinates; and Lx,p (p=1/5), which utilizes partial force computations.  The figure includes plots showing the prediction of the prey and predator populations (\u016b and \u03c5 respectively), and a phase portrait illustrating the evolution of these populations.  A final plot shows the error of the predictions from each method against the ground truth.", "section": "5.1 Force Computation Efficiency"}, {"figure_path": "cjH0Qsgd0D/figures/figures_19_1.jpg", "caption": "Figure 8: Loss curve of the Lz, Lx, Lx,p(p = 1/4) on the Predator-Prey system. Models are trained with different loss functions Lz, Lx, Lx,p(p = 1/4) on the same number of training data.", "description": "This figure compares the training and testing loss curves for three different loss functions: Lz (using all microscopic forces), Lx (using a subset of forces), and Lx,p (using a subset of forces with a specific sampling strategy).  The plot shows how these loss functions converge during training, and the relative test error at the end of training. The results illustrate that Lx and Lx,p are effective and efficient alternatives to Lz, especially Lx,p, which uses a smaller subset of forces.", "section": "Additional Experiments"}]