[{"type": "text", "text": "Analyzing & Reducing the Need for Learning Rate Warmup in GPT Training ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Atli Kosson Bettina Messmer Martin Jaggi EPFL, Switzerland firstname.lastname@epfl.ch ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Learning Rate Warmup is a popular heuristic for training neural networks, especially at larger batch sizes, despite limited understanding of its benefits. Warmup decreases the update size $\\Delta{\\pmb w}_{t}=\\eta_{t}{\\pmb u}_{t}$ early in training by using lower values for the learning rate $\\eta_{t}$ . In this work we argue that warmup beneftis training by keeping the overall size of $\\Delta{\\pmb w}_{t}$ limited, counteracting large initial values of $\\pmb{u}_{t}$ . Focusing on small-scale GPT training with AdamW/Lion, we explore the following question: Why and by which criteria are early updates $\\pmb{u}_{t}$ too large? We analyze different metrics for the update size including the $\\ell_{2}$ -norm, resulting directional change, and impact on the representations of the network, providing a new perspective on warmup. In particular, we find that warmup helps counteract large angular updates as well as a limited critical batch size early in training. Finally, we show that the need for warmup can be significantly reduced or eliminated by modifying the optimizer to explicitly normalize $\\pmb{u}_{t}$ based on the aforementioned metrics. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Neural networks are typically trained using variations of stochastic gradient descent. The weight updates $\\Delta w$ have the form $\\Delta{\\pmb w}=\\eta{\\pmb u}$ , where $\\eta$ denotes the learning rate and $\\textbf{\\em u}$ an unscaled update vector derived from the history of weight gradients. Throughout training, the learning rate is often adjusted over time $t$ according to a learning rate schedule, $\\eta=\\eta_{t}$ . This schedule frequently includes an initial phase known as a learning rate warmup, where the learning rate starts low and is increased to a target value before being reduced according to a decay schedule. Both the choice of warmup and decay strategy can significantly affect the final model performance. In this work, we focus on the linear warmup introduced by Goyal et al. [10] for large batch size ResNet [11] training, which is also commonly used for transformers [37]. ", "page_idx": 0}, {"type": "text", "text": "The length of the warmup is a hyperparameter that requires tuning, which is complicated by the fact that the reasons for its effectiveness are somewhat unclear. Warmup empirically helps stabilize training and allows the use of larger learning rates throughout the rest of training, which can speed up the process and provide beneficial regularization [10]. Since the learning rate simply scales the size of the updates $\\Delta{\\pmb w}=\\eta{\\pmb u}$ , warmup must achieve these effects by decreasing the size of early updates. However, it is not fully clear why this helps. Are the initial updates too large for some reason? For example, we might need small $\\eta_{t}$ values to counteract large $\\textbf{\\em u}$ values early in training. How should we quantify what makes an update \u2206w large? Why do large updates adversely affect training? ", "page_idx": 0}, {"type": "text", "text": "In this work, we explore warmup from this perspective, focusing on GPT2 [29] training with adaptive optimizers like AdamW [24] and Lion [3]. We identify three key issues that necessitate warmup: ", "page_idx": 0}, {"type": "text", "text": "1. The way Adam handles momentum can lead to artificially large initial updates $\\Delta w$ .   \n2. Early updates $\\Delta w$ are large compared to the initial weight magnitude of $\\pmb{w}$ for matrices.   \n3. The gradients of early samples are highly correlated, limiting effective mini-batch sizes. ", "page_idx": 0}, {"type": "text", "text": "We demonstrate that simple modifications to the optimizer can mitigate the first two issues: eliminating the momentum bias correction in AdamW and scaling matrix updates to match their magnitude, akin to the Rotational Optimizers by Kosson et al. [19]. We analyze the third issue in terms of the rate at which the internal neural representations of the network are changing (sometimes called feature learning). When the gradients of different samples are highly correlated these internal representations change too fast, which we conjecture can lead to issues with the non-linearities (e.g. activation functions) of the network. This can also be seen as the critical batch size [28] being too low early in training to enable the use of the peak learning rate. We derive a scaling factor based on the signal-to-noise ratio of the gradient that can help mitigate this, functioning like an automatic learning rate warmup. Alternatively, we show that using high momentum values in conjunction to the first two methods may suffice to enable efficient training without warmup. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Learning rate warmups have been used since at least ResNet [11], where a lower constant learning rate was applied at the start of training. Earlier works may have employed similar concepts; for example, Sutskever et al. [35] utilized a momentum schedule that could induce a similar effect in the \u201ceffective learning rate\u201d as defined by Fu et al. [6]. The practice of linear warmup in its current form was popularized by Goyal et al. [10] and Vaswani et al. [37]. ", "page_idx": 1}, {"type": "text", "text": "Warmup has been studied indirectly in various neural network optimizer works. A notable example is RAdam [23], a modification of Adam [18] aimed at reducing the need for warmup. However, Ma and Yarats [26] demonstrated that RAdam essentially incorporates a fixed warmup schedule within the optimizer. In appx. C.1 we show that this warmup effect is insufficient in our setup. Relative optimizers like LARS [47] and LAMB [48] are also believed to reduce the necessity for warmup [21]. Bernstein et al. [2] propose a relative optimizer called Fromage and analyze how relative weight changes relate to representation changes, but differ from our approach in that they do not describe the effects of the gradient signal-to-noise ratio on this relationship. We build upon Kosson et al. [19] which showed that weight decay can make standard optimizers function as approximate relative optimizers and proposed variants that reduce the benefit of warmup without fully eliminating it. ", "page_idx": 1}, {"type": "text", "text": "The effect of warmup in transformers was empirically studied by Wortsman et al. [41]. Xiong et al. [43] proposed the pre-LN normalization placement for transformers, showing it reduces the need for warmup. Huang et al. [13] studied initialization in transformers showing a link to warmup. ", "page_idx": 1}, {"type": "text", "text": "Finally, warmup has been studied directly on its own. Gotmare et al. [9] studied the effect of warmup, finding it helps avoid overly large updates to the weights of later layers which could be frozen to achieve a similar benefit. Gilmer et al. [7] study the need for warmup from a curvature perspective, showing it may help \u201cpush\u201d the optimization trajectory towards flatter regions where higher learning rates are stable. Smith et al. [32] arrive at a similar conclusion, there is a stable learning rate that varies throughout training based on the curvature which limits the learning rate early on, necessitating warmup. These works focus on SGD with momentum, but it is less clear how curvature affects Adam-like or relative optimizers as we discuss later. ", "page_idx": 1}, {"type": "text", "text": "The relation between stochastic gradient noise and learning rate has been studied in several works [46, 28, 49, 34, 22, 27]. They find that the update size can be increased roughly linearly with the batch size up to a certain critical batch size that depends on ratio of the mean and variance of the mini-batch gradient. We show how the signal-to-noise ratio (SNR) of the mini-batch gradient amplifies changes to the neural representations of a network given a normalized update in weight space. We observe that the SNR starts out high but decreases over time, which translates to large early changes in the internal representations without warmup. ", "page_idx": 1}, {"type": "text", "text": "3 Baseline Experimental Setup & Results ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Our main experiments focus on the training of a 124M parameter GPT2 [29] model on the OpenWebText corpus [8]. The model has 12 transformer blocks with an embedding dimension of 768. Our base training is performed at batch size 480 with a sequence length of 1024. We train for 5000 iterations which translates into roughly 20 tokens per parameter, as suggested by Chinchila [12]. The baselines use AdamW [24] (see algo. 1) with weight decay $\\lambda=0.1$ , momentum coefficient $\\beta_{1}=0.9$ , smoothing coefficient $\\beta_{2}=0.95$ , and $\\varepsilon=10^{=8}$ . The learning rate schedule consists of a linear warmup followed by a constant phase and eventually linear cooldown spanning half of training (see examples in fig. 1). This schedule keeps the peak learning rate and decay phase identical for different warmup lengths. This differs from other schedules, e.g. cosine, where the warmup length typically affects the whole shape. The learning rate value and the warmup length are swept for various configurations. Our code is based on NanoGPT [16] with additional utilities by Kosson et al. [19]. The hyperparameter values and base training configuration are adopted from NanoGPT. See appx. C.2 for experiments on additional architectures and datasets. ", "page_idx": 1}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/ef8aa2ea4751502339c25d5e42c6e559c2c7e994e1ea15d427f61ec327ea20cc.jpg", "img_caption": ["Figure 1: Warmup significantly beneftis GPT2 training with AdamW. Panel 1: Trapezoidal learning rate schedules with different warmup lengths and $50\\%$ linear cooldown. Panel 2: Final validation loss for various learning rate and warmup configurations. Note the performance gap between no-warmup (black) and other configurations. Panel 3: Training curves comparing the best no-warmup run to a $5\\%$ warmup with the same learning rate. The warmup run quickly surpasses the no-warmup run. Panel 4: Comparison of $\\ell_{2}$ update norms for these runs shows large initial updates without warmup. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Figure 1 shows the baseline performance for our setup. We observe that even short warmup can significantly improve performance. Not using warmup results in faster initial progress for a given learning rate, but eventually falls behind leaving a permanent gap. Warmup not only stabilizes higher learning rates, but also prevents a lasting degradation of the model that can not be mitigated by simply training for slightly longer. We notice that although Adam normalizes the update size, its $\\ell_{2}$ -magnitude varies significantly throughout training with a large spike at the start of training. ", "page_idx": 2}, {"type": "text", "text": "4 The Interaction of Momentum and the $\\ell_{2}$ -Update Norm in AdamW ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section we analyze the reason behind the large $\\ell_{2}$ -norm of early updates in our AdamW baseline seen in panel 4 of fig. 1. We find that this primarily stems from the $\\beta_{1}$ bias correction. We then explore to what extent these large initial updates contribute to the need for warmup by modifying the optimizer to directly control the $\\ell_{2}$ -norm of the update. Although we find this is to be insufficient to replace warmup on its own, these changes are an important component of our later methods. ", "page_idx": 2}, {"type": "text", "text": "Adam-like optimizers such as AdamW (algo. 1) differ from simpler methods like SGD with momentum in that they normalize the update size with the gradient magnitude. This makes them invariant to a rescaling of the loss function and helps counteract potential differences in the gradient magnitude between layers. An important consequence of this is that the unscaled updates $\\textbf{\\em u}$ are not large simply due to large initial gradients, unlike in plain SGD and other optimizers that don\u2019t normalize their updates. Such un-normalized optimizers might diverge to infinity if a high learning rate is combined with large initial gradients or large curvature, as the update size is unbounded. Preventing this could be an additional benefit of warmup for SGD on top of the effects discussed in this work. ", "page_idx": 2}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/4f6403053e1b33e7d0bbd1a3df1245a6a7f0f97dd322ad7788d6e29e8ac7c66d.jpg", "img_caption": ["Figure 2: LionA (algo. 2) fails to significantly reduce the warmup advantage. Panel 1: Final validation loss across various learning rates and warmup percentages shows a reduced but still significant no-warmup penalty compared to AdamW (fig. 1). Panel 2: Training curves for $0\\%$ vs. $5\\%$ warmup at the highest stable learning rate for $0\\%$ , with warmup quickly overtaking no-warmup as before. Panel 3: LionA successfully controls the $\\ell_{2}$ -update norm. Panel 4: Early angular updates (see $\\S5.$ ) are large without warmup and do not follow the learning rate schedule throughout training. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Although AdamW normalizes the update size based on the gradient, its magnitude can still vary throughout training as seen in fig. 1. This can be caused by changes in the gradient magnitude over time, especially when using different values of $\\beta_{1}$ and $\\beta_{2}$ . However, it can also be caused by momentum and especially the bias correction (algo. 1, line 7). The magnitude of $\\mathbf{\\nabla}m_{t}$ depends on the alignment of subsequent gradients $g_{1},\\ldots,g_{t}$ whereas the normalization factor $\\pmb{v}_{t}$ does not. For example, when each $\\scriptstyle g_{t}$ is an independent zero-mean random vector with a fixed second moment $\\mathbb{E}[g_{t}^{2}]^{\\bullet}=\\pmb{\\sigma}^{2}$ , we have (see appx. B.1 for details): ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\pmb{m}_{t}^{2}]=(1-\\beta_{1}^{2t})\\frac{1-\\beta_{1}}{1+\\beta_{1}}\\pmb{\\sigma}^{2},\\qquad\\mathbb{E}[\\pmb{v}_{t}]=(1-\\beta_{2}^{t})\\pmb{\\sigma}^{2}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In this case the bias correction for $\\beta_{1}$ is incorrect since it is derived for a constant gradient. With the bias correction the size becomes E[\u2225m\u02c6\u22252] = 11\u2212+\u03b2\u03b211t11\u2212+\u03b2\u03b211 \u03c3 2, amplifying the norm of early updates by ", "page_idx": 3}, {"type": "text", "text": "Algorithm 2 LionA: A modified version of the Lion [3] optimizer for greater compatibility with AdamW (algo. 1). The sign operation replaces the magnitude smoothing, explicitly controlling the $\\ell_{2}$ -norm of each update. Additional scaling keeps the hyperparameters $\\eta,\\lambda$ comparable to AdamW. ", "page_idx": 4}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/2f7b86debcc83ae8bd468ac7564114d243c6546e89a3a2112d856944f77f352b.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "5 The Importance and Irregularity of the Angular Update Size ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The effect of a weight vector $\\pmb{w}_{t}\\in\\mathbb{R}^{C}$ used in a dot product with some vector $\\textbf{\\em x}$ (e.g., in a neuron): ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\langle\\pmb{w}_{t},\\pmb{x}\\rangle=\\|\\pmb{w}_{t}\\|\\|\\pmb{x}\\|\\cos\\left(\\angle(\\pmb{w}_{t},\\pmb{x})\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "can be understood in terms of its magnitude $\\|\\pmb{w}_{t}\\|$ and direction $\\mathbf{\\delta}\\mathbf{w}_{t}/\\lVert\\mathbf{\\boldsymbol{w}}_{t}\\rVert$ . The magnitude acts like a gain, scaling the outputs, whereas the direction determines which input representations $\\textbf{\\em x}$ the system responds to. The angular update size [38] of an update $\\pmb{w}_{t}\\mapsto\\pmb{w}_{t+1}$ is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\angle(\\pmb{w}_{t+1},\\pmb{w}_{t})=\\operatorname{arccos}\\left(\\frac{\\langle\\pmb{w}_{t-1},\\pmb{w}_{t+1}\\rangle}{\\|\\pmb{w}_{t}\\|\\|\\pmb{w}_{t}\\|}\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "and measures how fast the direction of $\\pmb{w}_{t}$ changes during training, and thus its \u201cpreference\u201d for $\\textbf{\\em x}$ . ", "page_idx": 4}, {"type": "text", "text": "With BatchNorm [15] and similar operations [1, 14, 42, 4], a network can become invariant to the magnitude of weight vectors like $\\pmb{w}_{t}$ , such that only the direction matters and the vector is said to be scale-invariant. Weight Normalization [30] provides a good example of this, changing the system to: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\langle{\\pmb w}_{t}/\\|{\\pmb w}_{t}\\|,{\\pmb x}\\rangle=\\|{\\pmb x}\\|\\cos\\left(\\angle({\\pmb w}_{t},{\\pmb x})\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that although the system output is invariant to the magnitude $\\|\\pmb{w}_{t}\\|$ , traditional optimizers are not. Scaling the value of a scale-invariant weight vector by a factor of $c>0$ , results in a gradient that is scaled by $c^{-1}$ and curvature that is scaled by $c^{-2}$ (see appx. B.2). For SGD this scales the angular update by $\\bar{c}^{-2}$ and for Adam-like optimizers it is scaled by $\\bar{c}^{-1}$ . With weight decay the magnitude of scale-invariant vectors trends towards a certain stable equilibrium value over time which also results in a specific expected angular update size as described by Wan et al. [38], Kosson et al. [19]. ", "page_idx": 4}, {"type": "text", "text": "This has several important implications. Changing the initialization magnitude of scale-invariant weights will scale the angular updates over time for standard optimizers, resulting in effects similar to modifying the learning rate schedule. For initial weight magnitudes that are small compared to the equilibrium magnitude, the early angular updates will be large and these optimizers may benefti from learning rate warmup to counteract this. These effects also make the notion of \u201ccurvature\u201d somewhat arbitrary as it can be scaled without changing the encoded function. Optimizers that specifically account for the weight magnitude would be invariant to these effects which may reduce the need for warmup from the traditional curvature perspective. Although standard transformers are not fully scale-invariant, many of the angular update insights still approximately hold for un-normalized weights [19]. ", "page_idx": 4}, {"type": "text", "text": "In light of this, we modify LionA to better control the angular update size by making the updates to weight matrices proportional to their weight magnitude, resulting in algo. 3. We normalize the angular update size to match the equilibrium value, replacing weight decay with projections similar to Kosson et al. [19]. However, unlike their RVs, we make the angular updates proportional to the learning rate schedule which we found was necessary for good performance in our case. We also do not rely on additional exponential moving averages to control the angular update size, instead utilizing the fixed update size from the LionA optimizer. This is similar to the Adam scheme used by Karras et al. [17] with good results for diffusion models. No additional normalization operations or scaling factors are introduced, which we still find to result in decent performance. ", "page_idx": 4}, {"type": "text", "text": "Algorithm 3 LionAR: A rotational version of algo. 2 inspired by Kosson et al. [19]. The parameter vector is divided into sub-vectors $\\pmb{\\theta}=[\\pmb{\\theta}^{(1)},\\dots,\\pmb{\\theta}^{(P)}]$ , each corresponding to either the weight vector of a neuron (e.g. a matrix row / a convolutional filter), or other parameters such as gains and biases. The updates of neuronal weight vectors are scaled to be proportional to their magnitude which is kept constant through projections that replace weight decay. Additional hyperparameter adjustments are made for compatibility with AdamW. The weight decay hyperparameter remains, fulfilling its primary role as a scaling factor for the relative updates of neurons [19]. ", "page_idx": 5}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/a72004437aa3abe6ca1c975a6e5d95787351a63e726ecf70c11dfdc2365134f8.jpg", "img_caption": ["Figure 3: LionAR (algo. 3) reduces but does not fully eliminate the benefit of warmup. Panel 1: LionAR is more stable across learning rates and shows a reduced but still significant performance gap without warmup. Panel 2: Comparing the $0\\%$ and $5\\%$ warmup for learning rate $\\approx\\!10^{-2}$ shows the warmup run overtaking early in training. Panel 3: LionAR precisely controls the angular update size throughout training. Panel 4: Despite fixed angular (and thus relative) updates in weight space, the relative change of the internal representations (see $\\S6,$ ) is large initially without warmup. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "Figure 3 repeats the GPT2 training sweep with LionAR. Consistent with the findings of Kosson et al. [19] we find that controlling the angular updates stabilizes training and decreases the benefit from warmup, but does not entirely eliminate it in this setting. Both the angular change and the $\\ell_{2}$ -norm are simple measures of the update magnitude in parameter space that do not account for the direction or other aspects of the update. In the next section we show how a fixed update size in parameter space can result in large changes to the internal representations of the network (a.k.a. features, activations etc), as shown in the final panel of fig. 3. ", "page_idx": 5}, {"type": "text", "text": "6 Early Gradient Alignment Results in Large Representation Changes ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Our two approaches to measuring and controlling the update size in weight space failed to fully explain the need for warmup. As an alternative to the parameters, we can analyze changes in the internal representations or activations of the neural network (feature learning). Although this is harder to analyze and control, it may ultimately be a better measure of the true impact of an update. A parameter update can only affect the network output, and hence the loss, by changing the representation of the network inputs at some layer. Large, sudden, changes in the representations could significantly affect the non-linearities, potentially causing lasting issues such as dead ReLUs or vanishing gradients from saturated sigmoids. This could in turn explain the lasting performance degradation observed without warmup. ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "A given parameter update will affect the representations of each distinct input sample differently. The gradients computed on these samples also generally differ, but can align to some extent. For a higher gradient alignment, the impact of a parameter update of a given magnitude on the representations will be larger than otherwise. We will analyze this for a dot product making up a single neuron: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\pmb{y}=\\pmb{w}^{\\top}\\pmb{X}=[y_{1},\\dots,y_{B}]^{\\top}=[\\langle\\pmb{w},\\pmb{x}_{1}\\rangle,\\dots,\\langle\\pmb{w},\\pmb{x}_{B}\\rangle]^{\\top}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\pmb{X}=[\\pmb{x}_{1},\\dots,\\pmb{x}_{B}]\\in\\mathbb{R}^{C\\times B}$ are the $C$ -dimensional representations of a random mini-batch of $B$ inputs that is fed into the neuron, $\\pmb{w}\\in\\mathbb{R}^{C}$ is the weight vector, and $\\pmb{y}\\in\\mathbb{R}^{B}$ is a batch of outputs. For a weight update $\\pmb{w}\\mapsto\\pmb{w}+\\Delta\\pmb{w}$ , we aim to quantify the size of the output change $\\Delta y=\\Delta w^{\\dagger}X$ computed on the same inputs. We focus on the Relative Representation Change $(R R C)$ : ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\frac{||\\Delta\\pmb{y}||}{||\\pmb{y}||}=\\frac{||\\Delta\\pmb{w}^{\\top}\\pmb{X}||}{||\\pmb{w}^{\\top}\\pmb{X}||}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "similar to the angular weight updates, as the sensitivity to the absolute change $\\left|\\left|\\Delta\\boldsymbol{y}\\right|\\right|$ can be unclear due to normalization or other scaling operations. Note that this is a measure of a local change, not accounting for changes in the inputs $\\mathbf{\\deltaX}$ from updates to preceding layers (global change). ", "page_idx": 6}, {"type": "text", "text": "6.1 Normalized Gradient Descent ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We will focus our analysis on the relatively tractable case of normalized gradient descent with updates: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\Delta{\\pmb w}=-\\eta\\frac{g}{\\sqrt{\\mathbb{E}[\\|g\\|^{2}]}},\\qquad g=\\frac{1}{B}\\sum_{b=1}^{B}g_{b}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\mathbf{\\mathit{g}}_{b}$ is the gradient of some loss w.r.t. $\\mathbf{\\nabla}w$ for the $b$ -th element of the mini-batch. We will use the following definitions, properties, lemmas and assumptions for this system (see appx. B.4 for details): ", "page_idx": 6}, {"type": "text", "text": "\u2022 D1: We define $g_{b}=:\\bar{g}+\\tilde{g}_{b}$ where $\\bar{\\pmb{g}}=\\mathbb{E}[\\pmb{g}]$ and $\\tilde{\\pmb{g}}_{b}$ is the difference with $\\mathbb{E}[\\tilde{\\pmb{g}}_{b}]=\\mathbf{0}$ . \u2022 D2: We define $\\varphi:=\\mathbb{E}[\\|\\bar{\\pmb{g}}\\|^{2}]/\\mathbb{E}[\\|\\tilde{\\pmb{g}}_{b}\\|^{2}]$ as the Signal-to-Noise Ratio (SNR) of the gradient. \u2022 P1: For a neuron, $\\mathbfit{g}_{b}\\parallel\\mathbfit{x}_{b}$ , and hence $x_{b}=\\mathrm{sign}(\\langle\\pmb{x}_{b},\\pmb{g}_{b}\\rangle)\\cdot(\\|\\pmb{x}_{b}\\|/\\|\\pmb{g}_{b}\\|)\\cdot(\\bar{\\pmb{g}}+\\tilde{\\pmb{g}}_{b})$ . \u2022 L1: Consider two independent random vectors $\\textbf{\\em a}\\in\\mathbb{R}^{C}$ and $\\pmb{b}\\in\\mathbb{R}^{C}$ , whose elements are independent and identically distributed (IID). If at least one of the vectors has a zero-mean distribution, then the expected value of the squared inner product of $\\textbf{\\em a}$ and $^{b}$ is given by $\\mathbb{E}[\\langle\\pmb{a},\\pmb{b}\\rangle^{2}]=\\mathbb{E}[\\|\\pmb{a}\\|^{2}]\\mathbb{E}[\\|\\pmb{\\dot{b}}\\|^{2}]/C$ . \u2022 A1: We assume the following vector pairs satisfy L1: $(x_{i},\\Tilde{g}_{b})$ when $i\\neq b$ , $(\\bar{g},\\tilde{g}_{b})$ and $(w,x_{b})$ . ", "page_idx": 6}, {"type": "text", "text": "This allows us to compute the expected square relative representation change (detailed in appx. B.4): ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\frac{\\mathbb{E}[(\\Delta y_{b})^{2}]}{\\mathbb{E}[y_{b}^{2}]}=\\frac{\\eta^{2}C}{B^{2}\\|w\\|^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\Bigg(\\mathbb{E}[\\|g_{b}\\|^{2}]+\\frac{B-1}{C}\\mathbb{E}[\\|\\tilde{g}_{i}\\|^{2}]}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad+\\frac{(B-1)^{2}}{\\mathbb{E}[\\|g_{b}\\|^{2}]}\\left(\\|\\bar{g}\\|^{4}+\\frac{\\|\\bar{g}\\|^{2}\\mathbb{E}[\\|\\tilde{g}_{b}\\|^{2}]}{C}\\right)+2(B-1)\\|\\bar{g}\\|^{2}\\Bigg)}\\\\ &{\\qquad=\\frac{\\eta^{2}C}{B^{2}\\|w\\|^{2}}\\frac{1}{\\varphi+\\frac{1}{B}}\\Bigg((\\varphi\\!+\\!1)+\\frac{B-1}{C}+\\left(\\frac{(B\\!-\\!1)^{2}\\varphi}{\\varphi+1}\\left(\\varphi\\!+\\!\\frac{1}{C}\\right)+2(B\\!-\\!1)\\varphi\\right)\\Bigg)}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "The expected relative change in the output for a given sample can be broken down into three sources, the contribution of the sample itself (first term), random interference from the \u201cnoise\u201d $\\tilde{\\pmb{g}}_{i}$ of other samples (second term), and finally amplification of the common mean component $\\bar{\\pmb g}$ (third term). ", "page_idx": 6}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/acc6e9e268c6333cd55b3dcc6620e1a3a27252d560f9537948f68d21cee60816.jpg", "img_caption": ["Figure 4: Equation (9) predicts that the learning rate needs to be downscaled for higher signal to noise ratios $\\left(\\varphi\\right)$ to keep the relative representation change constant. Larger batch sizes are affected more, with scaling becoming significant when $\\varphi>B^{-1}$ . Panel 2: Measurements of the SNR for the two highlighted runs in fig. 3. Note the SNR starts very high but is also remains large in comparison to our $B=480$ for almost all of training. Panel 3: The gradient is strongly oppositely aligned with the momentum vector for most of training (shown for an example layer). Panel 4: Projecting the momentum component of the updates onto the gradient component shows that this results in the momentum vector \u201ccancelling\u201d roughly half the gradient on average. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "The RRC expression provides many interesting insights. In the case of large input dimension $C\\to\\infty$ and small SNR $\\varphi\\approx0$ , keeping the RRC constant for different batch sizes involves scaling the learning rate $\\eta\\propto\\sqrt{B}$ , as suggested by Malladi et al. [27] for Adam. When the SNR $\\varphi$ is some finite and value and $C$ is still large, this scaling rule instead starts to break down around $B=1/\\varphi$ , matching the predicted critical batch size of e.g. McCandlish et al. [28]. The role of the dimension $C$ in the expression is curious, suggesting that narrower layers experience larger changes due to random inference from other samples in a given batch. The $C$ in the leading factor also suggests that the angular updates can be smaller for a larger input dimension, similar to what is proposed in $\\mu$ -parameterization [44, 45]. Most importantly, this expression shows that if the SNR changes throughout training the learning rate needs to be adjusted to keep the RRC constant. In particular, with large batch sizes, a high initial SNR results in large representation changes which warmup can help prevent. The first panel of fig. 4 shows how eq. (9) predicts we should downscale the lear\u221aning rate for different batch sizes and SNRs, assuming we originally scaled the learning rate $\\eta\\propto\\sqrt{B}$ and that $C$ is large. The second panel confirms that the SNR indeed starts out large, suggesting lower initial learning rates are needed, i.e. warmup. ", "page_idx": 7}, {"type": "text", "text": "In the first panel of fig. 5, we show the results of adding a term that scales the update size as predicted by eq. (9). This acts similar to an automatic warmup based on online measurements of the SNR which we obtain from the gradient accumulation of micro-batches. Although this helps close the gap between warmup and no-warmup, the overall performance is slightly worse. One potential issue is that our batch size of 480 is quite large compared to the measured SNR, exceeding the critical batch size estimation throughout most of training. This results in a scaling of the step size throughout training, which distorts the decay phase. It also requires large learning rate values to counteract the scaling, which may destabilize the training of non-matrix weights like gains. We increase the weight decay by a factor of $32\\times$ to try to increase the angular updates relative to gains in order to compensate, but this value was not tuned and is unlikely to be optimal. We believe approaches that aim to directly control the RRC are a promising direction but require further work to be practical. ", "page_idx": 7}, {"type": "text", "text": "6.2 The Role of Momentum ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Momentum is believed to be a key enabler of optimization with larger batch sizes [32, 39, 31]. However, it is unclear how it should change predictions for the critical batch size or relative representation change. Momentum spreads the application of a gradient out over multiple steps which tends to make each update smaller, especially for a random walk, which is reflected in our scaling coefficients in algo. 2 and 3. The smaller updates are counteracted by an increased correlation in their direction, which can result in similar \u201clong term\u201d changes from each gradient sample, especially for simpler methods like SGD that don\u2019t normalize the step size. In the last two panels of fig. 4 we observe that in our setup the gradient and momentum are negatively correlated, counteracting each other. We find momentum crucial for performant training, panel 2 of fig. 5 shows significant degradation without it. ", "page_idx": 7}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/d7f73ec93de798136006ac00aa283fedfe3196ea5c2e4f2cd73bbea51f94ccbc.jpg", "img_caption": ["Figure 5: Panel 1: LionAR with a correction factor for the RRC based on eq. (9) does not benefti from a warmup. Panel 2: LionAR training without momentum results in drastically lower performance. Panel 3: In LionAR with increased momentum $\\beta=0.98$ , Nesterov momentum and an inverse bias correction for early momentum, no warmup performs best. Panel 4: The same does not apply to LionA, suggesting that these changes are not sufficient without controlling the angular updates. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "We believe the smaller update sizes for momentum combined with the potential for later gradients to counteract earlier gradients during their application over time, can help stabilize training. An otherwise large relative representation change is spread out over multiple steps and counteracted by later gradients. Higher values of momentum should amplify these effects. Looking at the total contribution of each gradient also implies that with momentum early updates should be smaller when measured in parameter space, otherwise the relative representation change for those samples is too large. This is equivalent to entirely removing the $\\beta_{1}$ bias correction in AdamW (algo. 1, line 7), or introducing an inverse bias correction in Lion like algorithms (see appx. B.1 for details). Higher $\\beta$ values should help amplify the stabilization effects of momentum. In fig. 5 we find that at higher momentum values LionAR no longer benefits from warmup unlike LionA which still needs it. These experiments use Nesterov momentum and the additional inverse bias correction, though these adjustments offer only minor improvements compared to higher momentum. ", "page_idx": 8}, {"type": "text", "text": "7 The Detrimental Effects of Large Updates ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In appx. A we empirically investigate potential causes for the lasting performance degradation from large initial updates for a small ResNet model. We find that the performance impact best correlates with the number of dead ReLUs and is improved by the use of leaky-ReLUs, which ftis well with our perspective of large changes in the internal representations. We also investigated whether overftiting to initial training samples or the correlation between weight vectors of different neurons could explain the necessity for warmup, but these factors did not show a significant impact. ", "page_idx": 8}, {"type": "text", "text": "8 The Role of Larger Batch Sizes ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Warmup is often used with larger batch sizes in particular, for example in the setting where Goyal et al. [10] first proposed using linear warmup. Although this was for SGD, we expect the need for warmup to be amplified at larger batch sizes for two of the reasons we identified. The first is that larger batch sizes are more likely to exceed the critical batch size early in training. The second is the size of early angular updates. As shown by Kosson et al. [19], the equilibrium weight magnitude depends on the learning rate and weight decay value. Common hyperparameter scaling rules for a modified batch size only change the learning rate but not the weight decay, which shifts the equilibrium magnitude. The smaller the initialization magnitude is compared to the equilibrium magnitude, the larger the early angular updates will be relative to their steady state value, potentially necessitating warmup. ", "page_idx": 8}, {"type": "text", "text": "9 Limitations ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Our main experiments focus on a single network which may not be broad enough to generalize to a wide range of networks. In appx. C.2 we experiments with an additional dataset and architecture but the scale of the experiments is still limited and they cover a limited range of hyperparameters. We believe we identify real factors that contribute to the need for warmup, but these may not be the only ones across a broader range of settings. Similarly, the promising results for reducing or eliminating the warmup with higher momentum values or the relative representation correction would benefit from broader validation. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "10 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work we explored how the size of the updates $\\Delta{\\pmb w}=\\eta{\\pmb u}$ impacts the need for learning rate warmup. We showed that $\\textbf{\\em u}$ can be large initially when measured in terms of its $\\ell_{2}$ -norm (\u00a74), the resulting directional change in $\\pmb{w}$ (angular update, $\\S5$ ), as well as the resulting change in the internal representations of the network (relative representation change, $\\S6_{.}$ ). We argued that small initial values of the learning rate $\\eta$ are beneficial to counteract large values of $\\textbf{\\em u}$ , i.e. that a learning rate warmup simply keeps some notion of the overall \u201ceffective\u201d update size reasonable. We showed this experimentally rather than theoretically by modifying the optimizers to normalize the size of $\\textbf{\\em u}$ based on each metric and measuring how these changes affected the benefti of using learning rate warmup. ", "page_idx": 9}, {"type": "text", "text": "The two weight-based measures of the update size, the $\\ell_{2}$ -norm and angular update did not fully account for the need for warmup. However, quantifying the update size in terms of the relative change in neural representations shows potential. This measure is closely linked to the angular update size but accounts for changes in the signal characteristics of the gradient, which can vary significantly throughout training. Effectively controlling neural representation changes is a challenging task we leave for future work, but our initial attempts show encouraging results in reducing the need for a manually configured warmup. We also highlighted the importance of high momentum for warmup; when combined with angular update control and an inverse bias correction, it may enable efficient warmup-free training. Overall, our work provides new insights into the benefit of learning rate warmup with modern optimizers beyond SGD and suggests potential directions for eliminating it. ", "page_idx": 9}, {"type": "text", "text": "Although we present new methods we consider promising, we still recommend the use of a short warmup in practice. Fully eliminating it seems to require significant modifications that also need further validation across additional settings. However, we hope to have provided the reader with a new perspective and simple intuition for why warmup is beneficial for training. We also hope our work inspires further exploration of how learning should be controlled and scheduled in neural network training. In particular, it seems that the learning rate in current optimizers does not really control the \u201crate of learning\u201d, making learning rate schedules and the use of warmup highly arbitrary. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint arXiv:1607.06450, 2016. 5   \n[2] Jeremy Bernstein, Arash Vahdat, Yisong Yue, and Ming-Yu Liu. On the distance between two neural networks and the stability of learning. Advances in Neural Information Processing Systems, 33:21370\u201321381, 2020. arXiv:2002.03432. 2   \n[3] Xiangning Chen, Chen Liang, Da Huang, Esteban Real, Kaiyuan Wang, Hieu Pham, Xuanyi Dong, Thang Luong, Cho-Jui Hsieh, Yifeng Lu, and Quoc V Le. Symbolic discovery of optimization algorithms. In Thirty-seventh Conference on Neural Information Processing Systems, 2023. URL https://openreview.net/forum?id $\\equiv$ ne6zeqLFCZ. arXiv:2302.06675. 1, 4, 5   \n[4] Vitaliy Chiley, Ilya Sharapov, Atli Kosson, Urs Koster, Ryan Reece, Sofia Samaniego de la Fuente, Vishal Subbiah, and Michael James. Online normalization for training neural networks. Advances in Neural Information Processing Systems, 32, 2019. arXiv:1905.05894. 5   \n[5] Katie E Everett, Lechao Xiao, Mitchell Wortsman, Alexander A Alemi, Roman Novak, Peter J Liu, Izzeddin Gur, Jascha Sohl-Dickstein, Leslie Pack Kaelbling, Jaehoon Lee, and Jeffrey Pennington. Scaling exponents across parameterizations and optimizers. In Forty-first International Conference on Machine Learning, 2024. URL https://openreview.net/forum? id=0ksNeD1SJT. arXiv:2407.05872. 18   \n[6] Jingwen Fu, Bohan Wang, Huishuai Zhang, Zhizheng Zhang, Wei Chen, and Nanning Zheng. When and why momentum accelerates sgd: An empirical study. arXiv preprint arXiv:2306.09000, 2023. 2   \n[7] Justin Gilmer, Behrooz Ghorbani, Ankush Garg, Sneha Kudugunta, Behnam Neyshabur, David Cardoze, George Edward Dahl, Zachary Nado, and Orhan Firat. A loss curvature perspective on training instabilities of deep learning models. In International Conference on Learning Representations, 2022. URL https://openreview.net/forum?id $\\equiv$ OcKMT-36vUs. arXiv:2110.04369. 2   \n[8] Aaron Gokaslan and Vanya Cohen. Openwebtext corpus. http://Skylion007.github.io/ OpenWebTextCorpus, 2019. 2, 22   \n[9] Akhilesh Gotmare, Nitish Shirish Keskar, Caiming Xiong, and Richard Socher. A closer look at deep learning heuristics: Learning rate restarts, warmup and distillation. In International Conference on Learning Representations, 2019. URL https://openreview.net/forum? id=r14EOsCqKX. arXiv:1810.13243. 2   \n[10] Priya Goyal, Piotr Doll\u00e1r, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He. Accurate, large minibatch sgd: Training imagenet in 1 hour. arXiv preprint arXiv:1706.02677, 2017. 1, 2, 9   \n[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770\u2013778, 2016. arXiv:1512.03385. 1, 2, 14   \n[12] Jordan Hoffmann, Sebastian Borgeaud, Arthur Mensch, Elena Buchatskaya, Trevor Cai, Eliza Rutherford, Diego de Las Casas, Lisa Anne Hendricks, Johannes Welbl, Aidan Clark, et al. Training compute-optimal large language models. arXiv preprint arXiv:2203.15556, 2022. URL https://arxiv.org/abs/2203.15556. 2   \n[13] Xiao Shi Huang, Felipe Perez, Jimmy Ba, and Maksims Volkovs. Improving transformer optimization through better initialization. In International Conference on Machine Learning, pages 4475\u20134483. PMLR, 2020. URL https://proceedings.mlr.press/v119/ huang20f.html. 2   \n[14] Xun Huang and Serge Belongie. Arbitrary style transfer in real-time with adaptive instance normalization. In Proceedings of the IEEE international conference on computer vision, pages 1501\u20131510, 2017. arXiv:1703.06868. 5   \n[15] Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by reducing internal covariate shift. In International conference on machine learning, pages 448\u2013456. pmlr, 2015. arXiv:1502.03167. 5   \n[16] Andrej Karpathy. nanogpt. https://github.com/karpathy/nanoGPT/, 2023. 3   \n[17] Tero Karras, Miika Aittala, Jaakko Lehtinen, Janne Hellsten, Timo Aila, and Samuli Laine. Analyzing and improving the training dynamics of diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 24174\u201324184, 2024. arXiv:2312.02696. 5   \n[18] Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In International Conference on Learning Representations (ICLR), San Diega, CA, USA, 2015. arXiv:1412.6980. 2   \n[19] Atli Kosson, Bettina Messmer, and Martin Jaggi. Rotational equilibrium: How weight decay balances learning across neural networks. In Forty-first International Conference on Machine Learning, 2024. URL https://openreview.net/forum?id $\\fallingdotseq$ MQirNNU2pC. arXiv:2305.17212. 2, 3, 5, 6, 9, 14, 16   \n[20] Alex Krizhevsky. Learning multiple layers of features from tiny images. self-published, 2009. URL https://www.cs.toronto.edu/\\~kriz/learning-features-2009-TR.pdf. 14   \n[21] Zhiyuan Li, Kaifeng Lyu, and Sanjeev Arora. Reconciling modern deep learning with traditional optimization analyses: The intrinsic learning rate. Advances in Neural Information Processing Systems, 33:14544\u201314555, 2020. arXiv:2010.02916. 2   \n[22] Zhiyuan Li, Sadhika Malladi, and Sanjeev Arora. On the validity of modeling SGD with stochastic differential equations (SDEs). In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, 2021. URL https://openreview.net/forum?id $=$ goEdyJ_nVQI. arXiv:2102.12470. 2   \n[23] Liyuan Liu, Haoming Jiang, Pengcheng He, Weizhu Chen, Xiaodong Liu, Jianfeng Gao, and Jiawei Han. On the variance of the adaptive learning rate and beyond. In International Conference on Learning Representations, 2020. URL https://openreview.net/forum? id=rkgz2aEKDr. arXiv:1908.03265. 2, 21   \n[24] Ilya Loshchilov and Frank Hutter. Decoupled weight decay regularization. In International Conference on Learning Representations, 2019. URL https://openreview.net/forum? id=Bkg6RiCqY7. arXiv:1711.05101. 1, 2, 3, 21   \n[25] Kaifeng Lyu, Zhiyuan Li, and Sanjeev Arora. Understanding the generalization benefit of normalization layers: Sharpness reduction. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and Kyunghyun Cho, editors, Advances in Neural Information Processing Systems, 2022. URL https://openreview.net/forum?id $=$ xp5VOBxTxZ. arXiv:2206.07085. 16   \n[26] Jerry Ma and Denis Yarats. On the adequacy of untuned warmup for adaptive optimization. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, pages 8828\u20138836, 2021. arXiv:1910.04209. 2, 21   \n[27] Sadhika Malladi, Kaifeng Lyu, Abhishek Panigrahi, and Sanjeev Arora. On the SDEs and scaling rules for adaptive gradient algorithms. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and Kyunghyun Cho, editors, Advances in Neural Information Processing Systems, 2022. URL https://openreview.net/forum?id $\\equiv$ F2mhzjHkQP. arXiv:2205.10287. 2, 8   \n[28] Sam McCandlish, Jared Kaplan, Dario Amodei, and OpenAI Dota Team. An empirical model of large-batch training. arXiv preprint arXiv:1812.06162, 2018. 2, 8   \n[29] Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language models are unsupervised multitask learners. self-published, 2019. URL https://d4mucfpksywv.cloudfront.net/better-language-models/ language_models_are_unsupervised_multitask_learners.pdf. 1, 2   \n[30] Tim Salimans and Durk P Kingma. Weight normalization: A simple reparameterization to accelerate training of deep neural networks. Advances in neural information processing systems, 29, 2016. arXiv:1602.07868. 5   \n[31] Christopher J Shallue, Jaehoon Lee, Joseph Antognini, Jascha Sohl-Dickstein, Roy Frostig, and George E Dahl. Measuring the effects of data parallelism on neural network training. Journal of Machine Learning Research, 20(112):1\u201349, 2019. arXiv:1811.03600. 8   \n[32] Samuel Smith, Erich Elsen, and Soham De. On the generalization benefti of noise in stochastic gradient descent. In International Conference on Machine Learning, pages 9058\u20139067. PMLR, 2020. arXiv:2006.15081. 2, 8   \n[33] Daria Soboleva, Faisal Al-Khateeb, Robert Myers, Jacob R Steeves, Joel Hestness, and Nolan Dey. Slimpajama: A 627b token cleaned and deduplicated version of redpajama. https://cerebras.ai/blog/ slimpajama-a-627b-token-cleaned-and-deduplicated-version-of-redpajama, 2023. 21, 22   \n[34] Sebastian Stich, Amirkeivan Mohtashami, and Martin Jaggi. Critical parameters for scalable distributed learning with large batches and asynchronous updates. In International Conference on Artificial Intelligence and Statistics, pages 4042\u20134050. PMLR, 2021. arXiv:2103.02351. 2   \n[35] Ilya Sutskever, James Martens, George Dahl, and Geoffrey Hinton. On the importance of initialization and momentum in deep learning. In International conference on machine learning, pages 1139\u20131147. PMLR, 2013. URL https://proceedings.mlr.press/v28/sutskever13. html. 2 [36] Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023. 22 [37] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in neural information processing systems, 30, 2017. arXiv:1706.03762. 1, 2 [38] Ruosi Wan, Zhanxing Zhu, Xiangyu Zhang, and Jian Sun. Spherical motion dynamics: Learning dynamics of normalized neural network using sgd and weight decay. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P.S. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, volume 34, pages 6380\u20136391. Curran Associates, Inc., 2021. URL https://proceedings.neurips.cc/paper/2021/file/   \n326a8c055c0d04f5b06544665d8bb3ea-Paper.pdf. arXiv:2006.08419. 4, 5 [39] Runzhe Wang, Sadhika Malladi, Tianhao Wang, Kaifeng Lyu, and Zhiyuan Li. The marginal value of momentum for small learning rate SGD. In The Twelfth International Conference on Learning Representations, 2024. URL https://openreview.net/forum?id=3JjJezzVkT. arXiv:2307.15196. 8 [40] Ross Wightman. Pytorch image models. https://github.com/rwightman/ pytorch-image-models, 2019. 14 [41] Mitchell Wortsman, Peter J Liu, Lechao Xiao, Katie Everett, Alex Alemi, Ben Adlam, John D Co-Reyes, Izzeddin Gur, Abhishek Kumar, Roman Novak, et al. Small-scale proxies for large-scale transformer training instabilities. arXiv preprint arXiv:2309.14322, 2023. URL https://arxiv.org/abs/2309.14322. 2 [42] Yuxin Wu and Kaiming He. Group normalization. In Proceedings of the European conference on computer vision (ECCV), pages 3\u201319, 2018. arXiv:1803.08494. 5 [43] Ruibin Xiong, Yunchang Yang, Di He, Kai Zheng, Shuxin Zheng, Chen Xing, Huishuai Zhang, Yanyan Lan, Liwei Wang, and Tieyan Liu. On layer normalization in the transformer architecture. In International Conference on Machine Learning, pages 10524\u201310533. PMLR,   \n2020. arXiv:2002.04745. 2 [44] Greg Yang, Edward J Hu, Igor Babuschkin, Szymon Sidor, Xiaodong Liu, David Farhi, Nick Ryder, Jakub Pachocki, Weizhu Chen, and Jianfeng Gao. Tuning large neural networks via zero-shot hyperparameter transfer. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, 2021. URL https: //openreview.net/forum?id $\\cdot$ Bx6qKuBM2AD. arXiv:2203.03466. 8 [45] Greg Yang, James B Simon, and Jeremy Bernstein. A spectral condition for feature learning. arXiv preprint arXiv:2310.17813, 2023. 8 [46] Dong Yin, Ashwin Pananjady, Max Lam, Dimitris Papailiopoulos, Kannan Ramchandran, and Peter Bartlett. Gradient diversity: a key ingredient for scalable distributed learning. In International Conference on Artificial Intelligence and Statistics, pages 1998\u20132007. PMLR,   \n2018. arXiv:1706.05699. 2 [47] Yang You, Igor Gitman, and Boris Ginsburg. Large batch training of convolutional networks. arXiv preprint arXiv:1708.03888, 2017. 2 [48] Yang You, Jing Li, Sashank Reddi, Jonathan Hseu, Sanjiv Kumar, Srinadh Bhojanapalli, Xiaodan Song, James Demmel, Kurt Keutzer, and Cho-Jui Hsieh. Large batch optimization for deep learning: Training bert in 76 minutes. In International Conference on Learning Representations,   \n2020. URL https://openreview.net/forum?id $\\equiv$ Syx4wnEtvH. arXiv:1904.00962. 2 [49] Guodong Zhang, Lala Li, Zachary Nado, James Martens, Sushant Sachdeva, George Dahl, Chris Shallue, and Roger B Grosse. Which algorithmic choices matter at which batch sizes? Insights from a noisy quadratic model. Advances in Neural Information Processing Systems, 32, 2019. arXiv:1907.04164. 2 ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/4e5fc10921327cc4161f5f0e3d85102079119a43102631673383d9b7fad9274b.jpg", "img_caption": ["Figure 6: The performance gap caused by large initial updates persists despite extended training (800 epochs) in a standard ResNet-20. We investigate the influence of network non-linearities by comparing two training methods while scaling update sizes during the 5 epoch initial phase by factors of 1, 8, and 128: Standard (S), which employs traditional ReLU activations, and Leaky ReLU, which replaces ReLUs with Leaky ReLUs using a scaling factor of $\\alpha=0.1$ . We observe that training with Leaky ReLU results in smaller performance degradation from large initial updates, suggesting that the non-linearities in the network might substantially impact the observed performance degradation. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "A The Detrimental Effects of Large Updates ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To investigate the effects of large updates at the beginning of training, we conducted controlled experiments on a ResNet-20 model on CIFAR-10 [20] due to resource constraints. We controlled the average angular update throughout training using the rotational optimizer variant of AdamW proposed by Kosson et al. [19]. For the initial phase of training, 5 epochs, we either use a standard learning rate of 0.05 or \u221aamplif\u221ay it by a factor of 8 or 128. This results in very large updates, scaling the rotation by either $\\sqrt{8}$ or $\\sqrt{128}$ . For all experiments, we used a weight decay of 0.01, $\\beta_{1}=0.9$ , $\\beta_{2}=0.999$ , 5 epoch initial phase, and trained for 205 epochs in total with a cosine schedule unless otherwise specified. The data was pre-processed by normalizing it with a mean of $(0.4914,0.4822,0.4465)$ and a standard deviation of $(0.2023,0.1994,0.2010)$ and applying simple data augmentation techniques as described by He et al. [11]. To run the experiment, we used the codebase from Wightman [40] and extended the utilities from Kosson et al. [19]. ", "page_idx": 13}, {"type": "text", "text": "As shown in fig. 6, the performance of standard training does not recover when large updates are used at the beginning of training, even when the training time is extended to four times the normal duration for ReLU networks. This suggest that large, controlled, initial updates can result in a permanent performance degradation, similar to what we observe without warmup in advanced settings. The impact is much smaller when replacing ReLUs with leaky ReLUs, suggesting that the non-linearities in the network might substantially contribute to the performance degradation. ", "page_idx": 13}, {"type": "text", "text": "In fig. 7 we measure the fraction of dead ReLUs directly across different settings and scaling factors. We find that large initial updates do indeed lead to a large number of permanently dead units and that the final accuracy suffers when this is the case. This effect can be mitigated by freezing the biases at the beginning of training, as shown in the table in fig. 7. We also observe that replacing the actual gradients with random gradients has a much smaller impact, suggesting that the direction of the updates also matters for the degradation, not only their size. ", "page_idx": 13}, {"type": "text", "text": "Interestingly, we did not find a connection to overftiting to a small number of samples at the beginning of training. The performance of 92.1 can be recovered in this case. Additionally, we explored stable rank measurements as a potential factor but did not find a significant relation, as detailed in fig. 8. ", "page_idx": 13}, {"type": "text", "text": "B Additional Mathematical and Technical Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "B.1 The magnitude of the Momentum Vector ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Let\u2019s assume a scalar gradient $g_{t}$ (e.g. for some coordinate) that is a random variable that is independent across time and has a zero mean distribution that does not change across time, i.e. $E[g_{t}]=0$ ", "page_idx": 13}, {"type": "table", "img_path": "ZgDNrpS46k/tmp/f6f85fef8dbc87728c2c01b91ff6d8376876c04e1074310d1dd810f1d4fb8a5a.jpg", "table_caption": [], "table_footnote": [], "page_idx": 14}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/a7bc3a831374a10bcd9b0813af0ad9cad502d40e6add16227240751799aaa2b6.jpg", "img_caption": [], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "Figure 7: Comparison of the performance (final test accuracy) and fraction of dead ReLUs (inactive activations) across different settings. The learning rate in the initial phase of 5 epochs is scaled by a factor of either 1, 8, or 128. Standard (S) denotes normal training, while Frozen Biases $(f b)$ involves freezing the biases at the onset of training. The Random $(R)$ approach employs random gradient directions at the start of training, and Leaky ReLU replaces the ReLUs in standard models with Leaky ReLUs using a scaling factor of $\\alpha=0.1$ . We observe a notable correspondence between large initial updates, higher ratios of dead ReLUs in ResNet-20, and performance degradation. ", "page_idx": 14}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/8f08e1819cb2f57cbdbd599eafd936b3747f23032e9219b98df16b3309afe4a0.jpg", "img_caption": ["Figure 8: Impact of varying update sizes during the warmup phase on the stable rank of a standard ResNet-20. The learning rate in the initial phase of 5 epochs is scaled by a factor of either 1, 8, or 128. We evaluate the effects of across different training configurations: Standard (S) denotes normal training; Frozen Biases $(f b)$ involves freezing the biases at the onset of training; and Random $(R)$ employs random gradient directions at the start of training. The stable rank remains largely consistent across these methods, except when using extremely large updates\u2014specifically, scaling the learning rate by a factor of 128 without freezing biases\u2014which leads to noticeable variations in the rank. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "and $\\mathbb{E}[g_{t}^{2}]=\\sigma^{2}$ . For standard heavyball-momentum $m_{t}$ , with $m_{0}=0$ and coefficient $\\beta$ (equivalent to $\\beta_{1}$ for Adam) we have: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[m_{t}^{2}]=\\mathbb{E}[(\\beta m_{t-1}+(1-\\beta)g)^{2}]}\\\\ &{\\qquad=\\mathbb{E}\\left[\\left((1-\\beta)\\underset{i=0}{\\overset{t-1}{\\sum}}\\beta^{i}\\ell_{t-i}\\right)^{2}\\right]}\\\\ &{\\qquad=\\mathbb{E}\\left[(1-\\beta)^{2}\\underset{i=0}{\\overset{t-1}{\\sum}}\\beta^{2i}g_{t-i}^{2}+(1-\\beta)^{2}\\underset{j=0}{\\overset{t-1}{\\sum}}\\underset{k\\neq0}{\\overset{t-1}{\\sum}}\\beta^{2i-j-k}g_{t-j}g_{g-k}\\right]}\\\\ &{\\qquad=(1-\\beta)^{2}\\underset{i=0}{\\overset{t-1}{\\sum}}\\beta^{2i}\\mathbb{E}[g_{t-i}^{2}]+(1-\\beta)^{2}\\underset{j=0}{\\overset{t-1}{\\sum}}\\underset{k\\neq0}{\\overset{t-1}{\\sum}}\\beta^{2i-j-k}\\mathbb{E}[g_{t-j}]\\mathbb{E}[g_{g-k}]}\\\\ &{\\qquad=(1-\\beta)^{2}\\underset{k\\neq0}{\\overset{t-1}{\\sum}}\\beta^{2i}\\sigma^{2}+0}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\begin{array}{l}{=(1-\\beta)^{2}{\\frac{1-\\beta^{2t}}{1-\\beta^{2}}}\\sigma^{2}}\\\\ {=(1-\\beta)^{2}{\\frac{1-\\beta^{2t}}{(1-\\beta)(1+\\beta)}}\\sigma^{2}}\\\\ {=(1-\\beta^{2t}){\\frac{1-\\beta}{1+\\beta}}\\sigma^{2}}\\end{array}}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "In the limit $t\\to\\infty$ we have $(1-\\beta^{2t})\\to1$ . We can derive the size of the second-moment $v_{t}$ in AdamW in an analogous way, obtaining $\\mathbb{E}[v_{t}]=(1-\\beta_{2}^{t})\\sigma^{2}$ . For a random walk, the update size of Adam is scaled in a similar way. Since the update size of Lion is fixed and does not depend on $\\beta$ , we scale the update size to match that of AdamW for a random walk in a steady state, i.e. by $\\begin{array}{r}{\\gamma=\\sqrt{\\frac{1-\\beta}{1+\\beta}}}\\end{array}$ as seen in algo. 2. ", "page_idx": 15}, {"type": "text", "text": "For Nesterov momentum, the update is modified to use: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{u_{t}=\\beta m_{t}+(1-\\beta)g_{t}}\\\\ &{\\quad=\\beta\\left(\\beta m_{t-1}+(1-\\beta)g_{t}\\right)+(1-\\beta)g_{t}}\\\\ &{\\quad=\\beta^{2}m_{t-1}+(1-\\beta)(1+\\beta)g_{t}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Note that $m_{t-1}$ and $g_{t}$ are independent and zero-mean, allowing us to use the previous result for: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[u_{t}^{2}]=\\mathbb{E}\\left[\\left(\\beta^{2}m_{t-1}+(1-\\beta)(1+\\beta)g_{t}\\right)^{2}\\right]}\\\\ &{\\qquad=\\beta^{4}\\mathbb{E}[m_{t-1}^{2}]+(1-\\beta^{2})^{2}\\mathbb{E}[g_{t}^{2}]}\\\\ &{\\qquad=\\beta^{4}(1-\\beta^{2t-2})\\frac{1-\\beta}{1+\\beta}\\sigma^{2}+(1-\\beta^{2})^{2}\\sigma^{2}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "In the limit $t\\to\\infty$ this gives the Nesterov scaling factor used in LionA (algo. 2) to ensure that the update size corresponds to that of AdamW using an analogous Nesterov update. ", "page_idx": 15}, {"type": "text", "text": "Inverse bias correction for momentum. Adam uses a bias correction to attempt to fix the update size over time. This scales early updates resulting in the contributions of the corresponding gradients being amplified. The relative representation change for those samples is increased as a result, similar to applying the same update multiple times. Removing the $\\beta_{1}$ bias correction from AdamW removes this effect. LionA and LionAR similarly scale the update size, making it constant. We can counteract this by changing our scaling factors to use the time varying expressions based on the derivations above. Note however, that this assumed the gradients were uncorrelated so it only approximately undoes the scaling effect for real values with arbitrary alignment of successive gradients. To summarize, the inverse bias correction for momentum changes the momentum scaling factors $\\gamma$ in algo. 3) to vary over time: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\mathrm{Nesterov:}\\qquad\\gamma_{t}=\\sqrt{(1-\\beta^{2})^{2}+(1-\\beta^{2t-2})\\beta^{4}\\frac{1-\\beta}{1+\\beta}}}}\\\\ {{\\mathrm{Heavy-ball:}\\qquad\\gamma_{t}=\\sqrt{(1-\\beta^{2t})\\frac{1-\\beta}{1+\\beta}}}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "B.2 Properties of Scale Invariance ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Derivations for the gradient magnitude and curvature can be found in existing works, for example Lyu et al. [25]. When a scale invariant weight is scaled by a factor $c>0$ , the gradient is scaled by $c^{\\dot{-}1}$ which scales the ratio of the gradient norm and weight norm, and therefore the angular updates, by $c^{-2}$ . For normalized optimizers like Adam and Lion, where the update norm is not affected by the gradient magnitude, this factor is decreased to $c^{-1}$ . ", "page_idx": 15}, {"type": "text", "text": "B.3 The Angular Update Size in LionAR ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The scaling factor for the angular update size in algo. 3 is adopted directly from the AdamW value derived by Kosson et al. [19]. Since the Nesterov momentum does not change the total contribution of each gradient it does not affect the equilibrium magnitude. The expected angular updates are therefore scaled in the same way as the RMS update norm we derived in appx. B.1. ", "page_idx": 15}, {"type": "text", "text": "B.4 Relative Representation Change for Normalized Gradient Descent ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Property $(\\mathbf{P1})$ : For a dot product ${\\boldsymbol y}=\\langle{\\boldsymbol w},{\\boldsymbol x}\\rangle$ and loss $\\mathcal{L}(\\pmb{x}_{b})$ that depends on $y$ , we have: ", "page_idx": 16}, {"type": "equation", "text": "$$\n{\\frac{\\partial{\\mathcal{L}}(\\mathbf{x}_{b})}{\\partial\\mathbf{w}}}={\\frac{\\partial{\\mathcal{L}}(\\mathbf{x}_{b})}{\\partial y}}{\\frac{\\partial y}{\\partial\\mathbf{w}}}={\\frac{\\partial{\\mathcal{L}}(\\mathbf{x}_{b})}{\\partial y}}\\mathbf{x}_{b}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where \u2202L\u2202 (yxb)is a scalar, ensuring that gb := \u2202L\u2202 (wxb)\u2225xb, assuming the vectors are not zero. ", "page_idx": 16}, {"type": "text", "text": "Lemma (L1): Consider two independent random vectors $\\pmb{a}\\in\\mathbb{R}^{C}$ and $\\pmb{b}\\in\\mathbb{R}^{C}$ , whose elements are independent and identically distributed (IID). If at least one of the vectors has a zero-mean distribution, then the expected value of the squared inner product of $\\textbf{\\em a}$ and $^{b}$ is given by: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\langle\\pmb{a},\\pmb{b}\\rangle^{2}]=\\frac{\\mathbb{E}[\\|\\pmb{a}\\|^{2}]\\mathbb{E}[\\|\\pmb{b}\\|^{2}]}{C}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Proof: Let $\\pmb{a}=(a_{1},a_{2},\\dots,a_{C})$ and $\\pmb{b}=(b_{1},b_{2},\\ldots,b_{C})$ . The inner product $\\langle\\pmb{a},\\pmb{b}\\rangle$ is given by: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\langle\\pmb{a},\\pmb{b}\\rangle=\\sum_{i=1}^{C}a_{i}b_{i}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "We need to find $\\mathbb{E}[\\langle\\mathbf{a},b\\rangle^{2}]$ . Expanding the square of the inner product: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\langle a,b\\rangle^{2}=\\left(\\sum_{i=1}^{C}a_{i}b_{i}\\right)^{2}=\\sum_{i=1}^{C}\\sum_{j=1}^{C}a_{i}b_{i}a_{j}b_{j}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Taking the expectation, we get: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\langle a,b\\rangle^{2}]=\\mathbb{E}\\left[\\sum_{i=1}^{C}\\sum_{j=1}^{C}a_{i}b_{i}a_{j}b_{j}\\right]=\\sum_{i=1}^{C}\\sum_{j=1}^{C}\\mathbb{E}[a_{i}b_{i}a_{j}b_{j}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Since $\\textbf{\\em a}$ and $^{b}$ are independent and their elements are IID, we have: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{i}b_{i}a_{j}b_{j}]=\\mathbb{E}[a_{i}a_{j}]\\mathbb{E}[b_{i}b_{j}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Consider two cases: ", "page_idx": 16}, {"type": "text", "text": "1. When $i=j$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{i}b_{i}a_{i}b_{i}]=\\mathbb{E}[a_{i}^{2}]\\mathbb{E}[b_{i}^{2}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "2. When $i\\neq j$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{i}b_{i}a_{j}b_{j}]=\\mathbb{E}[a_{i}]\\mathbb{E}[b_{i}]\\mathbb{E}[a_{j}]\\mathbb{E}[b_{j}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Given that at least one of $\\textbf{\\em a}$ or $^{b}$ has a zero-mean distribution, say $\\textbf{\\em a}$ without loss of generality, we have $\\mathbb{E}[a_{i}]=0$ . Thus: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{i}b_{i}a_{j}b_{j}]=0.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "So, the expectation simplifies to: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\langle a,b\\rangle^{2}]=\\sum_{i=1}^{C}\\mathbb{E}[a_{i}^{2}]\\mathbb{E}[b_{i}^{2}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Since $a_{i}$ and $b_{i}$ are IID, we have: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{i}^{2}]=\\mathbb{E}[a_{1}^{2}]\\quad\\mathrm{and}\\quad\\mathbb{E}[b_{i}^{2}]=\\mathbb{E}[b_{1}^{2}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Therefore: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\langle\\pmb{a},\\pmb{b}\\rangle^{2}]=C\\mathbb{E}[\\pmb{a}_{1}^{2}]\\mathbb{E}[b_{1}^{2}].\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Recognizing that: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[\\|\\pmb{\\mathscr{a}}\\|^{2}]=\\mathbb{E}\\left[\\sum_{i=1}^{C}a_{i}^{2}\\right]=C\\mathbb{E}[a_{1}^{2}],}\\\\ &{\\mathbb{E}[\\|\\pmb{\\mathscr{b}}\\|^{2}]=\\mathbb{E}\\left[\\sum_{i=1}^{C}b_{i}^{2}\\right]=C\\mathbb{E}[b_{1}^{2}],}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "we have: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbb{E}[a_{1}^{2}]=\\frac{\\mathbb{E}[\\|\\pmb{a}\\|^{2}]}{C}\\quad\\mathrm{and}\\quad\\mathbb{E}[b_{1}^{2}]=\\frac{\\mathbb{E}[\\|\\pmb{b}\\|^{2}]}{C}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Thus: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\langle a,b\\rangle^{2}]=C\\left(\\frac{\\mathbb{E}[\\|a\\|^{2}]}{C}\\right)\\left(\\frac{\\mathbb{E}[\\|b\\|^{2}]}{C}\\right)=\\frac{\\mathbb{E}[\\|a\\|^{2}]\\mathbb{E}[\\|b\\|^{2}]}{C}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "This completes the proof. ", "page_idx": 17}, {"type": "text", "text": "Assumption (A1): We assume the following vector pairs satisfy L1: $(x_{i},\\Tilde{g}_{b})$ when $i\\neq b,(\\bar{g},\\tilde{g}_{b})$ and $(w,x_{b})$ . ", "page_idx": 17}, {"type": "text", "text": "Vector pairs of the type $(x_{i},\\Tilde{g}_{b})$ and $\\left(\\bar{\\pmb g},\\tilde{\\pmb g}_{b}\\right)$ should be independent and $\\tilde{\\pmb{g}}_{b}$ has a zero mean distribution. However, the elements of each vector are not necessarily IID. For $(w,{\\pmb x}_{b})$ , this is an even stronger assumption. Generally, neither $\\mathbf{\\nabla}w$ nor $\\mathbf{\\nabla}x_{b}$ is guaranteed to be IID or zero mean, and their independence later in training does not necessarily hold. Applying weight standardization to $\\pmb{w}$ or batch normalization to $\\textbf{\\em x}$ would suffice to make their mean zero. Overall, this assumption can be viewed as a simplifying approximation to obtain reasonable predictions without additional information about these vectors. Everett et al. [5] explore the behavior of $\\langle{\\pmb w},{\\pmb x}_{b}\\rangle$ throughout training and find that it is more complicated than assumed here. This will lead to additional factors that may affect the RRC but we do not attempt to analyze. ", "page_idx": 17}, {"type": "text", "text": "Deriving the Relative Representation Change: Applying L1 directly gives us the original expected square output : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathbb{E}[y_{b}^{2}]=\\mathbb{E}[\\langle\\pmb{w},\\pmb{x}_{b}\\rangle^{2}]=\\frac{\\|\\pmb{w}\\|^{2}\\mathbb{E}[\\|\\pmb{x}_{b}\\|^{2}]}{C}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "For the expected square representation change we get: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}[(\\Delta y_{b})^{2}]}\\\\ &{=\\mathbb{E}[(-\\eta g/\\sqrt{\\mathbb{E}[\\|g\\|^{2}]},x_{b})^{2}]}\\\\ &{=\\frac{\\eta^{2}}{B^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\mathbb{E}\\left[\\left(\\sum_{i=1}^{B}(g_{i},x_{b})\\right)^{2}\\right]}\\\\ &{=\\frac{\\eta^{2}}{B^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\mathbb{E}\\left[\\left(\\sin(\\langle x_{b},g_{b}\\rangle)\\|g_{b}\\|\\|x_{b}\\|+\\sum_{i\\neq B}\\sum_{i}(g_{i},x_{b})\\right)^{2}\\right]}\\\\ &{=\\frac{\\eta^{2}}{B^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\mathbb{E}\\left[\\left(\\sin(\\langle x_{b},g_{b}\\rangle)\\|g_{b}\\|\\|x_{b}\\|+(B-1)\\langle\\bar{g},x_{b}\\rangle+\\sum_{i\\neq b}\\sum_{i}(\\Tilde{g}_{i},x_{b})\\right)^{2}\\right]}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where we have used the definitions from eq. (7) and D1. Using property P1, we can write: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\langle\\bar{g},\\boldsymbol{x}_{b}\\rangle=\\biggl\\langle\\bar{g},\\mathrm{\\boldmath~\\sign}(\\langle\\boldsymbol{x}_{b},g_{b}\\rangle)\\frac{\\|\\boldsymbol{x}_{b}\\|}{\\|g_{b}\\|}\\cdot(\\bar{g}+\\tilde{g}_{b})\\biggr\\rangle}}\\\\ {{\\,=\\,\\mathrm{sign}(\\langle\\boldsymbol{x}_{b},g_{b}\\rangle)\\frac{\\|\\boldsymbol{x}_{b}\\|}{\\|g_{b}\\|}(\\|\\bar{g}\\|^{2}+\\langle\\bar{g},\\tilde{g}_{b}\\rangle)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Plugging this into the previous expression yields $\\mathbb{E}[(\\Delta y_{b})^{2}]$ ", "page_idx": 18}, {"type": "equation", "text": "$$\n=\\frac{\\eta^{2}}{B^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\mathbb{E}\\left[\\left(\\mathrm{sign}(\\langle x_{b},g_{b}\\rangle)\\Big(\\|g_{b}\\|\\|x_{b}\\|+(B-1)\\frac{\\|x_{b}\\|}{\\|g_{b}\\|}(\\|\\bar{g}\\|^{2}+\\langle\\bar{g},\\tilde{g}_{b}\\rangle)\\Big)+\\sum_{i\\neq b}\\langle\\tilde{g}_{i},x_{b}\\rangle\\right)^{2}\\right]\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Squaring the expression results in various cross but all remaining dot products except the sign one are zero in expectation (due to the noise $\\tilde{\\pmb g}$ ) and independent from each other. The cross terms involving these thus all disappear under the expectation. We apply Lemma L1 to their squares and approximate the expected norms of $\\mathbf{\\nabla}x_{b}$ and $\\mathit{\\textbf{g}}_{b}$ as being independent. This gives $\\mathbb{E}[(\\Delta y_{b})^{2}]$ ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle=\\frac{\\eta^{2}}{B^{2}}\\frac{\\mathbb{E}[\\|{\\pmb x}_{b}\\|^{2}]}{\\mathbb{E}[\\|{\\pmb g}\\|^{2}]}\\left(\\mathbb{E}[\\|{\\pmb g}_{b}\\|^{2}]+\\frac{(B-1)^{2}\\|{\\pmb g}\\|^{2}}{\\mathbb{E}[\\|{\\pmb g}\\|^{2}]}\\left(\\|{\\pmb g}\\|^{2}+\\frac{\\mathbb{E}[\\|{\\pmb g}_{b}\\|^{2}]}{C}\\right)\\right.}}\\\\ {{\\displaystyle\\left.\\quad+2(B-1)\\|{\\pmb\\bar{g}}\\|^{2}+\\frac{B-1}{C}\\mathbb{E}[\\|{\\pmb g}_{i}\\|^{2}]\\right)}}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "We can compute the expected magnitude of the batch gradient as: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathbb{E}[\\|g\\|^{2}]=\\mathbb{E}[\\|\\frac{1}{B}\\sum_{i=1}^{B}(\\bar{g}+\\tilde{g}_{i})\\|^{2}]=\\mathbb{E}[\\|(\\bar{g}+\\frac{1}{B}\\sum_{i=1}^{B}\\tilde{g}_{i})\\|^{2}]=\\|\\bar{g}\\|^{2}+\\frac{1}{B}\\mathbb{E}[\\|g_{i}\\|^{2}]\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "and similarly $\\mathbb{E}[\\|\\pmb{g}_{b}\\|^{2}]=\\|\\pmb{\\bar{g}}\\|^{2}+\\mathbb{E}[\\|\\pmb{\\tilde{g}}_{b}\\|^{2}]$ . Using these facts we can further write $\\mathbb{E}[(\\Delta y_{b})^{2}]$ ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{=\\frac{\\eta^{2}}{B^{2}}\\frac{\\mathbb{E}[\\|\\pmb{x}_{b}\\|^{2}]}{\\mathbb{E}[\\|\\pmb{\\bar{g}}\\|^{2}]+\\frac{1}{B}\\mathbb{E}[\\|\\pmb{g}_{i}\\|^{2}]}\\left(\\|\\pmb{\\bar{g}}\\|^{2}+\\mathbb{E}[\\|\\tilde{g}_{b}\\|^{2}]+\\frac{(B-1)^{2}\\|\\pmb{\\bar{g}}\\|^{2}}{\\|\\pmb{\\bar{g}}\\|^{2}+\\mathbb{E}[\\|\\tilde{g}_{b}\\|^{2}]}\\left(\\|\\pmb{\\bar{g}}\\|^{2}+\\frac{\\mathbb{E}[\\|\\tilde{g}_{b}\\|^{2}]}{C}\\right)\\right)}\\\\ &{}&{+2(B-1)\\|\\pmb{\\bar{g}}\\|^{2}+\\frac{B-1}{C}\\mathbb{E}[\\|\\tilde{g}_{i}\\|^{2}]\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Combining this with the previous expression for $\\mathbb{E}[y_{b}^{2}]$ and the definition (D2) of the signal-to-noise ratio $\\varphi:=\\mathbb{E}[||\\bar{\\pmb{g}}||^{2}]/\\mathbb{E}[||\\tilde{\\pmb{g}}_{b}||^{2}]$ we obtain the expression in the main body: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\frac{\\mathbb{E}[(\\Delta y_{b})^{2}]}{\\mathbb{E}[y_{b}^{2}]}=\\frac{\\eta^{2}C}{B^{2}\\|w\\|^{2}}\\frac{1}{\\mathbb{E}[\\|g\\|^{2}]}\\Bigg(\\mathbb{E}[\\|g_{b}\\|^{2}]+\\frac{B-1}{C}\\mathbb{E}[\\|\\tilde{g}_{i}\\|^{2}]}\\\\ {\\displaystyle\\qquad\\qquad\\qquad\\qquad\\qquad+\\,\\frac{(B-1)^{2}}{\\mathbb{E}[\\|g_{b}\\|^{2}]}\\left(\\|\\bar{g}\\|^{4}+\\frac{\\|\\bar{g}\\|^{2}\\mathbb{E}[\\|\\tilde{g}_{b}\\|^{2}]}{C}\\right)+2(B-1)\\|\\bar{g}\\|^{2}\\Bigg)~\\mathrm{d}\\bar{g}}\\\\ {\\displaystyle=\\frac{\\eta^{2}C}{B^{2}\\|w\\|^{2}}\\frac{1}{\\varphi+\\frac{1}{B}}\\Bigg((\\varphi\\!+\\!1)+\\frac{B-1}{C}+\\left(\\frac{(B\\!-\\!1)^{2}\\varphi}{\\varphi+1}\\left(\\varphi\\!+\\!\\frac{1}{C}\\right)+2(B\\!-\\!1)\\varphi\\right)\\Bigg)~\\mathrm{d}\\varphi,}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "B.5 Estimating the Signal-to-Noise Ratio ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "We use accumulation over the microbatches to estimate the SNR at a given time. Let\u2019s assume we have $A$ microbatches of size $M$ each, with the average gradient of a microbatch denoted ${\\pmb g}_{m}$ and the average gradient of the whole batch denoted $\\begin{array}{r}{\\pmb{g}=\\frac{1}{A}\\sum_{m}^{-}\\pmb{g}_{m}}\\end{array}$ . ", "page_idx": 18}, {"type": "text", "text": "We estimate the variance of the norm of a single gradient example, i.e. the noise power as: ", "page_idx": 18}, {"type": "equation", "text": "$$\nP_{N}={\\frac{A}{A-1}}\\cdot M\\cdot\\mathbf{1}^{\\top}\\left({\\frac{1}{A}}\\sum_{m}\\pmb{g}_{m}^{2}-\\pmb{g}^{2}\\right)\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "The signal power is estimated as: ", "page_idx": 18}, {"type": "equation", "text": "$$\nP_{S}=\\mathbf{1}^{\\top}\\pmb{g}^{2}-\\frac{1}{A M}P_{N}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Our SNR estimate is then: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\varphi=P_{S}/P_{N}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "B.6 RRC Correction Factor ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "The RRC correction is done based on eq. (9) and the SNR estimation eq. (46). We assume the learning rate was originally scaled with the square root of the batch size, which is derived for an SNR of zero, and downscale the step size to compensate for the measured SNR and batch size. We define: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\rho={\\frac{1}{B(1+\\varphi)}}{\\Bigg(}(\\varphi+1)+{\\frac{B-1}{C}}+\\left({\\frac{(B-1)^{2}\\varphi}{\\varphi+1}}\\left(\\varphi+{\\frac{1}{C}}\\right)+2(B-1)\\varphi\\right){\\Bigg)}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "For numerical purposes, we clamp $1\\le\\rho\\le B$ which corresponds to $\\varphi=0$ and $\\varphi=\\infty$ for a large $C\\to\\infty$ . The update scaling factor is the square root of an EMA of the inverse of this quantity. We use the same coefficient as for the momentum and compute this for the matrix of each linear layer independently. This form for the scaling factor is somewhat arbitrary, complicated by the fact that Lion-like algorithms fix the step size exactly, so scaling the gradient at each step size can not change the magnitude of the update. For Adam or SGD like algorithms we could scale the gradient contributions directly instead of scaling the update size. ", "page_idx": 19}, {"type": "text", "text": "B.7 Run-to-run Variance / Uncertainty Estimation ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "We do not quantify the uncertainty for every GPT2 configuration in our sweeps. This would require significantly more compute and our estimates of the uncertainty for select points indicate that this would not qualitatively change our results. For the baseline AdamW run the run-to-run differences in the validation loss over different seeds are around 0.05. However, the relative ranking of different runs remained the same. ", "page_idx": 19}, {"type": "text", "text": "B.8 Computational Requirements ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Our experiments are performed on A100 GPUs with either 40GB or 80GB of RAM. One training run for our GPT2 setup takes around 4h, running on a single GPU. Reproducing the GPT2 experiments reported in the main body should take on the order of 1000 GPU hours. Including our preliminary experiments brings this up to around $3\\mathbf{X}$ this amount. ", "page_idx": 19}, {"type": "text", "text": "C Additional Experiments ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "C.1 Comparison with RAdam ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "RAdamW combines the variance reduction technique of Liu et al. [23] with the decoupled weight decay of Loshchilov and Hutter [24]. Since it is a well known technique for reducing the need for warmup it serves as a good comparison and contextualization of our work. Figure 9 shows that while RAdamW outperforms the AdamW baseline without warmup, it is unable to match longer warmups. Ma and Yarats [26] suggests that RAdamW is approximately equivalent to 4 steps of SGDM followed by AdamW with a special type of built-in warmup with an effective length of around $2/(1-\\beta_{2})=40$ , which is likely too short in our setting. For comparison the $2\\%$ warmup shown corresponds to 100 steps but is too short for optimal performance. ", "page_idx": 20}, {"type": "text", "text": "The analysis of Liu et al. [23] is based on the idea that early in training the second-moment estimates are not accurate (noisy) and can therefore not be trusted to scale the update properly. This could in turn contribute to the need for warmup, although Ma and Yarats [26] question this interpretation. We first note that without momentum, perfect estimates of the second moment at the current time step would control the expected $\\ell_{2}$ -norm of the update. This relates our approach of looking at the update size to the adaptive learning rate view of Liu et al. [23]. Secondly, we note that counteracting noisy estimates of the second moment can not be the sole reason warmup is beneficial. This is supported by the fact that both SGD and Lion empirically need warmup in various settings but do not use the second moment at all, indicating there are additional factors that contribute to the need for warmup. ", "page_idx": 20}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/afcf09efc7ecaffa99cff4b56818fe331de898656a4f70c9a953b105fb1f842e.jpg", "img_caption": ["Figure 9: Comparison of the AdamW baseline with a cosine schedule and RAdamW. Panel 1: Cosine schedules with different warmup lengths. Note how the warmup shifts the curve, affecting the whole schedule including the decay portion. Panel 2: The final validation loss for GPT2-124M training on OpenWebText using the cosine schedules. Note that RAdamW helps but does not eliminate the need for warmup. Panel 3: The original trapezoidal schedules used in our experiments. Panel 4: Trapezoidal GPT2-124M OpenWebText results. The RAdamW results are similar to those in panel 2. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "C.2 Model & Dataset Ablations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In this section we repeat some of our main experiments, varying the dataset and model architecture. ", "page_idx": 20}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/2d90f54fcbeec60feed141beba06b66db8c49a09313b479b9697cfda2d3aef9d.jpg", "img_caption": ["Figure 10: Dataset ablation study, GPT2-124M on SlimPajama [33]. Four update control approaches are shown (see titles). The overall results are similar to those for OpenWebText in the manuscript. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "Figure 10 shows the effects of changing the dataset used in our experiments from OpenWebText [8] to SlimPajama [33]. Overall the results are similar as before, when controlling the $\\ell_{2}$ -norm via LionA warmup is still beneficial, controlling the angular updates via LionAR decreases the gap significantly. The higher momentum LionAR with Nesterov momentum and our momentum correction eliminates the gap fully. The RRC also seems to eliminate the benefti of warmup but still has the same practical limitations as we describe in $\\S6$ . ", "page_idx": 21}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/b1abbc4117cc11b616a9bbafb052946e4b509861dd02936e1ba301ec26137871.jpg", "img_caption": ["Figure 11: Architecture ablation, Llama2-124M on OpenWebText. Here LionAR is already sufficient to eliminate the need for warmup, no additional RRC compensation is needed. This could be due to the critical batch size being larger (for unclear reasons). "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "Figure 11 shows the effects of changing the architecture from GPT2 to a Llama style [36] while keeping the dataset and parameter count $(124\\mathrm{m})$ the same. This change consists of using SwiGLU activations, RoPE embeddings and RMSNorm. In this case LionAR is able to fully eliminate the need for warmup without any additional tricks like the RRC compensation or momentum corrections. Based on our analysis these additional tricks are likely only needed when the critical batch size is very small initially. We expect that using larger batch sizes could necessitate these additional tricks for Llama, but do not explore this further here. ", "page_idx": 21}, {"type": "image", "img_path": "ZgDNrpS46k/tmp/ff3d5e053e73d5f87520a3ce2f7165ba8530355c036e84dc2c807e0ec6d8fe79.jpg", "img_caption": ["Figure 12: Larger llama2-209M training on SlimPajama. This experiment changes the architecture, dataset, model size, and training length (proportional to the model size). In this case LionAR suffices on its own again, no additional RRC correction needed as in the smaller llama experiments. "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "Figure 12 uses a larger Llama model with twice the depth. It also trains for twice as many iterations to keep the ratio of tokens to parameters similar. The overall results resemble those of the smaller llama experiments in fig. 11. ", "page_idx": 21}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We have aimed to write our abstract and introduction to accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 22}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We include a limitation section $\\S9$ which discusses the main overarching limitations from our perspective. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 22}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our work is mostly empirical, aside from the analysis of the relative representation change where we state the assumptions upfront, with additional details deligated to the appendix. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 23}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide the main hyperparameters and other aspects of our training. We are not aware of any missing details that would significantly hinder reproducibility. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 23}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 24}, {"type": "text", "text": "Answer: [No] ", "page_idx": 24}, {"type": "text", "text": "Justification: The datasets we use are freely available online but we have not released our code. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 24}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We have attempted include all relevant information. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 24}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [No] ", "page_idx": 24}, {"type": "text", "text": "Justification: Our main results are qualitative and computationally expensive for us, so we do not estimate the variance for each point in our sweeps. We give an estimate based on select points in. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 24}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 25}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We do this for our main experiments in appx. B.8 ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 25}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We read it and believe we fully conform to it. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 25}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: This paper is focused on understanding deep learning in general, and does not have an specific societal impacts beyond those of the field overall. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 25}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 26}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: We don\u2019t realease anything that falls under this category. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 26}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We do this to the best of our ability. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: No new assets introduced ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 27}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: No crowdsourcing / human subjects used ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 27}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: No crowdsourcing / human subjects used ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}]