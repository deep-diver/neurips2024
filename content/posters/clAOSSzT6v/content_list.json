[{"type": "text", "text": "SplitNeRF: Split Sum Approximation Neural Field for Joint Geometry, Illumination, and Material Estimation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Jesus Zarzar Bernard Ghanem KAUST KAUST ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We present a novel approach for digitizing real-world objects by estimating their geometry, material properties, and environmental lighting from a set of posed images with fixed lighting. Our method incorporates into Neural Radiance Field (NeRF) pipelines the split sum approximation used with image-based lighting for real-time physically based rendering. We propose modeling the scene\u2019s lighting with a single scene-specific MLP representing pre-integrated image-based lighting at arbitrary resolutions. We accurately model pre-integrated lighting by exploiting a novel regularizer based on efficient Monte Carlo sampling. Additionally, we propose a new method of supervising self-occlusion predictions by exploiting a similar regularizer based on Monte Carlo sampling. Experimental results demonstrate the efficiency and effectiveness of our approach in estimating scene geometry, material properties, and lighting. Our method attains state-of-the-art relighting quality after only ${\\sim}1$ hour of training in a single NVIDIA A100 GPU. ", "page_idx": 0}, {"type": "image", "img_path": "clAOSSzT6v/tmp/bbc923ba5a500f366404a400d015410d79ed3a3ff62c424e8f2a462f56ed56cc.jpg", "img_caption": ["Figure 1: We visualize the lighting, material properties (albedo, metalness, and roughness), and geometry predicted by our model in addition to four relighting predictions of the \u2018materials\u2019 scene. Our method predicts high-frequency illumination with only ${\\sim}1$ hour of training thus enabling the efficient digitization of relightable objects. "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The idea of creating realistic and immersive digital environments has piqued the imagination of countless science fiction authors, science fiction directors, and scientists. In the past few years, the fields of computer graphics and computer vision have advanced so much that we are capable of creating photo-realistic environments [6, 28, 21], as well as capturing real-world environments in a way that allows us to render new photo-realistic views [25, 32]. However, the creation of digital twins [9] of objects that can be integrated within photo-realistic environments still requires artists to meticulously hand-design realistic object meshes, materials, and lighting. While this is feasible for generating a few scenes, large-scale digitization requires automatic ways of reconstructing real-world objects along with their corresponding material properties. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "In this work, we address the problem of object inverse rendering: extracting object geometry, material properties, and environment lighting from a set of posed images of the object. Inverse rendering enables the seamless integration of virtual objects into different environments with varying illumination conditions from simple image captures taken by commonplace camera sensors. ", "page_idx": 1}, {"type": "text", "text": "Neural rendering methods, such as Neural Radiance Fields (NeRF) [18, 1, 34], have revolutionized novel view synthesis, 3D reconstruction from images, and inverse rendering. By directly modeling outgoing radiance at each point in 3D space, NeRF methods excel at accurately recovering scene geometry and synthesizing novel views. However, a drawback of this approach is that the learned radiance representation entangles environment lighting with the rendered scene\u2019s properties, making it challenging to recover material properties and illumination. Due to the success of NeRFs in reconstructing scenes, several works have proposed modifications to enable inverse rendering [29, 3, 16, 10, 41]. These works build upon NeRF by decomposing radiance into a function of illumination and material properties but differ in their ways of modeling lighting and reflections. We build upon these methods with the main goal of efficiency without sacrificing reconstruction quality or the ability to recover high-frequency illumination details. ", "page_idx": 1}, {"type": "text", "text": "To achieve these goals, we rely on the split sum approximation [11], which is commonly used in efficient image-based lighting techniques and has been successfully applied for inverse rendering before [3, 20]. This approximation involves splitting the surface reflectance equation into two factors: one responsible for pre-integrating illumination and the other for integrating material properties. The separation allows us to estimate pre-integrated illumination using a Multi-Layer Perceptron (MLP). This manner of modeling the pre-integrated illumination function is inspired by the modeling of radiance fields, which model a complex integral of lighting and material properties using an MLP. Correspondingly, our illumination representation inherits beneficial properties observed with the modeling of radiance fields such as smoothness. While MLPs representing pre-integrated illumination have been previously exploited [14, 13], previous works do not supervise the MLP\u2019s learning, leading to physically inaccurate illumination representations. We propose a novel regularizer based on Monte Carlo sampling to ensure accurate learning of illumination. ", "page_idx": 1}, {"type": "text", "text": "However, the split sum approximation on its own does not take into account self-occlusions. This hinders material property estimation since shadows tend to be incorrectly attributed to objects\u2019 albedo. Thus, we derive an occlusion factor to alleviate the effect of self-occlusions. This factor is then approximated via Monte Carlo sampling and used to supervise an occlusion MLP. ", "page_idx": 1}, {"type": "text", "text": "Altogether, our method is capable of attaining state-of-the-art relighting results with under an hour of training on a single NVIDIA A100 GPU. ", "page_idx": 1}, {"type": "text", "text": "Contributions. We claim the following contributions: ", "page_idx": 1}, {"type": "text", "text": "(i) We propose a novel representation for pre-integrated illumination as a single MLP with a corresponding regularization to ensure learning a physically-meaningful representation. ", "page_idx": 1}, {"type": "text", "text": "(ii) We derive a method for approximating the effect of self-occlusions on pre-integrated lighting and use it to supervise an occlusion MLP improving material estimation. ", "page_idx": 1}, {"type": "text", "text": "(iii) We demonstrate the effectiveness of our method in extracting environmental lighting, geometry, and material properties by achieving competitive reconstruction and relighting quality on both synthetic and real data with under one hour of training on a single NVIDIA A100 GPU. ", "page_idx": 1}, {"type": "text", "text": "2 Related works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "The problem of digitizing real-world objects and environments has long been a subject of active research in computer vision and computer graphics. We approach this problem through the lenses of neural rendering and neural inverse rendering; paradigms with lots of recent attention. We now provide a brief overview of related works in these areas. ", "page_idx": 1}, {"type": "text", "text": "2.1 Neural rendering and 3D reconstruction ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Novel view synthesis is the task of rendering new views of a scene given a set of observations of the scene. Neural Radiance Fields (NeRF) [18] and its variants [1, 34, 19, 4, 26] have demonstrated remarkable success in the task of novel view synthesis. NeRF directly models the volumetric scene function by predicting radiance and density at each 3D point in space while supervising learning with a photometric reconstruction loss. Due to its success in implicitly learning accurate 3D reconstructions, several works have branched out to reconstruct accurate meshes through neural rendering [22, 31]. Signed Distance Function (SDF)-based methods [36, 40, 37, 12] model density as a function of the SDF to obtain well-defined surfaces. By increasing sharpness during training in the conversion from SDF to density these methods can transition from volume rendering to surface rendering as they train. While effective, these methods suffer from entangled representations of scene geometry, material properties, and lighting. Our work follows the surface rendering pipeline proposed in [36] but reformulates the radiance prediction to disentangle environment lighting and material properties. ", "page_idx": 2}, {"type": "text", "text": "2.2 Neural inverse rendering ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The task of inverse rendering is a long-standing problem in computer graphics which consists of estimating the properties of a 3D scene such as shape, material, and lighting from a set of image observations. The success of neural rendering methods for novel view rendering and 3D reconstruction has led to a variety of works [2, 45, 43, 29, 3, 20, 46, 42, 14, 16, 30] exploiting neural rendering for inverse rendering. Due to the challenging nature of this problem, multiple simplifying assumptions have been adopted. Some works simplify the modeling of lighting by using low-frequency representations such as spherical gaussians [2, 45, 43, 29, 46, 39, 10] or low-resolution environment maps [2, 43, 46]. While this approximation generally allows for closed-form solutions of the rendering integral, it does not capture natural high-frequency illumination. Our work leverages the split sum approximation [11], proposed for real-time rendering of image-based global illumination to enable the learning of high-frequency environment lighting. The split sum approximation has been adopted by several inverse rendering methods [3, 20, 17, 13, 14]. These works represent preintegrated lighting with an autoencoder-based illumination network [3, 13], with a set of learnable images for different roughness levels [20, 17], or with an MLP with integrated spherical harmonic encoding as input [14]. Autoencoder-based methods rely on learnt illumination features incompatible with existing rendering pipelines. Learnable images are susceptible to noise and require re-integrating illumination whenever the base illumination is updated. Lastly, using integrated encodings to avoid integrating light leads to a representation that is not physically based. In contrast, we propose modeling pre-integrated lighting as the output of an MLP paired with a novel regularization, which ensures the network correctly learns to represent physically\u2013based pre-integrated lighting. An issue arising from the split sum approximation is that pre-integrated illumination is blind to geometry and does not account for the occlusion of light sources due to geometry throughout the scene. Our work tackles this issue by supervising the prediction of ambient occlusion through Monte Carlo sampling. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Our method aims to extract a scene\u2019s geometry, material properties, and illumination from a set of posed images of the scene. We accomplish this by incorporating a decomposed formulation of radiance into a surface rendering pipeline. In the following sections, we begin with an overview of the surface rendering pipeline. We then detail the physically-based radiance formulation, which allows us to decompose radiance into illumination and material properties. Next, we describe our proposed MLP representation for illumination along with the additional loss term it requires. Afterward, we derive a method for estimating an occlusion factor to account for visibility within the split sum approximation. Finally, we describe additional regularization used to facilitate learning. ", "page_idx": 2}, {"type": "text", "text": "3.1 Overview of neural rendering ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Neural volume rendering relies on learning two functions: $\\sigma(\\mathbf{x};\\theta):\\mathbb{R}^{3}\\mapsto\\mathbb{R}$ which maps a point in space $\\mathbf{x}$ onto a density $\\sigma$ , and $\\mathbf{L}_{o}(\\mathbf{x},\\omega_{o};\\theta)\\ '\\mathbb{R}^{3}\\times\\mathbb{R}^{3}\\mapsto\\mathbb{R}^{3}$ that maps point $\\mathbf{x}$ viewed from direction $\\omega_{o}$ onto outgoing radiance $\\mathbf{L}_{o}$ . The parameters $\\theta$ that define the density and radiance functions are typically optimized to represent a single scene by using multiple posed views of the scene. To learn these functions, they are evaluated at multiple points along a ray $\\bar{\\mathbf{r}(t)}=\\mathbf{o}-t\\omega_{o},t\\in[t_{n},t_{f}]$ , defined ", "page_idx": 2}, {"type": "image", "img_path": "clAOSSzT6v/tmp/6c03d138cfd7e0e0830b4e5c3141e713f40d708374c2dedc44bcd2fcf87d5249.jpg", "img_caption": [], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Figure 2: Proposed architecture. A spatial network maps spatial coordinates $\\mathbf{x}$ into geometry $(\\sigma)$ , material properties (albedo \u02c6a, metalness $\\hat{m}$ , and roughness $\\hat{\\rho}_{,}$ ), and occlusion factors (\u02c6o). The pre-integrated illumination MLP predicts both specular $\\hat{g}_{s}(\\hat{\\omega}_{r},\\hat{\\rho})$ and diffuse $\\hat{g}_{d}(\\hat{\\mathbf{n}},\\rho=1)$ terms by using the predicted normals $\\hat{\\bf n}$ , roughness, and the reflection vector $\\hat{\\omega}_{r}$ of view direction $\\omega_{o}$ . Finally, the specular and diffuse terms are combined with material properties to compute output radiance $\\hat{\\mathbf{L}}_{o}$ . ", "page_idx": 3}, {"type": "text", "text": "by the camera origin $\\mathbf{o}\\in\\mathbb{R}^{3}$ , pixel viewing direction $\\omega_{o}$ , and camera near and far clipping planes $t_{n}$ and $t_{f}$ . A pixel color for the ray can then be obtained through volume rendering via: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\hat{\\mathbf{C}}(\\mathbf{r};\\theta)=\\int_{t_{n}}^{t_{f}}T(t)\\,\\hat{\\sigma}(\\mathbf{r}(t))\\,\\hat{L}_{o}(\\mathbf{r}(t),\\omega_{o})\\,\\mathrm{d}t,\\;\\mathrm{where}\\;\\;T(t)=\\exp\\left(-\\int_{t_{n}}^{t}\\hat{\\sigma}(\\mathbf{r}(s))\\,\\mathrm{d}s\\right).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In practice, a summation of discrete samples along the ray is used to approximate the integral. This volume rendering process allows us to supervise the learning of implicit functions $L_{o}$ and $\\sigma$ , in a pixel-wise fashion through the reconstruction loss: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{rec}}(R;\\theta)=\\frac{1}{\\left|R\\right|}\\sum_{{\\bf r}\\in R}\\left\\|{\\bf C}({\\bf r})-\\hat{{\\bf C}}({\\bf r};\\theta)\\right\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $R$ is a batch of rays generated from a random subset of pixels from training images. ", "page_idx": 3}, {"type": "text", "text": "The learned geometry can be improved if, instead of directly predicting density $\\sigma$ , a signed distance field (SDF) is learned and then mapped to density. To this end, we follow the SDF formulation proposed in NeuS [36]. Learning a valid SDF requires the use of an additional Eikonal loss term $\\mathcal{L}_{\\mathrm{Eik}}$ . For more details, please refer to [36]. ", "page_idx": 3}, {"type": "text", "text": "Since volume density $\\sigma$ depends only on a point\u2019s position in space while output radiance $L_{o}$ depends on both position and viewing direction, neural rendering networks are typically split into a spatial network and a radiance network. As shown in fig. 2, we maintain the spatial network to estimate density along with additional material properties but rely on a physically-based [23] radiance estimation instead of a radiance network. ", "page_idx": 3}, {"type": "text", "text": "3.2 Physically-based rendering ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Given knowledge of a scene\u2019s geometry, material properties, and illumination, it is possible to model the outgoing radiance ${\\mathbf{L}}_{o}({\\mathbf{x}},\\bar{\\omega_{o}})$ reflected at any position $\\mathbf{x}$ of an object\u2019s surface in direction $\\omega_{o}$ by integrating over the hemisphere $\\Omega$ defined by the surface\u2019s normal $\\mathbf{n}$ using the reflectance equation: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{L}_{o}=\\int(\\mathbf{k}_{d}\\frac{\\mathbf{a}}{\\pi}+\\mathbf{f}_{s})\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathbf{L}_{i}$ is the incoming radiance, a is the object\u2019s diffuse albedo, and $\\mathbf{k}_{d}$ and $\\mathbf{f}_{s}$ are material properties dependent on the object\u2019s Bidirectional Reflectance Distribution Function (BRDF). For clarity, we omit from notation the dependency of incoming radiance on $\\omega_{i}$ as well as the dependency of material properties on position $\\mathbf{x}$ . Radiance $\\mathbf{L}_{o}$ has diffuse and specular components $\\mathbf{L}_{d}$ and $\\mathbf{L}_{s}$ . Image-based lighting methods often employ the split sum approximation to calculate specular lighting ${\\bf L}_{s}$ by splitting the integral into two components: one containing the incoming light $\\mathbf{L}_{i}$ , and one depending only on material properties. We use the Disney [11] microfacet BRDF parameterized by albedo, metalness, and roughness. The specular component is modeled with the Cook-Torrance GGX [33, 35] BRDF, leading to the following approximation: ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbf{L}_{s}\\approx\\frac{\\int D(\\omega_{i},\\omega_{r},\\rho)\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}{\\int D(\\omega_{i},\\omega_{r},\\rho)\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}\\int\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}=g(\\omega_{r},\\rho)\\int\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $D(\\omega_{i},\\omega_{r},\\rho)$ is the microfacet normal distribution function dependent on the direction of light reflection $\\omega_{r}$ as well as the surface roughness $\\rho$ . The term on the right can be pre-computed as in [11] since it depends only on the BRDF and not a scene\u2019s lighting. The term on the left in Equation (4) depends on the scene\u2019s lighting and the microfacet distribution function $D(\\omega_{i},\\omega_{r},\\rho)$ . The following sections refer to this term as $g(\\omega_{r},\\rho)$ and aim to estimate it with an MLP representation. As shown in fig. 2, we estimate an object\u2019s albedo a\u02c6, metalness $\\hat{m}$ , and roughness $\\hat{\\rho}$ from the spatial network. ", "page_idx": 4}, {"type": "image", "img_path": "clAOSSzT6v/tmp/ca504c8d398b0f845128ccdad2c863ddacaaf4929ee22f1195df43d8be6e137d.jpg", "img_caption": ["Figure 3: Pre-integrated environment illumination. We visualize the pre-integrated illumination $\\hat{g}(\\omega_{r},\\rho)$ for varying roughness values along our model\u2019s prediction for the \u2018toaster\u2019 scene. Our pre-integrated illumination MLP accurately approximates pre-integrated lighting across roughness values thanks to our novel regularization loss based on Monte Carlo sampling. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "3.3 Pre-integrated illumination MLP representation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We propose to estimate the pre-integrated lighting $g(\\omega_{r},\\rho)$ at different roughness levels through a pre-integrated illumination MLP $\\hat{g}(\\omega_{r},\\rho)$ . Please refer to Appendix A.2 for details on how $\\hat{g}(\\omega_{r},\\rho)$ is used to calculate $\\hat{\\mathbf{L}}_{d}$ and $\\hat{{\\bf L}}_{s}$ . The predictions $\\hat{g}$ should accurately represent the environment lighting at different levels of roughness. We achieve this through a loss term based on Monte Carlo estimates $\\bar{g}$ of the original integral for varying roughness and reflected directions using the predicted environment map $\\hat{\\bf L}_{i}(\\omega)$ which can be extracted from $\\hat{g}$ querying perfect specular reflections $\\hat{g}(\\omega,0)$ . ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{D}}(\\theta)=\\frac{1}{|\\mathcal{S}|}\\sum_{s\\in\\mathcal{S}}\\|\\hat{g}(s)-\\bar{g}(s)\\|_{2}^{2}\\,,\\,\\mathrm{with}\\,\\bar{g}(s)=\\frac{\\underset{\\omega_{i}\\in\\Omega}{\\sum_{i\\in\\Omega}}D(\\omega_{i},\\omega_{s},\\rho_{s})\\hat{g}(\\omega_{i},0)\\langle\\omega_{i},\\omega_{s}\\rangle}{\\underset{\\omega_{i}\\in\\Omega}{\\sum_{i\\in\\Omega}}D(\\omega_{i},\\omega_{s},\\rho_{s})\\langle\\omega_{i},\\omega_{s}\\rangle},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where the set $\\boldsymbol{S}$ consists of paired samples of directions $\\omega_{s}$ and roughness $\\rho_{s}$ . Directions are taken uniformly on a sphere, and half the roughness samples are taken uniformly in the range [0, 1] with the other half fixed to 1 to ensure correct learning of diffuse lighting. Please refer to Appendix A.1 for a detailed derivation of ${\\bar{g}}(s)$ . The set $\\Omega$ of light direction samples is also taken uniformly on a sphere. While a different sampling could lead to reduced variance, we utilize uniform spherical sampling for $\\omega_{i}$ to be more computationally efficient. Uniform spherical sampling allows us to share light samples across the batch of predictions, thus reducing the number of evaluation calls to the light function $\\hat{g}(\\omega,0)$ . We visualize both $g$ and $\\hat{g}$ in fig. 3 for a specific scene. ", "page_idx": 4}, {"type": "text", "text": "3.4 Occlusion factors ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The split sum approximation does not consider the occlusion of light sources due to geometry. Occlusions can be incorporated by multiplying incoming light $\\mathbf{L}_{i}$ by a binary visibility function $V_{i}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbf{L}_{o}^{V}=\\int_{\\Omega}(\\mathbf{k}_{d}\\frac{\\mathbf{a}}{\\pi}+\\mathbf{f}_{s})\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "image", "img_path": "clAOSSzT6v/tmp/2194dd7764a8215a925b549a613f3ffbd9177089819a180b7a4938ec1e4b13cd.jpg", "img_caption": ["Figure 4: Occlusion loss visualization. We visualize the albedo and occlusion predicted by our method with and without the proposed occlusion regularization loss. When no regularization is used, we observe that the occlusion prediction fails at disentangling shadows from the albedo. Additionally, darker materials might wind up with lighter albedos due to occlusion overcompensation. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "with $V_{i}$ taking a value of 1 when there are no occlusions and 0 when incoming light is occluded by geometry. Both diffuse and specular integrals can be rewritten to incorporate visibility via occlusion factors $\\mathbf{o}_{d}(\\mathbf{x})$ and $\\mathbf{o}_{s}(\\mathbf{x})$ which multiply the split sum diffuse and specular lighting terms respectively. We propose learning the occlusion factors $\\mathbf{o}(\\mathbf{x})$ with an MLP by supervising them with Monte Carlo estimates $\\bar{\\bf o}({\\bf x})$ using the predicted geometry. Please refer to Appendix A.3 for the derivation of Monte Carlo estimates $\\bar{\\bf o}({\\bf x})$ . Given the Monte Carlo estimates, we supervise the predicted occlusion terms ${\\hat{\\mathbf{o}}}(\\mathbf{x})$ as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{0}(\\boldsymbol{\\theta})=\\frac{1}{\\left|\\mathcal{X}\\right|}\\sum_{\\boldsymbol{x}\\in\\mathcal{X}}w\\left\\|\\hat{\\mathbf{o}}(\\mathbf{x})-\\bar{\\mathbf{o}}(\\mathbf{x})\\right\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where the sample set $\\mathcal{X}$ is a random subset of the points sampled for volume rendering, and the weights $w$ are the corresponding normalized volume rendering weights. Weighting the loss function by the volume rendering weights is required so that the occlusion prediction focuses only on learning surface points. The output radiance at each point in space is then calculated as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\hat{\\bf L}_{o}=\\gamma\\big(\\hat{\\bf o}_{d}*\\hat{\\bf L}_{d}+\\hat{\\bf o}_{s}*\\hat{\\bf L}_{s}\\big),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\gamma$ maps the predicted output radiance $\\hat{\\bf L}_{o}$ from linear to sRGB space. ", "page_idx": 5}, {"type": "text", "text": "3.5 Material regularization ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "To better learn material properties, we introduce a soft regularizer to reduce the prediction of metallic materials. This encourages the model to prefer explaining outgoing radiance through albedo and roughness whilst still allowing the prediction of metallic materials. We implement this regularization as a weighted $L_{2}$ loss with the same weighting as for the occlusion loss in Equation (7). That is, ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{m}}(\\theta)=\\frac{1}{\\left|\\mathcal{X}\\right|}\\sum_{\\mathbf{x}\\in\\mathcal{X}}w\\left\\|\\hat{m}(\\mathbf{x})\\right\\|_{2}^{2}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Baselines ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We compare against Nerfactor [45], NVDiffRec [20], NVDiffRecMC [8], NeRO [14], NMF [16], and TensoIR [10]. Due to the differing evaluation methodologies among these works, we train all baseline methods following publicly released code and report metrics as detailed in the following. ", "page_idx": 5}, {"type": "table", "img_path": "clAOSSzT6v/tmp/1c2deebe1c8bd1056e5c6d149be5bf6e7309c7d04de3eb6fce803701014c6064.jpg", "table_caption": ["Table 1: NeRFactor metrics. We evaluate the reconstruction quality of our method against the baselines using 20 test images and 8 low-frequency illumination maps for each scene from the NeRFactor dataset. We scale albedo and relit images with a per-channel factor before computing metrics. Our method attains competitive performance across all metrics with a low runtime. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Table 2: Blender and Shiny Blender metrics. We report the average of relighting reconstruction metrics and normal error for our extended Blender and Shiny Blender datasets. Metrics are computed as the average of 20 test views across 7 high-frequency illumination conditions for each scene. We scale images by a per-channel factor for relighting metrics. Our method outperforms the baselines across all metrics for the Blender dataset and has a higher PSNR for the Shiny Blender dataset. ", "page_idx": 6}, {"type": "table", "img_path": "clAOSSzT6v/tmp/bbef0a6be2425cf6ff06f648d1c9ee2af3d6820010b5417d13c87e4dc89b2a76.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "4.2 Experimental setup ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Datasets. We report results using the NeRFactor [45] dataset along with extended versions of the NeRF Blender [18] (Blender) and the RefNeRF Shiny Blender [34] (Shiny Blender) datasets. The NeRFactor dataset consists of four synthetic scenes, where test images are rendered under eight different low-frequency lighting conditions. The Blender dataset consists of eight synthetic scenes representing a mix of glossy, specular, and Lambertian objects, while the Shiny Blender dataset consists of six highly reflective synthetic scenes. To showcase the ability of our model to estimate high-frequency environment lighting, we extend the Blender and Shiny Blender datasets by rendering all objects under seven novel high-frequency lighting conditions. All models are trained using 100 posed images, and evaluated on 20 test images consisting of novel views for each lighting condition. Finally, we report qualitative results on real-world objects using the CO3D [24] dataset. Each object in the dataset consists of a set of images captured along a circular path along with automatically extracted foreground segmentation masks. We estimate each image\u2019s camera pose with Colmap [27]. ", "page_idx": 6}, {"type": "text", "text": "Relighting evaluation. We extract geometry from our model in the form of a triangular mesh by using marching cubes [15]. At each predicted mesh vertex, we estimate material properties in the form of an albedo, metalness, and roughness. We then render the predicted geometry using Blender\u2019s [5] physically-based shader. Material properties across faces are obtained by interpolating the predicted vertex material properties. We utilize the same Blender rendering pipeline to compute relighting metrics for baselines where explicit meshes and material properties are extracted. Otherwise, predictions are rendered using the provided relighting methodology. Before evaluating metrics, a per-channel scaling factor is computed for each scene to compensate for the albedo-lighting ambiguity. We evaluate the predicted scenes for the NeRFactor, Blender, and Shiny Blender datasets and report the average Peak Signal-to-Noise Ratio (PSNR), Structural Similarity Index Measure (SSIM) [38], and Learned Perceptual Image Patch Similarity (LPIPS) [44] in table 1 and table 2. Metrics are reported as an average across 20 test images and across all illumination maps for each dataset. This metric gives an aggregated performance measure for geometry and material property estimation. Our method attains competitive relighting performance while maintaining a low runtime. ", "page_idx": 6}, {"type": "image", "img_path": "clAOSSzT6v/tmp/b50de2bdb253a599e9e891578692c7908943fa618e6a1b4dd987fcf4e426e3ea.jpg", "img_caption": ["Figure 5: Qualitative real-world results. We present qualitative results on four scenes from the CO3D dataset. Our method can successfully recover object geometry, material properties, and illumination even for challenging scenes captured in the wild. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Albedo evaluation. In addition to overall relighting quality, we evaluate the ability of our method to recover albedo. We report reconstruction metrics (PSNR, SSIM, and LPIPS) on the predicted albedo in table 1. As with the relighting metrics, we apply a per-scaling factor to the albedo predictions before computing reconstruction metrics. Metrics are reported as an average across all 20 test images for each scene in the NeRFactor dataset. We do not report albedo metrics for other datasets due to the lack of ground truth. We exclude results from NMF [16] since the albedo in their lighting formulation is not comparable to the other methods. Thanks to our proposed occlusion factor and material regularization, our method is on average better able to reconstruct albedo. ", "page_idx": 7}, {"type": "text", "text": "Normals evaluation. We measure the pixel-wise Mean Absolute Error (MAE) between ground truth and predicted normal images to evaluate geometric reconstruction quality. The MAE is weighted by ground truth alpha values to lower the effect of prediction errors at object borders. Our method recovers a good estimate of geometry for most scenes as evidenced in tables 1 and 2. ", "page_idx": 7}, {"type": "text", "text": "Real-world qualitative results. In real-world scenes, the far-field illumination assumption is violated and objects don\u2019t follow any specific BRDF model as opposed to synthetic scenes. Both of these differences make inverse rendering from real-world data a much more challenging task than with synthetic data. Therefore, we provide qualitative results in fig. 5 to validate our method on real-world captures from the CO3D dataset. It can be observed that even in this challenging scenario our method is capable of recovering accurate object geometry, as well as providing a reasonable estimation of material properties and environment maps. ", "page_idx": 7}, {"type": "text", "text": "5 Discussions ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "5.1 Ablations ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Occlusion loss. We visualize the effects of the proposed occlusion loss in fig. 4. Learning an occlusion factor without supervision leads to errors in the albedo predictions due to the inability to disentangle shadows from object color. By explicitly supervising an occlusion factor we observe better albedo color predictions such as visualized in the blue box in the hotdog example, and all boxes in the drums example. Additionally, shadows are better disentangled from albedo as observed in the red and green boxes for the hotdog example. Quantitatively, we measure the importance of adding the occlusion loss to our model in table 3, where it improves both relighting and albedo reconstruction. ", "page_idx": 7}, {"type": "text", "text": "Occlusion averaging. The occlusion factor we derive is a per-channel factor that depends on estimated lighting. However, since both are being learned jointly, we observe that training can be noisy. We find in table 3 that relighting and albedo reconstruction both improve when we supervise the occlusion factors $\\hat{O}_{d}$ and $\\hat{O}_{s}$ with their per-channel averages instead. Assuming that all channels of the occlusion factor are equal is equivalent to assuming only white light with varying intensities, which reduces noise during training and uses fewer parameters. ", "page_idx": 7}, {"type": "text", "text": "Table 3: NeRFactor ablation results. We report reconstruction and relighting metrics for different variations of our methodology on the NeRFactor dataset. While the proposed regularizations do not have a noticeable effect on geometry, they all lead to improvements in albedo and relighting quality. ", "page_idx": 8}, {"type": "table", "img_path": "clAOSSzT6v/tmp/3e498d5bdd57264436ce5c6fefb48e528335d6543e6454e82da64c14643fdf9b.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Material regularization. We measure the effect of the material regularization in table 3. Penalizing metalness prediction discourages our model from explaining radiance through environment lighting with overpredicted metallic surfaces. This leads to improved albedo predictions as shown in table 3. However, as visualized in fig. 1, the loss coefficient is small enough such that our model is still capable of correctly predicting metallic surfaces. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion and limitations ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In conclusion, we present a novel and efficient method for inverse rendering based on neural surface rendering and the split sum approximation for image-based lighting. Owing to our proposed integrated illumination MLP, we can jointly estimate geometry, lighting, and material properties in under one hour using a single NVIDIA A100 GPU. Physical accuracy of our pre-integrated MLP representation is ensured thanks to the proposed illumination regularization. Additionally, we define occlusion factors for diffuse and specular lighting so that self-occlusions are accounted for with the split sum approximation. Finall, we propose a way of supervising occlusion MLPs to learn the proposed occlusion estimators. Altogether, our method produces high-quality estimates of geometry, lighting, and material properties as measured by rendering objects under unseen views and lighting conditions. ", "page_idx": 8}, {"type": "text", "text": "However, due to the highly complex problem that inverse rendering presents, our method comes with some limitations. The major assumptions we rely on come from using image-based lighting, the split sum approximation, and Monte Carlo sampling. Image-based lighting assumes that light sources are located infinitely far away from the scene, leading to errors when this assumption is violated. While we have tackled the problem of missing self-occlusions within the split sum approximation, we disregard the effect of indirect illumination. This has a noticeable impact on albedo for reflective surfaces such as the \u2019toaster\u2018 scene. Additionally, we only consider the reflection of light and don\u2019t model transmission and subsurface scattering effects. Finally, we use a low number of uniform Monte Carlo samples for the occlusion loss leading to errors due to strong and small light sources. This is mostly noticeable in albedo predictions for objects in the synthetic Blender dataset, where shadows can still be noticed in the albedo predictions. We hope future works will tackle these limitations. ", "page_idx": 8}, {"type": "text", "text": "7 Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The research reported in this publication was supported by funding from King Abdullah University of Science and Technology (KAUST) - Center of Excellence for Generative AI, under award number 5940. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Barron, J.T., Mildenhall, B., Tancik, M., Hedman, P., Martin-Brualla, R., Srinivasan, P.P.: Mip-nerf: A multiscale representation for anti-aliasing neural radiance fields. ICCV (2021) [2] Boss, M., Braun, R., Jampani, V., Barron, J.T., Liu, C., Lensch, H.P.: Nerd: Neural reflectance decomposition from image collections. In: IEEE International Conference on Computer Vision (ICCV) (2021) [3] Boss, M., Jampani, V., Braun, R., Liu, C., Barron, J.T., Lensch, H.P.: Neural-pil: Neural pre-integrated lighting for reflectance decomposition. In: Advances in Neural Information Processing Systems (NeurIPS) (2021)   \n[4] Chen, A., Xu, Z., Geiger, A., Yu, J., Su, H.: Tensorf: Tensorial radiance fields. In: European Conference on Computer Vision. pp. 333\u2013350. Springer (2022) [5] Community, B.O.: Blender - a 3D modelling and rendering package. Blender Foundation, Stichting Blender Foundation, Amsterdam (2018), http://www.blender.org [6] Dosovitskiy, A., Ros, G., Codevilla, F., Lopez, A., Koltun, V.: CARLA: An open urban driving simulator. In: Proceedings of the 1st Annual Conference on Robot Learning. pp. 1\u201316 (2017)   \n[7] Guo, Y.C.: Instant neural surface reconstruction (2022), https://github.com/bennyguo/instantnsr-pl [8] Hasselgren, J., Hofmann, N., Munkberg, J.: Shape, Light, and Material Decomposition from Images using Monte Carlo Rendering and Denoising. arXiv:2206.03380 (2022) [9] Jiang, Y., Yin, S., Li, K., Luo, H., Kaynak, O.: Industrial applications of digital twins. Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences 379, 20200360 (08 2021). https://doi.org/10.1098/rsta.2020.0360   \n[10] Jin, H., Liu, I., Xu, P., Zhang, X., Han, S., Bi, S., Zhou, X., Xu, Z., Su, H.: Tensoir: Tensorial inverse rendering. In: Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) (2023)   \n[11] Karis, B., Games, E.: Real shading in unreal engine 4. Proc. Physically Based Shading Theory Practice 4(3), 1 (2013)   \n[12] Li, Z., M\u00fcller, T., Evans, A., Taylor, R.H., Unberath, M., Liu, M.Y., Lin, C.H.: Neuralangelo: High-fidelity neural surface reconstruction. In: IEEE Conference on Computer Vision and Pattern Recognition (CVPR) (2023)   \n[13] Liang, R., Chen, H., Li, C., Chen, F., Panneer, S., Vijaykumar, N.: Envidr: Implicit differentiable renderer with neural environment lighting. arXiv preprint arXiv:2303.13022 (2023)   \n[14] Liu, Y., Wang, P., Lin, C., Long, X., Wang, J., Liu, L., Komura, T., Wang, W.: Nero: Neural geometry and brdf reconstruction of reflective objects from multiview images. In: SIGGRAPH (2023)   \n[15] Lorensen, W.E., Cline, H.E.: Marching cubes: A high resolution 3d surface construction algorithm. ACM siggraph computer graphics 21(4), 163\u2013169 (1987)   \n[16] Mai, A., Verbin, D., Kuester, F., Fridovich-Keil, S.: Neural microfacet fields for inverse rendering (2023)   \n[17] Mao, S., Wu, C., Shen, Z., Zhang, L.: Neus-pir: Learning relightable neural surface using pre-integrated rendering. CoRR abs/2306.07632 (2023). https://doi.org/10.48550/ARXIV.2306.07632, https://doi.org/10.48550/arXiv. 2306.07632   \n[18] Mildenhall, B., Srinivasan, P.P., Tancik, M., Barron, J.T., Ramamoorthi, R., Ng, R.: Nerf: Representing scenes as neural radiance fields for view synthesis. Communications of the ACM 65(1), 99\u2013106 (2021)   \n[19] M\u00fcller, T., Evans, A., Schied, C., Keller, A.: Instant neural graphics primitives with a multiresolution hash encoding. ACM Transactions on Graphics (ToG) 41(4), 1\u201315 (2022)   \n[20] Munkberg, J., Hasselgren, J., Shen, T., Gao, J., Chen, W., Evans, A., M\u00fcller, T., Fidler, S.: Extracting Triangular 3D Models, Materials, and Lighting From Images. In: Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). pp. 8280\u20138290 (June 2022)   \n[21] M\u00fcller, M., Casser, V., Lahoud, J., Smith, N., Ghanem, B.: Sim4cv: A photo-realistic simulator for computer vision applications. International Journal of Computer Vision 126(9), 902\u2013919 (2018). https://doi.org/10.1007/s11263-018-1073-7   \n[22] Oechsle, M., Peng, S., Geiger, A.: Unisurf: Unifying neural implicit surfaces and radiance fields for multi-view reconstruction. In: International Conference on Computer Vision (ICCV) (2021)   \n[23] Pharr, M., Jakob, W., Humphreys, G.: Physically Based Rendering: From Theory to Implementation. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 3rd edn. (2016)   \n[24] Reizenstein, J., Shapovalov, R., Henzler, P., Sbordone, L., Labatut, P., Novotny, D.: Common objects in 3d: Large-scale learning and evaluation of real-life 3d category reconstruction. In: International Conference on Computer Vision (2021)   \n[25] Rematas, K., Liu, A., Srinivasan, P.P., Barron, J.T., Tagliasacchi, A., Funkhouser, T., Ferrari, V.: Urban radiance fields. In: Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. pp. 12932\u201312942 (2022)   \n[26] Rojas, S., Zarzar, J., P\u00e9rez, J.C., Sanakoyeu, A., Thabet, A., Pumarola, A., Ghanem, B.: Re-rend: Real-time rendering of nerfs across devices. In: Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV). pp. 3632\u20133641 (October 2023)   \n[27] Schonberger, J.L., Frahm, J.M.: Structure-from-motion revisited. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 4104\u20134113 (2016)   \n[28] Shah, S., Dey, D., Lovett, C., Kapoor, A.: Airsim: High-fidelity visual and physical simulation for autonomous vehicles. In: Field and Service Robotics (2017), https://arxiv.org/abs/ 1705.05065   \n[29] Srinivasan, P.P., Deng, B., Zhang, X., Tancik, M., Mildenhall, B., Barron, J.T.: Nerv: Neural reflectance and visibility fields for relighting and view synthesis. In: CVPR (2021)   \n[30] Sun, C., Cai, G., Li, Z., Yan, K., Zhang, C., Marshall, C., Huang, J.B., Zhao, S., Dong, Z.: Neural-pbir reconstruction of shape, material, and illumination. In: Proceedings of the IEEE/CVF International Conference on Computer Vision (ICCV). pp. 18046\u201318056 (October 2023)   \n[31] Sun, J., Chen, X., Wang, Q., Li, Z., Averbuch-Elor, H., Zhou, X., Snavely, N.: Neural 3d reconstruction in the wild. In: ACM SIGGRAPH 2022 Conference Proceedings. pp. 1\u20139 (2022)   \n[32] Tancik, M., Casser, V., Yan, X., Pradhan, S., Mildenhall, B., Srinivasan, P., Barron, J.T., Kretzschmar, H.: Block-NeRF: Scalable large scene neural view synthesis. arXiv (2022)   \n[33] Torrance, K.E., Sparrow, E.M.: Theory for off-specular reflection from roughened surfaces\u2217. J. Opt. Soc. Am. 57(9), 1105\u20131114 (Sep 1967). https://doi.org/10.1364/JOSA.57.001105, https: //opg.optica.org/abstract.cfm?URI=josa-57-9-1105   \n[34] Verbin, D., Hedman, P., Mildenhall, B., Zickler, T., Barron, J.T., Srinivasan, P.P.: Ref-NeRF: Structured view-dependent appearance for neural radiance fields. CVPR (2022)   \n[35] Walter, B., Marschner, S.R., Li, H., Torrance, K.E.: Microfacet models for refraction through rough surfaces. In: Proceedings of the 18th Eurographics Conference on Rendering Techniques. p. 195\u2013206. EGSR\u201907, Eurographics Association, Goslar, DEU (2007)   \n[36] Wang, P., Liu, L., Liu, Y., Theobalt, C., Komura, T., Wang, W.: Neus: Learning neural implicit surfaces by volume rendering for multi-view reconstruction. arXiv preprint arXiv:2106.10689 (2021)   \n[37] Wang, Y., Skorokhodov, I., Wonka, P.: Hf-neus: Improved surface reconstruction using highfrequency details. Advances in Neural Information Processing Systems 35, 1966\u20131978 (2022)   \n[38] Wang, Z., Bovik, A., Sheikh, H., Simoncelli, E.: Image quality assessment: from error visibility to structural similarity. IEEE Transactions on Image Processing 13(4), 600\u2013612 (2004). https://doi.org/10.1109/TIP.2003.819861   \n[39] Wu, H., Hu, Z., Li, L., Zhang, Y., Fan, C., Yu, X.: Nefii: Inverse rendering for reflectance decomposition with near-field indirect illumination. In: 2023 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). pp. 4295\u20134304 (2023). https://doi.org/10.1109/CVPR52729.2023.00418   \n[40] Yariv, L., Gu, J., Kasten, Y., Lipman, Y.: Volume rendering of neural implicit surfaces. In: Thirty-Fifth Conference on Neural Information Processing Systems (2021)   \n[41] Zhang, J., Yao, Y., Li, S., Liu, J., Fang, T., McKinnon, D., Tsin, Y., Quan, L.: Neilf $^{++}$ : Inter-reflectable light fields for geometry and material estimation. International Conference on Computer Vision (ICCV) (2023)   \n[42] Zhang, K., Luan, F., Li, Z., Snavely, N.: Iron: Inverse rendering by optimizing neural sdfs and materials from photometric images. In: Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. pp. 5565\u20135574 (2022)   \n[43] Zhang, K., Luan, F., Wang, Q., Bala, K., Snavely, N.: PhySG: Inverse rendering with spherical gaussians for physics-based material editing and relighting. In: The IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) (2021)   \n[44] Zhang, R., Isola, P., Efros, A.A., Shechtman, E., Wang, O.: The unreasonable effectiveness of deep features as a perceptual metric. In: 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). pp. 586\u2013595. IEEE Computer Society, Los Alamitos, CA, USA (jun 2018). https://doi.org/10.1109/CVPR.2018.00068, https://doi. ieeecomputersociety.org/10.1109/CVPR.2018.00068   \n[45] Zhang, X., Srinivasan, P.P., Deng, B., Debevec, P., Freeman, W.T., Barron, J.T.: Nerfactor: Neural factorization of shape and reflectance under an unknown illumination. ACM Transactions on Graphics (TOG) (2021)   \n[46] Zhang, Y., Sun, J., He, X., Fu, H., Jia, R., Zhou, X.: Modeling indirect illumination for inverse rendering. In: CVPR (2022) ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "A.1 Derivation of illumination loss ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "In this section, we go through the derivation for the Monte Carlo approximation of pre-integrated illumination $\\bar{g}$ used in eq. (5). We first split the specular light integral into two terms: ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathbf{L}_{s}=\\frac{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}{\\int\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}\\int\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}.\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "As mentioned in section 3.2, the term on the right can be precomputed so we focus on calculating an approximation for the term on the left, which we denote $g(\\omega_{r},\\rho)$ . ", "page_idx": 11}, {"type": "equation", "text": "$$\ng(\\omega_{r},\\rho)=\\frac{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}{\\int\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}.\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "This term requires us to make two approximations to the Cook-Torrance GGX BRDF $\\mathbf{f}_{s}$ ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathbf{f}_{s}=\\frac{D F G}{4\\langle\\omega_{\\mathbf{o}},\\mathbf{n}\\rangle\\langle\\omega_{\\mathbf{i}},\\mathbf{n}\\rangle},\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "to be able to approximate $g$ as blurred environment maps as per the split sum approximation. The first approximation on the BRDF consists of assuming the multiplication between fresnel and geometric shadowing terms is approximately equal to the dot product between the normal and viewing directions: $F G\\approx\\langle\\bar{\\omega_{i}},\\mathbf{n}\\rangle$ . Thus, we have that ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\mathbf{f}_{s}\\approx\\frac{D}{4\\langle\\omega_{o},\\mathbf{n}\\rangle},\\quad g(\\omega_{r},\\rho)\\approx\\frac{\\displaystyle\\int D\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}{\\displaystyle\\int\\int D\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "as shown in Equation (4). The GGX (Trowbridge-Reitz) microfacet distribution function $D$ is defined as: ", "page_idx": 12}, {"type": "equation", "text": "$$\nD(\\omega_{i},\\omega_{o},\\mathbf{n},\\rho)=\\frac{\\rho^{2}}{\\pi(\\langle\\mathbf{h},\\mathbf{n}\\rangle^{2}(\\rho^{2}-1)+1)^{2}},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $\\mathbf{h}$ is the half vector between $\\omega_{i}$ and $\\omega_{o}$ . The second approximation assumes the normal and viewing directions to be equal to the reflection direction. That is, $\\mathbf{n}\\approx\\omega_{r}$ and $\\omega_{o}\\approx\\omega_{r}$ . This leaves us with the following simplified $D$ : ", "page_idx": 12}, {"type": "equation", "text": "$$\nD(\\omega_{i},\\omega_{r},\\rho)\\approx\\frac{\\rho^{2}}{\\pi(\\frac{1+\\langle\\omega_{i},\\omega_{r}\\rangle}{2}(\\rho^{2}-1)+1)^{2}},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "which now does not depend on either the normal or viewing directions. Approximating both integrals with Monte Carlo sampling and taking the same number of samples, we arrive at the following expression: ", "page_idx": 12}, {"type": "equation", "text": "$$\ng(\\omega_{r},\\rho)\\approx\\frac{\\displaystyle\\sum_{\\Omega}D(\\omega_{i},\\omega_{r},\\rho)\\mathbf{L}_{i}\\langle\\omega_{i},\\omega_{r}\\rangle}{\\displaystyle\\sum_{\\Omega}D(\\omega_{i},\\omega_{r},\\rho)\\langle\\omega_{i},\\omega_{r}\\rangle}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "We finally obtain the expression for $\\bar{g}$ in eq. (5) by replacing $\\mathbf{L}_{i}$ with the estimates from $\\hat{g}$ querying perfect specular reflections $\\hat{g}(\\omega,0)$ . A side effect of the approximations used is that for $\\rho=1$ in eq. (15), we have that $\\begin{array}{r}{D(\\omega_{i},\\omega_{r},1)\\approx\\frac{1}{\\pi}}\\end{array}$ and together with eq. (13) we obtain that ", "page_idx": 12}, {"type": "equation", "text": "$$\ng(\\mathbf{n},1)\\approx\\frac{1}{\\pi}\\int\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "This allows us to reuse the same network $\\hat{g}$ used to approximate $\\mathbf{L}_{s}$ also approximate $\\mathbf{L}_{d}$ as follows: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\hat{\\bf L}_{d}=\\hat{g}(\\hat{\\bf n},1)\\hat{\\bf k}_{d}\\hat{\\bf a}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "A.2 BRDF details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "The only remaining terms to compute for obtaining diffuse and specular components are the precomputed BRDF integral and the diffuse coefficient $\\mathbf{k}_{d}$ which we compute following [11]. Given our material property estimates we can compute $\\mathbf{k}_{d}$ as follows: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\hat{\\mathbf{F}}_{0}=(1-\\hat{m})*0.04+\\hat{m}*\\hat{\\mathbf{a}},}\\\\ &{\\hat{\\mathbf{F}}_{r}=\\hat{\\mathbf{F}}_{0}+\\left(1-\\hat{\\rho}-\\hat{\\mathbf{F}}_{0}\\right)*(1-\\langle\\hat{\\mathbf{n}},\\omega_{o}\\rangle)^{5},}\\\\ &{\\hat{\\mathbf{k}}_{d}=(1-\\hat{m})*(1-\\hat{\\mathbf{F}}_{r}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Finally, we store two coefficients $F_{1}$ and $F_{2}$ in a two-dimensional lookup table as per [11] and compute the BRDF integral as follows: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\int_{\\Omega}\\mathbf{f}_{s}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}=\\hat{\\mathbf{F}}_{r}*F_{1}+F_{2}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "The final expressions for the diffuse and specular coefficients are thus ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\hat{\\mathbf{L}}_{d}=\\hat{g}(\\hat{\\mathbf{n}},1)\\hat{\\mathbf{k}}_{d}\\hat{\\mathbf{a}},\\quad\\hat{\\mathbf{L}}_{s}=\\hat{g}(\\hat{\\omega}_{r},\\hat{\\rho})\\ast(\\hat{\\mathbf{F}}_{r}\\ast F_{1}+F_{2}).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "A.3 Derivation of occlusion factor approximation ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We now go over the derivation of the occlusion factor Monte Carlo approximation. We aim to approximate occlusion factors $\\mathbf{o}_{d}(\\mathbf{x})$ and $\\mathbf{o}_{s}(\\mathbf{x})$ such that the diffuse/specular components with visibility, $\\mathbf{L}_{d}^{V}$ and $\\mathbf{L}_{s}^{V}$ , can be computed as a multiplication between the diffuse/specular components without visibility, $\\mathbf{L}_{d}$ and $\\mathbf{L}_{s}$ , and their respective occlusion factors. For the diffuse component, ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbf{L}_{d}^{V}=\\mathbf{k}_{d}\\frac{\\mathbf{a}}{\\pi}\\int\\mathbf{L}_{i}V_{i}\\langle\\omega_{\\mathbf{i}},\\mathbf{n}\\rangle d\\omega_{i}=\\frac{\\displaystyle\\int\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}{\\displaystyle\\int\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}\\mathbf{k}_{d}\\frac{\\mathbf{a}}{\\pi}\\int\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}.}\\\\ &{}&{\\qquad\\mathrm{~}\\qquad\\qquad\\qquad\\qquad\\int\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}\\\\ &{}&{\\mathrm{~\\!\\!\\!\\!\\!\\!\\!\\mathrm{Thus},~}\\mathbf{L}_{d}^{V}=\\mathbf{o}_{d}(\\mathbf{x})\\mathbf{L}_{d}\\,\\mathrm{with\\!\\!\\!\\!\\!\\!\\mathbf{o}}_{d}(\\mathbf{x})=\\frac{\\displaystyle\\Omega}{\\displaystyle\\int\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle d\\omega_{i}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "To incorporate this information, we learn this factor for the diffuse radiance. We propose learning the occlusion factor $\\mathbf{o}_{d}(\\mathbf{x})$ with an MLP, supervising it with Monte Carlo estimates $\\bar{\\bf o}_{d}({\\bf x})$ using the predicted geometry. We approximate $\\mathbf{o}_{d}(\\mathbf{x})$ with Monte Carlo sampling by taking the same number of $\\omega_{i}$ samples for both integrals: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\bar{\\mathbf{o}}_{d}(\\mathbf{x})=\\frac{\\displaystyle\\sum_{\\omega_{i}\\in\\Omega}\\mathbf{L}_{i}V_{i}}{\\displaystyle\\sum_{\\omega_{i}\\in\\Omega}\\mathbf{L}_{i}},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "with $\\omega_{i}$ taken from a cos-weighted sampling of the hemisphere around the normal $\\mathbf{n}$ at location $\\mathbf{x}$ The probability density function sampled is given by: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\operatorname{pdf}(\\omega_{i};\\mathbf{n})=\\frac{\\langle\\omega_{i},\\mathbf{n}\\rangle}{\\pi},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "This cos-weighted sampling aids in reducing variance by eliminating the dot product factor from the estimation. ", "page_idx": 13}, {"type": "text", "text": "Similarly, for the specular component we have that ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\mathrm{\\boldmath~\\cal~L~}_{s}^{V}=\\int\\mathbf{f}_{s}\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}=\\frac{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}}{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}}\\int\\mathbf{f}_{s}\\mathbf{L}_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}.}}\\\\ &{}&{\\stackrel{\\mathrm{\\boldmath~\\it~\\Omega~}}{\\Omega}\\mathrm{\\boldmath~\\,~}}\\\\ {\\mathrm{Thus,~}\\mathbf{L}_{s}^{V}=\\mathbf{o}_{s}({\\bf x})\\mathbf{L}_{s}\\mathrm{\\boldmath~with~}{\\bf o}_{s}({\\bf x})=\\frac{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}}{\\int\\mathbf{f}_{s}\\mathbf{L}_{i}\\langle\\omega_{i},{\\bf n}\\rangle d\\omega_{i}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "We then use the approximation for $\\mathbf{f}_{s}$ in eq. (13), leading to the following Monte Carlo estimate for $\\bar{\\bf o}_{s}({\\bf x})$ : ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\bar{\\mathbf{o}}_{s}(\\mathbf{x})=\\frac{\\underset{\\omega_{i}\\in\\Omega}{\\sum}\\mathbf{L}_{i}V_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle}{\\underset{\\omega_{i}\\in\\Omega}{\\sum}\\mathbf{L}_{i}\\langle\\omega_{i},\\mathbf{n}\\rangle},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\omega_{i}$ is now obtained by sampling the GGX distribution to reduce variance by eliminating the factor $D$ from both integrals. The probability density function sampled in this case is the following: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathrm{pdf}(\\omega_{i};\\omega_{r},\\rho)=\\frac{D(\\omega_{i},\\omega_{r},\\rho)\\langle\\mathbf{n},\\omega_{h}\\rangle}{4\\langle\\mathbf{n},\\omega_{o}\\rangle},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "which relies on the second approximation used in the previous section, and where $\\omega_{h}$ is the half-vector angle between $\\omega_{i}$ and $\\omega_{o}$ . ", "page_idx": 13}, {"type": "text", "text": "A.4 Implementation details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We embed our proposed lighting decomposition within an efficient implementation of NeuS [7]. We train our models for 20, 000 steps using a warmup learning rate scheduler for the first 500 steps followed by an exponential decay scheduler. After every 2000 steps, we estimate the current geometry by using marching cubes [15] to extract the isosurface at SDF level-set 0. The estimated geometry is used with 64 samples for the Monte Carlo estimation of occlusion factors. We use a random subset of $10\\%$ of the points from volume rendering to supervise the occlusion network to reduce time and memory requirements. 8129 light samples are used for computing illumination loss Monte Carlo estimates. The final loss is calculated as a linear combination of the proposed losses, with the following coefficients: $\\lambda_{\\mathrm{rec}}=10.0$ , $\\lambda_{D}=10.0$ , $\\lambda_{o}=0.01$ , $\\lambda_{\\mathrm{Eik}}=0.1$ , and $\\lambda_{m}=0.001$ . We run all experiments on a single A100 GPU with 60GB RAM and 6 CPU workers using an AMD EPYC 7713 64-Core processor for a total training time of ${\\sim}1$ hour. ", "page_idx": 14}, {"type": "text", "text": "Network implementation details. We implement the spatial network using the progressive hash grid encoding from [12]. The hash grid consists of 16 levels with 2 features per level and a hashmap size of $2^{19}$ entries. The base grid spatial resolution is 32 voxels, increasing by ${\\sim}1.32$ each level. An MLP with a single 64-channel hidden layer is used to produce spatial features with 13 channels along with the SDF predictions. Spatial features are then input to an MLP with two hidden layers of 256 channels each and ReLU activations to produce material property (metalness, roughness, and albedo) predictions. A separate but identical MLP is used to produce occlusion factor predictions. A sigmoid is used to map the MLP outputs to the occlusion factor and material properties\u2019 ranges of $[0,1]$ . The illumination network consists of an MLP with five hidden layers with 256 channels each and ReLU activations. Both the direction and roughness vectors used as input to the illumination network are first positionally encoded as proposed in [18], using 10 frequencies for the directional input and 5 for the roughness input. A softplus function is used to map the illumination network\u2019s output to the range $(0,\\operatorname{inf})$ . ", "page_idx": 14}, {"type": "text", "text": "A.5 Per-scene quantitative results ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We report per-scene metrics for geometry, albedo, and relighting reconstruction using the NeRFactor dataset in tables 4 to 6. We report per-scene metrics for geometry and relighting using the Blender dataset in tables 7 to 10, and using the Shiny Blender dataset in tables 11 to 14. Additionally, we present qualitative results of our method visualizing the learnt illumination, material properties (metalness, roughness, and albedo), geometry, and relit renderings from our method\u2019s predictions for the Blender dataset in figs. 7 to 14 and for the Shiny Blender dataset in figs. 15 to 19. ", "page_idx": 14}, {"type": "text", "text": "A.6 CO3D qualitative relighting results ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We present qualitative results of our method visualizing the learnt illumination, material properties (metalness, roughness, and albedo), geometry, and relit renderings from our method\u2019s predictions for the CO3D dataset in figs. 20 to 23. Even in this challenging real-world setting where images are taken from a user-captured video, our method provides good-quality results. ", "page_idx": 14}, {"type": "text", "text": "A.7 Additional qualitative videos ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Please refer to the included video files for additional qualitative videos showing predicted renders, material properties, and relighting for the Blender, Shiny Blender, and CO3D datasets. All videos follow the same camera trajectory at a fixed distance from the center of the scene. Please note that due to objects in CO3D lacking training images viewing the upper or lower surfaces of objects, the reconstruction quality at these locations suffers. This issue could be alleviated with better video-capturing trajectories. ", "page_idx": 14}, {"type": "table", "img_path": "clAOSSzT6v/tmp/7fab6e4de3dfac3459c1f4a84a7d52903418369389507f0b0b26dd808704c1c5.jpg", "table_caption": ["Method ", "MAE \u2193 "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "clAOSSzT6v/tmp/9d7edcaa1fb5b8b1010df53a16fb2c987cf439e1bb0279bd57b50c56e3dbd2bc.jpg", "table_caption": ["Table 4: NeRFactor per-scene MAE. "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "clAOSSzT6v/tmp/dbd64b67fe42d62a2c26ac7d76ba08b71364cb0e8d32402063379b097148af0b.jpg", "table_caption": ["Table 5: NeRFactor per-scene relighting metrics. "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "clAOSSzT6v/tmp/b422e31fcf0069d90e74f282bab38e8cb544941b705afb022c61e0dee06ce008.jpg", "table_caption": ["Method ", "Table 6: NeRFactor per-scene albedo metrics. ", "MAE \u2193 "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "clAOSSzT6v/tmp/505edb0d3da108b8bc693df688947cb3cd35e5128664a7e94bea6138c4cea32f.jpg", "table_caption": ["Method ", "Table 7: Blender per-scene MAE. ", "PSNR \u2191 ", "Table 8: Blender per-scene PSNR. "], "table_footnote": [], "page_idx": 15}, {"type": "table", "img_path": "clAOSSzT6v/tmp/17fac05e3779e5d9c2214f7b972f5c19d63e21392d4da021d013f21f201721d4.jpg", "table_caption": ["SSIM \u2191 "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "Table 9: Blender per-scene SSIM. ", "text_level": 1, "page_idx": 16}, {"type": "table", "img_path": "clAOSSzT6v/tmp/c556e3a7a9f91ea55f243189e3708d71ff825f8ac535b1e10b351f195276134d.jpg", "table_caption": ["Method ", "LPIPS \u2193 "], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "clAOSSzT6v/tmp/7fe2e61fb1d8c9381426f221da1d38728d2907a373efcb17dcfc41109054b5dd.jpg", "table_caption": ["Method ", "Table 10: Blender per-scene LPIPS. ", "MAE \u2193 "], "table_footnote": ["Table 11: Shiny Blender per-scene MAE. "], "page_idx": 16}, {"type": "text", "text": "", "page_idx": 16}, {"type": "table", "img_path": "clAOSSzT6v/tmp/4f14b49cc8c39ad714ce82987e3bfea7f43e905bf706474fc9d31c26cc454b8f.jpg", "table_caption": ["PSNR \u2191 "], "table_footnote": ["Table 12: Shiny Blender per-scene PSNR. "], "page_idx": 16}, {"type": "table", "img_path": "clAOSSzT6v/tmp/0f4eb614fa199d14406138d5f9db56e2cfb710ad3a1afad19c83804c5b59bf56.jpg", "table_caption": ["SSIM \u2191 "], "table_footnote": ["Table 13: Shiny Blender per-scene SSIM. "], "page_idx": 16}, {"type": "table", "img_path": "clAOSSzT6v/tmp/341420f259b2a79c8cc72a86789030d82c5c18caa22dbe735938fd0cba0ffbea.jpg", "table_caption": ["Method ", "LPIPS \u2193 "], "table_footnote": ["Table 14: Shiny Blender per-scene LPIPS. "], "page_idx": 17}, {"type": "image", "img_path": "clAOSSzT6v/tmp/19ca86c1573971d0453f56df817bfad67096ac979508ea4415a4e0090bda6d01.jpg", "img_caption": ["Figure 7: Qualitative results on the Blender \u2018chair\u2019 scene. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "clAOSSzT6v/tmp/76f8a7be85c71bb22e7b85f35c15042faa8b2fdd8906d360e7a52b2d1371770e.jpg", "img_caption": ["Figure 8: Qualitative results on the Blender \u2018drums\u2019 scene. "], "img_footnote": [], "page_idx": 18}, {"type": "image", "img_path": "clAOSSzT6v/tmp/b9c04f227e4434854321996ba7c924c5fda02095caee0e96094158a92bf4b176.jpg", "img_caption": ["Figure 9: Qualitative results on the Blender \u2018ficus\u2019 scene. "], "img_footnote": [], "page_idx": 18}, {"type": "image", "img_path": "clAOSSzT6v/tmp/11fc0abc2e4053c7c76c7adeeee300fae7cbaa592f775039d59f1b14544de037.jpg", "img_caption": ["Figure 10: Qualitative results on the Blender \u2018hotdog\u2019 scene. "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "clAOSSzT6v/tmp/228f28903b42e9a054838c31afd05ce9b7debcc9f807d1786a26e1a84ce8a484.jpg", "img_caption": ["Figure 11: Qualitative results on the Blender \u2018lego\u2019 scene. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "GT Envmap ", "page_idx": 20}, {"type": "text", "text": "Pred Envmap ", "page_idx": 20}, {"type": "image", "img_path": "clAOSSzT6v/tmp/be2ee31fefd3506cb0d1129ea7fa720e4a05c7c80e800c7943f49dc6a47e7e8a.jpg", "img_caption": [], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "clAOSSzT6v/tmp/6ed18ba8d750ffbbd9a451b44f328cda9bce9e3b51eca8fad7eac7856c58d2a2.jpg", "img_caption": [], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "Figure 12: Qualitative results on the Blender \u2018materials\u2019 scene. ", "page_idx": 20}, {"type": "image", "img_path": "clAOSSzT6v/tmp/0aa8917af64f237f1d2409355de0d9db42f92dc7e2241fc2463d41d08ea17351.jpg", "img_caption": ["Figure 13: Qualitative results on the Blender \u2018mic\u2019 scene. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "GT Envmap ", "page_idx": 21}, {"type": "text", "text": "Pred Envmap ", "page_idx": 21}, {"type": "image", "img_path": "clAOSSzT6v/tmp/631c60efcb6fab0c1fd0cb6a0876ddc30eb8bffda6093112f90ff8acab108708.jpg", "img_caption": ["Figure 14: Qualitative results on the Blender \u2018ship\u2019 scene. "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "clAOSSzT6v/tmp/4a745fd0b10a9bb7ecdc3360f414d5b3464d58f9b66352624db99a9df62f9be8.jpg", "img_caption": ["Figure 15: Qualitative results on the Shiny Blender \u2018car\u2019 scene. "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "clAOSSzT6v/tmp/719516e4a9e786665c844df4ef188c163ba377791c8adaf0ee70cbfb7fc75372.jpg", "img_caption": ["Figure 16: Qualitative results on the Shiny Blender \u2018coffee\u2019 scene. "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "clAOSSzT6v/tmp/48d64fc7506fe343081fd99eeaa5fbe096888a33cf64ab3d14f5678e5629e31b.jpg", "img_caption": ["Figure 17: Qualitative results on the Shiny Blender \u2018helmet\u2019 scene. "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "clAOSSzT6v/tmp/1c25c7dd492815ae37509536aabb362659647beae8bed24de20551c186edd0b5.jpg", "img_caption": ["Figure 18: Qualitative results on the Shiny Blender \u2018teapot\u2019 scene. "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "clAOSSzT6v/tmp/8ec18c9bde1e946935098f0b78e998724f3ff995452943c3d7e1989d13fbb23c.jpg", "img_caption": ["Figure 19: Qualitative results on the Shiny Blender \u2018toaster\u2019 scene. "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "clAOSSzT6v/tmp/f514ab5be5c72a0e3b300449ceecd8ed17b38b1fa0967c487349f50270078243.jpg", "img_caption": [], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "Figure 20: Qualitative results on the CO3D car scene \u2018421_58407_112553\u2019. ", "page_idx": 24}, {"type": "image", "img_path": "clAOSSzT6v/tmp/3b59fffbf574fc84002870d2aea97bfa2874e6a216ac2ad2af33fb8f514d5fd0.jpg", "img_caption": [], "img_footnote": [], "page_idx": 24}, {"type": "text", "text": "Figure 21: Qualitative results on the CO3D car scene \u2018112_13250_22955\u2019. ", "page_idx": 24}, {"type": "image", "img_path": "clAOSSzT6v/tmp/f1c0717642b92c794ca6c7d87d9f11090bcfd2bd4400815d2246b284ce147346.jpg", "img_caption": [], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "Figure 22: Qualitative results on the CO3D ball scene \u2018373_41665_83166\u2019. ", "page_idx": 25}, {"type": "image", "img_path": "clAOSSzT6v/tmp/eabebb914119990559f9cdc61907ab30c937b3a2ef03d329a8ab23f088258a86.jpg", "img_caption": [], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "Figure 23: Qualitative results on the CO3D cup scene \u201834_1428_4472\u2019. ", "page_idx": 25}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: Claims made in the abstract and introduction are backed by experimental results. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 26}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Justification: We provide a discussion of the limitations of our work in section 6. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 26}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We provide the derivation along as assumptions made for our proposed illumination regularization and occlusion factors in appendices A.1 and A.3. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 27}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We provide the implementation details in appendix A.4. Additionally, we provide the code as supplementary material and will make the code public upon acceptance. All datasets used are publicly available. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 27}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The code is provided as a zip file along with the supplementary material. All datasets used are publicly available. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 28}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We provide the implementation details in appendix A.4. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 28}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 28}, {"type": "text", "text": "Answer: [No] ", "page_idx": 28}, {"type": "text", "text": "Justification: We do not provide error bars due to the runtime cost. While training for a scene is relatively fast for our method ( 1 A100 GPU hour), the total runtime including training and evaluation for all baselines in our main experiment becomes prohibitively expensive for computing error bars. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 28}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 29}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We report the average compute time and computational resources used for each experiment. [TODO] ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 29}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: [TODO] ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 29}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We discuss the potential positive societal impacts in section 1. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 29}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 30}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 30}, {"type": "text", "text": "Justification: The paper poses no such risk. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 30}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We properly credit the owners of data used in the paper. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 30}, {"type": "text", "text": "", "page_idx": 31}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 31}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 31}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 31}, {"type": "text", "text": "", "page_idx": 32}]