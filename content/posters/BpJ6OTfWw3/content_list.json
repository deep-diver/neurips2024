[{"type": "text", "text": "Clustering then Propagation: Select Better Anchors for Knowledge Graph Embedding ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Ke Liang1 Yue Liu1 Hao Li1 Lingyuan Meng1 Suyuan Liu1 Siwei Wang2 Sihang Zhou1 Xinwang Liu1\u2217 1National University of Defense Technology, Changsha, China 2Academy of Military Sciences, Beijing, China ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Traditional knowledge graph embedding (KGE) models map entities and relations to unique embedding vectors in a shallow lookup manner. As the scale of data becomes larger, this manner will raise unaffordable computational costs. Anchorbased strategies have been treated as effective ways to alleviate such efficiency problems by propagation on representative entities instead of the whole graph. However, most existing anchor-based KGE models select the anchors in a primitive manner, which limits their performance. To this end, we propose a novel anchorbased strategy for KGE, i.e., a relational clustering-based anchor selection strategy (RecPiece), where two characteristics are leveraged, i.e., (1) representative ability of the cluster centroids and (2) descriptive ability of relation types in KGs. Specifically, we first perform clustering over features of factual triplets instead of entities, where cluster number is naturally set as number of relation types since each fact can be characterized by its relation in KGs. Then, representative triplets are selected around the clustering centroids and further mapped into corresponding anchor entities. Extensive experiments on six datasets show that RecPiece achieves higher performances but comparable or even fewer parameters compared to previous anchor-based KGE models, indicating that our model can select better anchors in a more scalable way. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Knowledge graphs (KGs) [35], such as Freebase [5], Wikidata [69], consist of a large number of relational facts, such as Freebase [5], Wikidata [69], YAGO [51] and NELL [8], consist of a large number of relational facts, which are generally in the format of triplets, i.e., (head entity, relation, tail entity). Each triplet in KGs reveals a specific connection between entities. To leverage such informative knowledge to enhance the capacity of models in different fields [75, 24, 84] and applications [40, 43, 38], multiple knowledge graph embedding (KGE) models [59, 60, 48, 42, 82, 32, 31, 15, 14, 34, 35, 36, 81, 80] have been proposed these years. ", "page_idx": 0}, {"type": "text", "text": "However, traditional KGE models usually encode the entities, relations, and factual triplets in KGs shallowly. Assuming the dimension as $d$ , traditional KGE models, such as RotatE [61], will map these elements in KGs into subspace $\\mathbb{R}^{N\\times d}$ , where $N$ is the number of the target objects. Such a shallow lookup manner in these traditional KGE models results in a linear growth of memory consumption for storing the embedding matrix and incurs high computational costs [13]. Thus, as the scale of data becomes larger and larger, top-level GPU or CPU clusters with more memory space are required for these traditional KGE models. For example, about $78\\mathbf{M}\\times200d$ entity feature matrix and 58.1 GB GPU RAM [20] are needed for the best-performing model on PyTorch-BigGraph dataset [29]. ", "page_idx": 0}, {"type": "image", "img_path": "BpJ6OTfWw3/tmp/ea2975c7f5a50009a5a7a71b802d4cce2e1ff3df8e8d0bba8b207a76c35f229b.jpg", "img_caption": ["Shallow Knowledge Graph Embedding Complexity Increases along with Entity Space Figure 1: The problem of shallow knowledge graph embedding method. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "To address such efficiency problems, there are three typical strategies integrated with KGE models, including quantification [37, 53, 71], knowledge distillation [22, 72, 55, 85], and anchor-based sampling [20, 70, 30, 78]. However, the first two types of strategies aim to realize more lightweight models for deployment by compressing the normal-size trained model. In other words, the standard KGE models still need to be trained on large datasets in advance. Compared to them, the anchor-based sampling strategy, raised by [20], will be more efficient in both training and deployment phrases, since it actually reduces the size of the entity set for propagation, i.e., from an intact set of all of the entities to an anchor set of some representative entities. Note that propagation means the feature aggregation procedure. Compared to quantification and knowledge distillation, anchor-based sampling can be easily composed with different KGE baselines to optimize the efficiency of these models. ", "page_idx": 1}, {"type": "text", "text": "While, most of the existing anchor-based KGE models [20, 70, 30, 78] select the anchors in a primitive manner, e.g., random selection, and manual selection of different centrality measurement strategies [20], etc. Thus, the anchor quality cannot be well guaranteed, which limits the performance of the models. In particular, the weights for each strategy on different datasets are usually determined according to grid searching, which is resource-consuming. In addition, considering efficiency will generally bring performance loss compared to the selected shallow KGE backbones. Therefore, reducing performance loss while ensuring good efficiency is also a problem that our work expects to solve. More related works are discussed in Appendix A.2 due to the space limitation. ", "page_idx": 1}, {"type": "text", "text": "Our work takes an attempt to design a more reasonable and accurate anchor selection strategy for better-quality knowledge embedding. During the investigation, two important characteristics come to our sights and are used in our RecPiece, including: (1) representative ability of the cluster centroids and (2) descriptive ability of relation types in KGs. Specifically, cluster centroids are proven as the most representative samples within corresponding clusters in various works [67, 52, 26, 46]. Meanwhile, clustering will not introduce too many procedures via unsupervised learning techniques, which is proper to be adopted as the core mechanism for anchor selection in an efficient KGE model. Furthermore, typical clustering algorithms require two inputs, i.e., clustering features and cluster number. Both of them should be determined according to the characteristics of KGs, thus leading the clustering-based mechanism more suitable for the data type of KGs. As known to all, KGs focus more on relationships between entities compared to other graph types, so each factual triplet in KGs reveals relational knowledge. In addition, triplets can be easily categorized into different clusters according to relation types in KGs. For example, (Mike, father of, Tom) and (John, father of, James) can both be characterized into same type, i.e., facts to reveal the \"father of\" relationship. The characteristic shows the descriptive ability of relation types in KGs. Inspired by it, we select features of factual triplets instead of entities as the clustering features, and the number of relation types is set as the cluster number. Note both of the information can be easily obtained as the attributes in any KGs. ", "page_idx": 1}, {"type": "text", "text": "To this end, we propose RecPiece, a novel anchor-based KGE model with a relational clustering-based anchor selection strategy. Specifically, we perform clustering over the features of the relational facts instead of entities, where the cluster number is naturally set to the number of relation types since each fact can be characterized by its relation in KGs. Then, the representative triplets are selected around the clustering centroids, which are further mapped into corresponding anchor entities. Extensive experiments are conducted on both link prediction and entity classification among RecPiece, shallow KGE models, and typical anchor-based KGE baseline, i.e., NodePiece, to demonstrate the promising capacity of our RecPiece from six aspects, i.e., superiority, effectiveness, scalability, efficiency, transferability, and sensitivity. In summary, the contributions are shown from three aspects below: ", "page_idx": 1}, {"type": "text", "text": "\u2022 Problem. We analyze the limitations of previous anchor-based KGE models, and point out two useful characteristics: (1) representative ability of the cluster centroids and (2) descriptive ability of relation types in KGs, which guide RecPiece to address the limitations. ", "page_idx": 1}, {"type": "text", "text": "\u2022 Method. We design a novel anchor-based KGE model with a relational clustering-based anchor selection strategy. In particular, we perform clustering on the features of factual triplet into $|{\\mathcal{R}}|$ (the number of relation types) clusters, which can be easily determined as the attributes of any given KGs, thus leading to a more scalable and explainable efficient KGE model. ", "page_idx": 2}, {"type": "text", "text": "\u2022 Experiment. Extensive experiments show that RecPiece can endow shallow KGE models to have better efficiency but without significant performance losses compared to other anchor-based KGE models on various downstream tasks, indicating that our model can select better anchors in a more scalable way. In particular, RecPiece is not only $84\\mathrm{x}$ and $1.2\\mathbf{x}$ lightweight than shallow KGE baseline, i.e., AutoSF, and anchor-based KGE baseline, i.e., NodePiece, but also makes $9.5\\%$ and $4.9\\%$ ranking performance improvements on MRR. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "This section summarizes the recent related works from three aspects: i.e., traditional knowledge graph embedding (KGE) model, parameter-efficient model, and anchor-based strategy. Due to the space limitation, please refer to Appendix A.2 for details. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The methodology of our RecPiece is illustrated in this section. More concretely, we first formulate the task and present the overall framework of RecPiece. Then, we further introduce the modules and procedures within RecPiece in detail, especially for the relational clustering-based anchor selection procedure. At last, we provide a comprehensive discussion on the excellent attributes of RecPiece, which is enlightening for understanding our model. The framework of RecPiece is shown in Fig. 2. ", "page_idx": 2}, {"type": "text", "text": "3.1 Prelinmary ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Task Formulation The knowledge graph is the directed relational graph, denoted as $K G=(\\mathcal{E},\\mathcal{R},\\mathcal{G})$ , where $\\mathcal{E}$ , $\\mathcal{R}$ and $\\mathcal{G}$ represent the set of entities (i.e., nodes), relations (i.e., edge types) and fact triplets (i.e., edges), respectively. Similar to typical anchorbased baseline [20], RecPiece are more like a plugand-play auxiliary module, which can be easily applied to any KGE model to reduce the space complexity of the adopted KGE backbone. Moreover, RecPiece is evaluated on different downstream tasks, i.e., link prediction and entity classification. Note that the focus of this work is not only on those ranking and classification metrics but also the efficiency. In other words, the main goal of our RecPiece is to achieve better performances on different tasks with fewer or comparable parameters compared to the previous anchor-based KGE models. ", "page_idx": 2}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/00d96a1f87f4bdefb490da0ecdf14c6c440534ccadb211016160a5b073aed6a3.jpg", "table_caption": ["Table 1: Notation summary. "], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "Knowledge Graph Characteristic Knowledge graphs (KGs) [35, 25] store the relational facts intuitively. Compared to other graph data, KG focuses more on the relationships between entities, and the knowledge is stored in the factual triplets. Moreover, considering adopting the clustering algorithm for anchor selection, the cluster number can be easily fetched according to the number of relation types. Thus, we selected the features of triplets as the clustering features in this paper. ", "page_idx": 2}, {"type": "text", "text": "3.2 Overview Framework ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Our RecPiece is a novel anchor-based KGE model with a relational clustering-based anchor selection strategy, which contains five procedures as shown in Fig. 2, including (a) feature preparation, (b) clustering over features of factual triplets, (c.1) candidate triplet selection, (c.2) triplet-entity mapping and (d) feature propagation. As anchors in RecPiece are selected based on the clustering-based mechanism, we need to generate the clustering features and determine the cluster number in advance. Thus, encoder $p(\\cdot)$ is adopted for triplet feature preparation for clustering in (a). Then, the generated features are clustered into $|{\\mathcal{R}}|$ clusters via $g(\\cdot)$ during (b). Later on, we construct the anchor set via two procedures, (c.1) and (c.2). Finally, feature propagation happens on the anchors constrained with different task losses in (d). More details are described as follows, and notations refer to Tab. 1. ", "page_idx": 2}, {"type": "image", "img_path": "BpJ6OTfWw3/tmp/afe953bf7041c40b34312b31e69fd85a4e4512da44391c8bcf0e9b9a68b8b082.jpg", "img_caption": ["Figure 2: The illustration of our model, which is an anchor-based KGE model, termed RecPiece, by introducing a more explainable and scalable relational clustering-based anchor selection strategy. Note that different factual triplets are coloured in different colours according to relation types, i.e., blue for $r_{1}$ , orange for $r_{2}$ , and green for $r_{3}$ . $p(\\cdot)$ and $f(\\cdot)$ are two encoders for feature preparation and propagation, respectively. Besides, $g(\\cdot)$ is the adopted clustering algorithm with the cluster number set as the number of relation type $|{\\mathcal{R}}|$ , and anchor set construction contains two steps $\\phi_{a}(\\cdot)$ and $\\phi_{b}(\\cdot)$ . Note that the detailed description of the above modules is illustrated in Section 3 and the notations are summarized in Tab. 1. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3.3 Feature Preparation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Feature preparation aims to generate the features for clustering. During the procedure, the encoder $p(\\cdot)$ takes the triplet set $\\mathcal{G}$ as input and outputs the corresponding feature matrix $\\mathbf{H}_{\\mathcal{G}}\\in\\mathbb{R}^{|\\mathcal{G}|\\times d}$ , where the feature vector $\\mathbf{h}_{t_{i}}$ of triplet $t_{i}$ can be easily fetched from the corresponding row as $\\mathbf{H}_{\\mathcal{G}}[i,:]$ . ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{H}_{\\mathcal{G}}=p(\\mathcal{G})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Specifically, $p(\\cdot)$ contains the following steps: we first generate the embeddings of entities and relations with selected knowledge graph encoders. Then, we traverse all factual triplets in $\\mathcal{G}$ and get the feature vector $\\mathbf{h}_{t_{n}}$ for $n^{t h}$ triplet $\\bar{t}_{n}=(e_{h},r,e_{t})$ by summing up the normalized embeddings $\\bar{\\mathbf{h}}$ of entities $(\\bar{\\mathbf{h}}_{\\mathbf{e}_{\\mathbf{h}}},\\bar{\\mathbf{h}}_{\\mathbf{e}_{\\mathbf{t}}})$ and relation $(\\bar{\\mathbf{h}}_{\\mathbf{r}})$ . Finally, the triplet feature matrix $\\mathbf{H}_{t}$ is generated by concatenating all triplet embeddings together. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{H}_{\\mathcal{G}}=\\bigoplus_{t_{n}\\in\\mathcal{G}}\\mathbf{h}_{t_{n}}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "3.4 Relational Clustering-based Anchor Selection ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "As the core of RecPiece, a novel relational clustering-based anchor selection strategy is designed based on characteristics of both clustering centroids and knowledge graphs. Specifically, the selection strategy can be separated into two parts, i.e., cluster centroid generation and anchor set construction. ", "page_idx": 3}, {"type": "text", "text": "3.4.1 Cluster Centroid Generation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We first perform clustering over the priorly generated triplet feature matrix, i.e., $\\mathbf{H}_{t}$ into $|{\\mathcal{R}}|$ clusters, where cluster number is set as the number of the relation types. The adopted clustering algorithm $g(\\cdot)$ can output the embedding vector set of cluster centroids $\\bar{\\mathcal{C}}=\\{{\\mathbf{h}}_{c_{1}},{\\mathbf{h}}_{c_{2}},\\bar{\\mathbf{\\xi}}\\cdot\\cdot\\cdot{\\mathbf{\\xi}},{\\mathbf{h}}_{c_{|\\mathcal{R}|}}\\}$ . ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{C}=g(\\mathbf{H}_{t},|\\mathcal{R}|)\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "3.4.2 Anchor Set Construction ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The cluster centroids are usually not the specific samples in datasets. Thus, we find representative samples as anchors around them. To achieve the goal, two procedures are designed for anchor set construction, including candidate triplet selection $\\phi_{a}(\\cdot)$ and triplet-entity mapping $\\phi_{b}(\\cdot)$ . Concretely, the former procedure aims to select representative triplets for each relation type, while the latter procedure picks up the representative entities based on the triplets to constitute the final anchor set. ", "page_idx": 4}, {"type": "text", "text": "Candidate Triplet Selection. The factual triplets with the top $m_{i}$ closest distance to the cluster centroid $c_{i}\\in\\mathcal{C}$ are selected as the candidate triplets. Specifically, cosine(\u00b7) function is used as the distance function $\\mathrm{{dist}(\\cdot)}$ to measure the distance, which can also be substituted into other functions, such as euclidean $(\\cdot)$ . Then, we can get the distance set $\\mathcal{D}$ for each cluster: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{D}_{i}=\\displaystyle\\bigcup_{t_{n}\\in\\mathcal{G}}\\mathrm{dist}(c_{i},t_{n})}\\\\ &{\\quad=\\displaystyle\\bigcup_{t_{n}\\in\\mathcal{G}}\\Big[\\frac{\\langle\\mathbf{h}_{c_{i}},\\mathbf{H}_{t}[n,:]\\rangle}{\\|\\mathbf{h}_{c_{i}}\\|_{2}\\cdot\\|\\mathbf{H}_{t}[n,:]\\|_{2}}\\Big],}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $t_{n}\\in\\mathcal{G}$ denote the $n^{t h}$ factual triplet, and $\\mathbf{h}_{c_{i}}$ represents the feature vector for centroid $c_{i}$ . ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{T^{*}=\\bigcup_{i\\in[1,|\\mathcal{R}|]}\\ T_{i}}\\\\ &{\\quad=\\bigcup_{i\\in[1,|\\mathcal{R}|]}\\ \\underset{t_{n}}{\\arg\\tan_{\\mathbb{P}-m_{i}}}\\ \\mathcal{D}_{i}\\;,}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where the candidate triplet set $\\mathcal{T}^{*}$ is composed of sets $\\tau$ for different relation types. Triplets, whose embeddings are the top $m_{i}$ closest to $\\mathbf{h}_{c_{i}}\\in\\mathcal{C}$ , are selected as the candidate triplets via arg top- $m_{i}$ . Note that $m_{i}$ is not a hyperparameter, and it can be calculated when given the total anchor number $k$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\nm_{i}=k\\cdot\\frac{|\\mathcal{G}_{i}|}{|\\mathcal{G}|},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $r_{i}$ represents the $i^{t h}$ relation type and $|\\mathcal{G}_{i}|/|\\mathcal{G}|$ is the frequency distribution $\\Theta$ of triplets with relation $r_{i}$ , which can be easily obtained based on the attribute of the KGs. Taking the KG in Fig. 2 as an example, the $[|\\mathcal{G}_{1}|,|\\mathcal{G}_{2}|,\\bar{|\\mathcal{G}}_{3}|]=[7,7,7]$ and $r_{3}$ , and if $k=6$ , $[m_{1},m_{2},m_{3}]=[2,2,2]$ . ", "page_idx": 4}, {"type": "text", "text": "Triplet-Entity Mapping. The entity anchor set $\\boldsymbol{\\mathcal{A}}$ is constructed from the selected triplet set $\\tau^{*}$ by randomly picking either the head or tail entity as the anchor entity corresponding to each triplet. The $|\\mathcal{A}|\\leq|\\dot{\\mathcal{T}}^{*}|$ , since we will remove those identical entities. ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{A}=\\phi_{b}(\\mathcal{T}^{*})}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "3.5 Feature Propagation ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The hashing and encoding procedures in [20] are leveraged for feature propagation. Specifically, the features of each entity $e_{i}$ are first hashed into a hash $(e_{i})$ using two types of anchor information, $i.e.$ , discrete distances and relational contexts. Then, we leverage MLP as the encoder $f(\\cdot)$ to bootstrap the feature embeddings of each entity based on the vectorized hashing features. Besides, according to the types of the downstream tasks, i.e., entity classification and link prediction, various loss functions are adopted for training and optimization. In conclusion, our RecPiece can be integrated with different combinations of KGE backbones and loss functions toward different tasks and scenarios. ", "page_idx": 4}, {"type": "text", "text": "3.6 Attributes of RecPiece ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we further discuss some attributes of the proposed RecPiece from various aspects shown below. (1) Random and manual anchor selection in previous anchor-based models is highly dependent on the human experience. Compared to them, ours is more reasonable and learnable according to the representative ability of the cluster centroids. (2) Our RecPiece is developed based on the characteristics of KGs. Specifically, we perform clustering on features of triplets instead of entities since the knowledge units in KG are stored in triplets, which can also be easily characterized based on the relation type. (3) The hyper-parameter, i.e., cluster number, for clustering algorithms can be determined according to the attributes in KGs in RecPiece as the number of relation types. Thus, our anchor selection only contains one hyper-parameter, i.e., anchor number, which is inevitable and also needed by other anchor-based methods. Besides, other models even need resource-consuming grid-searching to get weights for different centrality measurement strategies on different KGs. (4) Based on the above analyses, RecPiece is also more capable of being extended to various KGE models and applied to different KGs. ", "page_idx": 4}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/8575f40d41848232c7155999d483211f163a1fcacb1e3e9d7f217f93ef7906d4.jpg", "table_caption": ["Table 2: Link prediction results on FB15k-237, WN18RR, CoDEx-L, and YAGO 3-10. $\\%$ denotes the Hits $@10$ ratio regard to the anchor-based KGE baseline, i.e., NodePiece $^+$ RotatE. "], "table_footnote": [], "page_idx": 5}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/3bae03f16a1cdf25928a65021e7f548637f105e05c4f127f8e13b2251dc4b39d.jpg", "table_caption": ["Table 3: Entity classification results on two subsets in $\\mathrm{WD50k}$ . "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "4 Experiment ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Experiments are conducted to demonstrate the promising capacity of our RecPiece from five aspects, i.e., superiority, effectiveness, scalability, efficiency, transferability, and sensitivity, by answering the following six questions. ", "page_idx": 5}, {"type": "text", "text": "\u2022 Q1: Superority. Does RecPiece achieve better performance compared to the previous anchorbased strategy, NodePiece, when integrated with different KGE models for different downstream tasks?   \n\u2022 Q2: Effectiveness. Does the clustering strategy make a difference? Besides, how do the adopted components in RecPiece influence the performance?   \n\u2022 Q3: Efficiency. Will the RecPiece lead to a more parameter-efficient model? What is the performance of time and memory cost?   \n\u2022 Q4: Scalability. How does our RecPiece perform on large-scale knowledge graph?   \n\u2022 Q5: Transferability. Will our RecPiece be effectively integrated with different KGE backbones?   \n\u2022 Q6: Sensitivity. How does the performance influenced by RecPiece with different hyperparameters? ", "page_idx": 5}, {"type": "text", "text": "4.1 Experiment Setting ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Datasets. Six benchmark datasets are leveraged to evaluate our RecPiece as same as previous works do [13, 20, 30]. Specifically, FB15k237 [64], WN18RR [18], CoDEx-L [54], and YAGO3-10 [45] are used for link prediction. The entity classification is carried out on two subsets ${5\\%}$ and $10\\%$ labeled) from WD50K [21], and the OGB WIKIKG 2 [23, 20] is the larger KGs for scalability analysis. The statistic details of the datasets are shown in Tab. 9. ", "page_idx": 5}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/0a8de1d69ead7a381c24511377fe409f968e8c3a3748d1749fbcd9c9efe9956c.jpg", "table_caption": ["Table 4: Dataset Statistic. \"LP\" and \"EC\" denote link prediction and entity classification. \"#\" represents the number. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "Implementation Details. All experiments are conducted on the server with 4-core Intel(R) Xeon(R) Platinum 8358 CPUs $\\textit{@2.60}\\mathrm{GH}\\bar{Z}$ , a single 80 GB A100 GPU and 64GB RAM with PyTorch [49] libraries. ", "page_idx": 5}, {"type": "text", "text": "The $p(\\cdot)$ for feature preparation is selected as pretrained NodePiece [63] in the first few epochs. Besides, $\\boldsymbol{\\mathrm{k}}$ -means [41, 44] is selected as $g(\\cdot)$ for clustering, and the cluster number is set as \"#Rel.\" in Tab. 9 for different datasets. For a fair comparison, we set anchor numbers $k$ for each dataset as the same as [20], and 2-layerMLP is adopted as $f(\\cdot)$ feature propagation. In addition, we replace the default $p\\bar{(}\\cdot),\\,g(\\cdot)$ and $\\mathrm{{dist}(\\cdot)}$ to pretrained GraIL [63], BitechingKmeans [50] and euclidean(\u00b7) for robustness analysis. Moreover, as for different tasks, RecPiece is integrated with three KGE backbones, i.e., Ro", "page_idx": 6}, {"type": "text", "text": "Table 5: Ablation study for different anchor selection strategies.\"EP\" and \"RP\" represent entity prediction and relation prediction. \"NDC\" and \"PPR\" are short for Node Degree Centrality and Personalized PageRank. ", "page_idx": 6}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/24c139c7eb694218c4061b90a0002dff44143827c47d3ebef35a296e94a5b485.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "tatE [61], ComPGCN [68], and AutoSF [79] to compare with thirteen KGE models, including (1) link prediction: TransE [6], DisMult [77], ComplEX [65], PairRE [10], RotatE [61], TripleRE [78], AutoSF [79], LRE $^+$ PairRE [11], NodePiece $^+$ RotatE [20], and NodePiece $^+$ AutoSF [20]; (2) entity classification: MLP, ComPGCN [68], and NodePiece $^+$ ComPGCN [20]. More details are present in Appendix. ", "page_idx": 6}, {"type": "text", "text": "Evaluation Metrics. For link prediction, both MRR [16] and $\\mathrm{Hits}\\ @{\\bf k}$ [1] are used as the ranking metrics. Besides, ROC-AUC, PRC-AUC, AP, and Hard Accuracy are the evaluation metrics [23] for entity classification. To quantify the efficiency, we report the parameter number #P (M), memory cost (GB), running time (hours), and Eff.i [13]. Note that Eff.i [13] is calculated by MRR/#P. ", "page_idx": 6}, {"type": "text", "text": "4.2 Main Performance (RQ1) ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "The performance comparison is carried out between our RecPiece and the existing anchor-based KGE baseline, i.e., NodePiece, on two typical downstream tasks, i.e., link prediction and entity classification. It aims to answer Q1. ", "page_idx": 6}, {"type": "text", "text": "Results Report Tab. 2 shows that RecPiece can achieve better performance on link prediction, i.e., average $6.5\\%$ fewer on parameter number and $3.5\\%$ and $2.5\\%$ improvements on MRR and Hits $@10$ . In particular, the improvements are apparent on FB15k-237 and CoDEx-L. Even though the performance improvements on WN18RR are the smallest, it is still comparable. According to Tab. 3, RecPiece can also achieve promising results on entity classification with about $14.7\\%$ fewer in parameter number and $3.3\\%$ and $4.4\\%$ boosts on PRC-AUC and Hard ACC, respectively. ", "page_idx": 6}, {"type": "text", "text": "Discussion Based on the above results, we can easily get the answer to Q1 that our RecPiece can achieve better performances on both link prediction and entity classification with comparable or even fewer parameters compared to the previous anchor-based strategy, NodePiece [20]. It further indicates less performance loss will be caused by RecPiece in a more parameterefficient manner. Although our RecPiece still ", "page_idx": 6}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/7eb20bd73095f1ef714bbaf7778d7aee72949aab4e31b5eef8f8649954827723.jpg", "table_caption": ["Table 6: Ablation study for whether pretrained based on language models. \"KG-self\" and \"PLM\" represent that the pretrained features are generated on structure information and extra-textual information, respectively. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Table 7: Ablation study for different clustering features. \"triplet\" and \"entity\" represent clustering over the features of relational triplets and entities, respectively. All the results are for link prediction results on FB15k-237 ", "page_idx": 6}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/2281a6e7221d216b68e12de636965d1e2c2e46798cbf284a917a6871482ecd73.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "raises the performance loss compared to the shallow KGE baselines, i.e., RotatE and COMPGCN, it is an inevitable trade-off for considering efficiency (over $90\\%$ reduction on parameters) via anchor-based strategy, which also occurs on other anchor-based KGE models. Moreover, we notice that different performance improvements are made by our RecPiece in different datasets. It may suggest that our RecPiece can achieve better performance on those denser datasets for link prediction, thus leading to fewer improvements on sparser WN18RR compared to denser FB15k-237. ", "page_idx": 6}, {"type": "image", "img_path": "BpJ6OTfWw3/tmp/e6c8210663fe9ec8fcdab6787002f68b0cdf88d125c4e3a1fc786e3daa57f580.jpg", "img_caption": ["Figure 3: Ablation study of different components in RecPiece. (a), (b) and (c) show the impact of the different pretrained triplet encoder $p(\\cdot)$ , clustering algorithm $g(\\cdot)$ , and distance function $\\mathrm{\\bar{dist}}(\\cdot)$ for link prediction task on FB15k-237 "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.3 Ablation Studies (RQ2) ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, different ablation studies are presented to prove the effectiveness of RecPiece. Concretely, we first discuss the effectiveness of our anchor-selection strategy. Then, we further analyze the effectiveness of the important components in each step of RecPiece shown in Section 3.2 and Fig. 2. ", "page_idx": 7}, {"type": "text", "text": "4.3.1 Anchor Selection Strategies ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "The anchors of better quality will definitely contribute to better performances. To prove that our relational clustering-based anchor selection strategy can effectively select better anchors, we compare it with four other strategies, i.e., Random Selection, Node Degree Centrality, Personalized PageRank, and NodePiece, on FB15k-237 for link prediction, which contains two different settings, i.e., missing entity prediction and missing relation prediction. Tab. 5 shows that our anchor selection strategy outperforms other strategies in both two settings. In particular, our strategy makes the $4.3\\%$ and $2.6\\%$ performance boost on MRR and Hits $@10$ metrics compared to the NodePiece-based model. ", "page_idx": 7}, {"type": "text", "text": "4.3.2 Feature Preparation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we discuss the impact of different pretrain triplet encoders in the first step of RecPiece, i.e., feature preparation. ", "page_idx": 7}, {"type": "text", "text": "We first adopt different structural information encoders $p(\\cdot)$ in KGs for pretraining. Fig. 3 (a) shows that both GraIL [63] and default RNP [20] can both achieve promising performance, but RNP is better than the GraIL model. Besides, we also attempt to leverage the typical pretrained language model (PLM), i.e., BERT [27], to prepare the pretrained features over the real textual meaning of different entities and relations. The results are shown in Tab. VII. It indicates that relying on structural information for pretraining on KG link prediction is more promising than extra-textual meaning. It is reasonable that link prediction is indeed a task more related to network structures. However, the results also show the potential capacity of our RecPiece when leveraging the extra information. ", "page_idx": 7}, {"type": "text", "text": "In our model, the pretrained procedure is only used for feature preparation, which can be replaced as you want. No matter which feature preparation it is, the key idea of the paper will not be affected. Nevertheless, our RecPiece can all make improvements when leveraging different pretrained encoders. ", "page_idx": 7}, {"type": "text", "text": "4.3.3 Clustering over Features ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "As for the second step of RecPiece, we discuss and analyze the clustering features and the clustering methods. ", "page_idx": 7}, {"type": "text", "text": "Clustering Features We also conduct experiments to verify that it is better to perform clustering on relational triplet features. Table VI shows that although there are still performance boosts when leveraging entity features, there are more apparent improvements in performances with triplet features. Thus, the results prove our idea, i.e., relational triplet features are more representative than entity features in KGs. Note that we try different cluster numbers for experiments on entity clustering and select the best results of them (with cluster number 10). ", "page_idx": 7}, {"type": "text", "text": "Clustering Methods We also try different clustering methods for anchor selection, i.e., KMeans and BisectingKmeans. Fig. 3 (b) shows that both clustering methods can lead to promising performances. It further indicates that our framework is effective with different clustering method choices, which demonstrates the generalizability of our model. ", "page_idx": 7}, {"type": "text", "text": "4.3.4 Anchor Selection ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "As for the anchor selection step, we further analyze the impact of different distance functions to select the anchors that are closer to the clustering centroids. The experiments are carried out on two types of distance function, i.e., Cosine function and Euclidean function. Fig. 3 (c) demonstrates that RecPiece is robust to different distance functions, where Cosine(\u00b7) is better than Euclidean(\u00b7). But no matter which strategies they are, the performances are higher than the performance without distance function. It further indicates the effectiveness and generalizability of our framework. ", "page_idx": 7}, {"type": "image", "img_path": "BpJ6OTfWw3/tmp/5bc7dfa7a38b262fd200f185d698c8bb650af65352c05045fe660440e498486c.jpg", "img_caption": ["Figure 4: Memory cost and running time comparison. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "4.3.5 Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We comprehensively present ablation studies from different aspects. Tracking all of the results of the experiments demonstrates the effectiveness of RecPiece, which is composed of the answer to Q2. Since the ablation study on feature propagation is to evaluate the effectiveness of different combinations of backbone KGE models, which is similar to transferability analysis, the detailed discussion of this part is shown in Section 4.6. ", "page_idx": 8}, {"type": "text", "text": "4.4 Efficiency Analysis (RQ3) ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "This section presents and discusses the efficiency of RecPiece from three aspects, parameter efficiency, memory efficiency, and time efficiency. As shown in Tab. 2 and Tab. 3, RecPiece can incredible save about 10x, 8x, 26x, $30\\mathrm{x}$ , and $7\\mathbf{x}$ parameters on five benchmark datasets, including FB15k-237, WN18RR, CoDEx-L, YAGO 3-10 and WD50K compared to shallow KGE baselines, i.e., RotatE and COMPGCN. Compared to NodePiece, the results above prove that RecPiece can endow the KGE model to be more parameter-efficiency. Specifically, performance boosts are made on both link prediction and entity classification with comparable or even fewer parameters. It ", "page_idx": 8}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/4d7cc92a2d9b830727f507593b44755f8f2e4c9e471deb019a879991b8765167.jpg", "table_caption": ["Table 8: Link prediction results on OGB WikiKG 2. The best results are marked in Bold. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "further indicates less performance loss will be caused by RecPiece in a more efficient manner. Although we focus more on parameter efficiency, Fig. 4 shows the recorded real GPU cost and running time are comparable and slightly less. Concretely, it has better efficiency on real memory cost and running time, i.e., on average $114\\,\\mathrm{MB}$ and 0.89 hours reduction compared to NodePiece. It further indicates that RecPiece also has a good effect on memory efficiency and time efficiency. ", "page_idx": 8}, {"type": "text", "text": "In conclusion, the efficiency of our RecPiece is promising (RQ3). We also admit that the pre-train paradigm and anchor-based strategies will cost some resources, both in time and memory, which will be optimized in the future. Note that such redundancy is commonly seen in other methods with similar techniques. Considering the performance gains, such a limited cost is also acceptable, which should not influence the effectiveness of RecPiece. ", "page_idx": 8}, {"type": "text", "text": "4.5 Scalability Analysis (RQ4) ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We compare RecPiece with nine state-of-the-art KGE models on OGB WikiKG 2 [23] to measure its scalability to larger KGs. According to Table 8, we observe that our RecPiece $^+$ AutoSF can outperform other KGE models. Specifically, the RecPiece $^+$ AutoSF model has only $5.9\\,\\mathrm{M}$ parameters, about $84\\mathrm{x}$ smaller than the most efficient shallow models, i.e., AutoSF. Meanwhile, it is also about $1.2\\mathbf{x}$ lighter than the anchor-based KGE baseline, i.e., NodePiece $^+$ AutoSF [20], with the same quantity of anchors. Meanwhile, our RecPie ${\\bf\\nabla}\\cdot\\!{\\bf e}+{\\bf A}$ utoSF can even achieve better ranking performances compared to the KGE model with best performance, i.e., about $2.2\\%$ MRR improvement compared to PairRE $^+$ LRE [70]. Moreover, the running time for NodePiece $^+$ AutoSF and RecPiece $^+$ AutoSF is recorded ", "page_idx": 8}, {"type": "image", "img_path": "BpJ6OTfWw3/tmp/7b5c95c5a8a7ef2b99900cc63f00416b5e5b5a2fb111999f7fdffd2b65626fc3.jpg", "img_caption": [], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Figure 5: Sensitive analysis in different settings. (a) and (b) reveals the influence of the models on feature preparation in different epochs (i.e., |P.E.| represents the pretrained epoch number), where (a) is for entity classification on WD15K ${5\\%}$ labeled), and (b) is for link prediction on FB15k-237. (c) indicates the influence of the total anchor number $k$ . (c) is based on link prediction on FB15k-237. ", "page_idx": 9}, {"type": "text", "text": "as 5.33 and 5.25 hours, which is also comparable. We believe that the above results prove the better scalability of RecPiece with promising parameter reduction and better ranking performance. ", "page_idx": 9}, {"type": "text", "text": "4.6 Transferability Analysis (RQ5) ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We answer Q5 in this section. Based on the aforementioned experimental results cover two different downstream tasks, i.e., entity classification and link prediction, and three different types of shallow KGE backbones, i.e., RotatE, COMPGCN, and AutoSF, we can reorganize and analyze the results from another view. First of all, all of the experimental results are promising. In particular, there are $5.2\\%$ MRR performance improvements made by RecPiece on YAGO 3-10 for link prediction when integrated with RotatE. Secondly, the improvements occur in all the situations when the backbone models are integrated with our RecPiece. Therefore, as the conclusion, it is demonstrated that our RecPiece is proven to be easily extended to different tasks and different KGE models as a plug-and-play auxiliary mechanism, which shows great transferability of our RecPiece. ", "page_idx": 9}, {"type": "text", "text": "4.7 Sensitivity Analysis (RQ6) ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We measure the sensitivity of RecPiece from two aspects to answer Q6, including the analysis on (1) pre-trained epochs for the feature preparation model $p(\\cdot)$ , (2) anchor number $k$ . The experiment results are shown in Fig. 5. In general, our RecPiece is insensitive to the hyperparameters, which demonstrates that our RecPiece can achieve stable performances. More specifically, we can get the following two observations according to the aforementioned two aspects. ", "page_idx": 9}, {"type": "text", "text": "(1) Fig. 5 (a) and (b) reveals that there usually exists a pretrained epoch threshold $p e^{*}$ for $p(\\cdot)$ , which indicates that the pretrained features are effective enough to be clustered for anchor selection after $p e^{*}$ , e.g., around 800 epochs (in 4000 epochs) for entity classification on WD15K ${5\\%}$ labeled) and 150 epochs (in 400 epochs) for link prediction on FB15k-237. ", "page_idx": 9}, {"type": "text", "text": "(2) Fig. 5 (b) shows that more anchors will benefit the performance as same as NodePiece. Traditional KGE models propagate the features based on the whole graph, which is equivalent to the anchor set composed of all entities. A larger set of anchors is closer to the complete entity set so that less information will be abandoned, thus leading to better performance. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose a novel anchor-based KGE model with a relational clustering-based anchor selection strategy, RecPiece, where two characteristics are leveraged, i.e., (1) representative ability of the cluster centroids and (2) descriptive ability of relation types in KGs. Specifically, we perform clustering over the features of triplets instead of entities into $|{\\mathcal{R}}|$ (number of relation types) clusters. Then, representative samples are selected around cluster centroids, which are further mapped into corresponding anchor entities. Extensive experiments show that RecPiece can endow shallow KGE models to have fewer parameters without significant performance loss compared to other models, on various tasks, indicating that our model selects better anchors in a more scalable way. In the future, we plan to optimize this preparation procedure via a self-adaptive mechanism along with feature propagation for better practicability and adaptivity in the future. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This work was supported by the National Natural Science Foundation of China (project no. 62325604, 62276271). ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Mehdi Ali, Max Berrendorf, Charles Tapley Hoyt, Laurent Vermue, Mikhail Galkin, Sahand Sharifzadeh, Asja Fischer, Volker Tresp, and Jens Lehmann. Bringing light into the dark: A large-scale evaluation of knowledge graph embedding models under a unified framework. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44(12):8825\u20138845, 2021.   \n[2] Mehdi Ali, Max Berrendorf, Charles Tapley Hoyt, Laurent Vermue, Mikhail Galkin, Sahand Sharifzadeh, Asja Fischer, Volker Tresp, and Jens Lehmann. Bringing light into the dark: A large-scale evaluation of knowledge graph embedding models under a unified framework. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44(12):8825\u20138845, 2021.   \n[3] Youhui Bai, Cheng Li, Zhiqi Lin, Yufei Wu, Youshan Miao, Yunxin Liu, and Yinlong Xu. Efficient data loader for fast sampling-based gnn training on large graphs. IEEE Transactions on Parallel and Distributed Systems, 32(10):2541\u20132556, 2021.   \n[4] Piotr Bojanowski, Edouard Grave, Armand Joulin, and Tomas Mikolov. Enriching word vectors with subword information. Transactions of the association for computational linguistics, 5:135\u2013146, 2017.   \n[5] Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, and Jamie Taylor. Freebase: A collaboratively created graph database for structuring human knowledge. In Proceedings of the 2008 ACM SIGMOD International Conference on Management of Data, SIGMOD \u201908, page 1247\u20131250, New York, NY, USA, 2008. Association for Computing Machinery.   \n[6] Antoine Bordes, Nicolas Usunier, Alberto Garcia-Duran, Jason Weston, and Oksana Yakhnenko. Translating embeddings for modeling multi-relational data. Advances in neural information processing systems, 26, 2013.   \n[7] Irene Cannistraci, Luca Moschella, Valentino Maiorca, Marco Fumero, Antonio Norelli, and Emanuele Rodol\u00e0. Bootstrapping parallel anchors for relative representations. arXiv preprint arXiv:2303.00721, 2023.   \n[8] Andrew Carlson, Justin Betteridge, Bryan Kisiel, Burr Settles, Estevam R. Hruschka, and Tom M. Mitchell. Toward an architecture for never-ending language learning. In Proceedings of the Twenty-Fourth AAAI Conference on Artificial Intelligence, AAAI\u201910, page 1306\u20131313. AAAI Press, 2010.   \n[9] Ines Chami, Adva Wolf, Da-Cheng Juan, Frederic Sala, Sujith Ravi, and Christopher R\u00e9. Low-dimensional hyperbolic knowledge graph embeddings. arXiv preprint arXiv:2005.00545, 2020.   \n[10] Linlin Chao, Jianshan He, Taifeng Wang, and Wei Chu. PairRE: Knowledge graph embeddings via paired relation vectors. In Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pages 4360\u20134369, Online, August 2021. Association for Computational Linguistics.   \n[11] Linlin Chao, Taifeng Wang, and Wei Chu. Pie: a parameter and inference efficient solution for large scale knowledge graph embedding reasoning. arXiv preprint arXiv:2204.13957, 2022.   \n[12] Linlin Chao, Taifeng Wang, and Wei Chu. Pie: a parameter and inference efficient solution for large scale knowledge graph embedding reasoning. arXiv preprint arXiv:2204.13957, 2022.   \n[13] Mingyang Chen, Wen Zhang, Zhen Yao, Yushan Zhu, Yang Gao, Jeff Z. Pan, and Huajun Chen. Entity-agnostic representation learning for parameter-efficient knowledge graph embedding. In AAAI, 2023.   \n[14] Xiang Chen, Lei Li, Shumin Deng, Chuanqi Tan, Changliang Xu, Fei Huang, Luo Si, Huajun Chen, and Ningyu Zhang. LightNER: A lightweight tuning paradigm for low-resource NER via pluggable prompting. In Nicoletta Calzolari, Chu-Ren Huang, Hansaem Kim, James Pustejovsky, Leo Wanner, Key-Sun Choi, Pum-Mo Ryu, Hsin-Hsi Chen, Lucia Donatelli, Heng Ji, Sadao Kurohashi, Patrizia Paggio, Nianwen Xue, Seokhwan Kim, Younggyun Hahm, Zhong He, Tony Kyungil Lee, Enrico Santus, Francis Bond, and Seung-Hoon Na, editors, Proceedings of the 29th International Conference on Computational Linguistics, pages 2374\u2013 2387, Gyeongju, Republic of Korea, October 2022. International Committee on Computational Linguistics.   \n[15] Xiang Chen, Ningyu Zhang, Lei Li, Shumin Deng, Chuanqi Tan, Changliang Xu, Fei Huang, Luo Si, and Huajun Chen. Hybrid transformer with multi-level fusion for multimodal knowledge graph completion. In Proceedings of the 45th international ACM SIGIR conference on research and development in information retrieval, pages 904\u2013915, 2022.   \n[16] Nick Craswell. Mean Reciprocal Rank, pages 1703\u20131703. Springer US, Boston, MA, 2009.   \n[17] Tim R Davidson, Luca Falorsi, Nicola De Cao, Thomas Kipf, and Jakub M Tomczak. Hyperspherical variational auto-encoders. arXiv preprint arXiv:1804.00891, 2018.   \n[18] Tim Dettmers, Pasquale Minervini, Pontus Stenetorp, and Sebastian Riedel. Convolutional 2d knowledge graph embeddings. In Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence and Thirtieth Innovative Applications of Artificial Intelligence Conference and Eighth AAAI Symposium on Educational Advances in Artificial Intelligence, AAAI\u201918/IAAI\u201918/EAAI\u201918. AAAI Press, 2018.   \n[19] Takuma Ebisu and Ryutaro Ichise. Generalized translation-based embedding of knowledge graph. IEEE Transactions on Knowledge and Data Engineering, 32(5):941\u2013951, 2020.   \n[20] Mikhail Galkin, Etienne Denis, Jiapeng Wu, and William L Hamilton. Nodepiece: Compositional and parameter-efficient representations of large knowledge graphs. arXiv preprint arXiv:2106.12144, 2021.   \n[21] Mikhail Galkin, Priyansh Trivedi, Gaurav Maheshwari, Ricardo Usbeck, and Jens Lehmann. Message passing for hyper-relational knowledge graphs. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 7346\u20137359, Online, November 2020. Association for Computational Linguistics.   \n[22] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. arXiv preprint arXiv:1503.02531, 2015.   \n[23] Weihua Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele Catasta, and Jure Leskovec. Open graph benchmark: Datasets for machine learning on graphs. Advances in neural information processing systems, 33:22118\u201322133, 2020.   \n[24] Feicheng Huang, Zhixin Li, Shengjia Chen, Canlong Zhang, and Huifang Ma. Image captioning with internal and external knowledge. In Proceedings of the 29th ACM International Conference on Information &amp; Knowledge Management, CIKM \u201920, page 535\u2013544, New York, NY, USA, 2020. Association for Computing Machinery.   \n[25] Shaoxiong Ji, Shirui Pan, Erik Cambria, Pekka Marttinen, and S Yu Philip. A survey on knowledge graphs: Representation, acquisition, and applications. IEEE transactions on neural networks and learning systems, 33(2):494\u2013514, 2021.   \n[26] Zhao Kang, Zhiping Lin, Xiaofeng Zhu, and Wenbo Xu. Structured graph learning for scalable subspace clustering: From single view to multiview. IEEE Transactions on Cybernetics, 52(9):8976\u20138986, 2021.   \n[27] Jacob Devlin Ming-Wei Chang Kenton and Lee Kristina Toutanova. Bert: Pre-training of deep bidirectional transformers for language understanding. In Proceedings of naacL-HLT, volume 1, page 2, 2019.   \n[28] Thomas N Kipf and Max Welling. Variational graph auto-encoders. arXiv preprint arXiv:1611.07308, 2016.   \n[29] Adam Lerer, Ledell Wu, Jiajun Shen, Timothee Lacroix, Luca Wehrstedt, Abhijit Bose, and Alex Peysakhovich. Pytorch-biggraph: A large scale graph embedding system. Proceedings of Machine Learning and Systems, 1:120\u2013131, 2019.   \n[30] Hongzhu Li, Xiangrui Gao, Linhui Feng, Yafeng Deng, and Yuhui Yin. Stargraph: Knowledge representation learning based on incomplete two-hop subgraph.   \n[31] Qian Li, Cheng Ji, Shu Guo, Zhaoji Liang, Lihong Wang, and Jianxin Li. Multi-modal knowledge graph transformer framework for multi-modal entity alignment. arXiv preprint arXiv:2310.06365, 2023.   \n[32] Qian Li, Lixin Su, Jiashu Zhao, Long Xia, Hengyi Cai, Suqi Cheng, Hengzhu Tang, Junfeng Wang, and Dawei Yin. Text-video retrieval via multi-modal hypergraph networks. In Proceedings of the 17th ACM International Conference on Web Search and Data Mining, pages 369\u2013377, 2024.   \n[33] Ke Liang, Yue Liu, Sihang Zhou, Wenxuan Tu, Yi Wen, Xihong Yang, Xiangjun Dong, and Xinwang Liu. Knowledge graph contrastive learning based on relation-symmetrical structure. IEEE Transactions on Knowledge and Data Engineering, 2023.   \n[34] Ke Liang, Yue Liu, Sihang Zhou, Wenxuan Tu, Yi Wen, Xihong Yang, Xiangjun Dong, and Xinwang Liu. Knowledge graph contrastive learning based on relation-symmetrical structure. IEEE Transactions on Knowledge and Data Engineering, 36(1):226\u2013238, 2024.   \n[35] Ke Liang, Lingyuan Meng, Meng Liu, Yue Liu, Wenxuan Tu, Siwei Wang, Sihang Zhou, Xinwang Liu, Fuchun Sun, and Kunlun He. A survey of knowledge graph reasoning on graph types: Static, dynamic, and multi-modal. IEEE Transactions on Pattern Analysis and Machine Intelligence, pages 1\u201320, 2024.   \n[36] Ke Liang, Lingyuan Meng, Sihang Zhou, Wenxuan Tu, Siwei Wang, Yue Liu, Meng Liu, Long Zhao, Xiangjun Dong, and Xinwang Liu. Mines: Message intercommunication for inductive relation reasoning over neighbor-enhanced subgraphs. Proceedings of the AAAI Conference on Artificial Intelligence, 38(9):10645\u201310653, Mar. 2024.   \n[37] Darryl D. Lin, Sachin S. Talathi, and V. Sreekanth Annapureddy. Fixed point quantization of deep convolutional networks. In Proceedings of the 33rd International Conference on International Conference on Machine Learning - Volume 48, ICML\u201916, page 2849\u20132858. JMLR.org, 2016.   \n[38] Chunyu Liu, Wei Wu, Siyu Wu, Lu Yuan, Rui Ding, Fuhui Zhou, and Qihui Wu. Social-enhanced explainable recommendation with knowledge graph. IEEE Transactions on Knowledge and Data Engineering, pages 1\u201314, 2023.   \n[39] Nelson F. Liu, Ananya Kumar, Percy Liang, and Robin Jia. Are sample-efficient nlp models more robust?, 2022.   \n[40] Yong Liu, Susen Yang, Yonghui Xu, Chunyan Miao, Min Wu, and Juyong Zhang. Contextualized graph attention network for recommendation with item knowledge graph. IEEE Transactions on Knowledge and Data Engineering, 35(1):181\u2013195, 2023.   \n[41] S. Lloyd. Least squares quantization in pcm. IEEE Transactions on Information Theory, 28(2):129\u2013137, 1982.   \n[42] Linhao Luo, Yuan-Fang Li, Gholamreza Haffari, and Shirui Pan. Reasoning on graphs: Faithful and interpretable large language model reasoning. In International Conference on Learning Representations, 2024.   \n[43] Ziyu Lyu, Yue Wu, Junjie Lai, Min Yang, Chengming Li, and Wei Zhou. Knowledge enhanced graph neural networks for explainable recommendation. IEEE Transactions on Knowledge and Data Engineering, 35(5):4954\u20134968, 2023.   \n[44] J. MacQueen. Some methods for classification and analysis of multivariate observations. 1967.   \n[45] Farzaneh Mahdisoltani, Joanna Asia Biega, and Fabian M. Suchanek. Yago3: A knowledge base from multilingual wikipedias. In Conference on Innovative Data Systems Research, 2015.   \n[46] Dimity Miller, Niko Sunderhauf, Michael Milford, and Feras Dayoub. Class anchor clustering: A loss for distance-based open set recognition. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 3570\u20133578, 2021.   \n[47] George A Miller. WordNet: An electronic lexical database. MIT press, 1998.   \n[48] Shirui Pan, Linhao Luo, Yufei Wang, Chen Chen, Jiapu Wang, and Xindong Wu. Unifying large language models and knowledge graphs: A roadmap. IEEE Transactions on Knowledge and Data Engineering (TKDE), 2024.   \n[49] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison, Andreas K\u00f6pf, Edward Yang, Zach DeVito, Martin Raison, Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner, Lu Fang, Junjie Bai, and Soumith Chintala. PyTorch: An Imperative Style, High-Performance Deep Learning Library. Curran Associates Inc., Red Hook, NY, USA, 2019.   \n[50] Ruchi Patil and Amreen Khan. Bisecting k-means for clustering web log data. International Journal of Computer Applications, 116:36\u201341, 2015.   \n[51] Thomas Pellissier Tanon, Gerhard Weikum, and Fabian Suchanek. Yago 4: A reason-able knowledge base. In The Semantic Web: 17th International Conference, ESWC 2020, Heraklion, Crete, Greece, May 31\u2013June 4, 2020, Proceedings, page 583\u2013596, Berlin, Heidelberg, 2020. Springer-Verlag.   \n[52] Qianyao Qiang, Bin Zhang, Fei Wang, and Feiping Nie. Fast multi-view discrete clustering with anchor graphs. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, pages 9360\u20139367, 2021.   \n[53] Mrinmaya Sachan. Knowledge graph embedding compression. In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pages 2681\u20132691, Online, July 2020. Association for Computational Linguistics.   \n[54] Tara Safavi and Danai Koutra. CoDEx: A Comprehensive Knowledge Graph Completion Benchmark. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 8328\u20138350, Online, November 2020. Association for Computational Linguistics.   \n[55] Ahmed E Samy, Zekarias T. Kefato, and Sarunas Girdzijauskas. Graph2feat: Inductive link prediction via knowledge distillation. In Companion Proceedings of the ACM Web Conference 2023, pages 805\u2013812, 2023.   \n[56] Michael Schlichtkrull, Thomas N Kipf, Peter Bloem, Rianne van den Berg, Ivan Titov, and Max Welling. Modeling relational data with graph convolutional networks. In European semantic web conference, pages 593\u2013607. Springer, 2018.   \n[57] Michael Schlichtkrull, Thomas N Kipf, Peter Bloem, Rianne Van Den Berg, Ivan Titov, and Max Welling. Modeling relational data with graph convolutional networks. In The Semantic Web: 15th International Conference, ESWC 2018, Heraklion, Crete, Greece, June 3\u20137, 2018, Proceedings 15, pages 593\u2013607. Springer, 2018.   \n[58] Mike Schuster and Kaisuke Nakajima. Japanese and korean voice search. In 2012 IEEE international conference on acoustics, speech and signal processing (ICASSP), pages 5149\u2013 5152. IEEE, 2012.   \n[59] Lei Shi, Jia Luo, Chuangying Zhu, Feifei Kou, Gang Cheng, and Xia Liu. A survey on crossmedia search based on user intention understanding in social networks. Information Fusion, 91:566\u2013581, 2023.   \n[60] Lei Shi, Jiapeng Yang, Pengtao Lv, Lu Yuan, Feifei Kou, Jia Luo, and Mingying Xu. Self-derived knowledge graph contrastive learning for recommendation. In ACM Multimedia 2024.   \n[61] Zhiqing Sun, Zhi-Hong Deng, Jian-Yun Nie, and Jian Tang. Rotate: Knowledge graph embedding by relational rotation in complex space. arXiv preprint arXiv:1902.10197, 2019.   \n[62] Zhiqing Sun, Zhi-Hong Deng, Jian-Yun Nie, and Jian Tang. Rotate: Knowledge graph embedding by relational rotation in complex space. arXiv preprint arXiv:1902.10197, 2019.   \n[63] Komal K. Teru, Etienne Denis, and William L. Hamilton. Inductive relation prediction by subgraph reasoning. arXiv: Learning, 2020.   \n[64] Kristina Toutanova, Danqi Chen, Patrick Pantel, Hoifung Poon, Pallavi Choudhury, and Michael Gamon. Representing text for joint embedding of text and knowledge bases. In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1499\u20131509, Lisbon, Portugal, September 2015. Association for Computational Linguistics.   \n[65] Th\u00e9o Trouillon, Johannes Welbl, Sebastian Riedel, \u00c9ric Gaussier, and Guillaume Bouchard. Complex embeddings for simple link prediction. In International conference on machine learning, pages 2071\u20132080. PMLR, 2016.   \n[66] Th\u00e9o Trouillon, Johannes Welbl, Sebastian Riedel, \u00c9ric Gaussier, and Guillaume Bouchard. Complex embeddings for simple link prediction. In International conference on machine learning, pages 2071\u20132080. PMLR, 2016.   \n[67] Enmei Tu, Zihao Wang, Jie Yang, and Nikola Kasabov. Deep semi-supervised learning via dynamic anchor graph embedding in latent space. Neural Networks, 146:350\u2013360, 2022.   \n[68] Shikhar Vashishth, Soumya Sanyal, Vikram Nitin, and Partha Talukdar. Composition-based multi-relational graph convolutional networks. In International Conference on Learning Representations, 2020.   \n[69] Denny Vrande\u02c7ci\u00b4c and Markus Kr\u00f6tzsch. Wikidata: A free collaborative knowledgebase. Commun. ACM, 57(10):78\u201385, sep 2014.   \n[70] Baoxin Wang, Qingye Meng, Ziyue Wang, Dayong Wu, Wanxiang Che, Shijin Wang, Zhigang Chen, and Cong Liu. Interht: Knowledge graph embeddings by interaction between head and tail entities. arXiv preprint arXiv:2202.04897, 2022.   \n[71] Haoyu Wang, Yaqing Wang, Defu Lian, and Jing Gao. A lightweight knowledge graph embedding framework for efficient inference and storage. In Proceedings of the 30th ACM International Conference on Information &amp; Knowledge Management, CIKM \u201921, page 1909\u20131918, New York, NY, USA, 2021. Association for Computing Machinery.   \n[72] Kai Wang, Yu Liu, Qian Ma, and Quan Z Sheng. Mulde: Multi-teacher knowledge distillation for low-dimensional knowledge graph embeddings. In Proceedings of the Web Conference 2021, pages 1716\u20131726, 2021.   \n[73] Meng Wang, Weijie Fu, Shijie Hao, Hengchang Liu, and Xindong Wu. Learning on big graph: Label inference and regularization with anchor hierarchy. IEEE Transactions on Knowledge and Data Engineering, 29(5):1101\u20131114, 2017.   \n[74] Siwei Wang, Xinwang Liu, Suyuan Liu, Jiaqi Jin, Wenxuan Tu, Xinzhong Zhu, and En Zhu. Align then fusion: Generalized large-scale multi-view clustering with anchor matching correspondences. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and Kyunghyun Cho, editors, Advances in Neural Information Processing Systems, 2022.   \n[75] Wenhan Xiong, Jingfei Du, William Yang Wang, and Veselin Stoyanov. Pretrained encyclopedia: Weakly supervised knowledge-pretrained language model. arXiv preprint arXiv:1912.09637, 2019.   \n[76] Lei Xu, Zhen-Yu He, Kai Wang, Chang-Dong Wang, and Shu-Qiang Huang. Explicit messagepassing heterogeneous graph neural network. IEEE Transactions on Knowledge and Data Engineering, 35(7):6916\u20136929, 2023.   \n[77] Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. Embedding entities and relations for learning and inference in knowledge bases. arXiv preprint arXiv:1412.6575, 2014.   \n[78] Long Yu, Zhicong Luo, Huanyong Liu, Deng Lin, Hongzhu Li, and Yafeng Deng. Triplere: Knowledge graph embeddings via tripled relation vectors, 2022.   \n[79] Yongqi Zhang, Quanming Yao, and James T Kwok. Bilinear scoring function search for knowledge graph learning. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2022.   \n[80] Yongqi Zhang, Zhanke Zhou, Quanming Yao, Xiaowen Chu, and Bo Han. Adaprop: Learning adaptive propagation for graph neural network based knowledge graph reasoning. In SIGKDD, 2023.   \n[81] Zhanke Zhou, Yongqi Zhang, Jiangchao Yao, Quanming Yao, and Bo Han. Less is more: One-shot subgraph reasoning on large-scale knowledge graphs. In ICLR, 2024.   \n[82] Zhanke Zhou, Chenyu Zhou, Xuan Li, Jiangchao Yao, Quanming Yao, and Bo Han. On strengthening and defending graph reconstruction attack with markov chain approximation. In International Conference on Machine Learning, 2023.   \n[83] Man Zhu, Weixin Wu, Jeff Z. Pan, Jingyu Han, Pengfei Huang, and Qian Liu. Predicate invention based rdf data compression. In R Ichise, F Lecue, T Kawamura, D Zhao, S Muggleton, and K Kozaki, editors, Semantic Technology - 8th Joint International Conference, JIST 2018, Proceedings, Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), pages 153\u2013161, Germany, November 2018. Springer Verlag. 8th Joint International Semantic Technology Conference, JIST 2018 ; Conference date: 26-11-2018 Through 28-11-2018.   \n[84] Xiangru Zhu, Zhixu Li, Xiaodan Wang, Xueyao Jiang, Penglei Sun, Xuwu Wang, Yanghua Xiao, and Nicholas Jing Yuan. Multi-modal knowledge graph construction and application: A survey. IEEE Transactions on Knowledge and Data Engineering, pages 1\u201320, 2022.   \n[85] Yushan Zhu, Wen Zhang, Mingyang Chen, Hui Chen, Xu Cheng, Wei Zhang, and Huajun Chen. Dualde: Dually distilling knowledge graph embedding for faster and cheaper reasoning. In Proceedings of the Fifteenth ACM International Conference on Web Search and Data Mining, pages 1516\u20131524, 2022.   \n[86] Zhaocheng Zhu, Xinyu Yuan, Michael Galkin, Louis-Pascal Xhonneux, Ming Zhang, Maxime Gazeau, and Jian Tang. A\\* net: A scalable path-based reasoning approach for knowledge graphs. Advances in Neural Information Processing Systems, 36, 2024. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "A.1 Limitations and Future Works ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Although proven effective and the idea is novel for large-scale KGE models, this paper only takes a primitive attempt to select better anchors via clustering. Specifically, our feature preparation is independent which requires auxiliary models. In this manner, the quality of anchors will be influenced if the adopted model is not well-trained. Thus, we plan to optimize this preparation procedure via a self-adaptive mechanism along with feature propagation for better practicability and adaptivity in the future. ", "page_idx": 16}, {"type": "text", "text": "A.2 Related Work ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "This section summarizes the recent related works from three aspects: i.e., traditional knowledge graph embedding (KGE) model, parameter-efficient model, and anchor-based strategy. The discussion on typical related works provides the necessary background knowledge for our novel anchor-based parameter-efficient KGE model, which assists readers to better understand our work. ", "page_idx": 16}, {"type": "text", "text": "Traditional Knowledge Graph Embedding Model. Traditional knowledge graph embedding (KGE) models aim to map entities and relations into low-dimensional representations [25, 2, 33] while preserving the semantic information underlying the original KG. In general, it can be roughly divided into three types, i.e., translational models [6, 62, 19], tensor factorization models [57, 66], and graph neural network based models [28, 57, 17, 68, 76]. For example, RotatE [61] proposes a rotation-based translational method with complex-valued embeddings to better infer the symmetry, anti-symmetry, inversion, and composition facts, which are widely used. As an improved model for RGCN [56], COMPGCN [68] also jointly learns the representations with various entity-relation composition operations. Moreover, AutoSF [79] proposes an adaptive manner for KGE scoring function searching, which gains promising performance on large-scale scenarios. The above three typical KGE baselines constitute the backbone models in this paper following previous works [20, 10]. However, few of these traditional KGE models do consider the efficiency of parameters [20] and data compression [83]. As the scale of data becomes larger, the shallow lookup in traditional KGE models will result in linear growth of memory consumption for storing larger embedding matrices and incurs high computational costs [20], which limits their scalability to real-world scenarios. Our RecPiece is designed for more parameter-efficient representation learning on knowledge graphs. ", "page_idx": 16}, {"type": "text", "text": "Parameter-Efficient Model. Different strategies have been leveraged for more efficient KGE models in recent years, which can be roughly categorized into three types, i.e., quantification [37, 53], knowledge distillation [22, 72, 85], and anchor-based sampling [39, 3]. As for quantification-based methods, TS-CL [53] reduces the dimensions by learning discrete entity representations via quantization. Besides, LightKG [71] designs the residual module to induce diversity among codebooks and performs the dynamic negative sampling using quantization technology. Compared to them, MulDE [72], DualDE [85], and Graph2Feat [55] are all distillation-based methods, which are developed based on the teacher-student frameworks. Specifically, MulDE [72] leverages multiple KGE models as teacher models to extract a student model with a lower dimension for space consumption reduction. However, the teacher model in DualDE [85] is more suitable for the student model to obtain better distillation results by considering the dual influence between them. Besides, Graph2Feat [55] extends the distillation procedure for inductive setting. However, the above two types of strategies aim to realize more lightweight models for deployment by compressing the trained model in normal size, which means that the standard KGE models still need to be trained on large datasets in advance. Compared to them, the anchor-based models [20, 70, 30, 78] will be more efficient in both training and deployment since they actually reduce the size of the entity set for propagation. Moreover, anchor-based sampling can be easily composed with different KGE baselines to optimize the efficiency of these models. Beyond the above categories, ATTH [9] utilizes hyperbolic space and geometric transformations to learn the improved low-dimensional representations, and PIE [12] reduces the space consumption for entity representations via discrete code vectors and tensor decomposition. More recently, EARL [13] does not learn one vector for each entity but by learning only the embedding of a small number of entities, encoding the distinguishing information from their connected relationships, $\\mathbf{k}$ nearest reserved entities, and multi-hop neighbors, which translates the distinguishing information into entity embedding. $\\mathrm{A^{*}N e t}$ [86] proposes a path-based propagation strategies. Meanwhile, AdaProp [80] and ", "page_idx": 16}, {"type": "table", "img_path": "BpJ6OTfWw3/tmp/bb771646d7128edd884bb6e3d5c71e668b2d23a9d918839712acbb498e99ef55.jpg", "table_caption": ["Table 9: Dataset Statistic. \"LP\" and \"EC\" denote link prediction and entity classification. \"#\" represents the number. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "One-shot subgraph method [81] propose novel subgraph-based efficient methods, which are also an emerging direction these years. ", "page_idx": 17}, {"type": "text", "text": "In this work, we focus more on developing a better and characteristic-adaptive anchor-based sampling strategy. Unlike other independent parameter-efficient methods, although the anchor-based methods may cause performance deduction, their plug-and-play attributes are better than other parameterefficient methods. It has excellent potential to be easily integrated with any other KGE models, including hyperbolic embedding methods, such as ATTN [9]. Besides, among different types of efficiency of KGE models, such as parameter efficiency, time efficiency, and memory efficiency, we are concentrating more on the parameter efficiency of traditional KGE models instead of targeting time and memory complexity. ", "page_idx": 17}, {"type": "text", "text": "Anchor-based Strategy. Anchor-based strategies, as effective sampling techniques, are widely used in different fields [52, 73, 74, 67, 7] to solve efficiency problems these years. The main idea of these strategies is to select the representative sample to represent a group of data so that the whole dataset is not required for the learning procedure, which will improve the scalability and efficiency of the original model. Inspired by Subword-powered algorithms [4, 58] in NLP, NodePiece [20] is proposed, which is the most representative anchor-based KGE model. Many KGE models come out based on it, such as TripleRE [78]. Besides, StarGraph [30] and DigPiece [70]are proposed by adding extra neighbour constraints. Although these models all achieve promising performance, the anchors in these methods are still selected in a primitive manner, e.g., random selection, and manual selection of different centrality measurement strategies, including Node Degree Centrality, Personalized PageRank, etc. Since these selection strategies are neither reasonable nor developed according to the characteristics of the data type of KGs, the quality of the anchors cannot be well guaranteed, which limits the performance of the models. In particular, the weight for each strategy on different datasets is determined according to grid searching, which is time-consuming. ", "page_idx": 17}, {"type": "text", "text": "A.3 Experiment Setting ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Experiment settings are introduced from three aspects, i.e., datasets, implementation details, and evaluation metrics. ", "page_idx": 17}, {"type": "text", "text": "A.3.1 Datasets ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Six benchmark datasets are leveraged to evaluate our RecPiece as same as previous works do [13, 20, 30]. Specifically, FB15k-237 [64], WN18RR [18], CoDEx-L [54], and YAGO3-10 [45] are used for link prediction. Among them, FB15k-237 [64] contains 237 relations, which is derived from Freebase [5], and inverse relations are deleted to avoid the leaking problem compared to FB15k. Similar to it, WN18RR [18] is derived from WordNet [47] without inverse relations. FB15k-237 can be considered relation-rich graphs, while WN18RR is a sparse graph with few relation types. Besides, YAGO3-10 [45] consists of entities that have a minimum of 10 relations each which are extracted from YAGO3. Different from the above three typical traditional datasets, CoDEx [54] contains more diverse and interpretable content and is more difficult to evaluate. In this work, we used the largest subset of it. The entity classification is carried out on two subsets ${5\\%}$ and $10\\%$ labeled) from WD50K [21]. Furthermore, we leverage OGB WIKIKG 2 [23, 20], a large-scale KG, for scalability analysis. The statistical details of the datasets are shown in Tab. 9. ", "page_idx": 17}, {"type": "text", "text": "A.3.2 Implementation Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "All experiments are conducted on the server with 4-core Intel(R) Xeon(R) Platinum 8358 CPUs $\\textcircled{a}~2.60\\mathrm{GHZ}$ , a single 80 GB A100 GPU, and 64GB RAM with PyTorch [49] libraries. The $p(\\cdot)$ ", "page_idx": 17}, {"type": "text", "text": "for feature preparation is selected as pretrained NodePiece [63] in the first few epochs. Besides, $\\boldsymbol{\\mathrm{k}}$ -means [41, 44] is selected as $g(\\cdot)$ for clustering, and the cluster number is set as \"#Rel.\" in Tab. 9 for different datasets. Besides, a 2-layer-MLP is adopted as $f(\\cdot)$ feature propagation. In addition, we replace the default $p(\\cdot),\\,g(\\cdot)$ and $\\mathrm{{dist}(\\cdot)}$ to pretrained GraIL [63], BitechingKmeans [50] and euclidean(\u00b7) for ablation analysis. ", "page_idx": 18}, {"type": "text", "text": "Moreover, as for different tasks, RecPiece is integrated with three KGE backbones, i.e., RotatE [61], COMPGCN [68], and AutoSF [79] to compare with thirteen KGE models, including (1) link prediction: TransE [6], DisMult [77], ComplEX [65], PairRE [10], RotatE [61], TripleRE [78], AutoSF [79], LRE $^+$ PairRE [11], NodePiece $^+$ RotatE [20], and NodePiece $^+$ AutoSF [20]; (2) entity classification: MLP, COMPGCN [68], and NodePiece $^+$ COMPGCN [20]. Note that the anchor selection in our RecPiece is a relational clustering-based anchor selection strategy. Compared to the manual selection strategy (composed of $20\\%$ Random Selection, $40\\%$ Personalized PageRank, and $40\\%$ Node Degree Centrality) in NodePiece, ours is more explainable and scalable. Here we present some descriptions of the used models as follows. ", "page_idx": 18}, {"type": "text", "text": "\u2022 RotatE defines each relation as a rotation from the source entity to the target entity in the complex vector space, enabling it to model and infer various relation patterns, including symmetry, antisymmetry, inversion, and composition relations.   \n\u2022 COMPGCN encodes entities and relations jointly by using various composition operators from KGE techniques, addressing the issue of over-parameterization in GCNs.   \n\u2022 AutoSF proposed an algorithm that can automatically design and discover optimal scoring functions of the KGE model. Through a progressive greedy search algorithm, AutoSF can design promising KGE scoring functions effectively from a vast search space.   \n\u2022 TransE is a translation-based KGE model that aims to model inversion and composition relations. Inspired by the translation invariance in the word2vec model, TransE tries to make $\\mathrm{h}+\\mathrm{r}{\\approx}\\mathrm{t}$ , where h, r, and t represent the head entity, relation, and tail entity in a triplet, respectively.   \n\u2022 DistMult assumes that all relations in the KG are symmetric and represent them as blockdiagonal matrices. Such a relation representation mechanism, combined with simple dot product operations, improves the efficiency of triplet evaluation.   \n\u2022 ComplEx uses complex vectors instead of real vectors to represent the embeddings of entities and relations, which allows the model to distinguish between symmetric and asymmetric relations.   \n\u2022 PairRE uses paired vectors to represent each relation, allowing the margin in the loss function to adjust adaptively. Thus, PairRE can express more complex relations, such as sub-relations.   \n\u2022 TripleRE combines projection and translation operations. Specifically, the representation vectors of the head and tail entities are first projected and then translated to obtain the relation representation. This method enriches the expression of relations, enabling the model to handle complex relations.   \n\u2022 NodePiece proposed an efficient and plug-and-play node selection mechanism for KGE models. Specifically, NodePiece is inspired by WordPiece from the field of natural language processing, which is able to represent large-scale knowledge graphs using only fewer entity embeddings while also enhancing the generalization performance of the model at the same time.   \n\u2022 LRE is a high-efficiency method that utilizes tensor decomposition to enhance the parameter efficiency of KGE models. Specifically, rather than decomposing the observed 3D tensor directly, LRE decomposes the entity embedding matrix to low-rank matrices. ", "page_idx": 18}, {"type": "text", "text": "A.3.3 Evaluation Metrics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Two types of evaluation metrics are adopted for two different downstream tasks. For link prediction, both mean reciprocal rank (MRR) [16] and $\\mathrm{Hits}\\mathcal{O}\\mathrm{k}$ [1] are used as the ranking metrics, where $\\mathbf{k}\\in\\{1$ , 3, 10}. Besides, ROC-AUC, PRC-AUC, AP, and Hard Accuracy are the evaluation metrics [23] for entity classification. To quantify the efficiency, we report the parameter number #P (M), memory cost (GB), running time (hours), and $E\\!f\\!\\!/\\hbar$ i [13], which is the metric recently proposed by [13] to evaluate the efficiency of the KGE models. ", "page_idx": 18}, {"type": "equation", "text": "$$\nE\\!f\\!\\!R.=\\frac{\\mathrm{MRR}}{\\#\\,\\mathrm{Parameter}}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Note that higher $E\\!f\\!\\!/\\hbar$ .i it is, the more efficient the model performs. ", "page_idx": 18}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We present the contributions from three aspects, i.e., problem, method, and experiment. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 19}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Justification: We discuss it in our final section. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 19}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: [NA] ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 20}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: The experimental details are carefully described. Besides, the authors mention that the source code will be released after the double-blind review. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 20}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 20}, {"type": "text", "text": "Answer: [No] ", "page_idx": 21}, {"type": "text", "text": "Justification: The authors mention that the source code will be released after the double-blind review. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 21}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The details of experimental settings are carefully described in the Appendix. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 21}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: Six aspects of experiments are conducted to evaluate the proposed model. Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: The details of experimental settings are carefully described in the Appendix. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 22}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: The authors preserve anonymity and obey the code of ethics. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 22}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: The paper targets on the large-scale problem in knowledge graphs. By solving it, existing representation learning models can be applied to more general and realistic scenarios, such as retrieval on society relationship graph, etc. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification:[NA] ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 23}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: All of the backbone models and datasets are cited with their references. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 23}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 24}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] Justification: [NA] Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 24}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 24}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] Justification: [NA] ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 24}]