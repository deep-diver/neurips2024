[{"figure_path": "s1MoH2pACa/tables/tables_5_1.jpg", "caption": "Table 3: The ensemble results on the task of image super-resolution. The categories of \u201cBase\u201d, \"Regr.\" and \u201cIR.\" in the first column mean base models, regression-based ensemble methods, and those ensemble methods designed for image restoration. The best and second best ensemble results are emphasized in bold and underlined respectively.", "description": "This table presents a comparison of different ensemble methods on the task of image super-resolution.  It compares the performance (PSNR and SSIM) of various base models (CNNs, ViTs, etc.) against several ensemble techniques, including regression-based methods and those specifically designed for image restoration. The results highlight the superior performance of the proposed EnsIR method.", "section": "4.1 Experimental Settings"}, {"figure_path": "s1MoH2pACa/tables/tables_6_1.jpg", "caption": "Table 1: Ablation study of bin width b on Rain100H [74] with maximum step number 1000. \"Runtime\" is the average runtime [s].", "description": "This table shows the ablation study of the bin width (b) parameter used in the EnsIR algorithm.  The study was conducted on the Rain100H dataset with a maximum of 1000 steps in the Expectation-Maximization (EM) algorithm. The table presents the average runtime in seconds, the Peak Signal-to-Noise Ratio (PSNR), and the Structural Similarity Index Measure (SSIM) for different bin widths (16, 32, 64, 96, 128). It demonstrates the trade-off between computational efficiency (runtime) and performance (PSNR and SSIM) as the bin width varies.", "section": "4.1 Experimental Settings"}, {"figure_path": "s1MoH2pACa/tables/tables_6_2.jpg", "caption": "Table 2: Ablation study of maximum step number in the EM algorithm on Rain100H [74] with b = 32. \"Time\" is the time of EM algorithm [s].", "description": "This table shows the ablation study of the maximum step number in the Expectation-Maximization algorithm used in the paper's ensemble method. The experiment was performed on the Rain100H dataset with a bin width (b) of 32. The table shows how the PSNR and SSIM metrics, and the runtime of the EM algorithm, change as the maximum number of steps is increased.", "section": "4.1 Experimental Settings"}, {"figure_path": "s1MoH2pACa/tables/tables_6_3.jpg", "caption": "Table 3: The ensemble results on the task of image super-resolution. The categories of \u201cBase\u201d, \"Regr.\" and \u201cIR.\u201d in the first column mean base models, regression-based ensemble methods, and those ensemble methods designed for image restoration. The best and second best ensemble results are emphasized in bold and underlined respectively.", "description": "This table presents a comparison of different ensemble methods for image super-resolution.  It shows the PSNR and SSIM scores achieved by various base models (CNNs, ViTs, etc.), regression-based ensemble methods, image restoration-specific ensemble methods, and the proposed EnsIR method.  The results are presented for five benchmark datasets (Set5, Set14, BSDS100, Urban100, and Manga109).  The best-performing methods for each dataset are highlighted.", "section": "4.1 Experimental Settings"}, {"figure_path": "s1MoH2pACa/tables/tables_7_1.jpg", "caption": "Table 4: The ensemble results on the task of image deblurring. The categories of \u201cBase\u201d, \u201cRegr.\u201d and \u201cIR.\u201d in the first column mean base models, regression-based ensemble methods, and those ensemble methods designed for image restoration. The best and second best ensemble results are emphasized in bold and underlined respectively.", "description": "This table presents a quantitative comparison of different ensemble methods for image deblurring.  It shows the PSNR and SSIM scores achieved by various base models (MPRNet, Restormer, DGUNet), regression-based ensemble methods (Bagging, AdaBoost, RForest, GBDT, HGBT), image restoration ensemble methods (Average, ZZPM), and the proposed EnsIR method.  The results are evaluated on four datasets (GoPro, HIDE, RealBlur-R, RealBlur-J). The best performing methods are highlighted.", "section": "4.2 Experimental Results"}, {"figure_path": "s1MoH2pACa/tables/tables_7_2.jpg", "caption": "Table 3: The ensemble results on the task of image super-resolution. The categories of \u201cBase\u201d, \"Regr.\" and \u201cIR.\u201d in the first column mean base models, regression-based ensemble methods, and those ensemble methods designed for image restoration. The best and second best ensemble results are emphasized in bold and underlined respectively.", "description": "This table compares the performance of different ensemble methods on the image super-resolution task using various metrics (PSNR and SSIM) across five benchmark datasets (Set5, Set14, BSDS100, Urban100, and Manga109).  It shows the results for individual base models (CNNs, ViTs, and Mambas), regression-based ensemble methods, image restoration-specific ensemble methods, averaging, and the proposed EnsIR method. The best and second-best results are highlighted.", "section": "4.1 Experimental Settings"}, {"figure_path": "s1MoH2pACa/tables/tables_8_1.jpg", "caption": "Table 6: The average runtime per image in seconds of the ensemble methods on Rain100H [74].", "description": "This table presents the average runtime, in seconds, for each ensemble method tested on the Rain100H dataset for image deraining.  The methods compared include Bagging, AdaBoost, Random Forest, GBDT, HGBT, Averaging, ZZPM, and the proposed EnsIR method.  The runtime is a key factor in determining the efficiency and practicality of the method, especially in real-time applications.", "section": "4.2 Experimental Results"}]