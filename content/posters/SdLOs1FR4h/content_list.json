[{"type": "text", "text": "FUGAL: Feature-fortified Unrestricted Graph Alignment ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Aditya Bommakanti Harshith Reddy Vonteri IIT Delhi IIT Delhi adityabommakanti2002@gmail.com harshithreddyvonteri@gmail.com ", "page_idx": 0}, {"type": "text", "text": "Konstantinos Skitsas Sayan Ranu Davide Mottin Aarhus University IIT Delhi Aarhus University skitsas@cs.au.dk sayanranu@cse.iitd.ac.in davide@cs.au.dk ", "page_idx": 0}, {"type": "text", "text": "Panagiotis Karras University of Copenhagen & Aarhus University piekarras@gmail.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The necessity to align two graphs, minimizing a structural distance metric, is prevalent in biology, chemistry, recommender systems, and social network analysis. Due to the problem\u2019s NP-hardness, prevailing graph alignment methods follow a modular and mediated approach, solving the problem restricted to the domain of intermediary graph representations or products like embeddings, spectra, and graph signals. Restricting the problem to this intermediate space may distort the original problem and are hence predisposed to miss high-quality solutions. In this paper, we propose an unrestricted method, FUGAL, which finds a permutation matrix that maps one graph to another by directly operating on their adjacency matrices with judicious constraint relaxation. Extensive experimentation demonstrates that FUGAL consistently surpasses state-of-the-art graph alignment methods in accuracy across all benchmark datasets without encumbering efficiency. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction and Related Work ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Graph alignment seeks to match a pair of graphs to each other, i.e., to correlate nodes of one graph to those of the other. For instance, biological systems such as protein-protein interaction networks and gene regulatory networks can be represented as graphs. The alignment of such biological networks across species reveals orthologous proteins or genes (i.e., homologous genes that evolved from a common ancestor) and thereby conveys the biological function of uncharted genes in one species through their better-studied counterparts in another species [37, 36]. The same problem also arises in other high-impact network science tasks [11], such as identifying users in social networks [22] and feature matching in computer vision [5, 6]. The problem can be formulated as an instance of the quadratic assignment problem (QAP) [13, 24] between nodes of the two graphs, which treats the edges in one graph as units of flow and the edges in the other graph as distances between nodes. This relation renders the problem APX-hard to approximate even within an approximation factor that grows linearly with the number of nodes [30, 13]. ", "page_idx": 0}, {"type": "text", "text": "1.1 Related Works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Owing to the problem\u2019s hardness, several heuristics have been proposed. Nevertheless, state-of-the-art graph alignment methods refrain from directly addressing the edge-aware QAP. Instead, they craft intermediate representations of nodes that allow for the computation of similarities and settle for solving an assignment problem over those representations. We call these methods mediated due to their restriction to intermediary graph representations. While the transformation from the original graph space to an intermediate space enables computational efficiency, the transformation incurs loss of information. In this work, we propose an unrestricted graph alignment method that avoids restricting the problem to an intermediate space, while also retaining efficiency. We call our method \u201cunrestricted\u201d rather than \u201cunmediated\u201d since, while we retain the full graph information in the core QAP, we also avail of help from mediated representations to solve the QAP. In the subsequent discussion, we summarize the various mediated and unmediated approaches in the literature. ", "page_idx": 1}, {"type": "text", "text": "Mediated Approaches: GWL [44] jointly learns embeddings and alignments using the dissimilarity notion of Gromov-Wasserstein discrepancy; it estimates distance matrices using the embeddings when learning the optimal transport, and regularizes the learning of embeddings using the learned transport. S-GWL [43] addresses the scalability drawback of GWL by adopting a partitioning method on the input graphs. CONE [4] models intra-network proximity with node embeddings and uses them to match nodes across networks after aligning embedding subspaces. REGAL [17] identifies node matchings by greedily aligning their latent feature representations learnt from graph structures. GRAMPA [13] constructs a similarity matrix as a weighted sum of outer products between all pairs of eigenvectors of the two graphs. GRASP [20] uses the spectral properties of the graphs grounded on the eigenvectors of their normalized Laplacian matrices. IsoRank [37] uses neighborhood similarity to extract structural graph information and recursively updates the score of a node pair using the score of their neighbors. GRAAL [25] is a greedy alignment method that matches nodes using a similarity score based on a dictionary of small frequent graph patterns. GOT [31] employs the probabilistic distribution of smooth graph signals defined with respect to the graph topology, and seeks alignments by minimizing the distance between these graph signal distributions. fGOT [32] adopts a dissimilarity metric that aligns two graphs using the probability distribution of data generated via graph filters. PARROT [46] presents a semi-supervised methodology which encodes graph topology through random walks with restart (RWR) for a position-aware transport cost and addresses a regularized Optimal Transport (OT) problem to determine node mappings. GW [35] and FGW [40] compute Gromov-Wasserstein discrepancy using similarity matrices of shortest path distances between nodes. ", "page_idx": 1}, {"type": "text", "text": "Unmediated Approaches: FAQ [42] is an unmediated algorithm that addresses the QAP by relaxing constraints to attain computational tractability. GLAG [14] proposes a problem formulation that retains the full graph information and relaxes the permutation constraints. As we will see in $\\S\\ S$ , these methods of relaxing constraints lead to inferior accuracy. ", "page_idx": 1}, {"type": "text", "text": "Unrestricted Approaches: In addition to the full graph information, PATH [45] and FGM [49] also use feature matching, while DSPP [10] employs all-pairs-shortest-paths for graph alignment. We characterize these methods as unrestricted, since they also avail of help from mediated representations. As we will see in $\\S\\ S$ , these methods are significantly inferior to FUGAL in terms of accuracy. ", "page_idx": 1}, {"type": "text", "text": "1.2 Contributions ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Optimization problem formulation: We present FUGAL (Feature-fortified Unrestricted Graph Alignment), a graph alignment method that retains full graph information by integrating the quadratic assignment problem (QAP) in the optimization objective. To augment quality, we utilize a regularizer in the form of a linear assignment (LAP) supplement incorporating graph structural features. ", "page_idx": 1}, {"type": "text", "text": "Unrestricted solution: FUGAL relaxes the solution space to doubly stochastic matrices and uses a customized optimization strategy that guides the Frank-Wolfe algorithm [16] through a Sinkhorn distance objective [7] to steer the resulting doubly stochastic solution towards a quasi-permutation matrix. We call our approach unrestricted, as it does not rely solely on intermediate representations. On the other hand, it is not entirely unmediated, as the LAP regularizer using structural features is mediated. Thereby, we retain the full graph information and also enable mediating representations to efficiently guide the optimization process and thereby enable both efficacy and tractability. ", "page_idx": 1}, {"type": "text", "text": "Experimental evaluation: Through extensive experimentation with real-world and synthetic datasets across varying graph density and noise levels, we demonstrate that FUGAL outperforms state-of-theart graph alignment methods in accuracy without a detrimental efficiency overhead. ", "page_idx": 1}, {"type": "text", "text": "2 Problem Formulation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Definition 2.1. Let $\\mathcal G(\\mathcal\\ V,\\mathcal{E})$ denote an unlabelled, undirected graph, where $\\mathcal{V}$ is the set of nodes each identified by a number $[n]=\\{1,\\ldots,n\\}$ and $\\mathcal{E}\\subseteq\\mathcal{V}\\times\\mathcal{V}$ is the edge set. The adjacency matrix of $\\mathcal{G}$ is $\\mathbf{A}\\in\\{0,\\dot{1}\\}^{n\\times n}$ such that $a_{i j}=a_{j i}=1$ if and only if $(i,j)\\in\\mathcal{E}$ . ", "page_idx": 2}, {"type": "text", "text": "We denote an all-ones vector as 1, an all-ones square matrix as $\\mathbf{J}$ , and an all-zero square matrix as $\\mathbf{O}$ .   \nThe dimensions of entities are inferred from the equations employing them. ", "page_idx": 2}, {"type": "text", "text": "Definition 2.2. We denote the set of binary-valued permutation matrices as ${\\mathbb{P}}^{n}=\\{\\mathbf{P}\\in\\{0,1\\}^{n\\times n}$ : $\\mathbf{P1}=\\mathbf{1},\\mathbf{P^{\\top}1}=\\mathbf{1}\\}$ and that of real-valued doubly stochastic matrices as $\\mathbb{W}^{n}=\\{\\mathbf{W}\\in[0,1]^{n\\times n}$ : $\\mathbf{W1}=\\mathbf{1},\\mathbf{W}^{\\top}\\mathbf{1}=\\mathbf{1}\\rbrace$ . ", "page_idx": 2}, {"type": "text", "text": "Definition 2.3. Let $\\mathbf{A}=[a_{i j}]_{i\\in[n],j\\in[m]}\\in\\mathbb{R}^{n\\times m}$ . We denote the Frobenius norm as the entry-wise 2-norm $\\begin{array}{r}{\\|\\mathbf{A}\\|_{F}=\\left(\\sum_{i=1}^{n}\\sum_{j=1}^{m}|a_{i j}|^{2}\\right)^{1/2}}\\end{array}$ ", "page_idx": 2}, {"type": "text", "text": "Definition 2.4. We denote the trace of a matrix $\\mathbf{A}$ as $\\operatorname{tr}(\\mathbf{A})$ . ", "page_idx": 2}, {"type": "text", "text": "Theorem 2.5. A doubly-stochastic matrix A with $\\mathrm{tr}(\\mathbf{A}^{\\top}(\\mathbf{J}-\\mathbf{A}))=0$ is a permutation matrix. ", "page_idx": 2}, {"type": "text", "text": "Proof. From $\\mathrm{tr}(\\mathbf{A}^{\\top}(\\mathbf{J}-\\mathbf{A}))\\,=\\,0$ follows that $\\begin{array}{r}{\\sum_{i}\\sum_{j}a_{i j}\\cdot(1-a_{i j})\\,=\\,0}\\end{array}$ . Since A is doublystochastic, $0\\,\\leq\\,a_{i j}\\,\\leq\\,1$ for all $i$ and $j$ . Thus, $a_{i j}\\cdot(1-a_{i j})\\geq0$ for $1\\leq i,j\\leq n$ . Therefore, $a_{i j}\\cdot(1-a_{i j})=0$ for all $i$ and $j$ . As a consequence, $a_{i j}\\in\\{0,1\\}$ for each $i$ and $j$ . Given that $\\mathbf{A}$ is doubly-stochastic and all its entries are either 0 or 1, by Definition 2.2, A is a permutation matrix. $\\sqsubset$ ", "page_idx": 2}, {"type": "text", "text": "Problem 1 (Unmediated Graph Alignment). Consider two graphs $\\mathcal{G}_{1}:=(\\mathcal{V}_{1},\\mathcal{E}_{1})$ and $\\mathcal{G}_{2}:=(\\mathcal{V}_{2},\\mathcal{E}_{2})$ with adjacency matrices A, $\\mathbf{B}$ respectively. The objective of unmediated graph alignment is to identify a bijection $f:\\mathcal{V}_{1}\\to\\mathcal{V}_{2}$ between the two graphs that minimizes the number of edge disagreements. Formally, the problem is expressed as: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in\\mathbb{P}^{n}}}\\|\\mathbf{A}\\mathbf{P}-\\mathbf{P}\\mathbf{B}\\|_{F}^{2},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathbb{P}^{n}$ denotes the set of permutation matrices. ", "page_idx": 2}, {"type": "text", "text": "The appellation unmediated denotes that we seek a correspondence among nodes without using any information other than the adjacency matrix. The problem is an instance of the NP-hard quadratic assignment problem (QAP) [24]. ", "page_idx": 2}, {"type": "text", "text": "Due to the problem\u2019s hardness, a popular approximation path utilizes intermediaries such as node embeddings. A mediated graph alignment is thus expressed as a linear assignment between embeddings rather than a quadratic assignment between adjacency matrices: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in}\\mathbb{P}^{n}}\\|\\mathbf{E}_{1}-\\mathbf{P}\\mathbf{E}_{2}\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathbf{E}_{k}\\ \\in\\ \\mathbb{R}^{|\\mathcal{V}_{k}|\\times F}$ is the embedding matrix of $\\mathcal{G}_{k}$ and $\\mathbf{E}_{k}[i,:]$ is the $F$ -dimensional vector representation of node $i$ of $\\mathcal{G}_{k}$ . The optimization problem in Equation (2) is a linear assignment problem (LAP), which is solvable optimally in $\\mathcal{O}\\left(N^{3}\\right)$ by the Hungarian algorithm [26], while sub-optimal solutions reduce complexity to $\\mathcal{O}\\left(N^{2}\\right)$ . ", "page_idx": 2}, {"type": "text", "text": "Extension to graphs of unequal sizes. Consider two graphs $\\mathcal{G}_{1}$ and $\\mathcal{G}_{2}$ with node counts $n_{1}$ and $n_{2}$ , respectively $(n_{1}<n_{2})$ . To enable alignment despite the size difference, we augment $\\mathcal{G}_{1}$ with $(n_{2}\\!-\\!n_{1})$ isolated dummy nodes and discard mappings involving dummy nodes from the output. ", "page_idx": 2}, {"type": "text", "text": "3 FUGAL ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "To design FUGAL, we augment the core QAP of Eq. (1) with a LAP supplement that leverages simple structural graph features $(\\S\\ 3.1)$ to form a unified optimization problem over the set of permutation matrices $\\mathbb{P}^{n}$ $\\left(\\S\\ 3.2\\right)$ . As this problem is NP-hard, we relax its solution space to the set of doubly stochastic matrices $\\mathbb{W}^{n}\\left(\\S\\ 3.3\\right)$ , a superset of the set of permutation matrices. We refine the solution to obtain a quasi-permutation matrix, i.e., almost a permutation matrix, which we adjust to a permutation matrix that signifies a valid alignment by solving a simple LAP using the Hungarian algorithm [26]. We dub this approach \u201cunrestricted\u201d as it eschews the information loss incurred by mediated solutions, which rely solely on intermediary representations. However, we still employ supplementary mediating representations to ensure tractability and efficiency. ", "page_idx": 2}, {"type": "text", "text": "3.1 LAP Formulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Here, we formalize the Linear Assignment Problem (LAP), which is auxiliary to our framework. We construct a node feature vector using four structural features proposed in NETSIMILE [2]. This includes (1) $d_{i}$ , the degree of node $v_{i}$ , (2) $c_{i}$ , the clustering coefficient of $v_{i}$ , (3) $\\bar{d}_{N_{i}}$ , the mean degree of $v_{i}$ \u2019s neighbors, (4) and $\\bar{c}_{N_{i}}$ , the mean clustering coefficient of $v_{i}$ \u2019s neighbours. Other features, such as betweenness centrality, PageRank, may also be used. Ultimately, the decision resides on the trade-off between the utility of including these features on alignment quality and the efficiency of computing these features. ", "page_idx": 3}, {"type": "text", "text": "Using these features, we construct a feature matrix $\\mathbf{F}_{k}\\,\\in\\,\\mathbb{R}^{|\\mathcal{V}_{k}|\\,\\times\\,4}$ for each graph $\\mathcal{G}_{k}$ and, by the rationale that the structural features of corresponding nodes are similar, we formulate a Linear Assignment Problem for $\\mathcal{G}_{1}$ and $\\mathscr{G}_{2}$ as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in}\\mathbb{P}^{n}}\\|\\mathbf{F}_{1}-\\mathbf{P}\\mathbf{F}_{2}\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "By the Frobenius norm definition, Eq. (3) is equivalent to: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in}\\mathbb{P}^{n}}\\sum_{i}\\|\\mathbf{F}_{1}[i,:]-\\sum_{j}\\mathbf{P}_{i j}\\mathbf{F}_{2}[j,:]\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Utilizing the property of permutation matrices that each row contains only one 1, we reformulate Eq. (4) to: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P}\\in\\mathbb{P}^{n}}\\sum_{i,j}\\mathbf{P}_{i j}\\|\\mathbf{F}_{1}[i,:]-\\mathbf{F}_{2}[j,:]\\|_{F}^{2}=\\operatorname*{min}_{\\mathbf{P}\\in\\mathbb{P}^{n}}\\sum_{i,j}\\mathbf{P}_{i j}\\mathbf{D}_{i j}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathbf{D}$ is a distance matrix with $\\mathbf{D}_{i j}$ denoting the squared Euclidean distance between $\\mathbf{F}_{1}[i,:]$ and $\\mathbf{F}_{2}[j,:]$ . Since each row $\\mathbf{P}[i,:]$ contributes exactly one term to this sum, being the element of $\\mathbf{D}$ corresponding to the single 1 entry in $\\mathbf{P}[i,:]$ , the result is equal to the trace of the matrix product: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in\\mathbb{P}^{n}}}\\mathrm{~tr}(\\mathbf{P}^{\\intercal}\\mathbf{D})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "3.2 Optimization Problem ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Our problem formulation augments the QAP of Eq. (1) with a LAP regularizing term as in Eq. (6): ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in\\mathbb{P}^{n}}}\\|\\mathbf{A}\\mathbf{P}-\\mathbf{P}\\mathbf{B}\\|_{F}^{2}+\\mu\\cdot\\operatorname{tr}(\\mathbf{P}^{\\top}\\mathbf{D})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where A and $\\mathbf{B}$ denote the adjacency matrices of $\\mathcal{G}_{1}$ and $\\mathcal{G}_{2}$ , respectively, $\\mathbf{D}$ follows Eq. (6), and $\\mu$ regulates the LAP\u2019s significance; since $\\mathbf{P}\\mathbf{P}^{\\top}=\\mathbf{I}$ , this is expanded to: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P}\\in\\mathbb{P}^{n}}\\operatorname{tr}(\\mathbf{A}^{\\top}\\mathbf{A})+\\operatorname{tr}(\\mathbf{B}^{\\top}\\mathbf{B})-2\\operatorname{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\cdot\\operatorname{tr}(\\mathbf{P}^{\\top}\\mathbf{D})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "equivalently, ignoring constant terms and reversing the sign, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\mathbf{P\\in\\mathbb{P}^{n}}}\\operatorname{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})-{\\boldsymbol{\\mu}}\\cdot\\operatorname{tr}(\\mathbf{P}^{\\top}\\mathbf{D})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In the case of $\\mu\\:=\\:0$ , the first term alone corresponds to the maxQAP problem [30], which is APX-hard to approximate even within an approximation factor that grows linearly with the number of nodes. Given this hardness of the QAP alone and the fact that relaxing combinatorial constraints often results in a substantial deterioration of solution quality, we introduce the LAP regularization to ground the QAP solution on pragmatic features and thereby guide it, even after we relax combinatorial constraints. ", "page_idx": 3}, {"type": "text", "text": "3.3 Approximating the Optimization Problem ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The problem in Eq. (9) is NP-hard, due to the non-convex nature of the space of permutation matrices [24]. A natural way to overcome this hardness is to enlarge the allowed solution space to the convex set of doubly stochastic matrices ${\\mathbb{W}}^{n}$ , as considered in FAQ [42]: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in\\mathbb{W}^{n}}}-\\operatorname{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\cdot\\operatorname{tr}(\\mathbf{P}^{\\top}\\mathbf{D})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Since the problem in Eq. (10) calls to minimize a function subject to linear constraints implied by $\\textbf{P}\\in\\mathbb{W}^{n}$ , the solution can be efficiently found [3] by algorithms such as Adam [23] and Frank-Wolfe [16]. The FAQ algorithm [42] follows such an approach to solve the relaxed optimization with the Frank-Wolfe algorithm and project the solution back onto $\\mathbb{P}^{n}$ , yet addresses exclusively the first, QAP term in Eq. (10). To further augment quality, as we elaborate later in Section 5, we include the LAP term in Eq. (10) and also add a regularizing term that guides the solution towards a quasi-permutation matrix. By Theorem 2.5, which establishes that a doubly-stochastic matrix $\\mathbf{P}$ with $\\mathrm{tr}(\\mathbf{P}^{\\top}(\\mathbf{J}-\\mathbf{P}))=0$ is a permutation matrix, we rewrite the problem in Eq. (9) as: ", "page_idx": 4}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/30e2e7d6a196d03d9f5e5d5081387073b790c2aef02254337a96dcae5fdbe124.jpg", "table_caption": [], "table_footnote": [], "page_idx": 4}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/afc4ca19eb1624b76e120974b56bb9d422184c124876db5f0941c74ba0db119f.jpg", "table_caption": [], "table_footnote": [], "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{\\mathbf{P}\\in\\mathbb{W}^{n}}{\\operatorname*{min}}-\\mathrm{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\cdot\\mathrm{tr}(\\mathbf{P}^{\\top}\\mathbf{D})}\\\\ &{\\quad\\mathrm{Constraints:~tr}(\\mathbf{P}^{\\top}(\\mathbf{J}-\\mathbf{P}))=0}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "and turn the constraint to a regularizer with parameter $\\lambda$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P\\in\\mathbb{W}^{n}}}-\\operatorname{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\cdot\\operatorname{tr}(\\mathbf{P}^{\\top}\\mathbf{D})+\\lambda\\cdot\\left(\\operatorname{tr}(\\mathbf{P}^{\\top}(\\mathbf{J}-\\mathbf{P}))\\right)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Equivalently, by reformulating the constraints: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{\\mathbf{P}}{\\operatorname*{min}}-\\mathrm{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\cdot\\mathrm{tr}(\\mathbf{P}^{\\top}\\mathbf{D})+\\lambda\\cdot\\left(\\mathrm{tr}(\\mathbf{P}^{\\top}(\\mathbf{J}-\\mathbf{P}))\\right)}\\\\ &{\\qquad\\qquad\\mathrm{Constraints:}\\ \\mathbf{P}\\mathbf{1}=\\mathbf{1},\\mathbf{P}^{\\top}\\mathbf{1}=\\mathbf{1},0\\le\\mathbf{P}_{i j}\\le1}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We solve the problem in eq. (13) for $\\lambda=0$ by the Frank-Wolfe (FW) algorithm [16] with updates guided by an objective computed via the Sinkhorn-Knopp algorithm [7], due to the computational efficiency they confer. We use the solution to this optimization problem as a warm start, and refine it by gradually increasing $\\lambda$ over $T$ iterations, each initiating with the solution obtained in the preceding one and solving the problem in Eq. (13) by FW. Alg. 1 outlines the process. ", "page_idx": 4}, {"type": "text", "text": "Rounding Algorithm: Alg. 1 yields a quasi-permutation matrix $\\mathbf{Q}$ . Next, to obtain an one-to-one mapping between nodes of $\\mathcal{G}_{1}$ and $\\mathcal{G}2$ , we need to adjust $\\mathbf{Q}$ to a permutation matrix by rounding. We pose this problem as an assignment problem, maximizing the sum of $\\mathbf{Q}_{i j}$ entries selected for rounding up to 1, while rounding the rest down to 0, and solve it optimally by the Hungarian algorithm [26]. Alg. 2 in the appendix presents the complete FUGAL pseudocode. ", "page_idx": 4}, {"type": "text", "text": "4 Customized Optimization Strategy for Node Alignment ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we elucidate the intricacies of Algorithm 1, which derives a quasi-permutation matrix, focusing on two pivotal steps: $(i)$ initialization of the quasi-permutation matrix; $(i i)$ finding the local solution for a given $\\lambda$ . ", "page_idx": 4}, {"type": "text", "text": "Initialization: Any doubly stochastic matrix is a viable option for initialization. However, we opt for an uninformative flat matrix, $\\mathbf{1}\\cdot\\mathbf{1}^{\\top}/n$ . Our empirical observations indicated that this initialization consistently performs well across diverse datasets, contrary to informative initializations like the identity matrix, which exhibit inconsistency in performance, as we further elaborate in Section A.8. ", "page_idx": 4}, {"type": "text", "text": "Local Solution for a given $\\lambda:$ Given a specific $\\lambda$ , our objective is to solve the optimization problem of Eq. (13) under linear constraints. To achieve this, we employ the Frank-Wolfe algorithm (FW), a successive first-order optimization technique devised for solving convex quadratic programs [16]. While FW is a widely utilized solver as a subroutine for QAP algorithms, we tailor its application to FUGAL. Specifically, each iteration commences from the local solution obtained in the previous iteration and involves the following steps: ", "page_idx": 4}, {"type": "text", "text": "Computing the Gradient: The gradient of the objective function $\\begin{array}{r}{f(\\mathbf{P})=-\\operatorname{tr}(\\mathbf{A}\\mathbf{P}\\mathbf{B}^{\\top}\\mathbf{P}^{\\top})+\\mu\\,\\cdot\\,}\\end{array}$ $\\mathrm{tr}(\\mathbf{P}^{\\top}\\mathbf{D})$ with respect to $\\mathbf{P}$ , evaluated at $\\mathbf{Q}$ , is $\\nabla f\\left(\\mathbf{Q}\\right)=-\\mathbf{AQB}^{\\top}-\\mathbf{A}^{\\top}\\mathbf{QB}+\\mu\\cdot\\mathbf{D}$ . Additionally, the gradient of the constraint function $g(\\mathbf{P})=\\operatorname{tr}(\\mathbf{P}^{\\top}(\\mathbf{J}-\\mathbf{P}))$ with respect to $\\mathbf{P}$ , evaluated at $\\mathbf{Q}$ , is $\\bar{\\nabla}g\\left(\\mathbf{Q}\\right)=\\mathbf{J}-2\\mathbf{Q}$ . ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Updating Q: A critical step involves determining the doubly-stochastic matrix $q_{i t}$ that minimizes the inner product $\\langle g r a d,q\\rangle$ , where grad is the current gradient. Prior work [42] applies the Hungarian algorithm to obtain a permutation matrix to that end, which, however, may not yield the optimal answer and incurs $\\mathcal{O}(\\bar{n}^{3})$ cost. Contrarily, we obtain a proper doubly stochastic matrix to that end. ", "page_idx": 5}, {"type": "text", "text": "Definition 4.1 (Optimal Transport Distance Between $r$ and $c$ ). Given a $n\\times n$ cost matrix $\\mathbf{M}$ , the cost of mapping an $n$ -dimensional probability vector $r$ to $c$ , using a transportation matrix (or joint probability) $\\mathbf{P}$ is quantified as $\\langle\\mathbf{P},\\mathbf{M}\\rangle$ . The following problem: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P}\\in U(r,c)}\\langle\\mathbf{P},\\mathbf{M}\\rangle.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "is an optimal transport problem between $r$ and $c$ given cost $\\mathbf{M}$ , where ", "page_idx": 5}, {"type": "equation", "text": "$$\nU(r,c)=\\{\\mathbf{P}\\in\\mathbb{R}_{+}^{n\\times n}\\mid\\mathbf{P1}=r,\\mathbf{P}^{\\top}\\mathbf{1}=c\\}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "To render this optimal transport objective strictly convex and thus efficiently solvable by the matrix scaling Sinkhorn-Knopp fixed-point iteration algorithm [38] via matrix-vector products, we regularize it with an entropic penalty $h(\\mathbf{P})$ that yields the Sinkhorn distance objective [7]: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\mathbf{P}\\in U(r,c)}\\langle\\mathbf{P},\\mathbf{M}\\rangle-\\frac{1}{\\kappa}h(\\mathbf{P})\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\begin{array}{r}{h(\\mathbf{P})=-\\sum_{i,j=1}^{n}\\mathbf{P}_{i j}\\log\\mathbf{P}_{i j},\\kappa\\in(0,\\infty]}\\end{array}$ , which becomes equivalent to the transport distance for suitably large $\\kappa$ [7]. The method exhibits excellent performance in practice with $O(n^{2})$ empirical time complexity. ", "page_idx": 5}, {"type": "text", "text": "Setting $r$ and $c$ to $\\mathbf{1}$ (the all-ones vector) in Eq. (15), $U(r,c)$ becomes the space of doubly stochastic matrices, hence Eq. (14) with $\\mathbf{M}=g r a d$ captures our update step objective. Thus, we find the doubly stochastic matrix $q_{i t}$ that minimizes $\\langle g r a d,q\\rangle$ by the Sinkhorn-Knopp algorithm and update $\\mathbf{Q}$ as $\\mathbf{Q}\\gets\\mathbf{Q}+\\alpha\\cdot(q_{i t}-\\mathbf{Q})$ , with the step size $\\alpha$ following the conventional choice $\\alpha=2/(2+i t)$ . ", "page_idx": 5}, {"type": "text", "text": "Complexity Analysis: The complexity of FUGAL is ${\\mathcal{O}}(n^{3})$ , which is in line with the majority of the baselines. A detailed derivation and comparison of FUGAL\u2019s complexity with baselines is provided in App. A.1.The ${\\mathcal{O}}(n^{3})$ complexity stems from the need to perform matrix multiplications, a core operation in FUGAL as well as the baselines. A thorough evaluation of empirical running times $(\\S\\ S.5)$ also demonstrates the practical scalability of FUGAL. ", "page_idx": 5}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we present a comprehensive evaluation of FUGAL vs. state-of-the-art graph alignment baselines on real and synthetic data sets with varying noise levels. ", "page_idx": 5}, {"type": "text", "text": "5.1 Datasets ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Real Graphs. Table 1 summarizes the real-world datasets used to benchmark FUGAL.The last three data sets in the table are evolving graphs mandating challenging ground-truth alignments. ", "page_idx": 5}, {"type": "text", "text": "Synthetic Graphs. We employ Newmann-Watts (NW) [21] graphs, characterized by small-world properties and a high clustering coefficient. We generate NW graphs with 1000 nodes, number of neighbors per node $k=7$ , and a rewiring probability of $p=0.1$ . For each graph, we generate 5 noisy variants, perform alignments on each, and report average results. Given the obtained alignment set $\\mathcal{P}$ and the ground truth set of alignments $\\mathcal{P}_{r e a l}$ , we calculate accuracy as $\\frac{|\\mathcal{P}\\cap\\mathcal{P}_{r e a l}|}{|\\mathcal{P}|}\\cdot100$ ", "page_idx": 5}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/89b6223ab56ffd973559887c69ac5e0061d3600b86ba5693eb48740519990d8a.jpg", "table_caption": ["Table 1: Real-graph nodes $n$ , edges $m$ , and network type. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "pNeoritsuer bTaytipoenss.  tAo st hien  apdrjiaocr ewncory k m[a4t, ri2x0 ,b 4y 3e]i,t hweer  rientmroodvuincge   \nor adding edges. We employ two noise types: one-way   \nnoise removes edges from the target graph, while bimodal noise removes and restores the same number of edges. ", "page_idx": 5}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/d721337be06ae08ec16f0dd37289c9d1899fd994bd2ff56f9d091f800377dc74.jpg", "img_caption": ["Figure 1: Accuracy, real graphs with real noise. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "5.2 Experimental Setup ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We ran all experiments on a 40-core Intel Xeon E5-2687W CPU machine $\\mathbb{\\@3.10G H z}$ with Python implementations of FUGAL1 and competitors;2 the latter include CONE [4], IsoRank [37], S-GWL [43], GRAMPA [13], GRASP-B [19], FAQ [42], PARROT [46], fGOT [32], GOT [31], GW [35] and FGW [40]. Due to scalability limitations, we excluded fGOT from consideration for graphs with more than 1000 nodes, on which it failed to terminate within 5 hours. Moreover, due to the inability of GOT, PATH, and DSPP to scale for the smallest dataset in our analysis, we assess them separately on smaller graphs in Appendix A.4. We exclude GWL from evaluation in favor of its scalable and superior variant, S-GWL [39]. We omit from the comparison algorithms such as GRAAL [25], GLAG [14] and REGAL [17] due to their inferior performance [39, 29]. As we focus on non-attributed graphs, we exclude FINAL [47], which is equivalent to IsoRank on graphs without attributes. For the prerequisite similarity score in IsoRank, we devise a customized weight scheme as $\\begin{array}{r}{s i m(u,v)=1-\\frac{\\bar{|d_{u}-d_{v}\\bar{|}}}{\\operatorname*{max}\\{d_{u},d_{v}\\}}}\\end{array}$ where $d_{u}=|N(u)|$ denotes the degree of node $u$ . With all baselines, we use author-recommended parameters and derive node matchings from similarity scores using the Hungarian algorithm. In Appendix A.5, we benchmark FUGAL against S-GWL and CONE in terms of Matched Neighborhood consistency (MNC) [4] and the Frobenius norm between aligned graph adjacency matrices. ", "page_idx": 6}, {"type": "text", "text": "5.3 Accuracy on varying noise ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Graphs with real Noise: We evaluate all algorithms on accuracy with three real-world networks: MultiMagna, Voles, and High School. MultiMagna represents a yeast protein-protein interaction (PPI) network and noisy variants incorporating an additional $q\\%$ of low-confidence interactions, with $q\\in\\{5,10,15,20,25\\}$ . High School and Voles are temporal proximity networks; we align the last graph version to versions containing $80\\%$ , $85\\%$ , $90\\%$ , and $99\\%$ of edges. Figure 1 presents our results. FUGAL consistently achieves accuracy surpassing its counterparts across all datasets, with S-GWL being the closest baseline on average. On MultiMagna, FUGAL attains a $4\\%$ improvement over the next best algorithm, S-GWL, on the first graph variant, and this gap steadily increases to $16\\%$ on the last variant. On Voles, CONE and S-GWL follow FUGAL\u2019s accuracy with up to $90\\%$ of edges, yet with $80\\%$ of edges, they achieve $83\\%$ and $75\\%$ accuracy, respectively, vs. $90\\%$ of FUGAL. On the High School network, FUGAL, FAQ and PARROT align graphs perfectly, while S-GWL attains near-perfect alignment. IsoRank, GRAMPA, GRASP-B fGOT, GW and FGW fall short of FUGAL\u2019s performance across all three datasets. Despite performing comparably to FUGAL on the HighSchool dataset, FAQ and PARROT exhibit notably poorer performance on other datasets. The consistently superior performance of FUGAL underscores its robustness. ", "page_idx": 6}, {"type": "text", "text": "Large Real Graphs with Partially Aligned nodes: ACM and DBLP are two co-authorship networks of the ACM Digital Library and DBLP bibliography. In these networks, nodes represent authors, and an edge exists between two authors if they have collaborated on at least one publication. Across both networks, there are 6,325 authors who appear in both. Although both networks are attributed, we did not incorporate this information in our experiments. Note that S-GWL and GRASP-B are not scalable for networks of this magnitude, hence omitted from the analysis. Furthermore, the experiment was conducted in an unsupervised manner, meaning that the methods were not provided with any prior information regarding node alignment. Our results, detailed in Table 2, showcase the fraction of correctly aligned nodes out of the 6,325 aligned nodes. FUGAL demonstrated a significant improvement of $30\\%$ compared to the closest baseline, CONE. This underscores the superior scalability of FUGAL without compromising accuracy. ", "page_idx": 6}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/5ab1720b47b51c4e30cfbef6435e4832da7988da2aa95bf22af2490691f69b70.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/72ef98599f7b8f0738f5dea7fc09dd2fd3bf2643a3dba2341535f28eaf197c94.jpg", "table_caption": ["Table 2: Accuracy in alignment across ACM-DBLP. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Real Graphs with Injected Noise: Figure 2 illustrates the results on real datasets subject to synthetic one-way and bimodal noise. Consistent with the trends observed in real noise, FUGAL exhibits superior performance across all evaluated networks and noise types. This consistent superior performance of FUGAL establishes it as a robust graph alignment solution. Appendix A.3 zooms in on the performance of FUGAL vs. baselines with noise levels in the range $0\\%$ to $5\\%$ to better highlight the performance superiority of FUGAL. ", "page_idx": 7}, {"type": "text", "text": "Synthetic Graphs: Figure 3 portrays accuracy results on Newmann-Watts graphs of 1000 nodes with node degree $k=7$ and rewiring probability $p=0.1$ subject to synthetic noise. Under one-way noise, all methods except CONE and FAQ achieve perfect alignment at $0\\%$ noise. With noise of $5\\%$ and $10\\%$ , FUGAL attains a $60\\%$ and $14\\%$ gain, respectively, over the 2nd-best method, S-GWL. Beyond these noise levels, all methods experience failures. Bimodal noise at $0\\%$ results in perfect alignment for most methods. However, alignment failures occur as noise grows. Figure 3 further zooms in noise levels in the range of $0\\%$ to $5\\%$ . FUGAL significantly outperforms all baselines under one-way noise, achieving a margin of $60\\%$ at $3\\%$ and $5\\%$ levels. Moreover, FUGAL performs superiorly in the bimodal noise within the $5\\%$ noise threshold, gaining nearly $40\\%$ at $1\\%$ and $3\\%$ noise levels. These results underscore the efficacy of FUGAL in handling diverse graph structures. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "5.4 Varying Density ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Here, we examine performance under varying graph density. In Newmann-Watts graphs, the rewiring probability parameter $p$ affects the edge density of sampled graphs for a fixed number of nodes $n$ , while the parameter $k$ , representing the number of nearest neighbors per node, affects the minimum and expected degree. Figure 4 shows our results when varying $p$ and $k$ in NW graphs comprising 1000 nodes. Methods other than FUGAL consistently fail to handle sparse graphs (low $p\\breve{}$ ). However, FUGAL attains accuracy $92\\%$ at $p=0.25$ , outperforming S-GWL, which achieves only $54\\%$ . Sparse graphs pose a challenge for alignment, as they provide less discriminating evidence in terms of density differentials. When varying $k$ , FUGAL consistently achieves near-perfect alignment, surpassing all baselines. These findings corroborate the resilience of FUGAL across graph densities and its adaptability to varying degrees of connectivity. ", "page_idx": 8}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/e39dcc433051ff191a73d98fa9e5ab377a853bd11d77c72ad308ea60c63a48eb.jpg", "img_caption": ["Figure 4: Accuracy varying density and one-way noise. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.5 Efficiency ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Here we compare the computational efficiency of FUGAL to that of S-GWL, which ranks as the second-best performer across most benchmark datasets. ", "page_idx": 8}, {"type": "text", "text": "Figure 5 plots running times in logarithmic axes. FUGAL achieves lower running times on MultiMagna, Voles, euroroad, arenas, and Newmann-Watts networks with an up to $3\\mathbf{X}$ speed up, highlighting its capacity to handle large networks. Conversely, S-GWL marginally outperforms FUGAL on smaller networks. S-GWL did not scale for ACM-DBLP, failing to terminate even after 5 hours. This discrepancy indicates S-GWL\u2019s incapacity to scale to large networks, which restricts its broader applicability. We emphasize ", "page_idx": 8}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/3bbf62eeb4a933f7c3ba79945130920a4502e85d1604cc4d451d3e4d0ccd0393.jpg", "img_caption": ["Figure 5: Running time comparison, FUGAL vs S-GWL. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "that FUGAL achieves a substantial accuracy advantage without compromising efficiency, affirming its prowess as an efficient and effective solution. Appendix A.2 presents running times for all baselines. ", "page_idx": 8}, {"type": "text", "text": "5.6 Scalability ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Given the results of Section 5.5, we delve into the scalability of FUGAL and S-GWL with Newmann-Watts graphs of increasing nodes. Figure 6 plots our findings. At 512 nodes, FUGAL and S-GWL have comparable running times. Still, as nodes grow, FUGAL outpaces S-GWL. ", "page_idx": 8}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/6a056f711b90fe9c454409adc52eebacccb8651d08f310dd91cf487abc6ec303.jpg", "img_caption": ["Figure 6: Scalability on NW graphs, $k=7$ , $p=0.5$ . "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "5.7 Parameters and Ablation ", "text_level": 1, "page_idx": 9}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/abd2160ec96c57a3ae7585c0c85e43ec1115e28d766445f220111c25ea7614e6.jpg", "table_caption": [], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "Table 3 in Appendix lists the parameters we employ in FUGAL with each dataset. We set the number of iterations $T$ to 15 for all datasets. The parameter $\\mu$ controls the sway of node features in the optimization. Sparser graphs, characterized by lower connectivity and less information in adjacency matrices, benefit from higher reliance on node features, hence we recommend a higher $\\mu$ . Sparser datasets such as inf-euroroad, ca-netscience, and NW $k=7$ , $p=0.1$ ) benefit from higher values of $\\mu$ (1\u20132), denser graphs from smaller values (0.1\u20130.5). ", "page_idx": 9}, {"type": "text", "text": "We also conduct an extensive ablation study to assess the impact of the structural features outlined in Section 3.1. We craft five variants of FUGAL, where FUGAL- $^{\\,i}$ utilizes only the $i^{\\mathrm{th}}$ structural feature while excluding others. FUGAL-0 abstains from all structural features. Figure 7 juxtaposes the accuracy of these variants to that of FUGAL on two networks. Each variant employing structural features attains higher accuracy than FUGAL-0, corroborating the usefulness of these features. Further, FUGAL, leveraging all features, outperforms other variants. Notably, FUGAL-1 performs ", "page_idx": 9}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/b535a816f9821ac077a60607133803d752e0f6c4ab22e6a1b5ccdf10f1e63079.jpg", "img_caption": ["Figure 7: Accuracy of FUGAL variants, one-way noise. "], "img_footnote": [], "page_idx": 9}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/5eb5a4c310dc9d4323f13978d60363c5089b43640a35e36448a136cd21f710b9.jpg", "img_caption": ["Figure 8: The effect of setting $\\lambda=0$ (FUGAL-DS) against the default option of iteratively increasing. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "second-best, underscoring the significance of degree in identifying node alignments. We also investigate a variant setting $\\lambda=0$ , denoted as FUGAL-DS (for doubly stochastic), instead of iteratively increasing it. As Figure 8 shows, FUGAL-DS attains worse accuracy. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusions ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We introduced FUGAL, an unrestricted algebraic approach to graph alignment that works directly on graph adjacency matrices and identifies node correspondences by relaxing permutation matrix constraints and steering the solution to the desired form, followed by rounding. Through extensive experimentation, we established that FUGAL surpasses state-of-the-art graph alignment methods in accuracy across network types, noise conditions, and graph densities, even while maintaining a scalability advantage. ", "page_idx": 9}, {"type": "text", "text": "Broader Impact and Ethical consequences: FUGAL opens the way to improved solutions in graph alignment, as reflected in its performance across diverse networks, noise types, and graph density. This outcome can spark further research in optimization techniques and advances in bioinformatics, social network analysis, and infrastructure mapping. Still, advances in graph alignment also enhance the abilities of attackers attempting to de-anonymize sensitive social network and biological data. Therefore, preventing attacks on privacy is crucial, calling for the enforcement of advanced anonymization methods [34] before publishing such data. ", "page_idx": 9}, {"type": "text", "text": "7 Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "AB was supported by Graviton Research Capital LLP. HRV was supported by the CSE Research Acceleration Fund of IIT Delhi. KS was supported by the Independent Research Fund Denmark. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] David A. Bader, Henning Meyerhenke, Peter Sanders, and Dorothea Wagner, editors. Graph Partitioning and Graph Clustering. Proceedings of the 10th DIMACS Implementation Challenge Workshop., volume 588 of Contemporary Mathematics. American Mathematical Society, 2013. [2] Michele Berlingerio, Danai Koutra, Tina Eliassi-Rad, and Christos Faloutsos. Network similarity via multiple social theories. In IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, pages 1439\u20131440, 2013.   \n[3] Stephen Boyd and Lieven Vandenberghe. Convex optimization. Cambridge University Press, 2004. [4] Xiyuan Chen, Mark Heimann, Fatemeh Vahedian, and Danai Koutra. CONE-Align: Consistent network alignment with proximity-preserving node embedding. In 29th ACM International Conference on Information and Knowledge Management, CIKM, pages 1985\u20131988, 2020.   \n[5] Donatello Conte, Pasquale Foggia, Carlo Sansone, and Mario Vento. Graph matching applications in pattern recognition and image processing. In International Conference on Image Processing, ICIP, pages 21\u201324, 2003.   \n[6] L.P. Cordella, P. Foggia, C. Sansone, and M. Vento. A (sub)graph isomorphism algorithm for matching large graphs. IEEE Transactions on Pattern Analysis and Machine Intelligence, 26(10):1367\u20131372, 2004.   \n[7] Marco Cuturi. Sinkhorn distances: Lightspeed computation of optimal transport. In NeurIPS, pages 2292\u20132300, 2013. [8] Stephen Davis, Babak Abbasi, Shrupa Shah, Sandra Telfer, and Mike Begon. Spatial analyses of wildlife contact networks. Journal of The Royal Society, Interface, 12(102):20141004, 2015.   \n[9] Jordi Duch and Alex Arenas. Community detection in complex networks using extremal optimization. Phys. Rev. E, 72:027104, 2005.   \n[10] Nadav Dym, Haggai Maron, and Yaron Lipman. $\\mathrm{DS}++$ : a flexible, scalable and provably tight relaxation for matching problems. ACM Trans. Graph., 36(6):184:1\u2013184:14, 2017.   \n[11] Frank Emmert-Streib, Matthias Dehmer, and Yongtang Shi. Fifty years of graph matching, network alignment and network comparison. Inf. Sci., 346-347:180\u2013197, 2016.   \n[12] Paul Erd\u02ddos and Alfr\u00e9d R\u00e9nyi. On random graphs I. Publicationes Mathematicae Debrecen, 6:290, 1959.   \n[13] Zhou Fan, Cheng Mao, Yihong Wu, and Jiaming Xu. Spectral graph matching and regularized quadratic relaxations: Algorithm and theory. In ICML, volume 119, pages 2985\u20132995, 2020.   \n[14] Marcelo Fiori, Pablo Sprechmann, Joshua T. Vogelstein, Pablo Mus\u00e9, and Guillermo Sapiro. Robust multimodal graph matching: Sparse coding meets graph matching. In NeurIPS, pages 127\u2013135, 2013.   \n[15] Julie Fournet and Alain Barrat. Contact Patterns among High School Students. PLOS ONE, 9(9):1\u201317, 2014.   \n[16] Marguerite Frank and Philip Wolfe. An algorithm for quadratic programming. Naval research logistics quarterly, 3(1-2):95\u2013110, 1956.   \n[17] Mark Heimann, Haoming Shen, Tara Safavi, and Danai Koutra. REGAL: representation learning-based graph alignment. In 27th ACM International Conference on Information and Knowledge Management, CIKM, pages 117\u2013126, 2018.   \n[18] Keith Henderson, Brian Gallagher, Lei Li, Leman Akoglu, Tina Eliassi-Rad, Hanghang Tong, and Christos Faloutsos. It\u2019s who you know: graph mining using recursive structural features. In 17th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD, pages 663\u2013671, 2011.   \n[19] Judith Hermanns, Konstantinos Skitsas, Anton Tsitsulin, Marina Munkhoeva, Alexander Kyster, Simon Nielsen, Alexander M. Bronstein, Davide Mottin, and Panagiotis Karras. Grasp: Scalable graph alignment by spectral corresponding functions. ACM Trans. Knowl. Discov. Data, 17(4), feb 2023.   \n[20] Judith Hermanns, Anton Tsitsulin, Marina Munkhoeva, Alexander M. Bronstein, Davide Mottin, and Panagiotis Karras. GRASP: graph alignment through spectral signatures. In Web and Big Data - 5th International Joint Conference, APWeb-WAIM 2021, pages 44\u201352, 2021.   \n[21] Petter Holme and Beom Jun Kim. Growing scale-free networks with tunable clustering. Phys. Rev. E, 65:026107, Jan 2002.   \n[22] Ehsan Kazemi, S. Hamed Hassani, and Matthias Grossglauser. Growing a graph matching from a handful of seeds. Proc. VLDB Endow., 8(10):1010\u20131021, jun 2015.   \n[23] Diederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR, 2015.   \n[24] Tjalling C. Koopmans and Martin Beckmann. Assignment problems and the location of economic activities. Econometrica, 25(1):53\u201376, 1957.   \n[25] Oleksii Kuchaiev, Tijana Milenkovic, Vesna Memisevic, Wayne Hayes, and Natasa Przulj. Topological network alignment uncovers biological function and phylogeny. Nature Precedings, 4, 12 2009.   \n[26] Harold W. Kuhn. The Hungarian method for the assignment problem. Naval Research Logistics Quarterly, 2(1-2):83\u201397, 1955.   \n[27] J\u00e9r\u00f4me Kunegis. KONECT: the Koblenz network collection. In 22nd International World Wide Web Conference, WWW, pages 1343\u20131350, 2013.   \n[28] Jiajin Li, Jianheng Tang, Lemin Kong, Huikang Liu, Jia Li, Anthony Man-Cho So, and Jose Blanchet. A convergent single-loop algorithm for relaxation of Gromov-Wasserstein in graph data. In ICLR, 2023.   \n[29] Vince Lyzinski, Donniell E. Fishkind, Marcelo Fiori, Joshua T. Vogelstein, Carey E. Priebe, and Guillermo Sapiro. Graph matching: Relax at your own risk. IEEE Transactions on Pattern Analysis and Machine Intelligence, 38(1):60\u201373, 2016.   \n[30] Konstantin Makarychev, Rajsekar Manokaran, and Maxim Sviridenko. Maximum quadratic assignment problem: Reduction from maximum label cover and lp-based approximation algorithm. ACM Trans. Algorithms, 10(4):18:1\u201318:18, 2014.   \n[31] Hermina Petric Maretic, Mireille El Gheche, Giovanni Chierchia, and Pascal Frossard. GOT: an optimal transport framework for graph comparison. In NeurIPS, pages 13876\u201313887, 2019.   \n[32] Hermina Petric Maretic, Mireille El Gheche, Giovanni Chierchia, and Pascal Frossard. fGOT: Graph distances based on filters and optimal transport. In AAAI, pages 7710\u20137718, 2022.   \n[33] Mark E. J. Newman. Finding community structure in networks using the eigenvectors of matrices. Phys. Rev. E, 74:036104, 2006.   \n[34] Sadegh Nobari, Panagiotis Karras, HweeHwa Pang, and St\u00e9phane Bressan. L-opacity: Linkageaware graph anonymization. In 17th International Conference on Extending Database Technology, EDBT, pages 583\u2013594, 2014.   \n[35] Gabriel Peyr\u00e9, Marco Cuturi, and Justin Solomon. Gromov-Wasserstein averaging of kernel and distance matrices. In ICML, pages 2664\u20132672, 2016.   \n[36] Roded Sharan and Trey Ideker. Modeling cellular machinery through biological network comparison. Nature Biotechnology, 24:427\u201333, 05 2006.   \n[37] Rohit Singh, Jinbo Xu, and Bonnie Berger. Global alignment of multiple protein interaction networks with application to functional orthology detection. Proceedings of the National Academy of Sciences, 105(35):12763\u201312768, 2008.   \n[38] Richard Sinkhorn and Paul Knopp. Concerning nonnegative matrices and doubly stochastic matrices. Pacific Journal of Mathematics, 21:343\u2013348, 1967.   \n[39] Konstantinos Skitsas, Karol Orlowski, Judith Hermanns, Davide Mottin, and Panagiotis Karras. Comprehensive evaluation of algorithms for unrestricted graph alignment. In Proceedings 26th International Conference on Extending Database Technology, EDBT, pages 260\u2013272, 2023.   \n[40] Vayer Titouan, Nicolas Courty, Romain Tavenard, Chapel Laetitia, and R\u00e9mi Flamary. Optimal transport for structured data with application on graphs. In ICML, pages 6275\u20136284, 2019.   \n[41] Vipin Vijayan and Tijana Milenkovi\u00b4c. Multiple network alignment via MultiMAGNA++. IEEE/ACM Transactions on Computational Biology and Bioinformatics, 15(5):1669\u20131682, 2018.   \n[42] Joshua T Vogelstein, John M Conroy, Vince Lyzinski, Louis J Podrazik, Steven G Kratzer, Eric T Harley, Donniell E Fishkind, R Jacob Vogelstein, and Carey E Priebe. Fast approximate quadratic programming for graph matching. PLOS one, 10(4):e0121002, 2015.   \n[43] Hongteng Xu, Dixin Luo, and Lawrence Carin. Scalable Gromov-Wasserstein learning for graph partitioning and matching. In NeurIPS, pages 3046\u20133056, 2019.   \n[44] Hongteng Xu, Dixin Luo, Hongyuan Zha, and Lawrence Carin. Gromov-Wasserstein learning for graph matching and node embedding. In ICML, pages 6932\u20136941, 2019.   \n[45] Mikhail Zaslavskiy, Francis Bach, and Jean-Philippe Vert. A path following algorithm for the graph matching problem. IEEE Transactions on Pattern Analysis and Machine Intelligence, 31(12):2227\u20132242, 2009.   \n[46] Zhichen Zeng, Si Zhang, Yinglong Xia, and Hanghang Tong. PARROT: position-aware regularized optimal transport for network alignment. In ACM Web Conference, WWW, pages 372\u2013382, 2023.   \n[47] Si Zhang and Hanghang Tong. FINAL: fast attributed network alignment. In 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD, pages 1345\u20131354, 2016.   \n[48] Si Zhang and Hanghang Tong. Attributed network alignment: Problem definitions and fast solutions. IEEE Transactions on Knowledge and Data Engineering, 31(9):1680\u20131692, 2019.   \n[49] Feng Zhou and Fernando De la Torre. Factorized graph matching. IEEE Transactions on Pattern Analysis and Machine Intelligence, 38(9):1774\u20131789, 2016.   \nAlgorithm 2 FUGAL $(\\mathcal{G}_{1},\\mathcal{G}_{2})$   \nInput: Graphs $\\overline{{\\mathcal{G}_{1},\\mathcal{G}_{2}}}$   \nOutput: Permutation matrix $\\mathbf{P}$   \n1: \\\\ STEP 1. Extract NetSimile Features   \n2: $\\mathbf{F}_{1}\\gets$ EXTRACTFEATURES $\\left(\\mathcal{G}_{1}\\right)$   \n3: $\\mathbf{F}_{2}\\gets$ EXTRACTFEATURES $\\left(\\mathcal{G}_{2}\\right)$   \n4: $\\mathbf{D}\\gets$ EUCLEDIANDISTANCE $(\\dot{\\mathbf{F}}_{1},\\mathbf{F}_{2})$   \n5: \\\\ STEP 2. Approximate Optimization   \n6: $\\mathbf{Q}\\gets$ FINDQUASIPERMUTATION $(\\mathbf{A},\\mathbf{B},\\mathbf{D},\\mu,T)$   \n7: \\\\ STEP 3. Round to Permutation   \n8: $\\mathbf{P}\\gets\\mathrm{HUNGARIAN}(\\mathbf{Q})$   \n9: returnP ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "table", "img_path": "SdLOs1FR4h/tmp/4f850ce1b43055e01d070e98d15acdddb5bb60795097c5fca920748b100df0ca.jpg", "table_caption": ["Table 3: Parameters used in FUGAL. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "A.1 Complexity Analysis ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To assess the computational complexity of FUGAL, we examine the three primary components: (i) structural feature extraction; (ii) obtaining a quasi-permutation matrix; (iii) rounding to a permutation matrix. Let us consider source and target graphs $\\mathcal{G}_{1},\\mathcal{G}_{2}$ with $n$ nodes. Among NETSIMILE structural features, the clustering coefficient incurs a high computational cost of $\\mathcal{O}(n\\bar{M}^{2})$ , where $M$ is the maximum degree among vertices in the graph. Still, for real-world graphs conforming to a power-law degree distribution, the complexity for neighborhood features extraction is expected to be $\\mathcal{O}(n M^{\\epsilon})$ , with $0\\,<\\,\\epsilon\\,<\\,1$ [18], while finding pairwise Euclidean distances between node features takes $O(n^{2})$ . The quasi-permutation matrix derivation involves determining the gradient of the optimization problem, which requires ${\\mathcal{O}}(n^{3})$ due to matrix multiplications. The Sinkhorn-Knopp algorithm finds the doubly-stochastic matrix $q$ minimizing $\\langle g r a d,q\\rangle$ , is nearly ${\\mathcal{O}}(n^{2})$ [7], while the update to $Q$ takes $O(n^{2})$ time. Thus, the time complexity for finding a quasi-permutation matrix is ${\\mathcal{O}}(T\\cdot n^{3})$ , where $T$ is the number of iterations. We round the quasi-permutation matrix to a permutation matrix by the Hungarian algorithm, incurring a time complexity of ${\\mathcal{O}}(n^{3})$ . Therefore, the time complexity of FUGAL is $\\mathcal{O}(T\\cdot\\bar{n}^{3})$ . Empirically, $T$ typically ranges from 10 to 20, resulting in a cost of $\\dot{\\mathcal{O}}(n^{3})$ since $T\\ll n$ . We provide computational costs of baselines in Appendix A.6. Table 4 compares FUGAL\u2019s computational cost to that of baselines. ", "page_idx": 13}, {"type": "text", "text": "A.2 Running times for all baselines ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Figure 9 presents the running times of various baselines on the benchmark datasets. It is noteworthy that while some of these baselines exhibit better running times than FUGAL, the substantial disparity in accuracy, as previously demonstrated in \u00a7. 5, renders a comparison skewed in favor of FUGAL. ", "page_idx": 13}, {"type": "text", "text": "A.3 Accuracy on Real Graphs with Synthetic Noise - Low Noise Range ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In $\\S\\ S$ , we have already demonstrated the superior performance of FUGAL in the presence of noise levels ranging from $0\\%$ to $25\\%$ . In this section, we extend the comparison to assess the performance ", "page_idx": 13}, {"type": "text", "text": "Table 4: Computational Complexity comparison with baselines. $n,m$ denotes the number of nodes and edges respectively. $T,L$ denote the number of loop iterations. ", "page_idx": 14}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/b78c5a7422211fca5ef19f4b622e1cd1884d601958eebe0f91ee1734769429f5.jpg", "img_caption": ["Figure 9: Running times of all baselines. "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "of FUGAL and other baseline methods on real datasets with synthetic noise, specifically of One-Way and Multi-Modal types, within the range of $0\\%$ to $5\\%$ . The results are presented in Figure 10. On the inf-euroroad dataset, FUGAL consistently outperforms all baselines across varying noise levels in both One-Way and Multi-Modal scenarios. For the arenas dataset, FUGAL, CONE, S-GWL, PARROT, and GW maintain accuracy levels exceeding $95\\%$ consistently across all noise levels, whereas other baselines exhibit a decline in performance with increasing noise levels, particularly evident in the Multi-Modal scenario. In the case of the ca-netscience dataset, both FUGAL and S-GWL achieve similar accuracy in both One-Way and Multi-Modal scenarios. On the bio-celegans dataset, S-GWL closely matches the performance of FUGAL in the One-Way scenario; however, with Multi-Modal noise, FUGAL achieves a $6\\%$ improvement over the next-best method, S-GWL. The consistent and superior performance of FUGAL across all benchmark datasets underscores its robustness. ", "page_idx": 14}, {"type": "text", "text": "A.4 Evaluation on Small Graphs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "To compare the performance of non-scalable methods like GOT, fGOT, PATH and DSPP with FUGAL, we employed small Erd\u02ddos-R\u00e9nyi random graphs [12]. The limited scalability of these methods for larger graphs is empirically demonstrated in Section 5 (failing to terminate within 5 hours) as well as evidenced by the maximum graph size evaluated by the authors, which was 100. Following the methodology of fGOT [32], we varied the node count $n$ from 20 to 100, with edges generated using a probability of $2\\log(n)/n$ . We also included S-GWL and PARROT in the analysis. The accuracy of these methods across different graph sizes is depicted in Figure 11. While FUGAL, S-GWL, and PARROT achieved perfect alignment across all graph sizes, other methods exhibited notably inferior performance. Following [32], the Frobenius distance between aligned graph Laplacian matrices across varying graph sizes is also reported in Figure 11. FUGAL, S-GWL, and PARROT maintained an L2 Distance of 0 across all graph sizes, indicating perfect alignment, whereas the performance of other methods deteriorated with increasing graph size. These distance values closely align with those reported by the original authors in [32], validating our experimental setup. ", "page_idx": 14}, {"type": "text", "text": "A.5 Additional Metrics ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We assess FUGAL against S-GWL and CONE in terms of Matched Neighborhood Consistency (MNC) [4] and the Frobenius distance between aligned graph adjacency matrices. The results in Figure 12 indicate that FUGAL outperforms S-GWL and CONE across noise levels and noisy variants. ", "page_idx": 14}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/ed98fb9cb17c1b915a0cf0e4eed3b5238214926b03cf1de10fbff699566f3fe9.jpg", "img_caption": ["Figure 10: Accuracy comparison for real datasets with noise ranging from $0\\%$ to $5\\%$ . Top row represents One-Way noise, bottom row represents Multi-Modal noise scenarios. "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/14af32ee4ca708fd9e4a8529de25ce317de6a5bbc73998670ee9ee8912152bc9.jpg", "img_caption": ["Figure 11: Performance comparison on Erd\u02ddos-R\u00e9nyi graphs. The performance is shown in terms of Accuracy (L) and the Frobenius distance between aligned graph Laplacian matrices (R) across different graph sizes (# of nodes). "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "A.6 Computational Complexity Analysis of Baselines ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The computational costs incurred by the baseline methods and FUGAL are presented in Table 4. It is notable that all algorithms utilize the Hungarian algorithm to convert the similarity matrix into a permutation matrix, incurring a computational cost of $\\breve{O}(n^{3})$ . However, the costs reported in Table 4 solely pertain to the computation of the similarity matrix, excluding this operation. Among the baselines, CONE, S-GWL, and PARROT exhibit superior time complexity compared to FUGAL. However, as demonstrated in Section 5, both CONE and PARROT fall significantly short of FUGAL in terms of performance. Despite the seemingly promising computational cost of S-GWL, our empirical analysis in Sections 5.5 and 5.6 revealed slower running times compared to expectations. Moreover, S-GWL fails to scale for larger graphs such as ACM-DBLP (failing to terminate within 5 hours), whereas FUGAL achieves superior accuracy within 40 minutes. The limited scalability of S-GWL has been underscored by various studies [46, 19, 39, 28]. Consequently, FUGAL emerges as a preferable option for attaining superior accuracy without incurring detrimental overhead. ", "page_idx": 15}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/f36f3611433e4680d00feced6a2d27bd2b9767e38ab5921157313cca628b8bff.jpg", "img_caption": ["Figure 12: Comparison of FUGAL with S-GWL and CONE on MultiMagna and inf-euroroad datasets in terms of Matched Neighborhood Consistency (MNC) (L) and the Frobenius distance between aligned graph adjacency matrices (R) across different variants and varying noise respectively. "], "img_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/2b3affe4a19db323fd19940366cbfe573cff4a5dff94ff0157388a4426d39944.jpg", "img_caption": ["Figure 13: Accuracy vs. Running time, FUGAL vs S-GWL variants, one-way noise $5\\%$ . "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "A.7 Accuracy vs Running Time ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "S-GWL employs a recursive graph partition mechanism to accelerate graph alignment computations. An important question is how the performance of SGWL is affected by this recursive mechanism with respect to FUGAL. We have identified that the hyper-parameters cluster_num (C), partition_level $(\\mathbf{P})$ , and node_prior $(\\mathbf{N})$ significantly influence the recursive partitioning process. Three variants of S-GWL were proposed by the authors [43] based on different combinations of C and P: $\\mathbf{C}=2$ , $\\mathbf{P}=$ 3), $(\\mathbf{C}=4,\\mathbf{P}=2)$ , and $(\\mathbf{C}=8,\\mathbf{P}=1)$ ). Additionally, we vary the node_prior parameter within the set $\\{10,\\,100,\\,1000\\}$ . These combinations result in nine distinct variants of S-GWL, denoted as CxPyNz where $\\mathbf{X}$ , y, z represent the values of $\\mathbf{C},\\mathbf{P}$ , and $\\mathbf{N}$ respectively. We conduct a comparative evaluation of FUGAL against these nine variants with respect to both accuracy and running times jointly. Figure 13 depict the outcomes on the inf-euroroad and Newmann Watts datasets. For the inf-euroroad dataset, variants achieving comparable accuracy to FUGAL exhibit significantly higher running times, while those with lower running times have accuracy less than $20\\%$ . In the Newmann Watts dataset, none of the S-GWL variants approach the accuracy of FUGAL, as previously established in Section 5. Notably, variants with reasonable accuracy tend to have longer running times, whereas those with better running times demonstrate poorer accuracy. These findings underscore the practical suitability of FUGAL for graph alignment, given its favorable balance between accuracy and running times. ", "page_idx": 16}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/ae6c021007553faf0d929cbe3a08fff9043cbb5b5079444d62cd468a8153d718.jpg", "img_caption": ["Figure 14: Accuracy, FUGAL vs FUGAL-I, one-way noise. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "A.8 Effect of Initialization ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Lastly, we empirically examine our decision to employ a non-informative flat doubly stochastic matrix, denoted as $\\mathbf{1}\\cdot\\mathbf{1}^{T}/n$ , as the initial quasi-permutation matrix in Algorithm 1, in contrast to alternatives. We try out a variant of FUGAL, FUGAL-I, which utilizes the Identity matrix as the initial quasi-permutation matrix instead. Figure 14 presents two instances of our comparative evaluation of FUGAL-I vs FUGAL. While FUGAL-I closely reaches the accuracy of FUGAL on the inf-euroroad network, it falls short of FUGAL on the HighSchool network, indicating its instability. These findings substantiate our selection of the flat doubly stochastic matrix as a robust choice for initialization. ", "page_idx": 17}, {"type": "image", "img_path": "SdLOs1FR4h/tmp/7db6d064cc56ba329bea2963b78c289ea17d0de299c031d1d3e0477dc48bcd3a.jpg", "img_caption": ["Figure 15: Operational stages of FUGAL. Values less than $1e^{-10}$ are approximated to 0. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "A.9 Illustrative example of FUGAL\u2019s pipeline ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We illustrate the functionality of FUGAL through an example in Figure 15. We create a source graph $\\mathcal{G}1$ of 6 nodes and randomly permute it to a target graph $\\mathcal{G}2$ . We show three stages of FUGAL\u2019s operation: (1) the doubly stochastic matrix $\\mathbf{Q}$ , generated after the first iteration of Algorithm 1 $\\left.\\lambda\\right.=0$ ); (2) the quasi-permutation matrix $\\mathbf{Q}$ to which Algorithm 1 (Section 3) steers the doubly stochastic matrix; (3) the permutation matrix $\\mathbf{P}$ into which Algorithm 2 refines this quasi-permutation matrix using the Hungarian algorithm. FUGAL aligns $\\mathcal{G}1$ and $\\mathcal{G}2$ perfectly. ", "page_idx": 17}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: See Sections 3, 4, 5. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 18}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Justification: See Section 5, 6. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 18}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: See Sections 2, 3, 4,Appendix A.1. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 19}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: See Section 5, Appendix 5.7. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 19}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: See Section 5, Appendix 5.7. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 20}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: See Section 5, Appendix 5.7. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 20}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [No] ", "page_idx": 20}, {"type": "text", "text": "Justification: The error bars are compromising the visual interpretability of the plots due to the large number of baselines compared against. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: See Section 5. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 21}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: [NA] . ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 21}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: See Section 6. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 22}, {"type": "text", "text": "Justification: [NA] . ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 22}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: See Section 5. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 22}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 23}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Link to codebase in Section 5. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 23}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: [NA] . ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 23}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: [NA] . ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 23}]