[{"type": "text", "text": "Delta-CoMe: Training-Free Delta-Compression with Mixed-Precision for Large Language Models ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Bowen $\\mathbf{P\\mathbf{ing}^{1*}}$ Shuo Wang2\u2217Hanqing Wang3 Xu $\\mathbf{Han^{2,4,5}}$ Yuzhuang $\\mathbf{X}\\mathbf{u}^{2}$ Yukun Yan2 Yun Chen3 Baobao Chang1 Zhiyuan Liu2,4,5\u2020 Maosong $\\mathbf{Sun^{2,4,5\\dagger}}$ ", "page_idx": 0}, {"type": "text", "text": "1Peking University 2Dept. of Comp. Sci. & Tech., Tsinghua University, Beijing, China 3Shanghai University of Finance and Economics 4Institute for AI, Tsinghua University, Beijing, China 5Beijing National Research Center for Information Science and Technology ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Fine-tuning is a crucial process for adapting large language models (LLMs) to diverse applications. In certain scenarios, such as multi-tenant serving, deploying multiple LLMs becomes necessary to meet complex demands. Recent studies suggest decomposing a fine-tuned LLM into a base model and corresponding delta weights, which are then compressed using low-rank or low-bit approaches to reduce costs. In this work, we observe that existing low-rank and low-bit compression methods can significantly harm the model performance for taskspecific fine-tuned LLMs (e.g., WizardMath for math problems). Motivated by the long-tail distribution of singular values in the delta weights, we propose a delta quantization approach using mixed-precision. This method employs higher-bit representation for singular vectors corresponding to larger singular values. We evaluate our approach on various fine-tuned LLMs, including math LLMs, code LLMs, chat LLMs, and even VLMs. Experimental results demonstrate that our approach performs comparably to full fine-tuned LLMs, surpassing both low-rank and low-bit baselines by a considerable margin. Additionally, we show that our method is compatible with various backbone LLMs, such as Llama-2, Llama-3, and Mistral, highlighting its generalizability. 3 ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Large language models (LLMs) (Touvron et al., 2023; Jiang et al., 2023) are increasingly becoming the standard for a wide range of downstream tasks (Luo et al., 2023a; Yu et al., 2023; Wei et al., 2023; Luo et al., 2023b; Liu et al., 2024a; Wang et al., 2023), significantly surpassing conventional small models. To meet the demands of various application domains and scenarios, many researchers direct their attention to developing advanced alignment or adaptation algorithms together with diverse training data to learn aligned LLMs based on generally pre-trained models. For instance, Luo et al. (2023a) propose a reinforcement learning from evol-instruct feedback (RLEIF) method to construct LLMs with strong mathematical reasoning abilities. Similarly, Yu et al. (2023) employ a bootstrapping method to diversify mathematical questions and then fine-tune open-source LLMs to build mathematical models. For code generation, Luo et al. (2023b) adapt the evol-instruct method to the coding domain, resulting in the WIZARDCODER model, which demonstrates superior coding abilities compared to generally trained LLMs. Additionally, Wei et al. (2023) enhance the capabilities of open-source code LLMs by using automatically generated high-quality instruction data based on existing code snippets. Wang et al. (2023) utilize various resources of mixed quality and design a new conditioned reinforcement learning fine-tuning method to train the OPENCHAT model. Beyond the text modality, some studies propose fine-tuning pre-trained LLMs to understand other modalities. For instance, Liu et al. (2024a) construct a multi-modal instruction tuning dataset and develop the LLAVA model, which can understand both text and images. ", "page_idx": 0}, {"type": "image", "img_path": "cr5EQRJlRn/tmp/a273ef211bfad0aa6de7b495d756124b92189f4411afa3f975fb2d29fac9fc63.jpg", "img_caption": ["Figure 1: Left: illustration of BitDelta (Liu et al., 2024b), which employs 1-bit quantization for all the delta weights. Middle: illustration of low-rank compression (Ryu et al., 2023b), retaining the top- $k$ singular values and the corresponding singular vectors. Right: illustration of the proposed Delta-CoMe method, which represents the singular vectors of larger singular values using high-bit vectors while compressing the singular vectors of smaller singular values into low-bit representations. This method is inspired by the long-tail distribution of singular values in delta weights. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Building on the aforementioned alignment approaches, LLMs are endowed with specialized capabilities that align with distinct user demands and application requirements (Liu et al., 2024b). In certain scenarios, deploying multiple LLMs with different abilities is necessary. For example, in multi-tenant serving, different LLMs may be needed to satisfy various users. Additionally, some complex tasks consist of multiple sub-tasks, each requiring different model capabilities. To address these tasks, we should organize and deploy a group of LLMs simultaneously. A straightforward question arises: why not use a single general LLM that encompasses all the necessary capabilities? For example, we could develop one model that can both understand images and generate code programs. To our knowledge, LLMs with various capabilities (e.g., GPT- $4^{4}$ ) typically have an enormous number of parameters, making them impractical for resource-limited situations (e.g., edge-side scenarios). ", "page_idx": 1}, {"type": "text", "text": "In pursuit of this objective, a field of research advocates for the minimization of expenses associated with multi-model serving. Delta-compression emerges as a crucial and viable approach in this context, offering the potential to decrease both storage requirements and GPU memory utilization in scenarios involving multiple models. The primary objective of delta-compression is to minimize the size of the delta weights between aligned and pre-trained LLMs (e.g., LLAMA-2-CHAT and LLAMA-2). Ryu et al. (2023b) identify the low-rank nature of delta weights and enhance storage efficiency through low-rank approximation. Alternatively, Liu et al. (2024b) propose a 1-bit quantization approach, termed BitDelta, to further reduce the size of delta weights. They validate the effectiveness of BitDelta across various chat models, including LLAMA-2-CHAT (Touvron et al., 2023), VICUNA5, and WIZARDLM (Xu et al., 2023). In this work, we reassess the performance of both low-rank and low-bit delta-compression methods across a diverse range of aligned LLMs, encompassing mathematical, coding, chat, and multi-modal LLMs. Our experimental results (e.g., Table 3) reveal that current low-rank and low-bit compression techniques may significantly degrade the performance of aligned LLMs. These results motivate us to explore more advanced delta-compression methods capable of achieving performance nearly equivalent to the aligned LLMs before compression. ", "page_idx": 1}, {"type": "text", "text": "Inspired by the long-tail distribution of singular values, as illustrated in Figure 1, we propose allocating higher-bit representations for singular vectors associated with larger singular values, given their greater impact on the approximation of delta weights prior to compression. Conversely, for singular vectors associated with smaller singular values, we employ low-bit formats to reduce the delta size. For singular values that are extremely small, we omit the corresponding singular vectors altogether. The resulting method, which we term Delta-CoMe, can be viewed as a hybrid of lowrank and low-bit compression techniques. Delta-CoMe outperforms both the low-rank compression method and BitDelta. Moreover, our method achieves performance comparable to that of the full aligned LLMs. For instance, Delta-CoMe attains an average score of 53.2 across eight representative tasks, closely matching the average score of 53.5 achieved by the aligned LLMs. In comparison, the scores of the low-rank and low-bit baselines are 47.8 and 49.3, respectively. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Further, we compare the performance of the involved delta-compression methods to LoRA (Hu et al., 2022), a widely-used delta-tuning approach (Wang et al., 2024). The primary distinction between delta-compression and delta-tuning is that delta-compression first optimizes the full model and then converts the modified weights into a lightweight module, reducing inference costs in multi-model settings. In contrast, delta-tuning primarily aims to lower training costs. Our experimental results demonstrate that the proposed Delta-CoMe method significantly outperforms LoRA, with scores of 41.9 versus 29.8, respectively. These results suggest that delta-compression can deliver superior performance in multi-model settings compared to delta-tuning. ", "page_idx": 2}, {"type": "text", "text": "Finally, Delta-CoMe can achieve more than $10\\times$ GPU memory and disk storage savings, enabling the deployment of multiple models with limited resources. For practical application, we implement a Triton (Tillet et al., 2019) kernel tailed for Delta-Come, achieving approximately a $3\\times$ speedup compared to the PyTorch implementation. ", "page_idx": 2}, {"type": "text", "text": "Our contribution can summarized as follows: ", "page_idx": 2}, {"type": "text", "text": "\u2022 We propose a mixed-precision delta-compression method that employs varying bit-widths for different singular vectors based on their singular values;   \n\u2022 We validate the effectiveness of the proposed method across different types of aligned LLMs of varying sizes, including mathematical, coding, chat, and multi-modal LLMs;   \n\u2022 We conduct in-depth analyses to understand the superior performance of our method over low-rank and low-bit baselines. Our method can also outperform delta-tuning approaches such as LoRA, demonstrating that the proposed delta-compression method is more practical for multi-model serving scenarios.   \n\u2022 We verify that the proposed method can achieve over $10\\times$ saving in GPU memory and disk storage. By constructing a Triton kernel, we can achieve approximately a $3\\times$ speedup, demonstrating the hardware compatibility of Delta-CoMe. ", "page_idx": 2}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "2.1 Delta-Compression ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Recently, delta-compression has garnered increasing interest in the LLM community due to its ability to substantially diminish the storage and inference expenses associated with serving multiple models. GPT-Zip extends the GPTQ approach (Frantar et al., 2023) to compress the delta weights between aligned models and the backbone model, successfully using 2-bit delta weights to approximate the model. Additionally, they sparsify the quantized delta weights to further reduce storage costs. However, the sparsification technique can hardly reduce GPU memory usage during inference. Similarly, Yu et al. (2024) find that dropping the majority of the delta weights has a limited effect on the performance of aligned LLMs. Ryu et al. (2023a) identify the low-rank property of delta weights and propose reducing the storage requirements of aligned LLMs through low-rank approximation. Yao & Klimovic (2023) adopt the concept of delta-compression to develop a multi-tenant serving system, DeltaZip. Most recently, Liu et al. (2024b) introduced BitDelta, which successfully quantizes the delta weights into 1-bit. However, they only examined the performance of this compression method using chat LLMs, leaving a wide range of other types of aligned LLMs unexplored. In this work, we propose leveraging the beneftis of both low-rank and low-bit compression methods by using varying bit-widths to represent different components of the delta weights. We evaluate representative low-rank and low-bit delta-compression methods across various types of aligned LLMs to provide a comprehensive comparison of these methods. ", "page_idx": 2}, {"type": "text", "text": "2.2 Model Compression with Mix-Precision ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Using mixed-precision to compress the model weights is an effective technique that has been investigated in many previous studies. SpQR (Dettmers et al., 2023) isolates a small number of outlier weights and retains them with high-precision, while keeping the other weights at low-precision, resulting in a significant performance improvement. Based on activations, Agile-Quant (Shen et al., 2024) utilizes token pruning to achieve mixed-precision quantization of both weights and activations. Bablani et al. (2023) propose employing varying bit-widths for different layers of the model, while Yao et al. (2021) propose quantizing activations and model weights with different precisions. In this work, we propose using mixed-precision compression for different singular vectors of the delta model, marking the first method to introduce mixed-precision compression for delta weights. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3 Approach ", "text_level": 1, "page_idx": 3}, {"type": "image", "img_path": "cr5EQRJlRn/tmp/3bbcc2daca3938cc080436fe81c2941e8a8c36f096bae69b203a4ea1a0d85b0e.jpg", "img_caption": ["Figure 2: Illustration of Delta-CoMe, where we utilize varying bit-widths for singular vectors with different singular values. Singular vectors corresponding to larger singular values are assigned higher bit-widths. For extremely small singular values, we omit the singular vectors (i.e., 0-bit). "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3.1 Preliminaries ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "For a backbone LLM $\\theta_{b}$ , we can customize it into an aligned model $\\theta_{a}$ for a specific purpose using advanced alignment algorithms (Xu et al., 2023; Luo et al., 2023a; Yu et al., 2023; Luo et al., 2023b; Wei et al., 2023; Liu et al., 2024a). In some practical scenarios, as mentioned in Section 1, we may need to deploy multiple LLMs at the same time. Formally, we should store and deploy a series of aligned LLMs $\\left\\{\\pmb{\\theta}_{a}^{(1)},\\cdot\\cdot\\cdot,\\pmb{\\theta}_{a}^{(N)}\\right\\}$ , where $N$ is the number of aligned models. The total size of the group of aligned models is $N\\times M$ , where $M$ is the size of one model. We use $\\Delta$ to represent the delta weights between the aligned model and the backbone model, which is given by ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\Delta^{(n)}=\\pmb{\\theta}_{a}^{(n)}-\\pmb{\\theta}_{b},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where ${\\pmb\\theta}^{(n)}$ is the $n$ -th aligned LLM. Note that the sizes of $\\pmb{\\Delta}^{(n)},\\pmb{\\theta}_{a}^{(n)}$ , and $\\theta_{b}$ are the same. ", "page_idx": 3}, {"type": "text", "text": "Delta-compression aims to compress the delta weights $\\Delta^{(n)}$ into $\\hat{\\Delta}^{(n)}$ , where the latter has significantly fewer parameters. After delta-compression, we can only maintain one backbone model and $N$ compressed delta models: $\\left\\{\\pmb{\\theta}_{b},\\hat{\\Delta}^{(1)},\\cdot\\cdot\\cdot\\mathbf{\\nabla},\\hat{\\Delta}^{(N)}\\right\\}$ . The total size is decreased from $N\\times M$ to $(1+\\alpha N)\\times M$ , where $\\alpha$ is the compression ratio. During inference, we can restore each aligned LLM in the following way: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\hat{\\pmb{\\theta}}_{a}^{(n)}=\\pmb{\\theta}_{b}+\\hat{\\pmb{\\Delta}}^{(n)}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For a good delta-compression method, we expect it can achieve a smaller $\\alpha$ , while making $\\hat{\\pmb{\\theta}}_{a}^{(n)}$ attain comparable performance with $\\pmb{\\theta}_{a}^{(n)}$ . BitDelta (Liu et al., 2024b), to our knowledge, is the most recent study that successfully quantizes delta weights into 1-bit, which means that $\\alpha=1/16$ when the ", "page_idx": 3}, {"type": "text", "text": "original aligned model is represented by FP16 or BF16. In this work, we propose to improve the performance of delta-compression methods by inducing mixed-precision quantization, which will be detailed in the following sub-sections. ", "page_idx": 4}, {"type": "text", "text": "3.2 Delta Decomposition ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Previous works have investigated mixed-precision model compression methods at the token (Shen et al., 2024) or layer level (Bablani et al., 2023). For delta-compression, we propose employing mixed-precision for different singular vectors. We first use the SVD algorithm to decompose each delta matrix: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\Delta\\mathbf{W}=\\mathbf{U}\\pmb{\\Sigma}\\mathbf{V}^{\\top},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\Delta\\mathbf{W}\\in\\mathbb{R}^{h_{\\mathrm{out}}\\times h_{\\mathrm{in}}}$ , $\\mathbf{U}\\in\\mathbb{R}^{h_{\\mathrm{out}}\\times h_{\\mathrm{out}}}$ , $\\Sigma\\in\\mathbb{R}^{h_{\\mathrm{out}}\\times h_{\\mathrm{in}}}$ , $\\mathbf{V}\\in\\mathbb{R}^{h_{\\mathrm{in}}\\times h_{\\mathrm{in}}}$ . Intuitively, the singular vectors associated with larger singular values have a greater impact on the approximation of the delta matrix $\\Delta\\mathbf{W}$ , we thus spend more bits for these vectors to reduce the quantization error. ", "page_idx": 4}, {"type": "text", "text": "3.3 Mixed-Precision Quantization ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Some representative quantization methods, such as GPTQ (Frantar et al., 2023), aims to minimize the following objective: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\hat{\\mathbf{W}}=\\operatorname{Quant}_{k}(\\mathbf{W},\\mathbf{X})=\\underset{\\hat{\\mathbf{W}}}{\\operatorname{argmin}}\\,||\\mathbf{W}\\mathbf{X}-\\hat{\\mathbf{W}}\\mathbf{X}||^{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\mathbf{X}\\in\\mathbb{R}^{h_{\\mathrm{in}}}$ is the input to the parameter $\\mathbf{W}$ and $\\hat{\\bf W}$ is the corresponding quantized parameter. We use $\\mathrm{Quant}_{k}$ to denote the $k$ -bit quantization algorithm. In this work, we employ the widely-used GPTQ method with group_size $=128$ for cases where $k>1$ , and BitDelta for 1-bit quantization. For a certain group of singular vectors, let $r_{\\mathrm{begin}}$ and $r_{\\mathrm{end}}$ represent the start and end indices, respectively. The quantization of the singular vectors can be given by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\hat{\\mathbf{V}}[\\cdot,r_{\\mathrm{begin}}:r_{\\mathrm{end}}]^{\\top}=\\operatorname{Quant}_{k}(\\mathbf{V}[:,r_{\\mathrm{begin}}:r_{\\mathrm{end}}]^{\\top},\\mathbf{X}),}\\\\ &{\\hat{\\mathbf{U}}[:,r_{\\mathrm{begin}}:r_{\\mathrm{end}}]=\\operatorname{\\phantom{\\sum_{k}^{\\top}}}}\\\\ &{\\qquad\\qquad\\mathrm{Quant}_{k}(\\mathbf{U}[:,r_{\\mathrm{begin}}:r_{\\mathrm{end}}],\\Sigma[r_{\\mathrm{begin}}:r_{\\mathrm{end}},r_{\\mathrm{begin}}:r_{\\mathrm{end}}]\\hat{\\mathbf{V}}[:,r_{\\mathrm{begin}}:r_{\\mathrm{end}}]^{\\top}\\mathbf{X}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As illustrated in Figure 2, we use varying quantization bits for different groups of singular vectors. By employing different mixed-precision strategies, we can control the trade-off between achieving a small delta size and maintaining high performance. We will provide more details about the exploration of the mixing strategy in Section 5.1. ", "page_idx": 4}, {"type": "text", "text": "4 Experimental Setup ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "To thoroughly investigate the proposed delta-compression method Delta-CoMe and the involved baselines, we examine the performance of different methods across several tasks, which are typical applications of recent aligned LLMs. ", "page_idx": 4}, {"type": "text", "text": "4.1 Tasks ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Mathematical Problem Solving Solving mathematical problems is a challenging task for modern LLMs. For this task, we employ GSM8K (Cobbe et al., 2021) and MATH (Hendrycks et al., 2021) as the evaluation datasets, which are among the most popular mathematical benchmarks for LLMs. The reported score is accuracy, which is estimated by comparing the ground-truth number with the result calculated by the model. ", "page_idx": 4}, {"type": "text", "text": "Code Generation The ability to process code is crucial for numerous practical applications, including data analysis and LLM-based agents. For this task, we use HumanEval (Chen et al., 2021) and MBPP (Austin et al., 2021) as the evaluation datasets, which are widely used in recent studies. The reported score is the pass rate, indicating that the model-generated code can successfully run the test cases in one pass (i.e., pass $@$ 1). ", "page_idx": 4}, {"type": "text", "text": "Chat The chat ability enables LLMs to interact with users, providing helpful and safe suggestions or responses based on the user\u2019s requests. A good chat model is expected to be well aligned with human preferences. For evaluating chat LLMs, we select TruthfulQA (Lin et al., 2022) and SafetyBench (Zhang et al., 2023) as the evaluation datasets, which measure helpfulness and safety, respectively. The reported score is the accuracy, indicating that the choice of the model is correct. ", "page_idx": 5}, {"type": "text", "text": "Multi-Modal Chat Vision-language models (VLMs) are attracting increasing attention due to their ability to process both text and images. Most recent VLMs are based on pre-trained visual encoders and language models, with the language models fine-tuned to understand the visual signal. For this task, we use GQA (Hudson & Manning, 2019) and TextVQA (Singh et al., 2019). The reported score is the accuracy, indicating that the choice of the model is correct. ", "page_idx": 5}, {"type": "text", "text": "4.2 Models ", "text_level": 1, "page_idx": 5}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/8b8aecd7a4c44fed330e65974d23c60b03714ecb6635bf84584748e00e93d37d.jpg", "table_caption": ["Table 1: Selected backbone and aligned models for the examined four tasks. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "For the four tasks, we provide the backbone and aligned models in Table 1. All the model weights are open-sourced by the authors. We use both 7B and 13B models to make a thorough comparison between different delta-compression models. During inference, we use greedy search. ", "page_idx": 5}, {"type": "text", "text": "4.3 Baselines ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We employ two representative baselines, including SVD-based low-rank compression and BitDelta (Liu et al., 2024b). For the low-rank baseline, we re-implement the method, while for BitDelta, we use the code open-sourced by the authors.6 All methods are evaluated on NVIDIA A100 GPUs. ", "page_idx": 5}, {"type": "text", "text": "5 Experimental Results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "5.1 Exploration of Mixed-Precision Strategies ", "text_level": 1, "page_idx": 5}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/a89806d79f1ea756a5ad1c649107587ea83fcf2ab7d01addd20e08e4cc10dc75.jpg", "table_caption": ["Table 2: Comparison of different mixedprecision strategies. "], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "To determine which bit-width to use and how many singular vectors to quantize, we conduct a preliminary experiment using different mixed-precision strategies. We examine three types of strategies: single-precision, double-precision, and triple-precision settings. The size of the compressed delta remains consistent across all settings. For single-precision compression, we set $r_{\\mathrm{begin}}$ to 0, and $r_{\\mathrm{end}}$ is set to guarantee that the delta size is the same as BitDelta (Liu et al., 2024b). In other words, the compression ratio $\\alpha$ for all settings is 1/16. Formally, for a delta matrix $\\Delta\\mathbf{W}\\in\\mathbb{R}^{h_{\\mathrm{out}}\\times h_{\\mathrm{in}}}$ , $r_{\\mathrm{begin}}$ and $r_{\\mathrm{end}}$ are set to satisfy the following equation: ", "page_idx": 5}, {"type": "equation", "text": "$$\nk\\times(r_{\\mathrm{end}}-r_{\\mathrm{begin}})(h_{\\mathrm{out}}+h_{\\mathrm{in}})=16\\times\\alpha h_{\\mathrm{out}}h_{\\mathrm{in}},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\alpha$ is set to 1/16 in our experiments, which is the same as BitDelta. In double-precision settings, $r_{\\mathrm{begin}}$ and $r_{\\mathrm{end}}$ are set to 0 and 2, respectively, for the first precision. For the second precision, $r_{\\mathrm{begin}}$ is set to 2, and $r_{\\mathrm{end}}$ is adjusted so that the total delta size is 1/16 of the uncompressed delta. In triple-precision settings, $r_{\\mathrm{begin}}$ and $r_{\\mathrm{end}}$ are set to 0 and 2, respectively, for the first precision. rbegin and $r_{\\mathrm{end}}$ are set to 2 and 34, respectively, for the second precision. For the third precision, $r_{\\mathrm{begin}}$ is set to 34, and $r_{\\mathrm{end}}$ is adjusted so that the total delta size is 1/16 of the uncompressed delta. Since the diagonal matrix $\\Sigma$ occupies little storage, the averaged bit-width for triple-precision compression is approximately ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\n\\frac{h_{\\mathrm{out}}+h_{\\mathrm{in}}}{h_{\\mathrm{out}}h_{\\mathrm{in}}}\\sum_{i=1}^{3}k^{(i)}(r_{\\mathrm{end}}^{(i)}-r_{\\mathrm{begin}}^{(i)}).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "We conduct experiments on the math task, and the results are shown in Table 2. We find that the 3-bit setting performs best among the single-precision settings. Therefore, we keep the 3-bit setting and add other bit-widths to form double-precision settings. Among the double-precision settings, $\"8+3\"$ achieves the highest score, which is then combined with an additional bit-width to form triple-precision settings. We find that the best double-precision setting can outperform the best single-precision setting, and the best triple-precision setting achieves the highest score across all the examined settings. We use $^{\\bullet\\bullet}8\\!+\\!3\\!+\\!2^{\\circ}$ as the default setting in the following experiments. ", "page_idx": 6}, {"type": "text", "text": "5.2 Main Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Tables 3 and 4 show the performance of different delta-compression methods on 7B and 13B models, respectively. Across all tasks, Delta-CoMe outperforms both baselines. While BitDelta (Liu et al., 2024b) can achieve near lossless performance on chat models, it significantly degrades the performance of math and code LLMs, a phenomenon not investigated by Liu et al. (2024b). Surprisingly, our method achieves good performance in the delta-compression of VLMs. To our knowledge, we are the first to investigate delta-compression for VLMs. ", "page_idx": 6}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/90499324c60169c4297a35a3bce92a2eb6fde94256776e36baee2877dc8263c2.jpg", "table_caption": ["Table 3: The performance of different delta-compression methods on 7B aligned models. "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/c6181758a89d03a87677a5ea5cf9b966cc3c19ce0a02e3cb477e0480a8d1f747.jpg", "table_caption": ["Table 4: The performance of different delta-compression methods on 13B aligned models. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "5.3 Results on More Backbone Models ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "To investigate the generalization abilities of the delta-compression methods, we conduct experiments on aligned models based on other representative backbone LLMs. For additional backbones, we utilize MISTRAL-7B-V0.1 (Jiang et al., 2023) and LLAMA- $3{\\bf-}8{\\bf B}^{7}$ . The corresponding aligned ", "page_idx": 6}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/f94b55ced791c1094621c8fd50f0b03dd0e6d8f00ac0aacfc9f781f29ab86396.jpg", "table_caption": ["Table 5: Results on other representative backbones. The backbone of OPENCHAT-3.5-0106 (Wang et al., 2023) is MISTRAL-7B-V0.1 (Jiang et al., 2023). Both MISTRAL-7B-V0.1 and LLAMA-3-8B are widely-used open-source LLMs. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "models are OPENCHAT-3.5-0106 (Wang et al., 2023) and LLAMA-3-8B-INSTRUCT, respectively. As shown in Table 5, our proposed Delta-CoMe method maintains superior performance over the two baselines, demonstrating its generalization ability. ", "page_idx": 7}, {"type": "text", "text": "5.4 Delta-Compression vs. Delta-Tuning ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "A closely related area to delta-compression is delta-tuning. While delta-tuning primarily aims to reduce the training cost of LLMs, delta-compression focuses on reducing the storage and inference cost for multi-model serving. It remains unclear whether delta-compression outperforms delta-tuning when using the same delta size. To investigate this, we trained LoRA (Hu et al., 2022) modules for all model parameters to compare delta-compression with delta-tuning. We set the LoRA rank to 128 and the scale factor to 16, using a cosine warmup schedule with a warmup ratio of 0.04 and a peak learning rate of 1e-4. For each task, we trained the LoRA for 3 epochs. For mathematical LoRA, the training dataset is from Yu et al. (2023), which consists of 395K training examples. For code LoRA, the training set is from Wei et al. (2023), which contains 186K training examples. For a fair comparison, we fine-tune all model parameters using the same dataset as used for LoRA training. We then apply different delta-compression methods to both the fine-tuned mathematical and code LLMs. ", "page_idx": 7}, {"type": "text", "text": "Table 6 shows the results of both delta-tuning and delta-compression methods. The results reveal that LoRA achieves superior performance compared to the low-rank compression approach and BitDelta in the mathematical task. However, when it comes to the coding task, LoRA exhibits lower performance than both low-rank compression and BitDelta. By contrast, our proposed delta-compression method (i.e., Delta-CoMe) consistently outperforms LoRA across all four bench", "page_idx": 7}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/e42f1fedf6cca5f4eed8d3e8fb763b73886b49919440c1c84619f17fba9cdeac.jpg", "table_caption": ["Table 6: Comparison between LoRA and delta-compression methods. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "marks. Specifically, the performance of our method is close to that of the uncompressed aligned models (41.9 vs. 43.0), while the average score of LoRA is only 29.8. These results imply that learning an aligned model and then compressing it can achieve better results than delta-tuning. ", "page_idx": 7}, {"type": "text", "text": "5.5 Inference Speed and Memory Cost ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "For practical applications, we also examine the inference speed and memory cost of Delta-CoMe. In terms of inference speed, we implement a Triton kernel. Figure 3 shows the inference time of the PyTorch and Triton implementation of Delta-CoMe. Overall, we can achieve approximately a $3\\times$ speedup across different settings. As Figure 3a shows, we first conduct an ablation experiment on varying batch sizes. Our implemented Triton kernel is consistently faster than the PyTorch implementation with different batch size settings. As Figure 3b depicts, we conduct an ablation experiment on hidden size to verify the adaptability of the Triton kernel to models of different sizes. ", "page_idx": 7}, {"type": "text", "text": "The Triton kernel can maintain a substantial speedup across different hidden sizes, demonstrating its ability to adapt to various models. ", "page_idx": 8}, {"type": "image", "img_path": "cr5EQRJlRn/tmp/6ae042c264bd514153b7cccb1d39d885ab0e536a668f6377026ac605e2c9b33f.jpg", "img_caption": ["Figure 3: Inference time of the PyTorch and Triton implementation of Delta-CoMe. "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "In Table 7, we show the GPU memory cost of deploying multiple aligned models that are fine-tuned from LLAMA2-7B. The model parameters are represented in BF16 on a single 80G GPU. Without delta compression, a single GPU can not support 8 models, let alone more models. Using our proposed delta-compression method, we can load up to 50 models into one GPU, significantly reducing the deployment cost. ", "page_idx": 8}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/b4d340e4d46aed7c27ee97777192c8eafa8fb58841c9599dc6d76adf3ba407ad.jpg", "table_caption": ["Table 7: GPU memory cost (GB). "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "6 Analysis ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "6.1 Analysis of Quantization Error ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "To better understand the performance of various delta-compression methods, we estimate the quantization error as defined in Eq. (4). It is important to note that the error we calculate differs from that of GPTQ. Specifically, we use the mean square error between the activations of the uncompressed aligned model and those of the combination of the backbone model and the compressed delta model. The error is estimated on the GSM8K test set using WIZARDMATH-7B-V1.0 as the aligned model and LLAMA-2-7B as the backbone model. Since different layers have varying impacts on the final output (Wu et al., 2023), we distinguish low-, medium-, and high-layers when estimating the average quantization error. Specifically, the first 11 layers are designated as low-layers, the 12th to 22nd layers as medium-layers, and the last 10 layers as high-layers. Moreover, as outliers play a critical role in model compression (Dettmers et al., 2023; Lin et al., 2023), we also calculate the average error on outlier parameters. For each delta matrix $\\Delta\\mathbf{W}$ , we select the top $1\\%$ of columns with the largest absolute values as outliers. Table 8 presents the results. We find that the average error of our methods (i.e., \"Single\" and \"Triple\") is substantially lower than both the low-rank baseline and BitDelta. Furthermore, the error of \"Triple\" is consistently less than that of \"Single,\" reaffirming the necessity of mixed-precision compression for delta weights. ", "page_idx": 8}, {"type": "text", "text": "6.2 Case Study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We also present a detailed case study in Figure 4. Three delta-compression methods are examined: BitDelta, single-precision compression, and triple-precision compression. The reference answer is \"104 hours\". We observe that BitDelta makes mistakes initially, while single-precision compression generates an incorrect intermediate result at the second reasoning step. In contrast, our mixedprecision delta-compression method calculates the correct final answer. ", "page_idx": 8}, {"type": "text", "text": "Table 8: Approximation errors $(\\times10^{-2})$ at the activation level for different model parameters. \u201cLow\u201d, \u201cMedium\u201d, \u201cHigh\u201d represent low-, medium-, and high-layers, respectively. \u201cAll\u201d means the error averaged across all the parameters, while \u201cOut.\u201d denotes the average error estimated only on outliers. ", "page_idx": 9}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/802ef70e15fc7e4c211ea9ca111cc23186614cdc94e08fc9a9ef733ca4c14774.jpg", "table_caption": [], "table_footnote": [], "page_idx": 9}, {"type": "image", "img_path": "cr5EQRJlRn/tmp/c291bfabbf847acc076787e667471ebe4f1e2fc26abe188f19a1f723c5ed81f9.jpg", "img_caption": ["Figure 4: Case study for different delta-compression methods, where only the triple-precision compression method proposed in this work can give the correct answer. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose Delta-CoMe, a delta-compression method with mixed-precision inspired by the long-tail distribution of singular values in the delta weights. Delta-CoMe achieves near-lossless performance compared to uncompressed aligned models across various typical tasks, including math, code, chat, and multi-modal tasks. We validate the effectiveness of Delta-CoMe on several widelyused aligned LLMs, whose backbone pre-trained models include Llama-2, Llama-3, and Mistral. Experimental results demonstrate that Delta-CoMe outperforms several representative baselines by a considerable margin. We believe the newly introduced Delta-CoMe method has significant value for many practical applications, such as multi-tenant serving. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This work is supported by the National Key R&D Program of China (No.2022ZD0116312), National Natural Science Foundation of China (No. 62236004, No. 62236011), and Institute Guo Qiang at Tsinghua University. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "Austin, J., Odena, A., Nye, M., Bosma, M., Michalewski, H., Dohan, D., Jiang, E., Cai, C., Terry, M., Le, Q., et al. Program synthesis with large language models. arXiv preprint arXiv:2108.07732, 2021. ", "page_idx": 10}, {"type": "text", "text": "Bablani, D., Mckinstry, J. L., Esser, S. K., Appuswamy, R., and Modha, D. S. Efficient and effective methods for mixed precision neural network quantization for faster, energy-efficient inference. arXiv preprint arXiv:2301.13330, 2023.   \nChen, M., Tworek, J., Jun, H., Yuan, Q., de Oliveira Pinto, H. P., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., Ray, A., Puri, R., Krueger, G., Petrov, M., Khlaaf, H., Sastry, G., Mishkin, P., Chan, B., Gray, S., Ryder, N., Pavlov, M., Power, A., Kaiser, L., Bavarian, M., Winter, C., Tillet, P., Such, F. P., Cummings, D., Plappert, M., Chantzis, F., Barnes, E., Herbert-Voss, A., Guss, W. H., Nichol, A., Paino, A., Tezak, N., Tang, J., Babuschkin, I., Balaji, S., Jain, S., Saunders, W., Hesse, C., Carr, A. N., Leike, J., Achiam, J., Misra, V., Morikawa, E., Radford, A., Knight, M., Brundage, M., Murati, M., Mayer, K., Welinder, P., McGrew, B., Amodei, D., McCandlish, S., Sutskever, I., and Zaremba, W. Evaluating large language models trained on code, 2021.   \nCobbe, K., Kosaraju, V., Bavarian, M., Chen, M., Jun, H., Kaiser, L., Plappert, M., Tworek, J., Hilton, J., Nakano, R., et al. Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021.   \nDettmers, T., Svirschevski, R. A., Egiazarian, V., Kuznedelev, D., Frantar, E., Ashkboos, S., Borzunov, A., Hoefler, T., and Alistarh, D. Spqr: A sparse-quantized representation for near-lossless llm weight compression. In The Twelfth International Conference on Learning Representations, 2023.   \nFrantar, E., Ashkboos, S., Hoefler, T., and Alistarh, D. OPTQ: Accurate quantization for generative pre-trained transformers. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id=tcbBPnfwxS.   \nGuo, H., Brandon, W., Cholakov, R., Ragan-Kelley, J., Xing, E. P., and Kim, Y. Fast matrix multiplications for lookup table-quantized llms, 2024. URL https://arxiv.org/abs/2407. 10960.   \nHendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset. NeurIPS, 2021.   \nHu, E. J., yelong shen, Wallis, P., Allen-Zhu, Z., Li, Y., Wang, S., Wang, L., and Chen, W. LoRA: Low-rank adaptation of large language models. In International Conference on Learning Representations, 2022. URL https://openreview.net/forum?id $\\cdot$ nZeVKeeFYf9.   \nHudson, D. A. and Manning, C. D. Gqa: A new dataset for real-world visual reasoning and compositional question answering. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pp. 6700\u20136709, 2019.   \nJiang, A. Q., Sablayrolles, A., Mensch, A., Bamford, C., Chaplot, D. S., Casas, D. d. l., Bressand, F., Lengyel, G., Lample, G., Saulnier, L., et al. Mistral 7b. arXiv preprint arXiv:2310.06825, 2023.   \nLin, J., Tang, J., Tang, H., Yang, S., Dang, X., and Han, S. Awq: Activation-aware weight quantization for llm compression and acceleration. arXiv preprint arXiv:2306.00978, 2023.   \nLin, S., Hilton, J., and Evans, O. Truthfulqa: Measuring how models mimic human falsehoods. In Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pp. 3214\u20133252, 2022.   \nLiu, H., Li, C., Wu, Q., and Lee, Y. J. Visual instruction tuning. Advances in neural information processing systems, 36, 2024a.   \nLiu, J., Xiao, G., Li, K., Lee, J. D., Han, S., Dao, T., and Cai, T. Bitdelta: Your fine-tune may only be worth one bit. arXiv preprint arXiv:2402.10193, 2024b.   \nLuo, H., Sun, Q., Xu, C., Zhao, P., Lou, J., Tao, C., Geng, X., Lin, Q., Chen, S., and Zhang, D. Wizardmath: Empowering mathematical reasoning for large language models via reinforced evol-instruct. arXiv preprint arXiv:2308.09583, 2023a.   \nLuo, Z., Xu, C., Zhao, P., Sun, Q., Geng, X., Hu, W., Tao, C., Ma, J., Lin, Q., and Jiang, D. Wizardcoder: Empowering code large language models with evol-instruct. arXiv preprint arXiv:2306.08568, 2023b.   \nRyu, S., Seo, S., and Yoo, J. Efficient storage of fine-tuned models via low-rank approximation of weight residuals. arXiv preprint arXiv:2305.18425, 2023a.   \nRyu, S., Seo, S., and Yoo, J. Efficient storage of fine-tuned models via low-rank approximation of weight residuals. arXiv preprint arXiv:2305.18425, 2023b.   \nShen, X., Dong, P., Lu, L., Kong, Z., Li, Z., Lin, M., Wu, C., and Wang, Y. Agile-quant: Activationguided quantization for faster inference of llms on the edge. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pp. 18944\u201318951, 2024.   \nSingh, A., Natarajan, V., Shah, M., Jiang, Y., Chen, X., Batra, D., Parikh, D., and Rohrbach, M. Towards vqa models that can read. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pp. 8317\u20138326, 2019.   \nTillet, P., Kung, H.-T., and Cox, D. Triton: an intermediate language and compiler for tiled neural network computations. In Proceedings of the 3rd ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, pp. 10\u201319, 2019.   \nTouvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S., et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023.   \nWang, G., Cheng, S., Zhan, X., Li, X., Song, S., and Liu, Y. Openchat: Advancing open-source language models with mixed-quality data. In The Twelfth International Conference on Learning Representations, 2023.   \nWang, H., Ping, B., Wang, S., Han, X., Chen, Y., Liu, Z., and Sun, M. LoRA-flow: Dynamic LoRA fusion for large language models in generative tasks. In Ku, L.-W., Martins, A., and Srikumar, V. (eds.), Proceedings of the 62nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pp. 12871\u201312882, Bangkok, Thailand, August 2024. Association for Computational Linguistics. doi: 10.18653/v1/2024.acl-long.695. URL https://aclanthology. org/2024.acl-long.695.   \nWei, J., Cao, S., Cao, T., Ma, L., Wang, L., Zhang, Y., and Yang, M. T-mac: Cpu renaissance via table lookup for low-bit llm deployment on edge, 2024. URL https://arxiv.org/abs/2407.00088.   \nWei, Y., Wang, Z., Liu, J., Ding, Y., and Zhang, L. Magicoder: Source code is all you need. arXiv preprint arXiv:2312.02120, 2023.   \nWu, X., Huang, S., and Wei, F. Mole: Mixture of lora experts. In The Twelfth International Conference on Learning Representations, 2023.   \nXu, C., Sun, Q., Zheng, K., Geng, X., Zhao, P., Feng, J., Tao, C., and Jiang, D. Wizardlm: Empowering large language models to follow complex instructions, 2023.   \nYao, X. and Klimovic, A. Deltazip: Multi-tenant language model serving via delta compression. arXiv preprint arXiv:2312.05215, 2023.   \nYao, Z., Dong, Z., Zheng, Z., Gholami, A., Yu, J., Tan, E., Wang, L., Huang, Q., Wang, Y., Mahoney, M., et al. Hawq-v3: Dyadic neural network quantization. In International Conference on Machine Learning, pp. 11875\u201311886. PMLR, 2021.   \nYu, L., Jiang, W., Shi, H., Jincheng, Y., Liu, Z., Zhang, Y., Kwok, J., Li, Z., Weller, A., and Liu, W. Metamath: Bootstrap your own mathematical questions for large language models. In The Twelfth International Conference on Learning Representations, 2023.   \nYu, L., Yu, B., Yu, H., Huang, F., and Li, Y. Language models are super mario: Absorbing abilities from homologous models as a free lunch. In International Conference on Machine Learning. PMLR, 2024.   \nZhang, Z., Lei, L., Wu, L., Sun, R., Huang, Y., Long, C., Liu, X., Lei, X., Tang, J., and Huang, M. Safetybench: Evaluating the safety of large language models with multiple choice questions. arXiv preprint arXiv:2309.07045, 2023. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Limitation and Broader Impact ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "For limitations, on the one hand, we carried out extensive experiments to verify Delta-CoMe is near lossless in delta compression. However, we haven\u2019t explored mixed-precision in model compression. Recently, mixed-precision is applied widely in model compression and Delta-CoMe can provide a new perspective for model compression. On the other hand, our kernel is trivial, Wei et al. (2024) and Guo et al. (2024) have implemented more advanced kernels. We can draw on their methods to achieve higher acceleration ratios. ", "page_idx": 13}, {"type": "text", "text": "For broader impacts, this paper presents Delta-CoMe that mainly focuses on compression which can not only boost efficiency but also save GPU memory, may bring benefits to society. ", "page_idx": 13}, {"type": "text", "text": "B Genetic Search for Bits Settings ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In Section 5.2, we have elaborated on the setting of different bits. All our models employ the same configuration and have demonstrated near loss-less performance, which illustrates robustness. ", "page_idx": 13}, {"type": "text", "text": "Allocating different numbers to different bits (e.g. 16-bit, 8-bit) is a multi-objective optimization problem. We implemented a genetic algorithm to achieve a more fine-grained search. We use the following objective function, ", "page_idx": 13}, {"type": "equation", "text": "$$\nf=\\mathrm{min}\\,\\mathrm{PPL}(x_{1},x_{2},x_{3},x_{4},x_{5})\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $x_{1},x_{2},x_{3},x_{4},x_{5}$ indicating the number of 16-bit, 8-bit, 4-bit, 3-bit, 2-bit and $\\mathrm{{PPL}(.)}$ means we calculate perplexity using samples randomly chosen form C4 dataset. Table 9 illustrates the results, particularly in code tasks, where genetic search shows a significant improvement compared to greedy search. The average performance of genetic search across all tasks even surpasses that of the original half-precision models. However, the time and storage overhead of genetic search is much greater than that of greedy search. ", "page_idx": 13}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/956076234719d21ed9d76340bbfb0c2d3f40ecd86b146aa56d6bb0dfe3d82c9d.jpg", "table_caption": ["Table 9: The performance of different bits allocate methods on 7B aligned models. \u201cGreedy search\u201d represents the method in Section 5.1. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "C Delta-CoMe Combine with Low-bit Backbone ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Quantization methods (e.g., GPTQ, AWQ) have been widely used for quantizing backbones. It is of great significance for us to verify whether Delta-CoMe can still maintain good performance in low-bit backbone scenarios. ", "page_idx": 13}, {"type": "text", "text": "We evaluated the performance of Delta-CoMe using various backbones across multiple tasks in Table 10. We utilized GSM8K for math tasks, MBPP for code, TruthfulQA for chat, and TextVQA for multi-modal tasks. Table 10 has demonstrated that even when backbones are in low precision, Delta-CoMe can achieve performance similar to the original, indicating that Delta-CoMe can be further applied to backbones of various precision levels. ", "page_idx": 13}, {"type": "text", "text": "D Exploring the boundary of Delta-CoMe ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We have shown that Delta-CoMe can maintain near lossless performance under a $16\\times$ compression ratio. In the following, we attempt to explore the compression limits of Delta-CoMe. We employ ", "page_idx": 13}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/b247f54adf4c63d984f44999a7457a04d20c49a019e47777fc1a093bdad780d1.jpg", "table_caption": ["Table 10: Performance drop in 4-bit and 16-bit backbone across different tasks. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "WizardMath-7B in GSM8K task to carry out our experiments which is shown in 11. For all the experiments, the rank share the same setting. ", "page_idx": 14}, {"type": "text", "text": "When the compression ratio is within $20\\times$ , Delta-CoMe still performs well. However, at a compression ratio of $32\\times$ , there is a noticeable decline in performance, but it still outperforms low-rank and low-bit methods, which only achieve a $16\\times$ compression ratio. ", "page_idx": 14}, {"type": "table", "img_path": "cr5EQRJlRn/tmp/5d8f36c9da436c60b38c8f396462a37b8fa70f5466fdad7b79fb2c57a091189e.jpg", "table_caption": ["Table 11: Performance under different compression ratios for WizardMath-7B "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: In the abstract and introduction, we mention that singular values follow a long-tailed distribution. Based on this observation, we propose mixed-precision quantization, assigning more bits to singular vectors corresponding to larger singular values, and provide experimental results. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: We have elaborated on the limitations in the \"Limitation and Broader Impact\" section. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 16}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 16}, {"type": "text", "text": "Justification: There are no theoretical results in this paper. Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: We provided details of the key parameters used in the experiments, set a random seed, and used greedy decoding to facilitate the reproducibility of our experiments. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 16}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 17}, {"type": "text", "text": "Answer: [No] ", "page_idx": 17}, {"type": "text", "text": "Justification: We will open-source all resources once the paper is de-anonymized. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: In the experiment section of our paper, we provide a setup subsection that details our experimental settings. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [No] ", "page_idx": 17}, {"type": "text", "text": "Justification: The proposed delta-compression method does not rely on any randomness.   \nRepeatedly run the proposed algorithm can always yield the same compressed delta weights.   \nWe thus did not conduct statistical significance tests in our experiments. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 17}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: As reported in this paper, we use NVIDIA A100 GPUs. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Justification: We have thoroughly reviewed the guidelines and ensure that we follow them clearly. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 18}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Delta-CoMe can efficiently compress and deploy multiple models on a single GPU, saving the original computational cost and reducing carbon emissions. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 18}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: In this paper, our main contribution is proposing a novel compression algorithm.   \nWe have not released any potentially harmful models or data. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: We can ensure that we have cited correctly. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: this paper does not release any new datasets or models. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: In this paper, we did not conduct crowdsourcing experiments nor involve human subjects because our research does not require them. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer:[NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}]