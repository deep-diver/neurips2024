[{"figure_path": "WOBhJs9gqU/figures/figures_1_1.jpg", "caption": "Figure 1: Paradigm Shift: Given two frames of flow particles Xt and Xt+\u25b3t, DeepPTV [50] adopts a two-stage network for large- and small-scale motion refinement. GotFlow3D [53] trains a correspondence learning network and an RNN-based residual prediction network. They are trained in a fully supervised manner with annotated data and do not support test-time optimization. Our purely self-supervised method diverges from these approaches and employs DVE (see Sec. 3.3) for on-the-fly test-time optimization. The \"Snowflake\" denotes frozen weights.", "description": "This figure compares three different approaches for dual-frame fluid motion estimation: DeepPTV, GotFlow3D, and the proposed method.  It highlights the shift from supervised, iterative methods (DeepPTV) to supervised methods using correspondence and residual learning (GotFlow3D) and finally to a self-supervised method leveraging a Dynamic Velocimetry Enhancer (DVE) for test-time optimization. The self-supervised nature allows for superior performance with less training data. The snowflake icon represents frozen weights during test time.", "section": "1 Introduction"}, {"figure_path": "WOBhJs9gqU/figures/figures_3_1.jpg", "caption": "Figure 2: Paradigm Shift: Given two frames of flow particles Xt and Xt+\u25b3t, DeepPTV [50] adopts a two-stage network for large- and small-scale motion refinement. GotFlow3D [53] trains a correspondence learning network and an RNN-based residual prediction network. They are trained in a fully supervised manner with annotated data and do not support test-time optimization. Our purely self-supervised method diverges from these approaches and employs DVE (see Sec. 3.3) for on-the-fly test-time optimization. The \"Snowflake\" denotes frozen weights.", "description": "This figure compares three different approaches for dual-frame fluid motion estimation: DeepPTV, GotFlow3D, and the proposed method.  DeepPTV and GotFlow3D are supervised methods using labeled data for training. The proposed method is self-supervised and leverages a Dynamic Velocimetry Enhancer (DVE) module for test-time optimization, allowing it to adapt to unseen data during testing. The figure highlights the key differences in architecture and training paradigms between these methods.", "section": "1 Introduction"}, {"figure_path": "WOBhJs9gqU/figures/figures_4_1.jpg", "caption": "Figure 3: LEFT: A visualization of fluid flow in Fluidflow3D data. RIGHT: The divergence loss in our training phase is obtained by splatting the original sparse flow to grid points and then minimizing the divergence loss on the resulting grid points.", "description": "The figure visualizes the process of calculating the zero-divergence loss used in the training phase.  The left panel shows a sample of the FluidFlow3D dataset, illustrating the complex, non-uniform nature of turbulent fluid flows. The right panel details the splatting-based method for computing the divergence loss.  The sparse flow field (from the initial flow estimate) is \"splatted\" or interpolated onto a regular 3D grid. This process enables the calculation of the divergence at each grid point, allowing for efficient minimization of the zero-divergence loss that is critical to representing the incompressible nature of fluids.", "section": "3.2.4.3 Zero-divergence Loss"}, {"figure_path": "WOBhJs9gqU/figures/figures_7_1.jpg", "caption": "Figure 1: Paradigm Shift: Given two frames of flow particles Xt and Xt+\u25b3t, DeepPTV [50] adopts a two-stage network for large- and small-scale motion refinement. GotFlow3D [53] trains a correspondence learning network and an RNN-based residual prediction network. They are trained in a fully supervised manner with annotated data and do not support test-time optimization. Our purely self-supervised method diverges from these approaches and employs DVE (see Sec. 3.3) for on-the-fly test-time optimization. The \"Snowflake\" denotes frozen weights.", "description": "This figure illustrates the difference between existing supervised dual-frame fluid motion estimation methods (DeepPTV and GotFlow3D) and the proposed self-supervised method.  It highlights the key difference being the use of test-time optimization in the proposed method to improve accuracy and robustness, while also showing the reduction in the required training data.", "section": "1 Introduction"}, {"figure_path": "WOBhJs9gqU/figures/figures_8_1.jpg", "caption": "Figure 4: (Top) Benchmarking Against Fully Supervised Methods.  Ptrain signifies the count of trainable parameters. Ttest stands for inference time for each sample. The best results are marked in bold. (Bottom) Performance Across Flow Cases. The best results are marked in bold, with the runners-up underlined. The subplots on the right visualize these three cases. The warmer color indicates a higher flow speed. All models are trained on full data, except Ours (1%).", "description": "This figure compares the proposed self-supervised method against fully supervised state-of-the-art methods on the FluidFlow3D dataset. The top part shows a comparison of the trainable parameters count, inference time per sample, and various performance metrics. The bottom part presents the performance across six different flow cases, with visualizations provided for three representative cases.", "section": "4.1 Comparison with state-of-the-art methods"}, {"figure_path": "WOBhJs9gqU/figures/figures_8_2.jpg", "caption": "Figure 6: (a) DeformationFlow data. (b) Initial estimation by our method. (c) Time-consumption comparison between SerialTrack and Ours+ST. \"PerIt\" denotes time per PTV iteration.", "description": "This figure shows three subplots that illustrate different aspects of the proposed method's performance, especially in the context of real-world data. Subplot (a) displays the DeformationFlow dataset, highlighting the unique characteristics of real-world fluid flow data. Subplot (b) presents the initial flow estimation results produced by the proposed method, demonstrating its ability to estimate fluid motion from unstructured data. Lastly, subplot (c) provides a detailed comparison of the time consumption between the proposed method and the SerialTrack method, across various iterations, showing the efficiency gains achieved by incorporating the proposed method's initial estimation into the workflow.", "section": "4.3 Analysis of Robustness Across Different Domains"}, {"figure_path": "WOBhJs9gqU/figures/figures_21_1.jpg", "caption": "Figure 4: (Top) Benchmarking Against Fully Supervised Methods.  Ptrain signifies the count of trainable parameters. Ttest stands for inference time for each sample. The best results are marked in bold. (Bottom) Performance Across Flow Cases. The best results are marked in bold, with the runners-up underlined. The subplots on the right visualize these three cases. The warmer color indicates a higher flow speed. All models are trained on full data, except Ours (1%).", "description": "This figure presents a comparison of the proposed self-supervised method against several fully supervised state-of-the-art methods for dual-frame fluid motion estimation. The top part shows a quantitative comparison in terms of trainable parameters, inference time, End Point Error (EPE), accuracy (strict and relaxed), and outlier rates.  The bottom part shows the performance across six different flow cases from the FluidFlow3D dataset, highlighting the superior performance of the proposed method, particularly in complex flow scenarios.", "section": "4.1 Comparison with state-of-the-art methods"}, {"figure_path": "WOBhJs9gqU/figures/figures_22_1.jpg", "caption": "Figure 8: Visualization of Our Results on AVIC. (a) Enhanced Fm-track using our method illustrates cellular deformation pre and post-treatment with Cytochalasin-D. (b) Display of flow field profiles across the x, y, and z axes.", "description": "This figure visualizes the results of the proposed method on the Aortic Valve Interstitial Cell (AVIC) dataset.  Panel (a) shows a 3D rendering of a cell, highlighting the deformation before and after treatment with Cytochalasin-D, a drug that affects cell structure.  Panel (b) provides 2D projections of the flow field along the x, y, and z axes, showing the direction and magnitude of movement of particles near the cell.  The visualizations help demonstrate the method's ability to capture detailed movement in complex biological scenarios.", "section": "4.3 Analysis of Robustness Across Different Domains"}, {"figure_path": "WOBhJs9gqU/figures/figures_26_1.jpg", "caption": "Figure 9: Convergence graph of EPE with respect to the number of refinement steps (iterations).", "description": "This figure shows the convergence of the End Point Error (EPE) metric during the test-time optimization process using the Dynamic Velocimetry Enhancer (DVE) module.  The x-axis represents the number of iterations in the optimization process, and the y-axis shows the EPE value.  The graph demonstrates that the EPE decreases rapidly in the initial iterations and then gradually converges to a stable, low error value after around 150-200 iterations. This illustrates the efficiency of the DVE module in refining the initial flow estimation within a relatively small number of optimization steps.", "section": "A.4 Extended Results"}]