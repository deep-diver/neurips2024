[{"figure_path": "SoM3vngOH5/figures/figures_0_1.jpg", "caption": "Figure 1: Illustration of the four steps of Tree of Attacks with Pruning (TAP) and the use of the attacker and evaluator LLMs in each of the steps. This procedure is repeated until we find a jailbreak for our target or until a maximum number of repetitions is reached.", "description": "This figure illustrates the four main steps of the Tree of Attacks with Pruning (TAP) method.  It shows how the attacker and evaluator LLMs work together iteratively to refine attack prompts. The process begins with an initial prompt and continues until a successful jailbreak is achieved or a maximum number of iterations is reached.  Each step is clearly visualized with different colored boxes showing branching, pruning, and interaction with the target LLM. ", "section": "Techniques"}, {"figure_path": "SoM3vngOH5/figures/figures_2_1.jpg", "caption": "Figure 1: Illustration of the four steps of Tree of Attacks with Pruning (TAP) and the use of the attacker and evaluator LLMs in each of the steps. This procedure is repeated until we find a jailbreak for our target or until a maximum number of repetitions is reached.", "description": "This figure illustrates the iterative process of the Tree of Attacks with Pruning (TAP) method.  It shows four phases: branching (attacker LLM generates multiple variations of the prompt), pruning phase 1 (evaluator LLM removes unlikely prompts), attack & assess (prompts are sent to the target LLM and evaluated), and pruning phase 2 (the top-performing prompts are retained for the next iteration). The process repeats until a successful jailbreak is achieved or a maximum number of iterations is reached.", "section": "Techniques"}, {"figure_path": "SoM3vngOH5/figures/figures_23_1.jpg", "caption": "Figure 1: Illustration of the four steps of Tree of Attacks with Pruning (TAP) and the use of the attacker and evaluator LLMs in each of the steps. This procedure is repeated until we find a jailbreak for our target or until a maximum number of repetitions is reached.", "description": "This figure illustrates the iterative process of the Tree of Attacks with Pruning (TAP) method.  It shows how the attacker LLM generates variations of a prompt, the evaluator LLM prunes unlikely prompts, the target LLM is queried, and the process repeats until a successful jailbreak is found or a maximum iteration limit is reached. The diagram visually depicts the branching and pruning steps that are key to TAP's effectiveness. ", "section": "Techniques"}, {"figure_path": "SoM3vngOH5/figures/figures_25_1.jpg", "caption": "Figure 1: Illustration of the four steps of Tree of Attacks with Pruning (TAP) and the use of the attacker and evaluator LLMs in each of the steps. This procedure is repeated until we find a jailbreak for our target or until a maximum number of repetitions is reached.", "description": "This figure illustrates the four main steps of the Tree of Attacks with Pruning (TAP) method.  The steps are: Branching (the attacker LLM generates multiple variations of the prompt), Pruning Phase 1 (the evaluator LLM eliminates unlikely prompts), Attack and Assess (the target LLM is queried with remaining prompts and evaluated), and Pruning Phase 2 (highest-scoring prompts are retained). This iterative process continues until a jailbreak is found or a maximum number of iterations is reached. The figure visually depicts how the attacker and evaluator LLMs interact with the target LLM throughout the iterative process.", "section": "Techniques"}, {"figure_path": "SoM3vngOH5/figures/figures_27_1.jpg", "caption": "Figure 1: Illustration of the four steps of Tree of Attacks with Pruning (TAP) and the use of the attacker and evaluator LLMs in each of the steps. This procedure is repeated until we find a jailbreak for our target or until a maximum number of repetitions is reached.", "description": "This figure illustrates the four steps involved in one iteration of the Tree of Attacks with Pruning (TAP) algorithm.  The algorithm uses two LLMs: an attacker and an evaluator.  The attacker generates variations of an initial prompt, while the evaluator assesses those variations and eliminates the ones unlikely to succeed. The algorithm continues until a successful jailbreak is found or a maximum number of iterations is reached.  The figure shows the branching of attack attempts by the attacker, the pruning steps performed by the evaluator, the querying of the target LLM, and the selection of the top-performing prompts for the next iteration.", "section": "Techniques"}]