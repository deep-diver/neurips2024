[{"figure_path": "SiALFXa0NN/tables/tables_2_1.jpg", "caption": "Table 2: Applicability of our results on NNCS safety and decidability of the safety verification problem: Each class is a subset of its predecessor in the table.", "description": "This table presents the applicability of the research results to different classes of neural networks (NNs) and the decidability of their safety verification problems.  It categorizes NNs based on their activation functions (e.g., piece-wise Noetherian, ReLU). For each category, it indicates which sections of the paper provide applicable results and whether the safety verification problem is decidable for that class of NNs, along with an example activation function.", "section": "2 Background"}, {"figure_path": "SiALFXa0NN/tables/tables_4_1.jpg", "caption": "Table 2: Applicability of our results on NNCS safety and decidability of the safety verification problem: Each class is a subset of its predecessor in the table.", "description": "This table shows the applicability of the research results to different classes of neural networks (NNs). It demonstrates whether the proposed verification techniques can be applied to each NN class and if the safety verification problem is decidable for each NN class.  The table is organized based on the complexity of the NN, ranging from piece-wise Noetherian to ReLU NNs.  Each row specifies the type of activation function (all f\u1d62, Noetherian, Polynomial, Linear), the type of constraints allowed (all q\u1d62, FOL<sub>NR</sub>, FOL<sub>R</sub>, FOL<sub>LR</sub>), the sections of the paper where the results apply, whether the safety verification problem is decidable, and an example of an activation function for that class. The table shows that the methods are widely applicable but decidability is proven only for some.", "section": "Background"}, {"figure_path": "SiALFXa0NN/tables/tables_7_1.jpg", "caption": "Table 3: Verification of ACAS NNs for level flight: Previous advisory (=Prev. Adv.), runtime; number of counterexample (=CE) regions and time to the discovery of the first CE.", "description": "This table presents the results of verifying the safety of several neural networks used in the Airborne Collision Avoidance System (ACAS) for level flight scenarios. For each neural network, it shows the previous advisory given by the system, whether the system was deemed safe or unsafe by the verification process, the total runtime of the verification, the number of counterexample regions identified (indicating unsafe scenarios), and the time it took to find the first counterexample.  The table demonstrates the effectiveness of the proposed verification approach in identifying and characterizing unsafe regions within the ACAS X system.", "section": "5 Evaluation"}, {"figure_path": "SiALFXa0NN/tables/tables_18_1.jpg", "caption": "Table 2: Applicability of our results on NNCS safety and decidability of the safety verification problem: Each class is a subset of its predecessor in the table.", "description": "This table shows the applicability of the research results to different classes of neural networks (NNs) and indicates whether safety verification is decidable for each class.  The NN classes are categorized based on the properties of their activation functions.  The table indicates that the methods are applicable to all NNs with piecewise Noetherian activation functions, and that decidability is guaranteed for piecewise polynomial and piecewise linear NNs.  A concrete example of each class and which sections of the paper they relate to is also included.", "section": "2 Background"}, {"figure_path": "SiALFXa0NN/tables/tables_23_1.jpg", "caption": "Table 2: Applicability of our results on NNCS safety and decidability of the safety verification problem: Each class is a subset of its predecessor in the table.", "description": "This table shows the applicability of the research results to different classes of neural networks and whether the safety verification problem is decidable for each class.  The classes are hierarchical, with each class being a subset of the one above it. The table indicates whether the theoretical results and the implemented tool (N3V) can handle each class, and if the safety verification problem is decidable in each class.", "section": "2 Background"}, {"figure_path": "SiALFXa0NN/tables/tables_30_1.jpg", "caption": "Table 5: Runtime of N\u00b3V on the ACC networks per approximation. Final column lists filtered counterexamples for ACC_Large", "description": "This table presents the runtimes of the N\u00b3V tool for verifying the safety of Adaptive Cruise Control (ACC) neural networks.  It shows the performance for different neural network architectures (ACC, ACC_Large, and a retrained version of ACC_Large) using various approximation levels (linear, N=1, N=2, N=3).  The \"#Filtered\" column indicates the number of spurious counterexamples that were filtered out by the tool during the verification process. The runtimes are in seconds.", "section": "5 Evaluation"}, {"figure_path": "SiALFXa0NN/tables/tables_31_1.jpg", "caption": "Table 6: Comparison of verification tools for NNCSs on the ACC Benchmark: Share of state space analyzed and best results of each tool.", "description": "This table compares the performance of various verification tools on the Adaptive Cruise Control (ACC) benchmark.  It contrasts tools' abilities to handle nonlinearities, the number of configurations tested, the runtime, the proportion of the state space explored, and the verification result (whether safety was proved for a short time or infinitely). N\u00b3V, the authors' tool, significantly outperforms others, achieving full state-space verification for infinite time.", "section": "5 Evaluation"}, {"figure_path": "SiALFXa0NN/tables/tables_32_1.jpg", "caption": "Table 7: Comparison of feasible conjunctions/queries for non-normalized open-loop NNV queries for an approximation with N = 1: #Conjunctions is the number of propositionally satisfiable conjunctions over linear constraints, #Queries is the number of open-loop NNV queries generated by N\u00b3V, #Feasible Conjunctions is the number of open-loop NNV queries when splitting up disjunctions, #SMT calls is the number of feasibility checks performed by N\u00b3V\u2019s MOSAIC implementation during query generation.", "description": "This table compares the number of queries generated by different methods for verifying non-normalized open-loop neural network verification (NNV) queries.  It shows that the MOSAIC approach significantly reduces the number of queries compared to other methods, leading to improved efficiency. The table includes the number of propositionally satisfiable conjunctions, the number of open-loop NNV queries, the number of queries when splitting disjunctions, and the number of SMT calls for each method. This highlights the benefits of the MOSAIC approach in terms of computational cost.", "section": "5 Evaluation"}, {"figure_path": "SiALFXa0NN/tables/tables_32_2.jpg", "caption": "Table 8: Comparison of N\u00b3V with State-of-the-Art SMT solvers: Timeout (TO) was set to 12 hours", "description": "This table compares the performance of N\u00b3V against other state-of-the-art SMT solvers (dReal, Z3, Z3++, CVC5, MathSAT) on two different neural networks: ACC_Large and a retrained version of ACC_Large. The comparison focuses on the time taken to verify or refute the safety properties (represented as 'sat' for satisfiable/safe and 'unsat' for unsatisfiable/unsafe).  It demonstrates N\u00b3V's efficiency compared to other SMT solvers, especially for complex safety verification tasks, showing it is able to achieve results within 124 seconds that other tools failed to achieve in 12 hours.", "section": "5 Evaluation"}, {"figure_path": "SiALFXa0NN/tables/tables_33_1.jpg", "caption": "Table 9: Overview on Vertical Airborne Collision Advisories (simplified version of [50, Table 1])", "description": "This table lists the allowed advisories for a Vertical Airborne Collision Avoidance System.  For each advisory, it provides a description, the allowed range of vertical velocity (in ft/min), and the minimum required acceleration (g/x where x is a numerical value).", "section": "F Allowed advisories for Vertical Airborne Collision Avoidance"}]