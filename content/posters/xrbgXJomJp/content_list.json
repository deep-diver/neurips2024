[{"type": "text", "text": "Inverse Factorized Soft Q-Learning for Cooperative Multi-agent Imitation Learning ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The Viet Bui Tien Mai Singapore Management University, Singapore Singapore Management University, Singapore theviet.bui.2023@phdcs.smu.edu.sg atmai@smu.edu.sg ", "page_idx": 0}, {"type": "text", "text": "Thanh Hong Nguyen University of Oregon Eugene, Oregon, United States thanhhng@cs.uoregon.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "This paper concerns imitation learning (IL) in cooperative multi-agent systems. The learning problem under consideration poses several challenges, characterized by high-dimensional state and action spaces and intricate inter-agent dependencies. In a single-agent setting, IL was shown to be done efficiently via an inverse soft- $Q$ learning process. However, extending this framework to a multi-agent context introduces the need to simultaneously learn both local value functions to capture local observations and individual actions, and a joint value function for exploiting centralized learning. In this work, we introduce a new multi-agent IL algorithm designed to address these challenges. Our approach enables the centralized learning by leveraging mixing networks to aggregate decentralized Q functions. We further establish conditions for the mixing networks under which the multi-agent IL objective function exhibits convexity within the Q function space. We present extensive experiments conducted on some challenging multi-agent game environments, including an advanced version of the Star-Craft multi-agent challenge $(S M A C\\nu2)$ , which demonstrates the effectiveness of our algorithm. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Imitation learning (IL) is a powerful approach for sequential decision making in complex environments in which agents can learn desirable behavior by imitating an expert. There are applications of $\\mathrm{IL}$ in several real-world domains, including healthcare [40, 34] and autonomous driving [43, 17, 23]. A rich body of IL literature focuses on simple single-agent settings [1, 18, 13, 44, 32, 14] while many recent works develop new multi-agent IL methods that are tailored to either cooperative or noncooperative settings [36, 42, 22, 4, 19, 37]. Leading methods in [36, 42] explore solution concepts for Markov games such as Nash equilibria. Findings on underlying properties of these solution concepts are integrated to extend the single-agent IL models to multi-agent settings. While these methods show promising results, they face difficulties in training, as the underlying adversarial optimization process involves biased and high variance gradient estimators, leading to a highly unstable learning process. ", "page_idx": 0}, {"type": "text", "text": "Our work studies IL in cooperative multi-agent settings. We leverage recent advanced findings in both single-agent IL and multi-agent reinforcement learning (MARL) to build a unified multi-agent IL algorithm, named Multi-agent Inverse Factorized Q-learning (MIFQ). MIFQ is built upon inverse soft Q-learning (IQ-Learn) [14], a leading single-agent IL method of which advantage is to learn a single Q-function that implicitly defines both reward and policy functions, thus avoiding adversarial training. To adapt this idea for multi-agent settings, following the well-known paradigm of centralised training with decentralised execution (CTDE) in MARL [26, 21], we develop a centralized learning approach based on the concepts of mixing and hyper-networks [16]. This approach facilitates the integration of individual state-value and reward functions into a unified learning objective, enabling the training of decentralized imitation policies for agents in a centralized manner. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "In this work, we formulate the IL problem as a multi-agent inverse soft-Q learning task, where the objective is to match the occupancy distribution of the joint learning policy with that of the expert. To make the learning process practical and facilitate the CTDE paradigm, we propose factorizing both the global Q and V functions using mixing networks with non-negative weights and convex activation functions (such as ReLU and ELU). We further examine the Individual-Global-Max (IGM) principle [29, 35], a core concept in factorization learning, which suggests that the optimal joint actions across agents are equivalent to the collection of individual optimal actions for each agent. However, we argue that this principle does not apply for our problem setting since our objective is to recover soft policies based on max-entropy reinforcement learning. Therefore, we introduce a generalized version of IGM, called Individual-Global-Consistency (IGC), which requires that the distribution of joint actions produced by the optimal joint policy matches the collection of local action distributions produced by the individual optimal policies. We then demonstrate that IGC holds in our approach. ", "page_idx": 1}, {"type": "text", "text": "A key advantage of single-agent inverse soft Q-learning (IQ-Learn) is that the original training problem, which is a max-min optimization, can be conveniently converted into a (non-adversarial) concave maximization problem [14]. This conversion ensures that the optimization objective is well-behaved, contributing to the effectiveness of the original IQ-Learn. Interestingly, we provide theoretical results showing that under our factorization approach, the multi-agent training objective can also be converted into a (non-adversarial) concave maximization problem. This advantage holds with any multi-layer feed-forward mixing networks with non-negative weights and convex activations. ", "page_idx": 1}, {"type": "text", "text": "Finally, we conduct extensive experiments in three domains: SMACv2 [9], Gold Miner [12], and MPE (Multi Particle Environments) [25]. We show that our MIFQ outperforms other baselines in all these environments. To the best of our knowledge, our experiments with SMACv2 mark the first time IL algorithms are employed and evaluated on such a challenging multi-agent environment. ", "page_idx": 1}, {"type": "text", "text": "Concretely, we make the following main contribution: ", "page_idx": 1}, {"type": "text", "text": "(i) We introduce a new multi-agent IL method based on inverse soft-Q learning and factorization.   \n(ii) We show that our approach satisfies the IGC, a generation of the IGM principle.   \n(iii) We show that the max-min learning objective can be converted into a concave maximization problem, under any mixing networks of non-negative weights and convex activations, which helps avoid adversarial training and ensure well-behaved learning within the Q-space.   \n(iv) We empirically show state-of-art results on several challenging multi-agent game tasks, including an advanced version of the Star-Craft multi-agent challenge $(S M A C\\nu2)$ ). ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Single-Agent Imitation Learning. There is a rich body of existing works focusing on generating policies that mimic an expert\u2019s behavior given data of expert demonstrations in single-agent settings. A classic approach is behavioral cloning which casts IL as a supervised learning problem, attempting to maximize the likelihood of the expert\u2019s trajectories [32, 28]. This approach, while simple, requires a large amount of data to work well due to its compounding error issue. An alternative approach is to recover the reward function (either implicitly or explicitly) for which the expert\u2019s policy is optimal [13, 18, 30, 20, 10]. Leading methods [18, 13] follow an adversarial optimization process (which is similar to GAN [15]) to train the imitation policy and reward function alternatively. These adversarial training-based methods, however, suffer instability. A more recent work by [14] overcomes this instability issue by introducing an inverse soft-Q learning process. For a comprehensive review of literature on this topic, we refer readers to the survey article in [2]. ", "page_idx": 1}, {"type": "text", "text": "Multi-Agent Imitation Learning. Most of single-agent IL works, however, do not apply directly to multi-agent settings. Literature on multi-agent IL is rather limited. A few works study multi-agent IL either in cooperative environments [3, 22, 37, 5] or competitive environments [24, 31, 36, 42]. Recent leading methods employ equilibrium solution concepts in Markov games to extend some existing single-agent IL methods to the multi-agent settings [36, 42]. However, these methods still suffer the instability challenge during training as they still rely on adversarial training. Our work focuses on multi-agent IL in a cooperative Dec-POMDP environment. We utilize the idea of inverse soft-Q learning in single-agent IL [14] to avoid adversarial training. We extend the idea to the multi-agent settings under the paradigm of centralized training decentralized execution (CTDE) from MARL, allowing an efficient and stable learning process. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "MARL. The literature of MARL encompasses a number of advanced methods; many follow the well-known CTDE paradigm. In [25, 11], they employ actor-critic architectures and train a centralized critic that utilizes global information. Value-decomposition (VD) methods represent the joint Qfunction as a function of agents\u2019 local Q-functions [38, 29]. QMIX [29] offers a more advanced VD method for consolidating agents\u2019 individual local Q-functions through the utilization of mixing and hyper-network [16] concepts. Later value function factorization approaches, such as QTRAN [35] and QPLEX [39], introduce new factorization methods for MARL based on the IGM principle, which necessitates consistency between joint and local action selections. There are also policy gradient based MARL algorithms. Independent PPO (IPPO), a decentralized MARL, can achieve high success rates in several challenging SMAC maps [7]. MAPPO, a PPO version for MARL, achieves SOTA results on several tasks [41]. Our work utilizes MAPPO to train our expert and generate expert demonstrations. We also employ a hyper-network architecture [16] with mixing networks of non-negative weights and convex activations to facilitate our CTDE. While our mixing network techniques are similar to those used in QMIX [29], we show that this configuration offers several unique advantages in the context of inverse Q-learning. Specifically, the training objective can be transformed from a max-min problem into a (non-adversarial) concave maximization problem, and it upholds the IGC principle. Other methods, such as QTRAN and QPLEX [35, 39], are primarily based on the IGM principle and are designed for different objective structures, making them unsuitable for our context. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "A multi-agent cooperative system can be described as a decentralized partially observable Markov decision process (Dec-POMDP), defined by a tuple $\\{S,{\\mathcal{O}},{\\mathcal{N}},{\\mathcal{A}},P,{\\mathrm{\\bar{R}}}\\}$ [27], where $\\boldsymbol{S}$ is the set of global states, $\\scriptscriptstyle\\mathcal{O}$ is the set of local observations of agents, and $\\mathcal{N}$ is all the agents. In addition, $\\begin{array}{r}{\\bar{A}=\\prod_{i\\in\\mathcal{N}_{A}}\\bar{A}_{i}}\\end{array}$ is the set of joint actions of all the agents, $\\mathcal{A}_{i}$ is the set of actions of an agent $i\\in\\mathcal{N}$ , and $P$ is the transition dynamics of the multi-agent environment. Finally, in Cooperative MARL (Coop-MARL), all agents share the same reward function, $R$ , that can take inputs as global states and actions of all the agents and return the corresponding rewards. ", "page_idx": 2}, {"type": "text", "text": "At each step, given a global state $S$ , each ally agent $i$ takes an action $a_{i}\\in A_{i}$ based on his policy $\\pi_{i}(a_{i}\\ |\\ o_{i})$ , where $o_{i}$ is his local observation. The joint action is defined as $A\\,=\\,\\{a_{i}\\mid i\\,\\,\\bar{\\in}\\,{\\mathcal{N}}\\}$ and the joint policy is defined accordingly: $\\begin{array}{r}{\\Pi(A\\mathbin{\\,\\vert\\,}\\nabla S)=\\prod_{i\\in\\mathcal{N}}\\pi_{i}(a_{i}\\mathbin{\\,\\vert\\,}\\,o_{i})}\\end{array}$ . After all the agent actions are executed, the global state is updated to a new state $S^{\\prime}\\in{\\mathcal{S}}$ with the transition probability $P(S^{\\prime}\\mid A,S)$ . The objective of Coop-MARL is to find a joint policy $\\begin{array}{r}{\\Pi(\\cdot\\mid S)=\\prod_{i}\\pi_{i}\\Bar{(}\\cdot\\mid o_{i})}\\end{array}$ that maximizes the expected long-term joint reward, formulated as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\Pi}\\mathbb{E}_{\\Pi}\\Big[\\sum_{t=0}^{\\infty}\\gamma^{t}R(A_{t},S_{t})\\Big]\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "4 Multi-agent Inverse Q-Learning ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In IL, the objective is to recover an expert reward or expert policy from some expert demonstration data. Our new multi-agent IL algorithm is built upon an integration of recent advanced findings in single-agent IL (i.e., the new leading IQ-Learn [14]) and in cooperative MARL. In the following, we first present the main idea of IQ-Learn, with some direct centralized and decentralized adaptations to multi-agent settings. We then discuss key shortcomings of such simple adaptations in the context of a Dec-POMDP. Finally, we present our new algorithm which tackles all those shortcomings. ", "page_idx": 2}, {"type": "text", "text": "4.1 Inverse Soft Q-Learning ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "4.1.1 Centralized Inverse Q-Learning ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In general, IQ-Learn can be directly adapted for $\\mathrm{IL}$ in a fully-observable cooperative multi-agent setting. Given expert samples $\\mathcal{D}^{E}\\!=\\!\\{\\tau\\!=\\!\\{(A_{t},S_{t}),\\;t\\!=\\!0,\\dot{1}...\\}\\}$ , IQ-Learn aims to solve the following ", "page_idx": 2}, {"type": "text", "text": "maximin problem, which is also the objective of adversarial learning-based $\\mathrm{IL}$ approaches [18, 13]: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\operatorname*{max}_{R}\\operatorname*{min}_{\\Pi}\\Big\\{L(R,\\Pi)=\\operatorname{\\mathbb{E}}_{(S,A)\\sim\\rho^{E}}\\big[R(S,A)\\big]-\\operatorname{\\mathbb{E}}_{\\rho^{\\Pi}}\\big[R(S,A)\\big]-\\operatorname{\\mathbb{E}}_{\\rho^{\\Pi}}\\big[\\ln\\Pi(S,A)\\big]\\Big\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\rho^{\\Pi}(S,A)$ is the occupancy measure of visiting state $S$ and joint action $A$ , under the policy $\\Pi$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\rho^{\\Pi}(S,A)=(1-\\gamma)\\Pi(A\\mid S)\\prod_{t=0}^{\\infty}\\gamma^{t}P(S_{t}=S\\mid\\Pi),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "$\\rho^{E}$ is the occupancy measure of the expert policy $\\pi^{E}$ and $\\mathbb{E}_{\\rho^{\\Pi}}\\left[\\ln\\Pi(S,A)\\right]$ is the entropy regularizer. A typical method to solve (1) is to run an adversarial optimization process over rewards and policies, of which idea is similar to generative adversarial networks [18, 13]. However, such an approach suffers instability, a well-known challenge of adversarial training. Thus, IQ-Learn avoids adversarial training by learning a single soft Q-function, as defined in the following. ", "page_idx": 3}, {"type": "text", "text": "Definition 4.1 (Soft Q-function [14]). Given a policy $\\Pi$ , the soft Bellman operator $B^{\\Pi}$ is defined as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{(B^{\\Pi}Q)(S,A)=R(S,A)+\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}V^{\\Pi,Q}(S^{\\prime})}\\\\ &{w h e r e\\,V^{\\Pi,Q}(S)=\\mathbb{E}_{A\\sim\\Pi(\\cdot|S)}\\big[Q(S,A)-\\log\\Pi(A\\mid S)\\big]}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "$B^{\\Pi}$ is contractive and defines a unique soft $Q$ -function for the reward function $R_{s}$ , i.e., $Q=B^{\\Pi}Q$ . ", "page_idx": 3}, {"type": "text", "text": "Essentially, in [14], they show that (1) is equivalent to the following single minimization problem which only requires optimizing over the soft Q-function: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{Q}\\Bigl\\{J(Q)=\\mathbb{E}_{(S,A)\\sim\\rho^{E}}\\Bigl[Q(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}\\left[V^{Q}(S^{\\prime})\\right]\\Bigr]-(1-\\gamma)\\mathbb{E}_{S^{0}}\\left[V^{Q}(S^{0})\\right]\\Bigr\\}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $Q:S\\times A\\rightarrow\\mathbb{R}$ is the soft Q-function, $S^{0}$ is the initial state, and $V^{Q}(S)$ is computed as $\\begin{array}{r}{V^{Q}(S)=\\log(\\sum_{A\\in\\mathcal{A}}\\exp(Q(S,A)))}\\end{array}$ . A shortcoming of centralized IQ-Learn described above is that the computation of $V^{\\Pi,Q}(S)$ or $V^{Q}(S)$ is not tractable as it requires to sample joint actions, an the joint action space grows exponentially in the number of agents. Furthermore, it requires full observations for agents, which is not applicable in a Dec-POMDP with local partial observations. ", "page_idx": 3}, {"type": "text", "text": "4.1.2 Independent Inverse Q-Learning ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "An alternative approach to overcome the shortcomings of centralized IQ-Learn is to consider a separate $\\mathrm{IL}$ problem for each individual agent, considering its local observations. That is, one can set the objective to recover a local Q function $Q_{i}(o_{i},a_{i})$ , as a function of a local observation $o_{i}$ and local action $a_{i}$ , for each agent $i\\in\\mathcal N$ . The local IQ-Learn loss function can be formulated as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\operatorname*{nax}_{Q_{i}}\\operatorname*{min}_{\\pi_{i}}\\Bigl\\{J_{i}(Q_{i},\\pi_{i})=\\mathbb{E}_{\\mathcal{D}^{E}}\\Bigl[Q_{i}(o_{i},a_{i})-\\gamma\\mathbb{E}_{\\sigma_{i}^{\\prime}\\sim(P(\\cdot|)S,A)}\\left[V_{i}^{Q,\\pi}(o_{i}^{\\prime})\\right]\\Bigr]-(1-\\gamma)\\mathbb{E}_{o_{i}^{0}}\\bigl[V_{i}^{Q,\\pi}(o_{i}^{0})\\bigr]\\Bigr\\}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, $o_{i}^{\\prime}\\sim P(\\cdot\\mid S,A)$ means $o_{i}^{\\prime}$ is the local observation of agent $i$ corresponding to the new state $S^{\\prime}\\sim P(\\cdot\\mid S,A)$ . The value function can be computed as [14]: ", "page_idx": 3}, {"type": "equation", "text": "$$\nV_{i}^{Q,\\pi}(o_{i})=\\mathbb{E}_{\\pi_{i}(a_{i}\\vert o_{i})}\\left[Q_{i}(o_{i},a_{i})-\\log\\pi_{i}(a_{i}\\vert o_{i})\\right]\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "This approach is more tractable than the centralized method, making it suitable for a Dec-POMDP environment by enabling decentralized policies for agents. However, it has limitations in addressing the interdependence between agents and the global information available during the training process. ", "page_idx": 3}, {"type": "text", "text": "4.2 Inverse Factorized Soft Q-Learning ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We now present our new multi-agent $\\mathrm{IL}$ algorithm designed to recover Q functions in the multi-agent setting, following the CTDE paradigm. A possible straightforward approach is to directly factorize the centralized objective function in 3. This factorization can be achieved by decomposing the global Q-function ${\\overline{{Q(S,A)}}}$ into local Q-functions $Q_{i}(o_{i},a_{i})$ , and computing the global V-functions using the formula $\\begin{array}{r}{V^{Q}(S)=\\log(\\sum_{A\\in\\mathcal{A}}\\exp(Q(S,A)))}\\end{array}$ . However, this means that the global policy has to be computed based on a softmax of the global Q-function as \u03a0(S, A) =  Ae\u2032x epx(pQ((QS,(SA,))A\u2032)). This requirement of a global policy computation violates the decentralized execution under CTDE. According to this analysis, we will instead start from the original max-min formulation in (1), keeping in mind the necessity of having $\\pi_{i}$ to support CTDE. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "Our key ideas involve creating (i) agent local Q-value networks that output local V-values $V_{i}^{Q,\\pi}(o_{i},a_{i})$ and (ii) mixing the networks that utilize global state information to combine local values of agents into joint values that comprise the objective of the inverse soft Q-learning; and (iii) hyper-networks that provide a rich representation for the weights of the mixing networks, allowing us to govern their value ranges. There are two important aspects driving our mixing architecture: the consistency between local and global policies, and whether we can leverage the advantages of single-agent IQ-learn [14], specifically non-adversarial training and convexity within the Q-space. We will first describe our factorization approach, followed by an analysis of these two aspects. ", "page_idx": 4}, {"type": "text", "text": "4.2.1 Multi-agent IL Network Architecture ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Overall, our network architecture comprises of three different types of networks, described below. ", "page_idx": 4}, {"type": "text", "text": "Agent local $Q$ networks. Let $\\mathbf{Q}(S,A)=\\{Q_{i}(o_{i},a_{i})\\}_{i=1}^{m}$ of local soft Q-values of agents where $m=|\\mathcal{N}|$ is the number of agents and $(o_{i},a_{i})\\,\\in\\,(S,A),$ $i\\in\\mathcal{N}$ . For an abuse of notations, we denote by $Q_{i}(o_{i},a_{i};\\theta_{i})$ as the local $Q$ -value network of the agent $i$ of which learnable parameter is $\\theta_{i}$ .2 Given $(Q,\\Pi)$ , we then use $\\mathbf{V}^{Q,\\Pi}(S,A)$ to represent the corresponding state-value vector $\\mathbf{V}^{Q,\\Pi}(S)=\\{V_{i}^{Q,\\pi}(o_{i})\\}_{i=1}^{m}$ where $V_{i}^{Q,\\pi}(o_{i})$ is computed in (5). Q and $\\mathbf{V}^{Q,\\Pi}$ will be passed to the corresponding mixing networks to induce the joint values $Q^{t o t}$ and $V_{Q,\\Pi}^{t o t}$ . These joint values will be then incorporated into computing the objective of the inverse soft Q-learning. Here, we do not assume any specific model for the policies $\\pi_{i}$ . As we show later, there exists a closed-form solution to compute optimal policies, which allows us to eliminate the variable $\\pi_{i}$ from the training problem. ", "page_idx": 4}, {"type": "text", "text": "Value mixing networks. We create two mixing networks to combine local Q and $\\mathrm{v}$ values into the joint values $\\bar{Q}^{t o t}$ and $V^{t o t}$ , respectively. Let\u2019s denote these networks as $\\mathcal{M}_{\\psi_{Q}}(\\cdot)$ and $\\mathcal{M}_{\\psi_{V}}(\\cdot)$ . Here $\\psi_{Q}$ and $\\psi_{V}$ are corresponding weights of these two networks. In particular, we have: ", "page_idx": 4}, {"type": "equation", "text": "$$\nQ^{t o t}(S,A)=-\\mathcal{M}_{\\psi_{Q}}\\big(-\\mathbf{Q}(S,A)\\big)\\qquad\\qquad V_{Q,\\Pi}^{t o t}(S)=\\mathcal{M}_{\\psi_{V}}\\big(\\mathbf{V}^{Q,\\Pi}(S)\\big)\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that, instead of directly mixing $\\mathbf Q(S)$ , we mix the negative of this vector to achieve the IGC principle and the convexity. We can now formulate the objective function of our multi-agent inverse factorized $Q$ -learning w.r.t the local $Q$ -values and polices, and these mixing networks, as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\operatorname*{max}_{\\mathbf{Q}}\\operatorname*{min}_{\\Pi}\\Big\\{J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})=\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\Big[Q^{t o t}(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}\\big[V_{Q,\\Pi}^{t o t}(S^{\\prime})\\big]\\Big]\\Big\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad-\\,(1-\\gamma)\\mathbb{E}_{S^{0}}\\big[V_{Q,\\Pi}^{t o t}(S_{0})\\big]\\Big\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We further assume that the two mixing networks are multi-layer feed-forward networks, constructed with non-negative weights and convex activation functions (e.g., ReLU, ELU, and Maxout). This configuration is widely-used in the literature and, as shown in the next section, is sufficient to ensure consistency between the global and local policies (a form of the IGM property, as shown later) and, importantly, the convexity of the training objective function within the Q-space. ", "page_idx": 4}, {"type": "text", "text": "Hyper-networks. Finally, we create two hyper-networks corresponding the two mixing networks. These hyper-networks take the global state $S$ as an input and generate the weights $\\psi_{V}$ and $\\psi_{Q}$ of the mixing networks accordingly. The creation of such hyper-networks allows us to have a rich representation of the weights that can be governed to ensure the convexity of the objective $J(\\mathbf{Q},\\bar{\\Pi},\\boldsymbol{\\psi}_{Q},\\boldsymbol{\\psi}_{V})$ as well as the IGC property (as described below) . We can write $\\psi_{V}=\\psi_{V}(S;\\omega_{V})$ and $\\psi_{Q}=\\dot{\\psi}_{Q}(S;\\omega_{R})$ where $\\omega_{V}$ and $\\omega_{R}$ denote trainable parameters of the state-value and reward hyper-networks. We can alternatively write the objective $J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})$ as $J(\\theta,\\omega_{R},\\omega_{V})$ when the local soft $Q$ -values $\\mathbf{Q}$ are parameterized by $\\theta=\\{\\theta_{1},\\theta_{2},\\cdot\\cdot\\cdot,\\theta_{m}\\}$ and the weights of the mixing networks $(\\psi_{V},\\psi_{Q})$ are parameterized by $\\omega_{V}$ and $\\omega_{R}$ respectively. The optimal policy, as shown later, can be computed as soft-max of Q. We note that we will use either $J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})$ or $J(\\theta,\\omega_{R},\\omega_{V})$ depending on the context of our analysis. ", "page_idx": 4}, {"type": "text", "text": "4.2.2 Individual-Global-Consistency (IGC) ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "One of the key aspects of CTDE is ensuring consistency between global learning and local policy execution. In previous MARL approaches based on mixing Q-functions, this is often expressed through the IGM principle [35, 29, 39], implying that the optimal joint actions across agents (obtained by maximizing the joint Q-function) are equivalent to the collection of individual optimal actions of each agent (obtained by maximizing their local Q-functions). In our context, there are significant differences that prevent direct application of this principle. First, our recovered policy is not derived from directly maximizing the Q-function. Instead, it is obtained by solving a distribution-matching objective, which results in soft policies computed as the soft-max of Q-values. To adapt this principle in the context of inverse Q-learning, we introduce the concept of Individual-Global-Consistency (IGC), which is a generalization of the IGM, defined in the following. ", "page_idx": 5}, {"type": "text", "text": "Definition 4.2 (Individual-Global-Consistency (IGC)). A factorized learning approach is said to adhere to the IGC principle if and only if the optimal joint policy (obtained from solving the global training problem) is equivalent to the collection of individual optimal policies for each agent (obtained by solving their respective local training objectives). ", "page_idx": 5}, {"type": "text", "text": "The following result states that our factorized inverse Q-learning approach satisfies the IGC principle. ", "page_idx": 5}, {"type": "text", "text": "Theorem 4.3. Let $\\Pi^{*}=a r g m i n_{\\Pi}\\big\\{J(Q,\\Pi,\\psi_{Q},\\psi_{V})\\big\\}$ , then there are a set of optimal local policies $\\{\\pi_{i}^{*}\\}$ such that $\\pi_{i}^{*}=a r g m i n_{\\pi_{i}}J_{i}(Q_{i},\\pi_{i})$ , $\\forall i\\in N$ , and $\\Pi^{*}=\\{\\pi_{i}^{*},\\,i\\in\\mathcal{N}\\}$ . ", "page_idx": 5}, {"type": "text", "text": "The theorem implies that the distribution of joint actions, produced by the optimal joint policy, is the same as the collection of local action distributions produced by the local optimal policies. Moreover, as an additional note, the IGM principle with respect to the joint Q-function also holds under our mixing network architecture, i.e., for all $S\\in S$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\operatorname*{argmax}_{A}\\{Q^{t o t}(S,A)\\}=\\{\\operatorname*{argmax}_{a_{i}}\\{Q_{i}(o_{i},a_{i})\\},\\ i\\in\\mathcal{N}\\}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "4.2.3 Non-adversarial Training and Convexity ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "One of the main advantages of the single-agent inverse Q-learning algorithm is that the training problem can be equivalently transformed into a concave maximization problem over the Q-space, making the training process highly stable and well-behaved. We demonstrate below that these features still hold under our mixing network architecture. ", "page_idx": 5}, {"type": "text", "text": "Proposition 4.4. The max-min problem in (6) is equivalent to the following maximization problem: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\operatorname*{max}_{Q}\\Big\\{J(Q,\\psi_{Q},\\psi_{V})=\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\Big[Q^{t o t}(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}\\big[V_{Q}^{t o t}(S^{\\prime})\\big]\\Big]\\Big\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad-\\left(1-\\gamma\\right)\\mathbb{E}_{S^{0}}\\big[V_{Q}^{t o t}(S_{0})\\big]\\Big\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $V_{Q}^{t o t}(S)=\\mathcal{M}_{\\psi_{V}}\\big(V^{Q}(S)\\big)$ , and $V^{Q}({\\cal S})=\\left(V_{i}^{Q}(o_{i})\\stackrel{d e f}{=}\\log(\\sum_{a_{i}}\\exp(Q_{i}(o_{i},a_{i}))),\\;\\;i\\in\\Lambda\\right.$ Moreover, let $Q^{*}$ be optimal to (7), then the global optimal policy can be recovered as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\Pi^{*}=\\left\\{\\pi_{i}^{*}(o_{i},a_{i})=\\frac{\\exp(Q_{i}(o_{i},a_{i})))}{\\sum_{a_{i}^{\\prime}}\\exp(Q_{i}(o_{i},a_{i}^{\\prime}))}\\right\\vert\\,i\\in\\mathcal{N}\\right\\}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Furthermore, it can be shown that the objective in (7) is concave in $\\mathbf{Q}$ which is an essential property that make the Q-learning procedure well-behaved and stable [14]. ", "page_idx": 5}, {"type": "text", "text": "Theorem 4.5. $J(\\pmb{Q},\\psi_{Q},\\psi_{V})$ is (strictly) concave in $Q$ . As a result, (7) always yield a unique solution within the $Q$ -space. ", "page_idx": 5}, {"type": "text", "text": "Theorem (4.5) indicates that the global training objective $J(\\mathbf{Q},\\psi_{Q},\\psi_{V})$ is concave in $\\mathbf{Q}$ when using any multi-layer feed-forward mixing networks with non-negative weights and convex activation functions. This result is highly general and notably non-trivial due to the nonlinearity and complexity of $V_{i}^{Q}$ (as functions of $Q_{i}$ ) and the mixing networks. Prior work often relies on a two-layer mixing structure [29], noting that such a two-layer structure is sufficient for the mixing network to approximate any monotonic function arbitrarily closely in the limit of infinite width [8]. ", "page_idx": 5}, {"type": "text", "text": "4.3 MIFQ Algorithm ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We now present our practical algorithm, MIFQ, and details of our implemented network architecture. Mixing and Hyper Networks. We employ the following two-layer feed-forward network structure: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{M}_{\\psi_{Q}}(\\mathbf{X})=\\mathrm{ELU}(\\mathbf{X}\\times|W_{1}^{Q}|+b_{1}^{Q})\\times|W_{2}^{Q}|+b_{2}^{Q}}\\\\ &{\\mathcal{M}_{\\psi_{V}}(\\mathbf{X})=\\mathrm{ELU}(\\mathbf{X}\\times|W_{1}^{V}|+b_{1}^{V})\\times|W_{2}^{V}|+b_{2}^{V}}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "for mixing networks, where $\\psi_{Q}\\,=\\,\\{W_{1}^{Q},W_{2}^{Q},b_{1}^{Q},b_{2}^{Q},\\}$ and $\\psi_{V}\\,=\\,\\{W_{1}^{V},W_{2}^{V},b_{1}^{V},b_{2}^{V}\\}$ are the weight and bias vectors. The absolute operations $|\\cdot|$ ensure that all the weights are non-negative. Moreover, $\\psi_{Q}$ and $\\psi_{V}$ are an output of a hyper-network taking the global state $S$ as input. Each hypernetwork consists of two fully-connected layers with a ReLU activation. Finally, ELU is employed to mitigate the issue of gradient vanishing and to ensure that negative inputs remain negative. Indeed, ELU is convex and the two mixing networks $\\mathcal{M}_{\\psi_{Q}}$ and $\\mathcal{M}_{\\psi_{V}}$ have non-negative weights, implying that the loss function $J(\\mathbf{Q},\\psi_{Q},\\psi_{V})$ is concave in $\\mathbf{Q}$ and the $I G C$ holds. ", "page_idx": 6}, {"type": "text", "text": "Practical Implementation. Similar to [14], we use a $\\chi^{2}$ -regularizer $\\phi(x)=x+\\textstyle{\\frac{1}{2}}x^{2}$ for the first terms of the loss function in (6). This convex regularizer is useful to ensure that this is lowerbounded even when $Q_{i}$ , for some $i\\in\\mathcal{N}$ , go to $-\\infty$ , which is crucial to keep the learning process stable. In addition, instead of directly estimating $\\mathbb{E}_{S_{0}}[V^{t o t}(S_{0})]$ , we utilize the following equation to approximate $\\mathbb{E}_{S_{0}}[V_{Q}^{t o t}(S_{0})]$ which can stabilize training: ", "page_idx": 6}, {"type": "equation", "text": "$$\n(1-\\gamma)\\mathbb{E}[V_{Q}^{t o t}(S)]=\\mathbb{E}_{(S,A)\\sim\\rho}\\big[V_{Q}^{t o t}(S)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}[V_{Q}^{t o t}(S^{\\prime})]\\big]\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "for any value function $V_{Q}^{t o t}(\\cdot)$ and occupancy measure $\\rho$ [14], we can estimate $\\mathbb{E}_{S_{0}}[V_{Q}^{t o t}(S_{0})]$ by sampling $(S,A)$ from replay buffer and estimate $\\mathbb{E}_{(S,A,S^{\\prime})\\sim\\mathrm{replay}}[V_{Q}^{t o t}(S)-\\gamma V_{Q}^{t o t}(S^{\\prime})]$ instead. In summary, we will employ the following practical loss function: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\operatorname*{min}_{\\theta,\\omega_{R},\\omega_{V}}\\Bigl\\{J(\\theta,\\omega_{R},\\omega_{V})=\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\phi\\bigl(Q^{t o t}(S,A)-\\gamma V_{Q}^{t o t}(S^{\\prime})\\bigr)}\\\\ &{}&{+\\,\\mathbb{E}_{(S,A,S^{\\prime})\\in\\mathcal{D}^{r e p l a y}}\\bigl[V_{Q}^{t o t}(S)-\\gamma V_{Q}^{t o t}(S^{\\prime})\\bigr]\\Bigr\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Fig. 1 shows our network architecture and the details of our MIFQ can be found in the appendix. ", "page_idx": 6}, {"type": "image", "img_path": "xrbgXJomJp/tmp/daf477797bc49e0a3952c5210b0d5e037e8dc900c5e774fcfe74526374f1e24a.jpg", "img_caption": ["Figure 1: An overview of our network architecture. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Environments. We use three environments in which enemy agents\u2019 policies are fixed and controlled by a simulator. We collect expert trajectories from well-trained ally agents and build IL to mimic them. The resulting imitating agents are evaluated by letting them play against the simulator\u2019s enemies. ", "page_idx": 6}, {"type": "text", "text": "SMACv2 [9]. SMAC is a well-known multi-agent environment built based on StarCraft II. We employ SMACv2 [9], an enhanced version of SMACv1 [33], that introduces a more formidable environment for evaluating MARL algorithms. In SMACv2, scenarios are procedurally generated, compelling agents to adapt to previously un-encountered situations. This benchmark has 6 sub-tasks, including Protoss, Terran, and Zerg which feature 5 to 10 agents. These agents have the flexibility to engage with opponents of differing difficulty levels. ", "page_idx": 6}, {"type": "image", "img_path": "xrbgXJomJp/tmp/e7ab3b966c8be4b182ae16e15112d6425f0b9348d6c6f67c946aa0063bdcdb35.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "xrbgXJomJp/tmp/f0868db817e252e6309ebd26e9f8b0fbbe07d905ee4821e560d4cd4e1624d4c2.jpg", "table_caption": ["Table 1: Winrate and reward comparisons "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "xrbgXJomJp/tmp/6f18dfaf06a841ca0dc2ce1d83b0176106452f958a0a141ad47b5608ae33eb7b.jpg", "img_caption": ["Figure 3: Comparison with different numbers of demonstrations. X-axis: winning rate. Y-axis: number of demonstrations. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Gold Miner [12]. This game originates from a MARL competition, in which two teams, ally and enemy, navigate through a 2D terrain to find gold. A team win if they mined a larger amount of gold than the other. Winning this game is challenging since the allied agents must compete against exceptionally well-developed heuristic-based enemies. We consider three sub-tasks, each involves two ally and two enemy agents: (i) Easy: The enemies employ a simple shortest-path strategy to reach the gold deposits; (ii) Medium: One enemy agent follows a greedy approach, while the other follows the algorithm developed by the second-ranking team in the competition; and (iii) Hard: the enemies consists of the first- and second-ranking teams. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Multi Particle Environments (MPE) [25]. MPE contains multiple communication-oriented deterministic multi-agent environments. We use three cooperative scenarios available in MPE for evaluating, including: (i) Simple spread: three agents learn to avoid collisions while covering all of the landmarks; (ii) Simple reference: two agents learn to get closer to the target landmarks. Each target landmark is known only by the other agents, so all agents have to communicate to each others; and (iii) Simple speaker listener: similar to simple reference, but one agent (speaker) can speak but cannot move, and one agent (listener) can move but cannot speak. ", "page_idx": 8}, {"type": "text", "text": "Expert Demonstrations. For each task, we trained an expert policy by MAPPO with large-scale hyper-parameters (e.g., multi layers, higher dimensions, longer training steps, and using recurrent neural network, etc). In term of expert buffer collection, we test each method with different numbers of expert trajectories: up to 128 trajectories for MPEs and up to 4096 trajectories for Miner and SMAC-v2. Note that MPEs are not dynamic environments, so we do not need a large number of expert demonstrations for evaluation. For each collected trajectory, we used a different random seed. For a fair comparison, each method uses the same saved expert demonstrations for the training. ", "page_idx": 8}, {"type": "text", "text": "Baselines. We compare our MIFQ against other multi-agent IL algorithms, which either originate from the multi-agent IL literature, or be adapted from SOTA single-agent IL algorithms. These baselines include: (i) Behavior Cloning (BC); (ii) Independent IQ-Learn (IIQ) \u2014 this is a simple adaption of IQ-Learn for a multi-agent setting, described in Section 4.1.2; (iii) IQ-Learn with Value Decomposition Network (IQVDN) \u2014 this is another adaptation of IQ-Learn, but instead of using mixing and hyper networks to aggregate agent Q functions, we employ Value Decomposition (VDN) [38]; (iv) MASQIL \u2014 we adapt SQIL for multi-agent settings [30]. MASQIL shares some similar advantages with our MIFQ, such as being non-adversarial and enabling decentralized learning through centralized learning; (v) MAGAIL \u2014 a multi-agent $\\mathrm{IL}$ algorithm introduced by [36]; and finally (vi) MAAIRL \u2014 this algorithm is proposed by [42]. Moreover, since our MIFQ algorithm relies on soft policies while most previous factorized Q-learning algorithms [29, 35, 39] use deterministic policies, we include a deterministic-policy version of MIFQ for comparison purposes. In this version, the deterministic optimal local actions are determined as $a_{i}^{*}=\\mathrm{arginax}_{a_{i}}\\{\\bar{Q}_{i}(\\bar{o}_{i},a_{i})\\}$ , and the local V functions are $V_{i}^{Q}(o_{i})=\\operatorname*{max}_{a_{i}}Q_{i}(o_{i},a_{i})$ . We denote our main MIFQ algorithm as MIFQ (Soft), and the deterministic-policy version as MIFQ (Det). ", "page_idx": 8}, {"type": "text", "text": "Comparison Results. We train each task with our algorithms and the different baselines, using 128 trajectories for MPE, and 4096 trajectories for SMACv2 and Miner. As a standard practice, we report winrates for SMACv2 & Gold Miner, and reward scores for MPEs. Figure 2 shows the learning curves and Table 1 reports the final winrates and average scores (the full table with std values can be found in appendix). Our methods MIFQ $(S o f t)$ significantly outperforms all other baselines on SMACv2 & Gold Miner tasks, and has competitive performance on MPEs, with a note that MPEs is a deterministic environment and its tasks are considerably easier than SMACv2 and Gold Miner. We also observe that MIFQ $(D e t)$ significantly outperforms other baselines, but remarkably worse than MIFQ (Soft), indicating the advantage of using soft-policy learning in our context. Moreover, to evaluate the efficiency of our method with different numbers of expert demonstrations, we compare our MIFQ with the baselines on two dynamic tasks: $S M A C\\nu2$ & Miner. Figure 3 shows box and whisker plots of the average winning rate of each method on each task for data summarising analysis. It shows that MIFQ (Det and Soft) offer higher winrates, and it converges better with smaller standard errors. Moreover, to evaluate how the convexity help enhance our algorithm, we compares MIFQ with those that rely on non-convex mixing networks, which are obtained by replacing the convex activation ELU with non-convex ones such as sigmoid or tanh. More details can be found in the appendix. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion and Limitations ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Conclusion. We developed a multi-agent IL algorithm based on the inversion of soft-Q functions. By employing mixing and hyper-network architectures, our algorithm, MIFQ, is non-adversarial and enables the CTDE approach. We demonstrated that, with some commonly used two-layer mixing network structures, our IL loss function is convex within the Q-function space, making learning convenient. Extensive experiments conducted across several challenging multi-agent tasks demonstrate the superiority of our algorithm compared to existing IL approaches. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Limitations. Some limitations of the work includes: (i) while MIFQ achieves impressive performance across various tasks, it falls short of reaching the expertise levels (increasing the number of expert demonstrations could solve the issue, but it would introduce additional computational challenges, as the replay buffer will become too large and the training process will be very costly); (ii) MIFQ, along with other baseline methods, struggles when confronted with very large-scale tasks, such as some of the largest games in SMACv2; and (iii) our multi-agent IL (and other baselines) still requires a large amount of (clean) expert demonstrations, which would be not always available in practice. These limitations could pave the way for future work. ", "page_idx": 9}, {"type": "text", "text": "Broader Impacts. Our research focuses on imitation learning in multi-agent systems, it may have potential applications similar to areas where imitation learning has been impactful, such as autonomous driving, healthcare, and game theory. There are also potential negative impacts. For instance, imitation learning could be used for surveillance purposes, following and monitoring individuals in public spaces, or for developing autonomous weapons. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This research/project is supported by the National Research Foundation Singapore and DSO National Laboratories under the AI Singapore Programme (AISG Award No: AISG2-RP-2020-017). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Abbeel, P. and Ng, A. Y. Apprenticeship learning via inverse reinforcement learning. In Proceedings of the twenty-first international conference on Machine learning, pp. 1, 2004.   \n[2] Arora, S. and Doshi, P. A survey of inverse reinforcement learning: Challenges, methods and progress. Artificial Intelligence, 297:103500, 2021.   \n[3] Barrett, S., Rosenfeld, A., Kraus, S., and Stone, P. Making friends on the fly: Cooperating with new teammates. Artificial Intelligence, 242:132\u2013171, 2017.   \n[4] Bhattacharyya, R. P., Phillips, D. J., Wulfe, B., Morton, J., Kuefler, A., and Kochenderfer, M. J. Multi-agent imitation learning for driving simulation. In 2018 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), pp. 1534\u20131539. IEEE, 2018. [5] Bogert, K. and Doshi, P. Multi-robot inverse reinforcement learning under occlusion with interactions. In Proceedings of the 2014 international conference on Autonomous agents and multi-agent systems, pp. 173\u2013180, 2014.   \n[6] Boyd, S. P. and Vandenberghe, L. Convex optimization. Cambridge university press, 2004.   \n[7] de Witt, C. S., Gupta, T., Makoviichuk, D., Makoviychuk, V., Torr, P. H., Sun, M., and Whiteson, S. Is independent learning all you need in the starcraft multi-agent challenge? arXiv preprint arXiv:2011.09533, 2020. [8] Dugas, C., Bengio, Y., B\u00e9lisle, F., Nadeau, C., and Garcia, R. Incorporating functional knowledge in neural networks. Journal of Machine Learning Research, 10(6), 2009. [9] Ellis, B., Moalla, S., Samvelyan, M., Sun, M., Mahajan, A., Foerster, J. N., and Whiteson, S. Smacv2: An improved benchmark for cooperative multi-agent reinforcement learning. arXiv preprint arXiv:2212.07489, 2022.   \n[10] Finn, C., Christiano, P., Abbeel, P., and Levine, S. A connection between generative adversarial networks, inverse reinforcement learning, and energy-based models. arXiv preprint arXiv:1611.03852, 2016.   \n[11] Foerster, J., Farquhar, G., Afouras, T., Nardelli, N., and Whiteson, S. Counterfactual multi-agent policy gradients. In Proceedings of the AAAI conference on artificial intelligence, volume 32, 2018.   \n[12] FPT. Fpt reinforcement learning competition. https://github.com/xphongvn/ rlcomp2020, 2020.   \n[13] Fu, J., Luo, K., and Levine, S. Learning robust rewards with adversarial inverse reinforcement learning. arXiv preprint arXiv:1710.11248, 2017.   \n[14] Garg, D., Chakraborty, S., Cundy, C., Song, J., and Ermon, S. Iq-learn: Inverse soft- $\\mathbf{\\nabla}\\cdot\\mathbf{q}$ learning for imitation. Advances in Neural Information Processing Systems, 34:4028\u20134039, 2021.   \n[15] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., Courville, A., and Bengio, Y. Generative adversarial nets. Advances in neural information processing systems, 27, 2014.   \n[16] Ha, D., Dai, A. M., and Le, Q. V. Hypernetworks. In International Conference on Learning Representations, 2017. URL https://openreview.net/forum?id=rkpACe1lx.   \n[17] Hawke, J., Shen, R., Gurau, C., Sharma, S., Reda, D., Nikolov, N., Mazur, P., Micklethwaite, S., Griffiths, N., Shah, A., et al. Urban driving with conditional imitation learning. In 2020 IEEE International Conference on Robotics and Automation (ICRA), pp. 251\u2013257. IEEE, 2020.   \n[18] Ho, J. and Ermon, S. Generative adversarial imitation learning. Advances in neural information processing systems, 29, 2016.   \n[19] Jeon, W., Barde, P., Nowrouzezahrai, D., and Pineau, J. Scalable and sample-efficient multiagent imitation learning. In Proceedings of the Workshop on Artificial Intelligence Safety, co-located with 34th AAAI Conference on Artificial Intelligence, SafeAI@ AAAI, 2020.   \n[20] Kostrikov, I., Nachum, O., and Tompson, J. Imitation learning via off-policy distribution matching. arXiv preprint arXiv:1912.05032, 2019.   \n[21] Kraemer, L. and Banerjee, B. Multi-agent reinforcement learning as a rehearsal for decentralized planning. Neurocomputing, 190:82\u201394, 2016.   \n[22] Le, H. M., Yue, Y., Carr, P., and Lucey, P. Coordinated multi-agent imitation learning. In International Conference on Machine Learning, pp. 1995\u20132003. PMLR, 2017.   \n[23] Le Mero, L., Yi, D., Dianati, M., and Mouzakitis, A. A survey on imitation learning techniques for end-to-end autonomous vehicles. IEEE Transactions on Intelligent Transportation Systems, 23(9):14128\u201314147, 2022.   \n[24] Lin, X., Beling, P. A., and Cogill, R. Multi-agent inverse reinforcement learning for zero-sum games. arXiv preprint arXiv:1403.6508, 2014.   \n[25] Lowe, R., Wu, Y. I., Tamar, A., Harb, J., Pieter Abbeel, O., and Mordatch, I. Multi-agent actor-critic for mixed cooperative-competitive environments. Advances in neural information processing systems, 30, 2017.   \n[26] Oliehoek, F. A., Spaan, M. T., and Vlassis, N. Optimal and approximate q-value functions for decentralized pomdps. Journal of Artificial Intelligence Research, 32:289\u2013353, 2008.   \n[27] Oliehoek, F. A., Amato, C., et al. A concise introduction to decentralized POMDPs, volume 1. Springer, 2016.   \n[28] Pomerleau, D. A. Efficient training of artificial neural networks for autonomous navigation. Neural computation, 3(1):88\u201397, 1991.   \n[29] Rashid, T., Samvelyan, M., De Witt, C. S., Farquhar, G., Foerster, J., and Whiteson, S. Monotonic value function factorisation for deep multi-agent reinforcement learning. The Journal of Machine Learning Research, 21(1):7234\u20137284, 2020.   \n[30] Reddy, S., Dragan, A. D., and Levine, S. Sqil: Imitation learning via reinforcement learning with sparse rewards. arXiv preprint arXiv:1905.11108, 2019.   \n[31] Reddy, T. S., Gopikrishna, V., Zaruba, G., and Huber, M. Inverse reinforcement learning for decentralized non-cooperative multiagent systems. In 2012 IEEE International Conference on Systems, Man, and Cybernetics (SMC), pp. 1930\u20131935. IEEE, 2012.   \n[32] Ross, S. and Bagnell, D. Efficient reductions for imitation learning. In Proceedings of the thirteenth international conference on artificial intelligence and statistics, pp. 661\u2013668. JMLR Workshop and Conference Proceedings, 2010.   \n[33] Samvelyan, M., Rashid, T., De Witt, C. S., Farquhar, G., Nardelli, N., Rudner, T. G., Hung, C.-M., Torr, P. H., Foerster, J., and Whiteson, S. The starcraft multi-agent challenge. arXiv preprint arXiv:1902.04043, 2019.   \n[34] Shah, S. I. H., Coronato, A., Naeem, M., and De Pietro, G. Learning and assessing optimal dynamic treatment regimes through cooperative imitation learning. IEEE Access, 10:78148\u2013 78158, 2022.   \n[35] Son, K., Kim, D., Kang, W. J., Hostallero, D. E., and Yi, Y. Qtran: Learning to factorize with transformation for cooperative multi-agent reinforcement learning. In International conference on machine learning, pp. 5887\u20135896. PMLR, 2019.   \n[36] Song, J., Ren, H., Sadigh, D., and Ermon, S. Multi-agent generative adversarial imitation learning. Advances in neural information processing systems, 31, 2018.   \n[37] \u0160o\u0161ic\u00b4, A., KhudaBukhsh, W. R., Zoubir, A. M., and Koeppl, H. Inverse reinforcement learning in swarm systems. arXiv preprint arXiv:1602.05450, 2016.   \n[38] Sunehag, P., Lever, G., Gruslys, A., Czarnecki, W. M., Zambaldi, V., Jaderberg, M., Lanctot, M., Sonnerat, N., Leibo, J. Z., Tuyls, K., et al. Value-decomposition networks for cooperative multi-agent learning. arXiv preprint arXiv:1706.05296, 2017.   \n[39] Wang, J., Ren, Z., Liu, T., Yu, Y., and Zhang, C. Qplex: Duplex dueling multi-agent q-learning. arXiv preprint arXiv:2008.01062, 2020.   \n[40] Wang, L., Yu, W., He, X., Cheng, W., Ren, M. R., Wang, W., Zong, B., Chen, H., and Zha, H. Adversarial cooperative imitation learning for dynamic treatment regimes. In Proceedings of The Web Conference 2020, pp. 1785\u20131795, 2020.   \n[41] Yu, C., Velu, A., Vinitsky, E., Gao, J., Wang, Y., Bayen, A., and Wu, Y. The surprising effectiveness of ppo in cooperative multi-agent games. Advances in Neural Information Processing Systems, 35:24611\u201324624, 2022.   \n[42] Yu, L., Song, J., and Ermon, S. Multi-agent adversarial inverse reinforcement learning. In International Conference on Machine Learning, pp. 7194\u20137201. PMLR, 2019.   \n[43] Zhou, J., Wang, R., Liu, X., Jiang, Y., Jiang, S., Tao, J., Miao, J., and Song, S. Exploring imitation learning for autonomous driving with feedback synthesizer and differentiable rasterization. In 2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), pp. 1450\u20131457. IEEE, 2021.   \n[44] Ziebart, B. D., Maas, A. L., Bagnell, J. A., Dey, A. K., et al. Maximum entropy inverse reinforcement learning. In Aaai, volume 8, pp. 1433\u20131438. Chicago, IL, USA, 2008. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Appendices ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A Missing Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Proof of Theorem 4.3 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Theorem. Let $\\Pi^{*}=a r g m i n_{\\Pi}\\{J(Q,\\Pi,\\psi_{Q},\\psi_{V})\\}$ , then there are a set of optimal local policies $\\{\\pi_{i}^{*}\\}$ such that $\\pi_{i}^{*}=a r g m i n_{\\pi_{i}}J_{i}(Q_{i},\\pi_{i})$ , $\\forall i\\in N$ , and $\\Pi^{*}=\\{\\pi_{i}^{*},\\;i\\in\\mathcal{N}\\}$ . ", "page_idx": 12}, {"type": "text", "text": "Proof. We first consider the local objection function: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r}{J_{i}(Q_{i},\\pi_{i})=\\mathbb{E}_{\\mathcal{D}^{E}}\\left[Q_{i}(o_{i},a_{i})-\\gamma\\mathbb{E}_{o_{i}^{\\prime}\\sim P(\\cdot|S,A)}\\left[V_{i}^{Q,\\pi}(o_{i}^{\\prime})\\right]\\right]-(1-\\gamma)\\mathbb{E}_{o_{i}^{0}}\\left[V_{i}^{Q,\\pi}(o_{i}^{0})\\right]}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "From this we can see that that $J_{i}(Q_{i},\\pi_{i})$ is minimized (over $\\pi_{i}$ ) if each value function $V_{i}^{Q,\\pi}(o_{i}^{\\prime})$ is maximized (over $\\pi_{i}$ ). Moreover, from the definition $V_{i}^{Q,\\pi}(o_{i})\\,=\\,\\mathbb{E}_{a_{i}\\sim\\pi_{i}(o_{i}|a_{i})}[Q_{i}(o_{i},a_{i})\\,-\\,$ $\\log\\pi_{i}(a_{i}\\mid o_{i})]$ , we see that the value of $V_{i}^{Q,\\pi}(o_{i})$ is only dependent of $Q_{i}(o_{i},a_{i})$ and $\\pi_{i}(a_{i}|o_{i})$ for all $a_{i}\\in A_{i}$ . It follows that $V_{i}^{Q,\\pi}(o_{i})$ achieves its maximization at: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pi_{i}^{*}(\\cdot|o_{i})=\\operatorname*{argmax}_{\\pi_{i}(\\cdot|o_{i})}\\left\\{\\mathbb{E}_{a_{i}\\sim\\pi_{i}(o_{i}|a_{i})}[Q_{i}(o_{i},a_{i})-\\log\\pi_{i}(a_{i}\\mid o_{i})]\\right\\}}\\\\ &{\\qquad\\qquad=\\left\\{\\pi_{i}^{*}(a_{i}|o_{i})=\\frac{\\exp(Q_{i}(o_{i},a_{i}))}{\\sum_{a_{i}^{\\prime}}\\exp(Q(o_{i},a_{i}^{\\prime}))},\\;\\forall a_{i}\\in\\mathcal{A}_{i}\\right\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Now let $\\Pi^{*}=\\{\\pi_{i}^{*},\\;i\\in\\mathcal{N}\\}$ be a joint policy (or a set of local policies) defined as in (12). It follows that $V_{i}^{Q,\\pi}(o_{i})\\leq V_{i}^{Q,\\pi^{*}}(o_{i})$ for any $i\\in\\mathcal{N}$ . ", "page_idx": 12}, {"type": "text", "text": "We now look at the joint objective function $J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})$ , defined as ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})=\\displaystyle\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\Big[Q^{t o t}(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}\\big[V_{Q,\\Pi}^{t o t}(S^{\\prime})\\big]\\Big]}\\\\ &{\\hphantom{=\\quad}-(1-\\gamma)\\mathbb{E}_{S^{0}}\\big[V_{Q,\\Pi}^{t o t}(S_{0})\\big]}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Given $V_{Q,\\Pi}^{t o t}(S)=\\mathcal{M}_{\\psi_{V}}(\\mathbf{V}^{Q,\\Pi}(S))$ , our mixing structure ensures that $\\mathcal{M}_{\\psi_{V}}(\\mathbf{V}^{Q,\\Pi}(S))$ is monotonically increasing with respect to each element of $\\mathbf{V}^{Q,\\Pi}(S)$ . Additionally, for any joint policy $\\Pi\\,=\\,\\{\\pi_{i},\\,\\,i\\,\\in\\,{\\mathcal N}\\}$ , we have $V_{i}^{Q,\\pi}(o_{i})\\,\\leq\\,V_{i}^{Q,\\pi^{*}}(o_{i})$ for any $i\\in\\mathcal{N}$ . Combining this with the monotonicity of the mixing network, we obtain: ", "page_idx": 12}, {"type": "equation", "text": "$$\nV_{Q,\\Pi}^{t o t}(S)\\leq V_{Q,\\Pi^{*}}^{t o t}(S),\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "which implies: ", "page_idx": 12}, {"type": "equation", "text": "$$\nJ(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})\\ge J(\\mathbf{Q},\\Pi^{*},\\psi_{Q},\\psi_{V})\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "for any joint policy $\\Pi$ . This also implies $\\Pi^{*}=\\operatorname*{argmin}_{\\Pi}\\big\\{J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})\\big\\}$ , as desired. ", "page_idx": 12}, {"type": "text", "text": "A.2 Proof of Proposition 4.4 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proposition. The max-min problem in (6) is equivalent to the following maximization problem: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\operatorname*{max}_{Q}\\Big\\{J(Q,\\psi_{Q},\\psi_{V})=\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\Big[Q^{t o t}(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot|S,A)}\\big[V_{Q}^{t o t}(S^{\\prime})\\big]\\Big]\\Big\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad-\\left(1-\\gamma\\right)\\mathbb{E}_{S^{0}}\\big[V_{Q}^{t o t}(S_{0})\\big]\\Big\\}}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $V_{Q}^{t o t}(S)=\\mathcal{M}_{\\psi_{V}}\\big(V^{Q}(S)\\big)$ , and $\\begin{array}{r}{V^{Q}(S)=\\Big(V_{i}^{Q}(o_{i})\\overset{d e f}{=}\\log(\\sum_{a_{i}}\\exp(Q_{i}(o_{i},a_{i}))),\\;\\;i\\in\\mathcal{N}\\Big).}\\end{array}$ Moreover, let $Q^{*}$ be optimal to (7), then the global optimal policy can be recovered as: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\Pi^{*}=\\left\\{\\pi_{i}^{*}(o_{i},a_{i})=\\frac{\\exp(Q_{i}(o_{i},a_{i})))}{\\sum_{a_{i}^{\\prime}}\\exp(Q_{i}(o_{i},a_{i}^{\\prime}))}\\right\\vert\\,i\\in\\mathcal{N}\\right\\}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Proof. We can leverage the result stated in Theorem 4.3 to prove the proposition. That is, Theorem 4.3 tells us that $J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})$ is minimized at $\\Pi^{*}=\\{\\pi_{i}^{*},\\ i\\in\\mathcal{N}\\}$ such that ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\Pi^{*}=\\left\\{\\pi_{i}^{*}(o_{i},a_{i})=\\frac{\\exp(Q_{i}(o_{i},a_{i})))}{\\sum_{a_{i}^{\\prime}}\\exp(Q_{i}(o_{i},a_{i}^{\\prime}))}\\right\\vert\\,i\\in\\mathcal{N}\\right\\}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Therefore, the max-min problem can be converted to a maximization one within the Q-space: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\operatorname*{max}_{\\mathbf{Q}}\\operatorname*{min}_{\\Pi}\\{J(\\mathbf{Q},\\Pi,\\psi_{Q},\\psi_{V})\\}=\\operatorname*{max}_{\\mathbf{Q}}J(\\mathbf{Q},\\Pi^{*},\\psi_{Q},\\psi_{V})\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Moreover, it is well-known the maximal value $V_{i}^{Q,\\pi^{*}}(o_{i})$ can be computed as a log-sum-exp function of $Q_{i}(o_{i},a_{i})$ [14] as: ", "page_idx": 13}, {"type": "equation", "text": "$$\nV_{i}^{Q,\\pi^{*}}(o_{i}){=}\\log\\left(\\sum_{a_{i}}\\exp(Q_{i}(o_{i},a_{i}))\\right)=V_{i}^{Q}(o_{i})\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "which confirm our claims. ", "page_idx": 13}, {"type": "text", "text": "A.3 Proof of Theorem 4.5 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Theorem $J(\\pmb{Q},\\psi_{Q},\\psi_{V})$ is (strictly) concave in $Q$ . As a result, (7) always yield a unique solution within the $Q$ -space. ", "page_idx": 13}, {"type": "text", "text": "Proof. To prove the concavity, we will prove that each component of the objective function, i.e. $Q^{t o t}(S,A)$ and $V_{Q}^{t o t}(S)$ are concave in Q, keeping in mind that the mixing networks have nonnegative weights and convex activations. We will need the following lemmas to validate the main claim. ", "page_idx": 13}, {"type": "text", "text": "Lemma A.1. Any feed-forward mixing networks $\\mathcal{M}(\\pmb{X})$ constructed with non-negative weights and non-decreasing convex activation functions (such as ReLU or ELU or Maxout) is convex and non-decreasing in $X$ . ", "page_idx": 13}, {"type": "text", "text": "Proof. Any $N$ -layer feed-forward network with input $\\mathbf{X}$ can be defined recursively as ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{f^{0}(\\mathbf{X})=\\mathbf{X}}}\\\\ {{f^{n}(\\mathbf{X})=\\sigma^{n}\\Big(f^{n-1}(\\mathbf{X})\\Big)\\times W_{n}+b_{n},\\;n=1,\\ldots,N}}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\sigma^{n}$ is a set of activation functions applied to each element of vector $f^{n-1}(\\mathbf{X})$ , and $W_{n}$ and $b_{n}$ are the weights and biases, respectively, at layer $n$ . Therefore, we will prove the result by induction, i.e., $f^{n}(\\mathbf{X})$ is convex and non-decreasing in $\\mathbf{X}$ for $n=0,\\ldots.$ Here we note that $f^{n}(\\mathbf{X})$ is a vector, so when we say ${}^{\\star}f^{n}(X)$ is convex and non-decreasing in $X^{\\bullet}$ , it means each element of $f^{n}(\\mathbf{X})$ is convex and non-decreasing in $\\mathbf{X}$ . ", "page_idx": 13}, {"type": "text", "text": "We first see that claim indeed holds for $n=0$ . Now let us assume that, $f^{n-1}(\\mathbf{X})$ is convex and non-decreasing in $\\mathbf{X}$ , we will prove that $f^{n}(\\mathbf{X})$ is also convex and non-decreasing in $\\mathbf{X}$ . The nondecreasing property can be easily verified as we can see, given two vector $\\mathbf{X}$ and $\\mathbf{X}^{\\prime}$ such that $\\mathbf{X}\\geq\\mathbf{X}^{\\prime}$ (element-wise comparison), then we have the following chain of inequalities ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{f^{n-1}(\\mathbf{X})\\stackrel{(a)}{\\geq}f^{n-1}(\\mathbf{X}^{\\prime})\\quad\\qquad\\qquad\\qquad\\quad}\\\\ {\\sigma^{n}(f^{n-1}(\\mathbf{X}))\\stackrel{(b)}{\\geq}\\sigma^{n}(f^{n-1}(\\mathbf{X}^{\\prime}))\\quad\\qquad\\qquad\\quad}\\\\ {\\sigma^{n}(f^{n-1}(\\mathbf{X}))\\times W_{n}+b_{n}\\stackrel{(c)}{\\geq}\\sigma^{n}(f^{n-1}(\\mathbf{X}^{\\prime}))\\times W_{n}+b_{n}}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $(a)$ is due to the induction assumption that $f^{n-1}(\\mathbf{X})$ is non-decreasing in $\\mathbf{X},\\mathit{\\Omega}(b)$ is because $\\sigma^{n}$ are also non-decreasing, and $(c)$ is because the weights $W_{n}$ is non-negative. ", "page_idx": 13}, {"type": "text", "text": "To verify the convexity of $f^{n}(\\mathbf{X})$ ,we will show that for any $\\mathbf{X},\\mathbf{X^{\\prime}}$ , and any scalar $\\alpha\\in(0,1)$ , the following holds ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\alpha f^{n}(\\mathbf{X})+(1-\\alpha)f^{n}(\\mathbf{X})\\geq f^{n}(\\alpha\\mathbf{X}+(1-\\alpha)\\mathbf{X^{\\prime}})\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "To this end, we write ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\alpha f^{n}(\\mathbf{X})+(1-\\alpha)f^{n}(\\mathbf{X}^{\\prime})=\\left(\\alpha\\sigma^{n}(f^{n-1}(\\mathbf{X}))+(1-\\alpha)\\sigma^{n}(f^{n-1}(\\mathbf{X}^{\\prime}))\\right)\\times W_{n}+b_{n}}\\\\ &{\\overset{(d)}{\\geq}\\left(\\sigma^{n}\\Big(\\alpha f^{n-1}(\\mathbf{X})+(1-\\alpha)f^{n-1}(\\mathbf{X}^{\\prime})\\Big)\\times W_{n}+b_{n}\\right.}\\\\ &{\\overset{(e)}{\\geq}\\Big(\\sigma^{n}\\Big(f^{n-1}(\\alpha\\mathbf{X}+(1-\\alpha)\\mathbf{X}^{\\prime})\\Big)\\times W_{n}+b_{n}}\\\\ &{=f^{n}(\\alpha\\mathbf{X}+(1-\\alpha)\\mathbf{X}^{\\prime})}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $(d)$ is due to the assumption that activation functions $\\sigma^{n}$ are convex and $W_{n}\\geq0$ , and $(e)$ is because \u03b1f n\u22121( $\\mathbf{X})+(1-\\alpha)^{because $f^{n-1}(\\mathbf{X})$ is convex in $\\mathbf{X}$ , by the induction assumption) and the activation functions $\\sigma^{n}$ is non-decreasing and $W_{n}\\geq0$ . So, we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\alpha f^{n}(\\mathbf{X})+(1-\\alpha)f^{n}(\\mathbf{X}^{\\prime})\\geq f^{n}(\\alpha\\mathbf{X}+(1-\\alpha)\\mathbf{X}^{\\prime})\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "implying that $f^{n}(\\mathbf{X})$ is convex in $\\mathbf{X}$ . We then complete the induction proof and conclude that $f^{n}(\\mathbf{X})$ is convex and non-decreasing in $\\mathbf{X}$ for any ${n=0,...,N}$ . \u53e3 ", "page_idx": 14}, {"type": "text", "text": "Lemma A.2. For any $i\\in\\mathcal{N}$ , ", "page_idx": 14}, {"type": "equation", "text": "$$\nV_{i}^{Q}(o_{i})=\\log\\left(\\sum_{a_{i}}\\exp(Q_{i}(o_{i},a_{i}))\\right)\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "are convex in $\\b{Q}$ . ", "page_idx": 14}, {"type": "text", "text": "Lemma A.2 can be easily verified, as $V_{i}^{Q}(o_{i})$ has the log-sum-exp form, so it is convex in Q [6]. ", "page_idx": 14}, {"type": "text", "text": "Lemma A.3. Let $\\pmb{X}(\\pmb{Q})\\,=\\,(X_{i}(\\pmb{Q}),\\ldots,X_{m}(\\pmb{Q}))$ be a vector of size m where each element is a convex function of $Q$ , i.e., $X_{i}(\\pmb{Q})$ is convex in $Q$ for any $i\\in\\mathcal N$ , then $\\mathcal{M}(\\pmb{X}(\\pmb{Q}))$ is convex in $\\boldsymbol{Q}$ , where $\\mathcal{M}(\\pmb{X}(\\pmb{Q}))$ is a mixing network of non-negative weights and convex activations. ", "page_idx": 14}, {"type": "text", "text": "Proof. We will make used general properties of convexity to verify the claim, i.e., we will prove that, for any two vector $\\mathbf{Q}$ and $\\bar{\\mathbf{Q}}^{\\prime}$ , and any scalar $\\alpha\\in(0,1)$ , the following inequality always holds ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\alpha\\mathcal{M}(\\mathbf{X}(\\mathbf{Q}))+(1-\\alpha)\\mathcal{M}(\\mathbf{X}(\\mathbf{Q}^{\\prime}))\\geq\\mathcal{M}(\\mathbf{X}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime}))\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "According to Lemma A.1, we know that $\\mathcal{M}(\\mathbf{X})$ is convex in $\\mathbf{X}$ , thus: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\boldsymbol{\\alpha}\\boldsymbol{\\mathcal{M}}(\\mathbf{X}(\\mathbf{Q}))+(1-\\alpha)\\boldsymbol{\\mathcal{M}}(\\mathbf{X}(\\mathbf{Q}))\\geq\\boldsymbol{\\mathcal{M}}(\\boldsymbol{\\alpha}\\mathbf{X}(\\mathbf{Q})+(1-\\alpha)\\mathbf{X}(\\mathbf{Q}^{\\prime}))}\\\\ {=\\boldsymbol{\\mathcal{M}}\\left(\\boldsymbol{\\alpha}\\boldsymbol{X}_{2}(\\mathbf{Q})+(1-\\alpha)\\boldsymbol{X}_{1}(\\mathbf{Q}^{\\prime})\\right)}\\\\ {\\cdots\\quad\\ }\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Moreover, since $X_{i}(\\mathbf{Q})$ is convex in $\\mathbf{Q}$ for all $i\\ \\in\\ N$ , we have $\\alpha X_{i}(\\mathbf{Q})+(1-\\alpha)X_{i}(\\mathbf{Q}^{\\prime})\\ \\geq$ $X_{i}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime})$ . In addition, from the monotonicity of $\\mathcal{M}(\\mathbf{X})$ in each element $X_{i}$ , we have ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{{\\cal M}\\left(\\!\\!\\begin{array}{c}{\\alpha X_{1}(\\mathbf{Q})+(1-\\alpha)X_{1}(\\mathbf{Q}^{\\prime})}\\\\ {\\alpha X_{2}(\\mathbf{Q})+(1-\\alpha)X_{2}(\\mathbf{Q}^{\\prime})}\\\\ {\\cdots}\\\\ {\\alpha X_{m}(\\mathbf{Q})+(1-\\alpha)X_{m}(\\mathbf{Q}^{\\prime})}\\end{array}\\!\\!\\right)\\geq{\\mathcal M}\\left(\\!\\!\\begin{array}{c}{X_{1}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime})}\\\\ {X_{2}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime})}\\\\ {\\cdots}\\\\ {X_{m}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime})}\\end{array}\\!\\!\\right)={\\mathcal M}(\\mathbf{X}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime}))}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Combine (18) and (19) we get ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\alpha\\mathcal{M}(\\mathbf{X}(\\mathbf{Q}))+(1-\\alpha)\\mathcal{M}(\\mathbf{X}(\\mathbf{Q}))\\geq\\mathcal{M}(\\mathbf{X}(\\alpha\\mathbf{Q}+(1-\\alpha)\\mathbf{Q}^{\\prime}))\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "which validates (16), completing our proof for Lemma A.3. ", "page_idx": 14}, {"type": "text", "text": "We now go back to the main result. First, considering $\\mathcal{M}_{\\psi_{Q}}(-\\mathbf{Q}(S,A))$ , we can see that each element of $-\\mathbf{Q}(S,A)$ is linear in Q. Thus, Lemma A.3 tells us that $\\mathcal{M}_{\\psi_{Q}}(-\\mathbf{Q}(S,A))$ is convex in $\\mathbf{Q}$ . As a result, $Q^{t o t}(S,A)$ is concave in Q. Similarly, $\\mathbf{V}^{Q}(S)$ is also a vector where each element $V_{i}^{Q}(o_{i})$ is convex in $\\mathbf{Q}$ (Lemma A.2), thus $\\mathcal{M}_{\\psi_{V}}(\\mathbf{V}^{Q}(S))$ (and $V_{Q}^{t o t}(S))$ is also convex in Q . Therefore, the objective function of our $\\mathrm{IL}$ , formulated as ", "page_idx": 15}, {"type": "equation", "text": "$$\n^{I}(\\mathbf{Q},\\psi_{Q},\\psi_{V})=\\!\\!\\sum_{(S,A)\\in\\mathcal{D}^{E}}\\left[Q^{t o t}(S,A)-\\gamma\\mathbb{E}_{S^{\\prime}\\sim P(\\cdot\\vert S,A)}\\left[V_{Q}^{t o t}(S^{\\prime})\\right]\\right]-(1-\\gamma)\\mathbb{E}_{S^{0}}\\left[V_{Q}^{t o t}(S_{0})\\right],\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "should be concave in $\\mathbf{Q}$ . We further see that $V_{i}^{Q}(o_{i}),\\forall o_{i}$ , are strictly convex in $\\mathbf{Q}$ , implying that $J(\\mathbf{Q},\\psi_{Q},\\psi_{V})$ is also strictly concave in ${\\bf Q}_{\\mathrm{~\\,~}}$ , as desired. ", "page_idx": 15}, {"type": "text", "text": "It is important to note that the above result only holds if $Q_{i}$ are independent. It is not the case if $Q_{i}$ , for some $i$ , share a common network structure. This is also the case of the IQVDN considered in the main paper, i.e., the global reward and value function $R^{t o t}$ and $V^{t o t}$ are sums of the corresponding local functions, but $Q_{i}$ share the same neural network structure. ", "page_idx": 15}, {"type": "text", "text": "B Additional Details ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "B.1 MIFQ Algorithm ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "The detailed steps of our MIFQ algorithm are shown in Algo. 1 below: ", "page_idx": 15}, {"type": "table", "img_path": "xrbgXJomJp/tmp/809d1c619458daa9160d608c4c2855a6ac7f2a90b1861a8cd076a64a96faffe1.jpg", "table_caption": [], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "B.2 Global versus Local Value Equations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We discuss equations that describe the relationship between the Q and $\\mathrm{v}$ functions, which we refer to as Value equations. Specifically, we consider Eq. 5 for local value functions and Eq. 2 for global ones. So far, we have assumed that the Value equations hold for all local agents (i.e., Eq. 5 holds), ensuring that distribution-matching is executed well at the individual level. An alternative approach to the factorized learning is to assume that the Value equations hold at the global level, i.e., ", "page_idx": 15}, {"type": "equation", "text": "$$\nV_{Q,\\Pi}^{t o t}(S)=\\mathbb{E}_{A\\sim\\Pi(A|S)}\\left[Q^{t o t}(S,A)-\\log\\Pi(A|S)\\right].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Recall that the local value equations can be written as ", "page_idx": 15}, {"type": "equation", "text": "$$\nV_{i}^{Q,\\pi}(o_{i})=\\mathbb{E}_{\\pi_{i}(a_{i}\\vert o_{i})}\\left[Q_{i}(o_{i},a_{i})-\\log\\pi_{i}(a_{i}\\vert o_{i})\\right]\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "We then can see that the local and global Value equations, generally, cannot hold simultaneously, in particular when $V^{t o t}$ and $Q^{t o t}$ have different mixing structures. Thus, we can only ensure the validity of either the local Value equations in (5) or the global one in (20). It can be seen that, while adhering to (5) is highly tractable due to several advantages shown above (i.e., IGC, non-adversarial training, and convexity), using (20) to compute $V^{t o t}$ is highly impractical as due to several reasons. First, it cannot help avoid adversarial training as there is no closed form solution for the minimization over $\\Pi$ , so one needs to learn both Q and $\\Pi$ adversarially. Second, it requires sampling over joint actions approximate $V^{t o t}$ , which shares the same computational issue as the centralized approach discussed in Section 4.1.1, namely, the exponentially large joint action space make the training process highly inefficient. ", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "B.3 Experimental Settings ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Each environment has different a observation space, state dimension, and action space. Therefore, we use different hyper-parameters on each task to try to make all algorithms work stably. Moreover, due to limitations in computing resources, especially random access memory, we reduce the buffer size to 5000 on two hardest tasks, Miner and SMACv2, to be more efficient in running time with parallel workers. More details are available in Table 2. We use four High-Performance Computing (HPC) clusters for training and evaluating all tasks. Specifically, each HPC cluster has a workload with an NVIDIA L40 GPU 48 GB GDDR6, 32 Intel-CPU cores, and 100GB RAM. In terms of model architecture, Figure 1 shows our proposed model structure with mixing networks based on QMIX algorithm [29]. ", "page_idx": 16}, {"type": "table", "img_path": "xrbgXJomJp/tmp/729d72a61e003f708dbdf20c5d3d6e87ace3f3d63636c5fecdca0d71126d3010.jpg", "table_caption": ["Table 2: Hyper-parameters. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "B.4 Ablation Study - Non-convex Mixing Networks ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Recall that when convex activation functions are used in building mixing networks, our Theorem 4.5 shows that the objective function of the multi-agent inverse soft Q-learning is convex as long as the mixing networks are constructed with non-negative weights and convex activations. This convexity property guarantees the optimization objective is well-behaved and has an unique optimization solution with Q-space, leading to the effectiveness of the IL process. Therefore, in the practical implementation of our algorithm, we chose the ELU activation function. In this section, we empirically demonstrate the impact of convex activation functions by examining the performance of our algorithm when non-convex activation functions such as sigmoid or tanh are used in mixing networks instead of convex once. Table 3 reports the winrates and rewards, and Figure 4 shows the learning curves of different approaches. These results clearly show that the $E L U$ activation significantly outperform those using non-convex activations (i.e., sigmoid, tanh), for both versions MIFQ (Soft) and MIFQ (Det). ", "page_idx": 16}, {"type": "text", "text": "B.5 Ablation Study - Comparison with SAC-based IQ-learn ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this section, we explore the performance of SAC-IQ, an adaptation of the Soft Actor-Critic (SAC) algorithm combined with IQ-Learn, tailored for multi-agent settings. SAC-IQ employs a centralized Q function alongside decentralized critics, maintaining adherence to the original objective of IQLearn. This approach is evaluated across 9 distinct tasks within two environments: SMACv2 and Gold Miner. For SMACv2, we consider scenarios with varying team sizes, specifically 5vs5 and 10vs10. In the Gold Miner environment, we assess performance across three difficulty levels: easy, medium, and hard. ", "page_idx": 16}, {"type": "text", "text": "Table 3: Winrate and reward comparisons between different activation functions (the values are percentages for SMACv2 and Miner, and rewards for MPE.) ", "page_idx": 17}, {"type": "table", "img_path": "xrbgXJomJp/tmp/5281ea78173c422a1a852247bd64b6621a724f0a2ad1a33abfc426f3a65b8270.jpg", "table_caption": ["Figure 4: Convergence curves of MIFQ with different activation functions "], "table_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "xrbgXJomJp/tmp/783a5cf3c92d5737fd2b007a2cac22a9acb7806eebc0f6d0a29c64a5a6b0b557.jpg", "img_caption": [], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "The results, detailed in Table 4, illustrate that SAC-IQ demonstrates commendable performance when compared to other baselines such as Behavior Cloning (BC), Independent IQ-Learn (IIQ), and Multi-Agent Generative Adversarial Imitation Learning (MAGAIL). However, it does not surpass the effectiveness of our proposed methods. Figure 5 provides a visual representation of the learning curves, highlighting the training dynamics of SAC-IQ in comparison to other approaches. This visualization underscores the competitive nature of SAC-IQ while also affirming the superior performance of our methods in these challenging multi-agent environments. ", "page_idx": 17}, {"type": "text", "text": "B.6 Experimental Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In this section, we present the experimental details for the SMACv2, Miner, and MPE tasks, with varying numbers of expert demonstrations. These details complement the box plots shown in Figure 3 in the main paper. Tables 4-9 report win rates (as percentage values) for SMACv2 and Miner tasks with the number of trajectories ranging from 128 to 4096. Table 10 reports final rewards for MPE tasks with the number of trajectories ranging from 1 to 128. We also plot the learning curves of these experiments in Figure 7. ", "page_idx": 17}, {"type": "text", "text": "Figure 5: Learning curves of SAC-IQ compared with other baselines and our methods. ", "text_level": 1, "page_idx": 18}, {"type": "image", "img_path": "xrbgXJomJp/tmp/838b7c7894fda5efbeacf830c1afc8899a9a8c38f3e0dbe32ec1cb61b50ffa8d.jpg", "img_caption": [], "img_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "xrbgXJomJp/tmp/3af115a3d4c390d7aaef2e9da033541029e7a5aff89a99bc079011a819d5baaa.jpg", "table_caption": ["Table 4: Winning rate (percentage) of SAC-IQ compared with other baselines and our methods. "], "table_footnote": [], "page_idx": 18}, {"type": "table", "img_path": "xrbgXJomJp/tmp/7c2a1c5e97c98ede673a8d49f97121b1622d4298083a00d51da569f9e711ccf6.jpg", "table_caption": ["Table 5: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 128 "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "Figure 6: Comparison with different numbers of demonstrations. X-axis: winning rate/final score.   \nY-axis: number of demonstrations. ", "page_idx": 19}, {"type": "image", "img_path": "xrbgXJomJp/tmp/dad88478caafae06848c15f343cbaf8cce0610050fb06c02db992bb3cf3490f1.jpg", "img_caption": [], "img_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "xrbgXJomJp/tmp/d087a9ca412c713e2739f26ea033fae01d965e371af4fd9dde39583bd4c56525.jpg", "table_caption": ["Table 6: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 256 "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "xrbgXJomJp/tmp/fc9860ab2095e33986c9c7b2161418f2ca2373d9c61f10e2011f42b300d37737.jpg", "table_caption": ["Table 7: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 512 "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "xrbgXJomJp/tmp/cfb3631e3d449606e4e5debcc7020570e3d5529c8b7cdeb51c568c07d36c2a24.jpg", "table_caption": ["Table 8: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 1024 "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "xrbgXJomJp/tmp/fe5ffbe0191fe54710124e7f1de1e413e6b37942832657f333a4d5409d2d5a44.jpg", "table_caption": ["Table 9: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 2048 "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "xrbgXJomJp/tmp/2d9d9dba332758228221b9b8da3619af9603ce9f0714a96c5d2bde726ccd5ac0.jpg", "table_caption": ["Table 10: Results in percentage on SMACv2 & Miner, the number of expert trajectories is: 4096 "], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "xrbgXJomJp/tmp/c1e3fe53ca898e1d17b3c4c0025d759edf21346939af7674134db39850c0a759.jpg", "table_caption": ["Table 11: Results on MPEs, the number of expert trajectories is: [1, 2, 4, 8, 16, 32, 64, 128] "], "table_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "xrbgXJomJp/tmp/f1fa445a6e913c390f80b616b8105462bb9ef6cbb774d2e3cf0c2bce58ac2a9a.jpg", "img_caption": ["Figure 7: Learning curves with different numbers of demonstrations. "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Our abstract includes our main claims reflecting our main contributions and finding. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 22}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We created a subsection in the Conclusion to discuss limitations. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 22}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: All the proofs of the theorems and propositions stated in the main paper are provided in the appendix with clear references. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 23}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide details on the environments and hyper-parameter settings in the appendix. We also uploaded our source code for re-productivity purposes. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 23}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The data we used, along with our source code, has been uploaded with the main paper. We have also provided sufficient instructions for their use. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 24}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: All the details are provided in the main paper and appendix. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 24}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: Following standard practices, we reported mean scores and standard deviations, computed by running several random seeds, for comparison. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We provides all the details in the appendix. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 25}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: [TODO] ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 25}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: The paper develops a general imitation learning algorithm for multi-agent games, which we have tested only in simulated environments. As such, we do not foresee any direct societal impact. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 25}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 26}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: [TODO] ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 26}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We have provided clear citations to the source code and data we used in the paper. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our source code is submitted alongside the paper, accompanied by sufficient instructions. We will share the code publicly for re-producibility or benchmarking purposes. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 27}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] Justification: [TODO] ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 27}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: [TODO] ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}]