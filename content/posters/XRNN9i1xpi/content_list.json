[{"type": "text", "text": "Continuous Product Graph Neural Networks ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Aref Einizade ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Fragkiskos D. Malliaros ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "LTCI, T\u00e9l\u00e9com Paris CentraleSup\u00e9lec, Inria Institut Polytechnique de Paris Universit\u00e9 Paris-Saclay aref.einizade@telecom-paris.fr fragkiskos.malliaros@centralesupelec.fr ", "page_idx": 0}, {"type": "text", "text": "Jhony H. Giraldo LTCI, T\u00e9l\u00e9com Paris Institut Polytechnique de Paris jhony.giraldo@telecom-paris.fr ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Processing multidomain data defined on multiple graphs holds significant potential in various practical applications in computer science. However, current methods are mostly limited to discrete graph filtering operations. Tensorial partial differential equations on graphs (TPDEGs) provide a principled framework for modeling structured data across multiple interacting graphs, addressing the limitations of the existing discrete methodologies. In this paper, we introduce Continuous Product Graph Neural Networks (CITRUS) that emerge as a natural solution to the TPDEG. CITRUS leverages the separability of continuous heat kernels from Cartesian graph products to efficiently implement graph spectral decomposition. We conduct thorough theoretical analyses of the stability and over-smoothing properties of CITRUS in response to domain-specific graph perturbations and graph spectra effects on the performance. We evaluate CITRUS on well-known traffic and weather spatiotemporal forecasting datasets, demonstrating superior performance over existing approaches. The implementation codes are available at https://github.com/ArefEinizade2/CITRUS. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Multidomain (tensorial) data defined on multiple interacting graphs [1\u20133], referred to as multidomain graph data in this paper, extend the traditional graph machine learning paradigm, which typically deals with single graphs [2,4]. Tensors, which are multi-dimensional generalizations of matrices (order-2 tensors), appear in various fields like hyperspectral image processing [5], video processing [6], recommendation systems [7], spatiotemporal analysis [8], and brain signal processing [9]. Despite the importance of these applications, learning from multidomain graph data has received little attention in the existing literature [2,10]. Therefore, developing graph-learning strategies for these tensorial data structures holds significant promise for various practical applications. ", "page_idx": 0}, {"type": "text", "text": "The main challenge for learning from multidomain graph data is creating efficient frameworks that model joint interactions across domain-specific graphs [10, 11]. Previous work in this area has utilized discrete graph filtering operations in product graphs (PGs) [10, 12] from the field of graph signal processing (GSP) [13]. However, these methods inherit the well-known issues of oversmoothing and over-squashing from regular graph neural networks (GNNs) [14\u201316], which restricts the graph\u2019s receptive field and hinders long-range interactions [17]. Additionally, these methods often require computationally intensive grid searches to tune hyperparameters and are typically limited to two-domain graph data, such as spatial and temporal dimensions [10,12,18,19]. ", "page_idx": 0}, {"type": "text", "text": "In regular non-tensorial GNNs, continuous GNNs (CGNNs) emerge as a solution to over-smoothing and over-squashing [20]. CGNNs are neural network solutions to partial differential equations (PDEs) on graphs [20,21], like the heat or wave equation. The solution to these PDEs introduces the exponential graph filter as a continuous infinity-order generalization of the typical discrete graph convolutional filters [20]. Due to the differentiability of exponential graph filters w.r.t. the graph receptive fields, CGNNs can benefit from both global and local message passing by adaptively learning graph neighborhoods, alleviating the limitations of discrete GNNs [17,20,22]. Despite these advantages, CGNNs mostly rely on a single graph and lack a principled framework for learning joint multi-graph interactions. ", "page_idx": 1}, {"type": "text", "text": "In this paper, we introduce tensorial PDE on graphs (TPDEGs) to address the limitations of existing PG-based GNN and CGNN frameworks. TPDEGs provide a principled framework for modeling multidomain data residing on multiple interacting graphs that form a Cartesian product graph heat kernel. We then propose Continuous Product Graph Neural Networks (CITRUS) as a continuous solution to TPDEGs. We efficiently implement CITRUS using a small subset of eigenvalue decompositions (EVDs) from the factor graphs. Additionally, we conduct theoretical and experimental analyses of the stability and over-smoothing properties of CITRUS. We evaluate our proposed model on spatiotemporal forecasting tasks, demonstrating that CITRUS achieves state-of-the-art performance compared to previous Temporal-Then-Spatial (TTS), Spatial-Then-Temporal (STT), and Temporal-and-Spatial (T&S) frameworks. Our main contributions are summarized as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We introduce TPDEGs to handle multidomain graph data. This leads to our proposal of a continuous graph filtering operation in Cartesian product spaces, called CITRUS, which naturally emerges as the solution to TPDEGs.   \n\u2022 We conduct extensive theoretical and experimental analyses to evaluate the stability and oversmoothing properties of CITRUS.   \n\u2022 We test CITRUS on spatiotemporal forecasting tasks, demonstrating that our model achieves state-of-the-art performance. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We divide the related work into two parts covering the fundamental and applicability aspects. ", "page_idx": 1}, {"type": "text", "text": "Fundamentals. The study of PGs is a well-established field in mathematics and signal processing [23, 24]. However, to the best of our knowledge, the graph-time convolutional neural network (GTCNN) [10, 18] model is the only GNN-based framework addressing neural networks in PGs. GTCNN defines a discrete filtering operation in PGs to jointly process spatial and temporal data for forecasting applications. Due to the discrete nature of the graph polynomial filters in GTCNN, an expensive grid search is required to correctly tune the graph filter orders, leading to significant computational overhead. Additionally, this discrete aspect restricts node-wise receptive fields, making long-range communication challenging [17, 20]. Furthermore, GTCNN is limited to two factor graphs (space and time), limiting its applicability to general multidomain graph data. In contrast, CITRUS overcomes these limitations by i) employing continuous graph filtering, and ii) providing a general framework for any number of factor graphs. ", "page_idx": 1}, {"type": "text", "text": "Applicability. We explore spatiotemporal analysis as a specific application of PG processing. Early works in GSP for spatiotemporal forecasting, such as the graph polynomial vector auto-regressive moving average (GP-VARMA) and GP-VAR models [25], do not utilize PGs. Modern GNNbased architectures can be broadly classified into TTS and STT frameworks. TTS networks, due to their sequential nature, often encounter propagation information bottlenecks during training [8]. Conversely, STT architectures enhance node representations first and then integrate temporal information, but the use of recurrent neural networks (RNNs) in the aggregation stages leads to high computational complexity. Additionally, there are T&S frameworks designed for simultaneous learning of spatiotemporal representations [8,26], where the fusion of temporal and spatial modules is crucial. However, similar to STT networks, T&S frameworks also face challenges with computational complexity [8] and their discretized block-wise nature, which can limit adaptive graph receptive fields [20,26]. ", "page_idx": 1}, {"type": "text", "text": "CITRUS leverages joint multidomain learning by exploiting continuous separable heat kernels as factor-based functions defined on a Cartesian product graph. The continuity and differentiability ", "page_idx": 1}, {"type": "text", "text": "Factor Graphs Product Graph ", "page_idx": 2}, {"type": "text", "text": "Continuous Product Graph Function (CITRUS) ", "page_idx": 2}, {"type": "image", "img_path": "XRNN9i1xpi/tmp/062237ef1e5c4bfda7c8cb8fe2ff1c496c30381d70cc14a78e29abae73e451e7.jpg", "img_caption": ["(b) Continous product graph function in (5). "], "img_footnote": [], "page_idx": 2}, {"type": "image", "img_path": "", "img_caption": ["(a) Cartesian product graph. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "Figure 1: Illustration of key concepts of CITRUS. a) Cartesian product between three-factor graphs.   \n) Continous product graph function (CITRUS) operating on the multidomain graph data U. ", "page_idx": 2}, {"type": "text", "text": "of these filters allow the graph receptive fields to be learned adaptively during the training process, eliminating the need for a grid search. Additionally, CITRUS maintains low computational complexity by relying on the spectral decomposition of the factor graphs [17,22]. Furthermore, unlike non-graph approaches, the number of learnable parameters in CITRUS is independent of the factor graphs, ensuring scalability. ", "page_idx": 2}, {"type": "text", "text": "3 Methodology and Theoretical Analysis ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Preliminaries and notation. An undirected and weighted graph $\\mathcal{G}$ with $N$ vertices can be stated as $\\mathcal{G}=\\{\\nu,\\mathcal{E},\\mathbf{A}\\}$ . $\\mathcal{V}$ and $\\mathcal{E}$ denote the sets of the vertices and edges, respectively. ${\\bf A}\\in\\mathbb{R}^{N\\times N}$ is the adjacency matrix with $\\{\\mathbf{A}_{i j}=\\mathbf{A}_{j i}\\geq0\\}_{i,j=1}^{N}$ representing the connection between vertices, and $\\{\\mathbf{A}_{i i}=0\\}_{i=1}^{N}$ states that there are no self-loops in $\\mathcal{G}$ . The graph Laplacian ${\\bf L}\\in\\mathbb{R}^{N\\times N}$ is defined as ${\\bf L}={\\bf D}-{\\bf A}$ , where $\\mathbf{D}=\\mathrm{diag}(\\mathbf{A}\\mathbf{1})$ is the diagonal degree matrix and 1 is the all-one vector. A graph signal is a function that maps a set of nodes to the real values $x:\\mathcal{V}\\to\\mathbb{R}$ , and therefore we can represent it as $\\mathbf{x}=[x_{1},\\ldots,x_{N}]^{\\top}$ . For a vector $\\mathbf{a}=[a_{1},\\ldots,a_{N}]^{\\top}\\in\\mathbb{R}^{N\\times1}$ , $e^{\\mathbf{a}}:=[e^{a_{1}},\\dots,e^{a_{N}}]^{\\top}$ . The vectorization operator is shown as $\\operatorname{vec}(.)$ . Using the Kronecker product $\\otimes$ , Kronecker sum (aka Cartesian product) $\\bigoplus$ , and the Laplacian factors $\\mathbf{\\widetilde{\\rho}}[\\mathbf{L}_{p}\\in\\mathbb{R}^{N_{p}\\times N_{p}}\\mathbf{\\widetilde{\\rho}}]_{p=1}^{\\bullet_{P}}$ , we have the following definitions: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{{\\mathrm{i}}\\oplus_{p=1}^{P}\\mathbf{L}_{p}:=\\mathbf{L}_{P}\\oplus.\\,.\\,.\\oplus\\mathbf{L}_{1},\\;\\,\\otimes_{p=1}^{P}\\mathbf{L}_{p}:=\\mathbf{L}_{1}\\otimes.\\,.\\,.\\otimes\\mathbf{L}_{P},\\;\\,\\downarrow\\otimes_{p=1}^{P}\\mathbf{L}_{p}:=\\mathbf{L}_{P}\\otimes.\\,.\\,.\\otimes\\mathbf{L}_{1},}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the Laplacian matrix of the Cartesian product between two factor graphs can be stated as: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\oplus_{p=1}^{2}\\mathbf{L}_{p}=\\mathbf{L}_{1}\\oplus\\mathbf{L}_{2}=\\mathbf{L}_{1}\\otimes\\mathbf{I}_{N_{2}}+\\mathbf{I}_{N_{1}}\\otimes\\mathbf{L}_{2},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "with ${\\mathbf{I}}_{n}$ the identity matrix of size $n$ . See Figure 1a for an example of a Cartesian graph product between three factor graphs. A similar relationship to (2) also holds for adjacency matrices [24,27]. We define a $D$ -dimensional tensor as $\\underline{{\\mathbf{U}}}\\,\\in\\,\\mathbb{R}^{N_{1}\\times\\dots\\times N_{D}}$ . The matrix $\\underline{{\\mathbf{U}}}_{(i)}\\,\\,\\in\\,\\,\\mathbb{R}^{N_{i}\\times\\left[\\prod_{r=1,\\,r\\neq i}^{D}N_{r}\\right]}$ is the $i$ -th mode matricization of $\\textbf{U}$ [28]. The mode- $^{\\cdot i}$ tensorial multiplication of a tensor $\\mathbf{U}$ by a matrix $\\mathbf{X}\\in\\mathbb{R}^{m\\times N_{i}}$ is denoted by $\\underline{{\\mathbf{G}}}=\\underline{{\\mathbf{U}}}\\times_{i}\\mathbf{X}$ , where $\\mathbf{G}\\in\\mathbb{R}^{N_{1}\\times...\\hat{\\times}N_{i-1}\\times m\\times N_{i+1}\\times...\\times N_{D}}$ [28]. For further information about the tensor matricization and mode- $^{\\cdot n}$ product, please refer to [28,29] (especially Sections 2.4 and 2.5 in [28]). All the proofs of theorems, propositions, and lemmas of this paper are provided in the Appendix A. ", "page_idx": 2}, {"type": "text", "text": "3.1 Continuous Product Graph Neural Networks (CITRUS) ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We state the generative PDE for CITRUS as follows: ", "page_idx": 2}, {"type": "text", "text": "Definition 3.1 (Tensorial PDE on graphs (TPDEG)). Let $\\tilde{\\mathbf{U}}_{t}\\in\\mathbb{R}^{N_{1}\\times N_{2}\\times\\dots\\times N_{P}}$ be a multidomain tensor whose elements are functions of time $t$ , and let $\\{\\mathbf{L}_{p}\\in\\mathbb{R}^{N_{p}\\times N_{p}}\\}_{p=1}^{P}$ p}pP=1 be the domain-specific factor Laplacians. We can define the TPDEG as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\frac{\\partial\\underline{{\\tilde{\\mathbf{U}}}}_{t}}{\\partial t}=-\\sum_{p=1}^{P}\\underline{{\\tilde{\\mathbf{U}}}}_{t}\\times_{p}\\mathbf{L}_{p}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Theorem 3.2. Let $\\underline{{\\tilde{\\mathbf{U}}_{0}}}$ be the the initial value of $\\underline{{\\tilde{\\mathbf{U}}_{t}}}$ . The solution to the TPDEG in (3) is given by: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\underline{{\\tilde{\\mathbf{U}}}}_{t}=\\underline{{\\tilde{\\mathbf{U}}}}_{0}\\times_{1}e^{-t\\mathbf{L}_{1}}\\times_{2}e^{-t\\mathbf{L}_{2}}\\times_{3}\\dots\\times_{P}e^{-t\\mathbf{L}_{P}}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Using Theorem 3.2, we define the core function of CITRUS as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\nf(\\underline{{\\mathbf{U}}}_{l})=\\underline{{\\mathbf{U}}}_{l}\\times_{1}e^{-t_{l}\\mathbf{L}_{1}}\\times_{2}\\dots\\times_{P}e^{-t_{l}\\mathbf{L}_{P}}\\times_{P+1}\\mathbf{W}_{l}^{\\top},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\underline{{\\mathbf{U}}}_{l}\\in\\mathbb{R}^{N_{1}\\times\\dots\\times N_{P}\\times F_{l}}$ is the input tensor, $\\mathbf{W}_{l}\\in\\mathbb{R}^{F_{l}\\times F_{l+1}}$ is a matrix of learnable parameters, $t_{l}$ is the le arnable graph receptive field, and $f(\\underline{{\\mathbf{U}}}_{l})\\in\\mathbb{R}^{N_{1}\\times\\dots\\times N_{P}\\times F_{l+1}}$ is the output tensor. Figure 1b illustrates a high-level description of $f(\\underline{{\\mathbf{U}}}_{l})$ . The next proposition formulates (5) as a graph convolution defined on a product graph. ", "page_idx": 3}, {"type": "text", "text": "Proposition 3.3. The core function of CITRUS in (5) can be rewritten as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\left[f(\\underline{{\\mathbf{U}}}_{l})_{(P+1)}\\right]^{\\top}=e^{-t_{l}\\mathbf{L}_{\\diamond}}[\\underline{{\\mathbf{U}}}_{l(P+1)}]^{\\top}\\mathbf{W}_{l},}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\mathbf{L}_{\\diamond}:=\\downarrow\\oplus_{p=1}^{P}\\mathbf{L}_{p}$ is the Laplacian of the Cartesian product graph. ", "page_idx": 3}, {"type": "text", "text": "Proposition 3.3 is the main building block for implementing CITRUS. More precisely, we use the spectral decompositions of the factor graphs $\\{\\dot{\\mathbf{L}_{p}}\\,=\\,\\mathbf{V}_{p}\\dot{\\mathbf{\\Lambda}_{p}}\\mathbf{V}_{p}^{\\top}\\}_{p=1}^{P}$ and product graph $\\mathbf{\\{L}}_{\\circ}\\mathbf{\\Psi}=\\mathbf{\\Psi}$ $\\mathbf{V}_{\\circ}\\mathbf{A}_{\\circ}\\mathbf{V}_{\\circ}^{\\top}\\}$ , where $\\mathbf{V}_{\\diamond}=\\downarrow\\otimes_{p=1}^{P}\\mathbf{V}_{p}$ and $\\mathbf{\\Lambda}_{\\mathbf{\\Lambda}^{\\circ}}=\\downarrow\\oplus_{p=1}^{P}\\mathbf{\\Lambda}_{\\mathbf{\\Lambda}_{p}}$ [23]. Let $K_{p}\\;\\leq\\;N_{p}$ be the number of selected eigenvalue-eigenvector pairs of the $p$ -th factor Laplacian. When ${K_{p}}^{+}=N_{p}$ , it can be shown [17,22] that we can rewrite (6) as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\left[f(\\underline{{\\mathbf{U}}}_{l})_{(P+1)}\\right]^{\\top}={\\mathbf{V}}_{\\diamond}^{(K_{p})}\\left(\\underbrace{\\overbrace{\\{\\lambda_{l}|\\dots|\\lambda_{l}\\}}^{F_{l}\\mathrm{\\times}}}_{\\tilde{\\Lambda}_{l}}\\odot\\left({\\mathbf{V}}_{\\diamond}^{(K_{p})^{\\top}}\\left[\\underline{{\\mathbf{U}}}_{l(P+1)}\\right]^{\\top}\\right)\\right){\\mathbf{W}}_{l},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "equation", "text": "$$\n\\tilde{\\lambda}_{l}=\\downarrow\\otimes_{p=1}^{P}e^{-t_{l}\\lambda_{p}^{(K_{p})}},\\qquad\\mathbf{V}_{\\diamond}^{(K_{p})}=\\downarrow\\otimes_{p=1}^{P}\\mathbf{V}_{p}^{(K_{p})},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\lambda_{p}^{(K_{p})}\\,\\in\\,\\mathbb{R}^{K_{p}\\times1}$ and $\\mathbf{V}_{p}^{(K_{p})}\\,\\in\\,\\mathbb{R}^{N_{p}\\times K_{p}}$ are the first $K_{p}\\;\\leq\\;N_{p}$ selected eigenvalues and eigenvectors of $\\mathbf{L}_{p}$ based on largest eigenvalue magnitudes, respectively, and $\\odot$ is the pointwise multiplication operation. Finally, we can define the output of the $l$ -th layer of CITRUS as $\\underline{{\\mathbf{U}}}_{l+1(P+1)}\\dot{=}\\,\\sigma\\left(f(\\underline{{\\mathbf{U}}}_{l})_{(P+1)}\\right)$ , where $\\sigma(\\cdot)$ is some proper activation function. ", "page_idx": 3}, {"type": "text", "text": "Remark 3.4. We can consider factor-specific learnable graph receptive fields $\\{t_{l}^{(p)}\\}_{p=1}^{P}$ for formulating $\\tilde{\\lambda}_{l}$ in (8) as $\\tilde{\\lambda}_{l}=\\downarrow\\otimes_{p=1}^{P}e^{-t_{l}^{(p)}\\lambda_{p}^{(K_{p})}}$ to make CITRUS more flexible for each factor graph\u2019s receptive field. This technique can be expanded to the channel-wise graph receptive fields $\\{t_{l}^{(p,c)}\\}_{p=1,c=1}^{P,F_{l}}$ }p=1,c=1 such that the c-th column of \u02dc\u039bl in (7) is obtained by \u02dc\u03bbk,c =\u2193\u2297pP=1e\u2212tl(p,c)\u03bb(pKp). ", "page_idx": 3}, {"type": "text", "text": "Remark 3.5. Computing the EVD in the product graph $\\mathbf{L}_{\\diamond}$ in (6) has a general complexity of $\\begin{array}{r}{\\mathcal{O}([\\prod_{p=1}^{P}N_{p}]^{3})}\\end{array}$ . However, we obtain a significant reduction in complexity of $\\mathcal{O}([\\sum_{p=1}^{P}N_{p}^{3}])$ in (7) by relying upon the properties of product graphs since we perform EVD on each factor graph independently. Besides, if we rely only on the $K_{p}$ most important eigenvector-eigenvalue pairs [17] of each factor graph, we can reduce the complexity of the spectral decomposition to $\\mathcal{O}(N_{p}^{2}K_{p})$ , obtaining a general complexity of $\\begin{array}{r}{\\mathcal{O}([\\sum_{p=1}^{P}N_{p}^{2}K_{p}])}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "3.2 Stability Analysis ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We study the stability of CITRUS against possible perturbations in the factor graphs. First, as defined in the literature [30], we model the perturbation to the $p$ -th graph as an addition of an error matrix $\\mathbf{E}_{p}$ (with upper bound $\\varepsilon_{p}$ for any matrix norm $\\lVert\\cdot\\rVert\\}$ to the adjacency matrix $\\mathbf{A}_{p}$ as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\tilde{\\mathbf{A}}_{p}=\\mathbf{A}_{p}+\\mathbf{E}_{p};\\ \\ \\|\\mathbf{E}_{p}\\|\\leq\\varepsilon_{p}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Proposition 3.6. Let A and $\\tilde{\\mathbf A}$ be the true and perturbed adjacency matrix of Cartesian product graphs with the perturbation model for each factor graph described as in (9). Then, it holds that: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\tilde{\\mathbf{A}}=\\mathbf{A}+\\mathbf{E};\\ \\ \\|\\mathbf{E}\\|\\le\\sum_{p=1}^{P}\\varepsilon_{p},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where the perturbation matrix $\\mathbf{E}$ also follows the Cartesian structure $\\mathbf{E}=\\oplus_{p=1}^{P}\\mathbf{E}_{p}$ . ", "page_idx": 3}, {"type": "text", "text": "Finally, let $\\varphi(u,t)$ and $\\tilde{\\varphi}(u,t)$ be the true and perturbed output of the CITRUS model with normalized Laplacian $\\hat{{\\bf L}}_{\\odot}$ being responsible for generating $\\mathbf{U}_{t(P+1)}$ in a heat flow PDE with normalized Laplacian $\\hat{\\mathbf{L}}_{\\infty}$ as $\\begin{array}{r}{\\frac{\\partial\\varphi(u,t)}{\\partial t}=-\\hat{\\mathbf{L}}_{\\diamond}\\varphi(u,t)}\\end{array}$ in (6) [30], respectively. Then, the following theorem states that the integrated error bound on the stability properties of CITRUS is also separable when dealing with Cartesian product graphs: ", "page_idx": 4}, {"type": "text", "text": "Theorem 3.7. Consider a Cartesian product graph (without isolated nodes) with the normalized true and perturbed Laplacians $\\hat{{\\bf L}}_{\\odot}$ and $\\tilde{\\hat{\\mathbf{L}}}_{\\diamond}$ in (6). Also, assume we have the perturbation model $\\tilde{\\mathbf{A}}_{p}=\\mathbf{A}_{p}+\\mathbf{E}_{p}$ with factor error bounds $\\{\\||\\mathbf{E}_{p}|\\|\\leq\\varepsilon_{p}\\}_{p=1}^{P}$ in Proposition 3.6. Then, the stability bound on the true and perturbed outputs of CITRUS , i.e., $\\varphi(u,t)$ and $\\tilde{\\varphi}(u,t)$ , respectively, can be described by the summation of the factor stability bounds as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\|\\varphi(u,t)-\\tilde{\\varphi}(u,t)\\|=\\sum_{p=1}^{P}\\mathcal{O}(\\varepsilon_{p}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Theorem 3.7 states that the solution of the TPDEG (4) is robust w.r.t. the scale of the factor graph perturbations. This is a desired property when dealing with erroneous factor graphs, and will be numerically validated in Section 4.1. ", "page_idx": 4}, {"type": "text", "text": "3.3 Over-smoothing Analysis ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "There is a prevalent notion of describing over-smoothing in GNNs based on decaying Dirichlet energy against increasing the number of layers. This has been theoretically analyzed in related literature [20,31,32] and can be formulated [20] for the output of a continuous GNN. Precisely, it can be defined on the GNN\u2019s output $\\mathbf{U}_{t}=[\\bar{\\mathbf{u}(t)_{1}},\\bar{\\mathbf{\\xi}}.\\cdot.\\cdot,\\mathbf{u}(t)_{N}\\bar{\\mathbf{\\xi}}]^{\\top}$ , with ${\\bf u}(t)_{i}$ being the feature vector of the $i$ -th node with the degree $\\deg_{i}$ , as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{t\\to\\infty}E(\\mathbf{U}_{t})\\to0,\n$$", "text_format": "latex", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathrm{re}\\quad E(\\mathbf{U}):=\\frac{1}{2}\\sum_{(i,j)\\in\\mathcal E}\\left\\|\\frac{\\mathbf{u}_{i}}{\\sqrt{\\mathrm{deg}_{i}}}-\\frac{\\mathbf{u}_{j}}{\\sqrt{\\mathrm{deg}_{j}}}\\right\\|^{2}=\\mathrm{tr}(\\mathbf{U}^{\\top}\\hat{\\mathbf{L}}\\mathbf{U}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Inspired by (13), we extend the definition of Dirichlet energy to the tensorial case as follows: ", "page_idx": 4}, {"type": "text", "text": "Definition 3.8. (Tensorial Dirichlet energy). By considering the normalized factor Laplacians $\\{\\hat{\\mathbf{L}}_{p}\\}_{p=1}^{P}$ , we define the Tensorial Dirichlet energy for a tensor $\\underline{{\\mathbf{U}}}\\in\\mathbb{R}^{N_{1}\\times\\dots\\times N_{P}\\times F}$ as: ", "page_idx": 4}, {"type": "equation", "text": "$$\nE(\\underline{{\\mathbf{U}}}):=\\frac{1}{P}\\sum_{f=1}^{F}\\sum_{p=1}^{P}\\mathrm{tr}(\\tilde{\\mathbf{U}}_{f_{(p)}}^{\\top}\\hat{\\mathbf{L}}_{p}\\tilde{\\mathbf{U}}_{f_{(p)}}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\tilde{\\mathbf{U}}_{f_{(p)}}=\\mathbf{\\underline{{U}}}[:,\\dots,:,f]_{(p)}\\in\\mathbb{R}^{N_{p}\\times\\prod_{i\\neq p}^{P}N_{i}}$ , i.e., the $p$ -th mode matricization of the $f$ -th slice of $\\mathbf{U}$ in its $(P+1)$ -th dimension. ", "page_idx": 4}, {"type": "text", "text": "Based on the previous research in the GSP literature [27,33,34], it follows that $E(\\underline{{\\mathbf{U}}})$ in (14) can be rewritten as $E(\\underline{{\\mathbf{U}}})=\\mathrm{tr}(\\tilde{\\mathbf{U}}^{\\top}\\hat{\\mathbf{L}}\\tilde{\\mathbf{U}})$ , where $\\tilde{\\mathbf{U}}\\in\\mathbb{R}^{[\\Pi_{p=1}^{P}N_{p}]\\times F}$ , $\\tilde{\\mathbf{U}}[:,f]=\\mathrm{vec}(\\underline{{\\mathbf{U}}}[:,\\dots,:,f])$ , and $\\begin{array}{r}{\\hat{\\mathbf{L}}:=\\frac{1}{P}\\oplus_{p=1}^{P}\\hat{\\mathbf{L}}_{p}=\\oplus_{p=1}^{P}\\Big(\\frac{\\hat{\\mathbf{L}}_{p}}{P}\\Big)}\\end{array}$ . The next lemma shows interesting and applicable properties of $\\hat{\\bf L}$ . ", "page_idx": 4}, {"type": "text", "text": "Lemma 3.9. Consider $P$ factor graphs with normalized adjacencies $\\{\\hat{\\mathbf{A}}_{p}\\}_{p=1}^{P}$ and Laplacians $\\{\\hat{\\mathbf{L}}_{p}\\}_{p=1}^{P}$ . By constructing the product adjacency as $\\begin{array}{r}{\\hat{\\mathbf{A}}:=\\frac{1}{P}\\oplus_{p=1}^{P}\\hat{\\mathbf{A}}_{p}=\\oplus_{p=1}^{P}\\Big(\\frac{\\hat{\\mathbf{A}}_{p}}{P}\\Big)}\\end{array}$ , a similar Cartesian form for the product Laplacian $\\hat{\\textbf{L}}:=\\textbf{I}-\\hat{\\textbf{A}}(w i t h\\textbf{I}\\in\\mathbb{R}^{[\\Pi_{p=1}^{P}N_{p}]\\times[\\Pi_{p=1}^{P}N_{p}]}$ being the identity matrix) also holds as the following: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{\\mathbf{L}}=\\frac{1}{P}\\oplus_{p=1}^{P}\\hat{\\mathbf{L}}_{p}=\\oplus_{p=1}^{P}\\left(\\frac{\\hat{\\mathbf{L}}_{p}}{P}\\right).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Besides, the spectrum of $\\hat{\\bf L}$ is spanned across the interval of $[0,2]$ . ", "page_idx": 4}, {"type": "text", "text": "We observe in (14) that the kernel separability of Cartesian heat kernels also leads to the separability of analyzing over-smoothing in different modes of the data at hand. This is useful in cases of facing factor graphs with different characteristics. Next, we formally analyze over-smoothing in CITRUS. In our case, for the $l$ -th layer with $H_{l}$ hidden MLP layers, non-linear activations $\\sigma(\\cdot)$ and learnable weight matrices $\\{\\mathbf{W}_{l h}\\}_{h=1}^{H_{l}}$ , we define: ", "page_idx": 5}, {"type": "text", "text": "$\\begin{array}{r}{{\\mathbf{X}}_{l+1}:=f_{l}({\\mathbf{X}}_{l}),\\ \\ f_{l}({\\mathbf{X}}):=\\mathrm{MLP}_{l}(e^{-\\widehat{\\mathbf{L}}^{(t)}}{\\mathbf{X}}),\\ \\ \\mathrm{MLP}_{l}({\\mathbf{X}}):=\\sigma(\\,.\\ .\\ \\sigma(\\sigma({\\mathbf{X}}){\\mathbf{W}}_{l1}){\\mathbf{W}}_{l2}\\,.\\ .\\ {\\mathbf{W}}_{l H_{l}}),}\\end{array}$ (16) with $\\mathbf{X}_{0}$ being the initial node feature matrix, $f_{l}(\\cdot)$ is a generalized form of (6), and $e^{-\\hat{\\mathbf{L}}^{(t)}}:=\\dot{\\downarrow}$ $\\otimes_{p=1}^{P}e^{-t^{(p)}\\frac{\\hat{\\mathbf{L}}_{p}}{P}}$ , where $t^{(i)}$ is the receptive field of the $i$ -th factor graph. Then, the next theorem describes the over-smoothing criteria. ", "page_idx": 5}, {"type": "text", "text": "Theorem 3.10. For the product Laplacian $\\begin{array}{r}{\\hat{\\mathbf{L}}:=\\frac{1}{P}\\oplus_{p=1}^{P}\\hat{\\mathbf{L}}_{p}}\\end{array}$ with domain-specific receptive field $t^{(i)}$ for the $i$ -th factor graph and the activations $\\sigma(\\cdot)$ in (16) being ReLU or Leaky ReLU, we have: ", "page_idx": 5}, {"type": "equation", "text": "$$\nE(\\mathbf{X}_{l})\\leq e^{l\\left(\\ln s-\\frac{2\\tilde{t}\\tilde{\\lambda}}{P}\\right)}E(\\mathbf{X}_{0}),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $s:=\\operatorname*{sup}_{l\\in\\mathbb{N}_{+}}s_{l}$ and $\\begin{array}{r}{s_{l}:=\\prod_{h=1}^{H_{l}}s_{l h}}\\end{array}$ with $s_{l h}$ being the square of maximum singular value of $\\mathbf{W}_{l h}^{\\top}$ . Besides, $\\tilde{\\lambda}=\\lambda^{(m)}$ and $\\tilde{t}=t^{(m)}$ with $m=\\arg\\operatorname*{min}_{i}t^{(i)}\\lambda^{(i)}$ , where ${\\lambda}^{(i)}$ is the smallest non-zero eigenvalue of $\\hat{\\bf L}_{i}$ . ", "page_idx": 5}, {"type": "text", "text": "Corollary 3.11. When $l\\rightarrow\\infty$ , $E({\\bf X}_{l})$ exponentially converges to 0, when: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\ln s-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}<0.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Theorem 3.10 shows that the factor graph with the smallest non-zero eigenvalue (spectral gap) multiplied by its receptive field dominates the overall over-smoothing. The less the spectral gap, the less probability the factor graph is connected [14]. So, we can focus on the (much smaller) factor graphs instead of the resulting massive product graph. These theoretical findings are experimentally validated in Section 4.2. ", "page_idx": 5}, {"type": "text", "text": "4 Experimental Results ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we experimentally validate the theoretical discussions regarding the stability and over-smoothing analysis and use CITRUS in real-world spatiotemporal forecasting tasks. Similarly, we conduct ablation studies regarding CITRUS in spatiotemporal forecasting. We compare CITRUS against several state-of-the-art methods in forecasting. The results on the case of more than two factor graphs and descriptions of the state-of-the-art are provided in Appendix B and C, respectively, alongside the additional theoretical and experimental discussions in Sections D-I. The implementation codes are available at https://github.com/ArefEinizade2/CITRUS. ", "page_idx": 5}, {"type": "text", "text": "4.1 Experimental Stability Analysis ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We generate a 600-node product graph consisting of two connected Erd\u02ddos-R\u00e9nyi (ER) factor graphs with $N_{1}~=~20$ , $N_{2}~=~30$ , and edge probabilities $p_{\\mathtt{E R}}^{(1)}\\,=\\,p_{\\mathtt{E R}}^{(2)}\\,=\\,0.1$ for node regression. We utilize $15\\%$ of the nodes in the product graph as the test set, $15\\%$ of the remaining nodes as validation, and the rest of the nodes for training. We use a three-layer generative model to generate the outputs based on (6). The continuous parameters for the factor graphs are set as $t^{(1)}=2$ and $t^{(2)}=3$ . The initial product graph signal $\\mathbf{X}^{(0)}\\in\\mathbb{R}^{N\\times F_{0}}$ is generated from the normal distribution with $F_{0}=6$ . Each layer\u2019s MLP of the generation model has only one layer with the number of hidden units $\\{5,4,2\\}$ . We add noise to the factor (SNRs) (in terms of db) of $\\{\\infty,20,10,0,-10\\}$ . Therefore, we construct a two-layer CITRUS and use one-layer MLP for each with $F_{1}=F_{2}=4$ to learn the representation in different SNRs to study the effect of each factor graph\u2019s noise on the stability performance of the network. ", "page_idx": 5}, {"type": "image", "img_path": "XRNN9i1xpi/tmp/14d2ac6169e287e02fa663c2aa54477c3e95f2004c36401d92e0c088fe4d6ed9.jpg", "img_caption": ["Figure 2: Stability analysis vs. different SNR scenarios, related the results in Theorem 3.7. adjacency matrices with signal-to-noise ratios "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Figure 2 shows the averaged prediction error in MSE between the true and predicted outputs over 10 random realizations. Firstly, we notice that increasing the SNR for each factor graph improves performance, illustrating the stability properties of CITRUS. Therefore, the effect of each factor graph\u2019s stability on the overall stability is well depicted in this figure, confirming the theoretical findings in Theorem 3.7. For instance, in ${\\mathrm{SNR}}{=}10$ for the first graph, the performance is still severely affected by the stability for the second graph, shown by color in Figure 2. Finally, we observe that the standard deviation of the predictions is smaller for larger values of SNR, illustrating CITRUS\u2019s robustness. ", "page_idx": 6}, {"type": "text", "text": "4.2 Experimental Over-smoothing Analysis ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "For experimentally validating Theorem 3.10, we first generate a initial graph signal $\\mathbf{X}_{0}\\in\\breve{\\mathbb{R}}^{N\\times F_{0}}$ with $F_{0}=$ 12 on a 150-node Cartesian product graph with $N_{1}~=~10$ , $N_{2}~=~15$ Therefore, we consider a 10-layer generation process based on (6) with only one-layer MLP for each layer and $\\{F_{l}=\\stackrel{\\cdot}{12}-l\\}_{l=1}^{10}$ , where the weight matrices are generated from normal adicstitrviabtiuotino nf.u ncWtie osne laencdt $\\{t_{l}=1\\}_{l=1}^{10}$ ", "page_idx": 6}, {"type": "image", "img_path": "XRNN9i1xpi/tmp/9a83a91bda2ce8192fd396ad789b938ae020c6fc5e2d798eb8b41aecc9bb9a24.jpg", "img_caption": ["Figure 3: Over-smoothing analysis using Theorem 3.10. left: $\\begin{array}{r}{\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}<0}\\end{array}$ , right: $\\begin{array}{r}{\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}>0}\\end{array}$ . "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "The over-smoothing phenomenon strongly depends on the smallest spectral gap of the factor graphs as stated in Theorem 3.10. We consider two scenarios of $\\begin{array}{r}{\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}<0}\\end{array}$ and $\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}>\\bar{0}$ . The $p_{\\mathtt{E R}}^{(1)}=0.05$ and $p_{\\mathrm{ER}}^{(2)}=0.95$ iamnidt,  twhehiirl e mina xtihem uotmh esri, $p_{\\mathtt{E R}}^{(\\hat{1})}=p_{\\mathtt{E R}}^{(2)}=0.1$ . sSe os, etwtien sgcsa lree sthulet  iMn matrices by 100 and 2.5 to l ngular values. The $\\lambda=0.06$ and $s=0.{\\dot{0}}04\\pm10^{-5}$ for the first scenario; and $\\lambda=0.07$ and $s=7.691\\pm10^{\\circ-6}$ for the other. ", "page_idx": 6}, {"type": "text", "text": "We depict the outputs y(l) = log EE((XXl0)) and the theoretical upper bound $\\begin{array}{r}{y(l)\\,=\\,l(\\ln s_{l}\\,-\\,\\frac{2}{P}\\tilde{t}_{l}\\tilde{\\lambda})}\\end{array}$ across the number layers $l$ in Figure 3. We observe that in the left plot where $\\begin{array}{r}{\\{\\ln s_{l}-\\frac{2}{P}\\tilde{t}_{l}\\tilde{\\lambda}<0\\}_{l=1}^{10}}\\end{array}$ , the theoretical upper bound approximates well the actual outputs during over-smoothing as stated in Theorem 3.10. On the opposite, on the right plot, in which $\\begin{array}{r}{\\{\\ln s_{l}-\\frac{\\bar{2}}{P}\\tilde{t}_{l}\\tilde{\\lambda}>0\\}_{l=1}^{10}}\\end{array}$ , the theoretical upper bound is loose. We leave for future work finding a tighter upper bound. ", "page_idx": 6}, {"type": "text", "text": "4.3 Experiments on Real-world Data ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate and compare CITRUS on real-world traffic and weather spatiotemporal forecasting tasks, where we follow the settings in [10] for pre-processing and training-validation-testing data partitions. All hyperparameters were optimized on the validation set with the details in Section I. We use Adam as optimizer. ", "page_idx": 6}, {"type": "text", "text": "Traffic forecasting. Here, we work on two well-known datasets for spatiotemporal forecasting: MetrLA [35] and PemsBay [36]. MetrLA consists of recorded traffic data for four months on 207 highways in Los Angeles County with 5-minute resolutions [35]. PemsBay contains 5-minute traffic load data for six months associated with 325 stations in the Bay Area by the same setting with [36]. The spatial and temporal graphs are created by applying Gaussian kernels on the node distances [37] and simple path graphs, respectively. The task for these datasets is, by having the last 30 minutes $T=6$ steps) of traffic recordings, we need to predict the following 15-30-60 minutes, i.e., $H=3$ , $H=6$ , and $H=12$ steps ahead horizons. Our model first uses a linear encoder network, followed by three CITRUS blocks with 3-layer MLPs for each, where $\\{F_{l}^{\\mathrm{MLP}}=64\\}_{l=1}^{3}$ . Therefore, the output node embeddings are concatenated with the initial spatiotemporal data. Finally, we use a linear decoding layer to transform the learned representations to the number of needed horizons. We exploit residual connections within each CITRUS block to stabilize the training process [17]. We use the mean absolute error (MAE) as the loss function and consider a maximum of 300 epochs. The best model on the validation set is applied to the unseen test set. We compare CITRUS against previous methods using MAE, mean absolute percentage error (MAPE), and root mean squared error (RMSE). ", "page_idx": 6}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/81f21c7bd246ef6c41ed095854254fec2033c9d14b43963a6687b8ae069d440f.jpg", "table_caption": ["Table 1: Traffic forecasting comparison between CITRUS and previous methods. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/fb5525a48799fdfdbc3baa9d7b9bc2f833cc2912bbd9e622e6afcad03cef2da5.jpg", "table_caption": ["Table 2: Weather forecasting comparison (by rNMSE) between CITRUS and previous methods. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Table 1 presents the forecasting results on the MetrLA and PemsBay datasets. We observe that, given the abundant training data in these datasets, the NN-based methods outperform the classic GSP-based methods like ARIMA [35], G-VARMA [25], and GP-VAR [25]. Similarly, the GNN-based models are superior compared to non-graph algorithms like FC-LSTM. More importantly, CITRUS outperforms state-of-the-art baselines in most metrics, especially in larger numbers of horizons $(H>3)$ ). ", "page_idx": 7}, {"type": "text", "text": "Weather forecasting. We also test CITRUS for weather forecasting in the Molene [43] and NOAA [44] datasets. The Molene dataset provides recorded temperature measurements for 744 hourly intervals over 32 measurement stations in a region in France. For the NOAA, which is associated with regions in the U.S., the temperature measurements were recorded for 8, 579 hourly intervals over 109 stations. The pre-processing and data curation settings were similar to prior works on these datasets [10,25]. The task here is by having the last 10 hours of measurements, we should predict the next $\\{1:5\\}$ hours. For the Molene dataset, the embedding dimension and the initial linear layer of the CITRUS blocks are 16, while no MLP modules have been used. Regarding NOAA, we set the dimension and the initial linear layer of the CITRUS blocks as 16, and use 3-layer MLPs for channel mixing in each block. The CITRUS blocks have the last activation as a Leaky ReLU. We use MSE as the loss function and consider root-normalized MSE (rNMSE) as the evaluation metric. ", "page_idx": 7}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/15b9597a3b661ad06e05d8f339b3620afa17f3d5c255a4c4e3268f3e1580a4f8.jpg", "table_caption": ["Table 3: Ablation study on comparison between the proposed CITRUS and typically ST pipelines. "], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/753a9599be9fe24cedd9d801cbeff3751fc17e5d968b8ced8c081096854c9633.jpg", "table_caption": ["Table 4: Training time (per epoch) and forecasting results vs. number of selected eig-eiv on MetrLA. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Table 2 illustrates the results of the weather forecasting task. We observe that CITRUS show superior forecasting performance compared to previous methods in all forecasting horizons. We note that the SGP model [42], which is a scalable architecture, is the second-best performing method in Molene, possibly due to the small scale of this dataset. On the contrary, the NOAA dataset is larger, so models with higher parameter budgets perform better. ", "page_idx": 8}, {"type": "text", "text": "4.4 Ablation Study and Hyperparameter Sensitivity Analysis ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Ablation study. The ablation study concerns the CITRUS modules responsible for jointly learning spatiotemporal couplings. To this end, we use two well-known architectures: TTS and STT. Therefore, we evaluate four possible configurations: i) TTS, where we first apply an RNN-based network (here, GRU), and then the outputs are fed into a regular GNN; ii) STT, which is exactly the opposite of the TTS; iii) Continuous TTS (CTTS), where we replace the GNN in TTS with a CGNN; and iv) Continous STT (CSTT), which is the opposite of CTTS. We report the results of this ablation study on the MetrLA dataset in Table 3. We observe that CITRUS has superior results probably due to learning joint (and not sequential) spatiotemporal couplings by modeling these dependencies using product graphs with learnable receptive fields. We also observe that CTTS and CSTT outperform their discrete counterparts TTS and STT, probably due to the learning of adaptive graph neighborhoods instead of relying on 1-hop connections in regular GNNs. ", "page_idx": 8}, {"type": "text", "text": "Hyperparameter sensitivity analysis. The sensitivity analysis is related to the number of selected eigenvector-eigenvalue (eig-eiv) pairs of the factor Laplacians. We select eigenvector-eigenvalue pairs in $k\\in\\{2,10,\\bar{5}0,100,15\\bar{0},200\\}$ out of 207 components in the MetrLA dataset. Table 4 presents the forecasting results in MAE along with the training time (per epoch) of this ablation study. We observe that selecting 50 eigenvector-eigenvalue pairs is enough to get good forecasting performance while having a fast training time. This experiment illustrates the advantages of CITRUS for accelerating training and keeping the performance as consistent as possible. ", "page_idx": 8}, {"type": "text", "text": "5 Conclusion and Limitations ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this paper, we proposed CITRUS, a novel model for jointly learning multidomain couplings from product graph signals based on tensorial PDEs on graphs (TPDEGs). We modeled these representations as separable continuous heat graph kernels as solutions to the TPDEG. Therefore, we showed that the underlying graph is actually the Cartesian product of the domain-specific factor graphs. We rigorously studied the stability and over-smoothing aspects of CITRUS theoretically and experimentally. Finally, as a proof of concept, we use CITRUS to tackle the traffic and weather spatiotemporal forecasting tasks on public datasets, illustrating the superior performance of our model compared to state-of-the-art methods. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "An interesting future direction for our framework could involve adapting it to handle other types of graph products, such as Kronecker and Strong graph products [23, 24]. Future efforts will also focus on finding tighter and more general upper bounds in the stability and over-smoothing analyses. For example, we will explore the possible relationships between the size of the factor graphs and these properties, either in a general form or for specific well-studied structures, such as ER graphs. Additionally, we plan to investigate more challenging real-world applications of the proposed framework, especially in scenarios involving more than two factor graphs. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported by the center Hi! PARIS and ANR (French National Research Agency) under the JCJC project GraphIA (ANR-20-CE23-0009-01). ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Y. L. Xu, K. Konstantinidis, and D. P. Mandic, \u201cMulti-graph tensor networks,\u201d in Advances in Neural Information Processing Systems - Workshop, 2020. [2] Y. L. Xu, K. Konstantinidis, and D. P. Mandic, \u201cGraph tensor networks: An intuitive framework for designing large-scale neural learning systems on multiple domains,\u201d arXiv preprint arXiv:2303.13565, 2023. [3] F. Monti, M. Bronstein, and X. Bresson, \u201cGeometric matrix completion with recurrent multigraph neural networks,\u201d in Advances in Neural Information Processing Systems, 2017. [4] T. N. Kipf and M. Welling, \u201cSemi-supervised classification with graph convolutional networks,\u201d in International Conference on Learning Representations, 2017. [5] X. Song, K. Wu, and L. Chai, \u201cBrain network analysis of schizophrenia patients based on hypergraph signal processing,\u201d IEEE Transactions on Image Processing, vol. 32, pp. 4964\u2013 4976, 2023. [6] N. Shahid, F. Grassi, and P. Vandergheynst, \u201cTensor robust PCA on graphs,\u201d in IEEE International Conference on Acoustics, Speech and Signal Processing, 2019. [7] G. Ortiz-Jim\u00e9nez, M. Coutino, S. P. Chepuri, and G. Leus, \u201cSparse sampling for inverse problems with tensors,\u201d IEEE Transactions on Signal Processing, vol. 67, no. 12, pp. 3272\u20133286, 2019. [8] A. Cini, I. Marisca, D. Zambon, and C. Alippi, \u201cGraph deep learning for time series forecasting,\u201d arXiv preprint arXiv:2310.15978, 2023. [9] G. Mishne, R. Talmon, R. Meir, J. Schiller, M. Lavzin, U. Dubin, and R. R. Coifman, \u201cHierarchical coupled-geometry analysis for neuronal structure and activity pattern discovery,\u201d IEEE Journal of Selected Topics in Signal Processing, vol. 10, no. 7, pp. 1238\u20131253, 2016.   \n[10] M. Sabbaqi and E. Isufi, \u201cGraph-time convolutional neural networks: Architecture and theoretical analysis,\u201d IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 45, no. 12, pp. 14625\u201314638, 2023.   \n[11] A. Einizade and S. H. Sardouie, \u201cLearning product graphs from spectral templates,\u201d IEEE Transactions on Signal and Information Processing over Networks, vol. 9, pp. 357\u2013372, 2023.   \n[12] A. Einizade, S. Nasiri, S. H. Sardouie, and G. D. Clifford, \u201cProductGraphSleepNet: Sleep staging using product spatio-temporal graph learning with attentive temporal aggregation,\u201d Neural Networks, vol. 164, pp. 667\u2013680, 2023.   \n[13] A. Ortega, P. Frossard, J. Kova\u02c7cevi\u00b4c, J. M. Moura, and P. Vandergheynst, \u201cGraph signal processing: Overview, challenges, and applications,\u201d Proceedings of the IEEE, vol. 106, no. 5, pp. 808\u2013828, 2018.   \n[14] K. Oono and T. Suzuki, \u201cGraph neural networks exponentially lose expressive power for node classification,\u201d in International Conference on Learning Representations, 2020.   \n[15] C. Cai and Y. Wang, \u201cA note on over-smoothing for graph neural networks,\u201d in International Conference on Machine Learning - Workshop, 2020.   \n[16] J. H. Giraldo, K. Skianis, T. Bouwmans, and F. D. Malliaros, \u201cOn the trade-off between over-smoothing and over-squashing in deep graph neural networks,\u201d in ACM International Conference on Information and Knowledge Management, 2023.   \n[17] M. Behmanesh, M. Krahn, and M. Ovsjanikov, \u201cTIDE: Time derivative diffusion for deep learning on graphs,\u201d in International Conference on Machine Learning, 2023.   \n[18] E. Isufi and G. Mazzola, \u201cGraph-time convolutional neural networks,\u201d in IEEE Data Science and Learning Workshop, 2021.   \n[19] J. A. Castro-Correa, J. H. Giraldo, M. Badiey, and F. D. Malliaros, \u201cGegenbauer graph neural networks for time-varying signal reconstruction,\u201d IEEE Transactions on Neural Networks and Learning Systems, vol. 35, no. 9, pp. 11734\u201311745, 2024.   \n[20] A. Han, D. Shi, L. Lin, and J. Gao, \u201cFrom continuous dynamics to graph neural networks: Neural diffusion and beyond,\u201d Transactions on Machine Learning Research, 2024.   \n[21] L.-P. Xhonneux, M. Qu, and J. Tang, \u201cContinuous graph neural networks,\u201d in International Conference on Machine Learning, 2020.   \n[22] N. Sharp, S. Attaiki, K. Crane, and M. Ovsjanikov, \u201cDiffusionNet: Discretization agnostic learning on surfaces,\u201d ACM Transactions on Graphics, vol. 41, no. 3, pp. 1\u201316, 2022.   \n[23] A. Sandryhaila and J. M. Moura, \u201cBig data analysis with signal processing on graphs: Representation and processing of massive data sets with irregular structure,\u201d IEEE Signal Processing Magazine, vol. 31, no. 5, pp. 80\u201390, 2014.   \n[24] R. Hammack, W. Imrich, and S. Klav\u017ear, Handbook of product graphs. CRC press, 2011.   \n[25] E. Isufi, A. Loukas, N. Perraudin, and G. Leus, \u201cForecasting time series with varma recursions on graphs,\u201d IEEE Transactions on Signal Processing, vol. 67, no. 18, pp. 4870\u20134885, 2019.   \n[26] J. Gao and B. Ribeiro, \u201cOn the equivalence between temporal and static equivariant graph representations,\u201d in International Conference on Machine Learning, 2022.   \n[27] S. K. Kadambari and S. P. Chepuri, \u201cProduct graph learning from multi-domain data with sparsity and rank constraints,\u201d IEEE Transactions on Signal Processing, vol. 69, pp. 5665\u20135680, 2021.   \n[28] T. G. Kolda and B. W. Bader, \u201cTensor decompositions and applications,\u201d SIAM Review, vol. 51, no. 3, pp. 455\u2013500, 2009.   \n[29] N. D. Sidiropoulos, L. De Lathauwer, X. Fu, K. Huang, E. E. Papalexakis, and C. Faloutsos, \u201cTensor decomposition for signal processing and machine learning,\u201d IEEE Transactions on Signal Processing, vol. 65, no. 13, pp. 3551\u20133582, 2017.   \n[30] Y. Song, Q. Kang, S. Wang, K. Zhao, and W. P. Tay, \u201cOn the robustness of graph neural diffusion to topology perturbations,\u201d in Advances in Neural Information Processing Systems, 2022.   \n[31] F. D. Giovanni, J. Rowbottom, B. P. Chamberlain, T. Markovich, and M. M. Bronstein, \u201cUnderstanding convolution on graphs via energies,\u201d Transactions on Machine Learning Research, 2023.   \n[32] T. K. Rusch, M. Bronstein, and S. Mishra, \u201cA survey on oversmoothing in graph neural networks,\u201d SAM Research Report, 2023.   \n[33] M. Indibi and S. Aviyente, \u201cLow-rank and smooth tensor recovery on Cartesian product graphs,\u201d in IEEE International Conference on Sampling Theory and Applications, 2023.   \n[34] J. S. Stanley, E. C. Chi, and G. Mishne, \u201cMultiway graph signal processing on tensors: Integrative analysis of irregular geometries,\u201d IEEE Signal Processing Magazine, vol. 37, no. 6, pp. 160\u2013173, 2020.   \n[35] Y. Li, R. Yu, C. Shahabi, and Y. Liu, \u201cDiffusion convolutional recurrent neural network: Datadriven traffic forecasting,\u201d in International Conference on Learning Representations, 2018.   \n[36] D. I. Shuman, S. K. Narang, P. Frossard, A. Ortega, and P. Vandergheynst, \u201cThe emerging field of signal processing on graphs: Extending high-dimensional data analysis to networks and other irregular domains,\u201d IEEE Signal Processing Magazine, vol. 30, no. 3, pp. 83\u201398, 2013.   \n[37] A. Cini and I. Marisca, \u201cTorch Spatiotemporal,\u201d 3 2022.   \n[38] Z. Wu, S. Pan, G. Long, J. Jiang, and C. Zhang, \u201cGraph WaveNet for deep spatial-temporal graph modeling,\u201d in International Joint Conference on Artificial Intelligence, 2019.   \n[39] C. Zheng, X. Fan, C. Wang, and J. Qi, \u201cGMAN: A graph multi-attention network for traffic prediction,\u201d in AAAI Conference on Artificial Intelligence, 2020.   \n[40] B. Yu, H. Yin, and Z. Zhu, \u201cSpatio-temporal graph convolutional networks: a deep learning framework for traffic forecasting,\u201d in International Joint Conference on Artificial Intelligence, 2018.   \n[41] L. Ruiz, F. Gama, and A. Ribeiro, \u201cGated graph recurrent neural networks,\u201d IEEE Transactions on Signal Processing, vol. 68, pp. 6303\u20136318, 2020.   \n[42] A. Cini, I. Marisca, F. M. Bianchi, and C. Alippi, \u201cScalable spatiotemporal graph neural networks,\u201d in AAAI Conference on Artificial Intelligence, 2023.   \n[43] B. Girault, \u201cStationary graph signals using an isometric graph translation,\u201d in IEEE European Signal Processing Conference, 2015.   \n[44] A. Arguez, I. Durre, S. Applequist, R. S. Vose, M. F. Squires, X. Yin, R. R. Heim, and T. W. Owen, \u201cNOAA\u2019s 1981\u20132020 US climate normals: an overview,\u201d Bulletin of the American Meteorological Society, vol. 93, no. 11, pp. 1687\u20131697, 2012.   \n[45] K. B. Petersen, M. S. Pedersen, et al., \u201cThe matrix cookbook,\u201d Technical University of Denmark, vol. 7, no. 15, p. 510, 2008.   \n[46] Z. Zhou, Q. Huang, G. Lin, K. Yang, L. Bai, and Y. Wang, \u201cGReTo: Remedying dynamic graph topology-task discordance via target homophily,\u201d in International Conference on Learning Representations, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "The appendix contains the proof of the claimed theoretical statements (Section A), descriptions of the compared methods (Section C), the standard deviation of the results (Section D), homophilyheterophily trade-off (Section E), the case of inexact Cartesian product graphs (Section F), how to choose the appropriate number of eigenvalue-eigenvector pairs (Section G), the effect of graph receptive fields on the over-smoothing (Section H) and hyperparameter details (Section I), respectively. ", "page_idx": 12}, {"type": "text", "text": "A Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Proof of Theorem 3.2 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof. For obtaining the derivative of $\\frac{\\partial\\underline{{\\mathbf{U}}}_{t}}{\\partial t}$ from $e^{-t{\\bf L}_{p}}$ (for $p=1,\\ldots,P)$ in (4), we first express \u2202\u2202Utt from the claimed solution in (4) as follows: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\frac{\\partial\\mathbf{U}_{t}}{\\partial t}=\\sum_{p=1}^{P}\\mathbf{\\underline{{U}}}_{t,p},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\underline{{\\mathbf{U}}}_{t,p}:=\\underline{{\\mathbf{U}}}_{0}\\times_{1}e^{-t\\mathbf{L}_{1}}\\times_{2}\\dots\\times_{p-1}e^{-t\\mathbf{L}_{p-1}}\\times_{p}\\left(-\\mathbf{L}_{p}e^{-t\\mathbf{L}_{p}}\\right)\\times_{p+1}e^{-t\\mathbf{L}_{p+1}}\\times_{p+2}\\dots\\times_{P}e^{-t\\mathbf{L}_{P}}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Now, by performing mode- $p$ unfolding operation on $\\underline{{\\mathbf{U}}}_{t,p}$ , we have: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\underline{{\\mathbf{U}}}_{t,p}_{(p)}=-\\mathbf{L}_{p}e^{-t\\mathbf{L}_{p}}\\underline{{\\mathbf{U}}}_{0\\left(p\\right)}\\left(e^{-t\\mathbf{L}_{P}}\\otimes e^{-t\\mathbf{L}_{P-1}}\\otimes\\ldots\\cdot e^{-t\\mathbf{L}_{p+1}}\\otimes e^{-t\\mathbf{L}_{p-1}}\\otimes\\ldots\\otimes e^{-t\\mathbf{L}_{1}}\\right)^{\\top}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "On the other hand: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\underline{{\\mathbf{U}}}_{t(p)}=e^{-t\\mathbf{L}_{p}}\\underline{{\\mathbf{U}}}_{0(p)}\\left(e^{-t\\mathbf{L}_{P}}\\otimes\\ldots e^{-t\\mathbf{L}_{p+1}}\\otimes e^{-t\\mathbf{L}_{p-1}}\\otimes\\ldots\\otimes e^{-t\\mathbf{L}_{1}}\\right)^{\\top}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Therefore, by combining (21) and (22), one can write: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\underline{{\\mathbf{U}}}_{t,p_{\\left(p\\right)}}=-\\mathbf{L}_{p}\\underline{{\\mathbf{U}}}_{t\\left(p\\right)},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "which is the mode- $p$ unfolding of the following equation: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\underline{{\\mathbf{U}}}_{t,p}=-\\underline{{\\mathbf{U}}}_{t}\\times_{p}\\underline{{\\mathbf{L}}}_{p},\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "and the proof is completed. ", "page_idx": 12}, {"type": "text", "text": "A.2 Proof of Theorem 3.3 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof. First, we prove the following lemma about the separability the heat kernels define on product graphs w.r.t. the factor graphs: ", "page_idx": 12}, {"type": "text", "text": "Lemma A.1. The exponential graph kernel $e^{t{\\bf L}_{\\odot}}$ on a Cartesian product graph $\\mathbf{L}_{\\diamond}:=\\oplus_{p=1}^{P}\\mathbf{L}_{p}$ can be Kronecker-factored into its factor-based graph kernels as $e^{t\\mathbf{L}_{\\diamond}}=\\otimes_{p=1}^{P}e^{t\\mathbf{L}_{p}}$ . ", "page_idx": 12}, {"type": "text", "text": "Proof. Using the pairwise summation property of the factor eigenvalues in a Cartesian product, one can write: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{e^{t{\\mathbf{L}}_{\\diamond}}=e^{t\\left(\\oplus_{p=1}^{P}{\\mathbf{L}}_{p}\\right)}}\\\\ &{\\qquad=\\left(\\otimes_{p=1}^{P}{\\mathbf{V}}_{p}\\right)e^{t\\left(\\oplus_{p=1}^{P}{\\mathbf{A}}_{p}\\right)}\\left(\\otimes_{p=1}^{P}{\\mathbf{V}}_{p}\\right)^{\\top}}\\\\ &{\\qquad=\\left(\\otimes_{p=1}^{P}{\\mathbf{V}}_{p}\\right)\\left(\\otimes_{p=1}^{P}e^{t{\\mathbf{A}}_{p}}\\right)\\left(\\otimes_{p=1}^{P}{\\mathbf{V}}_{p}\\right)^{\\top}}\\\\ &{\\qquad=\\otimes_{p=1}^{P}e^{t{\\mathbf{L}}_{p}},}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $\\mathbf{V}_{p},\\,\\lambda_{i}^{(p)}$ , and $\\mathbf{\\boldsymbol{\\Lambda}}_{p}$ are the eigenmatrix, $i$ th eigenvalue, and the diagonal eigenvalue matrix corresponding to the $p$ th Laplacian $\\mathbf{L}_{p}$ . Note that, in the related literature, this property has also been proved from different points of view, e.g., [34]. \u53e3 ", "page_idx": 12}, {"type": "text", "text": "Next, by performing mode- $(P+1)$ unfolding on both sides of (5), one can write: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{(\\mathcal{L}_{l}(\\underline{{\\mathbf{U}}}_{l}))_{(P+1)}=\\mathbf{W}_{l}^{\\top}\\underline{{\\mathbf{U}}}_{l(P+1)}\\left[\\downarrow\\otimes_{p=1}^{P}e^{-t_{l}\\mathbf{L}_{p}}\\right]^{\\top}}\\\\ &{\\quad\\to\\left[(\\mathcal{L}_{l}(\\underline{{\\mathbf{U}}}_{l}))_{(P+1)}\\right]^{\\top}=\\overbrace{\\left[\\downarrow\\otimes_{p=1}^{P}e^{-t_{l}\\mathbf{L}_{p}}\\right]}^{e^{-t_{l}\\hat{\\mathbf{L}}_{\\diamond}}}\\underbrace{\\mathbf{U}_{l}^{\\top}}_{l(P+1)}\\mathbf{W}_{l}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "A.3 Proof of Proposition 3.6 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof. The proof is presented by construction. Therefore, we first show it is true for the case of $P=2$ as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\tilde{\\mathbf{A}}=\\tilde{\\mathbf{A}}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\tilde{\\mathbf{A}}_{2}}\\\\ &{\\quad=(\\mathbf{A}_{1}+\\mathbf{E}_{1})\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes(\\mathbf{A}_{2}+\\mathbf{E}_{2})}\\\\ &{\\quad=\\overbrace{(\\mathbf{A}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\mathbf{A}_{2})}^{\\mathbf{A}}+\\overbrace{(\\mathbf{E}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\mathbf{E}_{2})}^{\\mathbf{E}}}\\\\ &{\\quad=\\mathbf{A}+\\mathbf{E}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Then, by assuming the theorem holds for the case of $P=K$ and the definitions of $\\tilde{\\mathbf{A}}_{K}^{\\prime}:=\\oplus_{p=1}^{K}\\tilde{\\mathbf{A}}_{p}$ and $\\tilde{\\mathbf{A}}_{K}^{\\prime}:=\\oplus_{p=1}^{K}\\tilde{\\mathbf{A}}_{p}$ , we next show it also holds for $P=K+1$ as follows: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\tilde{\\mathbf{A}}=\\oplus_{p=1}^{K+1}\\tilde{\\mathbf{A}}_{p}=\\overbrace{(\\oplus_{p=1}^{K}\\tilde{\\mathbf{A}}_{p})}^{\\tilde{\\mathbf{A}}_{K}^{\\prime}}\\oplus\\tilde{\\mathbf{A}}_{K+1}=\\tilde{\\mathbf{A}}_{K}^{\\prime}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\tilde{\\mathbf{A}}_{K+1}}\\\\ &{\\quad=(\\mathbf{A}_{K}^{\\prime}+\\mathbf{E}_{K}^{\\prime})\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes(\\mathbf{A}_{K+1}+\\mathbf{E}_{K+1})}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad\\overbrace{(\\mathbf{A}_{K}^{\\prime}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\mathbf{A}_{K+1})}^{\\mathbf{A}=\\oplus_{p=1}^{K+1}\\mathbf{E}_{p}}+\\overbrace{(\\mathbf{E}_{K}^{\\prime}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\mathbf{E}_{K+1})}^{\\mathbf{E}=\\oplus_{p=1}^{K+1}\\mathbf{E}_{p}}}\\\\ &{\\quad=\\mathbf{A}+\\mathbf{E}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "For proving the upper bound of the norm of $\\mathbf{E}$ , in a similar approach to the previous proof, we first prove for the case of $P=2$ as: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\|{\\bf E}\\|=\\|{\\bf E}_{1}\\otimes{\\bf I}_{2}+{\\bf I}_{1}\\otimes{\\bf E}_{2}\\|\\leq\\|{\\bf E}_{1}\\otimes{\\bf I}_{2}\\|+\\|{\\bf I}_{1}\\otimes{\\bf E}_{2}\\|}\\\\ {\\displaystyle\\leq\\widehat{\\||{\\bf E}_{1}\\|}\\cdot\\widehat{\\||{\\bf I}_{2}\\|}+\\widehat{\\||{\\bf I}_{1}\\|}\\cdot\\widehat{\\||{\\bf E}_{2}\\|}=\\varepsilon_{1}+\\varepsilon_{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Using a similar approach to the proof in (28), we assume the theorem holds for $P=K$ as $\\|\\mathbf{E}\\|\\leq$ $\\textstyle\\sum_{p=1}^{K}\\varepsilon_{p}$ , and, based on this information, then, we prove the theorem for the case of $P=K+1$ as follows: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\|\\mathbf{E}\\|=\\|\\mathbf{E}_{K}^{\\prime}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes\\mathbf{E}_{K+1}\\|\\le\\|\\mathbf{E}_{K}^{\\prime}\\otimes\\mathbf{I}_{2}\\|+\\|\\mathbf{I}_{1}\\otimes\\mathbf{E}_{K+1}\\|}\\\\ &{\\quad\\overset{\\sum_{p=1}^{K}\\varepsilon_{p}}{\\le}\\overset{1}{\\iiint_{2}}\\overset{1}{\\iiint_{2}}\\overset{1}{\\iiint_{1}}+\\overset{1}{\\iiint_{1}}\\overset{\\varepsilon_{K+1}}{\\m{\\|}}\\cdot\\overset{\\varepsilon_{K+1}}{\\m{\\|}}}=\\overset{K+1}{\\underset{p=1}{\\sum}}\\varepsilon_{p},}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "which concludes the proof. ", "page_idx": 13}, {"type": "text", "text": "A.4 Proof of Theorem 3.7 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof. The poof can be straightforwardly obtained by applying Proposition 1 in [30] based on the obtained results in Proposition 3.6. \u53e3 ", "page_idx": 13}, {"type": "text", "text": "A.5 Proof of Lemma 3.9 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Proof. By construction, we first prove the theorem for the case of $P=2$ . The defined Laplacian \u02c6L in (15) can be rewritten as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\begin{array}{r l}{\\mathbf{L}=\\mathbf{I}-{\\dot{\\mathbf{A}}}=\\mathbf{I}-\\left({\\frac{{\\dot{\\mathbf{A}}}_{1}}{2}}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{Z}}}_{2}\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left(2\\mathbf{I}-\\left({\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{Z}}}_{2}\\right)\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left(\\left[\\mathbf{I}-\\left({\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}\\right)+\\left[\\mathbf{I}-\\left(\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{A}}}_{2}\\right)\\right]\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left(\\left[\\mathbf{I}_{1}\\otimes\\mathbf{I}_{2}-\\left({\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}\\right)\\right]+\\left[\\mathbf{I}_{1}\\otimes\\mathbf{I}_{2}-\\left(\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{A}}}_{2}\\right)\\right]\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left(\\left[\\mathbf{I}_{1}-{\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}\\right]+\\left[\\mathbf{I}_{1}\\otimes\\mathbf{I}_{2}-{\\dot{\\mathbf{A}}}_{2}\\right]\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left(\\left[{\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{Z}}}_{2}\\right]\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left({\\dot{\\mathbf{A}}}_{1}\\otimes\\mathbf{I}_{2}+\\mathbf{I}_{1}\\otimes{\\dot{\\mathbf{Z}}}_{2}\\right)}\\\\ &{\\qquad={\\frac{1}{2}}\\left({\\dot{\\mathbf{A}}}_{1}\\otimes{\\dot{\\mathbf{L}}}_{2}\\right)}\\\\ &{\\qquad=\\left({\\frac{\\dot{\\mathbf{A}}_{1}}{2}}\\right)\\otimes\\left({\\frac{\\dot{\\mathbf{L}}_{2}}{2}}\\right),}\\end{array}}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where we used the following property of Kronecker products: $\\alpha(A\\otimes B)=(\\alpha A)\\otimes B=A\\otimes(\\alpha B)$ [45]. Next, by assuming that the theorem holds for $P\\,=\\,K$ and the definition of $\\begin{array}{r}{\\hat{\\bf A}_{K}^{\\prime}:=\\frac{1}{K}}\\end{array}$ and $\\begin{array}{r}{\\oplus_{p=1}^{K}\\hat{\\mathbf{A}}_{p}:=\\oplus_{p=1}^{K}\\Big(\\frac{\\hat{\\mathbf{A}}_{p}}{K}\\Big)}\\end{array}$ , we prove it for $P=K+1$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\begin{array}{r l}{\\mathbf{L}=\\mathbf{I}-\\mathbf{A}=\\mathbf{I}-{\\frac{1}{K+1}}\\left(K\\mathbf{A}_{K}^{\\prime}\\mathbf{\\Phi}\\mathbf{A}_{K+1}\\right)}\\\\ &{=\\mathbf{I}-\\left({\\frac{K K_{K_{K_{I}}}}{K+1}}\\mathbf{o}_{1}\\mathbf{\\Phi}_{K}\\mathbf{\\Phi}_{K+1}\\mathbf{o}_{1}\\mathbf{\\Phi}_{K+1}\\right)}\\\\ &{={\\frac{1}{K+1}}\\left((K+1)\\mathbf{I}-(K\\mathbf{i}_{K_{I}}^{\\prime}\\mathbf{s}\\mathbf{\\Phi}_{K+1}\\mathbf{\\Phi}_{K+1})\\right)}\\\\ &{={\\frac{1}{K+1}}\\left(K|\\mathbf{I}-(K\\mathbf{i}_{K}^{\\prime}\\mathbf{s}\\mathbf{\\Phi}_{K}\\mathbf{1}_{J})|+[\\mathbf{I}-(\\mathbf{I}_{1}\\otimes K\\mathbf{i}_{K+1})]\\right)}\\\\ &{={\\frac{1}{K+1}}\\left(\\left[\\mathbf{I}_{1}\\otimes\\mathbf{I}_{2}-(K_{K_{I}}^{\\prime}\\otimes\\mathbf{I}_{2})\\right]+\\left[\\mathbf{I}_{1}\\otimes\\mathbf{a}_{2}\\mathbf{\\Phi}_{K+1}\\right]\\right)}\\\\ &{={\\frac{1}{K+1}}\\left(K\\left[\\mathbf{I}_{1}-\\mathbf{A}_{K}^{\\prime}\\right)\\mathbf{o}_{1}\\mathbf{\\Phi}_{J}\\right)+\\left[\\mathbf{I}_{1}\\otimes\\mathbf{(I}_{2}-\\mathbf{A}_{2})\\right]\\right)}\\\\ &{={\\frac{1}{K+1}}\\left(K\\left[\\mathbf{p}_{1}\\otimes\\mathbf{\\Phi}_{K}\\right]+\\left[\\mathbf{\\Phi}_{1}\\otimes\\mathbf{(I}_{2}-\\mathbf{A}_{2})\\right]\\right)}\\\\ &{={\\frac{1}{K+1}}\\left(K\\left[{\\frac{p_{K_{I}}}{K}}\\left({\\frac{\\mathbf{i}_{K_{I}}}{K}}\\right)\\right]\\otimes\\mathbf{I}_{1}+\\mathbf{1}_{2}\\otimes\\mathbf{i}_{2}\\right)}\\\\ &{={\\frac{1}{K+1}}\\left((K{\\frac{p_{K_{I}}}{K}}\\left({\\frac{\\mathbf{i}_{K_{I}}}{K}}\\right))\\right)}\\\\ &{={\\frac{1}{K+1}}\\left((K{\\frac{p_{K\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Besides, by the addition rule for the eigenvalues of a product graph adjacency or Laplacian $(\\lambda_{i j}^{\\circ}=$ $\\lambda_{i}^{(1)}+\\lambda_{j}^{(2)})$ , it can be easily seen that the eigenvalues of the normalized product adjacency $(\\hat{\\mathbf{W}})$ and Laplacian $(\\hat{\\bf L})$ in (31) are in the intervals of $[-1,1]$ and [0, 2], respectively, quite similar to the case for the normalized factor graphs, which concludes the proof. \u53e3 ", "page_idx": 14}, {"type": "text", "text": "A.6 Proof of Theorem 3.10 ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Proof. First, Note that Using $\\tilde{\\bf x}$ as the Graph Fourier Transform (GFT) [13] of $\\mathbf{x}$ w.r.t. $\\hat{\\bf L}$ (with eigenvalues $\\{\\lambda_{i}\\}_{i=1}^{N})$ , one can write [15]: ", "page_idx": 15}, {"type": "equation", "text": "$$\nE(\\mathbf{x})=\\mathbf{x}^{\\top}\\hat{\\mathbf{L}}\\mathbf{x}=\\sum_{i=1}^{N}\\lambda_{i}\\tilde{x}_{i}^{2}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Next, by defining $\\lambda$ as the smallest non-zero eigenvalue of the Laplacian \u02c6L, the following lemma characterizes the over-smoothing aspects of applying a heat kernel in the simplest case. ", "page_idx": 15}, {"type": "text", "text": "Lemma A.2. We have: ", "page_idx": 15}, {"type": "equation", "text": "$$\nE(e^{-\\hat{\\mathbf{L}}}\\mathbf{x})\\leq e^{-2\\lambda}E(\\mathbf{x}).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Proof. By considering the EVD forms of $\\hat{\\mathbf{L}}=\\mathbf{V}\\mathbf{A}\\mathbf{V}^{\\top}$ and $e^{-\\hat{\\mathbf{L}}}=\\mathbf{V}e^{-\\mathbf{\\Lambda}}\\mathbf{V}^{\\top}$ , one can write ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{E(e^{-\\hat{\\mathbf{L}}}\\mathbf{x})}\\\\ &{\\quad={\\mathbf{x}}^{\\mathbf{r}}\\overbrace{e^{-\\hat{\\mathbf{L}}^{\\top}}}^{\\mathbf{v}_{e}-\\mathbf{\\hat{x}}}\\overbrace{\\hat{\\mathbf{L}}}^{\\mathbf{V}^{\\top}}\\overbrace{e^{-\\hat{\\mathbf{L}}}}^{\\mathbf{V}e^{-\\mathbf{A}}\\mathbf{V}^{\\top}}\\mathbf{x}=\\displaystyle\\sum_{i=1}^{N}\\lambda_{i}\\tilde{x}_{i}^{2}e^{-2\\lambda_{i}}\\le e^{-2\\lambda}\\left(\\displaystyle\\sum_{i=1}^{N}\\lambda_{i}\\tilde{x}_{i}^{2}\\right)=e^{-2\\lambda}E(\\mathbf{x}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Note that in the above proof, we ruled out the zero eigenvalues since they are useless in analyzing Dirichlet energy. ", "page_idx": 15}, {"type": "text", "text": "Then by considering the following lemmas from [15]: ", "page_idx": 15}, {"type": "text", "text": "Lemma A.3. (Lemma 3.2 in [15]). $E(\\mathbf{X}\\mathbf{W})\\leq\\|\\mathbf{W}^{\\top}\\|_{2}^{2}E(\\mathbf{X}).$ ", "page_idx": 15}, {"type": "text", "text": "Lemma A.4. (Lemma 3.3 in [15]). For ReLU and Leaky-ReLU nonlinearities $E(\\sigma(\\mathbf{X}))\\leq E(\\mathbf{X})$ . ", "page_idx": 15}, {"type": "text", "text": "Therefore, by combining the previous concepts and considering that the minimum non-zero eigenvalue of $\\hat{\\mathbf{L}}^{(t)}$ in (16) is $\\scriptstyle{\\frac{1}{P}}t^{(m)}\\lambda^{(m)}$ with $m=\\arg\\operatorname*{min}_{i}t^{(i)}\\lambda^{(i)}$ , it can be said that: ", "page_idx": 15}, {"type": "text", "text": "Theorem A.5. For any $l\\in\\mathbb{N}_{+}$ , we have $E(f_{l}(\\mathbf{X}))\\leq s_{l}e^{-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}}E(\\mathbf{X})$ , where $\\begin{array}{r}{s_{l}:=\\prod_{h=1}^{H_{l}}s_{l h}}\\end{array}$ and $s_{l h}$ is the square of the maximum singular value of $\\mathbf{W}_{l h}^{\\top}$ . Besides, $\\tilde{\\lambda}\\,=\\,\\lambda^{(m)}$ and $\\tilde{t}=t^{(m)}$ with $m=\\arg\\operatorname*{min}_{i}t^{(i)}\\lambda^{(i)}$ , where ${\\lambda}^{(i)}$ is the smallest non-zero eigenvalue of $\\hat{\\bf L}_{i}$ . ", "page_idx": 15}, {"type": "text", "text": "Afterward, we can state our final corollary as follows: ", "page_idx": 15}, {"type": "text", "text": "Corollary A.6. Let $s:=\\operatorname*{sup}_{l\\in\\mathbb{N}_{+}}s_{l}$ . We have: ", "page_idx": 15}, {"type": "equation", "text": "$$\nE(\\mathbf{X}^{(l)})\\leq s^{l}e^{-\\frac{2}{P}l\\tilde{t}\\tilde{\\lambda}}E(\\mathbf{X})=e^{l\\left(\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}\\right)}E(\\mathbf{X}).\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "So, $E(\\mathbf{X}^{(l)})$ exponentially converges to $0$ , when $\\begin{array}{r}{\\operatorname*{lim}_{l\\to\\infty}e^{l\\left(\\ln s-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}\\right)}=0,}\\end{array}$ , i.e., $\\begin{array}{r}{\\ln{s}-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}<0}\\end{array}$ . ", "page_idx": 15}, {"type": "text", "text": "B Experiments on more than Two Factor Graphs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We consider the node regression task similar to the settings described in Section 4.1 but for three ER graphs with pER = pER $p_{\\mathtt{E R}}^{(1)}=\\bar{p}_{\\mathtt{E R}}^{(1)}=0.3$ , and varying $p_{\\mathtt{E R}}^{(3)}\\in\\{0.1,0.3\\}$ to monitor the performance in two different connectivity scenarios. Note that here we do not perturb factor graphs but, to make the experiment more challenging, the SNR on the graph data is set to $\\scriptstyle\\mathrm{SNR=0}$ . Table 5 provides the results across a varying number of layers, which shows that the proposed framework\u2019s performance is resistant to adding layers, especially in the case of more sparse graphs, i.e., $p_{\\mathrm{ER}}^{(3)}=0.1$ . On the other hand, the best results were obtained in $l=1,2,4$ , which are the nearest numbers to the actual number of layers in the true generative process which was 3. These observations are validated by comparing the results with the GCN, in which the over-smoothing and performance degradation happen severely faster than CITRUS. ", "page_idx": 15}, {"type": "text", "text": "Table 5: Experiments on more than two factor graphs $(p_{\\mathtt{E R}}^{(1)}=p_{\\mathtt{E R}}^{(2)}=0.3)$ . ", "page_idx": 16}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/dc024d22968ee1d3380bb3b0905d26f64973d71d2f0af5ebe070f1b5d904e65c.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/55bd0607496f35bb0529fe9ac48af544c84f43c603f10b80a9139b090ea9389b.jpg", "table_caption": ["Table 6: Standard deviation of traffic forecasting comparison in Table 1. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "C Descriptions of the Compared Methods ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "\u2022 ARIMA [35]: uses Kalman filter to implement auto-regressive integrated moving average framework, but processes data in a timestep-wise manner.   \n\u2022 G-VARMA [25]: generalizes the vector auto-regressive moving average (VARMA) to the case of considering graph-based data by imposing some statistical assumptions on the model and relying on the spatial graph.   \n\u2022 GP-VAR [25]: adapts AR model by spatial graph polynomial filters, with fewer number of learnable parameters.   \n\u2022 FC-LSTM [35]: a hybrid of fully connected MLPs and LSTM cells that considers each time step separately by assigning one LSTM cell to them.   \n\u2022 Graph WaveNet [38]: a hybrid adapted convolutional and attentional network with GNNs for ST forecasting.   \n\u2022 GMAN [39]: exploits multiple ST attention layers within an encoder-decoder framework.   \n\u2022 STGCN [40]: a hybrid of typical GCNs and 1D convolutional blocks for ST forecasting.   \n\u2022 GGRNN [41]: generalizes the typical RNNs by adapting GCN blocks instead of linear MLPs.   \n\u2022 GRUGCN [26]: a TTS framework, which first processes the temporal information by a GRU cell and then learns spatial representations by applying typical GCN blocks.   \n\u2022 SGP [42]: a scalable graph-based ST framework for considerably reducing the number of learnable parameters. Note that we used the version without positional embedding blocks. ", "page_idx": 16}, {"type": "text", "text": "D Standard Deviation of the Results ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "The standard deviation of traffic forecasting in Table 1 and weather forecasting regarding the proposed framework in Table 2 are provided in Tables 6 and 7. ", "page_idx": 16}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/34fab77b6042927b5d0e1e2b8af042d3a91f0ef5a37c97aa15621f5a5a5fdbb7.jpg", "table_caption": ["Table 7: Standard deviation of weather forecasting comparison in Table 2. "], "table_footnote": [], "page_idx": 17}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/c03222284773fb15a80391cfa0633c785517e08276fbe5e949fa7a377544e8ea.jpg", "table_caption": ["Table 8: Intra and Inter-homophily measures on the real-world graphs of MetrLA and PemsBay datasets. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "E Homophily-Heterophily Trade-off across the Studied Real Datasets ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Regarding the homophily-heterophily trade-off, first, we should mention that measuring the homophily-heterophily indices is way more challenging in spatiotemporal settings rather than in single-graph scenarios [46], since we are facing two intra-graph (i.e., the spatial dimension) and intergraph (i.e., the temporal domain of changing time series characteristics) aspects. In this way, in the recent pioneer literature, they considered MetrLA, PemsBay, and temperature datasets (like Molene and NOAA used in our paper) as complicated in terms of homophily-heterophily behaviors. We provided the measured homophily-heterophily metrics (full details in [46]) in Table 8. As observed in this table, due to the wide range of variability across the used datasets, we have actually evaluated our performance on various datasets in terms of homophily-heterophily levels. For instance, Molene acts severely heterophilic in both intra and inter-graph domains, while NOAA acts more homophilic than Molene in the inter-graph domain. ", "page_idx": 17}, {"type": "text", "text": "F The Case of Inexact Cartesian Product Modeling ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "This scenario lies under the general umbrella of inaccurate adjacencies [30], which has been rigorously studied in the stability analysis in Section 3.2. However, in a simplified and insightful case of facing graph products other than Cartesian, we consider two well-known graph products, i.e., Strong and Kronecker products [23,24]. Consider the true graph is actually a Strong product graph $\\mathbf{A}=\\mathbf{A}_{1}\\otimes$ $\\mathbf{A}_{2}\\!+\\!\\mathbf{A}_{1}\\!\\otimes\\!\\mathbf{I}_{2}\\!+\\!\\mathbf{I}_{1}\\!\\otimes\\!\\mathbf{A}_{2}$ , and one mistakenly considers it as Cartesian product $\\tilde{\\mathbf{A}}=\\mathbf{A}_{1}\\otimes\\mathbf{I}_{2}\\!+\\!\\mathbf{I}_{1}\\otimes\\mathbf{A}_{2}$ . Then, $\\mathbf{E}=\\mathbf{A}-\\tilde{\\mathbf{A}}=\\mathbf{A}_{1}\\otimes\\mathbf{A}_{2}$ , where $\\|\\dot{\\mathbf{E}}\\|=\\lambda_{m a x}^{(1)}\\lambda_{m a x}^{(2)}$ . So, the approximation error depends on the multiplication of the factor graph eigenspaces. Similarly, in the case of Kronecker product graphs $\\tilde{\\mathbf{A}}=\\mathbf{A}_{1}\\otimes\\mathbf{A}_{2}$ , it obtains $\\lVert\\mathbf{E}\\rVert\\stackrel{<}{\\le}\\bar{\\lambda_{m a x}^{(1)}}+\\bar{\\lambda_{m a x}^{(2)}}+\\lambda_{m a x}^{(1)}\\lambda_{m a x}^{(2)}$ . So, in this case, the summation of the factor eigenspaces matters too. Briefly, the approximation error bound depends on the factor graph spectrums. ", "page_idx": 17}, {"type": "text", "text": "G Choosing Appropriate $k$ ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We can choose an appropriate $k$ using two methodologies: supervised and unsupervised. For the supervised option, we can use cross-validation, as we did in our results. For the unsupervised method, we can analyze the Laplacian matrices for a low-rank approximation task. For example, in Figure 4, we plot the explained variances of the principal components of the spatial Laplacian (i.e., $\\|\\mathbf{v}\\bar{\\lambda}\\mathbf{v}^{\\top}\\|_{F}^{2}$ for $\\mathbf{v}$ and $\\lambda$ being the eigenvectors and eigenvalues) on the MetrLA dataset. We observe a strong concentration of variance in a few eigenvalues. We also observe that we can capture almost $80\\%$ of the explained variance by only relying on 50 components. ", "page_idx": 17}, {"type": "image", "img_path": "XRNN9i1xpi/tmp/00e5c4f65fb73c8ec7eb65b2751c306dca6480e90009ccc8b43a4d94aa04842c.jpg", "img_caption": ["Figure 4: Explained variance ratio vs. selected principal components. "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "Table 9: Details of the training settings and hyperparameters, i.e., $T$ (auto-regressive order), emb (dimension of embedding size in the spatiotemporal encoder), hid (dimension of linear mapping size in the spatiotemporal encoder), $F_{\\mathrm{MLP}}$ (dimension of linear mapping size in the MLP layers), nCITRUS (number of CITRUS blocks), $F$ (second dimension of $\\mathbf{W}_{l}$ in (6)), $k_{i}$ (number of selected eigenvalue-eigenvector pairs in the $i$ -th factor graph), $l r$ (learning rate), $n_{\\mathrm{batch}}$ (batch size), and $n$ epochs (number of epochs). ", "page_idx": 18}, {"type": "table", "img_path": "XRNN9i1xpi/tmp/3d8b912c06eccf2fb6833198c32fad2e6a043bd36e95a07baf6664a967a41cb7.jpg", "table_caption": [], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "H The Effect of the Graph Receptive Fields on Controlling Over-smoothing ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "From a theoretical point of view, based on eq. (18), one intuitive way to alleviate or at least slow down the over-smoothing phenomena is to keep $\\begin{array}{r}{\\ln s-\\frac{2}{P}\\tilde{t}\\tilde{\\lambda}}\\end{array}$ positive, which tends to $\\tilde{t}<\\frac{P}{2\\tilde{\\lambda}}\\ln s$ . This clarifies why one should not increase the node-neighborhood especially in the case of facing a connected graph or increasing the number of layers. This finding is also compatible with the pioneering research about the over-smoothing concept, e.g., [14]. From an experimental point of view, and if we consider the graph receptive field $t$ as a hyperparameter, we have designed an experiment to validate the claimed statement. Here, we vary $t\\in\\dot{\\{0.1,1,5,10,20\\}}$ and monitor the over-smoothing process in Figure 5. In this figure, $\\begin{array}{r}{b=\\frac{P}{2\\tilde{\\lambda}}\\ln{s}}\\end{array}$ , and as it is observed, for values of $t$ higher than $b$ the over-smoothing phenomena with increasing the number of layers is happening way faster than the other ones, which validates the theoretical discussion, too. Apart from this, the weight normalization technique [14,15] has also been mentioned as a helpful action but it hinders the theoretical foundations of CITRUS. Note that, in practice, only escaping from the over-smoothing is not enough to have good performance. Therefore, for $t<b$ , one might need to perform other kinds of analyses, e.g., over-squashing analysis. ", "page_idx": 18}, {"type": "text", "text": "I Hyperparameter Details ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "The detailed hyperparameters (optimized by cross-validation on the validation data) and/or training settings of CITRUS , i.e., $T$ (auto-regressive order), emb (dimension of embedding size in the spatiotemporal encoder), hid (dimension of linear mapping size in the spatiotemporal encoder), $F_{\\mathrm{MLP}}$ (dimension of linear mapping size in the MLP layers), $n$ CITRUS (number of CITRUS blocks), $F$ (second dimension of $\\mathbf{W}_{l}$ in (6)), $k_{i}$ (number of selected eigenvalue-eigenvector pairs in the $i$ -th factor graph), $l r$ (learning rate), $n_{\\mathrm{batch}}$ (batch size), and $n_{\\mathrm{{epochs}}}$ (number of epochs), are provided in Table 9. Full details can be found in the implementation codes in https://github.com/ArefEinizade2/CITRUS. ", "page_idx": 18}, {"type": "image", "img_path": "XRNN9i1xpi/tmp/b339faf9a7abf906dc4021f737840c0c1626976c1eb866c1e5e01981a661d527.jpg", "img_caption": ["Figure 5: Log relative distance vs. increasing the number of layers for different values of $t$ in actual bounds. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "J Experiments Compute Resources ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "All the experiments were run on one GTX A100 GPU device with 40 GB of RAM. ", "page_idx": 19}, {"type": "text", "text": "K Broader Impacts ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "The demonstrated superior performance of CITRUS in spatiotemporal forecasting tasks, such as traffic and weather prediction, can significantly benefit urban planning and public safety. Accurate traffic predictions can lead to better traffic management and reduced congestion, while improved weather forecasting can lead to serious urban inconvenience. This research can contribute to sustainable development goals by improving forecasting capabilities and decision-making processes, including sustainable cities and communities, climate action, and industry innovation and infrastructure. ", "page_idx": 19}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: We have tried to include all the paper\u2019s contributions and scope in the abstract and introduction. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 20}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: We have discussed it at the end of the Conclusion and Limitations section as a separate paragraph for planning future work. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 20}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: The Appendix provides all the needed proofs. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 21}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Section 4 and the Appendix contain any needed detail for reproducing the results of the proposed approach. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 21}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We have uploaded the reproducible codes alongside our paper and a Readme file to guide the main results\u2019 reproductions. Besides, all of the real datasets we used are open-access benchmark. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 22}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Section 4 and the Appendix mentioned all the needed details. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 22}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: Our results are averaged over multiple random realizations and we have reported the standard deviations at the end of the Appendix (Section D). ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 22}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have reported the used compute resources in the Appendix, Section E. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 23}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We confirm that our paper, in every respect, meets the NeurIPS Code of Ethics. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 23}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have discussed about Broader Impacts of our work in the Appendix, i.e., Section F. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 23}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: Our paper poses no such risks. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 24}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: All the needed references and credits have been explicitly mentioned in our paper. Since the used datasets are open-access, no permission was needed. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: The only new assets of our work are the implementation codes with detailed Readme files. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 25}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 25}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}]