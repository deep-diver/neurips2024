[{"figure_path": "Ci7II4CPwm/figures/figures_0_1.jpg", "caption": "Figure 1: The average runtime of our approach compared with the state-of-the-art (S.O.T.A) from Akbari et al. [2022].", "description": "The figure shows a plot of the average runtime of the proposed approach and the state-of-the-art (SOTA) method from Akbari et al. [2022] against the number of variables.  The x-axis represents the number of variables, and the y-axis represents the duration in seconds.  It visually demonstrates that the proposed approach significantly outperforms the SOTA method in terms of runtime, especially as the number of variables increases.", "section": "Introduction"}, {"figure_path": "Ci7II4CPwm/figures/figures_1_1.jpg", "caption": "Figure 2: (a): Causal graph of Example 1. (b): Transformed graph when considering identifiability of Pv2, v3 (y), with S = {w, y}. (c): A causal graph with 2m minimal hedges. (d): Running example.", "description": "This figure presents four causal graphs illustrating different concepts related to causal effect identification. (a) shows a causal graph for Example 1 (a complex drug interaction example), illustrating the relationships between different drug therapies and their impact on blood pressure and cardiovascular disease. (b) displays the transformed graph from (a), focusing on identifiability of effects given a specific intervention set. (c) is an example causal graph with many minimal hedges, highlighting the computational challenges of finding minimum interventions. Finally, (d) is another example of a causal graph illustrating the concepts discussed in the paper.", "section": "1 Introduction"}, {"figure_path": "Ci7II4CPwm/figures/figures_5_1.jpg", "caption": "Figure 3: Example graph for 3SAT construction, where S = {v3}.", "description": "This figure shows a simple directed acyclic graph (DAG) with three vertices (v1, v2, v3) and three edges. There are two directed edges and one bidirected edge, with v3 designated as the set S. This graph serves as an example to illustrate the 3-SAT construction procedure for identifying the minimum-cost intervention set to identify a causal effect.", "section": "3 Reformulations of the min-cost intervention problem"}, {"figure_path": "Ci7II4CPwm/figures/figures_8_1.jpg", "caption": "Figure 4: Average time taken by Algorithm 2 of Akbari et al. [2022] (MHS), ILP, and WPMAX-SAT to solve one graph versus (a) the number of vertices in the graph and (b) the number of districts of S.", "description": "This figure compares the performance of three algorithms in solving the Minimum-Cost Intervention for Causal Effect Identification (MCID) problem.  The x-axis of (a) represents the number of vertices in the causal graph, and the x-axis of (b) represents the number of districts within the graph. The y-axis of both graphs represents the average time (in seconds) taken to solve the MCID problem. The figure demonstrates that the ILP and WPMAX-SAT algorithms significantly outperform the MHS algorithm, especially as the problem size increases. The runtime of MHS grows exponentially with the number of both vertices and districts, while ILP and WPMAX-SAT show a more manageable growth in runtime.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_9_1.jpg", "caption": "Figure 5: Average normalized cost of the heuristic algorithms H\u2081 and H\u2082 of Akbari et al. [2022] and Algorithm 1 versus the number of vertices in the graph.", "description": "The figure shows the average normalized cost of four different algorithms (H1, H2, Algorithm 1, and SAT) for solving the minimum-cost intervention problem. The normalized cost is calculated by dividing the cost of each algorithm by the cost of the optimal solution. The x-axis represents the number of vertices in the graph, and the y-axis represents the normalized cost. The figure shows that Algorithm 1 and SAT consistently outperform H1 and H2, especially as the number of vertices increases.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_13_1.jpg", "caption": "Figure 4: Average time taken by Algorithm 2 of Akbari et al. [2022] (MHS), ILP, and WPMAX-SAT to solve one graph versus (a) the number of vertices in the graph and (b) the number of districts of S.", "description": "This figure compares the time efficiency of three algorithms: the Minimal Hedge Solver (MHS) from Akbari et al. 2022, an Integer Linear Programming (ILP) method, and a Weighted Partially Max-SAT (WPMAX-SAT) method.  The comparison is done for two scenarios: (a) varying the number of vertices in the graph while keeping the number of districts constant; and (b) keeping the number of vertices fixed while changing the number of districts. The results show that the ILP and WPMAX-SAT methods are significantly faster than the MHS algorithm, especially when the number of districts increases.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_14_1.jpg", "caption": "Figure 4: Average time taken by Algorithm 2 of Akbari et al. [2022] (MHS), ILP, and WPMAX-SAT to solve one graph versus (a) the number of vertices in the graph and (b) the number of districts of S.", "description": "This figure compares the performance of three algorithms in solving the minimum-cost intervention problem for causal effect identification.  The x-axis of (a) shows the number of vertices in the causal graph, while the x-axis of (b) shows the number of districts (subsets of variables with unmeasured confounders). The y-axis represents the average runtime in seconds.  The results demonstrate that the ILP and WPMAX-SAT algorithms significantly outperform the MHS algorithm, especially as the problem size increases (more vertices or districts). The improvement is more pronounced in the multiple-district scenario.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_14_2.jpg", "caption": "Figure 8: Semi-log plot of the average time taken by WPMAX-SAT to solve one graph versus the number of vertices in the graph.", "description": "This figure shows the average runtime of the WPMAX-SAT algorithm for solving the minimum-cost intervention problem (MCID) as the number of vertices in the causal graph increases. The x-axis represents the number of vertices, and the y-axis represents the runtime in seconds. The plot shows an exponential increase in runtime as the number of vertices grows, indicating the computational complexity of the problem.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_15_1.jpg", "caption": "Figure 4: Average time taken by Algorithm 2 of Akbari et al. [2022] (MHS), ILP, and WPMAX-SAT to solve one graph versus (a) the number of vertices in the graph and (b) the number of districts of S.", "description": "This figure compares the performance of three algorithms for solving the minimum-cost intervention problem in causal inference. The algorithms are the minimal hedge solver (MHS) from Akbari et al. (2022), an integer linear program (ILP), and a weighted partially maximum satisfiability problem (WPMAX-SAT).  The plot shows the average runtime of each algorithm as a function of the number of variables (vertices) in the causal graph and the number of districts.  The results demonstrate a significant speed advantage for the ILP and WPMAX-SAT algorithms compared to the MHS algorithm, particularly as the problem size increases.  The WPMAX-SAT algorithm is considerably faster in most cases.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_15_2.jpg", "caption": "Figure 4: Average time taken by Algorithm 2 of Akbari et al. [2022] (MHS), ILP, and WPMAX-SAT to solve one graph versus (a) the number of vertices in the graph and (b) the number of districts of S.", "description": "This figure compares the performance of three algorithms in solving the Minimum-Cost Intervention for Causal Effect Identification (MCID) problem. The algorithms are: the Minimal Hedge Solver (MHS) from Akbari et al. [2022], an Integer Linear Programming (ILP) approach, and a Weighted Partially Maximum Satisfiability (WPMAX-SAT) approach. The comparison is shown using two subfigures. Subfigure (a) plots the average runtime versus the number of vertices in the graph, showing that the WPMAX-SAT is significantly faster. Subfigure (b) plots the average runtime versus the number of districts in S, indicating that both ILP and WPMAX-SAT show better scaling compared to MHS.", "section": "5 Experiments"}, {"figure_path": "Ci7II4CPwm/figures/figures_16_1.jpg", "caption": "Figure 1: The average runtime of our approach compared with the state-of-the-art (S.O.T.A) from Akbari et al. [2022].", "description": "This figure compares the average runtime of the proposed approach with the state-of-the-art (SOTA) method from Akbari et al. [2022] for solving the Minimum-Cost Intervention for Causal Effect Identification (MCID) problem. The x-axis represents the number of variables, and the y-axis represents the runtime in seconds. The graph shows that the proposed approach significantly outperforms the SOTA method, especially as the number of variables increases. This improvement in efficiency is a key contribution of the paper.", "section": "1 Introduction"}]