[{"type": "text", "text": "Mixture of Scales: Memory-Efficient Token-Adaptive Binarization for Large Language Models ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Dongwon Jo 1 Taesu Kim 2 Yulhwa Kim 3  Jae-Joon Kim 1 ", "page_idx": 0}, {"type": "text", "text": "1 Seoul National University 2 SqueezeBits Inc. 3 Sungkyunkwan University {dongwonjo, kimjaejoon}@snu.ac.kr {taesu.kim}@squeezebits.com {yulhwakim}@skku.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Binarization, which converts weight parameters to binary values, has emerged as an effective strategy to reduce the size of large language models (LLMs). However, typical binarization techniques significantly diminish linguistic effectiveness of LLMs. To address this issue, we introduce a novel binarization technique called Mixture of Scales (BinaryMoS). Unlike conventional methods, BinaryMoS employs multiple scaling experts for binary weights, dynamically merging these experts for each token to adaptively generate scaling factors. This token-adaptive approach boosts the representational power of binarized LLMs by enabling contextual adjustments to the values of binary weights. Moreover, because this adaptive process only involves the scaling factors rather than the entire weight matrix, BinaryMoS maintains compression efficiency similar to traditional static binarization methods. Our experimental results reveal that BinaryMoS surpasses conventional binarization techniques in various natural language processing tasks and even outperforms 2-bit quantization methods, all while maintaining similar model size to static binarization techniques. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Though large language models (LLMs) have delivered impressive results in a variety of natural language processing (NLP) tasks, their massive size often complicates deployment. One common method to compress LLMs is through the quantization of weight parameters, which reduces model sizes by lowering the precision of weight values [1, 8, 2, 30, 31, 32, 33, 3, 4]. Existing quantization approaches such as GPTQ [2], AWQ [3], and OWQ [4] have successfully managed to reduce model sizes by converting 16-bit floating point weights to 4-bit representations, achieving a fourfold decrease in size. Binarization pushes this concept even further by reducing weight values to 1-bit, resulting in a 16-fold size reduction. ", "page_idx": 0}, {"type": "text", "text": "However, such aggressive compression through binarization drastically limits the representational capacity of weights, leading to a significant degradation in the linguistic capabilities of LLMs. To address this limitation and improve the accuracy of binarized LLMs, recent research has actively explored binarization techniques tailored for LLMs [29, 5, 6, 7]. Nonetheless, previous efforts often compromise the inherent advantages of binarization by introducing high memory overhead, and they continue to struggle to achieve sufficient accuracy with binarized LLMs. ", "page_idx": 0}, {"type": "text", "text": "In this paper, we propose a novel binarization technique named as Mixture of Scales (BinaryMoS). Typical binarization methods use scaling factors to control the effective values of binarized weights. Although these scaling factors occupy a tiny fraction of the overall model size, they are crucial in reducing binarization error. BinaryMoS advances the functionality of these scaling factors by incorporating token-adaptive scaling factors. Inspired by the Mixture of Experts (MoE) approach [26, 27, 34], which empolys multiple expert layers to enhance the model capacity, BinaryMoS adopts multiple scaling factors as experts to improve the representational capacity of binarized LLMs in a memory-efficient way. During inference, BinaryMoS linearly combines these scaling experts based on the context to generate token-adaptive scaling factors, thus dynamically adjusting the represented values of binarized weights to maximize the expressive power of the model. As a result, BinaryMoS can improve the linguistic performance of binarized LLMs with minimal memory overhead. ", "page_idx": 0}, {"type": "image", "img_path": "pGOBEYcXzs/tmp/1e76fa04babfe3b0db6894c1263414392bdfb8b8aa83fefcdd7418e43eca2937.jpg", "img_caption": ["Figure 1: A brief overview of various LLM binarization methods. PB-LLM involves both a binary weight matrix and a high-precision, sparse weight matrix, and BiLLM stores four types of binary weight matrices. OneBit simplifies the layer structure by introducing scaling factors for input and output dimensions respectively. BinaryMoS introduces multiple scaling experts to enhance the capacity of binarized models. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "2 Background ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Binarization of LLMs ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Binarization stands out as an extreme yet effective method for reducing model sizes in deep learning. This method achieves size reduction by transforming high-precision weight parameters into 1-bit values. The binarization process is typically governed by the following equation: ", "page_idx": 1}, {"type": "equation", "text": "$$\nW_{B}=\\alpha\\cdot\\mathrm{Sign}(W_{F P}-\\overline{{{W}}}_{F P})\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Here, $W_{F P}\\in\\mathbb{R}^{n\\times m}$ is the full-precision weight matrix of a linear layer where $n$ and $m$ represent the size of output and input dimension, respectively, and $W_{B}\\in\\mathbb{R}^{n\\times m}$ denotes its binarized version. $\\alpha\\in\\mathbb{R}^{n}$ represents scaling factors that are responsible for adjusting the binary weight values along the output dimension. In general, the scaling factors are analytically derived as the absolute mean of FP weight values to minimize the $L2$ error between full-precision and binarized weights, and these scaling factors play a vital role in bridging the gap between the original full-precision weights and their binarized counterparts. ", "page_idx": 1}, {"type": "text", "text": "While binarization has been effectively applied in traditional deep learning models like Convolutional Neural Networks (CNNs) for image classification without losing accuracy [9, 11, 10, 12], LLMs tend to be more sensitive to such extreme quantization, often experiencing significant accuracy degradation with standard binarization techniques. Therefore, various binarziation techniques tailored for LLMs have been developed, as shown in Figure 1. PB-LLM [5] partially binarizes weight parameters while maintaining salient weight parameters as high-precision values (e.g., Float16 or INT8). However, this method results in considerable memory overhead. For instance, quantizing $10\\%$ of weight parameters as INT8 while binarizing the remaining $90\\%$ results in an average bit-width of 1.7 bits for the weight parameters, which is closer to 2 bits than 1 bit. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Furthermore, despite this partial binarization strategy of PB-LLM, the significant information loss inherent in binarization still causes considerable accuracy degradation. To reduce the binarization error and enhance accuracy, BiLLM [6] adopts a more refined approach to assigning scaling factors. Assuming that weight parameters follow a bell-shaped distribution, BiLLM categorizes weight parameters based on their proximity to the mean value: concentrated weights, close to the mean, and sparse weights, distant from the mean. Distinct scaling factors are then assigned to each group to minimize binarization errors. Then, to reduce the memory overhead associated with maintaining information of salient weights, BiLLM preserves this information by binarizing the difference between the binarized values and their full-precision counterparts. Consequently, each salient weight is represented by two 1-bit values, effectively amounting to a 2-bit representation. Despite significantly reducing binarization error, BiLLM complicates the structure of binarized LLMs, adding complexity to the inference process. This complexity arises from the need to manage additional sparse and salient weights alongside regular concentrated weights, requiring extra matrix multiplication during inference. ", "page_idx": 2}, {"type": "text", "text": "Meanwhile, unlike conventional binarization methods that typically employ scaling factors only for the output dimension of weights, OneBit [7] enhances the binarization process by incorporating scaling factors for both the input and output dimensions. This dual-dimension scaling approach addresses binarization errors across both dimensions, potentially enhancing model accuracy. Additionally, the size of each scaling vector is substantially smaller compared to the weight matrix, making this approach memory efficient. For instance, in linear layers with a hidden dimension of $h$ , the weight matrix size is $h\\times h$ , while each scaling vector is only $h\\times1$ . Therefore, doubling these scaling factors adds a negligible memory overhead to the network. Moreover, as this approach of dual-dimensional scaling efficiently preserves enough information to significantly reduce binarization errors, OneBit eliminates the need to store separate information for salient weights, thereby simplifying the model structure. The result of matrix multiplication $Y$ of a linear layer using the OneBit approach can be defined as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\nY=X[S_{i n}^{T}\\odot\\mathrm{Sign}(W_{F P}^{T})\\odot S_{o u t}]=[(X\\odot S_{i n})\\mathrm{Sign}(W_{F P}^{T})]\\odot S_{o u t}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Here, $X\\in\\mathbb{R}^{k\\times m}$ is the matrix of input activation where $k$ represents batch size, while $S_{i n}\\in\\mathbb{R}^{1\\times m}$ and $S_{o u t}\\in\\mathbb{R}^{1\\times n}$ denote the scaling factors for input and output dimensions, respectively. As outlined in Equation 2, processing scaling factors for both input and output dimension can be simplified to scaling input and output of the linear layer before and after matrix multiplication, respectively. ", "page_idx": 2}, {"type": "text", "text": "Despite advances in binarization techniques for LLMs, a notable accuracy gap still exists between fullprecision models and their binarized counterparts. Therefore, bridging this gap without sacrificing the fundamental beneftis of binarization, particularly low memory usage, remains an important challenge in the field of LLM compression. ", "page_idx": 2}, {"type": "text", "text": "2.2 Mixture of Experts ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The MoE approach is a widely adopted strategy to boost the capabilites of deep learning models by integrating multiple specialized experts into a single framework [26, 27, 34]. Typically, the MoE approach for LLMs involves duplication of layers and selecting the appropriate layers among these duplicates for a specific task during inference. In the MoE setup, the router is a key to selecting the appropriate expert. It generally consists of a linear layer followed by a softmax function, which calculates and assigns scores to each expert. During the inference, only the experts with the highest score are selected and processed. ", "page_idx": 2}, {"type": "text", "text": "While integrating the MoE approach with binarized LLMs offers potential for improving model accuracy, it presents a substantial memory trade-off. The duplication of layers inherent in MoE increases the model size proportionally with the number of experts, thus diminishing the memory efficiency benefits gained from binarization. To address these challenges, we propose BinaryMoS, a novel binarization technique that aims to enhance model capacity while maintaining memory efficiency. This approach leverages scaling factors as experts, improving accuracy of binarized ", "page_idx": 2}, {"type": "image", "img_path": "pGOBEYcXzs/tmp/f6d4b211e2688925d5bb3a05ea5dd729718eafbb87a60fddab56595a4af760c9.jpg", "img_caption": ["Figure 2: Illustration of the proposed BinaryMoS scheme. The proposed BinaryMoS introduce mixture of scale approach to generate token-adaptive scaling factors. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "LLMs without the extensive memory overhead associated with traditional MoE configurations. In the following section, we will delve deeper into how BinaryMoS operates and its benefits over conventional techniques. ", "page_idx": 3}, {"type": "text", "text": "3 Proposed BinaryMoS ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Binarization with Mixture of Scale ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "An overview of the proposed BinaryMoS is presented in Figure 2. Unlike previous binarization techniques that utilize a single scaling vector per input or output dimension, BinaryMoS integrates the concept of experts from the MoE framework into the scaling factors and utilizes multiple scaling experts for each dimension. As discussed in Section 2.1, although the size of scaling factors is relatively small, they play a crucial role in preserving the accuracy of binarized models. Therefore, introducing multiple scaling experts incurs minimal memory overhead while effectively leveraging the advantages of the MoE strategy to enhance the capabilities of binarized models. ", "page_idx": 3}, {"type": "text", "text": "In the MoE framework, the number of experts selected corresponds directly to the number of layers processed. As a result, the typical MoE framework selects only one or two experts per inference stage to manage the increased processing burden associated with more experts being selected. On the other hand, the scaling factors of binarized LLMs are solely involved in linear operations with matrix multiplication, as detailed in Equation 2. This linearity allows for the efficient management of multiple scaling experts by linearly combining them before executing the matrix multiplication. Hence, instead of selecting only a few experts, as done in the conventional MoE framework, BinaryMoS dynamically generates instructions on how to combine these scaling experts based on the context. This approach overcomes the limitations of fixed expert choices in typical MoE setups by enabling the creation of effectively infinite token-adaptive scaling factors through linear combinations. Consequently, by optimally utilizing the representational power of multiple scaling experts, BinaryMoS maximizes the potential of binarized models while maintaining memory efficiency. ", "page_idx": 3}, {"type": "text", "text": "3.2 Router Design ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In order to generate the token-adaptive scaling factors, the proposed BinaryMoS designs the router for processing the following operations: ", "page_idx": 3}, {"type": "equation", "text": "$$\nG=\\mathrm{Softmax}(X W_{R})\n$$", "text_format": "latex", "page_idx": 3}, {"type": "equation", "text": "$$\n\\hat{S}_{i n}=G S_{i n},\\quad\\hat{S}_{o u t}=G S_{o u t}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, $W_{R}\\,\\in\\,\\mathbb{R}^{m\\times e}$ represents the weight parameters of router\u2019s linear layer, where $e$ denotes the number of experts. $S_{i n}\\,\\in\\,\\mathbb{R}^{e\\times m}$ and $S_{o u t}\\,\\in\\,\\mathbb{R}^{e\\times n}$ denote the scaling experts for input and output dimension, respectively. Initially, the router computes the gating score $G$ , which represents the significance of each scaling expert, using input activations and router weights, as outlined in Equation 3. Notably, as the gating scores are generated with the softmax function, the sum of gating scores for the scaling experts equals 1. These scores are used to linearly combine the scaling experts, resulting in the creation of token-adaptive scaling factors $\\hat{S}_{i n}$ and $\\hat{S}_{o u t}$ , as shown in Equation 4. Then, by replacing the static scaling factors $S_{i n}$ and $S_{o u t}$ from Equation 2 with token-adaptive scaling factors, the result of matrix multiplication $\\hat{Y}$ in a linear layer using the BinaryMoS approach can be revised as follows: ", "page_idx": 3}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/ea3ed0b062f3e4fb83a2638659219f6e0806c13bde8d75e1c04330cb26c2238c.jpg", "table_caption": ["Table 1: Comparison of memory requirements for deploying Float16 and binarized models, with the number in parentheses denoting the compression ratio of binarized models over Float16 models. "], "table_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{Y}=[(X\\odot\\hat{S}_{i n})\\mathrm{Sign}(W_{F P}^{T})]\\odot\\hat{S}_{o u t}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We empirically find that using four scaling experts each for the input and output dimensions provides the optimal compromise between increasing model size and improving accuracy. Consequently, the proposed BinaryMoS utilizes four scaling experts for each dimension to enhance accuracy while maintaining efficiency. ", "page_idx": 4}, {"type": "text", "text": "3.3 Impact of BinaryMos on LLM Compression ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The proposed BinaryMoS introduces additional memory overhead due to multiple scaling experts and the weights of the router. However, this overhead is relatively minor. For instance, in the LLaMA-1/2-7B model [16] with a hidden dimension $h$ of 4096, the weight matrix for the linear layers is typically $4096\\!\\times\\!4096$ . If BinaryMoS adopts 4 scaling experts, this translates to four $\\alpha$ \u2019s, each of dimension $4096\\!\\times\\!1$ , for both input and output dimensions. Additionally, the weights of the router would be $4096\\!\\times\\!4$ . Compared to the previous OneBit method, which requires a single $\\alpha$ for both input and output dimensions, the additional components in BinaryMoS total $4096\\!\\times\\!10$ parameters. The number of these extra parameters constitutes only $0.2\\%$ of the original weight parameters. ", "page_idx": 4}, {"type": "text", "text": "For a comprehensive examination of the impact of various binarization techniques, including BinaryMoS, on LLM compression, we evaluate the memory requirements of LLaMA models with Float16 parameters and after applying different binarization methods, as detailed in Table 1. Following standard practice, all binarization techniques exclude the embedding layer and lm-head from binarization. Our analysis reveals that BinaryMoS significantly reduces the memory footprint of models, achieving compression ratios ranging from $9.65\\times$ to $11.24\\times$ . As model size increases, the relative impact of additional parameters diminishes and the proportion of the unbinarized part decreases. Hence, we can achieve higher compression ratios for larger models. For instance, the original LLaMA-1/2-13B model, requiring $26.20\\,\\mathrm{GB}$ for deployment, is impractical for edge devices due to its size. However, BinaryMoS reduces this model to just $2.33\\ \\mathrm{GB}$ , representing an 11.24-fold decrease in memory requirements. This significant reduction facilitates deployment on edge devices with typically limited memory capacities of 4 GB. ", "page_idx": 4}, {"type": "text", "text": "In contrast, PB-LLM and BiLLM methods achieve relatively lower compression ratios of around $5\\times$ and $6\\times$ , respectively. This is primarily due to two reasons: first, PB-LLM and BiLLM methods must retain salient weight information, increasing the average bitwidth of weight parameters. Second, the handling of sparse weight matrices in these methods introduces overhead in indexing sparse weight matrices, limiting the achievable compression ratio. OneBit achieves the highest compression ratio by only introducing dual-dimension scaling factors. Remarkably, BinaryMoS achieves a comparable compression ratio to OneBit, despite incorporating additional components for scaling experts. While the memory requirement of binarized models with BinaryMoS increases by only $2\\%$ compared to OneBit, the inclusion of scaling experts offers much greater potential to significantly improve perplexity. ", "page_idx": 4}, {"type": "text", "text": "This analysis demonstrates that although BinaryMoS introduces additional parameters, the relative increase in memory requirement is modest. This makes BinaryMoS a viable option for enhancing accurcy of binarized models without imposing a significant memory burden. ", "page_idx": 4}, {"type": "text", "text": "3.4 Quantization-Aware Knowledge Distillation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Following training strategies adopted for network compression [13, 14], we adopt the knowledge distillation (KD) to transfer the knowledge of a full-precision teacher model to a binarized student model. We employ the cross entropy (CE) loss to distill the logit knowledge. This is calculated using the following equation: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{C E}=-\\frac{1}{n}\\sum_{c}\\sum_{i=1}^{n}p_{c}^{\\mathcal{T}}\\left(X_{i}\\right)\\log\\left(p_{c}^{S}\\left(X_{i}\\right)\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Here, $\\boldsymbol{S}$ and $\\tau$ represent the student and teacher models respectively. $n$ denotes batch size, and $c$ is the number of classes. Additionally, to minimize the distributional discrepancies in layer outputs, we incorporate a mean-squared error (MSE) based layer-to-layer (L2L) loss as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{L2L}=\\sum_{l=1}^{L}\\mathrm{MSE}\\left(\\mathbf{H}_{l}^{T},\\mathbf{H}_{l}^{S}\\right)\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "In this loss, $\\mathbf{H}_{l}^{\\mathcal{T}}$ and $\\mathbf{H}_{l}^{S}$ are the output logits from the $l$ -th layer of the teacher and student models, respectively. The total loss function, integrating both CE and L2L distillation losses, is defined as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathcal{L}_{C E}+\\alpha\\cdot\\mathcal{L}_{L2L}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\alpha$ is a hyperparameter that balances the contributions of the CE and L2L losses. For the training of BinaryMoS, we empirically set $\\alpha=10$ . ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "4.1 Experimental Settings ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Models and Evaluation Datasets. In our study, we evaluate BinaryMoS on various models, including those from the LLaMA-1 [16], LLaMA-2 [17], and OPT [15] families. Specifically, we utilize the OPT models with $125\\mathrm{M}$ and 1.3B parameters, and the LLaMA-1 and LLaMA-2 models with 7B and 13B parameters for our evaluations. We measure language modeling capabilities of these models by evaluating their perplexity on the WikiText2 [24] and C4 [25] datasets. Additionally, we assess zero-shot accuracy on various Common Sense Reasoning Tasks such as BoolQ [19], PIQA [20], HellaSwag [21], WinoGrande [22], ARC-e, ARC-c [23]), utilizing the open-source LLM evaluation framework, LM-Evaluation-Harness [35]. ", "page_idx": 5}, {"type": "text", "text": "Training Details. We initialize the parameters of binarized models using those from pre-trained models, which serve as teacher models for KD. For the training dataset, a mixed dataset composed of the WikiText2 training dataset and a selected partition from the C4 training dataset, with a sequence length of 2048. The training is conducted over three epochs using the AdamW [18] optimizer, with hyperparameters set to $\\beta_{1}=0.9$ , $\\beta_{2}=0.999$ , and zero weight decay. We implement a cosine decay learning rate scheduler, preceded by a warm-up phase constituting 0.03 of the total training duration. All training sessions are conducted on NVIDIA A100 GPUs. ", "page_idx": 5}, {"type": "text", "text": "Baselines. We compare BinaryMoS against previous LLM binarization methods, including PBLLM [5], BiLLM [6], and OneBit [7], ensuring that all implementations adhere to the details provided in their respective papers. PB-LLM and BiLLM utilize the Post-Training Quantization (PTQ) approach for model calibration through the Optimal Brain Quantizer (OBQ) based method of GPTQ [2]. For PB-LLM, which allows variable ratios of salient weights to enhance accuracy, we have set the ratio of salient weights to $10\\%$ to ensure the average bit width of weight parameters remains below 2 bits. OneBit employs a Quantization-Aware Training (QAT) approach, and for fairness, its training setup is aligned with that of BinaryMoS. Given the significant accuracy improvements demonstrated by BinaryMoS over traditional binarization techniques, we also include a comparison with 2-bit quantization methods with PTQ approach, such as GPTQ [2] and OmniQuant [28], to broaden the evaluation scope. ", "page_idx": 5}, {"type": "text", "text": "4.2 Analysis on the Number of Scaling Experts ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "To determine the optimal number of scaling experts for BinaryMoS, which effectively maintains the accuracy of binarized LLMs while minimizing memory usage, we conduct evaluations with ", "page_idx": 5}, {"type": "text", "text": "Table 2: The impact of the numbers of scaling experts on the proposed BinaryMoS. Quick assessment conducted using the LLaMA-1-7B model trained on one-third of the training data. ", "page_idx": 6}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/0d89373b7724efe9cca673942eb23e6c4524d8ff63e22e6f4035d7b70514d1c5.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "image", "img_path": "pGOBEYcXzs/tmp/e3a56d6de902b279bb34e98a1d8a55a03b6db55a8bd160667197a6deb218cfb2.jpg", "img_caption": ["Figure 3: (a) Gating scores of 4 scaling experts in 18th layer of LLaMA-1-7B model for each token in the input sequence. (b) Distribution of values of token-adaptive scaling factors. The boxplot visually presents the distribution of token-adaptive scaling factors among processed tokens. The box spans the interquartile range, indicating the middle $50\\%$ of the scaling factors. Extending from the box are whiskers that reach the furthest data points within 1.5 times the interquartile range, providing insight into the overall range of the data. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "LLaMA-1-7B using varying numbers of scaling experts. This evaluation is conducted using only one-third of the training data for quick assessment. As shown in Table 2, performance metrics, including perplexity and accuracy, generally improve as the number of experts increases from 1 to 4. However, a further increase to 8 experts leads to a decline in model performance. This decline arises from the challenge of training routers to appropriately assign scales to tokens as the number of scales increases. Based on these observations, we choose to employ 4 experts in the BinaryMoS approach. ", "page_idx": 6}, {"type": "text", "text": "4.3 Analysis on the Token-Adaptive Scaling Factors ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we explore the effectiveness of the proposed mixture of scale approach in generating token-adaptive scaling factors. To accomplish this, we analyze the gating scores for scaling experts and the scaling factors derived from these scores. For this analysis, we utilize the LLaMA-1-7B model and input sequences sampled from the C4 dataset. ", "page_idx": 6}, {"type": "text", "text": "Figure 3 showcases the gating scores and resulting token-adaptive scaling factors for out projection of the 18th layer across tokens of the input sequence. The experimental results reveal substantial variation in the gating scores for each expert across tokens. As depicted in Figure 3(b), while conventional binarization methods with static scaling factors, akin to having a single expert, offer a fixed scaling factor, the scaling experts of BinaryMoS successfully generate a diverse range of scaling factors. This highlights the efficacy of the mixture of scale approach, which adaptively determines the ", "page_idx": 6}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/f21cfe723a4324b120d10531fb7b30614cf6f36979b92416436f0b3f903ed64b.jpg", "table_caption": ["Table 3: Perplexity and zero-shot accuracy results of Float16 and binarized LLMs. "], "table_footnote": ["scaling factor for each token, leading to a wider representation range. Consequently, we can expect that BinaryMoS effectively enhances the capacity of binarized models and improves model accuracy. "], "page_idx": 7}, {"type": "text", "text": "4.4 Perplexity and Accuracy Results of Binarized Models ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "The perplexity and zero-shot accuracy results of previous binarization methods and the proposed BinaryMoS are presented in Table 3. BinaryMoS consistently outperforms earlier binarization techniques across all metrics, effectively narrowing the performance disparity with their Float16 counterparts. ", "page_idx": 7}, {"type": "text", "text": "In particular, smaller LLMs such as OPT-125M and OPT-1.3B typically face challenges in maintaining linguistic capabilities under model compression. Previous methods like PB-LLM and BiLLM result in significant increases in perplexity, often exceeding 1000 for the OPT-125M model. While OneBit made substantial improvements, perplexity increases remained above 10. BinaryMoS, however, significantly enhances these outcomes by keeping the increase in perplexity below 10. Moreover, it boosts the accuracy of binarized models and diminishes the zero-shot accuracy gap to within $0.3\\%$ compared to Float16 models. The distinct advantage of BinaryMoS over previous approaches, especially OneBit, lies in its use of scaling experts. This evaluation underlines the efficacy of the BinaryMoS with mixture of scales approach. ", "page_idx": 7}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/3d893595201b0aa05209c1ccd7a8eb2e37704bef286790e31cca43cb4bc09348.jpg", "table_caption": ["Table 4: Perplexity and zero-shot accuracy results for 2-bit quantization methods and BinaryMoS. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.5 Comparison between BinaryMoS and 2-bit Quantization ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Since BinaryMoS consistently outperforms other binarization methods, we proceed to compare it with conventional 2-bit quantization techniques, GPTQ and OmniQuant. While these two approaches entail lower calibration overhead for quantization due to their use of the PTQ approach, they differ in their quantization methods. GPTQ and OmniQuant utilize a group-wise quantization approach, employing groups of 128 weights to finely quantize parameters and minimize quantization errors. Consequently, the memory demand during inference for these methods is more than double that of BinaryMoS. The comparison results, presented in Table 4, reveal that BinaryMoS even outperforms these 2-bit quantization methods, despite its lower memory requirement during inference. This once again underscores the effectiveness of integrating scaling experts. ", "page_idx": 8}, {"type": "text", "text": "5 Discussion and Future Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "BinaryMoS significantly improves the accuracy of binarized LLMs by increasing their representational capability with mixture of scales. This MoS approach holds promise for extension to multi-bit quantization, as multi-bit quantization techniques also involve scaling factors for regulating quantization step size. However, in this paper, our study does not delve into the effectiveness of the mixture of scales on multi-bit quanization schemes, leaving this avenue for future exploration. ", "page_idx": 8}, {"type": "text", "text": "Though BinaryMoS adopts the concept of MoE, it does not fully leverage advanced training techniques established in the field of MoE [26, 27, 34]. These advanced methods optimize routing functions and balance token assignments among experts, thereby enhancing MoE model accuracy. Thus, investigating these training techniques is another topic for future research. ", "page_idx": 8}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "This paper introduces BinaryMoS, a novel binarization technique designed to enhance the representation capability of binarized LLMs while preserving the fundamental advantage of binarization\u2014low memory usage. BinaryMoS adopts the mixture of scale approach to dynamically adjust the scaling factors of binary weight values in a token-adaptive manner. Given that scaling factors play a crucial role in reducing binarization error and occupy a small portion of binarized models, this approach effectively mitigates information loss associated with binarization with minimal memory overhead. Our experimental findings demonstrate that BinaryMoS surpasses existing binarization approaches and even outperforms 2-bit quantization methods in both perplexity and zero-shot tasks. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work was supported in part by Institute of Information & communications Technology Planning & Evaluation (IITP) grant funded by the Korea government (MSIT) (No. 2021-0-00105: Development of model compression framework for scalable on-device AI computing on Edge applications , IITP2023-RS-2023-00256081: artificial intelligence semiconductor support program to nurture the best talents, No. 2021-0-01343: Artificial Intelligence Graduate School Program (Seoul National University) , No.2021-0-02068: Artificial Intelligence Innovation Hub), in part by the Samsung Research Funding Center under Project SRFC-TC1603-53, and BK21 FOUR program at Seoul National University. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Shiyao Li, Xuefei Ning, Luning Wang, Tengxuan Liu, Xiangsheng Shi, Shengen Yan, Guohao Dai, Huazhong Yang, Yu Wang, \u201cEvaluating Quantized Large Language Models\u201d, arXiv preprint arXiv:2402.18158, 2024.   \n[2] Elias Frantar, Saleh Ashkboos, Torsten Hoefler, Dan Alistarh, \u201cGPTQ: Accurate Post-Training Quantization for Generative Pre-trained Transformers\u201d, International Conference on Learning Representations (ICLR), 2023.   \n[3] Ji Lin, Jiaming Tang, Haotian Tang, Shang Yang, Wei-Ming Chen, Wei-Chen Wang, Guangxuan Xiao, Xingyu Dang, Chuang Gan, Song Han, \u201cAWQ: Activation-aware Weight Quantization for LLM Compression and Acceleration\u201d, arXiv preprint arXiv:2306.00978, 2023.   \n[4] Changhun Lee, Jungyu Jin, Taesu Kim, Hyungjun Kim, Eunhyeok Park, \u201cOWQ: Outlier-Aware Weight Quantization for Efficient Fine-Tuning and Inference of Large Language Models\u201d, Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), 2024.   \n[5] Yuzhang Shang, Zhihang Yuan, Qiang Wu, Zhen Dong, \u201cPB-LLM: Partially Binarized Large Language Models\u201d, International Conference on Learning Representations (ICLR), 2024.   \n[6] Wei Huang, Yangdong Liu, Haotong Qin, Ying Li, Shiming Zhang, Xianglong Liu, Michele Magno, Xiaojuan Qi, \u201cBiLLM: Pushing the Limit of Post-Training Quantization for LLMs\u201d, International Conference on Machine Learning (ICML), 2024.   \n[7] Yuzhuang Xu, Xu Han, Zonghan Yang, Shuo Wang, Qingfu Zhu, Zhiyuan Liu, Weidong Liu, Wanxiang Che, \u201cOneBit: Towards Extremely Low-bit Large Language Models\u201d, arXiv preprint arXiv:2402.11295, 2024.   \n[8] Xunyu Zhu, Jian Li, Yong Liu, Can Ma, and Weiping Wang, \u201c A survey on model compression for large language models\u201d, arXiv preprint arXiv:2308.07633, 2023.   \n[9] Haotong Qin, Ruihao Gong, Xianglong Liu, Xiao Bai, Jingkuan Song, and Nicu Sebe, \u201cBinary neural networks: A survey\u201d, arXiv preprint arXiv:2004.03333, 2020.   \n[10] Zechun Liu, Wenhan Luo, Baoyuan Wu, Xin Yang, Wei Liu, and Kwang-Ting Cheng, \u201cBiReal Net: Binarizing Deep Network Towards Real-Network Performance\u201d, Proceedings of the European Conference on Computer Vision (ECCV), 2018.   \n[11] Mohammad Rastegari, Vicente Ordonez, Joseph Redmon, Ali Farhadi, \u201cXNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks\u201d, Proceedings of the European Conference on Computer Vision (ECCV), 2016.   \n[12] Zechun Liu, Zhiqiang Shen, Marios Savvides, Kwang-Ting Cheng, \u201cReActNet: Towards Precise Binary Neural Network with Generalized Activation Functions\u201d, Proceedings of the European Conference on Computer Vision (ECCV), 2020.   \n[13] Zechun Liu, Barlas Oguz, Changsheng Zhao, Ernie Chang, Pierre Stock, Yashar Mehdad, Yangyang Shi, Raghuraman Krishnamoorthi, Vikas Chandra, \u201cLLM-QAT: Data-Free Quantization Aware Training for Large Language Models\u201d, arXiv preprint arXiv:2305.17888, 2023.   \n[14] Wei Zhang, Lu Hou, Yichun Yin, Lifeng Shang, Xiao Chen, Xin Jiang, Qun Liu, \u201cTernaryBERT: Distillation-aware Ultra-low Bit BERT\u201d, arXiv preprint arXiv:2009.12812, 2020/   \n[15] Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen, Christopher Dewan, Mona Diab, Xian Li, Xi Victoria Lin, Todor Mihaylov, Myle Ott, Sam Shleifer, Kurt Shuster, Daniel Simig, Punit Singh Koura, Anjali Sridhar, Tianlu Wang, Luke Zettlemoyer, \u201cOPT: Open Pre-trained Transformer Language Models\u201d, arXiv preprint arXiv:2205.01068, 2022.   \n[16] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, Guillaume Lample, \u201cLLaMA: Open and Efficient Foundation Language Models\u201d, arXiv preprint arXiv:2302.13971, 2023.   \n[17] Touvron, Hugo and Martin, Louis and Stone, Kevin and Albert, Peter and Almahairi, Amjad and Babaei, Yasmine and Bashlykov, Nikolay and Batra, Soumya and Bhargava, Prajjwal and Bhosale, Shruti and others, \u201cLlama 2: Open Foundation and Fine-Tuned Chat Models\u201d, arXiv preprint arXiv:2307.09288, 2023.   \n[18] Ilya Loshchilov, Frank Hutter, \u201cDecoupled Weight Decay Regularization\u201d, International Conference on Learning Representations (ICLR), 2019.   \n[19] Christopher Clark, Kenton Lee, Ming-Wei Chang, Tom Kwiatkowski, Michael Collins, Kristina Toutanova, \u201cBoolQ: Exploring the Surprising Difficulty of Natural Yes/No Questions\u201d, arXiv preprint arXiv:1905.10044, 2019.   \n[20] Yonatan Bisk, Rowan Zellers, Ronan Le Bras, Jianfeng Gao, Yejin Choi, \u201cPIQA: Reasoning about Physical Commonsense in Natural Language\u201d, Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), 2020.   \n[21] Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, Yejin Choi, \u201cHellaSwag: Can a Machine Really Finish Your Sentence?\u201d, arXiv preprint arXiv:1905.07830, 2019.   \n[22] Keisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, Yejin Choi, \u201cWinoGrande: An Adversarial Winograd Schema Challenge at Scale\u201d, arXiv preprint arXiv:1907.10641, 2019.   \n[23] Peter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, Oyvind Tafjord, \u201cThink you have Solved Question Answering? Try ARC, the AI2 Reasoning Challenge\u201d, arXiv preprint arXiv:1803.05457, 2018.   \n[24] Stephen Merity, Caiming Xiong, James Bradbury, Richard Socher, \u201cPointer Sentinel Mixture Models\u201d, arXiv preprint arXiv:1609.07843, 2016.   \n[25] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J. Liu, \u201cExploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\u201d, arXiv preprint arXiv:1910.10683, 2019.   \n[26] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton, Jeff Dean, \u201cOutrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer\u201d, arXiv preprint arXiv:1701.06538, 2017.   \n[27] William Fedus, Barret Zoph, Noam Shazeer, \u201cSwitch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity\u201d, arXiv preprint arXiv:2101.03961, 2021.   \n[28] Wenqi Shao, Mengzhao Chen, Zhaoyang Zhang, Peng Xu, Lirui Zhao, Zhiqian Li, Kaipeng Zhang, Peng Gao, Yu Qiao, Ping Luo, \u201cOmniQuant: Omnidirectionally Calibrated Quantization for Large Language Models\u201d, International Conference on Learning Representations (ICLR), 2024.   \n[29] Hongyu Wang, Shuming Ma, Li Dong, Shaohan Huang, Huaijie Wang, Lingxiao Ma, Fan Yang, Ruiping Wang, Yi Wu, Furu Wei, \u201cBitNet: Scaling 1-bit Transformers for Large Language Models\u201d, arXiv preprint arXiv:2310.11453 , 2023.   \n[30] Tim Dettmers, Artidoro Pagnoni, Ari Holtzman, Luke Zettlemoyer, \u201cQLoRA: Efficient Finetuning of Quantized LLMs\u201d, Advances in Neural Information Processing Systems, (NeurIPS), 2023.   \n[31] Tim Dettmers, Ruslan Svirschevski, Vage Egiazarian, Denis Kuznedelev, Elias Frantar, Saleh Ashkboos, Alexander Borzunov, Torsten Hoefler, Dan Alistarh, \u201cSpQR: ASparse-Quantized Representation for Near-Lossless LLM Weight Compression\u201d, arXiv preprint arXiv:2306.03078, 2023.   \n[32] Sehoon Kim, Coleman Hooper, Amir Gholami, Zhen Dong, Xiuyu Li, Sheng Shen, Michael W. Mahoney, Kurt Keutzer, \u201cSqueezeLLM: Dense-and-Sparse Quantization\u201d, International Conference on Machine Learning (ICML), 2024.   \n[33] Jerry Chee, Yaohui Cai, Volodymyr Kuleshov, Christopher De Sa, \u201cQuIP: 2-Bit Quantization of Large Language Models With Guarantees\u201d, Advances in Neural Information Processing Systems, (NeurIPS), 2023.   \n[34] Barret Zoph, Irwan Bello, Sameer Kumar, Nan Du, Yanping Huang, Jeff Dean, Noam Shazeer, William Fedus, \u201cST-MoE: Designing Stable and Transferable Sparse Expert Models\u201d, arXiv preprint arXiv:2202.08906, 2022.   \n[35] Subhabrata Mukherjee, Xiaodong Liu, Guoqing Zheng, Saghar Hosseini, Hao Cheng, Greg Yang, Christopher Meek, Ahmed Hassan Awadallah, Jianfeng Gao, \u201cFew-Shot Learning Evaluation in Natural Language Understanding\u201d, Thirty-fifth Conference on Neural Information Processing Systems Datasets and Benchmarks Track (Round 2)., 2021.   \n[36] Taesu Kim, Jongho Lee, Daehyun Ahn, Sarang Kim, Jiwoong Choi, Minkyu Kim, Hyungjun Kim, \u201cQUICK: Quantization-aware Interleaving and Conflict-free Kernel for Efficient LLM Inference\u201c, arXiv preprint arXiv:2402.10076, 2024. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "A Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Ablation Study on Datasets ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "To determine the optimal dataset for training binarized models, we conduct a comparative analysis using various training datasets, as summarized in Table 5. The results indicate that models trained solely on the WikiText2 dataset, due to its relatively small dataset size, tend to exhibit overfitting tendencies and struggle to generalize to other datasets. While these models demonstrate considerable perplexity improvement on the WikiText2 evaluation, their perplexity on the C4 dataset and zero-shot accuracy is notably poor. Conversely, models trained exclusively on the C4 dataset perform well across a wide range of tasks, except for the evaluation on WikiText2. Following the approach of previous research [13], we also experiment with a generated dataset synthesized using the LLaMA-1- 7B model. Although this dataset generally performs satisfactorily across various language modeling tasks, its performance lags behind that of the C4 dataset. Therefore, to enhance overall model performance, we opt to train the models on a mixed dataset comprising both C4 and WikiText2. Moreover, the accessibility of both C4 and WikiText2 as open-source datasets further facilitates their adoption for training purposes. ", "page_idx": 12}, {"type": "text", "text": "Table 5: Evaluation of binarized LLaMA-1-7B model trained with various training datasets. We train the model on a subset of the dataset with the same training step. $\\dagger$ : Generated dataset synthesized by LLaMA-1-7B model. $^{\\ddag}$ : Mixed dataset of Wikitext2 and C4. ", "page_idx": 12}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/d477153bcbf43e5826b5b61829da2c99bbdd42dfd73065f43583a9dd7bbe77fc.jpg", "table_caption": [], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "A.2 Latency Measurement ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "To assess the latency of GEMV operation for our BinaryMoS, we have evaluated the latency of previous binarized models and the BinaryMoS by developing appropriate CUDA kernels for 1- bit matrix multiplication, modifying the CUDA kernel for multi-bit matrix multiplication [36]. Additionally, we further customize the CUDA kernel of BinaryMoS to fuse scaling experts and routing operations on top of the 1-bit matrix multiplication CUDA kernel. We measure the latency of the linear layers in LLaMA-7B and LLaMA-13B with batch size of 1 and results are presented in Table 6. All experiments are conducted on NVIDIA A6000 GPUs. ", "page_idx": 12}, {"type": "text", "text": "Previous methods like PB-LLM and BiLLM require extra matrix multiplications, making them very slow. OneBit, which employs the simplest binarization scheme, achieves significant improvement over the original Float16 model and shows the minimum latency. Meanwhile, our BinaryMoS introduces additional operations for processing scaling experts, which require far fewer operations compared to matrix multiplication. Consequently, BinaryMoS also shows similar latency results to OneBit. This demonstrates that the multi-scaling factor module in BinaryMoS improves performance in terms of perplexity and zero-shot accuracy with minimal overhead to latency. ", "page_idx": 12}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/8b955208ba7a9a8f267a1ee5e03bba31aa8266cd0ada123333a44dd6e58d6287.jpg", "table_caption": ["Table 6: Latency (\u00b5sec) of linear layer in LLaMA-1/2-7B and LLaMA-1/2-13B. "], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "A.3 Experimental Results for LLaMA-1-30B ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Table 7 provides further experimental results on the LLaMA-1-30B model. In line with the trends observed in Table 3, BinaryMoS consistently surpasses other binarization approaches for this 30B model. This assessment highlights the effectiveness of BinaryMoS for large-scale LLMs. ", "page_idx": 13}, {"type": "table", "img_path": "pGOBEYcXzs/tmp/c189cde74f7ef7d481f91d328aa48edfce4ad2ab794b81bf4305aaa68b94d5e2.jpg", "table_caption": ["Table 7: Perplexity and zero-shot accuracy results of Float16 and binarized LLMs for LLaMA-1-30B "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "A.4 Generation Quality ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Figure 4 compares the generation quality between BinaryMoS and OneBit on LLaMA-1-13B model. BinaryMoS can generate contextually proper answers, whereas OneBit fails to generate correct answers. These results demonstrate that the BinaryMoS processes each token with token-adaptive scaling factors which contain contextual information and the improvement of BinaryMoS over OneBit is substantial enough to make binarized LLMs more applicable in practice. ", "page_idx": 13}, {"type": "text", "text": "Prompt: A cowboy rides a - BinaryMos: A cowboy rides a wild, powerful horse around the prairie. OneBit: A cowboy rides a pistol. ", "page_idx": 13}, {"type": "text", "text": "Prompt: There are a number of ways to reduce air pollution, such as. ", "page_idx": 13}, {"type": "text", "text": "BinaryMos: There are a number of ways to reduce air pollution, such as using cleanburning fuels like natural gas. Natural gas provides better emissions than coal, or oil. ", "page_idx": 13}, {"type": "text", "text": "OneBit: There are a number of ways to reduce air pollution, such as cleaning machines more often for longer periods. Cleaning materials and products are less toxic. ", "page_idx": 13}, {"type": "text", "text": "Prompt: The capital of the state of New York is ", "page_idx": 13}, {"type": "text", "text": "BinaryMos: The capital of the state of New York is Albany, situated along the west bank of the Hudson. OneBit: The capital of the state of New York is located in the eastern part of the northern and the central part of the south region of the United States. ", "page_idx": 13}, {"type": "text", "text": "Figure 4: Comparison of generation quality on the LLaMA-1-13B models with BinaryMoS and OneBit. ", "page_idx": 13}, {"type": "text", "text": "A.5 Limitations ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "While BinaryMoS effectively enhances the linguistic capabilities of binarized LLMs, its application to extremely large models such as LLaMA-2-70B poses challenging due to the high training cost inherent to QAT-based strategies. Hence, to facilitate the use of BinaryMoS in such large-scale models, it may be necessary to adapt it into a PTQ-based approach or to integrate it with parameterefficient training strategies in future work. Additionally, it is important to note that, despite the advancements brought about by by BinaryMoS, the reduction in linguistic performance of binarized LLMs coampred to their Float16 counterparts remains substantial. Consequently, to make LLM binarization practical for real-world applications, further advancements in binarization techniques are required. ", "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: The main claims in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Justification: The paper discusses limitations in the \"Discussion and Future Work\" and \"Limitations\" section, including challenges and areas for future exploration. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 14}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 15}, {"type": "text", "text": "Justification: The paper does not include theoretical results that require formal proofs. The focus is on empirical evaluation of the proposed method. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: The paper provides comprehensive details on the experimental settings, including models used, datasets, evaluation metrics, and training processes. It ensures that the steps to reproduce the results are clear. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The paper provide open access to the data and code to faithfully reproduce the main experimental results, as described in supplemental material. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 16}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The paper specifies all necessary training details, ensuring that the experimental results can be understood and replicated. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 16}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 16}, {"type": "text", "text": "Answer: [No] ", "page_idx": 16}, {"type": "text", "text": "Justification: The paper does not report error bars or statistical significance for the experiments. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 16}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 17}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The paper provides sufficient information about the compute resources used for the experiments, mentioning the use of NVIDIA A100 GPUs. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 17}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The research conforms to the NeurIPS Code of Ethics, focusing on improving model efficiency and performance in a responsible manner without evident ethical concerns. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 17}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The paper discusses societal impacts, highlighting the potential for efficient deployment of LLMs on edge devices and acknowledging the importance of responsible use. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: The paper does not pose high risks for misuse that would require specific safeguards. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 18}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The paper properly credits existing assets, such as datasets and models, and follows appropriate licenses and terms of use. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets. \u2022 The authors should cite the original paper that produced the code package or dataset. \u2022 The authors should state which version of the asset is used and, if possible, include a URL. ", "page_idx": 18}, {"type": "text", "text": "\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 19}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not introduce new assets. It focuses on methodological improvements and uses existing datasets and models for evaluation. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing or research with human subjects. Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: The paper does not involve human subjects research, thus IRB approvals are not applicable. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}]