[{"figure_path": "ykACV1IhjD/tables/tables_7_1.jpg", "caption": "Table 1: ApR in MIS problems on RRGs with 10,000 nodes and node degree d = 20, 100. \"CRA\" represents the CRA-PI-GNN solver.", "description": "This table presents the approximation ratio (ApR) results for the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with 10,000 nodes and node degrees of 20 and 100.  It compares the performance of several methods: Random Greedy Algorithm (RGA), Degree Greedy Algorithm (DGA), Erd\u0151s Goes Neural (EGN), Meta-EGN, Physics-Inspired GNN (PI-GNN) with Graph Convolutional Network (GCN) and GraphSAGE, and the proposed Continuous Relaxation Annealing (CRA) with GCN and GraphSAGE. The ApR is a measure of how close the solution found by each method is to the optimal solution.  Lower ApR values indicate better performance.", "section": "5.1 Experimental settings"}, {"figure_path": "ykACV1IhjD/tables/tables_7_2.jpg", "caption": "Table 1: ApR in MIS problems on RRGs with 10,000 nodes and node degree d = 20, 100. \"CRA\" represents the CRA-PI-GNN solver.", "description": "This table presents the approximation ratio (ApR) achieved by different methods on Maximum Independent Set (MIS) problems using random regular graphs (RRGs) with 10,000 nodes and degrees of 20 and 100.  The methods compared include traditional greedy approaches (RGA, DGA), other unsupervised learning-based solvers (EGN, META-EGN), the physics-inspired graph neural network (PI-GNN) solver, and the proposed Continuous Relaxation Annealing (CRA) method combined with PI-GNN (CRA-PI-GNN). The results show that the CRA-PI-GNN significantly outperforms other methods, demonstrating its effectiveness in solving MIS problems.", "section": "5.2 MIS problems"}, {"figure_path": "ykACV1IhjD/tables/tables_9_1.jpg", "caption": "Table 1: ApR in MIS problems on RRGs with 10,000 nodes and node degree d = 20, 100. \"CRA\" represents the CRA-PI-GNN solver.", "description": "This table compares the approximation ratio (ApR) achieved by different methods for solving the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with 10,000 nodes and degrees of 20 and 100.  The methods include a random greedy algorithm (RGA), a degree-based greedy algorithm (DGA), the Erd\u0151s Goes Neural (EGN) solver, a Meta-EGN solver, the Physics-inspired GNN (PI-GNN) solver (using both GCN and GraphSage architectures), and the proposed Continuous Relaxation Annealing (CRA) approach with the PI-GNN solver (also using GCN and GraphSage). The ApR is a measure of the solution quality relative to the optimal solution, with 1.000 representing a perfect solution. The results show that CRA significantly improves the ApR compared to other methods.", "section": "5.1 Experimental settings"}, {"figure_path": "ykACV1IhjD/tables/tables_18_1.jpg", "caption": "Table 3: ApR and runtime are evaluated on three benchmarks provided by DIMES [Qiu et al., 2022]. The ApR is assessed relative to the results obtained by KaMIS. Runtime is reported as the total clock time, denoted in seconds (s), minutes (m), or hours (h). The runtime and solution quality are sourced from iSCO [Sun et al., 2023]. The baselines include solvers from the Operations Research (OR) community, as well as data-driven approaches utilizing Reinforcement Learning (RL), Supervised Learning (SL) combined with Tree Search (TS), Greedy decoding (G), or sampling (S). Methods that fail to produce results within 10 times the time limit of DIMES are marked as N/A.", "description": "This table compares the performance of various methods for solving combinatorial optimization problems on three benchmark datasets.  The approximation ratio (ApR), representing the solution quality relative to the optimal solution, and runtime are reported for each method. The methods include traditional optimization solvers, as well as machine learning based approaches such as Reinforcement Learning, Supervised Learning, and unsupervised learning approaches.", "section": "5. Experiments"}, {"figure_path": "ykACV1IhjD/tables/tables_18_2.jpg", "caption": "Table 4: ApR of the MIS problem on RRG(N, d). All the results are averaged based on 5 RRGS with different random seeds.", "description": "This table presents the approximation ratio (ApR) for the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with varying numbers of nodes (N) and degrees (d).  The results are obtained using both the proposed CRA-PI-GNN method and the original PI-GNN method. For each configuration of N and d, five different RRGs were generated and the ApR was calculated for each. The ApR values shown represent the average across these five runs.  The table shows that the CRA-PI-GNN method consistently achieves higher ApR values than the PI-GNN method, indicating its improved performance.", "section": "5.2 MIS problems"}, {"figure_path": "ykACV1IhjD/tables/tables_19_1.jpg", "caption": "Table 1: ApR in MIS problems on RRGs with 10,000 nodes and node degree d = 20, 100. \"CRA\" represents the CRA-PI-GNN solver.", "description": "This table presents the approximation ratio (ApR) achieved by different methods for solving the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with 10,000 nodes and node degrees of 20 and 100.  The methods compared include the random greedy algorithm (RGA), the degree-based greedy algorithm (DGA), the Erd\u0151s Goes Neural (EGN) solver, the Meta-EGN solver, the Physics-Inspired Graph Neural Network (PI-GNN) solver (with both Graph Convolutional Network (GCN) and GraphSAGE architectures), and the proposed Continuous Relaxation Annealing (CRA) solver (also with GCN and GraphSAGE).  The ApR is a measure of solution quality, with 1.00 representing the optimal solution. The results show that the CRA method significantly outperforms other methods, demonstrating its effectiveness in solving this challenging combinatorial optimization problem.", "section": "5.1 Experimental settings"}, {"figure_path": "ykACV1IhjD/tables/tables_20_1.jpg", "caption": "Table 1: ApR in MIS problems on RRGs with 10,000 nodes and node degree d = 20, 100. \"CRA\" represents the CRA-PI-GNN solver.", "description": "This table presents the approximation ratio (ApR) achieved by different methods for solving the Maximum Independent Set (MIS) problem on random regular graphs (RRGs) with 10,000 nodes and node degrees of 20 and 100. The methods compared include Random Greedy Algorithm (RGA), Degree-based Greedy Algorithm (DGA), Erd\u0151s Goes Neural (EGN) solver, Meta-EGN solver, Physics-inspired GNN (PI-GNN) solver (with both Graph Convolutional Network and GraphSage architectures), and the proposed Continuous Relaxation Annealing (CRA) approach with PI-GNN (CRA).  The ApR is calculated relative to the theoretical optimal solution.", "section": "5.1 Experimental settings"}, {"figure_path": "ykACV1IhjD/tables/tables_20_2.jpg", "caption": "Table 7: Comparison of ApR performance across different values of p for various TSPLIB instances.", "description": "This table compares the approximation ratio (ApR) performance of the CRA-PI-GNN solver across different values of hyperparameter 'p' for several instances from the TSPLIB dataset.  It shows the ApR results for p=2, 4, 6, and 8, along with the ApR obtained by the original PI-GNN solver and the optimal solution for each problem instance. This helps to understand the impact of hyperparameter 'p' on the accuracy of the solver.", "section": "5.4 Diverse bipartite matching"}]