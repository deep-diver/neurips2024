[{"type": "text", "text": "Fast Iterative Hard Thresholding Methods with Pruning Gradient Computations ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Yasutoshi Ida1\u2217 Sekitoshi Kanai1 Atsutoshi Kumagai1 Tomoharu Iwata2 ", "page_idx": 0}, {"type": "text", "text": "Yasuhiro Fujiwara2 ", "page_idx": 0}, {"type": "text", "text": "1NTT Computer and Data Science Laboratories   \n2NTT Communication Science Laboratories ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We accelerate the iterative hard thresholding (IHT) method, which finds $k$ important elements from a parameter vector in a linear regression model. Although the plain IHT repeatedly updates the parameter vector during the optimization, computing gradients is the main bottleneck. Our method safely prunes unnecessary gradient computations to reduce the processing time. The main idea is to efficiently construct a candidate set, which contains $k$ important elements in the parameter vector, for each iteration. Specifically, before computing the gradients, we prune unnecessary elements in the parameter vector for the candidate set by utilizing upper bounds on absolute values of the parameters. Our method guarantees the same optimization results as the plain IHT because our pruning is safe. Experiments show that our method is up to 73 times faster than the plain IHT without degrading accuracy. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The optimization problem of finding sparse parameter vectors in linear regression models is a crucial problem that crosses a wide range of fields, including feature selection [20, 35], sparse coding [32], dictionary learning [33], and compressed sensing [6]. To obtain the sparse parameter vector, the parameter vector is often constrained to have $k$ nonzero elements. Among a huge number of algorithms that have been developed for this problem [25, 29, 14, 27, 10, 19, 11, 20], iterative hard thresholding (IHT) methods [6] are practical methods based on gradient descent methods because they have almost no overhead over the plain gradient descent method [2]. ", "page_idx": 0}, {"type": "text", "text": "A procedure of IHT consists of two main parts in an iteration. First, it updates the parameter vector in accordance with the gradient descent method. Then, the parameter vector is projected onto a feasible set being a set of sparse parameter vectors. In the projection, IHT uses a hard thresholding operator that selects the $k$ -largest elements in terms of magnitude of the parameter vector, and the other elements are set to zero. IHT repeats this procedure until the stopping criterion is satisfied. ", "page_idx": 0}, {"type": "text", "text": "When a design matrix of the linear regression model is an $m$ -by- $n$ matrix, the length of the parameter vector is $n$ , and gradient computations of IHT require $O(m n)$ or $O(n^{2})$ time for each iteration. Specifically, IHT suffers from the increase in processing time for large $m$ and $n$ . Taking feature selection as an example, IHT slows down for large datasets because $m$ and $n$ correspond to the numbers of samples and features in the dataset, respectively. The gradient computations are much more computationally expensive than the projection of the parameter vector because the projection only requires $O(n\\log k)$ time if it uses a heap. Therefore, the gradient computations are dominant in the overall procedure of IHT, and we need to reduce the cost to raise the efficiency of IHT. ", "page_idx": 0}, {"type": "text", "text": "This paper proposes fast IHT that safely prunes unnecessary gradient computations. Before computing the gradients for each iteration, the proposed method efficiently constructs a candidate set whose elements correspond to indices of the $k$ -largest elements in terms of magnitude of the parameter vector. When constructing the candidate set, our method prunes indices that are clearly not included in the candidate set. To identify such indices, we compute upper bounds of absolute values for the elements of the parameter vector. If the upper bound is smaller than a threshold, the index is not included in the candidate set. The threshold is automatically determined by leveraging lower bounds of absolute values for the elements of the parameter vector. Since the computation cost of the upper and lower bounds is $O(n)$ time, we can efficiently construct the candidate set. By updating only the parameters corresponding to the candidate set, we can prune unnecessary gradient computations. Our method guarantees the same optimization results as the plain IHT because it safely prunes unnecessary computations. In addition, our method does not need additional hyperparameter tuning. Experiments demonstrate that our method is up to 73 times faster than the plain IHT while maintaining accuracy on feature selection tasks. ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "In [4, 30], the authors utilized a double-overrelaxation approach to improve the convergence speed of IHT. They use two relaxation steps for the parameter vector, which are similar to the momentum of Nesterov\u2019s method [28]. In [8, 24], the authors introduced the momentum to IHT inspired by the fast iterative shrinkage thresholding algorithm (FISTA) [3]. While FISTA uses the momentum with a soft thresholding operator, Cevher [8] uses it with the hard thresholding operator. This Accelerated IHT (AccIHT) has substantial theoretical and empirical improvement over the plain IHT [23]. ", "page_idx": 1}, {"type": "text", "text": "While the previous methods have reduced the number of iterations to accelerate IHT as described above, to the best of our knowledge, there are no papers on reducing the computation cost per iteration of IHT. This paper aims to flil this gap based on the pruning strategy. For convex and some nonconvex regularization, working set algorithms are used to reduce the cost of solvers [7, 21, 26, 31]. They solve a growing sequence of subproblems that are restricted to a small subset of parameters during optimization. In [12, 13, 22, 15, 16, 18, 17], the authors reduced the cost by skipping unnecessary parameter updates for coordinate descent with sparsity-inducing norms. However, since these methods are tailored for coordinate descent or the soft thresholding operator, they cannot be used for IHT, which selects $k$ elements from the parameter vector by using the hard thresholding operator. ", "page_idx": 1}, {"type": "text", "text": "3 Preliminary ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Notation. We denote scalars, vectors, and matrices with lower-case, bold lower-case, and bold upper-case letters, e.g., $x$ , $\\textbf{\\em x}$ and $\\mathbf{\\deltaX}$ , respectively. Given a matrix $\\mathbf{\\deltaX}$ , we denote its $i$ -th row by $X_{i}$ . Given a vector $\\pmb{x}\\in\\mathbb{R}^{m}$ , we denote its $i$ -th element by $\\pmb{x}_{i}$ , and we call $i$ index. $\\|\\cdot\\|_{2}$ is the $\\ell_{2}$ norm. $\\|{\\boldsymbol{x}}\\|_{0}$ is $|\\{i\\in\\{1,...,m\\}|x_{i}\\neq0\\}|$ and represents the number of nonzero elements in $\\textbf{\\em x}$ . $\\mathbf{0}\\in\\mathbb{R}^{m}$ is the $m$ -dimensional vector whose elements are zeros. $\\boldsymbol{\\mathit{I}}$ represents the identity matrix. $\\operatorname{supp}(x)$ is the function that returns the indices of nonzero elements in $\\textbf{\\em x}$ . ", "page_idx": 1}, {"type": "text", "text": "3.1 Problem Setting ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Let $\\pmb{X}\\in\\mathbb{R}^{m\\times n}$ be an input matrix (design matrix), $\\pmb{y}\\in\\mathbb{R}^{m}$ be a set of continuous responses, and $\\pmb{\\theta}\\in\\mathbb{R}^{n}$ be a parameter vector of a linear regression model. To find a sparse parameter vector of the model, we consider the following optimization problem [5]: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\theta\\in\\mathbb{R}^{n}}\\frac{1}{2}\\|\\pmb{y}-\\pmb{X}\\pmb{\\theta}\\|_{2}^{2}\\ \\mathrm{~subject~to~}\\ \\|\\pmb{\\theta}\\|_{0}\\leq k.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "In the above problem, the number of nonzero elements in the parameter vector, $\\lVert\\theta\\rVert_{0}$ , is constrained by $k\\in\\{1,...,n\\}$ . Here, we will let $f(\\pmb\\theta)=\\textstyle\\frac12\\|\\pmb{y}-\\pmb{X}\\pmb\\theta\\|_{2}^{2}$ for simplicity. ", "page_idx": 1}, {"type": "text", "text": "3.2 Iterative Hard Thresholding ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "IHT is the practical algorithm for Problem (1) [5, 2]. It repeatedly performs the following iteration: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad z^{t}=\\theta^{t}-\\eta\\nabla f(\\theta^{t})=\\theta^{t}-\\eta X^{\\top}(X\\theta^{t}-y)=(I-\\eta X^{\\top}X)\\theta^{t}+\\eta X^{\\top}y,}\\\\ &{\\theta^{t+1}=H_{k}(z^{t}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 1}, {"type": "table", "img_path": "09RKw0vXjR/tmp/8975f256741a925475ba9ab92522778b8f24ced0bd9981dede1837a55d5fab04.jpg", "table_caption": [], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "where $\\eta\\,>\\,0$ is the step size, $\\pmb{\\theta}^{t}$ is the parameter vector at the $t$ -th iteration. $H_{k}(z^{t})$ is the hard thresholding operator that selects the $k$ -largest elements in the magnitude of $z^{t}$ and sets the other elements to zero. The selection requires ${\\mathcal{O}}(n\\,\\log\\,k)$ time if it uses a heap. The pseudocode is described in Algorithm 1. See [5, 14, 6, 8, 4, 20, 23, 2] for theoretical discussions of IHT. ", "page_idx": 2}, {"type": "text", "text": "From Equation (2) and Algorithm 1, computing gradients $\\nabla f(\\pmb{\\theta}^{t})$ clearly dominates the other cost. In Equation (2), we use the second equation or the third one to compute $z^{t}$ . They require $\\mathcal{O}(m n)$ and $\\dot{\\mathcal{O}}(n^{2})$ times in every iteration, respectively2. Therefore, IHT incurs high computation cost when $\\pmb{X}\\in\\mathbb{R}^{m\\times n}$ is large. ", "page_idx": 2}, {"type": "text", "text": "4 Proposed Algorithm ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "This section describes our algorithm that reduces the computation cost per iteration in IHT. ", "page_idx": 2}, {"type": "text", "text": "4.1 Main Idea ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The bottleneck of IHT is the gradient computation to obtain $z^{t}$ of Equation (2): it requires $\\mathcal{O}(m n)$ or $O(n^{2})$ time per iteration. Therefore, we reduce the cost by pruning unnecessary elements in $z^{t}$ before computing the gradients. For the pruning, we introduce a candidate set $\\mathcal{D}^{t}$ such that $|\\mathcal{D}^{t}|=k$ for the $t$ -th iteration. This set maintains indices of nonzero elements of the parameter vector during optimization. In other words, the candidate set contains indices of the $k$ -largest elements in terms of magnitude of the parameter vector. Before computing Equation (2), we quickly check whether indices of elements in $z^{t}$ are included or not in $\\mathcal{D}^{t+1}$ . If an index $j$ is not included in $\\mathcal{D}^{t+1}$ , we can prune $z_{j}^{t}$ and skip the corresponding computation of Equation (2) including the gradient computation. ", "page_idx": 2}, {"type": "text", "text": "The point is that our method can efficiently perform the above checking procedure. Specifically, our method utilizes $\\overline{{z}}_{j}^{t}$ , which is an upper bound of $|z_{j}^{t}|$ . Since the computation of the upper bound does not include the gradient computation, it only requires $O(n)$ time for all the elements in ${\\overline{{z}}}^{t}$ . For the checking procedure, after initializing $\\mathcal{D}^{t}$ appropriately, our method finds a threshold for the pruning by utilizing $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ , which is a lower bound of $|\\bar{z}_{j}^{t}|$ . Then, if $\\overline{{z}}_{j}^{t}$ is smaller than the threshold for $\\bar{\\textit{j}}\\not\\in\\mathcal{D}^{\\bar{t}}$ , the index $j$ is not included in $\\mathcal{D}^{t+1}$ . We describe the details in the next section. ", "page_idx": 2}, {"type": "text", "text": "4.2 Upper Bound and Candidate Set ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "This section introduces candidate set $\\mathcal{D}^{t}$ and its updating method. Since we need upper bound $\\overline{{z}}_{j}^{t}$ to efficiently update $\\mathcal{D}^{t}$ as described in Section 4.1, we first define $\\overline{{\\boldsymbol{z}}}_{j}^{t}$ as follows: ", "page_idx": 2}, {"type": "text", "text": "Definition 1 Let $t^{*}$ be $1\\leq t^{*}<t$ in Algorithm $^{\\,l}$ . Then, $\\overline{{z}}_{j}^{t}$ at the $t$ -th iteration in Algorithm $^{\\,l}$ is computed as follows: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{\\overline{{z}}}_{j}^{t}=|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|+\\|G_{j}\\|_{2}\\|\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\|_{2},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $G=I-\\eta X^{\\top}X$ . ", "page_idx": 2}, {"type": "text", "text": "We note that $\\boldsymbol{G}$ and $X^{\\top}y$ are precomputed only once before entering the optimization, and $t^{*}$ is automatically decided as described in Section 4.4. $\\overline{{z}}_{j}^{t}$ has the following property: ", "page_idx": 2}, {"type": "text", "text": "Lemma 1 (Upper bound) When $\\overline{{z}}_{j}^{t}$ is computed by Equation (4), we have $\\overline{{z}}_{j}^{t}\\geq|z_{j}^{t}|$ . ", "page_idx": 3}, {"type": "text", "text": "Lemma 1 is derived from the triangle inequality and the Cauchy\u2013Schwarz inequality. It guarantees that $\\overline{{z}}_{j}^{t}$ is the upper bound of $|z_{j}^{t}|$ . The computation cost of the upper bound is as follows: ", "page_idx": 3}, {"type": "text", "text": "Lemma 2 (Computation cost of upper bound) The computation cost of Equation (4) for all $j\\in$ $\\{1,...,n\\}$ at the $t$ -th iteration is $O(n)$ time given $\\pmb{G}$ , $X^{\\top}y$ and $|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|$ . ", "page_idx": 3}, {"type": "text", "text": "Lemma 2 shows that the upper bound at the $t$ -th iteration requires only $O(n)$ time if $\\boldsymbol{G}$ and $X^{\\top}{\\boldsymbol{y}}$ are precomputed and $|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|$ is computed at the $t^{*}$ -th iteration. ", "page_idx": 3}, {"type": "text", "text": "Next, we define candidate set $\\mathcal{D}^{t}$ as follows: ", "page_idx": 3}, {"type": "text", "text": "Definition 2 (Candidate set) Let $\\mathcal{T}=\\{1,...,n\\}$ be a set of all the indices in the parameter vector $\\pmb\\theta\\in\\mathbb{R}^{n}$ . Suppose that $\\mathcal{D}^{t}\\subset\\mathcal{T}$ is a set such that $|\\dot{\\mathcal{D}}^{t}|=k$ at the $t$ -th iteration in IHT where $t>1$ , and initialized as $\\mathcal{D}^{t}=\\operatorname{supp}(\\pmb{\\theta}^{t})$ at the beginning of the iteration. Then, we call $\\mathcal{D}^{t}$ the candidate set. ", "page_idx": 3}, {"type": "text", "text": "$\\mathcal{D}^{t}$ has indices that are candidates for $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ in IHT. Since $\\mathcal{D}^{t}$ is initialized as $\\mathcal{D}^{t}=\\operatorname{supp}(\\pmb{\\theta}^{t})$ at the beginning of the iteration in Definition 2, we need to update $\\mathcal{D}^{t}$ to $\\mathcal{D}^{t+1}$ so that it matches $\\operatorname{supp}(\\pmb{\\theta}^{t\\mp1})$ . Although we can update $\\mathcal{D}^{t}$ such that $\\begin{array}{r}{\\mathcal{D}^{t+1}=\\operatorname{\\dot{supp}}(H_{k}(z^{t}))}\\end{array}$ by computing Equations (2) and (3), they include the gradient computation that requires $O(m n)$ or $\\Dot{O}(n^{2})$ time. ", "page_idx": 3}, {"type": "text", "text": "To efficiently update $\\mathcal{D}^{t}$ to $\\mathcal{D}^{t+1}$ , we utilize the upper bound $\\overline{{z}}_{j}^{t}$ of Equation (4) for $j\\not\\in\\mathcal{D}^{t}$ . By using $\\overline{{z}}_{j}^{t}$ , we can identify unnecessary elements in $z^{t}$ that are clearly not included in $\\mathcal{D}^{t+1}$ as follows: ", "page_idx": 3}, {"type": "text", "text": "Lemma 3 (Pruning unnecessary elements) Suppose that ${\\overline{{z}}}^{t}$ is computed by using Equation (4), and the candidate set $\\mathcal{D}^{t}$ is initialized as described in Definition 2 at the beginning of the iteration for $t>1$ . Let $z_{i_{\\mathrm{min}}}^{t}$ be $\\boldsymbol{z}_{i}^{t}$ having the minimum $|z_{i}^{t}|$ in all $i\\in\\mathcal{D}^{t}$ , and $i_{\\mathrm{min}}$ be the index. Then, $i f$ $|z_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ holds for $j\\not\\in\\mathcal{D}^{t}$ , $j$ is not included in $\\mathcal{D}^{t+1}$ . ", "page_idx": 3}, {"type": "text", "text": "From Lemma 3, when we check whether $j\\not\\in{\\mathcal{D}}^{t}$ is included or not in $\\mathcal{D}^{t+1}$ , we do not need to compute the gradient corresponding to $z_{j}^{t}$ if $|z_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ holds. Although we need to compute the gradients to find $z_{i_{\\mathrm{min}}}^{t}$ in the initial $\\mathcal{D}^{t}$ , the cost is relatively small because the cardinality of $\\mathcal{D}^{t}$ is usually small as $|D^{t}|=k\\ll n$ . ", "page_idx": 3}, {"type": "text", "text": "Algorithm 2 is the pseudocode of updating the candidate set. It first copies $\\mathcal{D}^{t}$ to $\\mathcal{D}^{t+1}$ (line 3). Lines 4\u201313 check whether the computation of $z_{j}^{t}$ can be pruned or not by following Lemma 3. If the computation is pruned (line 5), we skip the computation of $z_{j}^{t}$ including the gradient computation (line 6). If the computation is not pruned (line 7), line 8 computes $z_{j}^{t}$ . If $|z_{i_{\\mathrm{min}}}^{t}|<|z_{j}^{t}|$ holds (line 9), the algorithm updates the candidate set $\\mathcal{D}^{t+1}$ to remove $i_{\\mathrm{min}}$ and include $j$ (line 10). In this case, $z_{i_{\\mathrm{min}}}^{t}$ must also be updated since $\\mathcal{D}^{t+1}$ has been updated (line 11). If $|z_{i_{\\operatorname*{min}}}^{t}|<|z_{j}^{t}|$ does not hold (line 12), we set $z_{j}^{t}=0$ because $j$ cannot be included in $\\mathcal{D}^{t+1}$ (line 13). ", "page_idx": 3}, {"type": "text", "text": "For the outputs $z^{t}$ and $\\mathcal{D}^{t+1}$ of Algorithm 2, we have the following property: ", "page_idx": 3}, {"type": "text", "text": "Lemma 4 (Consistency of outputs) For the outputs of Algorithm 2, $\\boldsymbol z^{t}\\,\\,=\\,\\,\\boldsymbol\\theta^{t+1}$ and $\\mathcal{D}^{t+1}\\;=\\;$ $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ hold. ", "page_idx": 3}, {"type": "text", "text": "The above lemma shows that Algorithm 2 returns the same $\\pmb{\\theta}^{t+1}$ and $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ as those of the plain IHT while it prunes unnecessary computations given zitmin, , and $\\mathcal{D}^{t}$ . Specifically, we can use Algorithm 2 instead of lines 4\u20135 in Algorithm 1. ", "page_idx": 3}, {"type": "text", "text": "The computation cost of Algorithm 2 is as follows: ", "page_idx": 3}, {"type": "text", "text": "Lemma 5 (Computation cost of updating candidate set) Let u be the number of un-pruned computations at line 7 of Algorithm 2. If $\\pmb{G}$ and $X^{\\top}y$ are precomputed, Algorithm 2 requires $\\mathcal{O}(u n)$ time and the worst time complexity is ${\\mathcal{O}}(n^{2})$ time. ", "page_idx": 3}, {"type": "text", "text": "Lemma 5 shows that the cost of Algorithm 2 is small when the pruning rate is high because $u$ becomes small when the pruning rate is high. On the other hand, the worst time complexity of ${\\mathcal{O}}(n^{2})$ time is obtained with a low pruning rate. The asymptotic cost cannot be larger than that of the plain IHT since the gradient computation of the plain IHT requires $\\mathcal{O}(m n)$ or ${\\mathcal{O}}(n^{2})$ time. Nonetheless, the pruning rate needs to be increased to achieve higher speeds. ", "page_idx": 3}, {"type": "image", "img_path": "09RKw0vXjR/tmp/3f3a1d472675a63e2c51e2a4a1942dc1eddbbdc796871b5a7579584de23c0f03.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "image", "img_path": "09RKw0vXjR/tmp/bab3447daf3a1ded5f7000fa91c4dc21058f6030cf2cb90d444c47b1d8ed34a6.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "In Algorithm 2, $|z_{i_{\\mathrm{min}}}^{t}|$ plays the role of the threshold for pruning at line 5. Therefore, we can raise the pruning rate for a larger threshold of $|z_{i_{\\mathrm{min}}}^{t}|$ because $|z_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ at line 5 is easier to hold for a larger threshold. The next section introduces an efficient way to update $|z_{i_{\\mathrm{min}}}^{t}|$ to a larger value before entering Algorithm 2. ", "page_idx": 4}, {"type": "text", "text": "4.3 Lower Bound and Update of Threshold ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "To update threshold $|z_{i_{\\mathrm{min}}}^{t}|$ to a larger value, we utilize the lower bound $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ such that $|z_{j}^{t}|>\\underline{{z}}_{j}^{t}$ holds for $j\\not\\in\\mathcal{D}^{t}.\\:\\underline{{z}}_{j}^{t}$ is defined as follows: ", "page_idx": 4}, {"type": "text", "text": "Definition 3 Let $t^{*}$ be $1\\leq t^{*}<t$ in Algorithm $^{\\,l}$ . Then, $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ at the $t$ -th iteration in Algorithm $^{\\,l}$ is computed as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\boldsymbol{\\underline{{z}}}_{j}^{t}=|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\mathbf{X}^{\\top}\\pmb{y})_{j}|-\\|G_{j}\\|_{2}\\|\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\|_{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $G=I-\\eta X^{\\top}X$ . ", "page_idx": 4}, {"type": "text", "text": "The following lemma shows that $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ is the lower bound of $|z_{j}^{t}|$ : ", "page_idx": 4}, {"type": "text", "text": "Lemma 6 (Lower bound) We have $\\boldsymbol{\\underline{{z}}}_{j}^{t}\\le\\vert\\boldsymbol{z}_{j}^{t}\\vert$ when $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ is computed by Equation (5). ", "page_idx": 4}, {"type": "text", "text": "Lemma 6 is derived from the reverse triangle inequality and the Cauchy\u2013Schwarz inequality. Similarly to the computation cost of the upper bound, Equation (5) requires the following cost: ", "page_idx": 4}, {"type": "text", "text": "Lemma 7 (Computation cost of lower bound) The computation cost of Equation (5) for all $j\\in$ $\\{1,...,n\\}$ at the $t$ -th iteration is $O(n)$ time given $\\pmb{G}$ , $X^{\\top}y$ and $|G_{j}\\pm\\hat{\\pmb{\\theta}^{t^{*}}}+\\eta(\\bar{\\pmb{X}}^{\\top}\\pmb{y})_{j}|$ . ", "page_idx": 4}, {"type": "text", "text": "To update $|z_{i_{\\mathrm{min}}}^{t}|$ , we utilize the following lemma: ", "page_idx": 4}, {"type": "text", "text": "Lemma 8 (Indices required for candidate set) Suppose that $z^{t}$ is computed by using Equation (5), and the candidate set $\\Bar{\\mathcal{D}}^{t}$ is initialized as described in Definition 2 at the beginning of the iteration for $t>1$ . Let $z_{i_{\\mathrm{min}}}^{t}$ be $\\boldsymbol{z}_{i}^{t}$ having the minimum $|z_{i}^{t}|$ in all $i\\in\\mathcal{D}^{t}$ , and $i_{\\mathrm{min}}$ be the index. Then, $i f$ $|z_{i_{\\operatorname*{min}}}^{t}|<\\underline{{z}}_{j}^{t}$ holds for $j\\not\\in\\mathcal{D}^{t}$ , $j$ is included in $\\mathcal{D}^{t+1}$ . ", "page_idx": 4}, {"type": "text", "text": "The above lemma shows that we can identify indices included in $\\mathcal{D}^{t+1}$ without computing the gradients by using the lower bound $z^{t}$ . The update procedure of $\\mathcal{D}^{t}$ to $\\mathcal{D}^{t+1}$ is described in ", "page_idx": 4}, {"type": "text", "text": "Algorithm 3. Since this $\\mathcal{D}^{t+1}$ is used as the initial candidate set of Algorithm 2, we represent $\\mathcal{D}^{t^{\\prime}}$ as $\\mathcal{D}^{t+1}$ in Algorithm 3 to avoid confusion. The algorithm copies $\\mathcal{D}^{t}$ to $\\mathcal{D}^{t^{\\prime}}$ at line 3. Line 5 checks whether $|z_{i_{\\operatorname*{min}}}^{t}|<\\underline{{z}}_{j}^{t}$ holds or not. If the equation holds, the algorithm updates $\\mathcal{D}^{t^{\\prime}}$ to remove $i_{\\mathrm{min}}$ and include $j$ (line 6). At this time, we also update $z_{j}^{t}$ and $z_{i_{\\mathrm{min}}}^{t}$ to reflect the update of $\\mathcal{D}^{t^{\\prime}}$ (lines 7\u20139). $z_{i_{\\mathrm{min}}}^{t^{\\prime}}$ and $z^{t^{\\prime}}$ (lines 10\u201311) are used as $z_{i_{\\mathrm{min}}}^{t}$ and $z^{t}$ in Algorithm 2. ", "page_idx": 5}, {"type": "text", "text": "The important point of Algorithm 3 is that the absolute value of the output $|z_{i_{\\operatorname*{min}}}^{t^{\\prime}}|$ is equal to or larger than the initial $|z_{i_{\\mathrm{min}}}^{t}|$ as follows: ", "page_idx": 5}, {"type": "text", "text": "Lemma 9 (Threshold increase) In Algorithm 3, $|z_{i_{\\operatorname*{min}}}^{t^{\\prime}}|\\geq|z_{i_{\\operatorname*{min}}}^{t}|$ holds. ", "page_idx": 5}, {"type": "text", "text": "From the above lemma, we can obtain large $|z_{i_{\\mathrm{min}}}^{t^{\\prime}}|$ as the threshold $|z_{i_{\\mathrm{min}}}^{t}|$ in Algorithm 2 by performing Algorithm 3 before entering Algorithm 2. As a result, we can expect Algorithm 2 to increase the pruning rate. ", "page_idx": 5}, {"type": "text", "text": "The computation cost of Algorithm 3 is as follows: ", "page_idx": 5}, {"type": "text", "text": "Lemma 10 (Computation cost of threshold increase) Let l be the number of indices that are determined to be included in $\\mathcal{D}^{t^{\\prime}}$ at line 5 of Algorithm 3. If $\\pmb{G}$ and $X^{\\top}y$ are precomputed, Algorithm 3 requires $\\mathcal{O}(l n)$ time and the worst time complexity of Algorithm 3 is $O(n^{2})$ time. ", "page_idx": 5}, {"type": "text", "text": "Similarly to Lemma 5 of Algorithm 2, the worst time complexity is not much more than that of IHT. ", "page_idx": 5}, {"type": "text", "text": "4.4 Algorithm ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Algorithm 4 is the pseudocode of our method based on Algorithms 2 and 3. We first precompute $\\boldsymbol{G}$ and $X^{\\top}y$ for the upper and lower bounds (line 3). The main loop consists of two types of procedures (lines 4\u201322): the procedure for $t=t^{*}$ (lines 5\u201311) and the procedure for $t\\neq t^{*}$ (lines 12\u201321). For the case of $t=t^{*}$ , the algorithm updates the parameter vector the same as the plain IHT (lines 6\u20137) and computes the candidate set (line 8). We note that the computation result of line 6 is also used for computing the upper and lower bounds as shown in Definitions 1 and 3. Line 9 sets $t^{*}$ as $t$ and line 10 computes an interval $r\\geq1$ that determines which $t$ is the next $t^{*}$ . Specifically, the next $t^{*}$ is determined as $t^{*}+r$ . The computation way of $r$ is described later. $r^{\\prime}$ is the variable that monitors the interval. If $t=t^{*}$ does not hold (line 12), it computes $\\boldsymbol{z}_{i}^{t}$ for $i\\in\\mathcal{D}^{t}$ by using Equation (2) (line 13). Next, line 14 computes the lower bound by using Equation (5) on the basis of Lemma 6. Then, we find the initial threshold at line 15 and update it by using Algorithm 3 on the basis of Lemmas 8 and 9 (line 16). Then, we compute the upper bound by using Equation (4) on the basis of Lemma 1 (line 17). Line 18 computes $z^{t}$ by using Algorithm 2 while pruning unnecessary computations on the basis of Lemma 3. This $z^{t}$ can be handled as $\\pmb{\\theta}^{t+1}$ by following Lemma 4 (line 19). We monitor the interval of the next $t^{*}$ at line 20 through $r^{\\prime}$ . The algorithm repeats the above procedure until a stopping criterion is met (line 22). An example of a stopping criterion is relative tolerance [23]. ", "page_idx": 5}, {"type": "text", "text": "Automatic determination of $t^{*}$ via $r$ . In Algorithm 4, we need to compute interval $r$ at line 10 to determine $t^{*}$ because $\\pmb{\\theta}^{t^{*}}$ appears in Equations (4) and (5) for computing the upper and lower bounds, respectively. Since the upper bound $\\overline{{z}}_{j}^{\\dot{t}}$ and lower bound $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ are the approximation of $z_{j}^{t}$ , we obtain the following error bound: ", "page_idx": 5}, {"type": "text", "text": "Lemma 11 Suppose that $\\epsilon_{j}$ is computed as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\epsilon_{j}=2\\|\\boldsymbol{G}_{j}\\|_{2}\\|\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\|_{2}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Then, $|\\overline{{\\boldsymbol{z}}}_{j}^{t}-\\boldsymbol{z}_{j}^{t}|\\leq\\epsilon_{j}$ and $|\\underline{{z}}_{j}^{t}-z_{j}^{t}|\\leq\\epsilon_{j}$ hold. ", "page_idx": 5}, {"type": "text", "text": "From the above lemma, the magnitude of error bound $\\epsilon_{j}$ depends on $t^{*}$ because of $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}$ in Equation (6). If we set $r$ to a large value, the error bound can be large since $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}$ tends to be large. In this case, the bounds are loose and it is difficult to hold $|z_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ in Lemma 3. As a result, the pruning rate will be low. On the other hand, if we set $r$ a small value, the algorithm frequently computes lines 5\u201311 although we can obtain tight bounds. Since line 6 requires $O(n^{2})$ time, the reduction of the computation cost will be small. To solve the above problem, we automatically determine $r$ on the basis of the current pruning rate that is defined as follows: ", "page_idx": 5}, {"type": "table", "img_path": "09RKw0vXjR/tmp/a5caa2f04bef9811e24239be18bf34b8c9212af5736b874df6510fada448008e.jpg", "table_caption": ["Algorithm 4 Fast Iterative Hard Thresholding "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Definition 4 (Pruning rate) Let $u_{t}$ be the number of un-pruned computations at line 7 in Algorithm 2 for the $t$ -th iteration as defined in Lemma 5. Then, we define pruning rate $p_{t}$ at line $I O$ in Algorithm 4 for the $t$ -th iteration as follows: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\begin{array}{r}{p_{t}=\\frac{n-k-u_{t-1}}{n-k}\\times100.0.}\\end{array}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "The unit of $p_{t}$ is percent. We compute $r$ at line 10 in Algorithm 4 on the basis of $p_{t}$ as follows: ", "page_idx": 6}, {"type": "equation", "text": "$$\nr=\\left\\{\\begin{array}{c l}{{r+1}}&{{\\mathrm{if}\\ \\ p_{t}\\geq50.0}}\\\\ {{\\lceil r/2\\rceil}}&{{\\mathrm{if}\\ \\ p_{t}<50.0.}}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "$\\lceil\\cdot\\rceil$ is the ceiling function. If the algorithm could prune half of the computations at the previous iteration, it increases interval $r$ . If not, we update $r$ to $\\lceil r/2\\rceil$ to reduce error bound $\\epsilon_{j}$ . Therefore, if the pruning rate is high, we can reduce the number of computations at line 6 by increasing the interval. If not, the interval becomes small and the upper and lower bounds are expected to be tight. This rule performs well in our experiments. ", "page_idx": 6}, {"type": "text", "text": "4.5 Analysis ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "The computation cost of Algorithm 4 is as follows: ", "page_idx": 6}, {"type": "text", "text": "Theorem 1 (Computation cost) Let $u^{\\prime}$ and $l^{\\prime}$ be the total numbers of u and $l$ in Lemmas 5 and 10 in Algorithm 4, respectively. Suppose that $r$ is a constant for simplicity, $\\tau$ is the total number of main loops in Algorithm 4, and $\\tau^{\\prime}$ is the number for which line $^{12}$ holds. Then, the computation cost of Algorithm $^{4}$ is $\\begin{array}{r}{\\mathcal{O}(n^{2}(m+\\frac{\\tau}{r+1})+n(l^{\\prime}+\\dot{u}^{\\prime}+\\tau^{\\prime}k))}\\end{array}$ time, and the worst time complexity is $O(n^{2}(m+\\tau))$ time. ", "page_idx": 6}, {"type": "text", "text": "The plain IHT of Algorithm 1 requires $O(n^{2}(m+\\tau))$ time if $\\pmb{G}$ and $X^{\\top}{\\boldsymbol{y}}$ are precomputed.   \nTherefore, the worst time complexity of our method is the same as the cost of the plain IHT. ", "page_idx": 6}, {"type": "text", "text": "For the optimization result, we obtain the following theorem: ", "page_idx": 6}, {"type": "text", "text": "Theorem 2 (Optimization result) Suppose that Algorithm 4 has the same hyperparameters as those of the plain IHT of Algorithm 1. Then, Algorithm 4 yields the same parameter vector and objective value as Algorithm 1. ", "page_idx": 7}, {"type": "text", "text": "Theorem 2 guarantees accuracy of our method. Our method prunes unnecessary computations without degrading accuracy.   \nFor the upper and lower bounds, the following property holds: ", "page_idx": 7}, {"type": "text", "text": "Theorem 3 (Convergence of upper and lower bounds) Suppose that Algorithm 4 converges as ${\\pmb\\theta}^{t}={\\pmb\\theta}^{t^{*}}$ . Then, we obtain $\\epsilon_{j}=0$ for $j\\in\\{1,...,n\\}$ where $\\epsilon_{j}$ is the error bound of the upper and lower bounds defined in Lemma $_{l l}$ . ", "page_idx": 7}, {"type": "text", "text": "Theorem 3 shows that the upper bound $\\overline{{z}}_{j}^{t}$ and lower bound $\\boldsymbol{\\underline{{z}}}_{j}^{t}$ become the exact value of $z_{j}^{t}$ when ${\\pmb\\theta}^{t}\\,=\\,{\\pmb\\theta}^{t^{*}}$ holds. Therefore, our method accurately prunes unnecessary computations when the condition is satisfied. ", "page_idx": 7}, {"type": "text", "text": "5 Experiment ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We evaluated the processing time and accuracy of our method on feature selection tasks. We performed experiments on five datasets from the LIBSVM [9] and OpenML [34]: gisette, robert, ledgar, real-sim, and epsilon. The sizes of the input matrices are $6000\\,\\times\\,5000$ , $10000\\,\\times\\,7200$ , $60000\\times19996$ , $72309\\times20958$ , and $400000\\times2000$ , respectively. We evaluated the processing time and accuracy on $k=\\left\\{1,5,10,20,40,80,160,320,640,1280\\right\\}$ . We compared our method with the plain IHT (IHT), Regularized IHT (RegIHT) [2], and Accelerated IHT (AccIHT) [23]. RegIHT is the fastest method among the methods using an adaptive regularization technique [1]. Since RegIHT has the hyperparameter of weight step size $c$ , we tried the setting of $c=\\{\\bar{k},k/10,k/100\\}$ on the basis of the original paper. AccIHT improves the convergence of IHT by utilizing the momentum. We tried $\\mu=\\{0.025,0.25,2.5\\}$ for the momentum step size $\\mu$ where the value of 0.25 is the one recommended in the original paper. We set step sizes of all the methods $\\eta=1/\\lambda$ where $\\lambda$ is the largest eigen value of $X^{\\top}X$ by following [23]. We stopped these methods when the relative tolerance of the parameter vector dropped below $\\bar{10}^{-5}$ [23, 15]. All the experiments were conducted on a 3.20 GHz Intel CPU with six cores and 64 GB of main memory. ", "page_idx": 7}, {"type": "text", "text": "5.1 Processing Time ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Figure 1 (a)\u2013(e) compare the processing times on logarithmic scale. Our method was up to 73 times faster than IHT and outperformed all the baselines in all the settings. Because our method is based on the pruning, it achieved a large speedup factor for smaller $k$ . Even when $k$ increased, the processing time was significantly shorter than the baselines. ", "page_idx": 7}, {"type": "text", "text": "We note that our method does not need hyperparameter tuning due to using the automatic determination technique described in Section 4.4. Specifically, practitioners only need to specify $k$ to use our method the same as the plain IHT. On the other hand, the baselines of RegIHT and AccIHT require additional hyperparameter tuning for the weight step size and the momentum step size, respectively. ", "page_idx": 7}, {"type": "text", "text": "Number of Gradient Computations. Figure 1 (f) compares the number of gradient computations between our method and the plain IHT on the gisette dataset. Our method reduced the number of computations by up to $98.87\\%$ . The result shows the effectiveness of our pruning strategy and supports the reduction in processing times of Figure 1 (a)\u2013(e). ", "page_idx": 7}, {"type": "text", "text": "Processing Time with Large Step Size. Since the error bound of upper and lower bounds depends on $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}$ in Equation (6), a large step size may incur a potential decrease in the pruning rate and our method may be slow down. To address this concern, we conducted an experiment to evaluate the processing times with an increased step size. We increased the step size to 10 times larger than that used in Figure 1 (a) on the gisette dataset. Figure 1 (g) shows the results, exhibit a similar trend to Figure 1 (a). Our method was able to speed up IHT even with the larger step size. This success is due to our automatic determination of $t^{*}$ , which adjusts the pruning rate during optimization, as described in Definition 4 and Equation (8). In contrast, AccIHT failed to converge in some cases due to the momentum, preventing us from evaluating the processing times for those instances. While ", "page_idx": 7}, {"type": "image", "img_path": "09RKw0vXjR/tmp/be1fb1f3f78e9248de9dc01dda56b083bb450085bea40d35a91114dc8ccb32d7.jpg", "img_caption": ["Figure 1: (a)\u2013(e): Comparisons of log processing times for each dataset and $k$ . (f): Comparison of number of gradient computations on gisette. (g): Comparisons of log processing times for gisette with a large step size. Some results of AccIHT are omitted since they could not converge. ", "(a) gisette with a large step size "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "AccIHT reduces the number of iterations by using the momentum, our method reduces the cost per iteration on the basis of the pruning strategy. This result shows an advantage of the pruning approach. ", "page_idx": 8}, {"type": "text", "text": "5.2 Accuracy ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Theorem 2 guarantees that our method achieves the same results as the plain IHT. To verify the theorem, we compared the objective values between our method and the plain IHT. Table 1 shows the results for $k=\\{1,20,160,1280\\}$ , and our method achieved the same objective values as the plain IHT. We obtained the same trend results as above in the other settings of $k$ . We note that our method also yielded the same support of nonzero elements in the parameter vector and their coefficients as the plain IHT though the results are omitted. These results support our theoretical result for Theorem 2. In addition, our method also ensures that the parameter vector of each iteration matches perfectly with that of the plain IHT from Lemma 4. This property is not obtained in previous acceleration methods based on the momentum such as AccIHT. ", "page_idx": 8}, {"type": "table", "img_path": "09RKw0vXjR/tmp/c2ff6151e4821a6aa2522c5eb7e29c418ea5e1b365737a105d4cb3caff9c9745.jpg", "table_caption": ["Table 1: Objective values of the plain IHT and our method for $k=\\{1,20,160,1280\\}$ "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We accelerated iterative hard thresholding (IHT) by safely pruning unnecessary gradient computations. The main idea is to efficiently maintain the candidate set, which contains indices of nonzero elements in the parameter vector, during optimization. Before computing the gradients for each iteration, we prune unnecessary elements for the candidate set by utilizing the upper bound. To raise the pruning rate, we update the threshold to determine whether an element is included or not in the candidate set by using the lower bound. Our method guarantees the same optimization results as the plain IHT because our pruning is safe. In addition, it does not need additional hyperparameter tuning. Experiments show that our method is up to 73 times faster than IHT without degrading accuracy. As future work, we plan to extend our method to general convex loss functions with sparsity-inducing norms to enhance more applications. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] K. Axiotis and M. Sviridenko. Sparse Convex Optimization via Adaptively Regularized Hard Thresholding. Journal of Machine Learning Research (JMLR), 22(122):1\u201347, 2021.   \n[2] K. Axiotis and M. Sviridenko. Iterative Hard Thresholding with Adaptive Regularization: Sparser Solutions without Sacrificing Runtime. In Proceedings of International Conference on Machine Learning (ICML), pages 1175\u20131197, 2022.   \n[3] A. Beck and M. Teboulle. A Fast Iterative Shrinkage-Thresholding Algorithm for Linear Inverse Problems. SIAM Journal on Imaging Sciences, 2(1):183\u2013202, 2009.   \n[4] T. Blumensath. Accelerated Iterative Hard Thresholding. Signal Process., 92(3):752\u2013756, 2012.   \n[5] T. Blumensath and M. Davies. Iterative Thresholding for Sparse Approximations. Journal of Fourier Analysis and Applications, 14:629\u2013654, 2008.   \n[6] T. Blumensath and M. Davies. Iterative Hard Thresholding for Compressed Sensing. Applied and Computational Harmonic Analysis, 27(3):265\u2013274, 2009.   \n[7] A. Boisbunon, R. Flamary, and A. Rakotomamonjy. Active Set Strategy for High-dimensional Non-Convex Sparse Optimization Problems. In Proceedings of International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 1517\u20131521. IEEE, 2014.   \n[8] V. Cevher. On Accelerated Hard Thresholding Methods for Sparse Approximation. In Wavelets and Sparsity XIV, volume 8138, 2011.   \n[9] C. Chang and C. Lin. LIBSVM: A Library for Support Vector Machines. ACM TIST, 2(3): 27:1\u201327:27, 2011.   \n[10] W. Dai and O. Milenkovic. Subspace Pursuit for Compressive Sensing Signal Reconstruction. IEEE Trans. Inf. Theory, 55(5):2230\u20132249, 2009.   \n[11] S. Foucart. Hard Thresholding Pursuit: An Algorithm for Compressive Sensing. SIAM J. Numer. Anal., 49(6):2543\u20132563, 2011.   \n[12] Y. Fujiwara, Y. Ida, J. Arai, M. Nishimura, and S. Iwamura. Fast Algorithm for the Lasso based L1-Graph Construction. Proc. VLDB Endow., 10(3):229\u2013240, 2016.   \n[13] Y. Fujiwara, Y. Ida, H. Shiokawa, and S. Iwamura. Fast Lasso Algorithm via Selective Coordinate Descent. In Proceedings of the AAAI Conference on Artificial Intelligence, pages 1561\u20131567, 2016.   \n[14] R. Garg and R. Khandekar. Gradient Descent with Sparsification: An Iterative Algorithm for Sparse Recovery with Restricted Isometry Property. In Proceedings of International Conference on Machine Learning (ICML), pages 337\u2013344, 2009.   \n[15] Y. Ida, Y. Fujiwara, and H. Kashima. Fast Sparse Group Lasso. In Advances in Neural Information Processing Systems (NeurIPS), pages 1702\u20131710, 2019.   \n[16] Y. Ida, S. Kanai, Y. Fujiwara, T. Iwata, K. Takeuchi, and H. Kashima. Fast Deterministic CUR Matrix Decomposition with Accuracy Assurance. In Proceedings of International Conference on Machine Learning (ICML), pages 4594\u20134603, 2020.   \n[17] Y. Ida, S. Kanai, K. Adachi, A. Kumagai, and Y. Fujiwara. Fast Regularized Discrete Optimal Transport with Group-Sparse Regularizers. In Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), pages 7980\u20137987, 2023.   \n[18] Y. Ida, S. Kanai, and A. Kumagai. Fast Block Coordinate Descent for Non-Convex Group Regularizations. In Proceedings of International Conference on Artificial Intelligence and Statistics (AISTATS), pages 2481\u20132493, 2023.   \n[19] P. Jain, A. Tewari, and I. S. Dhillon. Orthogonal Matching Pursuit with Replacement. In Advances in Neural Information Processing Systems (NeurIPS), pages 1215\u20131223, 2011.   \n[20] P. Jain, A. Tewari, and P. Kar. On Iterative Hard Thresholding Methods for High-dimensional MEstimation. In Advances in Neural Information Processing Systems (NeurIPS), pages 685\u2013693, 2014.   \n[21] T. Johnson and C. Guestrin. Blitz: A Principled Meta-Algorithm for Scaling Sparse Optimization. In Proceedings of International Conference on Machine Learning (ICML), pages 1171\u20131179, 2015.   \n[22] T. B. Johnson and C. Guestrin. StingyCD: Safely Avoiding Wasteful Updates in Coordinate Descent. In Proceedings of International Conference on Machine Learning (ICML), pages 1752\u20131760, 2017.   \n[23] R. Khanna and A. Kyrillidis. IHT Dies Hard: Provable Accelerated Iterative Hard Thresholding. In Proceedings of International Conference on Artificial Intelligence and Statistics (AISTATS), pages 188\u2013198, 2018.   \n[24] A. Kyrillidis and V. Cevher. Recipes on Hard Thresholding Methods. In IEEE International Workshop on Computational Advances in Multi-Sensor Adaptive Processing, pages 353\u2013356, 2011.   \n[25] S. Mallat and Z. Zhang. Matching Pursuits with Time-Frequency Dictionaries. IEEE Transactions on Signal Processing, 41(12):3397\u20133415, 1993.   \n[26] M. Massias, J. Salmon, and A. Gramfort. Celer: a Fast Solver for the Lasso with Dual Extrapolation. In Proceedings of International Conference on Machine Learning (ICML), pages 3321\u20133330, 2018.   \n[27] D. Needell and J. Tropp. CoSaMP: Iterative Signal Recovery from Incomplete and Inaccurate Samples. Applied and Computational Harmonic Analysis, 26(3):301\u2013321, 2009.   \n[28] Y. Nesterov. A Method for Solving the Convex Programming Problem with Convergence Rate ${\\mathcal{O}}(1/k^{2})$ . Proceedings of the USSR Academy of Sciences, 269:543\u2013547, 1983.   \n[29] Y. C. Pati, R. Rezaiifar, and P. S. Krishnaprasad. Orthogonal Matching Pursuit: Recursive Function Approximation with Applications to Wavelet Decomposition. Proceedings of 27th Asilomar Conference on Signals, Systems and Computers, pages 40\u201344, 1993.   \n[30] K. Qiu and A. Dogand\u017ei\u00b4c. Double Overrelaxation Thresholding Methods for Sparse Signal Reconstruction. In Annual Conference on Information Sciences and Systems, pages 1\u20136, 2010.   \n[31] A. Rakotomamonjy, R. Flamary, J. Salmon, and G. Gasso. Convergent Working Set Algorithm for Lasso with Non-Convex Sparse Regularizers. In Proceedings of International Conference on Artificial Intelligence and Statistics (AISTATS), pages 5196\u20135211, 2022.   \n[32] C. J. Rozell, D. H. Johnson, R. G. Baraniuk, and B. A. Olshausen. Sparse Coding via Thresholding and Local Competition in Neural Circuits. Neural Comput., 20(10):2526\u20132563, 2008.   \n[33] J. Sulam, B. Ophir, M. Zibulevsky, and M. Elad. Trainlets: Dictionary Learning in High Dimensions. IEEE Trans. Signal Process., 64(12):3180\u20133193, 2016.   \n[34] J. Vanschoren, J. N. van Rijn, B. Bischl, and L. Torgo. OpenML: Networked Science in Machine Learning. SIGKDD Explorations, 15(2):49\u201360, 2013.   \n[35] X. Yuan, P. Li, and T. Zhang. Gradient Hard Thresholding Pursuit for Sparsity-Constrained Optimization. In Proceedings of International Conference on Machine Learning (ICML), pages 127\u2013135, 2014. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A Proofs ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "A.1 Lemma 1 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof From Equation (2), we obtain the following equation: ", "page_idx": 12}, {"type": "equation", "text": "$$\n{\\begin{array}{r c l}{z^{t}}&{=}&{z^{t}+z^{t^{*}}-z^{t^{*}}}\\\\ &{=}&{(I-\\eta X^{\\top}X)\\theta^{t}+\\eta X^{\\top}y+(I-\\eta X^{\\top}X)\\theta^{t^{*}}+\\eta X^{\\top}y-(I-\\eta X^{\\top}X)\\theta^{t^{*}}-\\eta X^{\\top}y}\\\\ &{=}&{G\\theta^{t^{*}}+\\eta X^{\\top}y+G(\\theta^{t}-\\theta^{t^{*}}).}\\end{array}}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "By using the triangle inequality and the Cauchy\u2013Schwarz inequality, we have the following inequality from the above equation: ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r}{|z_{j}^{t}|\\leq|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|+|G_{j}(\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}})|}\\\\ {\\leq|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|+\\|G_{j}\\|_{2}\\|\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\|_{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "which completes the proof. ", "page_idx": 12}, {"type": "text", "text": "A.2 Lemma 2 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof Computing $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}$ in Equation (4) requires ${\\mathcal{O}}(n)$ time. Therefore, the cost of Equation (4) at the $t$ -th iteration is $\\mathcal{O}(n)$ time if $\\pmb{G}$ , $X^{\\top}y$ and $|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\pmb{X}^{\\top}\\pmb{y})_{j}|$ are precomputed. \u25a1 ", "page_idx": 12}, {"type": "text", "text": "A.3 Lemma 3 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof $I f\\vert z_{i_{\\operatorname*{min}}}^{t}\\vert\\geq\\overline{{z}}_{j}^{t}$ holds for $j\\not\\in\\mathcal{D}^{t}$ , we obtain $|z_{i_{\\operatorname*{min}}}^{t}|\\geq|z_{j}^{t}|$ from $\\overline{{z}}_{j}^{t}\\geq|z_{j}^{t}|$ . In this case, since $|z_{i_{\\mathrm{min}}}^{t}|$ is the minimum $|z_{i}^{t}|$ for all $i\\in\\mathcal{D}^{t}$ , $|z_{j}^{t}|$ cannot be larger than $|z_{i}^{t}|$ for all $i\\in\\mathcal{D}^{t}$ . Therefore, $j$ cannot be included in $\\mathcal{D}^{t+1}$ . \u25a1 ", "page_idx": 12}, {"type": "text", "text": "A.4 Lemma 4 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof In Algorithm 2, $i f\\vert z_{i_{\\mathrm{min}}}^{t}\\vert\\geq\\overline{{z}}_{j}^{t}$ holds for $j\\not\\in\\mathcal{D}^{t}$ , $j$ cannot be included in $\\mathcal{D}^{t+1}$ by Lemma 3 (line 5). In addition, $|z_{i_{\\mathrm{min}}}^{t}|$ does not decrease compared to the previous $|z_{i_{\\mathrm{min}}}^{t}|$ when it is updated at line $_{l l}$ . Therefore, $|\\widetilde{z}_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ always holds even after $|z_{i_{\\mathrm{min}}}^{t}|$ is updated. As a result, since $|z_{j}^{t}|$ cannot be included in the $k$ -largest elements in the magnitude of $z^{t},\\,j$ cannot be included in $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ . If $|z_{i_{\\mathrm{min}}}^{t}|<\\overline{{z}}_{j}^{t}$ holds (line 7), Algorithm 2 exactly computes $z_{j}^{t}$ (line 8) and checks whether $|z_{j}^{t}|$ is included or not in the $k$ -largest elements in the magnitude of $z^{t}$ (lines 9\u201313). Therefore, this part exactly computes $\\pmb{\\theta}^{t+1}=H_{k}(\\pmb{z}^{t})\\,f o r\\,j$ . Since $j$ cannot be included in $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ for the case of $|z_{i_{\\mathrm{min}}}^{t}|\\geq\\overline{{z}}_{j}^{t}$ and the other case exactly computes $\\pmb{\\theta}^{t+1}\\,=\\,H_{k}(\\pmb{z}^{t})$ , $z^{t}$ matches $\\theta^{t+1}$ . $I n$ addition, since $\\mathcal{D}^{t+\\hat{1}}=\\operatorname{supp}(z^{t})$ holds from line 10, $\\mathcal{D}^{t+1}$ matches $\\operatorname{supp}(\\pmb{\\theta}^{t+1})$ . \u25a1 ", "page_idx": 12}, {"type": "text", "text": "A.5 Lemma 5 ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Proof For un-pruned $j$ at line 7 in Algorithm 2, computing $z_{j}^{t}$ (line 8) requires ${\\mathcal{O}}(n)$ time if $\\boldsymbol{G}$ and $X^{\\top}{\\boldsymbol{y}}$ are precomputed. When $|z_{i_{\\operatorname*{min}}}^{t}|<|z_{j}^{t}|$ holds (line 9), we need to find $z_{i_{\\mathrm{min}}}^{t}$ in $\\mathcal{D}^{t+1}$ in addition to the above computation. The cost is $O(k)$ time because of $|\\mathcal{D}^{t}|=k$ . Because the number of un-pruned computations is $u$ , the total cost of Algorithm 2 is $O(u(n+k))$ time. At this time, since $k\\ll n$ , the final cost is $\\mathcal{O}(u n)$ time. ", "page_idx": 12}, {"type": "text", "text": "If Algorithm 2 cannot prune any computation for $j\\not\\in\\mathcal{D}^{t}$ , the number of un-pruned computations u equals $n-k$ . Since $k\\ll n$ , the worst time complexity is ${\\mathcal{O}}(n^{2})$ time. \u25a1 ", "page_idx": 12}, {"type": "text", "text": "A.6 Lemma 6 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof Similarly to the proof of Lemma $^{\\,l}$ , we obtain the following inequality by using Equation (2), the reverse triangle inequality, and the Cauchy\u2013Schwarz inequality: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r}{|z_{j}^{t}|\\geq|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\mathbf{X}^{\\top}\\pmb{y})_{j}|-|G_{j}(\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}})|}\\\\ {\\geq|G_{j}\\pmb{\\theta}^{t^{*}}+\\eta(\\mathbf{X}^{\\top}\\pmb{y})_{j}|-\\|G_{j}\\|_{2}\\|\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\|_{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "which completes the proof. ", "page_idx": 13}, {"type": "text", "text": "A.7 Lemma 7 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof Similarly to the proof of Lemma 2, computing $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}$ in Equation (5) requires ${\\mathcal{O}}(n)$ time. Therefore, the cost of Equation (5) at the $t$ -th iteration is ${\\mathcal{O}}(n)$ time if G, $X^{\\top}y$ and $|G_{j}\\pmb{\\theta}^{t^{*}}+$ $\\eta(\\boldsymbol{X}^{\\intercal}\\boldsymbol{y})_{j}|$ are precomputed. \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.8 Lemma 8 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof When $|z_{i_{\\operatorname*{min}}}^{t}|<\\underline{{z}}_{j}^{t}$ holds, $|z_{i_{\\mathrm{min}}}^{t}|\\,<\\,|z_{j}^{t}|$ holds because we have $\\underline{{z}}_{j}^{t}\\,<\\,|z_{j}^{t}|$ . Since $|z_{j}^{t}|$ is larger than $|z_{i_{\\mathrm{min}}}^{t}|$ , which is the minimum $|z_{i}^{t}|\\,f o r\\,i\\in\\mathcal{D}^{t},$ , $j$ is included in $\\mathcal{D}^{t+1}$ . \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.9 Lemma 9 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof When $|z_{i_{\\operatorname*{min}}}^{t}|<\\underline{{z}}_{j}^{t}$ holds at line $5$ in Algorithm 3, the corresponding $|z_{j}^{t}|$ is larger than $|z_{i_{\\mathrm{min}}}^{t}|$ since we have $\\underline{{z}}_{j}^{t}<|\\boldsymbol{z}_{j}^{t}|$ . In addition, $z_{i_{\\mathrm{min}}}^{t}$ is set to zero at line 8. Thus, the absolute value of the new $z_{i_{\\mathrm{min}}}^{t}$ found at line $^{\\,g}$ is equal to or larger than the\u2032 old one. If $|z_{i_{\\mathrm{min}}}^{t}|$ is not updated in Algorithm 3, $|z_{i_{\\operatorname*{min}}}^{t^{\\prime}}|$ is equal to the initial $|z_{i_{\\mathrm{min}}}^{t}|$ . Therefore, $|z_{i_{\\operatorname*{min}}}^{t^{\\prime}}|\\geq|z_{i_{\\operatorname*{min}}}^{t}|$ holds. \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.10 Lemma 10 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof Similarly to the proof of Lemma 5, computing $z_{j}^{t}$ (line 7) requires ${\\mathcal{O}}(n)$ time in Algorithm 3 $i f G$ and $X^{\\top}y$ are precomputed. In addition, we need to find $z_{i_{\\mathrm{min}}}^{t}$ in $\\mathcal{D}^{t^{\\prime}}$ at $O(k)$ time (line 9). Therefore, the total cost of Algorithm 3 is $O(l(n+k))$ time. At this time, since $k\\ll n$ , the final cost is $\\mathcal{O}(l n)$ time. ", "page_idx": 13}, {"type": "text", "text": "If all $j\\not\\in\\mathcal{D}^{t}$ are determined to be included in $\\mathcal{D}^{t^{\\prime}}$ at line $^{5}$ , its number is $l=n-k$ . Since $k\\ll n$ , the worst time complexity is ${\\mathcal{O}}(n^{2})$ time. \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.11 Lemma 11 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof From Equations (4) and (5), $|\\overline{{\\boldsymbol{z}}}_{j}^{t}-\\boldsymbol{\\underline{{z}}}_{j}^{t}|=2\\|\\boldsymbol{G}_{j}\\|_{2}\\|\\boldsymbol{\\theta}^{t}-\\boldsymbol{\\theta}^{t^{*}}\\|_{2}=\\epsilon_{j}$ . Then, for the upper bound, $|\\overline{{\\boldsymbol{z}}}_{j}^{t}-\\boldsymbol{z}_{j}^{t}|\\leq|\\overline{{\\boldsymbol{z}}}_{j}^{t}-\\boldsymbol{\\underline{{z}}}_{j}^{t}|=\\epsilon_{j}$ holds. Similarly to the upper bound, we also obtain the inequality in the lemma for the lower bound. \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.12 Theorem 1 ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Proof For line 3 in Algorithm 4, computing $\\boldsymbol{G}$ and $X^{\\top}y$ require ${\\mathcal{O}}(n^{2}m)$ and ${\\mathcal{O}}(n m)$ times, respectively. Next, lines $6$ and 7 require $\\bar{O}(n^{2})$ and ${\\mathcal{O}}(n\\log k)$ times, respectively. Since lines $6{-}l1$ are performed $\\tau/(r+1)$ times, the cost of this part is ${\\mathcal{O}}(n^{2}\\tau/(r\\!+\\!1))$ time. For lines $I3{-}2I$ , the costs of $\\mathcal{O}(n k)$ (line $^{13}$ ), $O(n)$ (line $I4$ ), $O(k)$ (line $I5_{.}$ ), $\\mathcal{O}(l n)$ (line $I6$ ), $O(n)$ (line $I7,$ , and $\\mathcal{O}(u n)$ (line $I\\&)$ are required. Since this part is performed $\\tau^{\\prime}$ times, the cost represented as $\\mathcal{O}(n(l^{\\prime}+\\dot{u}^{\\prime}+\\tau^{\\prime}k))$ time by using $l^{\\prime}$ and $u^{\\prime}$ . Therefore, the total cost of Algorithm $^{4}$ is $\\begin{array}{r}{\\mathcal{O}(n^{2}(m+\\frac{\\tau}{r+1})+n(l^{\\prime}+u^{\\prime}+\\tau^{\\prime}k))}\\end{array}$ time. ", "page_idx": 13}, {"type": "text", "text": "The case of $l=u=n$ and $k=n$ yields the worst time complexity. In this case, the cost of lines $I3{-}2I$ is $O(\\tau^{\\prime}n^{2})$ time. In addition, the cost of lines 6\u201311 can be represented as $O((\\tau-\\tau^{\\prime})n^{2})$ time. As a result, the cost is $O(n^{2}(m+\\tau))$ time. \u25a1 ", "page_idx": 13}, {"type": "text", "text": "A.13 Theorem 2 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Proof For lines 6\u20137 in Algorithm 4, line 7 returns the same $\\pmb{\\theta}^{t+1}$ as line 5 in Algorithm 1 since both procedures are the same. Line $_{l9}$ in Algorithm 4 also returns the same $\\pmb{\\theta}^{t+1}$ as line 5 in Algorithm 1 because of Lemma 4. Thus, the sequence of $\\pmb{\\theta}^{t+1}$ in Algorithm 4 is the same as that of Algorithm 1 if both algorithms have the same hyperparameters. Therefore, Algorithm 4 returns the same parameter vector and objective value as Algorithm 1. \u25a1 ", "page_idx": 14}, {"type": "text", "text": "A.14 Theorem 3 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Proof If ${\\pmb\\theta}^{t}={\\pmb\\theta}^{t^{*}}$ holds, $\\lVert\\pmb{\\theta}^{t}-\\pmb{\\theta}^{t^{*}}\\rVert_{2}=0$ holds in Equation (6). As a result, we obtain $\\epsilon_{j}=0$ in Lemma $_{l l}$ . \u25a1 ", "page_idx": 14}, {"type": "text", "text": "B Computation Cost of IHT with Sparse Matrices ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "If $\\boldsymbol{G}$ and $X^{\\top}y$ are precomputed, the cost of the gradient computations in IHT is ${\\mathcal{O}}(n^{2})$ time due to the third equation of Equation (2). If we use a sparse matrix for the parameter vector, the cost is $\\mathcal{O}(n k)$ time. However, since the parameter vector changes for each iteration and the sparse matrix must be re-constructed for each iteration, it is rarely used for the parameter vector in practice due to the overhead of the sparse matrix construction3. We note that the sparse matrices may be used for the design matrices whose elements do not change for each iteration. ", "page_idx": 14}, {"type": "text", "text": "C Broader Impacts ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "This paper presents work whose goal is to advance the field of machine learning. There are many potential societal consequences of our work, none which we feel must be specifically highlighted here. ", "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: Our abstract and introduction include the following contributions: (i) we accelerate iterative hard thresholding (IHT) method by pruning unnecessary computations, (ii) our method guarantees the same optimization results as the plain IHT, and (iii) Experiments show that our method is up to 73 times faster than the plain IHT without degrading accuracy. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: The processing time of our method increases when $k$ becomes large (Section 5.1). Nevertheless, our method outperformed all the baselines. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: We have stated assumptions in all the lemmas and theorems, e.g., precomputation. All the proofs are described in the appendix. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: We have described datasets, hyperparameters, and hardware used in the experiment (Section 5). ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 16}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 17}, {"type": "text", "text": "Answer: [No] ", "page_idx": 17}, {"type": "text", "text": "Justification: Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We have described datasets, hyperparameters, and hardware used in the experiment (Section 5). ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [No] ", "page_idx": 17}, {"type": "text", "text": "Justification: Error bars are not reported because the baselines are too computationally expensive. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 17}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: We have described datasets, hyperparameters, and hardware used in the experiment (Section 5). ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The paper follows the NeurIPS Code of Ethics. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 18}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The section of broader impacts is provided in the appendix. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 18}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: This paper does not release models or datasets. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [No] ", "page_idx": 19}, {"type": "text", "text": "Justification: The datasets used in this paper are cited in Section 5. However, we were unable to find the license for the dataset we used. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 20}, {"type": "text", "text": "", "page_idx": 21}]