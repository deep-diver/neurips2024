[{"figure_path": "LLsOmvJbBm/tables/tables_5_1.jpg", "caption": "Table 1: Task Specifications. We summarize the simulation and optimization configuration for the design tasks shown in Sec. 3 and report the initial and optimized loss. We note that because our implementation adopts CFL condition for numerical stability during simulation, the actual steps simulated and back-propagated are higher than the numbers shown in \"# Frames\".", "description": "This table summarizes the simulation and optimization configurations for six different fluidic design tasks.  For each task, it provides the resolution, number of frames simulated, number of parameters used in the geometry and control design, whether gradient-based optimization was used for both design and control, and the initial and optimized loss values. The note clarifies that the actual number of simulation steps is higher due to the CFL stability condition.", "section": "3 Benchmarks and Applications"}, {"figure_path": "LLsOmvJbBm/tables/tables_7_1.jpg", "caption": "Table 2: Time Performance. Our method achieves one order of magnitude speedup across all resolutions compared to PhiFlow in both forward simulation and backward gradient propagation.", "description": "This table compares the computation time of forward simulation and backward gradient propagation between the proposed method (Ours) and PhiFlow across different resolutions (32x32x32, 40x40x40, 48x48x48, and 64x64x64).  It demonstrates that the proposed method significantly outperforms PhiFlow in terms of speed, achieving speedups ranging from 13.6x to 53.4x for forward simulation and 15.3x to 16.4x for backward propagation.", "section": "4 Experiments"}, {"figure_path": "LLsOmvJbBm/tables/tables_7_2.jpg", "caption": "Table 3: Memory and time performance comparison with DiffTaichi", "description": "This table compares the memory usage (in MB) and computation time (in seconds) for both forward and backward passes of the NeuralFluid simulator against the DiffTaichi framework.  The comparison is shown across four different resolutions (32x32x32, 40x40x40, 48x48x48, and 64x64x64), highlighting the memory efficiency and speed advantage of the NeuralFluid simulator.", "section": "4 Experiments"}, {"figure_path": "LLsOmvJbBm/tables/tables_17_1.jpg", "caption": "Table 4: Statistics of the gradient norm and step count over the full course of optimization for three tasks of varying complexity.", "description": "This table presents a statistical summary of gradient norms and the number of solver steps during the optimization process for three benchmark tasks: Shape Identifier, Heart 3D, and Gate 3D.  For each task, it provides the mean and standard deviation of the number of steps and gradient norms. Additionally, it shows the minimum and maximum gradient norm values encountered during optimization. This data gives insights into the stability and efficiency of the optimization algorithm across different levels of complexity.", "section": "4 Experiments"}, {"figure_path": "LLsOmvJbBm/tables/tables_17_2.jpg", "caption": "Table 1: Task Specifications. We summarize the simulation and optimization configuration for the design tasks shown in Sec. 3 and report the initial and optimized loss. We note that because our implementation adopts CFL condition for numerical stability during simulation, the actual steps simulated and back-propagated are higher than the numbers shown in \"# Frames\".", "description": "This table summarizes the simulation and optimization configurations used for six different fluidic design tasks presented in Section 3 of the paper.  It shows the resolution of the simulation, the number of frames simulated, the number of parameters used in the optimization, whether design and/or control was optimized, and the initial and final loss values for each task.  It also notes that the number of simulated and back-propagated frames might be higher than explicitly stated due to the CFL condition ensuring numerical stability.", "section": "3 Benchmarks and Applications"}]