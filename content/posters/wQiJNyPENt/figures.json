[{"figure_path": "wQiJNyPENt/figures/figures_0_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the exploration-exploitation behavior of q-UCB and BEEBO in a Bayesian Optimization setting with a batch size of 100.  The background shows a heatmap representing the Ackley function's landscape.  The black dots represent initial random points used to initialize the Gaussian Process (GP) surrogate model.  The redder points indicate the locations selected by each algorithm for further evaluation.  The left column shows exploration, and the right column shows exploitation.\n\nq-UCB, even when the exploration parameter \u03ba is adjusted, shows inconsistent exploration and exploitation behavior. The top-right plot illustrates how a large value of \u03ba leads to poor exploration, whereas the top-left plot shows how a low value leads to poor exploitation. \n\nIn contrast, BEEBO, with its temperature parameter T', enables a much tighter control over the balance between exploration and exploitation.  The bottom row demonstrates this, showcasing how BEEBO balances exploration and exploitation in both low and high temperature settings.", "section": "Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_8_1.jpg", "caption": "Figure 2: Mean distances of acquired points to the different optima of the Branin function. Under heteroskedastic noise, BEEBO is risk-averse and preferentially optimizes towards the low-noise optimum 1. Under homoskedastic noise, there is no preference. q-UCB does not adapt its behaviour to noise, remaining risk-neutral. The means and standard deviations over five replicates are shown.", "description": "This figure compares the performance of BEEBO and q-UCB on a 2D Branin function with three global optima under both heteroskedastic and homoskedastic noise. The figure shows the mean distance of the acquired points to each of the three optima over ten rounds of Bayesian optimization. The results indicate that BEEBO is risk-averse under heteroskedastic noise, preferring to acquire points near the low-noise optimum, while q-UCB shows no such preference and behaves similarly under both noise conditions.", "section": "5.2 BO under heteroskedastic noise"}, {"figure_path": "wQiJNyPENt/figures/figures_23_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian process (GP) surrogate model initialized with 100 random data points.  The top row displays the acquisition function values for q-UCB with two different exploration parameters (\u03ba = 0.1 and \u03ba = 100). The bottom row shows the acquisition function values for BEEBO with two different temperature parameters (T' = 0.05 and T' = 50). The visualization demonstrates that q-UCB's explore-exploit balance is not easily controlled with large batches, whereas BEEBO provides a mechanism for controlling this tradeoff via the temperature parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_23_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, in a Bayesian Optimization setting with a batch size of 100.  The background shows a Gaussian process (GP) surrogate model fitted to 100 initial random points sampled from the Ackley function. The top row displays the acquisition function values for q-UCB using two different exploration parameters (\u03ba = 0.1 and \u03ba = 100). The bottom row shows the same for BEEBO, using two different temperature parameters (T' = 0.05 and T' = 50).  The figure highlights that q-UCB does not offer direct control of exploration and exploitation with large batches, whereas BEEBO does, allowing for a more nuanced balance between exploration and exploitation by tuning the temperature parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_24_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO acquisition functions in a Bayesian Optimization (BO) setting.  Both algorithms aim to find the maximum of the Ackley function. The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points of the function. The plots demonstrate how q-UCB's explore-exploit balance is sensitive to the choice of its hyperparameter \u03ba, resulting in very different acquisition point distributions. In contrast, BEEBO offers more stable control over explore-exploit using its hyperparameter T', allowing for consistent and controllable acquisition strategies even with large batches (Q=100).", "section": "Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_24_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, for batched Bayesian Optimization on the Ackley function.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 initial random data points. The top row shows the acquisition function values for q-UCB with two different exploration parameters (\u03ba = 0.1 and \u03ba = 100), illustrating its inability to control the explore-exploit trade-off effectively with large batches (Q=100). The bottom row shows the acquisition function values for BEEBO, demonstrating that it maintains control of the explore-exploit balance through a temperature hyperparameter (T' = 0.05 and T' = 50).  The plots visually represent how the algorithms select new evaluation points in parallel across the input space, emphasizing the difference in explore-exploit trade-offs.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_25_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u043a = 0.1 and \u043a = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, for Bayesian Optimization (BO) with large batch sizes.  The background shows a Gaussian process (GP) surrogate model fitted to 100 randomly sampled points of the Ackley function.  The top two panels illustrate q-UCB's performance with different exploration-exploitation parameters (\u03ba). The bottom two panels show BEEBO's performance with different temperature parameters (T'). The results highlight BEEBO's ability to better control the explore-exploit trade-off, even with large batches.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_25_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian process (GP) surrogate model initialized with 100 random data points.  The top row demonstrates q-UCB's inability to control the exploration-exploitation trade-off with varying \u03ba values (0.1 and 100). The bottom row illustrates BEEBO's ability to control this trade-off using a single temperature hyperparameter T' (0.05 and 50). The visualization highlights how BEEBO achieves a better balance between exploration and exploitation compared to q-UCB, especially with large batch sizes.", "section": "Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_26_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of the q-UCB algorithm and the proposed BEEBO algorithm in a Bayesian Optimization setting with a large batch size (Q=100).  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points from the Ackley function.  The top two panels display the acquisition function values for q-UCB with two different exploration-exploitation parameters (\u03ba = 0.1 and \u03ba = 100), demonstrating a lack of fine-grained control over the explore-exploit trade-off. The bottom two panels show the BEEBO acquisition function values with two different temperature parameters (T'=0.05 and T'=50), highlighting BEEBO's ability to precisely control the explore-exploit balance even with a large batch size.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_26_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, for batched Bayesian Optimization on the Ackley function.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points of the Ackley function.  Two versions of q-UCB are shown, one with a high exploration parameter (\u03ba = 100) and one with a high exploitation parameter (\u03ba = 0.1).  Similarly, BEEBO is run with two different temperature parameters (T'= 0.05 and T'= 50), controlling the explore-exploit balance. The batch size is Q = 100. The figure visually demonstrates that q-UCB's explore-exploit trade-off is difficult to control with large batches, unlike BEEBO which offers more control via the temperature parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_27_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random points.  The top row demonstrates q-UCB's acquisition behavior using two different exploration-exploitation trade-off parameters (\u03ba = 0.1 and \u03ba = 100). The bottom row shows BEEBO's acquisition behavior, also using two different temperature parameters (T' = 0.05 and T' = 50). The figure highlights BEEBO's ability to better control the explore-exploit trade-off, especially with large batches, unlike q-UCB.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_27_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random data points.  The top row demonstrates q-UCB's behavior with two different exploration-exploitation parameters (\u03ba = 0.1 and \u03ba = 100).  The bottom row shows BEEBO's behavior with two different temperature parameters (T'= 0.05 and T'= 50). The figure highlights that q-UCB struggles to control the explore-exploit balance effectively with large batches, while BEEBO offers a more nuanced control.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_28_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of the q-UCB algorithm and the proposed BEEBO algorithm for batched Bayesian Optimization on the Ackley function.  The background shows a Gaussian Process (GP) surrogate model trained on 100 randomly sampled points of the Ackley function.  The top two panels demonstrate the exploration-exploitation trade-off for q-UCB using two different hyperparameters (\u03ba = 0.1 and \u03ba = 100). The bottom two panels show the performance of BEEBO algorithm with two different hyperparameters (T'= 0.05 and T'= 50). The figure highlights that q-UCB struggles to control the exploration-exploitation trade-off when using large batches (Q=100), while BEEBO effectively manages it. The batch size is 100 for both algorithms in this example.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_29_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function.  It shows that q-UCB's explore-exploit balance is difficult to control with large batches, while BEEBO provides a better mechanism for controlling this balance using a single temperature hyperparameter. The background shows a Gaussian Process (GP) surrogate model, illustrating the uncertainty in the function approximation.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_29_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of the q-UCB algorithm and the proposed BEEBO algorithm for batched Bayesian Optimization.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points of the Ackley function. Two runs of q-UCB are shown, one with a high exploration parameter (\u03ba = 100) and one with a low exploration parameter (\u03ba = 0.1). Similarly, two runs of BEEBO are displayed, using different temperature hyperparameters (T' = 0.05 and T' = 50) to control the exploration-exploitation balance.  The figure highlights that q-UCB's explore-exploit behavior is difficult to control with large batch sizes, unlike BEEBO, which demonstrates a better ability to manage exploration and exploitation through its temperature parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_30_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian process (GP) surrogate model initialized with 100 randomly sampled points. The top row displays the acquisition function values for q-UCB with two different exploration parameters (\u03ba = 0.1 and \u03ba = 100). The bottom row shows the acquisition function values for BEEBO with two different temperature parameters (T' = 0.05 and T' = 50). The figure demonstrates that q-UCB's explore-exploit balance is not easily controlled with large batches, unlike BEEBO, where the balance can be adjusted via the temperature hyperparameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_30_2.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u043a = 0.1 and \u043a = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the exploration-exploitation trade-off of two acquisition functions: q-UCB and BEEBO.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points from the Ackley function.  The two acquisition functions are then used to select further points for evaluation.  q-UCB, with its parameter \u03ba set to 0.1 (left) and 100 (right), shows poor control over exploration-exploitation for large batches (Q=100).  In contrast, BEEBO, with its temperature parameter T' set to 0.05 (left) and 50 (right), demonstrates tight control of this trade-off, clearly separating exploration and exploitation regions.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_31_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u043a = 0.1 and \u043a = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian process (GP) surrogate model initialized with 100 random points.  The top row shows the acquisition function values for q-UCB with exploration parameters (\u03ba) of 0.1 and 100, demonstrating its inability to control the explore-exploit trade-off with large batches. The bottom row shows BEEBO's acquisition function values with temperature parameters (T') of 0.05 and 50, highlighting its ability to tightly control this trade-off. The different colors represent different acquisition function values.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_32_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of the q-UCB algorithm and the proposed BEEBO algorithm on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random data points.  The top row demonstrates that q-UCB, a commonly used batched Bayesian Optimization acquisition function, struggles to control the exploration-exploitation trade-off when using large batch sizes.  Different values of the exploration parameter (\u03ba) result in vastly different exploration patterns. The bottom row showcases that BEEBO effectively controls this trade-off using a single temperature parameter (T'). Different values of T' provide a more balanced exploration and exploitation trade-off.", "section": "Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_33_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, in a Bayesian Optimization setting with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points from the Ackley function.  The top row displays the acquisition functions' suggestions for exploration and exploitation using two different hyperparameter settings (\u03ba for q-UCB and T' for BEEBO) to highlight the explore-exploit trade-off.  q-UCB struggles to control this trade-off effectively with large batches while BEEBO allows for much finer tuning by adjusting the T' parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_34_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random points.  The top row demonstrates q-UCB's behavior with a low exploration rate (\u03ba=0.1, exploiting) and high exploration rate (\u03ba=100, exploring).  The bottom row shows BEEBO's performance with a low temperature (T'=0.05, exploiting) and high temperature (T'=50, exploring).  The figure highlights that q-UCB struggles to control the explore-exploit trade-off with large batch sizes, unlike BEEBO.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_35_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 randomly sampled points.  The top panels display the acquisition points selected by q-UCB using two different exploration parameters (\u03ba = 0.1 and \u03ba = 100).  The bottom panels show the acquisition points selected by BEEBO using two different temperature parameters (T' = 0.05 and T' = 50). The figure demonstrates that, unlike BEEBO, q-UCB does not allow for easy control of the exploration-exploitation trade-off with large batch sizes.  The difference in explore-exploit balance between the two methods is clearly illustrated.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_36_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random points.  The top row displays the acquisition function values for q-UCB with two different exploration parameters (\u03ba = 0.1 and \u03ba = 100), illustrating a lack of explore-exploit control. The bottom row shows BEEBO's acquisition function values with two temperature parameters (T' = 0.05 and T' = 50), highlighting its ability to control the explore-exploit trade-off. The different colors represent different acquisition suggestions.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_37_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function with a batch size of 100.  It illustrates how q-UCB's explore-exploit balance is difficult to control with large batches, as demonstrated by the vastly different exploration patterns observed using \u03ba=0.1 and \u03ba=100. In contrast, BEEBO demonstrates tight control of explore-exploit trade-off using a single temperature hyperparameter, with similar patterns observed using  T'=0.05 and T'=50. The background shows the GP surrogate model of the Ackley function initialized with 100 random points, providing context for the acquisition function's behaviour.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_38_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two batch Bayesian optimization (BO) acquisition functions: q-UCB and BEEBO.  It shows how q-UCB struggles to balance exploration and exploitation effectively, particularly with large batches. The background shows a Gaussian process (GP) surrogate model fitted to data.  The plots illustrate that q-UCB with a low exploration parameter (\u03ba = 0.1) focuses more on exploitation (finding the maximum), missing a significant area of the search space with high potential values.  Conversely, q-UCB with a high exploration parameter (\u03ba = 100) explores more extensively, but inefficiently. In contrast, BEEBO, with its temperature parameter (T'), can smoothly control the balance between exploration and exploitation across a wider range.  This allows it to effectively cover promising regions without wasting computational effort on overly broad explorations.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_39_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of q-UCB and BEEBO on the Ackley function.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random data points.  Two versions of q-UCB are shown, one with a high exploration parameter (\u03ba=100) and one with low exploration (\u03ba=0.1). Two versions of BEEBO are also shown with different temperature parameters (T'=0.05 and T'=50), which control the exploration-exploitation trade-off. The figure demonstrates that q-UCB's exploration-exploitation balance is not easily controlled with large batch sizes (Q=100), while BEEBO allows for better control via its temperature parameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_40_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u03ba = 0.1 and \u03ba = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two Bayesian Optimization (BO) acquisition functions: q-UCB and BEEBO.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 randomly sampled points of the Ackley function.  The top row demonstrates that q-UCB's exploration-exploitation balance is poorly controlled with large batch sizes (Q=100), resulting in very different acquisition patterns for different values of the hyperparameter \u03ba. The bottom row illustrates that BEEBO provides tight control over exploration-exploitation via its temperature hyperparameter T', allowing for more consistent results.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_41_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u043a = 0.1 and \u043a = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two Bayesian Optimization (BO) acquisition functions, q-UCB and BEEBO, on the Ackley test function.  The background shows a Gaussian Process (GP) surrogate model initialized with 100 random data points.  The top row displays the acquisition suggestions from q-UCB with different explore-exploit parameters (\u03ba = 0.1 and \u03ba = 100). The bottom row shows the acquisition suggestions from BEEBO, also with different explore-exploit parameters (T' = 0.05 and T' = 50).  The batch size (Q) is 100 for all experiments. The figure highlights that BEEBO, unlike q-UCB, allows for explicit control of exploration vs. exploitation, even with large batches.  The different colors represent the points acquired in each iteration.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_42_1.jpg", "caption": "Figure 1: q-UCB does not allow for controlling its explore-exploit trade-off with large batches. A GP surrogate (background) was initialized with 100 random points of the Ackley function. q-UCB was run with \u043a = 0.1 and \u043a = 100, BEEBO with T'= 0.05 and T'=50. Batch size Q=100.", "description": "This figure compares the performance of two acquisition functions, q-UCB and BEEBO, in a Bayesian Optimization (BO) scenario with a batch size of 100.  The background shows a Gaussian Process (GP) surrogate model fitted to 100 initial random points of the Ackley function. q-UCB, a commonly used acquisition function for batched BO, is shown with two different exploration parameters (\u03ba = 0.1 and \u03ba = 100).  BEEBO, the novel acquisition function proposed in the paper, is shown with two different temperature hyperparameters (T'= 0.05 and T'= 50). The figure demonstrates that q-UCB's exploration-exploitation trade-off is difficult to control with large batches, whereas BEEBO allows for more precise control of this trade-off through its temperature hyperparameter.", "section": "1 Introduction"}, {"figure_path": "wQiJNyPENt/figures/figures_43_1.jpg", "caption": "Figure A2: Experiments on the 14D robot arm pushing and 60D rover trajectory planning control problems. 10 replicates each. GIBBON (s) refers to the scaled larged-batch variant of GIBBON.", "description": "This figure shows the results of Bayesian Optimization experiments on two control problems: 14-dimensional robot arm pushing and 60-dimensional rover trajectory planning.  The experiment was conducted 10 times for each method (meanBEEBO, maxBEEBO, q-UCB, TS, q-EI, KB, GIBBON, GIBBON (scaled), and TuRBO). The y-axis represents the performance metric (distance for robot pushing and navigation loss for rover trajectory), while the x-axis represents the optimization round.  The shaded area signifies the standard deviation across those 10 runs for each method. This visualization demonstrates the relative performance of various Bayesian Optimization strategies in high-dimensional settings over multiple repetitions, offering a comparison of their convergence and stability.", "section": "D.3 Control problems"}, {"figure_path": "wQiJNyPENt/figures/figures_43_2.jpg", "caption": "Figure A1: The Branin function with added heteroskedastic noise following Equation A45. \u03c3max = 100, \u03bb = 0.05.", "description": "This figure shows the Branin function with added heteroskedastic noise. The left panel displays the Branin function's surface, while the right panel shows the noise level (\u03c3\u00b2(x)). The noise level is maximal at optima 2 and 3, decreasing exponentially with the distance from any of these optima. Optimum 1 has no added noise maximum.", "section": "C.4 Heteroskedastic noise"}, {"figure_path": "wQiJNyPENt/figures/figures_44_1.jpg", "caption": "Figure A2: Experiments on the 14D robot arm pushing and 60D rover trajectory planning control problems. 10 replicates each. GIBBON (s) refers to the scaled larged-batch variant of GIBBON.", "description": "This figure shows the results of Bayesian optimization experiments on two control problems: a 14-dimensional robot arm pushing task and a 60-dimensional rover trajectory planning task.  The performance of several Bayesian optimization methods, including meanBEEBO, maxBEEBO, q-UCB, Thompson Sampling, q-EI, Kriging Believer, GIBBON (default), GIBBON (scaled), and TuRBO, are compared across 10 optimization rounds.  The plot visually demonstrates the optimization progress over rounds, allowing a comparison of the efficiency and exploration-exploitation balance of different algorithms. The version of GIBBON with scaled batches is labeled as GIBBON(s).", "section": "D.3 Control problems"}]