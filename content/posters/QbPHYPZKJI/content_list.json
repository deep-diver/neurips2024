[{"type": "text", "text": "Learning Distributions on Manifolds with Free-Form Flows ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Peter Sorrenson\\*, Felix Draxler\\*, Armand Rousselot\\*, Sander Hummerich, Ullrich K\u00f6the Computer Vision and Learning Lab, Heidelberg University \\*equal contribution, firstname.lastname@iwr.uni-heidelberg.de ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We propose Manifold Free-Form Flows (M-FFF), a simple new generative model for data on manifolds. The existing approaches to learning a distribution on arbitrary manifolds are expensive at inference time, since sampling requires solving a differential equation. Our method overcomes this limitation by sampling in a single function evaluation. The key innovation is to optimize a neural network via maximum likelihood on the manifold, possible by adapting the free-form flow framework to Riemannian manifolds. M-FFF is straightforwardly adapted to any manifold with a known projection. It consistently matches or outperforms previous single-step methods specialized to specific manifolds. It is typically two orders of magnitude faster than multi-step methods based on diffusion or flow matching, achieving better likelihoods in several experiments. We provide our code at https://github.com/vislearn/FFF. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Generative models have achieved remarkable success in various domains such as image synthesis [Rombach et al., 2022], natural language processing [Brown et al., 2020], scientific applications [No\u00e9 et al., 2019] and more. However, the approaches are not directly applicable when dealing with data inherently structured in non-Euclidean spaces, which is common in fields such as the natural sciences, computer vision, and robotics. Examples include earth science data on a sphere, the orientation of real-world objects given as a rotation matrix in $S O(3)$ , or data on special geometries modeled by meshes or signed distance functions. Representing such data naively using internal coordinates, such as angles, can lead to topological issues, causing discontinuities or artifacts. ", "page_idx": 0}, {"type": "text", "text": "Luckily, many generative models can be adapted to handle data on arbitrary manifolds. However, the predominant methods compatible with arbitrary Riemannian manifolds involve solving differential equations\u2014stochastic (SDEs) or ordinary (ODEs)\u2014for sampling and density estimation [Rozen et al., 2021, Mathieu and Nickel, 2020, Huang et al., 2022, De Bortoli et al., 2022, Chen and Lipman, 2024]. These methods are computationally intensive due to the need for numerous function evaluations during integration, slowing down inference. ", "page_idx": 0}, {"type": "text", "text": "To address these challenges, we introduce a novel approach for modeling distributions on arbitrary Riemannian manifolds that circumvents the computational burden of previous methods. This is achieved by using a single feed-forward neural network on an embedding space as a generator, with outputs projected to the manifold (Fig. 1). We learn this network as a normalizing flow, facilitated by generalizing the free-form flow framework [Draxler et al., 2024, Sorrenson et al., 2024] to Riemannian manifolds. The core innovation is estimating the gradient of the negative log-likelihood within the tangent space of the manifold. ", "page_idx": 0}, {"type": "image", "img_path": "QbPHYPZKJI/tmp/01d6b7f523848d3bdfb01c2a223c9ac1f610478418b078f6c2e55987067d3be4.jpg", "img_caption": ["Figure 1: Manifold Free-Form Flows (M-FFF) learn generative models on a variety of manifolds. (Left) The learned distributions (colored surface) accurately match the test points (black dots). (Right) We parameterize M-FFF using a neural network in an embedding space, whose outputs are projected to the manifold. This enables simulation-free training and inference, and naturally respects the corresponding geometry, yielding fast sampling and continuous distributions regardless of the manifold. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "\u2022 We extend free-form flows to Riemannian manifolds, yielding manifold free-form flows (M-FFF) in Section 4.   \n\u2022 M-FFF can easily be adapted to arbitrary Riemannian manifolds, requiring only a projection function from an embedding space.   \n\u2022 It only relies on a single function evaluation during training and sampling, speeding up inference over multi-step methods typically by two orders of magnitude.   \n\u2022 M-FFF consistently matches or outperforms previous single-step methods on several benchmarks on spheres, tori, rotation matrices, hyperbolic space and curved surfaces (see Fig. 1 and Section 5). In addition, it is consistently faster than multi-step methods by two orders of magnitude, while also outperforming them in terms of likelihood in several cases. ", "page_idx": 1}, {"type": "text", "text": "Together, manifold free-form flows offer a novel and efficient approach for learning distributions on manifolds, applicable to any Riemannian manifold with a known embedding and projection. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 1}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/5b1c87260c11bb5e4585ed001be3c1a303de854ff2ba0aee9120cba90767b2fb.jpg", "table_caption": ["Table 1: Feature comparison of generative models on manifolds. We give a \u201c\u2713\u201d if any method in a category meets this requirement. "], "table_footnote": [], "page_idx": 1}, {"type": "text", "text": "Existing work on learning distributions on manifolds can be broadly categorized as follows: (i) leveraging Euclidean generative models; (ii) building specialized architectures that respect one particular kind of geometry; and (iii) learning a continuous time process on the manifold. We compare our method to these approaches in Table 1 and give additional detail below. ", "page_idx": 1}, {"type": "text", "text": "Euclidean generative models. One approach maps the $n$ -dimensional manifold to $\\mathbb{R}^{n}$ and learns the resulting distribution [Gemici et al., 2016]. Another approach generalizes the reparameterization trick to Lie groups by sampling on the Lie algebra which can be parameterized in Euclidean space [Falorsi et al., 2019]. These approaches come with the downside that a Euclidean representation may not respect the geometry of the manifold sufficiently, e.g. mapping the earth to a plane causes discontinuities at the boundaries. This can be overcome by learning distributions on overlapping charts that together span the full manifold [Kalatzis et al., 2021]. An orthogonal solution is to embed the data and add noise to it in the off-manifold directions, so that the distribution can be learnt directly in an embedding space $\\mathbb{R}^{m}$ [Brofos et al., 2021]; this only gives access to an ELBO instead of the exact density. Our method also works in the embedding space so that it respects the geometry of the manifold, but directly optimizes the likelihood on the manifold. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Specialized architectures take advantage of the specific geometry of a certain kind of manifold to come up with special coupling blocks for building normalizing flows such as $S O(3)$ [Liu et al., 2023], $S U(d),U(d)$ [Boyda et al., 2021, Kanwar et al., 2020]; hyperbolic space [Bose et al., 2020]; tori and spheres [Rezende et al., 2020]. Manifold free-form flows are not restricted to one particular manifold, but can be easily applied to any manifold for which an embedding and a projection to the manifold is known. As such, our model is an alternative to all of the above specialized architectures. ", "page_idx": 2}, {"type": "text", "text": "Continuous time models build a generative model based on parameterizing an ODE or SDE on any Riemannian manifold, meaning that they specify the (stochastic) differential equation in the tangent space [Rozen et al., 2021, Falorsi, 2021, Falorsi and Forr\u00e9, 2020, Huang et al., 2022, Mathieu and Nickel, 2020, De Bortoli et al., 2022, Chen and Lipman, 2024, Lou et al., 2020, Ben-Hamu et al., 2022]. These methods come with the disadvantage that sampling and density evaluation integrates the ODE or SDE, requiring many function evaluations. Our manifold free-form flows do not require repeatedly evaluating the model, a single function call followed by a projection is sufficient. ", "page_idx": 2}, {"type": "text", "text": "At its core, our method generalizes the recently introduced free-form flow (FFF) framework [Draxler et al., 2024] based on an estimator for the gradient of the change of variables formula [Sorrenson et al., 2024]. We give more details in Section 3.1. ", "page_idx": 2}, {"type": "text", "text": "3 Background ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we provide the background for our method: We present an introduction to free-form flows and Riemannian manifolds. ", "page_idx": 2}, {"type": "text", "text": "3.1 Free-form flows ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Free-form flows are a class of generative models that generalize normalizing flows to work with arbitrary feed-forward neural network architectures [Draxler et al., 2024]. ", "page_idx": 2}, {"type": "text", "text": "Euclidean change-of-variables Traditionally, normalizing flows are based on invertible neural networks (INNs, see Kobyzev et al. [2021] for an overview) that learn an invertible transformation $z=f_{\\theta}(x)$ mapping from data $x\\in\\mathbb{R}^{n}$ to latent codes $z\\in\\mathbb{R}^{n}$ . This gives an explicitly parameterized probability density $p_{\\theta}(x)$ via the change-of-variables: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\log p_{\\theta}(x)=\\log p_{Z}(f_{\\theta}(x))+\\log|f_{\\theta}^{\\prime}(x)|,\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $f_{\\theta}^{\\prime}(x)\\in\\mathbb{R}^{n\\times n}$ is the Jacobian matrix of $f_{\\boldsymbol{\\theta}}(\\boldsymbol{x})$ with respect to $x$ , evaluated at $x$ ; $|f_{\\theta}^{\\prime}(x)|$ is its absolute determinant. The distribution of latent codes $p_{Z}(z)$ is chosen such that the log-density is easy to evaluate and it is easy to sample from, such as a standard normal. Normalizing flows can be trained by minimizing the negative log-likelihood over the training data distribution: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\theta}\\mathcal{L}_{\\mathrm{NLL}}=\\operatorname*{min}_{\\theta}\\mathbb{E}_{p_{\\mathrm{data}}(x)}[-\\log p_{\\theta}(x)].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "This is equivalent to minimizing the Kullback-Leibler-divergence between the true data distribution and the parameterized distribution ${\\mathrm{KL}}(p_{\\mathrm{data}}||p_{\\theta})$ . Sampling from the model is achieved by pushing samples from the latent distribution $z\\sim p z$ through the inverse of the learned function: $x=$ $f_{\\theta}^{-1}\\bar{(z)}\\sim p_{\\theta}$ . ", "page_idx": 2}, {"type": "text", "text": "Euclidean gradient estimator Naively computing the volume change $\\log|f_{\\theta}^{\\prime}(x)|$ in Eq. (1) is expensive since it contains the full Jacobian matrix $f_{\\theta}^{\\bar{\\prime}}(x)\\in\\mathbb{R}^{n\\times n}$ , requiring ${\\mathcal{O}}(n)$ automatic differentiation steps to compute. Normalizing flow architectures usually avoid this expensive computation by further restricting the architecture to allow fast computation. Luckily, even if such a shortcut is not available, its gradient, which is all we need for training, can still be efficiently estimated as follows: ", "page_idx": 2}, {"type": "text", "text": "Theorem 1 (Volume change gradient estimator, Draxler et al. [2024]). Let $f_{\\theta}:\\mathbb{R}^{n}\\rightarrow\\mathbb{R}^{n}$ be a diffeomorphism. Let $\\boldsymbol{v}\\in\\mathbb{R}^{n}$ be a random variable with zero mean and unit covariance. Then, the derivative of the volume change has the following trace expression, where $z=f_{\\theta}(x)$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\nabla_{\\theta}\\log|f_{\\theta}^{\\prime}(x)|=\\mathrm{tr}((\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{\\prime-1}(z))}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mathbb{E}_{v}\\left[v^{T}(\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{-1\\prime}(z)v\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Replacing the expected value over $v$ by a single sample, and using a stop-grad (SG) operation, Theorem 1 allows us to compute a term whose gradient is an unbiased estimator for the gradient of Eq. (2): ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\mathcal{L}_{\\mathrm{NLL}}(x)\\approx\\nabla_{\\theta}(-\\log p_{Z}(z)-v^{T}f_{\\theta}^{\\prime}(x)\\mathtt{S G}(f_{\\theta}^{-1\\prime}(z)v)).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Comparing Eqs. (1) and (5) reveals that $\\log|f_{\\theta}^{\\prime}(x)|$ is replaced by a single vector-Jacobian $v^{T}f_{\\theta}^{\\prime}(x)$ and a Jacobian-vector product $f_{\\theta}^{-1^{\\prime}}(z)v$ , each of which require only one automatic differentiation operation. Note that while the gradient estimate is unbiased, computing the term in the brackets is not informative about $\\mathcal{L}_{\\mathrm{NLL}}$ . Thus, for density estimation at inference, Eq. (1) is explicitly evaluated using the full Jacobian. ", "page_idx": 3}, {"type": "text", "text": "Free-form architectures The central idea of free-form flows is to soften the restriction that the learned model be invertible. Instead, they learn two separate networks, an encoder $f_{\\theta}$ and a decoder $g_{\\phi}$ coupled by a reconstruction loss, circumventing the need for an invertible neural network $f_{\\theta}$ : ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{R}}=\\mathbb{E}_{p_{\\mathrm{data}}(x)}\\left[||g_{\\phi}(f_{\\theta}(x))-x||^{2}\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Together, this gives the loss of free-form flows with $\\beta$ , the reconstruction weight as a hyperparameter: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{FFF}}=\\mathcal{L}_{\\mathrm{NLL}}+\\beta\\mathcal{L}_{\\mathrm{R}}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "This allows replacing constrained invertible architectures with free-form neural networks. Since $f_{\\theta}$ is not restricted to efficiently compute the volume change, free-form flows use Eq. (5) to compute the gradient of $\\mathcal{L}_{\\mathrm{NLL}}$ . To compute Eq. (5), free-form flows approximate $f_{\\theta}^{-1^{\\prime}}(z)$ (which is not tractable) by $g_{\\phi}^{\\prime}(z)$ during training: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\mathcal{L}_{\\mathrm{NLL}}(x)\\approx\\nabla_{\\theta}(-\\log{p_{Z}(z)}-v^{T}f_{\\theta}^{\\prime}(x)\\mathtt{S G}(g_{\\phi}^{\\prime}(z)v)).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "For density estimation at inference, Draxler et al. [2024] recommend using the explicit decoder Jacobian for the volume change. ", "page_idx": 3}, {"type": "text", "text": "3.2 Riemannian manifolds ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "A manifold is a fundamental concept in mathematics, providing a framework for describing and analyzing spaces that locally resemble Euclidean space, but may have different global structure. For example, a small region on a sphere is similar to the Euclidean plane, but walking in a straight line on the sphere in any direction will return back to the starting point, unlike on a plane. ", "page_idx": 3}, {"type": "text", "text": "Mathematically, an $n$ -dimensional manifold, denoted as $\\mathcal{M}$ , is a space where every point has a neighborhood that is topologically equivalent to $\\mathbb{R}^{n}$ . A Riemannian manifold $(\\mathcal{M},G)$ extends the concept of a manifold by adding a Riemannian metric $G$ which introduces a notion of distances and angles. At each point $x$ on the manifold, there is an associated tangent space $\\mathcal{T}_{x}\\mathcal{M}$ which is an $n$ -dimensional Euclidean space, characterizing the directions in which you can travel and still stay on the manifold. The metric $G$ acts in this space, defining an inner product between vectors. From this inner product, we can compute the length of paths along the manifold, distances between points as well as volumes (see next section). ", "page_idx": 3}, {"type": "text", "text": "In this paper, we consider Riemannian manifolds globally embedded into an $m$ -dimensional Euclidean space $\\mathbb{R}^{m}$ , with $n\\leq m$ . Embedding means that we represent a point on the manifold $x\\in{\\mathcal{M}}$ as a vector in $\\mathbb{R}^{m}$ confined to an $n$ -dimensional subspace; we write $x\\in\\mathcal{M}\\subseteq\\mathbb{R}^{m}$ and denote by $\\pi:\\mathbb{R}^{m}\\to\\mathcal{M}$ a projection from the embedding space to the manifold. A global embedding is a smooth, injective mapping of the entire manifold into $\\mathbb{R}^{m}$ , its smoothness preserving the topology. ", "page_idx": 3}, {"type": "text", "text": "In most cases, we work with, but are not limited to, isometrically embedded manifolds, meaning that the metric is inherited from the ambient Euclidean space. Intuitively, this means that the length of a path on the manifold is just the length of the path in the embedding space. We note that due to the Nash embedding theorem [Nash, 1956], every Riemannian manifold has a smooth isometric embedding into Euclidean space of some finite dimension, so in this sense using isometric embeddings is not a limitation. Nevertheless, for some manifolds (especially with negative curvature, e.g. hyperbolic space) there may not be a sensible isometric embedding. ", "page_idx": 3}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/e537e98eeef39e9d62ea37a70eda25bdd1071845438608006ad5467334e283e3.jpg", "table_caption": ["Table 2: Manifolds, a global embedding and corresponding projections considered in this paper. "], "table_footnote": [], "page_idx": 4}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "4 Manifold free-form flows ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The free-form flow (FFF) framework allows training any pair of parameterized encoder $f_{\\boldsymbol{\\theta}}(\\boldsymbol{x})$ and decoder $g_{\\phi}(z)$ as a generative model, see Section 3.1. In this section, we demonstrate how to generalize the steps in Section 3.1 to arbitrary Riemannian manifolds. Note that for simplicity, we choose the same manifold in data and latent spaces, i.e. $\\mathcal{M}_{X}=\\mathcal{M}_{Z}=\\mathcal{M}$ , but the method readily applies to $\\mathcal{M}_{X}\\ne\\mathcal{M}_{Z}$ or $G_{X}\\neq G_{Z}$ as long as they are topologically compatible, like a sphere and a closed 3D surface without holes. The detailed derivations in the appendix consider this generalization. ", "page_idx": 4}, {"type": "text", "text": "Manifold change of variables The volume change on manifolds generalizes the Euclidean variant in Eq. (1) by (a) considering the change of volume in the tangent space and (b) accounting for volume change due to changes in the metric: ", "page_idx": 4}, {"type": "text", "text": "Theorem 2 (Manifold change of variables). Let $(\\mathcal{M},G)$ be a $n$ -dimensional Riemannian manifold embedded in $\\mathbb{R}^{m}$ , i.e., ${\\mathcal{M}}\\subseteq\\mathbb{R}^{m}$ . Let $p_{X}$ be a probability distribution on $\\mathcal{M}$ and let $f:\\mathcal{M}\\rightarrow\\mathcal{M}$ be a diffeomorphism. Let $p z$ be the pushforward of $p_{X}$ under $f$ (i.e., if $p_{X}$ is the probability density of $X$ , then $p z$ is the probability density of $f(X),$ ). ", "page_idx": 4}, {"type": "text", "text": "Let $x\\in{\\mathcal{M}}$ . Define $Q\\in\\mathbb{R}^{m\\times n}$ as an orthonormal basis for $\\mathcal{T}_{x}\\mathcal{M}$ and $R\\in\\mathbb{R}^{m\\times n}$ as an orthonormal basis for $\\tau_{f(x)}\\mathcal{M}$ . ", "page_idx": 4}, {"type": "text", "text": "Then, the probability densities $p_{X}$ and $p z$ are related under the change of variables $x\\mapsto f(x)$ by the following equation: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\log p_{X}(x)=\\log p_{Z}(f(x))+\\log|R^{T}f^{\\prime}(x)Q|+\\textstyle{\\frac{1}{2}}\\log\\frac{|R^{T}G(f(x))R|}{|Q^{T}G(x)Q|}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $Q$ and $R$ depend on $x$ and $f(x)$ , respectively, although this dependency is omitted for brevity. ", "page_idx": 4}, {"type": "text", "text": "To give an intuition for this result, Fig. 2 shows how the volume change is computed for an isometrically embedded manifold, that is $G=I$ so that $|R^{T}G R|=|Q^{T}G\\check{Q}|=1$ . This simplifies Eq. (9) to: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\log p_{X}(x)=\\log p_{Z}(f(x))+\\log|R^{T}f^{\\prime}(x)Q|.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "This is very similar to the familiar change of variables formula in the Euclidean case in Eq. (1), the only difference being that the determinant is evaluated on the $n\\times n$ projection of $f^{\\prime}(x)$ into the tangent spaces. These projections are necessary as the Jacobian of $f$ is singular in the embedding space, since its action is restricted to the local tangent spaces. See the full proof in Appendix A.1. ", "page_idx": 4}, {"type": "text", "text": "Manifold gradient estimator We now generalize the volume change gradient estimator in Theorem 1 to an invertible function on the manifold $f_{\\theta}:\\mathcal{M}\\overset{}{\\rightarrow}\\mathcal{M}$ . We find that taking the gradient of the manifold change of variables in Eq. (9) results in essentially the same computation as in the Euclidean case, but the trace in is now evaluated in the local tangent space: ", "page_idx": 4}, {"type": "text", "text": "Theorem 3. Under the assumptions of Theorem 2 with $f=f_{\\theta}$ . Let $v\\in\\mathbb{R}^{m}$ be a random variable with zero mean and covariance $R R^{T}$ . Then, the derivative of the change of variables term has the ", "page_idx": 4}, {"type": "image", "img_path": "QbPHYPZKJI/tmp/54f954b52dfb1b6e094171991c2495cbe59d4eb0a43a913f18af806ac1b729e8.jpg", "img_caption": ["Figure 2: Computation of the volume change in the tangent space of the manifold: The manifold change of variables formula in Eq. (10) requires to compute the change of a volume element in the tangent spaces under f, which in this example is given by the ratio of lengths of $d t$ and $d t^{\\prime}$ . Since $f$ is a map in the embedding space, $f^{\\prime}(x)$ defines a linear map between vectors from the embedding space. To correctly compute the change in volume, we use $Q$ and $R$ to change coordinates to the intrinsic tangent spaces, resulting in the linear map $R^{T}f^{\\prime}(x)Q:T_{x}{\\mathcal{M}}\\rightarrow T_{f(x)}{\\mathcal{M}}$ , which maps $d t$ to $d t^{\\prime}$ . "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "following trace expression, where $z=f_{\\theta}(x)$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\nabla_{\\theta}\\log|R^{T}f_{\\theta}^{\\prime}(x)Q|=\\mathrm{tr}(R^{T}(\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{-1^{\\prime}}(z)R)}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mathbb{E}_{v}\\left[v^{T}(\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{-1^{\\prime}}(z)v\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "This shows that the adaptation of free-form flows for an invertible function $f$ to isometrically embedded manifolds is remarkably simple (see full proof in Appendix A.2; if the manifold is not isometrically embedded, add the corresponding term in Eq. (9)): ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\mathcal{L}_{\\mathcal{M}\\cdot\\mathrm{NLL}}=\\nabla_{\\theta}\\mathbb{E}_{x,v}\\left[-\\log p_{Z}(z)-v^{T}f_{\\theta}^{\\prime}(x)\\mathrm{SG}[f_{\\theta}^{-1^{\\prime}}(z)v]\\right].\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The only change is that $v$ must have covariance $R R^{T}$ rather than the identity. We achieve this by sampling standard normal vectors $\\tilde{v}\\in\\mathbb{R}^{m}$ and then projecting them into the tangent space using the Jacobian of the projection function: ", "page_idx": 5}, {"type": "equation", "text": "$$\nv=\\pi^{\\prime}(f_{\\theta}(x))\\tilde{v}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Constructing $v$ like this fulfills the conditions of Theorem 3 because $\\mathbb{E}_{v}[v]=0$ , and: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathrm{Cov}\\left[\\boldsymbol{v}\\right]=\\mathbb{E}_{\\tilde{v}}\\left[\\pi^{\\prime}(f_{\\theta}(\\boldsymbol{x}))\\tilde{v}\\tilde{v}^{T}\\pi^{\\prime}(f_{\\theta}(\\boldsymbol{x}))^{T}\\right]=\\pi^{\\prime}(f_{\\theta}(\\boldsymbol{x}))\\pi^{\\prime}(f_{\\theta}(\\boldsymbol{x}))^{T}=R R^{T}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Just like [Sorrenson et al., 2024, Draxler et al., 2024], we further normalize $v$ to reduce the variance of the trace estimator. Equation (13) now allows training invertible architectures on manifolds even if the volume change $\\log|\\dot{R}^{T}f_{\\theta}^{\\prime}(x)Q|$ is not tractable. ", "page_idx": 5}, {"type": "text", "text": "Despite using a stochastic estimator for the gradient, we argue in Appendix A.5 that the scaling of the estimator variance with dimension is comparable to the variance due to stochasticity in flow matching and similar methods. ", "page_idx": 5}, {"type": "text", "text": "Free-form manifold-to-manifold neural networks As discussed in Section 2, invertible architectures have to be specially constructed for each manifold. To overcome this limitation, we now soften the constraint that the learned model be analytically invertible. Instead, we learn a pair of free-form manifold-to-manifold neural networks, an encoder $f_{\\boldsymbol{\\theta}}(x)$ and a decoder $g_{\\phi}(z)$ as arbitrary functions on the manifold: ", "page_idx": 5}, {"type": "equation", "text": "$$\nf_{\\theta}(x):\\mathcal{M}\\rightarrow\\mathcal{M},\\quad g_{\\phi}(z):\\mathcal{M}\\rightarrow\\mathcal{M}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We choose to fulfill Eq. (16) using feed-forward neural networks $\\tilde{f}_{\\theta},\\tilde{g}_{\\phi}:\\mathbb{R}^{m}\\rightarrow\\mathbb{R}^{m}$ working in an embedding space $\\mathbb{R}^{m}$ of $\\mathcal{M}$ , but ensure that their outputs lie on the manifold by appending a projection $\\pi:\\mathbb{R}^{m}\\to\\mathcal{M}$ , mapping points from the embedding space $\\mathbb{R}^{m}$ to the manifold $\\mathcal{M}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\nf_{\\theta}(x)=\\pi(\\tilde{f}_{\\theta}(x)),\\quad g_{\\phi}(z)=\\pi(\\tilde{g}_{\\phi}(z)).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Figure 1 illustrates this for an example on a circle $\\mathcal{M}=\\mathbb{S}^{1}$ . ", "page_idx": 6}, {"type": "text", "text": "Just like in the Euclidean case, we employ a reconstruction loss to make $f_{\\theta}$ and $g_{\\phi}$ approximately inverse to one another: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{R}}=\\mathbb{E}_{p_{\\mathrm{data}}}[||g_{\\phi}(f_{\\theta}(x))-x||^{2}].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "We measure the distance in the embedding space; one can modify this to use an on-manifold distance (e.g. great circle distance for the sphere) but we find that ambient Euclidean distance works well in practice, since it is almost identical for small distances and this is the regime we work in. ", "page_idx": 6}, {"type": "text", "text": "This allows us to substitute $f_{\\theta}^{-1^{\\prime}}(z)\\approx g_{\\phi}^{\\prime}(z)$ in Eq. (13): ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\mathcal{L}_{\\mathcal{M}\\mathrm{-NLL}}\\approx\\nabla_{\\theta}\\mathbb{E}_{x,v}\\left[-\\log p_{Z}(z)-v^{T}f_{\\theta}^{\\prime}(x)\\mathbb{S}\\mathbb{G}[{g_{\\phi}}^{\\prime}(z)v]\\right].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "In Theorem 5 we show that the error of the gradient estimator is bounded by a measure of the mismatch between the encoder and decoder Jacobian matrices. When the encoder and decoder are true inverses, the error reaches zero. ", "page_idx": 6}, {"type": "text", "text": "Regularization and final loss We find that adding the following two regularizations to the loss improve the stability and performance of our models. Firstly, the reconstruction loss on points sampled uniformly from the data manifold: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{U}}=\\mathbb{E}_{x\\sim\\mathcal{U}(\\mathcal{M})}[\\|g_{\\phi}(f_{\\theta}(x))-x\\|^{2}],\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "helps ensure that we have a globally consistent mapping between the data and latent manifolds in low data regions. Secondly, the squared distance between the output of $\\tilde{f}_{\\theta}$ and its projection to the manifold: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{P}}=\\mathbb{E}_{p_{\\mathrm{data}}(x)}[\\|\\tilde{f}_{\\theta}(x)-f_{\\theta}(x)\\|^{2}]\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "discourages the output of $\\tilde{f}_{\\theta}$ from entering unprojectable regions, for example the origin when the manifold is $\\mathbb{S}^{n}$ . The same regularizations can be applied starting from the latent space. ", "page_idx": 6}, {"type": "text", "text": "The full loss is: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathscr{L}=\\mathscr{L}_{M-\\mathrm{NLL}}+\\beta_{\\mathrm{R}}\\mathscr{L}_{\\mathrm{R}}+\\beta_{\\mathrm{U}}\\mathscr{L}_{\\mathrm{U}}+\\beta_{\\mathrm{P}}\\mathscr{L}_{\\mathrm{P}}\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where the gradient of $\\mathcal{L}_{\\mathcal{M}-\\mathrm{NLL}}$ is computed using Eq. (19), and $\\beta_{\\mathrm{R}},\\,\\beta_{\\mathrm{U}}$ and $\\beta_{\\mathbf{P}}$ are hyperparameters.   \nWe give our choices in Appendix B. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We now demonstrate the practical performance of manifold free-form flows on various manifolds. We choose established experiments to ensure comparability with previous methods, and find: ", "page_idx": 6}, {"type": "text", "text": "\u2022 M-FFF matches or outperforms previous single-step methods. M-FFF uses a simple ResNet architecture, whereas previous methods were specialized to the given manifolds, hindering adoption to novel manifolds.   \n\u2022 M-FFF generates samples faster by typically two orders of magnitude than methods sampling in several steps. Despite this great reduction in compute, it achieves a higher generative quality in several cases. ", "page_idx": 6}, {"type": "text", "text": "In our result tables, we mark as bold (a) the best method overall (both single- and multi-step), and (b) the best single-step method. We provide reconstruction losses of our method and all details necessary to reproduce the experiments in Appendix B. Furthermore, our code is available at https: //github.com/vislearn/FFF. We run each experiment multiple times with different data splits and report the mean and standard deviation of those runs. ", "page_idx": 6}, {"type": "text", "text": "Synthetic distribution over rotation matrices The group of 3D rotations $S O(3)$ can be represented by rotations matrices with positive determinant, i.e., all $\\dot{Q}\\in\\mathbb{R}^{3\\times3}$ with $Q^{T}Q=I$ and det $Q=1$ . We choose $\\mathbb{R}^{3\\times3}$ as our embedding space and project to the manifold by solving the constrained Procrustes problem via SVD [Lawrence et al., 2019] (see Appendix B.2). ", "page_idx": 6}, {"type": "text", "text": "We evaluate M-FFF on synthetic mixture distributions proposed by De Bortoli et al. [2022] with $M$ mixture components for $M=16,32$ and 64. Samples from one of the distributions and samples from our model are depicted in Fig. 3. ", "page_idx": 6}, {"type": "text", "text": "Table 3 shows that M-FFF outperforms the normalizing flow developed for $S O(3)$ by Liu et al.   \n[2023], as well as the diffusion-based approaches for the mixtures $M=32$ and 64. ", "page_idx": 7}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/d397c800b27c110ce85873d90455ae749ed7e307a027f5ad98e2bde407856935.jpg", "table_caption": ["Table 3: Test negative log-likelihood (NLL, $\\downarrow,$ ) on $S O(3)$ for multi-step and single-step methods. M-FFF consistently outperforms the specialized normalizing flow by Liu et al. [2023] on synthetic distributions of $S O(3)$ matrices, and outperforms multi-step methods in the cases with more mixture components. Multi-step baseline values are due to De Bortoli et al. [2022]. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Earth data on the sphere We evaluate manifold free-form flows on spheres with datasets from the domain of earth sciences. We use four established datasets compiled by Mathieu and Nickel [2020] for density estimation on $\\mathbb{S}^{2}$ : Volcanic eruptions [NGDC/WDS, 2022b], earthquakes [NGDC/WDS, 2022a], floods [Brakenridge, 2017] and wildfires [EOSDIS, 2020]. ", "page_idx": 7}, {"type": "text", "text": "Figure 1 shows an example for a model trained on flood data. As the reconstruction error sometimes does not drop to a satisfactory level we employ the method described in Appendix B.1 to ensure that the measured likelihoods are accurate. Table 4 shows that M-FFF again outperforms the specialized single-step model; the performance compared to multi-step methods is mixed. We think that multistep models have an advantage on the considered data, as there are large regions of empty space between highly concentrated data points (see density and sample plots in Appendix B.3). ", "page_idx": 7}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/5bfe00512932b08f91c2d355abf0e36b91184d28bf20553bd6cdafccd009b53c.jpg", "table_caption": ["Table 4: M-FFF significantly outperforms the previous single-step density estimator [Peel et al., 2001] on the sphere on real-world earth datasets in terms of negative log-likelihood (lower is better). Baseline values are collected from De Bortoli et al. [2022], Huang et al. [2022], Chen and Lipman [2024]. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Table 5: M-FFF consistently outperforms normalizing flows specialized to tori [Rezende et al., 2020] on torus datasets, without requiring the development of a specialized architecture. In addition, our method comes close to the performance of the multi-step methods and even outperforms them on the Glycine dataset. Baseline values are due to Huang et al. [2022], Chen and Lipman [2024]. ", "page_idx": 8}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/a367090f69b9c3ef0df342454b1f9bb88a6ae647d22ee4f7020622ecd6625ca7.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/7f888fa39853553fc061cf4fdd47eaba58fe68762b6bf3ba2d78abfe41dfd3aa.jpg", "table_caption": ["Table 6: Test NLL on Stanford bunny data proposed by [Chen and Lipman, 2024], living on a manifold with nontrivial curvature (see Fig. 1). M-FFF outperforms the multi-step model for datasets with more modes. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Torsion angles of molecules on tori To benchmark manifold free-form flows on tori $\\mathbb{T}^{n}$ , we follow [Huang et al., 2022] and evaluate our model on two datasets from structural biology. We consider the torsion (dihedral) angles of the backbone of protein and RNA substructures respectively. ", "page_idx": 8}, {"type": "text", "text": "We represent a tuple of angles $(\\phi_{1},\\dots,\\phi_{n})\\in\\,[0,2\\pi]^{n}$ by mapping each angle to a position on a circle: $X_{i}=(\\cos\\phi_{i},\\sin\\phi_{i})\\in\\mathbb{S}^{1}$ . Then we stack all $X_{i}$ into a matrix $X\\in\\mathbb{R}^{\\bar{n}\\times2}$ , compare Table 2. ", "page_idx": 8}, {"type": "text", "text": "The first dataset is comprised of 500 proteins assembled by [Lovell et al., 2003] and is located on $\\mathbb{T}^{2}$ . The three dimensional arrangement of a protein backbone can be described by the so called Ramachandran angles [Ramachandran et al., 1963] $\\Phi$ and $\\Psi$ , which represent the torsion of the protein backbone around the $N{-}C_{\\alpha}$ and $C_{\\alpha}.C$ bonds. The data is split into four distinct subsets General, Glycine, Proline and Pre-Proline, depending on the residue of each substructure. ", "page_idx": 8}, {"type": "text", "text": "The second dataset is extracted from a subset of RNA structures introduced by Murray et al. [2003]. As the RNA backbone structure can be characterized by seven torsion angles, in this case we are dealing with data on $\\mathbb{T}^{7}$ . ", "page_idx": 8}, {"type": "text", "text": "We report negative log-likelihoods in Table 5, finding that M-FFF outperforms a circular spline coupling flow, a normalizing flow particularly developed for data on tori [Rezende et al., 2020] as well as the multi-step methods on one of the datasets. In addition to the quantitative results, we show the log densities of the M-FFF models for the four protein datasets inFig. 5 in Appendix B.4 . ", "page_idx": 8}, {"type": "text", "text": "Toy distributions on hyperbolic space We apply M-FFF to the Poincar\u00e9 ball model, which embeds the 2-dimensional hyperbolic space $\\mathbb{H}^{2}$ of constant negative curvature -1 in the 2-dimensional Euclidean space $\\mathbb{R}^{2}$ , as specified in Table 2. As this embedding is not isometric, and distances between points grow when moving away from the origin, we must include the last term of Eq. (9) when changing variables under a map on this embedded manifold. ", "page_idx": 8}, {"type": "text", "text": "We show that M-FFF can be applied to non-isometric embeddings using Eq. (9) and visualize learned densities in Fig. 1 and in Fig. 6 in Appendix B.5 for several toy datasets defined on the 2-dimensional Poincar\u00e9 ball model. Further details can be found in Appendix B.5. ", "page_idx": 8}, {"type": "text", "text": "Manifold with non-trivial curvature Finally, we follow Chen and Lipman [2024] and train M-FFF given by synthetic distributions on the Stanford bunny [Turk and Levoy, 1994] on the data provided with their paper, see Fig. 1. The natural embedding of this mesh is $\\mathbb{R}^{3}$ , and we train a separate neural network to project from the embedding space to the mesh. This ensures that the projection is continuously differentiable, which we identify to be important for stable gradients. ", "page_idx": 8}, {"type": "text", "text": "Table 6 shows that M-FFF performs well on this manifold, outperforming Riemannian flow matching in two out of three cases. This experiment underlines the flexibility of our model: We only need a projection function to the manifold in order to train a generative model. ", "page_idx": 8}, {"type": "text", "text": "6 Limitations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Manifold Free-From Flows achieve high generative quality on manifolds despite the approximations made during training: First, the exact inverse of the encoder Jacobian is approximated by the decoder Jacobian, which is implicitly regularized via the reconstruction loss (see Eq. (19)). Second, the final gradient computation in Eq. (8) is estimated with a single $v$ for each item in the batch, adding noise to the system. ", "page_idx": 9}, {"type": "text", "text": "At inference time, the negative log-likelihoods we report in all tables are based on the decoder Jacobian. We choose this because even if the decoder ends up not to be invertible after training (that is several latent codes $z$ yield the same generation $x=g_{\\phi}(z);$ , the computed densities are a conservative estimate of the true probability density. The downside is that if the reconstruction loss is high, the likelihoods become inaccurate, see Appendix B.1 for details. We therefore ensure that the final reconstruction losses are vanishing in Table 8. ", "page_idx": 9}, {"type": "text", "text": "From a high level perspective, we observe that M-FFF performs less favorable compared to multi-step methods when the density changes sharply or very low density regions are present. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we present Manifold Free-Form Flows (M-FFF), a generative model designed for manifold data. To the best of our knowledge, it is the first generative model on manifolds with single-step sampling and density estimation readily applicable to arbitrary Riemannian manifolds. This significantly accelerates inference and allows for deployment on edge devices. ", "page_idx": 9}, {"type": "text", "text": "M-FFF matches or outperforms single-step architectures specialized to particular manifolds. It also surpasses multi-step methods in several cases, despite reducing the inference compute by typically two orders of magnitude. ", "page_idx": 9}, {"type": "text", "text": "Adapting M-FFF to new manifolds is straightforward and only requires selecting an embedding space and a projection to the manifold. In contrast, competing multi-step methods are more challenging to adapt as they require implementing a diffusion process or computing distances on the manifold. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported by Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany\u2019s Excellence Strategy EXC-2181/1 - 390900948 (the Heidelberg STRUCTURES Cluster of Excellence). It is also supported by the Vector Stiftung in the project TRINN (P2019-0092), and by Informatics for Life funded by the Klaus Tschira Foundation. AR acknowledges funding from the Carl-Zeiss-Stiftung. The authors acknowledge support by the state of Baden-W\u00fcrttemberg through bwHPC and the German Research Foundation (DFG) through grant INST 35/1597-1 FUGG. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Heli Ben-Hamu, Samuel Cohen, Joey Bose, Brandon Amos, Maximillian Nickel, Aditya Grover, Ricky TQ Chen, and Yaron Lipman. Matching normalizing flows and probability paths on manifolds. In International Conference on Machine Learning, 2022. ", "page_idx": 9}, {"type": "text", "text": "Joey Bose, Ariella Smofsky, Renjie Liao, Prakash Panangaden, and Will Hamilton. Latent variable modelling with hyperbolic normalizing flows. In International Conference on Machine Learning, 2020. ", "page_idx": 9}, {"type": "text", "text": "Denis Boyda, Gurtej Kanwar, S\u00e9bastien Racani\u00e8re, Danilo Jimenez Rezende, Michael S. Albergo, Kyle Cranmer, Daniel C. Hackett, and Phiala E. Shanahan. Sampling using SU(N) gauge equivariant flows. Physical Review D: Particles and Fields, 103(7):074504, April 2021. doi: 10.1103/PhysRevD.103.074504. ", "page_idx": 9}, {"type": "text", "text": "G Brakenridge. Global active archive of large flood events, 2017. ", "page_idx": 9}, {"type": "text", "text": "James A Brofos, Marcus A Brubaker, and Roy R Lederman. Manifold density estimation via generalized dequantization. arXiv preprint arXiv:2102.07143, 2021. ", "page_idx": 9}, {"type": "text", "text": "Tim R Davidson, Luca Falorsi, Nicola De Cao, Thomas Kipf, and Jakub M Tomczak. Hyperspherical variational auto-encoders. In Conference on Uncertainty in Artificial Intelligence, 2018. ", "page_idx": 10}, {"type": "text", "text": "Valentin De Bortoli, Emile Mathieu, Michael Hutchinson, James Thornton, Yee Whye Teh, and Arnaud Doucet. Riemannian score-based generative modelling. Advances in Neural Information Processing Systems, 35:2406\u20132422, 2022. ", "page_idx": 10}, {"type": "text", "text": "Felix Draxler, Peter Sorrenson, Lea Zimmermann, Armand Rousselot, and Ullrich K\u00f6the. Free-form Flows: Make Any Architecture a Normalizing Flow. In Artificial Intelligence and Statistics, 2024. ", "page_idx": 10}, {"type": "text", "text": "EOSDIS. Land, atmosphere near real-time capability for EOS (LANCE) system operated by NASA\u2019s earth science data and information system (ESDIS), 2020. ", "page_idx": 10}, {"type": "text", "text": "William Falcon and The PyTorch Lightning team. PyTorch lightning, March 2019. ", "page_idx": 10}, {"type": "text", "text": "Luca Falorsi. Continuous normalizing flows on manifolds. arXiv preprint arXiv:2104.14959, 2021. ", "page_idx": 10}, {"type": "text", "text": "Luca Falorsi and Patrick Forr\u00e9. Neural ordinary differential equations on manifolds. arXiv preprint arXiv:2006.06663, 2020. ", "page_idx": 10}, {"type": "text", "text": "Luca Falorsi, Pim de Haan, Tim R Davidson, and Patrick Forr\u00e9. Reparameterizing distributions on lie groups. In The 22nd International Conference on Artificial Intelligence and Statistics, 2019. ", "page_idx": 10}, {"type": "text", "text": "Mevlana C Gemici, Danilo Rezende, and Shakir Mohamed. Normalizing flows on riemannian manifolds. arXiv:1611.02304, 2016. ", "page_idx": 10}, {"type": "text", "text": "A Girard. A fast \u2018Monte-Carlo cross-validation\u2019 procedure for large least squares problems with noisy data. Numerische Mathematik, 56:1\u201323, 1989. ", "page_idx": 10}, {"type": "text", "text": "Charles R. Harris, K. Jarrod Millman, St\u00e9fan J. van der Walt, Ralf Gommers, Pauli Virtanen, David Cournapeau, Eric Wieser, Julian Taylor, Sebastian Berg, Nathaniel J. Smith, Robert Kern, Matti Picus, Stephan Hoyer, Marten H. van Kerkwijk, Matthew Brett, Allan Haldane, Jaime Fern\u00e1ndez del R\u00edo, Mark Wiebe, Pearu Peterson, Pierre G\u00e9rard-Marchant, Kevin Sheppard, Tyler Reddy, Warren Weckesser, Hameer Abbasi, Christoph Gohlke, and Travis E. Oliphant. Array programming with NumPy. Nature, 585(7825):357\u2013362, 2020. ", "page_idx": 10}, {"type": "text", "text": "Chin-Wei Huang, Milad Aghajohari, Joey Bose, Prakash Panangaden, and Aaron C Courville. Riemannian diffusion models. Advances in Neural Information Processing Systems, 35:2750\u20132761, 2022. ", "page_idx": 10}, {"type": "text", "text": "J. D. Hunter. Matplotlib: A 2D graphics environment. Computing in Science & Engineering, 9(3): 90\u201395, 2007. ", "page_idx": 10}, {"type": "text", "text": "Michael F Hutchinson. A stochastic estimator of the trace of the influence matrix for Laplacian smoothing splines. Communications in Statistics-Simulation and Computation, 18(3):1059\u20131076, 1989. ", "page_idx": 10}, {"type": "text", "text": "J\u00fcrgen Jost. Riemannian Geometry and Geometric Analysis, volume 42005. Springer, 2008. ", "page_idx": 10}, {"type": "text", "text": "Dimitris Kalatzis, Johan Ziruo Ye, Alison Pouplin, Jesper Wohlert, and S\u00f8ren Hauberg. Density estimation on smooth manifolds with normalizing flows. arXiv preprint arXiv:2106.03500, 2021. ", "page_idx": 10}, {"type": "text", "text": "Gurtej Kanwar, Michael S. Albergo, Denis Boyda, Kyle Cranmer, Daniel C. Hackett, S\u00e9 bastien Racani\u00e8re, Danilo Jimenez Rezende, and Phiala E. Shanahan. Equivariant flow-based sampling for lattice gauge theory. Physical Review Letters, 125(12), September 2020. doi: 10.1103/physrevlett. 125.121601. ", "page_idx": 10}, {"type": "text", "text": "Ivan Kobyzev, Simon J.D. Prince, and Marcus A. Brubaker. Normalizing Flows: An Introduction and Review of Current Methods. IEEE Transactions on Pattern Analysis and Machine Intelligence, 43 (11):3964\u20133979, 2021. ", "page_idx": 11}, {"type": "text", "text": "Lars Erik K\u00fchmichel and Felix Draxler. Lightning trainable, 2023. ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "Jim Lawrence, Javier Bernal, and Christoph Witzgall. A purely algebraic justification of the KabschUmeyama algorithm. Journal of research of the National Institute of Standards and Technology, 124:1, 2019.   \nYulin Liu, Haoran Liu, Yingda Yin, Yang Wang, Baoquan Chen, and He Wang. Delving into discrete normalizing flows on SO (3) manifold for probabilistic rotation modeling. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 21264\u201321273, 2023.   \nAaron Lou, Derek Lim, Isay Katsman, Leo Huang, Qingxuan Jiang, Ser Nam Lim, and Christopher M De Sa. Neural manifold ordinary differential equations. Advances in Neural Information Processing Systems, 33:17548\u201317558, 2020.   \nSimon C. Lovell, Ian W. Davis, W. Bryan Arendall III, Paul I. W. de Bakker, J. Michael Word, Michael G. Prisant, Jane S. Richardson, and David C. Richardson. Structure validation by $\\mathrm{c}\\alpha$ geometry: $\\phi,\\psi$ and $\\mathbf{c}\\beta$ deviation. Proteins: Structure, Function, and Bioinformatics, 50(3): 437\u2013450, 2003. doi: 10.1002/prot.10286.   \nEmile Mathieu and Maximilian Nickel. Riemannian continuous normalizing flows. Advances in Neural Information Processing Systems, 33:2503\u20132515, 2020.   \nWes McKinney. Data Structures for Statistical Computing in Python. In St\u00e9fan van der Walt and Jarrod Millman, editors, 9th Python in Science Conference, 2010.   \nNina Miolane, Nicolas Guigui, Alice Le Brigant, Johan Mathe, Benjamin Hou, Yann Thanwerdas, Stefan Heyder, Olivier Peltre, Niklas Koep, Hadi Zaatiti, Hatem Hajri, Yann Cabanes, Thomas Gerald, Paul Chauchat, Christian Shewmake, Daniel Brooks, Bernhard Kainz, Claire Donnat, Susan Holmes, and Xavier Pennec. Geomstats: A python package for riemannian geometry in machine learning. Journal of Machine Learning Research, 21(223):1\u20139, 2020.   \nNina Miolane, Saiteja Utpala, Nicolas Guigui, Lu\u00eds F. Pereira, Alice Le Brigant, Hzaatiti, Yann Cabanes, Johan Mathe, Niklas Koep, elodiemaignant, ythanwerdas, xpennec, tgeral68, Christian, Tra My Nguyen, Olivier Peltre, pchauchat, Jules-Deschamps, John Harvey, mortenapedersen, Maya95assal, Quentin Barth\u00e9lemy, Abdellaoui-Souhail, Adele Myers, Felix Ambellan, FlorentMichel, Shubham Talbar, Stefan Heyder, Yann de Mont-Marin, and Marius. Geomstats/geomstats: Geomstats v2.7.0. Zenodo, August 2023.   \nKieran A Murphy, Carlos Esteves, Varun Jampani, Srikumar Ramalingam, and Ameesh Makadia. Implicit-PDF: Non-parametric representation of probability distributions on the rotation manifold. In International Conference on Machine Learning, 2021.   \nLaura Murray, W Arendall, David Richardson, and Jane Richardson. RNA backbone is rotameric. Proceedings of the National Academy of Sciences of the United States of America, 100:13904\u20139, December 2003. doi: 10.1073/pnas.1835769100.   \nJohn Nash. The imbedding problem for Riemannian manifolds. Annals of mathematics, 63(1):20\u201363, 1956.   \nNational Geophysical Data Center / World Data Service NGDC/WDS. NCEI/WDS global significant earthquake database, 2022a.   \nNational Geophysical Data Center / World Data Service NGDC/WDS. NCEI/WDS global significant volcanic eruptions database, 2022b.   \nFrank No\u00e9, Simon Olsson, Jonas K\u00f6hler, and Hao Wu. Boltzmann generators: Sampling equilibrium states of many-body systems with deep learning. Science, 365(6457):eaaw1147, 2019.   \nAdam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. In Advances in Neural Information Processing Systems, 2019.   \nDavid Peel, William J Whiten, and Geoffrey J McLachlan. Fitting mixtures of Kent distributions to aid in joint set identification. Journal of the American Statistical Association, 96(453):56\u201363, 2001.   \nG. N. Ramachandran, C. Ramakrishnan, and V. Sasisekharan. Stereochemistry of polypeptide chain configurations. Journal of Molecular Biology, 7(1):95\u201399, 1963. doi: 10.1016/S0022-2836(63) 80023-6.   \nDanilo Jimenez Rezende, George Papamakarios, S\u00e9bastien Racaniere, Michael Albergo, Gurtej Kanwar, Phiala Shanahan, and Kyle Cranmer. Normalizing flows on tori and spheres. In International Conference on Machine Learning, 2020.   \nRobin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2022.   \nNoam Rozen, Aditya Grover, Maximilian Nickel, and Yaron Lipman. Moser flow: Divergence-based generative modeling on manifolds. Advances in Neural Information Processing Systems, 34: 17669\u201317680, 2021.   \nPeter Sorrenson, Felix Draxler, Armand Rousselot, Sander Hummerich, Lea Zimmermann, and Ullrich K\u00f6the. Lifting architectural constraints of injective flows. In International Conference on Learning Representations, 2024.   \nThe pandas development team. Pandas-dev/pandas: Pandas, February 2020.   \nGreg Turk and Marc Levoy. Zippered polygon meshes from range images. In Proceedings of the 21st annual conference on Computer graphics and interactive techniques, pages 311\u2013318, 1994. ", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Free-form flows on Riemannian manifolds ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "In this appendix, we will focus on intuitive definitions of concepts from topology and differential geometry. For a more rigorous treatment of these concepts, see [Jost, 2008]. ", "page_idx": 13}, {"type": "text", "text": "An $n$ -dimensional manifold $\\mathcal{M}$ is a space where every point $x$ has a neighborhood which is homeomorphic to an open subset of $\\mathbb{R}^{n}$ . Intuitively, this means that there is a small region of $\\mathcal{M}$ containing $x$ which can be bent and stretched in a continuous way to map onto a small region in $\\mathbb{R}^{n}$ . This is what is meant when we say that the manifold locally resembles $\\mathbb{R}^{n}$ . If all these maps from $\\mathcal{M}$ to $\\mathbb{R}^{n}$ are also differentiable then the manifold itself is differentiable, as long as there is a way to connect up the local neighborhoods in a differentiable and consistent way. ", "page_idx": 13}, {"type": "text", "text": "The tangent space of the manifold at $x$ , denoted $\\mathcal{T}_{x}\\mathcal{M}$ , is an $n$ -dimensional Euclidean space, which is a linearization of the manifold at $x$ : if we zoom in to a very small region around $x$ the manifold looks flat, and this flat Euclidean space is aligned with the tangent space. Because the tangent space is a linearization of the manifold, this is where derivatives on the manifold live, e.g. if $f:\\mathcal{M}_{X}\\rightarrow\\mathcal{M}_{Z}$ is a map between two manifolds, then the Jacobian $f^{\\prime}(x)$ is a linear map from $\\tau_{x}\\mathcal{M}_{X}$ to $\\tau_{f(x)}\\M_{Z}$ . ", "page_idx": 13}, {"type": "text", "text": "A Riemannian manifold $(\\mathcal{M},G)$ is a differentiable manifold which is equipped with a Riemannian metric $G:T_{x}\\mathcal{M}\\times T_{x}\\mathcal{M}\\to\\mathbb{R}$ which defines an inner product on the tangent space, which allows us to calculate lengths and angles in this space. The length of a smooth curve $\\gamma:[0,1]\\rightarrow\\mathcal{M}$ is given by the integral of the length of its velocity vector $\\gamma^{\\prime}(t)\\in\\mathcal{T}_{\\gamma(t)}\\mathcal{M}$ . This ultimately allows us to define a notion of distance on the manifold, as the curve of minimal length connecting two points. ", "page_idx": 13}, {"type": "text", "text": "In the remainder of the appendix we only consider Riemannian manifolds. ", "page_idx": 13}, {"type": "text", "text": "A.1 Manifold change of variables ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Embedded manifolds We define an $n$ -dimensional manifold embedded in $\\mathbb{R}^{m}$ via a projection function ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\pi:\\mathbb{P}\\rightarrow\\mathbb{R}^{m}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\mathbb{P}\\subseteq\\mathbb{R}^{m}$ is the projectable set. We require the projection to have the following properties (the first is true of all projections, the others are additional requirements): ", "page_idx": 13}, {"type": "text", "text": "1. $\\pi\\circ\\pi=\\pi$   \n2. $\\pi$ is smooth on $\\mathbb{P}$   \n3. $\\operatorname{rank}(\\pi^{\\prime}(\\pi(x)))=n{\\mathrm{~for~all~}}x\\in\\mathbb{P}$ ", "page_idx": 13}, {"type": "text", "text": "Given such a projection, we define a manifold by ", "page_idx": 13}, {"type": "equation", "text": "$$\n{\\mathcal{M}}=\\{x\\in\\mathbb{R}^{m}:\\pi(x)=x\\}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "with the tangent space ", "page_idx": 13}, {"type": "equation", "text": "$$\nT_{x}{\\mathcal{M}}=\\operatorname{col}(\\pi^{\\prime}(x))\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where col denotes the column space. Since the rank of $\\pi^{\\prime}(x)$ with $x\\in\\mathcal{M}$ is $n$ , the tangent space is $n$ -dimensional and $\\mathcal{M}$ is an $n$ -dimensional manifold. To avoid clutter we denote the Riemannian metric and its $m\\times m$ matrix representation with $G$ interchangeably. If $\\mathcal{M}$ is isometrically embedded then $G(x)$ is just the identity matrix. ", "page_idx": 13}, {"type": "text", "text": "The Jacobian of the projection is a projection matrix, meaning $\\pi^{\\prime}(x)\\pi^{\\prime}(x)=\\pi^{\\prime}(x)$ for $x\\in\\mathcal{M}$ . For any $v$ in the column space of $\\pi^{\\prime}(x)$ , there is a $u$ such that $v\\,=\\,\\pi^{\\prime}(x)u$ and due to the projection property, $\\pi^{\\prime}(x)v=\\pi^{\\prime}(\\bar{x})u=v$ . Similarly, for any $w$ in the row space of $\\pi^{\\prime}(x)$ , $w\\pi^{\\prime}(x)=w$ . If $\\pi$ is an orthogonal projection, $\\pi^{\\prime}$ is symmetric by definition and hence the row and column spaces are identical. ", "page_idx": 13}, {"type": "text", "text": "Integration on embedded manifolds In order to perform integration on the manifold, we cannot work directly in the $m$ -dimensional coordinates of the embedding space, instead we have to introduce some local $n$ -dimensional coordinates. This means that the domain of integration has to be diffeomorphic to an open set in $\\mathbb{R}^{n}$ . Since this might not be the case for the whole region of integration, we might need to partition it into such regions and perform integration on each individually (each such region, together with its map to $\\mathbb{R}^{n}$ , is known as a chart and a collection of charts is an atlas). ", "page_idx": 13}, {"type": "text", "text": "For example, if we want to integrate a function on the sphere, we could split the sphere into two hemispheres and integrate each separately. A hemisphere can be continuously stretched and flattened into a 2-dimensional region, whereas the whole sphere cannot without creating discontinuities. ", "page_idx": 14}, {"type": "text", "text": "Given an open set $U$ in $\\mathbb{R}^{n}$ , and a diffeomorphic local embedding function $\\phi:U\\to M$ , the integral of a scalar function $p:\\mathcal{M}\\rightarrow\\mathbb{R}$ on $\\phi(U)\\subseteq{\\bar{\\mathcal{M}}}$ is ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\int_{\\phi(U)}p d V=\\int_{U}(p\\circ\\phi)\\sqrt{|\\phi^{\\prime}(u)^{T}G(\\phi(u))\\phi^{\\prime}(u)|}d u^{1}\\cdot\\cdot\\cdot d u^{n}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "The integral on the right is an ordinary integral in $\\mathbb{R}^{n}$ . The quantity inside the determinant is known as the pullback metric. ", "page_idx": 14}, {"type": "text", "text": "Theorem 2 (Manifold change of variables). Let $(\\mathcal{M}_{X},G_{X})$ and $(\\mathcal{M}_{Z},G_{Z})$ be $n$ -dimensional Riemannian manifolds embedded in $\\mathbb{R}^{m}$ , i.e., $\\mathcal{M}_{X},\\mathcal{M}_{Z}\\,\\subseteq\\,\\mathbb{R}^{m}$ , and assume they have the same global topological structure. Let $p_{X}$ be a probability distribution on $\\mathcal{M}_{X}$ and let $f:\\mathcal{M}_{X}\\to\\mathcal{M}_{Z}$ be a diffeomorphism. Let $p z$ be the pushforward of $p_{X}$ under $f$ (i.e., if $p_{X}$ is the probability density of $X$ , then $p z$ is the probability density of $f(X),$ ). ", "page_idx": 14}, {"type": "text", "text": "Let $x\\,\\in\\,{\\mathcal{M}}_{X}$ . Define $Q\\,\\in\\,\\mathbb{R}^{m\\times n}$ as an orthonormal basis for $\\tau_{x}\\mathcal{M}_{X}$ and $R\\,\\in\\,\\mathbb{R}^{m\\times n}$ as an orthonormal basis for $\\tau_{f(x)}\\M_{Z}$ . ", "page_idx": 14}, {"type": "text", "text": "Then, the probability densities $p_{X}$ and $p_{Z}$ are related under the change of variables $x\\mapsto f(x)$ by the following equation: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\log p_{X}(x)=\\log p_{Z}(f(x))+\\log|R^{T}f^{\\prime}(x)Q|+\\frac{1}{2}\\log\\frac{|R^{T}G_{Z}(f(x))R|}{|Q^{T}G_{X}(x)Q|}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $Q$ and $R$ depend on $x$ and $f(x)$ , respectively, although this dependency is omitted for brevity. ", "page_idx": 14}, {"type": "text", "text": "Below, we provide two versions of the proof, the second being a less rigorous and more geometric variant of the first. ", "page_idx": 14}, {"type": "text", "text": "Proof. Let $\\phi:\\mathbb{R}^{n}\\rightarrow\\mathcal{M}_{X}$ be defined by $\\phi(u)=\\pi_{X}(x+Q u)$ . Let $U$ be an open subset of $\\mathbb{R}^{n}$ containing the origin which is small enough so that $\\phi$ is bijective. Let $\\psi:\\mathbb{R}^{n}\\rightarrow\\mathcal{M}_{Z}$ be defined by $\\psi(w)=\\bar{\\pi}_{Z}(f(x)^{\\bar{+}}{\\cal R}w)$ . Define $\\varphi=\\bar{\\psi}^{\\bar{-}1}\\circ f\\circ\\phi$ and let $W=\\varphi(U)$ . ", "page_idx": 14}, {"type": "text", "text": "Note that $\\phi^{\\prime}(u)=\\pi_{X}^{\\prime}(x+Q u)\\cdot Q$ and hence $\\phi^{\\prime}(0)=\\pi_{X}^{\\prime}(x)Q=Q$ (since each column of $Q$ is in $T_{x}{\\mathcal{M}}_{X}=\\operatorname{col}(\\pi_{X}^{\\prime}({\\bar{x}}))$ . ", "page_idx": 14}, {"type": "text", "text": "Similarly, $\\psi^{\\prime}(0)=R$ . Since $\\psi$ is a map from $n$ to $m$ dimensions, there is not a unique function from $\\mathbb{R}^{m}$ to $\\mathbb{R}^{n}$ which is $\\psi^{-1}$ on the manifold and there are remaining degrees of freedom in the offmanifold behavior which can result in different Jacobians. For our purposes, we define the inverse $\\psi^{-1}$ such that $\\psi\\circ\\psi^{-1}$ is an orthogonal projection onto $\\mathcal{M}_{Z}$ . This means $\\bar{\\psi}^{\\prime}(\\psi^{-1}(f(x)))(\\psi^{-1})^{\\prime}(f(x))=$ $R R^{T}$ and hence $(\\psi^{-1})^{\\prime}(f(\\bar{x_{}}))=\\mathbf{\\dot{R}}^{T}$ . ", "page_idx": 14}, {"type": "text", "text": "Since $p z$ is the pushforward of of $p_{X}$ under $f$ , the amount of probability mass contained in $\\phi(U)$ is the same as that contained in $f(\\phi(U))=\\psi(W)$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\int_{\\phi(U)}p_{X}(x)d V_{X}=\\int_{\\psi(W)}p_{Z}(z)d V_{Z}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "and therefore: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\int_{U}p_{X}(\\phi(u))\\sqrt{|\\phi^{\\prime}(u)^{T}G_{X}(\\phi(u))\\phi^{\\prime}(u)|}d u^{1}\\cdot\\cdot\\cdot d u^{n}}}\\\\ &{}&{=\\int_{W}p_{Z}(\\psi(w))\\sqrt{|\\psi^{\\prime}(w)^{T}G_{Z}(\\psi(w))\\psi^{\\prime}(w)|}d w^{1}\\cdot\\cdot\\cdot d w^{n}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Changing variables of the RHS with $w=\\varphi(u)$ gives us ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\displaystyle\\int_{U}p_{X}(\\phi(u))\\sqrt{|\\phi^{\\prime}(u)^{T}G_{X}(\\phi(u))\\phi^{\\prime}(u)|}d u^{1}\\cdot\\cdot\\cdot d u^{n}}\\\\ &{\\qquad\\qquad=\\displaystyle\\int_{U}p_{Z}(f(\\phi(u)))\\sqrt{|\\psi^{\\prime}(\\varphi(u))^{T}G_{Z}(f(\\phi(u)))\\psi^{\\prime}(\\varphi(u))|}\\cdot\\left\\vert\\frac{\\partial w}{\\partial u}\\right\\vert d u^{1}\\cdot\\cdot\\cdot d u^{n}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Since $U$ was arbitrary, we can make it arbitrarily small, demonstrating that the integrands must be equal for $u=0$ : ", "page_idx": 15}, {"type": "equation", "text": "$$\np_{X}(x)\\sqrt{|Q^{T}G_{X}(x)Q|}=p_{Z}(f(x))\\sqrt{|R^{T}G_{Z}(f(x))R|}\\cdot\\left|\\frac{\\partial w}{\\partial u}\\right|.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Since $w=\\psi^{-1}(f(\\phi(u)))$ , the Jacobian has the following form when evaluated at the origin (note $\\phi(0)=x)$ ): ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\displaystyle\\frac{\\partial w}{\\partial\\boldsymbol{u}}=(\\psi^{-1})^{\\prime}(f(\\boldsymbol{x}))\\cdot f^{\\prime}(\\boldsymbol{x})\\cdot\\phi^{\\prime}(0)}}\\\\ {{=R^{T}f^{\\prime}(\\boldsymbol{x})Q.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Substituting this into the equality, rearranging and taking the logarithm gives the result: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\log p_{X}(x)=\\log p_{Z}(f(x))+\\log|R^{T}f^{\\prime}(x)Q|+\\frac{1}{2}\\log\\frac{|R^{T}G_{Z}(f(x))R|}{|Q^{T}G_{X}(x)Q|}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Alternative proof Here is a less rigorous and more geometric proof, which may be more intuitive for some readers. ", "page_idx": 15}, {"type": "text", "text": "Proof. Let $x$ be a point on $\\mathcal{M}_{X}$ . Consider a small square region $U\\subseteq{\\mathcal{M}}$ around $x$ (hypercubic region in higher dimensions). If the sides of the square are small enough, the square is approximately tangent to the manifold since the manifold looks very flat if we zoom in. Suppose $Q$ is a basis for the tangent space at $x$ and $q^{1},\\ldots,q^{n}$ are the columns of $Q$ . Suppose that the sides of the square (or hypercube) are spanned by $u^{i}\\,=\\,\\epsilon q^{i}$ for a small $\\epsilon$ . The volume spanned by a parallelotope (higher-dimensional analog of a parallelogram) is the square root of the determinant of the Gram matrix of inner products: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname{vol}(u^{1},\\dots,u^{n})={\\sqrt{|\\langle u^{i},u^{j}\\rangle|}}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The inner product is given by $G$ , namely $\\langle u,v\\rangle=u^{T}G v$ . We can therefore write the volume of $U$ as ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\operatorname{vol}(U)\\approx\\epsilon^{n}{\\sqrt{|Q^{T}G Q|}}.\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Now consider how $U$ is transformed under $f$ . It will be mapped to a region $f(U)$ on $\\mathcal{M}_{z}$ with approximately straight edges, forming an approximate parallelotope in the tangent space at $z=f(x)$ . This region will be spanned by the columns of $f^{\\prime}(x)\\epsilon Q$ (since $\\bar{f}(x+u^{i})\\approx f(x)+f^{\\prime}(x)u^{i})$ and hence will have a volume of ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\operatorname{vol}(f(U))\\approx\\epsilon^{n}\\sqrt{|Q^{T}f^{\\prime}(x)^{T}G_{Z}(z)f^{\\prime}(x)Q|}~~~~~~~~~}\\\\ {=\\epsilon^{n}\\sqrt{|Q^{T}f^{\\prime}(x)^{T}R R^{T}G_{Z}(z)R R^{T}f^{\\prime}(x)Q|}~~~~~~~}\\\\ {=\\epsilon^{n}|R^{T}f^{\\prime}(x)Q|\\sqrt{|R^{T}G_{Z}(z)R|}~~~~~~~~~~}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $R$ is a basis for the tangent space at $f(x)$ . We can introduce $R R^{T}$ into the expression since it is a projection in the tangent space at $f(x)$ and is essentially the identity within that space. Since the RHS of $G_{Z}(z)$ and the LHS of $f^{\\prime}(x)$ both live in this tangent space, we can introduce $R R^{T}$ between them without changing the expression. Then in the last step we use that $|A B|=|A||B|$ for square matrices. ", "page_idx": 15}, {"type": "text", "text": "The probability density in $U$ and $f(U)$ should be roughly constant since both regions are very small. Since the probability mass in both regions should be the same we can write ", "page_idx": 15}, {"type": "equation", "text": "$$\np_{X}(x)\\operatorname{vol}(U)\\approx p_{Z}(f(x))\\operatorname{vol}(f(U))\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "and therefore ", "page_idx": 15}, {"type": "equation", "text": "$$\np_{X}(x)=p_{Z}(f(x))|R^{T}f^{\\prime}(x)Q|\\frac{\\sqrt{|R^{T}G_{Z}(f(x))R|}}{\\sqrt{|Q^{T}G_{X}(x)Q|}}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where the approximation becomes exact by taking the limit of infinitesimally small $\\epsilon$ . Taking the logarithm, we arrive at the result of Theorem 2. \u53e3 ", "page_idx": 15}, {"type": "text", "text": "A.2 Loss function ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Theorem 3. Under the assumptions of Theorem 2 with $f=f_{\\theta}$ . Let $v\\in\\mathbb{R}^{m}$ be a random variable with zero mean and covariance $R R^{T}$ . Then, the derivative of the change of variables term has the following trace expression, where $z=f_{\\theta}(x)$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\nabla_{\\theta}\\log|R^{T}f_{\\theta}^{\\prime}(x)Q|=\\mathrm{tr}(R^{T}(\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{-1^{\\prime}}(z)R)}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mathbb{E}_{v}\\left[v^{T}(\\nabla_{\\theta}f_{\\theta}^{\\prime}(x))f_{\\theta}^{-1^{\\prime}}(z)v\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Proof. For brevity, we drop the index $\\theta$ and denote $g\\ =\\ f^{-1}$ . First, a reminder that $\\varphi^{\\prime}(u)\\,=$ $R^{T}\\bar{f^{\\prime}}(x)Q$ with $\\dot{\\varphi}=\\psi^{-1}\\circ\\dot{f}\\circ\\phi$ . Let $\\chi=\\varphi^{-1}$ , i.e. $\\chi=\\phi^{-1}\\circ g\\circ\\psi$ . Jacobi\u2019s formula tells us that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\log\\vert A(t)\\vert=\\mathrm{tr}\\left(\\frac{d A(t)}{d t}A(t)^{-1}\\right).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Note also that since $\\chi(\\varphi(u))=u$ , therefore $\\chi^{\\prime}(\\varphi(u))\\varphi^{\\prime}(u)=I$ and $\\chi^{\\prime}(\\varphi(u))=\\varphi^{\\prime}(u)^{-1}$ . Applying Jacobi\u2019s formula to $\\varphi^{\\prime}(u)$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\nabla_{\\theta}\\log|\\varphi^{\\prime}(u)|=\\mathrm{tr}((\\nabla_{\\theta}\\varphi^{\\prime}(u))\\varphi^{\\prime}(u)^{-1})}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mathrm{tr}((\\nabla_{\\theta}\\varphi^{\\prime}(u))\\chi^{\\prime}(\\varphi(u)))}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and substituting in $f$ and $g$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\log|R^{T}f^{\\prime}(x)Q|=\\mathrm{tr}(\\nabla_{\\theta}(R^{T}f^{\\prime}(x)Q)Q^{T}g^{\\prime}(f(x))R).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "$Q$ does not depend on $\\theta$ , but $R$ depends on $f(x)$ and hence $\\theta$ , so it must be considered in the derivative. However, ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\operatorname{tr}(R R^{T})=\\operatorname{tr}((\\nabla_{\\theta}R)R^{T}+R\\nabla_{\\theta}R^{T})=2\\operatorname{tr}(R\\nabla_{\\theta}R^{T})\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and since $\\mathrm{tr}(R R^{T})=\\mathrm{tr}(I)$ is a constant, $\\mathrm{tr}(R\\nabla_{\\theta}R^{T})=0$ . Expanding Eq. (47): ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\log|R^{T}f^{\\prime}(x)Q|=\\operatorname{tr}(\\nabla_{\\theta}(R^{T})f^{\\prime}(x)Q Q^{T}g^{\\prime}(f(x))R)+\\operatorname{tr}(R^{T}\\nabla_{\\theta}(f^{\\prime}(x))Q Q^{T}g^{\\prime}(f(x))R).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Since $Q$ is an orthonormal basis for ${\\mathcal{T}}_{x}{\\mathcal{M}}_{X}$ , $Q Q^{T}$ is a projection matrix onto $\\tau_{x}\\mathcal{M}_{X}$ . This is because $(Q Q^{T})^{2}=Q Q^{T}Q Q^{T}=Q Q^{\\bar{T}}$ , using $Q^{T}Q=I$ . As a result, $Q Q^{T}\\pi^{\\prime}(x)=\\pi^{\\prime}(x)$ . Since $g$ can also be written inside a projection: $g(z)=\\pi_{Z}(g(z))$ , therefore $g^{\\prime}(z)=\\pi_{Z}^{\\prime}(\\tilde{g}(z))\\tilde{g}^{\\prime}(z)$ , so $Q Q^{T}g^{\\prime}(z)=g^{\\prime}(z)$ . Note also that $f^{\\prime}(x)g^{\\prime}(f(x))=I$ since $f\\circ g=\\operatorname{id}$ . This simplifies the equation: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\log|R^{T}f^{\\prime}(x)Q|=\\operatorname{tr}(\\nabla_{\\theta}(R^{T})R)+\\operatorname{tr}(R^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R)\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "and finally ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\log|R^{T}f^{\\prime}(x)Q|=\\mathrm{tr}(R^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R).\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "In the above proof we used the fact that $Q Q^{T}g^{\\prime}(z)\\,=\\,g^{\\prime}(z)$ , where we dropped the index $\\theta$ and use $g:=f^{-1}$ for brevity. Can we use $R R^{T}f^{\\prime}(x)\\,=\\,f^{\\prime}(x)$ to simplify the equation further? No, we cannot, since the expression involving $f^{\\prime}$ is actually its derivative with respect to parameters, which may not have the same matrix structure as $f^{\\prime}$ . Is it instead possible to use $\\begin{array}{r}{g^{\\prime}(z)R\\dot{R}^{T}=g^{\\prime}(z)}\\end{array}$ for simplification? If $g$ is implemented as $\\pi_{Z}(\\tilde{g}(z))$ , this is not necessarily true, as $g^{\\prime}(z)$ might not be a map from the tangent space at $z$ to the tangent space at $g(z)$ . For example, if we add a small deviation $v$ to $z$ , where $v$ is orthogonal to the tangent space at $z$ , then $g(z+v)$ might not equal $g(z)$ . However, this would mean that derivatives in the off-manifold direction can be non-zero, meaning that $g^{\\prime}(z)v\\neq g^{\\prime}(z)R R^{T}v=0$ (since $R R^{T}$ will project $v$ to $0$ ). We can change this by prepending $g$ by a projection: ", "page_idx": 16}, {"type": "equation", "text": "$$\ng=\\pi_{X}\\circ\\tilde{g}\\circ\\pi_{Z}.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "If $\\pi_{Z}$ is an orthogonal projection, meaning that $\\pi_{Z}^{\\prime}$ is symmetric, the column space and row space of $\\pi_{Z}$ will both be the same as those of $R R^{T}$ , meaning $\\pi_{Z}^{\\prime}(z)R R^{T}=\\pi_{Z}^{\\prime}$ and hence $g^{\\prime}(z)R R^{T}=g^{\\prime}(z)$ . This leads to the following corollary: ", "page_idx": 16}, {"type": "text", "text": "Corollary 4. Suppose the assumptions of Theorem 2 hold with $f=f_{\\theta}$ and the following implementation: ", "page_idx": 17}, {"type": "equation", "text": "$$\nf_{\\theta}^{-1}=\\pi_{X}\\circ f_{\\theta}^{-1}\\circ\\pi_{Z}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where $\\pi_{Z}$ is an orthogonal projection. Then the derivative of the change of variables term has the following trace expression, where $z=f_{\\theta}(x)$ : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\nabla_{\\theta}\\log|R^{T}f_{\\theta}^{\\prime}(x)Q|=\\mathrm{tr}((\\nabla_{\\theta}f^{\\prime}(x))(f_{\\theta}^{-1})^{\\prime}(z)).\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. Again, we drop the index $\\theta$ and let $g=f^{-1}$ for brevity. Take the result of Theorem 3 and use the cyclic property of the trace and the properties of $g^{\\prime}$ discussed above: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{tr}(R^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R)=\\mathrm{tr}(\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R R^{T})}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad=\\mathrm{tr}(\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))).}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "We use Hutchinson-style trace estimators to approximate the traces given above. This uses the property that, for a matrix $A\\,\\in\\,\\mathbb{R}^{n\\times n}$ and a distribution $p(v)$ in $\\mathbb{R}^{n}$ with unit second moment (meaning $\\mathbb{E}[v v^{T}]=I)$ , ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{p(v)}[v^{T}A v]=\\mathrm{tr}(\\mathbb{E}_{p(v)}[v^{T}A v])}\\\\ &{\\qquad\\qquad\\qquad=\\mathrm{tr}(\\mathbb{E}_{p(v)}[v v^{T}]A)}\\\\ &{\\qquad\\qquad\\qquad=\\mathrm{tr}(A)}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "meaning that $v^{T}A v\\approx\\operatorname{tr}(A)$ is an unbiased estimate of the trace of $A$ . ", "page_idx": 17}, {"type": "text", "text": "We have two variants of the trace estimate derived above, one evaluated in $\\mathbb{R}^{n}$ , the other in $\\mathbb{R}^{m}$ . The first can be estimated using the following equality (again dropping the index $\\theta$ and using $g=f^{-1})$ : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{tr}(R^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R)}\\\\ &{\\quad\\quad\\quad=\\mathbb{E}_{p(u)}[u^{T}R^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))R u]}\\\\ &{\\quad\\quad\\quad=\\mathbb{E}_{p(v)}[v^{T}\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x))v]}\\\\ &{\\quad\\quad\\quad=\\nabla_{\\theta}\\mathbb{E}_{p(v)}[v^{T}\\nabla_{\\theta}(f^{\\prime}(x))\\mathsf{S G}[g^{\\prime}(f(x))]v]}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where $p(u)$ has unit second moment in $\\mathbb{R}^{n}$ and $p(v)$ is the distribution of $R u$ , which lies in the tangent space at $x$ and has unit second moment in that space by which we mean $\\mathbb{E}[v v^{T}]=R R^{T}$ . An example of such a distribution is the standard normal projected to the tangent space, i.e. $\\boldsymbol{v}=\\boldsymbol{R}\\boldsymbol{R}^{T}\\tilde{\\boldsymbol{v}}$ where $\\tilde{v}$ is standard normal. ", "page_idx": 17}, {"type": "text", "text": "In the second case, we can just sample from a distribution with unit second moment in the embedding space $\\mathbb{R}^{m}$ : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mathrm{tr}(\\nabla_{\\theta}(f^{\\prime}(x))g^{\\prime}(f(x)))=\\nabla_{\\theta}\\mathbb{E}_{p(v)}[v^{T}\\nabla_{\\theta}(f^{\\prime}(x))\\mathbb{S}\\mathbb{G}[g^{\\prime}(f(x))]v].\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "A.3 Error bound ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "The error bound on the gradient from Draxler et al. [2024, Theorem 4.2] can be readily extended to Riemannian manifolds: ", "page_idx": 17}, {"type": "text", "text": "Theorem 5. Carry over the assumptions of Theorem 2 with $f=f_{\\theta}$ and let $g_{\\phi}$ be a manifold-tomanifold function. Let $J_{f_{\\theta}}=f_{\\theta}^{\\prime}(x)$ , $J_{g_{\\phi}}=g_{\\phi}^{\\prime}(z)$ , and $J_{f_{\\theta}^{-1}}=f_{\\theta}^{-1\\prime}(z)$ . Then: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\left|\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{g_{\\phi}}R)-\\nabla_{\\theta}\\log|R^{T}J_{f_{\\theta}}Q|\\right|\\leq\\|R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{f_{\\theta}^{-1}}R\\|_{F}\\|R^{T}J_{f_{\\theta}}J_{g_{\\phi}}R-\\mathbb{I}_{n}\\|_{F}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Proof. The proof closely follows [Draxler et al., 2024] and utilizes the Cauchy\u2013Schwarz inequality for the Frobenius inner product, which states that for matrices $A$ and $B$ , we have $|\\operatorname{tr}(A^{T}{\\dot{B}})|\\leq$ $\\|A\\|_{F}\\|B\\|_{F}$ . Applying this to our case: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left|\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{g_{\\phi}}R)-\\nabla_{\\theta}\\log|R^{T}J_{f_{\\theta}}Q|\\right|}\\\\ &{=\\left|\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{g_{\\phi}}R)-\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{f_{\\theta}^{-1}}R)\\right|}\\\\ &{=\\left|\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})(J_{g_{\\phi}}-J_{f_{\\theta}^{-1}})R)\\right|.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "We can re-express this term by introducing the identity matrix in terms of the Jacobians of $f_{\\theta}$ and its inverse: ", "page_idx": 18}, {"type": "equation", "text": "$$\n=\\left|\\mathrm{tr}(R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{f_{\\theta}^{-1}}R\\cdot R^{T}(J_{f_{\\theta}}J_{g_{\\phi}}-\\mathbb I_{m})R)\\right|.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "By applying the Cauchy\u2013Schwarz inequality, we obtain the bound: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\leq\\|R^{T}(\\nabla_{\\theta}J_{f_{\\theta}})J_{f_{\\theta}^{-1}}R\\|_{F}\\cdot\\|R^{T}J_{f_{\\theta}}J_{g_{\\phi}}R-\\mathbb{I}_{n}\\|_{F}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "To further clarify, we recall the function $\\varphi$ introduced in the proof of Theorem 2. This yields: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathbb{I}_{n}=J_{\\varphi^{-1}}J_{\\varphi}=Q^{T}J_{f_{\\theta}^{-1}}R R^{T}J_{f_{\\theta}}Q.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Thus, we can represent $J_{g_{\\phi}}$ as: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{J_{g_{\\phi}}=Q Q^{T}J_{g_{\\phi}}}\\\\ &{\\quad\\quad=Q(Q^{T}J_{f_{\\theta}^{-1}}R R^{T}J_{f_{\\theta}}Q)Q^{T}J_{g_{\\phi}}}\\\\ &{\\quad\\quad=J_{f_{\\theta}^{-1}}R R^{T}J_{f_{\\theta}}J_{g_{\\phi}},}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where we used $J_{g_{\\phi}}\\,=\\,Q Q^{T}J_{g_{\\phi}}$ and $J_{f_{\\theta}^{-1}}\\,=\\,Q Q^{T}J_{f_{\\theta}^{-1}}$ using similar reasoning to the proof of Theorem 3. \u53e3 ", "page_idx": 18}, {"type": "text", "text": "A.4 Variance reduction ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "When using a Hutchinson trace estimator wit\u221ah standard normal $v\\in R^{n}$ , we can reduce the variance of the estimate by scaling $v$ to have length $\\sqrt{n}$ (see [Girard, 1989]). The scaled variable will still have zero mean and unit covariance so the estimate remains unbiased, but the variance is reduced, with the effect especially pronounced in low dimensions. ", "page_idx": 18}, {"type": "text", "text": "While we can take advantage of this effect in both our options for trace estimator, the effect is more pronounced in lower dimensions, so we reduce the variance more by estimating the trace in an $n$ -dimensional space rather than an $m$ -dimensional space. Hence the first version of the trace estimator, where $v$ is sampled from a distribution in $\\tau_{x}\\mathcal{M}_{X}$ is preferable in this regard. ", "page_idx": 18}, {"type": "text", "text": "Let\u2019s provide some intuition with an example. Suppose $n=1$ , $m=2$ and $R=(1,0)^{T}$ . We want to estimate the trace of $A=\\mathrm{diag}(1,0)$ . Using the first estimator, we first sample $\\boldsymbol{v}=\\boldsymbol{R}\\boldsymbol{R}^{T}\\tilde{\\boldsymbol{v}}$ with $\\tilde{v}$ standard nor\u221amal which results in $\\boldsymbol{v}=(u,0)^{\\breve{T}}$ where $u\\in\\mathbb R$ is standard normal. Then we scale $v$ so it has length ${\\sqrt{n}}=1$ . This results in $\\boldsymbol{v}=(r,0)^{T}$ where $r$ is a Rademacher variable (taking the value $-1$ and 1 with equal probability). The trace estimate is therefore $r^{2}=1\\$ , meaning we always get the correct answer, so the variance is zero. The s\u221aecond estimator samples $v$ directly from a 2d standard normal,\u221a then scales it to have le\u221angth ${\\sqrt{m}}={\\sqrt{2}}$ . Hence $v$ is sampled uniformly from the circle with radius $\\sqrt{2}$ . We can write $v=\\sqrt{2}(\\cos\\theta,\\sin\\theta)^{T}$ with $\\theta$ sampled uniformly in $[0,2\\pi]$ . The estimate $v^{T}A v=2\\cos^{2}\\theta$ . This is a random variable whose mean is indeed 1 as required but has a nonzero variance, showing that the variance is higher when estimating in the $m$ -dimensional space. ", "page_idx": 18}, {"type": "text", "text": "For this reason, we choose the first estimator, sampling $v$ in the tangent space at $x$ . This also simplifies the definition of $g$ , meaning that we don\u2019t have to prepend it with a projection. ", "page_idx": 18}, {"type": "text", "text": "A.5 Scaling behavior ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Since generating in high-dimensional spaces can raise concerns about an estimator\u2019s scaling behavior, we argue theoretically that the free-form flow estimator scales comparably to flow matching as dimensions increase. Experimental results further support this, showing that non-Riemannian freeform flows exhibit strong scaling performance in spaces up to 261 dimensions [Draxler et al., 2024]. ", "page_idx": 18}, {"type": "text", "text": "One metric to assess scaling behavior is to consider the variance of the gradient estimator. With standard normal noise, the variance of the trace estimator $v^{T}A v$ is $2\\|A\\|_{F}^{2}$ [Hutchinson, 1989]. If we apply this to a simple linear free-form flow model $f(x)=A x$ and $g(z)=B z$ , we find that summing up the variances of the gradient estimates with respect to each element of $A$ leads to a total variance of $2{\\bar{n}}\\operatorname{tr}(B B^{T})$ . Note that in a converged model, $\\bar{B^{B^{T}}}$ is equal to the covariance of the data. A similar calculation for a flow matching loss of the form $\\textstyle{\\frac{1}{2}}\\|A x-y\\|^{2}$ leads to a total variance $\\|x\\|^{2}\\operatorname{tr}(\\Sigma)$ ", "page_idx": 18}, {"type": "text", "text": "with $\\Sigma$ the covariance of $p(y|x)$ . These results are proven below. We can see that both expressions scale as $n^{2}$ , assuming that $\\|{\\boldsymbol{x}}\\|^{2}$ and the trace terms scale as $n$ . These assumptions are fulfilled if, for example, the data is Gaussian, with covariance that doesn\u2019t depend on $n$ . Since the number of parameters (elements of $A$ ) scales as $n^{2}$ , the variance per parameter is constant. We thus expect similar scaling behavior to flow matching, with no problems due to variance in high dimensions. ", "page_idx": 19}, {"type": "text", "text": "Lemma 6. Let $A\\in\\mathbb{R}^{n\\times n}$ be a matrix with entries $A_{i j}$ , and let $\\b{B}\\in\\mathbb{R}^{n\\times n}$ be any matrix. Define $C^{i j}=\\frac{\\partial A}{\\partial A_{i j}}B$ for each $i,j$ . Let $\\boldsymbol{v}\\in\\mathbb{R}^{n}$ be a random vector with entries independently drawn from the standard normal distribution. Then, the total variance of the Hutchinson estimators $v^{T}C^{i j}v$ for $\\mathrm{tr}(C^{i j})$ over all $i,j$ is given by ", "page_idx": 19}, {"type": "equation", "text": "$$\n{\\mathrm{Total~Variance}}=\\sum_{i=1}^{n}\\sum_{j=1}^{n}{\\mathrm{Var}}\\left(v^{T}C^{i j}v\\right)=2n\\|B\\|_{F}^{2}=2n\\operatorname{tr}(B B^{T}),\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $\\|\\cdot\\|_{F}$ denotes the Frobenius norm. ", "page_idx": 19}, {"type": "text", "text": "Proof. We know from Hutchinson [1989] that ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathrm{Var}\\left(v^{T}C^{i j}v\\right)=2\\|C^{i j}\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Note the form of \u2202\u2202AAij , using the Kronecker delta: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\left(\\frac{\\partial A}{\\partial A_{i j}}\\right)_{k l}=\\delta_{k i}\\delta_{l j}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "This implies ", "page_idx": 19}, {"type": "equation", "text": "$$\n(C^{i j})_{k l}=\\sum_{m}\\left(\\frac{\\partial A_{k m}}{\\partial A_{i j}}\\right)B_{m l}=\\delta_{k i}\\delta_{m j}B_{m l}=\\delta_{k i}B_{j l}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Thus, $C^{i j}$ has non-zero entries only in the $i$ -th row, and that row is equal to the $j$ -th row of $B$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n(C^{i j})_{k l}=\\left\\{{\\cal B}_{j l}\\quad\\mathrm{if}\\ k=i,\\right.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Next, calculate the Frobenius norm of $C^{i j}$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\|C^{i j}\\|_{F}^{2}=\\sum_{k,l}(C^{i j})_{k l}^{2}=\\sum_{l}(B_{j l})^{2}=\\|B_{j:}\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "where $B_{j}$ : denotes the $j$ -th row of $B$ . ", "page_idx": 19}, {"type": "text", "text": "Finally, sum over all $i$ and $j$ to find the total variance: ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathrm{Total~Variance}=\\sum_{i=1}^{n}\\sum_{j=1}^{n}2\\|B_{j:}\\|_{2}^{2}=2n\\sum_{j=1}^{n}\\|B_{j:}\\|_{2}^{2}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Since ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\sum_{j=1}^{n}\\|B_{j:}\\|_{2}^{2}=\\|B\\|_{F}^{2},\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "the total variance simplifies to ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathrm{Total~Variance}=2n\\|B\\|_{F}^{2}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Noting that $\\|B\\|_{F}^{2}=\\mathrm{tr}(B B^{T})$ completes the proof. ", "page_idx": 19}, {"type": "text", "text": "Lemma 7. Let $A\\in\\mathbb{R}^{n\\times n}$ be a fixed matrix, $x\\in\\mathbb{R}^{n}$ a fixed vector, and let $y\\in\\mathbb{R}^{n}$ be a random vector with conditional distribution $p(y|x)$ having covariance matrix $\\Sigma$ . Define the loss function ", "page_idx": 19}, {"type": "equation", "text": "$$\nL(A)={\\frac{1}{2}}\\|A x-y\\|^{2}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then, the total variance of the gradient estimators $\\frac{\\partial L}{\\partial A_{i j}}$ over all $i$ and $j$ under $p(y|x)$ is given by ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathrm{Total\\:Variance}=\\|x\\|^{2}\\operatorname{tr}(\\Sigma).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Proof. The loss function is given by ", "page_idx": 20}, {"type": "equation", "text": "$$\nL(A)={\\frac{1}{2}}\\|A x-y\\|^{2}={\\frac{1}{2}}(A x-y)^{T}(A x-y).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "The derivative of $L(A)$ with respect to $A_{i j}$ is ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\frac{\\partial{L}}{\\partial A_{i j}}}=\\left({A x-y}\\right)^{T}{\\frac{\\partial(A x)}{\\partial A_{i j}}}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Since $A x$ is a vector whose $k$ -th component is $\\textstyle(A x)_{k}=\\sum_{l=1}^{n}A_{k l}x_{l}$ , the derivative of $(A x)_{k}$ with respect to $A_{i j}$ is ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\frac{\\partial(A x)_{k}}{\\partial A_{i j}}}=\\delta_{k i}x_{j},\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where $\\delta_{k i}$ is the Kronecker delta. ", "page_idx": 20}, {"type": "text", "text": "Therefore, the derivative becomes ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\frac{\\partial{\\cal L}}{\\partial A_{i j}}}=(A x-y)_{i}\\,x_{j}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "We are interested in the variance of the estimator $\\frac{\\partial L}{\\partial A_{i j}}$ under $p(y|x)$ . Since $A$ and $x$ are fixed, the only randomness comes from $y$ . Assuming that $y$ is a random vector with mean $\\mu=\\mathbb{E}[y|x]$ and covariance matrix $\\Sigma$ , we have ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname{Var}\\left({\\frac{\\partial L}{\\partial A_{i j}}}\\right)=\\operatorname{Var}\\left(\\left(A x-y\\right)_{i}x_{j}\\right)=x_{j}^{2}\\operatorname{Var}\\left(\\left(A x-y\\right)_{i}\\right).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Since $(A x-y)_{i}=(A x)_{i}-y_{i}$ , and $(A x)_{i}$ is deterministic, it follows that ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\operatorname{Var}\\left((A x-y)_{i}\\right)=\\operatorname{Var}(y_{i})=\\Sigma_{i i}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Therefore, ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mathrm{Var}\\left({\\frac{\\partial L}{\\partial A_{i j}}}\\right)=x_{j}^{2}\\Sigma_{i i}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "The total variance over all $i$ and $j$ is ", "page_idx": 20}, {"type": "equation", "text": "$$\n{\\mathrm{Total~Variance}}=\\sum_{i=1}^{n}\\sum_{j=1}^{n}\\operatorname{Var}\\left({\\frac{\\partial L}{\\partial A_{i j}}}\\right)=\\sum_{i=1}^{n}\\sum_{j=1}^{n}x_{j}^{2}\\Sigma_{i i}=\\|x\\|^{2}\\operatorname{tr}(\\Sigma).\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Therefore, we have proven that the total variance is $\\|x\\|^{2}\\operatorname{tr}(\\Sigma)$ . ", "page_idx": 20}, {"type": "text", "text": "B Experimental details ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "In accordance with the details provided in Section 4, our approach incorporates multiple regularization loss components in addition to the negative log-likelihood objective. This results in the final loss expression: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathcal{L}_{\\mathrm{NLL}}+\\beta_{\\mathrm{R}}^{x/z}\\mathcal{L}_{\\mathrm{R}}^{x/z}+\\beta_{\\mathrm{U}}^{x/z}\\mathcal{L}_{\\mathrm{U}}^{x/z}+\\beta_{\\mathrm{P}}^{x/z}\\mathcal{L}_{\\mathrm{P}}^{x/z}.\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "For each of the terms, there is a variant in $x$ - and in $z$ -space, as indicated by the superscript. In detail: The first loss $\\mathcal{L}_{\\mathrm{R}}$ represents the reconstruction loss: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathtt{R}}^{x}=\\mathbb{E}_{x\\sim p_{\\mathrm{data}}}[d(x,g_{\\phi}(f_{\\theta}(x))],}\\\\ &{\\mathcal{L}_{\\mathtt{R}}^{z}=\\mathbb{E}_{x\\sim p_{\\mathrm{data}}}[d(f_{\\theta}(x),f_{\\theta}(g_{\\phi}(f_{\\theta}(x)))].}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Here $d(x,y)=\\lVert x-y\\rVert^{2}$ is the standard reconstruction loss in the embedding space. This could be replaced with a distance on the manifold. However, this would be more expensive to compute and ", "page_idx": 20}, {"type": "text", "text": "since we initialize networks close to identity, the distance in the embedding space is almost equal to shortest path length on the manifold. ", "page_idx": 21}, {"type": "text", "text": "In order to have accurate reconstructions outside of training data, we also add reconstruction losses for data uniformly sampled on the manifold, both for $x$ and $z$ : ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathrm{U}}^{x}=\\mathbb{E}_{x\\sim\\mathcal{U}(\\mathcal{M})}[d(x,g_{\\phi}(f_{\\theta}(x))],}\\\\ &{\\mathcal{L}_{\\mathrm{U}}^{z}=\\mathbb{E}_{x\\sim\\mathcal{U}(\\mathcal{M})}[d(z,f_{\\theta}(g_{\\phi}(z))].}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Finally, we make sure that the function learned by the neural networks is easy to project by regularizing the distance between the raw outputs by the neural networks in the embedding space and the subsequent projection to the manifold (compare Eq. (17)): ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathcal{L}_{\\mathrm{P}}^{x}=\\mathbb{E}_{x\\sim p_{\\mathrm{data}}}[||g_{\\phi}(f_{\\theta}(x))-\\tilde{g}_{\\phi}(f_{\\theta}(x))||^{2}],}\\\\ &{\\mathcal{L}_{\\mathrm{P}}^{z}=\\mathbb{E}_{x\\sim p_{\\mathrm{data}}}[||f_{\\theta}(x)-\\tilde{f}_{\\theta}(x)||^{2}].}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "If these superscripts are not specified explicitly in the following summary of experimental details, we mean $\\beta^{x}=\\beta^{z}$ . ", "page_idx": 21}, {"type": "text", "text": "In all cases, we selected hyperparameter using the performance on the validation data. ", "page_idx": 21}, {"type": "text", "text": "B.1 Likelihood Evaluation ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Sampling from a trained model can be easily achieved by sampling from the latent distribution and performing a single pass through the decoder $g$ . However, in order to evaluate the likelihood of the test set under our model, as in [Draxler et al., 2024], we need to calculate the change of variable formula w.r.t. $g^{-1}$ ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\log p_{X}(x)=\\log p_{Z}(g^{-1}(x))+\\log|R^{T}g^{-1^{\\prime}}(x)Q|+\\frac{1}{2}\\log\\frac{|R^{T}G_{Z}(g^{-1}(x))R|}{|Q^{T}G_{X}(x)Q|}}\\\\ {\\approx\\log p_{Z}(f(x))+\\log|R^{T}g^{\\prime}(f(x))^{-1}Q|+\\frac{1}{2}\\log\\frac{|R^{T}G_{Z}(f(x))R|}{|Q^{T}G_{X}(x)Q|}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "Here we used the approximation $f\\approx g^{-1}$ . While is expensive to compute for training, it is reasonably fast to compute during inference time. To show the validity of this approximation, we report the reconstruction losses computed on the test dataset for all experiments in table 8. ", "page_idx": 21}, {"type": "text", "text": "Insufficient reconstruction losses. If the assumption of $f\\approx g^{-1}$ is not sufficiently fulfilled the measured likelihoods might be inaccurate. We try to identify such cases by sampling points from $\\mathcal{M}$ around the proposed latent point with small noise strength $\\sigma$ ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\tilde{z}=\\pi(f(x)+{\\mathcal{N}}(0,\\sigma)).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "As inverse of the decoder $g$ we use the sample $\\tilde{z}$ which results in the lowest reconstruction loss ", "page_idx": 21}, {"type": "equation", "text": "$$\ng^{-1}(x)\\approx\\underset{\\tilde{z}}{\\arg\\operatorname*{min}}||g(\\tilde{z})-x||_{2}^{2}.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "We also do this with samples drawn around $\\tilde{x}=\\pi(x+\\mathcal{N}(0,\\sigma))$ and uniformly from the manifold $\\tilde{z}\\,=\\,\\mathcal{U}(\\mathcal{M})$ . We note that in most cases except for the earth datasets the likelihoods computed in this way agree with $f\\approx g^{-1}$ . In case of the earth datasets, we note that the newly computed likelihoods now agree with observed model quality. Specifically, whenever reconstruction loss is low we also see agreement between the likelihoods computed via $f$ and our approximation of $g^{-1}$ via sampling. Otherwise, the disagreement between $f$ and $g^{-1}$ and the resulting drop in model quality are correctly diagnosed. Therefore, for the all $\\mathbb{S}^{2}$ experiments we report the likelihoods computed by our approximation. ", "page_idx": 21}, {"type": "text", "text": "Sampling based evaluation. In order to evaluate our models independently of their reconstruction capabilities, we propose to also report a sample-based metric. Due to the curse of dimensionality, sample-based metrics are only tractable in low dimensions. Therefore, we report the Wasserstein-2 distance between model samples and the test dataset, including the standard deviation over multiple training runs, for all 2-dimensional manifolds in Table 7. As competing method have neither reported a sampling based evaluation metric nor published their models, we propose to use our baseline results for future benchmarking. ", "page_idx": 21}, {"type": "text", "text": "Table 7: Wasserstein-2 distances for all 2-dimensional manifolds. ", "page_idx": 22}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/6f1537ab0961cf24e0414dca645825dfb52ca5f41e056fb7bade0f17a59f19c2.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "Table 8: The reconstruction losses $\\displaystyle{\\mathcal{L}}_{R}$ show that the reconstructed points lie close to the original data.   \nThis justifies evaluating M-FFF via negative log-likelihoods. ", "page_idx": 22}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/35b771fae049551d00aa4857ede4f39c4ba938ee3c6b7bcbb32e6bd8505998c1.jpg", "table_caption": [], "table_footnote": [], "page_idx": 22}, {"type": "text", "text": "Table 9: Hyperparameter choices for the rotation experiments. $\\beta_{\\mathrm{U}}$ and $\\beta_{\\mathbf{P}}$ are the same for both the sample and latent space. ", "page_idx": 22}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/8eac12b213201f05618aa09c1b5f795a39dbd2f228090fe99a708f06157e197e.jpg", "table_caption": [], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/79e0c17323d7f46c8421423dd2fd6553b3ef5b4fa137807863b078479eaec34a.jpg", "table_caption": ["Table 10: Dataset overview for the earth data experiments. Each dataset is split into $80\\%$ for training, $10\\%$ for validation and $10\\%$ for testing. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "Table 11: Hyperparameter choices for the earth data experiments. $\\beta_{\\mathrm{U}}$ and $\\beta_{\\mathbf{P}}$ are the same for both the sample and latent space. ", "page_idx": 23}, {"type": "text", "text": "B.2 Special orthogonal group ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "To apply manifold free-form flows, we project an output matrix $R\\in\\mathbb{R}^{3\\times3}$ from the encoder/decoder to the subspace of special orthogonal matrices by finding the matrix $Q\\in S O(3)$ minimizing the Frobenius norm $\\|Q-R\\|_{F}$ . This is known as the constrained Procrustes problem and the solution $Q$ can be determined via the SVD $R=U\\Sigma V^{T}$ [Lawrence et al., 2019]: ", "page_idx": 23}, {"type": "equation", "text": "$$\nQ=U S V^{T},\n$$", "text_format": "latex", "page_idx": 23}, {"type": "text", "text": "where the diagonal entries of $\\Sigma$ were sorted from largest to smallest and $\\begin{array}{r l}{S}&{{}=}\\end{array}$ $\\mathrm{Diag}(1,\\ldots,1,\\bar{\\operatorname*{det}}(U V^{T}))$ . ", "page_idx": 23}, {"type": "text", "text": "The special orthogonal group data set is synthetically generated. We refer to [De Bortoli et al., 2022] for a description of the data generation process. They use an infinite stream of samples. To emulate this, we generate a data set of $10^{7}$ samples from their code, of which we reserve 1,000 for validation during training and 5,000 for testing. We vectorize the $3\\times3$ matrices before passing them into the fully-connected networks. All training details are given in Table 9, one training run takes approximately 7 hours on a NVIDIA A40. ", "page_idx": 23}, {"type": "text", "text": "The data set is synthetically generated; of the $N=100,000$ data points, we use $1\\%$ of for validation and hyperparameter selection and $5\\%$ for test NLL. Each run uses a different random initialization of papers. ", "page_idx": 23}, {"type": "text", "text": "B.3 Earth data ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "We follow previous works and use a dataset split of $80\\%$ for training, $10\\%$ for validation and $10\\%$ for testing. For the earth datasets we use a mixture of 5 learnable Von-Mises-Fisher distributions for the target latent distribution. We base our implementation on the hyperspherical_vae library [Davidson et al., 2018]. In order to stabilize training we apply a small amount of Gaussian noise to ", "page_idx": 23}, {"type": "image", "img_path": "QbPHYPZKJI/tmp/a358aa90853120d768cf08390b6103e3f0861b657eccb54e4a150980aeb3097f.jpg", "img_caption": ["Figure 4: Density estimates of our model on the earth datasets. Blue points show the training dataset, red points the test dataset. "], "img_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/c56170bbce21771e3807f0fcfb9b86dfef365faf19d384477694ee293091ac97.jpg", "table_caption": [], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "Table 12: Details on the torus datasets. Each dataset is randomly split into a train dataset $(80\\%)$ ), validation dataset $(10\\%)$ and test dataset $(10\\%)$ . During training, we add Gaussian noise with mean zero and standard deviation given by \u2018noise strength\u2019 to the data, to counteract overfitting. ", "page_idx": 24}, {"type": "text", "text": "every batch (see table 10) and project the resulting data point back onto the sphere. Other training hyperparameters can be found in table 11. Each model trained around 20h on a compute cluster using a single NVIDIA A40. ", "page_idx": 24}, {"type": "text", "text": "B.4 Tori ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "The torus datasets are randomly split into a train dataset $(80\\%)$ , validation dataset $(10\\%)$ and test dataset $(10\\%)$ . To counteract overftiting, we augment the RNA dataset with random Gaussian noise. The noise strength and total number of instances is reported in Table 12. We use a uniform latent ", "page_idx": 24}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/202efba0d7f0348b39b3deb2a616f9f3ebff7ee5b5e8a187904e4721942c52f6.jpg", "table_caption": [], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "Table 13: Details on the model architecture, loss weights and optimizer parameters for the torus datasets. We use the same configuration for all protein datasets on $\\mathbb{T}^{2}$ . ", "page_idx": 24}, {"type": "image", "img_path": "QbPHYPZKJI/tmp/59681698f9d6cc1825dfa1201a7c896f47cfe345c3f08b9ecd4f5b17c5e99479.jpg", "img_caption": ["Figure 5: Log density of M-FFF models in the $(\\Phi,\\Psi)$ -plane of protein backbone dihedral angles (known as Ramachandran plot[Ramachandran et al., 1963]). The learned density matches the true density indicated by the test dataset (black dots) very well. Note also that the learned distribution obeys the periodic boundary conditions. "], "img_footnote": [], "page_idx": 25}, {"type": "text", "text": "distribution. We train for $120\\mathbf{k}$ steps with a batch size of 512 which takes 2.5 to 3 hours on a NVIDIA GeForce RTX 2070 graphics card. Further hyperparameters used in training can be found in Table 13. ", "page_idx": 25}, {"type": "text", "text": "B.5 Hyperbolic space ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "A straightforward way to define distributions on hyperbolic space (but also other Riemannian manifolds) is, to define a probability density $p_{\\mathrm{tangent}}$ in the tangent space at the origin and use the exponential map $\\exp_{0}$ to pushforward this distribution onto the manifold using Eq. (9): ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\log p_{\\mathrm{maifold}}(\\exp_{0}(v))=\\log p_{\\mathrm{tangent}}(v)-\\log|J_{\\mathrm{exp_{0}}}(v)|-\\frac{1}{2}\\log\\frac{|G_{\\mathrm{maitold}}(\\exp_{0}(v))|}{|G_{\\mathrm{tangent}}(v)|},\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "where $G_{\\mathrm{manifold}}$ denotes the metric tensor of the embedded manifold and $G_{\\mathrm{tangent}}$ the metric tensor of the tangent space. This is also known as a \u2019wrapped\u2019 distribution. ", "page_idx": 25}, {"type": "text", "text": "We use the Poincar\u00e9 ball model, which embeds the $\\mathbf{n}$ -dimensional hyperbolic space $\\mathbb{H}^{n}$ in the ndimensional Euclidean space $\\mathbb{R}^{n}$ as defined in Table 2. The exponential map at the origin of this embedding and its Jacobian determinant are simply given by: ", "page_idx": 25}, {"type": "equation", "text": "$$\n\\exp_{0}(v)=\\operatorname{tanh}(\\|v\\|){\\frac{v}{\\|v\\|}}\\qquad\\qquad{\\mathrm{and}}\\qquad\\qquad|J_{\\mathrm{exp_{0}}}(v)|={\\frac{\\operatorname{tanh}(\\|v\\|)}{\\|v\\|\\cosh^{2}(\\|v\\|)}}.\n$$", "text_format": "latex", "page_idx": 25}, {"type": "text", "text": "The metric tensor at some point $p\\in\\mathbb{H}$ is defined by: $G_{\\mathbb{H}}^{i j}(p)=\\lambda_{p}^{2}\\delta_{i j}$ with $\\lambda_{p}=2/(1-\\|x\\|^{2})$ . The metric tensor of the tangent space is the usual Euclidean metric tensor: $G_{\\mathbb{R}}^{i j}=\\delta_{i j}$ . ", "page_idx": 25}, {"type": "text", "text": "With this at hand, we can define latent and toy distributions as wrapped distributions at the origin, as depicted in Fig. 6. ", "page_idx": 25}, {"type": "text", "text": "For training, we sample 100k data points from each distribution. Hyperparameters for each model can be found in Table 14. Training takes approximately 2.5, 16, 8 and 16 hours on a NVIDIA A40 graphics card for the one Gaussian, five Gaussians, swish and checkerboard dataset respectively. The resulting model densities are shown in Fig. 6. ", "page_idx": 25}, {"type": "text", "text": "B.6 3D mesh ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "We base our experiment on the manifold and data provided by [Chen and Lipman, 2024] using $80\\%$ for training, $10\\%$ for validation and hyperparameter tuning. We report test NLL on the remaining $10\\%$ of the data. Each run starts from different parameter initialization. They give the manifold as a triangular mesh, consisting of vertices $v_{i}\\in\\mathbb{R}^{3},\\dot{i}=1,\\dots N_{v}$ and triangular faces $f_{j}\\in\\{1,\\ldots,N_{v}\\}^{3}$ . ", "page_idx": 25}, {"type": "text", "text": "Since the projection to the nearest point on the mesh has zero gradient in parts of $\\mathbb{R}^{3}$ , we instead project to the manifold using a separately trained auto encoder with a spherical latent space. This autoencoder consists of an encoder $e:\\mathbb{R}^{3}\\to\\mathbb{R}^{3}$ consisting of five hidden layers with 256 neurons each, SiLU activations and an overall skip connection. The latent codes are computed by projecting the encoder outputs $e(x)$ to a sphere as $z(\\bar{x})=e(x)/\\|e(x)\\|$ , so that the latent space has the same the topology as the input mesh. Then, a decoder $d(z)$ with the same structure as the encoder is trained to reconstruct the original points by minimizing $\\|\\boldsymbol{x}-d(e(\\boldsymbol{x})/\\|e(\\boldsymbol{x})\\|\\|^{2}$ . We train it for $2^{18}=262$ , 144 steps, with each batch consisting of all $N_{v}=2,502$ vertices and an additional $N=2,502$ uniformly random points on the original mesh. We find that for successful training, it is helpful to filter out data with $x_{2}>0.5+n/\\bar{10},000$ , where $n$ is the step number. This prevents the long bunny ears from collapsing as the are slowly grown, allowing the model to adapt. ", "page_idx": 25}, {"type": "image", "img_path": "QbPHYPZKJI/tmp/bdf4b6a115d22a22bdda733471aadc61aa9df45c951a6edc41fb2e6b45d9a7a1.jpg", "img_caption": ["Figure 6: Density estimation on the Poincar\u00e9 ball model. As latent distribution we use a wrapped normal distribution with standard deviation 0.5 (Left). As target distributions (top row) we define several toy distributions in the tangent space at the origin and use Eq. (103) to push forward to the manifold. We will reference each distribution from left to right as \u2019one Gaussian\u2019, \u2019five Gaussians\u2019, \u2019swish\u2019 and \u2019checkerboard\u2019. We train M-FFF on these target distributions using the full expression in Eq. (9) to compute the change in variables and evaluate the densities of the models (bottom row). M-FFF are capable to adapt to non-isometrically embedded manifolds. The learned densities on the one Gaussian, five Gaussians and swish dataset closely follow the target densities. On the checkerboard dataset, M-FFF cannot fully reproduce the sharp edges and density of the dataset. "], "img_footnote": [], "page_idx": 26}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/ece7d17f9a5211575784dc4075dd4ac0e8d7c1805833ced7b5f47a1cea6413ea.jpg", "table_caption": [], "table_footnote": ["Table 14: Details on the model architecture, loss weights and optimizer parameters for the Poincar\u00e9 ball experiments. "], "page_idx": 26}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "We then train M-FFF with the hyperparameters given in table Table 15, using the pretrained autoencoder as our projection to the manifold. Note that we do not train the distribution on the latent sphere of the encoder, but directly on the manifold spanned by it. Training takes approximately 14 hours on a NVIDIA A40. ", "page_idx": 26}, {"type": "text", "text": "B.7 Libraries ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "We base our code on PyTorch [Paszke et al., 2019], PyTorch Lightning [Falcon and The PyTorch Lightning team, 2019], Lightning Trainable [K\u00fchmichel and Draxler, 2023], Numpy [Harris et al., 2020], Matplotlib [Hunter, 2007] for plotting and Pandas [McKinney, 2010, The pandas development team, 2020] for data evaluation. We use the geomstats [Miolane et al., 2020, 2023] package for embeddings and projections. ", "page_idx": 26}, {"type": "table", "img_path": "QbPHYPZKJI/tmp/d0f4926c5d29e03f6f16cc35a67daf3d0fd88c3b30cc9df27154dce12a25566b.jpg", "table_caption": [], "table_footnote": ["Table 15: Hyperparameter choices for the bunny experiments. "], "page_idx": 27}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "1. Claims ", "page_idx": 27}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Manifold Free-Form Flows are introduced in Section 4, and the experimental performance is demonstrated in Section 5. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 27}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We provide a dedicated limitations section in Section 6. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper. \u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper. \u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be. ", "page_idx": 27}, {"type": "text", "text": "\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 28}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The proof for Theorems 2 and 3 are given as Appendices A.1 and A.2 in the appendix. The necessary assumptions are listed with each theorem and we explicitly state in the main text whenever they are relaxed in practice. We intuition on the proofs upon statement in the main text. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 28}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The gradient estimator in Theorem 3 can be directly implemented using the text below, and we give detailed instructions in Appendix B for each experiment, and released all necessary code. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: We provide code to all experiments in Appendix B Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 29}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: See Section 5 and Appendix B for these details. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 30}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We calculate the mean and standard deviation across runs for different data splits and initialization using pandas.std in Tables 3 to 6. A description of how errors are evaluated is included in Section 5 and details are included in Appendix B. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 30}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: Yes, we provide the runtime of each experiment with the training details in Appendix B. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 30}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Justification: We adhere to the Code of Ethics. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 31}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper improves generative models on manifolds on a methodological level. While generative models in general can be used for malicious purposes, we do not see a direct positive or negative impact for society for the case of generating data on manifolds. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 31}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The data considered are synthetic or scientific, and as such do not have a risk of misuse. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks. ", "page_idx": 31}, {"type": "text", "text": "\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 32}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: We cite the original datasets in Appendix B and the underlying software in Appendix B.7. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 32}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: No assests are introduced. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 32}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: No crowdsourcing nor research with human subjects. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 33}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: No crowdsourcing nor research with human subjects. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 33}]