[{"figure_path": "llTroju97T/figures/figures_1_1.jpg", "caption": "Figure 1: Framework Overview. (a) Schematic of LM-WEATHER, each client using personalized adapter to endow the PLM for local weather awareness, only low-rank matrices are transmitted to enhance efficiency during communication; (b) Brief structure of PLM on each client, detailed architecture can be found in Appendix; (c) Task Adapter Generation, the multivariate weather series input splits into two paths. The first path isolates the trend, seasonal, and residual elements, which each go through independent generator to produce specific adapters; (d) Architecture of the generator for each decomposed element; (e) Schematic diagram of Channel-Independent Patching [6].", "description": "This figure provides a comprehensive overview of the LM-WEATHER framework. It illustrates the system architecture, showing how personalized adapters enhance the pre-trained language model (PLM) for each client's specific weather data.  The figure details the low-rank matrix communication strategy, the task adapter generation process (including trend, seasonal, and residual decomposition), the structure of the individual client's PLMs, and the Channel-Independent Patching technique.", "section": "3 Taming PLMs for On-device Meteorological Variable (Sequence) Modeling"}, {"figure_path": "llTroju97T/figures/figures_18_1.jpg", "caption": "Figure 1: Framework Overview. (a) Schematic of LM-WEATHER, each client using personalized adapter to endow the PLM for local weather awareness, only low-rank matrices are transmitted to enhance efficiency during communication; (b) Brief structure of PLM on each client, detailed architecture can be found in Appendix; (c) Task Adapter Generation, the multivariate weather series input splits into two paths. The first path isolates the trend, seasonal, and residual elements, which each go through independent generator to produce specific adapters; (d) Architecture of the generator for each decomposed element; (e) Schematic diagram of Channel-Independent Patching [6].", "description": "This figure provides a high-level overview of the LM-WEATHER framework. It shows the system architecture, including the personalized adapters used on each client device, the low-rank matrix transmission for efficient communication, and the task adapter generation process.  The figure also details the architecture of the personalized adapter generator and the channel-independent patching method.", "section": "1 Introduction"}, {"figure_path": "llTroju97T/figures/figures_19_1.jpg", "caption": "Figure 1: Framework Overview. (a) Schematic of LM-WEATHER, each client using personalized adapter to endow the PLM for local weather awareness, only low-rank matrices are transmitted to enhance efficiency during communication; (b) Brief structure of PLM on each client, detailed architecture can be found in Appendix; (c) Task Adapter Generation, the multivariate weather series input splits into two paths. The first path isolates the trend, seasonal, and residual elements, which each go through independent generator to produce specific adapters; (d) Architecture of the generator for each decomposed element; (e) Schematic diagram of Channel-Independent Patching [6].", "description": "This figure provides a high-level overview of the LM-WEATHER framework. It shows the system architecture, including how personalized adapters are used to adapt a pre-trained language model to each client's specific weather data. It also details the communication process, task adapter generation, and the architecture of the generator used for task adaptation.  Finally, it shows the channel-independent patching method used to improve efficiency.", "section": "1 Introduction"}, {"figure_path": "llTroju97T/figures/figures_20_1.jpg", "caption": "Figure 1: Framework Overview. (a) Schematic of LM-WEATHER, each client using personalized adapter to endow the PLM for local weather awareness, only low-rank matrices are transmitted to enhance efficiency during communication; (b) Brief structure of PLM on each client, detailed architecture can be found in Appendix; (c) Task Adapter Generation, the multivariate weather series input splits into two paths. The first path isolates the trend, seasonal, and residual elements, which each go through independent generator to produce specific adapters; (d) Architecture of the generator for each decomposed element; (e) Schematic diagram of Channel-Independent Patching [6].", "description": "This figure provides a high-level overview of the LM-WEATHER framework. It illustrates the system architecture, showing how personalized adapters are used to enhance a pre-trained language model (PLM) for on-device weather forecasting.  The figure also details the process of task adapter generation, which decomposes multivariate weather series data into trend, seasonal, and residual components to generate specific adapters for the PLM. Finally, the figure shows the channel-independent patching method, which improves efficiency and generalisation.", "section": "3 Taming PLMs for On-device Meteorological Variable (Sequence) Modeling"}, {"figure_path": "llTroju97T/figures/figures_22_1.jpg", "caption": "Figure 1: Framework Overview. (a) Schematic of LM-WEATHER, each client using personalized adapter to endow the PLM for local weather awareness, only low-rank matrices are transmitted to enhance efficiency during communication; (b) Brief structure of PLM on each client, detailed architecture can be found in Appendix; (c) Task Adapter Generation, the multivariate weather series input splits into two paths. The first path isolates the trend, seasonal, and residual elements, which each go through independent generator to produce specific adapters; (d) Architecture of the generator for each decomposed element; (e) Schematic diagram of Channel-Independent Patching [6].", "description": "This figure provides a comprehensive overview of the LM-WEATHER framework. It illustrates the system architecture, including the personalized adapter used on each client device to enhance the pre-trained language model (PLM) with local weather pattern awareness.  The figure also details the low-rank matrix transmission for efficient communication, the task adapter generation process for decomposing multivariate weather series, and the architecture of the generator used to create task-specific adapters.", "section": "3 Taming PLMs for On-device Meteorological Variable (Sequence) Modeling"}]