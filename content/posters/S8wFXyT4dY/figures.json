[{"figure_path": "S8wFXyT4dY/figures/figures_1_1.jpg", "caption": "Figure 1: (Left): A biological neuron has three main components: the dendrites (blue), the axon (orange, pink), and the soma (green). The dendrites are responsible for receiving external inputs. The axon transmits signals to the dendrites of other neurons through the synapses. The soma is the body of the cell and connects the dendrites to the axon. (Middle): The membrane potential, defined as the voltage difference between the interior and the exterior of the cell, regulates the neuron's behavior and can be approximately modeled by a piecewise linear function. \u2460 When the neuron is at rest, the potential stays at a constant level Vo. \u2461 An external input is received by the dendrites, causing an instantaneous perturbation to the membrane potential. \u2462 The perturbation is not significant enough to excite the neuron, and the potential leaks over time exponentially (i.e., linearly in the logarithmic space). \u2463 Another external input happens. \u2464 The input fails to excite the neuron. A third input causes the membrane potential to exceed the threshold voltage Vth. The neuron becomes excited and generates a spike. The excitement opens ion channels, and the ion flow causes a reset to the membrane potential. \u2467 After the excitement, the ion channels close again, and the potential continues to decay. The neuron returns to the resting state, waiting for new inputs. (Right): A PPLN node. Given inputs {xk}k=1, we predict the linear coefficients \u0398 for the membrane potential function, including the slope, intercept, and endpoints of each line segment. The resulting parametric function V\u0259 is then used to evaluate the neuron output at the timestamp of interest y(x1,..., xk, t) = \u03c3(Ve(t)), where \u03c3(\u00b7) is the integral normalization defined in Section 3.4.", "description": "This figure shows a biological neuron's components (dendrites, axon, soma, synapse), its membrane potential approximated by a piecewise linear function (illustrating resting state, external input, threshold excitation, spike generation, and decay), and the PPLN node, which uses input data (x1, x2,...xk) and time (t) to predict linear coefficients (\u0398) for the membrane potential function (Ve(t)) resulting in output y.", "section": "1 Introduction"}, {"figure_path": "S8wFXyT4dY/figures/figures_4_1.jpg", "caption": "Figure 2: (a) A linear PPLN node, which maps the input (x, t) to output f. The trainable parameters are Wm, Wb, Wb, and wy. (b) A similarly structured 2D convolutional PPLN node. (c) The baseline architecture for steering angle prediction (Hu). (d) Our model. (e) The modified baseline (HuMod).", "description": "This figure shows the architecture of the proposed Parametric Piecewise Linear Networks (PPLNs).  Panel (a) illustrates a linear PPLN node, showing how input features (x) and a timestamp (t) are used to predict linear coefficients (m, b, s), which are then used to generate a piecewise linear function that produces the output (f). Panel (b) shows a similar 2D convolutional PPLN node, where the convolution operation is applied before coefficient prediction. Panels (c), (d), and (e) compare the proposed model to existing baselines for steering angle prediction. Panel (c) shows the original baseline, (d) the proposed model that uses PPLNs, and (e) a modified baseline with a similar number of input channels as the proposed model.", "section": "3 Method"}, {"figure_path": "S8wFXyT4dY/figures/figures_6_1.jpg", "caption": "Figure 3: Motion deblurring visualizations. More are available in the supplementary material.", "description": "This figure displays a qualitative comparison of motion deblurring results from different methods. The top row shows the input blurry images, the ground truth sharp images, and results from various state-of-the-art deblurring methods, and the bottom row shows the results obtained by the proposed method (PPLNs). The images show that the proposed method produces sharper and more realistic results compared to the baseline methods.", "section": "4.1 Task I: motion deblurring"}, {"figure_path": "S8wFXyT4dY/figures/figures_14_1.jpg", "caption": "Figure 4: Motion deblurring visualizations on the HQF dataset.", "description": "This figure shows the results of motion deblurring using different methods on the HQF dataset.  The first column shows the blurry input images, followed by the ground truth, and then the results from several methods, including EDI, eSL-Net, E-CIR, DeblurSR and the proposed method (Ours).  The figure provides a visual comparison of the methods' performance on diverse scenes.", "section": "4.1 Task I: motion deblurring"}, {"figure_path": "S8wFXyT4dY/figures/figures_15_1.jpg", "caption": "Figure 5: Randomly sampled piecewise linear predictions.", "description": "This figure shows example piecewise linear functions produced by the network.  The plots demonstrate the variety of functions the network can learn, including those with uneven segment lengths and discontinuities at segment boundaries, showing that the network does not collapse to a simple model.", "section": "A.4 Coefficient visualization"}, {"figure_path": "S8wFXyT4dY/figures/figures_18_1.jpg", "caption": "Figure 6: (Left) Initial model. (Middle) Without integral normalization, the model cannot fit piecewise linear signals with unequal segment lengths. (Right) After integral normalization, the model successfully fits the piecewise linear signal with unequal segment lengths.", "description": "This figure shows the impact of integral normalization on the ability of the model to fit piecewise linear signals with varying segment lengths. The left panel shows the initial model's inability to accurately capture the data. The middle panel demonstrates the failure of the model without normalization. The right panel shows successful fitting after incorporating integral normalization.", "section": "A.4 Coefficient visualization"}]