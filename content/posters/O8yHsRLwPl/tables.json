[{"figure_path": "O8yHsRLwPl/tables/tables_1_1.jpg", "caption": "Table 1: Time Complexities of Centralized Distributed Algorithms. Assume that it takes at most hi seconds to worker i to calculate a stochastic gradient and \u2020 seconds to send one coordinate/float to server. Abbreviations: L = smoothness constant, \u03b5 = error tolerance, \u2206 = f(x\u00ba) \u2013 f*, n = # of workers, d = dimension of the problem. We take the RandK compressor with K = 1 (Def. D.1) (as an example) in QSGD and Shadowheart SGD. Due to Property 6.2, the choice K = 1 is optimal for Shadowheart SGD up to a constant factor.", "description": "The table compares the time complexities of several centralized distributed algorithms for solving nonconvex smooth optimization problems.  It considers scenarios with varying computation and communication times across different workers, and employs a compression technique to reduce communication overhead. The algorithms compared are Minibatch SGD, QSGD, Rennala SGD, Asynchronous SGD, and Shadowheart SGD. The table highlights the time complexities under different regimes (equal performance, slow last worker, etc.) and provides a numerical comparison demonstrating that Shadowheart SGD outperforms previous methods in various scenarios.", "section": "Comparison with Baselines"}, {"figure_path": "O8yHsRLwPl/tables/tables_15_1.jpg", "caption": "Table 1: Time Complexities of Centralized Distributed Algorithms. Assume that it takes at most hi seconds to worker i to calculate a stochastic gradient and \u2020 seconds to send one coordinate/float to server. Abbreviations: L = smoothness constant, \u025b = error tolerance, \u2206 = f(x\u00ba) \u2013 f*, n = # of workers, d = dimension of the problem. We take the RandK compressor with K = 1 (Def. D.1) (as an example) in QSGD and Shadowheart SGD. Due to Property 6.2, the choice K = 1 is optimal for Shadowheart SGD up to a constant factor.", "description": "This table compares the time complexities of several centralized distributed algorithms for nonconvex smooth optimization problems.  It considers scenarios where communication time is not negligible and computation and communication times may vary across workers. The table highlights the time complexity of each algorithm under different assumptions and regimes (e.g., equal performance, heterogeneous performance). The RandK compressor with K=1 is used as an example for QSGD and Shadowheart SGD, and the table indicates that this choice is optimal for Shadowheart SGD up to a constant factor. The table provides a numerical comparison to show that Shadowheart SGD's time complexity is better than existing methods.", "section": "Comparison with Baselines"}]