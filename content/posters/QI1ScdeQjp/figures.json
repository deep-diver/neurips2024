[{"figure_path": "QI1ScdeQjp/figures/figures_1_1.jpg", "caption": "Figure 1: Visualization of the difference in information density between the time-axial (Green) and slice planes (Red). Panels (a), (b), and (c) respectively illustrate the information density differences in time-axial and slice planes for volumetric data of the abdomen, retina, and brain tissues.", "description": "This figure visually demonstrates the varying information density across the three orthogonal axes in 3D medical imaging modalities. It highlights that the information density is significantly higher in the axial slice planes compared to the time-axial direction, a factor often overlooked in traditional 3D CNNs for medical image segmentation. The images showcase examples of abdomen, retina, and brain tissues, each highlighting the disparity in information density.", "section": "1 Introduction"}, {"figure_path": "QI1ScdeQjp/figures/figures_4_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure illustrates the architecture of the proposed uC 3DU-Net.  It is a 3D U-Net based model. The encoder consists of five stages, each with a downsampling block (max-pooling + two 3D convolutions).  Stages 1-3 use a modified skip connection called \"U-shaped Connection\" (uC) which leverages a simplified 2D U-Net to extract axial-slice plane features. The 5D tensors are reshaped to 4D for processing by uC. The decoder also has five stages with upsampling layers (transposed convolution) and Dual Feature Integration (DFi) blocks to combine 2D and 3D features, effectively adjusting the feature channel depth. The final layer converts to the required number of output classes.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_8_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure shows the architecture of the proposed uC 3DU-Net.  It uses a 3D U-Net as its base, but modifies the skip connections.  The skip connections are replaced with the proposed \"U-shaped Connections\" (uC) which are simplified 2D U-Nets.  The figure highlights the five encoding and decoding stages, showing how the 5D tensors are reshaped into 4D tensors for processing by the 2D U-Nets. Finally, a \"Dual Feature Integration\" (DFi) block is shown which is used to combine the features extracted by the 3D and 2D convolutional layers.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_9_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure illustrates the architecture of the proposed uC 3DU-Net, which uses a 3D U-Net as its backbone.  The encoder consists of five downsampling stages, each with a max-pooling layer and two 3D convolutional layers. The decoder uses five upsampling stages; in stages 1-3, 2D U-Nets (uC) are used to process the axial slice information; a Dual Feature Integration (DFi) module merges the 2D and 3D features to enhance feature extraction; finally, a 1x1 convolutional layer outputs the segmentation results.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_16_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure shows the architecture of the proposed uC 3DU-Net. It uses a 3D U-Net as the backbone and integrates the U-shaped Connection (uC) module in stages 1 to 3.  The 5D input tensors are reshaped to 4D before being fed into the 2D uC modules, and a Dual Feature Integration (DFi) module is used in the upsampling layers to combine 2D and 3D features.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_16_2.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure illustrates the architecture of the proposed uC 3DU-Net model.  It uses a 3D U-Net as its base, but modifies the skip connections with a simplified 2D U-Net (called uC). The figure highlights the five encoding and decoding stages.  In the encoding stages, max-pooling and 3D convolutions reduce spatial dimensions and increase channel depth.  In stages 1-3, the input 5D tensors are converted to 4D tensors to allow for processing by the 2D uC. The decoding stages use transposed convolutions to upsample, and DFi blocks to effectively adjust the channel depth. The model combines 2D and 3D features to improve segmentation performance.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_19_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure provides a detailed illustration of the uC 3DU-Net architecture, which is a modified 3D U-Net that integrates a simplified 2D U-Net (the U-shaped connection, or uC) into its skip connections.  The figure shows the five encoding and decoding stages.  The key innovation is the use of the uC module in stages 1-3, where the input 5D tensors are reshaped to 4D tensors for processing by the 2D U-Net. The DFi block is also highlighted, showing how features from the 2D and 3D parts of the network are combined.", "section": "3 Method"}, {"figure_path": "QI1ScdeQjp/figures/figures_20_1.jpg", "caption": "Figure 3: Qualitative results of the uC's impact on segmentation performance in 3D UX-Net and SegResNet backbones, applied to the FLARE2021 dataset. Segmentation results for different categories are represented in distinct colors. For improved visual clarity, the images have been cropped. Please kindly zoom in for a better view.", "description": "This figure shows the qualitative comparison of segmentation results for 3D UX-Net and SegResNet with and without the proposed U-shaped Connection (uC) method. The results are visually presented for different organ classes on the FLARE2021 dataset. The uC method improves the segmentation results by enhancing the extraction of axial-slice plane features.  The images have been cropped for improved visual clarity.", "section": "4 Experiments and results"}, {"figure_path": "QI1ScdeQjp/figures/figures_20_2.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure illustrates the architecture of the proposed uC 3DU-Net, a modified 3D U-Net that incorporates 2D U-Nets within its skip connections.  The figure highlights the five encoding and decoding stages, showing how the 3D convolutional layers are combined with 2D U-Net layers to improve the extraction of features from axial slices. The use of a Dual Feature Integration (DFi) module is also highlighted to effectively merge the 2D and 3D features.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_21_1.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure provides a detailed illustration of the uC 3DU-Net architecture.  It shows the 3D U-Net backbone with its five encoding-decoding stages. Each downsampling stage uses max-pooling followed by two 3D convolutional layers.  Stages 1-3 have a unique modification where 5D tensors (W, H, D, C) are reshaped to 4D tensors to be processed by the 2D U-net skip connection (uC).  Each upsampling stage employs a transposed convolution and a dual feature integration (DFi) block to integrate features from the 2D and 3D pathways and adjust the feature channel depth. The figure highlights the key components of the architecture and how they interact to achieve efficient axial-slice plane feature utilization.", "section": "3.3 uC 3DU-Net"}, {"figure_path": "QI1ScdeQjp/figures/figures_21_2.jpg", "caption": "Figure 2: Overview of the proposed uC 3DU-Net architecture. The backbone is a 3D U-Net with five encoding-decoding stages and each downsampling block comprises a max-pooling layer followed by two 3D convolutional layers. In stages 1 to 3, 5D tensors are rearranged into 4D tensors for 2D uC input by stacking slices along the batch dimension. Each upsampling layer employs a transposed convolution to upsampling and a DFi block to effectively adjust the feature channel depth.", "description": "This figure illustrates the architecture of the proposed uC 3DU-Net, a 3D U-Net based model that integrates 2D U-Net skip connections (uC) to improve axial-slice plane feature utilization.  The figure details the encoder and decoder stages, highlighting the use of 3D convolutions, max-pooling, transposed convolutions, and the dual feature integration (DFi) module.  The schematic shows how the 5D input tensors are transformed into 4D tensors for processing by the 2D U-Nets within the skip connections.  It also shows how the DFi module integrates 2D and 3D features at each upsampling layer.", "section": "3.3 uC 3DU-Net"}]