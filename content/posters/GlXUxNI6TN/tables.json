[{"figure_path": "GlXUxNI6TN/tables/tables_7_1.jpg", "caption": "Table 1: Results for MAP tasks obtained on small/large scale polytree, dag, and random LCNs. Average CPU time in seconds and number of problem instances solved. Time limit is 2 hours.", "description": "This table presents the results of the Maximum A Posteriori (MAP) inference experiments performed on three different types of Logical Credal Networks (LCNs): polytree, directed acyclic graph (DAG), and random LCNs.  The experiments were conducted on both small (5-10 nodes) and larger (30-70 nodes) networks. The table shows the average CPU time (in seconds) and the number of problem instances solved within a 2-hour time limit for each algorithm and network type.  The algorithms compared include Depth-First Search (DFS), Limited Discrepancy Search (LDS) with a discrepancy of 3, Simulated Annealing (SA), Approximate MAP (AMAP), Approximate LDS (ALDS) with a discrepancy of 3, and Approximate SA (ASA).", "section": "4 Experiments"}, {"figure_path": "GlXUxNI6TN/tables/tables_8_1.jpg", "caption": "Table 2: Results for MMAP tasks on realistic LCNs. CPU time in seconds. Time limit is 2 hours.", "description": "This table presents the results of applying different algorithms (exact and approximate) to solve Marginal MAP (MMAP) inference tasks on a set of realistic Logical Credal Networks (LCNs). The algorithms' performance is evaluated based on CPU time in seconds, with a time limit of 2 hours.  The table shows that exact methods struggle with larger networks while approximate methods can scale better.", "section": "4 Experiments"}, {"figure_path": "GlXUxNI6TN/tables/tables_9_1.jpg", "caption": "Table 3: Results for factuality LCNs. Average CPU time in seconds and number of problem instances solved. Time limit is 2 hours.", "description": "This table presents the results of experiments on factuality LCNs, focusing on the performance of different MAP inference algorithms (exact and approximate). It shows the average CPU time and the number of problem instances solved within a 2-hour time limit for various problem sizes (n, k = 2). The algorithms are categorized into exact MAP evaluation methods (DFS, LDS(2), SA) and approximate MAP evaluation methods (AMAP, ALDS(2), ASA). The table highlights the scalability challenges of exact methods as problem size increases, contrasting with the improved performance of approximation-based methods in larger instances.", "section": "4 Experiments"}]