[{"type": "text", "text": "Kernel PCA for Out-of-Distribution Detection ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Kun Fang1 Qinghua Tao2 Kexin Lv3 Mingzhen He1 Xiaolin Huang1 Jie Yang1 ", "page_idx": 0}, {"type": "text", "text": "1Shanghai Jiao Tong University 2ESAT-STADIUS, KU Leuven 3China Mobile Shanghai ICT Co., Ltd ", "page_idx": 0}, {"type": "text", "text": "{fanghenshao,mingzhen_he,xiaolinhuang,jieyang}@sjtu.edu.cn qinghua.tao@esat.kuleuven.be lvkexin@cmsr.chinamobile.com ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Out-of-Distribution (OoD) detection is vital for the reliability of Deep Neural Networks (DNNs). Existing works have shown the insufficiency of Principal Component Analysis (PCA) straightforwardly applied on the features of DNNs in detecting OoD data from In-Distribution (InD) data. The failure of PCA suggests that the network features residing in OoD and InD are not well separated by simply proceeding in a linear subspace, which instead can be resolved through proper non-linear mappings. In this work, we leverage the framework of Kernel PCA (KPCA) for OoD detection, and seek suitable non-linear kernels that advocate the separability between InD and OoD data in the subspace spanned by the principal components. Besides, explicit feature mappings induced from the devoted taskspecific kernels are adopted so that the KPCA reconstruction error for new test samples can be efficiently obtained with large-scale data. Extensive theoretical and empirical results on multiple OoD data sets and network structures verify the superiority of our KPCA detector in efficiency and efficacy with state-of-the-art detection performance. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "With the rapid advancement of the powerful learning abilities of Deep Neural Networks (DNNs) [1, 2], the trustworthiness of DNNs in security-sensitive scenarios has attracted considerable attention in recent years [3]. Generally, samples from the training and test sets of DNNs are viewed as data from some In Distribution (InD) $\\mathbb{P}_{\\mathrm{in}}$ , while samples from other data sets are regarded as coming from a different distribution $\\mathbb{P}_{\\mathrm{out}}$ , i.e., out-of-distribution (OoD) data. In the practical deployment, DNNs trained on InD data would inevitably encounter OoD data and thus yield unreliable results with potential risks. Therefore, detecting whether a new sample is from $\\mathbb{P}_{\\mathrm{in}}$ or $\\mathbb{P}_{\\mathrm{out}}$ has been a valuable research topic of trustworthy deep learning, namely OoD detection [4]. ", "page_idx": 0}, {"type": "text", "text": "Existing OoD detection methods exploit different outputs from DNNs to unveil the hidden disparities between InD and OoD data, e.g., logits [5], gradients [6] and features [7, 8]. In this work, we address OoD detection from a perspective of utilizing the feature spaces learned by the backbone of DNNs. To be specific, given a DNN $f:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{c}$ , $f$ takes $\\pmb{x}\\in\\mathbb{R}^{d}$ as inputs and learns penultimate layer features $z\\in\\mathbb{R}^{m}$ before the last linear layer. Principal Component Analysis (PCA) is investigated in [8] to calculate the reconstruction error in the $_{z}$ -space as the OoD detection score. That is, PCA is executed on the penultimate features of InD training samples and learns a linear subspace spanned by the principal components in the $_{z}$ -space. Then, given features $\\hat{z}$ of an unknown sample $\\hat{\\pmb{x}}$ , one can obtain the reconstructed counterpart of $\\hat{z}$ by projecting $\\hat{z}$ to the linear subspace and re-projecting it back. The reconstruction error is computed as the Euclidean distance between $\\hat{z}$ and the reconstructed counterpart. In [9], similar ideas are adopted with energy-based models using an auto-encoder structure, where the neural networks are trained from scratch and the reconstruction is conducted in the decoder. For good OoD detection performance, it is expected that InD features are compactly allocated along the linear principal components with high variances for capturing most of the informative patterns of InD data, leading to small reconstruction errors, while OoD features are not supposed to be well matched with the learned subspace, causing large reconstruction errors. ", "page_idx": 0}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/f373d08112a21bab6313d4d7635fca7a3fbadda096d34a3b0b3cb87659da0f89.jpg", "img_caption": ["(a) T-SNE of $_{\\mathscr{L}}$ and PCA reconstruction errors. (b) T-SNE of $\\Phi(z)$ and KPCA reconstruction errors. ", "Figure 1: The t-SNE [10] visualization on the original features $_{z}$ (left) and the mapped features $\\Phi(z)$ (right). Our KPCA detector alleviates the linearly inseparability between InD and OoD features in the original $_{z}$ -space via an explicit feature mapping $\\Phi$ , and thus substantially improves the OoD detection performance, illustrated by the much more distinguishable reconstruction errors. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "However, it has been empirically observed in [8] that such PCA reconstruction errors alone cannot distinctively differentiate OoD data from InD data, leading to poor detection performance of PCA in the $_{z}$ -space. Nevertheless, [8] did not take further explorations on the reasons behind, and instead proposed a practical fusion trick to boost PCA by multiplying with other existing powerful detection scores. Therefore, in this work, more in-depth analyses are undertaken to improve the limitations of PCA for OoD detection with insightful understandings on the distribution of InD and OoD features. It is widely acknowledged that PCA falls inferior in dealing with those linearly-inseparable data, which inspires us to explore the non-linearity existing in the $_{z}$ -space of InD and OoD features under the help of the celebrated Kernel PCA (KPCA). ", "page_idx": 1}, {"type": "text", "text": "KPCA has long been a powerful technique in learning the non-linear patterns of data [11, 12]. By deploying KPCA, a non-linear feature mapping $\\Phi$ is imposed on the $_{\\textit{z}}$ -space in this setup, so that the linear inseparability can be alleviated in the mapped $\\Phi(z)$ -space. KPCA is generally conducted through a kernel function $k$ induced by the feature mapping, i.e., $k(z_{1},z_{2})=\\langle\\Phi(z_{1}),\\Phi(z_{2})\\rangle$ , in order to avoid explicit calculations in the mapped $\\Phi(z)$ -space. In most cases, researchers have no prior on the unknown non-linear data distribution, e.g., the non-linearity in the $_{z}$ -space of InD and OoD features. Therefore, finding an appropriate $k$ or $\\Phi$ that well adapts the data always remains a non-trivial issue for KPCA. For example, the mostly common Gaussian kernel is shown to be unable to separate the InD and OoD features, and leads to terrible OoD detection performance, see details in Appendix C. In addition, KPCA also faces the challenge of calculating and storing the $N_{\\mathrm{tr}}\\times N_{\\mathrm{tr}}$ kernel matrix on millions of training samples with a very large size $N_{\\mathrm{tr}}$ , which significantly hinders its application in practical tasks with a huge amount of data. ", "page_idx": 1}, {"type": "text", "text": "The proposed KPCA detection method well addresses the aforementioned issues of KPCA for OoD detection. On the one hand, to better understand the non-linear patterns in InD and OoD features, we take a kernel perspective on an existing OoD detector [7], which searches $k$ -th Nearest Neighbors (KNN) on the $\\ell_{2}$ normalized features $_{\\textit{z}}$ . By decoupling and analyzing key components of the KNN method, we acquire two effective kernels, a cosine kernel and a cosine-Gaussian kernel, for our KPCA detector to promote the linear separability between InD and OoD features in the subspace of the principal components, leading to substantially improved distinguishable KPCA reconstruction errors, as shown in Figure 1. On the other hand, for a computationally-friendly implementation, two explicit feature mappings $\\Phi$ induced from the cosine and cosine-Gaussian kernels are executed on the original features $_{\\textit{z}}$ , followed by PCA in the mapped $\\Phi(z)$ -space to obtain the reconstruction errors without calculations on the kernel matrix. Specifically, the celebrated Random Fourier Features (RFFs) [13] are introduced to approximate the Gaussian kernel, allowing an $\\mathcal{O}(M)$ computation complexity in inference, which significantly outperforms the ${\\mathcal O}(N_{\\mathrm{tr}})$ computation complexity of the KNN [7] and the kernel-matrix-based KPCA $M$ is the number of RFFs and $M\\ll N_{\\mathrm{tr}})$ ). ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Extensive experiments verify the effectiveness of the devoted two kernels, which we hope could bring inspirations for the research community in exploring the non-linearity in InD and OoD data from a kernel perspective. For example, the two kernels can even serve as a beneficial prior on advocating learning more and stronger kernels for OoD detection. In addition, we supplement our method with its implementation via the kernel matrix, and illustrate the advantageous effectiveness and efficiency of explicit feature mappings in Section 6. The contributions of this work are summarized below: ", "page_idx": 2}, {"type": "text", "text": "\u2022 To the best of our knowledge, this is the first work that explores suitable kernels to seize the non-linearity in InD and OoD features in the post-hoc stage on well-trained DNNs. \u2022 Two task-specific kernels are carefully devised for OoD detection. Particularly, two explicit feature mappings induced from the kernels are adopted for the KPCA detector, and lead to separable KPCA reconstruction errors with significantly-reduced complexity in inference. \u2022 Theoretical and experimental comparisons indicate the effects of kernels in our KPCA detector with SOTA detection performance and remarkably reduced time complexity. ", "page_idx": 2}, {"type": "text", "text": "In the remainder of this work, related works and research backgrounds are outlined in Section 2 and Section 3, respectively. Section 4 delves into details of the proposed KPCA detector. Comparison experiments with prevailing OoD detection methods and KPCA via kernel functions are presented in Section 5 and Section 6, respectively. Conclusions and limitations are drawn in Section 7. ", "page_idx": 2}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Generally, out-of-distribution detection has been formulated as a binary classification problem including a decision function $D(\\cdot)$ and a scoring function $S(\\cdot)$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\nD(\\pmb{x})=\\left\\{\\begin{array}{l l}{\\mathrm{InD},}&{S(\\pmb{x})>s,}\\\\ {\\mathrm{OoD},}&{S(\\pmb{x})<s.}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The scoring function $S(\\cdot)$ assigns a score $S(\\hat{\\pmb x})$ for a new sample $\\hat{x}$ . If $S(\\hat{\\pmb x})$ is greater than a threshold $s$ , the decision function $D(\\cdot)$ would view $\\hat{\\pmb{x}}$ as an InD sample, and vice versa. The key to effectually detecting OoD samples is a well-designed scoring function. Existing OoD detectors adopt different outputs from DNNs and design justified scores to measure the disparity between InD and OoD data. ", "page_idx": 2}, {"type": "text", "text": "Logits-based detectors exploit the abnormal responses reflected in the predictive logits or probabilities from DNNs to detect OoD data. Typical methods adopt either the maximum logits [14] or probability [15, 16] or the energy function on logits [5] as the detection score. ", "page_idx": 2}, {"type": "text", "text": "Gradients-based methods investigate differences on gradients $w.r.t\\;\\mathrm{InD}$ and OoD data for OoD detection. For example, gradient norms [6] or low-dimensional representations [17] are studied to devise the detection score. ", "page_idx": 2}, {"type": "text", "text": "Features-based detectors try to capture the feature information causing over-confidence of OoD predictions in different ways. Feature clipping [18, 19, 20, 21, 22], feature distances [23, 7, 24], feature norms [25], rank-1 features [26], feature subspace [8], etc., have been explored with excellent performance. ", "page_idx": 2}, {"type": "text", "text": "Aside from methods above, other existing OoD detectors cover the training regularization [27, 28], the ensemble technique [29] and theoretical understandings [30, 31]. Refer to Appendix A for more detailed descriptions on the compared methods in experiments [32, 33, 34, 35]. ", "page_idx": 2}, {"type": "text", "text": "3 Background ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "3.1 PCA for OoD detection ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The PCA detector with the reconstruction error as the detection score is summarized firstly. Given the penultimate features $z_{i}\\in\\mathbb{R}^{m}$ learned by a well-trained DNN $f:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{c}$ of the InD training ", "page_idx": 2}, {"type": "text", "text": "data $\\pmb{x}_{i}\\in\\mathbb{R}^{d},i=1,\\cdots,N_{\\mathrm{tr}}$ , the covariance matrix $\\Sigma$ is calculated as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\pmb{\\Sigma}=\\sum_{i=1}^{N_{\\mathrm{tr}}}\\left(z_{i}-\\pmb{\\mu}\\right)\\left(z_{i}-\\pmb{\\mu}\\right)^{\\top},\\quad\\pmb{\\mu}=\\frac{1}{N_{\\mathrm{tr}}}\\sum_{i=1}^{N_{\\mathrm{tr}}}z_{i}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Through the eigendecomposition $\\pmb{\\Sigma}=\\pmb{U}\\pmb{\\Lambda}\\pmb{U}^{\\top}$ , the dimensionality reduction matrix $U_{q}\\in\\mathbb{R}^{m\\times q}$ is obtained by taking the first $q$ columns of the eigenvector matrix $U\\ w.r t$ the top- $q$ largest eigenvalues. In inference, given a new sample $\\hat{\\mathbf{x}}\\in\\mathbb{R}^{d}$ and its feature $\\hat{z}\\in\\mathbb{R}^{m}$ from the DNN $f$ , the reconstruction error is computed as: ", "page_idx": 3}, {"type": "equation", "text": "$$\ne(\\hat{\\pmb x})=\\left\\|{\\pmb U}_{q}{\\pmb U}_{q}^{\\top}(\\hat{\\pmb z}-{\\pmb\\mu})-(\\hat{\\pmb z}-{\\pmb\\mu})\\right\\|_{2}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "By projecting centralized $(\\hat{z}-\\mu)$ to the $U_{q}$ -subspace and re-projecting back, we can obtain the reconstructed features $U_{q}U_{q}^{\\top}(\\hat{z}-\\mu)$ and the reconstruction error $e({\\hat{\\mathbf{x}}})$ , which then can be set as the OoD detection score: $S(\\hat{\\mathbf{x}})=-e(\\hat{\\mathbf{x}})$ . An ideal case is that $U_{q}$ contains informative principal components of InD data and causes projections of OoD data far away from that of InD data, leading to separable reconstruction errors between OoD and InD data. ", "page_idx": 3}, {"type": "text", "text": "3.2 Random Fourier features ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "A concise description is firstly given on the Random Fourier Features (RFFs) [13], which will be adopted in our method later. RFFs are proposed to approximate the kernel function so as to alleviate the heavy computation cost in large-scale kernel machines. In kernel methods, an $N\\!\\times\\!N$ kernel matrix $w.r t\\ N$ samples requires $\\mathcal{O}(N^{2})$ kernel manipulations, $\\mathcal{O}(N^{2})$ space complexity and $\\mathcal{O}(N^{3})$ time complexity to calculate the inverse of the kernel matrix, which leads to overwhelmed computation costs for a large data size $N$ . Therefore, RFFs are introduced by building an explicit feature mapping to directly approximate the kernel function for efficient kernel machines on large-scale data. ", "page_idx": 3}, {"type": "text", "text": "RFFs are built on the Bochner\u2019s theorem [36]: A continuous and shift-invariant kernel $k(z_{1},z_{2})=$ $k(z_{1}-z_{2})$ on $\\mathbb{R}^{m}$ is positive definite if and only if $k(\\cdot)$ is the Fourier transform of a non-negative measure. An explicit feature mapping $\\phi_{\\mathrm{RFF}}$ induced from the kernel $k$ is derived in [13]: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\phi_{\\mathrm{RFF}}(z)\\triangleq\\sqrt{\\frac{2}{M}}\\left[\\phi_{1}(z),\\cdots,\\phi_{M}(z)\\right],\\quad\\phi_{i}(z)=\\cos\\left(z^{\\top}\\omega_{i}+u_{i}\\right),i=1,\\cdots,M,\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\omega_{1},\\cdots\\,,\\omega_{M}\\in\\mathbb{R}^{m}$ are i.i.d. sampled from the Fourier transform of $k(\\cdot)$ , and $u_{1},\\cdot\\cdot\\cdot\\,,u_{M}\\in\\mathbb{R}$ are i.i.d. sampled from a uniform distribution $\\mathcal{U}(0,2\\pi)$ . For example, the sampling distribution for $\\omega_{i}$ of a Gaussian kernel function $k_{\\mathrm{gau}}=e^{-\\gamma\\|z_{1}-z_{2}\\|_{2}^{2}}$ is $\\omega\\sim\\mathcal{N}(0,\\sqrt{2\\gamma}I_{m})$ . Such a feature mapping $\\phi_{\\mathrm{RFF}}$ satisfies $k_{\\mathrm{gau}}(z_{1},z_{2})\\approx\\phi_{\\mathrm{RFF}}(z_{1})^{\\top}\\phi_{\\mathrm{RFF}}(z_{2})$ and is known as the random Fourier features (RFFs) mapping. Refer to [13] for a detailed convergence analysis. RFFs have been widely utilized in kernel learning [37], optimization [38], etc. ", "page_idx": 3}, {"type": "text", "text": "4 Methodology ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "As empirically observed in [8], the aforementioned PCA reconstruction error in the $_{z}$ -space is not an effective score in detecting OoD data from InD data. We propose that the reason behind is possibly due to the linearly-inseparable features of InD and OoD data, as shown in Figure 1a. To address this issue, we propose to explore the non-linearity in $_{z}$ -space via kernel PCA. Then, through a kernel perspective on an existing KNN detector [7], we put forward two efficacious kernels that well characterize the non-linear patterns in $_{\\textit{z}}$ -space of InD and OoD data: a cosine kernel (Section 4.1) and a cosine-Gaussian kernel (Section 4.2). Particularly, we adopt two explicit feature mappings $\\Phi$ induced from the two kernels, and execute PCA in the mapped $\\Phi(z)$ -space, which leads to an informative principal subspace and distinct reconstruction errors for efficacious OoD detection. ", "page_idx": 3}, {"type": "text", "text": "4.1 Cosine kernel ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In the KNN detector [7], the nearest neighbor searching is executed on the $\\ell_{2}$ -normalized penultimate features, i.e., $\\frac{z}{\\|z\\|_{2}}$ . In inference, given a new sample $\\hat{x}$ , its feature $\\hat{z}$ is firstly normalized as $\\frac{\\hat{z}}{||\\hat{z}||_{2}}$ ", "page_idx": 3}, {"type": "text", "text": "then the negative of its ( $k$ -th) shortest $\\ell_{2}$ distance to the $\\ell_{2}$ -normalized features $\\frac{z_{i}}{\\Vert z_{i}\\Vert_{2}}$ of training data is set as the detection score: ", "page_idx": 4}, {"type": "equation", "text": "$$\nS_{\\mathrm{knn}}(\\hat{\\pmb x})=-\\operatorname*{min}_{i:1,\\cdots,N_{\\mathrm{tr}}}\\left\\|\\frac{\\hat{z}}{\\|\\hat{z}\\|_{2}}-\\frac{z_{i}}{\\|z_{i}\\|_{2}}\\right\\|_{2}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The ablations in KNN demonstrate the indispensable significance of the $\\ell_{2}$ -normalization: the nearest neighbor searching directly on $_{z}$ shows a notably drop in detection performance. The critical role of the $\\ell_{2}$ -normalization in KNN attracts our attention in the sense of kernel. From a kernel perspective, the $\\ell_{2}$ -normalization is exactly the non-linear feature mapping $\\phi_{\\mathrm{cos}}$ inducing the cosine kernel $k_{\\mathrm{cos}}$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\nk_{\\mathrm{cos}}(z_{1},z_{2})=\\frac{z_{1}^{\\top}z_{2}}{\\|z_{1}\\|_{2}\\cdot\\|z_{2}\\|_{2}}=\\phi_{\\mathrm{cos}}(z_{1})^{\\top}\\phi_{\\mathrm{cos}}(z_{2}),\\quad\\phi_{\\mathrm{cos}}(z)=\\frac{z}{\\|z\\|_{2}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "It indicates that a justified $\\phi_{\\mathrm{cos}}(z)$ -space with such non-linear mapping, instead of the original $_{\\textit{z}}$ -space, contributes to the success of nearest neighbor searching in detecting OoD. ", "page_idx": 4}, {"type": "text", "text": "Notice that the key of KPCA for OoD detection lies in an appropriate non-linear feature space that captures the non-linearity in InD and OoD features, either through the kernel $k$ or the associated explicit feature mapping $\\Phi$ . Motivated by the KNN detector, we apply $\\Phi(\\cdot)\\triangleq\\phi_{\\mathrm{cos}}(\\cdot)$ as the feature mapping in KPCA to introduce non-linearity. Then, PCA is executed on mapped features $\\phi_{\\mathrm{cos}}(z)$ , following the procedures described in Section 3.1. All the features $_{\\textit{z}}$ are now mapped to $\\Phi(z)$ to formulate the covariance matrix $\\Sigma^{\\Phi}$ , for computing non-linear principal components with matrix ${\\cal U}_{q}^{\\Phi}$ and the corresponding reconstruction error $e^{\\Phi}$ . This detection scheme is dubbed as $\\mathbf{CoP}$ (Cosine mapping followed by PCA), as shown in Algorithm 1. An in-depth analysis on the effect of the normalization of the cosine kernel is left in Appendix C.1. ", "page_idx": 4}, {"type": "text", "text": "4.2 Cosine-Gaussian kernel ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The success of KNN (Equation (5)) suggests that the \u21132 distance on\u2225zz\u22252 is effective in distinguishing OoD data from InD data. In other words, the $\\ell_{2}$ distance relation between samples in the $\\phi_{\\mathrm{cos}}$ -space preserves useful information that beneftis the separation of OoD data from InD data. This motivates us to seek non-linear feature spaces that can retain the $\\ell_{2}$ distance relation. Hence, we propose to introduce KPCA with non-linearity built upon $\\phi_{\\mathrm{cos}}(z)$ , through which the useful $\\ell_{2}$ distance in $\\phi_{\\mathrm{cos}}$ -space can be preserved to further separate InD and OoD data. ", "page_idx": 4}, {"type": "text", "text": "In this regard, we deploy the shift-invariant Gaussian kernel to keep the $\\ell_{2}$ distance information: ", "page_idx": 4}, {"type": "equation", "text": "$$\nk_{\\mathrm{gau}}(z_{1},z_{2})=e^{-\\gamma\\|z_{1}-z_{2}\\|_{2}^{2}}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The feature mapping associated with $k_{\\mathrm{gau}}$ is infinite-dimensional, but it can be efficiently approximated through random Fourier features (RFFs, [13]), i.e., $\\phi_{\\mathrm{RFF}}$ defined in Equation (4). In this way, the inner product of two mapped samples $\\phi_{\\mathrm{RFF}}(z_{1})^{\\top}\\phi_{\\mathrm{RFF}}(z_{2})$ provides the approximate Gaussian kernel, so that we can leverage the RFFs mapping $\\phi_{\\mathrm{RFF}}$ to preserve the $\\ell_{2}$ distance information through the Gaussian kernel. ", "page_idx": 4}, {"type": "text", "text": "Hence, a cosine-Gaussian kernel is adopted for OoD detection, as the Gaussian kernel $k_{\\mathrm{gau}}$ (or $\\phi_{\\mathrm{RFF.}}$ ) is imposed on top of the cosine kernel $k_{\\mathrm{cos}}$ (or $\\phi_{\\mathrm{cos.}}$ ), further exploiting the $\\ell_{2}$ distance relationships beyond the $\\phi_{\\mathrm{cos}}$ -space for OoD detection. As we work with the explicit feature mapping, the nonlinearity to $_{\\textit{z}}$ is achieved by $\\Phi(\\cdot)\\triangleq\\phi_{\\mathrm{RFF}}(\\phi_{\\mathrm{cos}}(\\cdot))$ . With mappings $\\phi_{\\mathrm{RFF}}(\\phi_{\\mathrm{cos}}(z))$ , PCA is then executed to compute the reconstruction errors for OoD detection. This detection scheme is dubbed as CoRP (Cosine and RFFs mappings followed by PCA). Algorithm 1 illustrates the complete procedure of the proposed CoP and CoRP for OoD detection. Alternative choices for more kernels are exploited in Appendix C.2. ", "page_idx": 4}, {"type": "text", "text": "To warp up, we devise two effective feature mappings induced from a cosine kernel and a cosineGaussian kernel to promote the separability of InD data and OoD data in non-linear feature spaces, inspired by effectiveness of the $\\ell_{2}$ normalization and the $\\ell_{2}$ distance from a kernel perspective on the KNN detector [7]. Our proposed two feature mappings well characterize the non-linearity in penultimate features $_{\\textit{z}}$ of DNNs between InD and OoD data, enabling PCA to extract an informative subspace $w.r t$ the mapped features through principal components and the reconstruction errors. ", "page_idx": 4}, {"type": "text", "text": "Algorithm 1 Kernel PCA for Out-of-Distribution Detection ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "1: if CoP then 2: $\\begin{array}{r}{\\Phi(\\cdot)\\gets\\phi_{\\mathrm{cos}}(\\cdot),\\phi_{\\mathrm{cos}}(z)=\\frac{z}{\\|z\\|_{2}}}\\end{array}$ . 3: else if CoRP then 4: Sampling $\\omega_{i}\\sim\\mathcal{N}(0,\\sqrt{2\\gamma}I_{m}),i=1,\\cdots,M.$ 5: Sampling $u_{i}\\sim\\mathcal{U}(0,2\\pi),i=1,\\cdots\\,,M$ . 6: $\\Phi(\\cdot)\\leftarrow\\phi_{\\mathrm{RFF}}(\\phi_{\\mathrm{cos}}(\\cdot))$ . 7: end if   \n8: Calculating the covariance matrix in the mapped $\\Phi(z)$ -space: $\\begin{array}{r}{\\Sigma^{\\Phi}=\\sum_{i=1}^{\\bar{N}_{\\mathrm{tr}}}(\\Phi(z_{i})-\\mu^{\\Phi})(\\Phi(z_{i})-\\mu^{\\Phi})^{\\top},\\mu^{\\Phi}=\\frac{1}{N_{\\mathrm{tr}}}\\sum_{i=1}^{N_{\\mathrm{tr}}}}\\end{array}$ .   \n9: Applying eigendecomposition: \u03a3\u03a6 = U \u03a6\u039b\u03a6U \u03a6\u22a4.   \n10: Taking the first $q$ columns of $U^{\\Phi}\\approx r{t}$ the top- $\\cdot q$ largest eigenvalues in $\\pmb{\\Lambda}^{\\Phi}\\colon\\pmb{U}_{q}^{\\Phi}=\\pmb{U}^{\\Phi}\\left[:,:q\\right]$ .   \nEnsure: Dimensionality-reduction matrix ${\\pmb U}_{q}^{\\Phi}$ .   \n11: Given a new sample $\\hat{x}$ and its features $\\hat{z}$ .   \n12: Calculating the reconstruction error: $e^{\\Phi}(\\hat{\\pmb x})=\\Big|\\Big|U_{q}^{\\Phi}U_{q}^{\\Phi\\top}(\\Phi(\\hat{z})-{\\pmb\\mu}^{\\Phi})-(\\Phi(\\hat{z})-{\\pmb\\mu}^{\\Phi})\\Big|\\Big|_{2}.$ ", "page_idx": 5}, {"type": "text", "text": "Ensure: Reconstruction error $e^{\\Phi}$ ", "page_idx": 5}, {"type": "text", "text": "Computation complexity In our method, given any new sample $\\hat{x}$ with the penultimate features $\\hat{z}$ in inference, to compute the reconstruction error $e^{\\boldsymbol{\\Phi}}(\\hat{\\mathbf{x}})$ , we only need the feature mapping $\\Phi$ , the projection matrix U q\u03a6 and the mean mapped training feature vector $\\mu^{\\Phi}$ . Both $\\boldsymbol{U}_{q}^{\\Phi}$ and $\\mu^{\\Phi}$ can be pre-calculated and stored in preparation for inference. Therefore, the entire computation cost of $\\mathrm{CoP}$ and CoRP comes from the construction of the explicit feature mapping $\\Phi$ on new features $\\hat{z}$ . ", "page_idx": 5}, {"type": "text", "text": "\u2022 For CoP, its feature mapping $\\phi_{\\mathrm{cos}}$ is an in-place operation and does not require additional computations. Therefore, the time and memory complexity of $\\mathrm{CoP}$ is $\\mathcal{O}(1)$ . \u2022 For CoRP, the feature mapping $\\phi_{\\mathrm{RFF}}$ of the Gaussian kernel requires $2M$ samplings for $\\omega_{i}$ and $u_{i}$ , respectively, and $M$ dot-products and $M$ additions. Accordingly, the time and memory complexity of CoRP is $\\mathcal{O}(M)$ . ", "page_idx": 5}, {"type": "text", "text": "In contrast, regarding the Equation (5) of the KNN detector, all the training features have to be stored at hand and iterated in inference, which implies a heavy ${\\mathcal O}(N_{\\mathrm{tr}})$ time and memory complexity. The ${\\mathcal{O}}(1)/{\\mathcal{O}}(M)$ of CoP/CoRP significantly outperforms the ${\\mathcal O}(N_{\\mathrm{tr}})$ of KNN $\\langle M\\ll N_{\\mathrm{tr}})$ . Detailed empirical comparisons are provided in Section 5.1. ", "page_idx": 5}, {"type": "text", "text": "In the following, Section 5 exhibits the SOTA performance of our KPCA detector over multiple prevailing detection methods. Section 6 gives an analytical discussion between our covariance-based KPCA and classic KPCA via kernel functions for OoD detection. Due to space limitation, more in-depth investigations on the kernel properties are left in Appendix C, covering ablation studies (Appendix C.1), alternative kernels (Appendix C.2) and sensitivity analysis (Appendix C.3). ", "page_idx": 5}, {"type": "text", "text": "5 Experiments on OoD detection ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In experiments, our KPCA-based detectors, CoP and CoRP, are firstly compared with KNN [7] in Section 5.1, and show stronger detection performance and cheaper computation costs. In Section 5.2, CoP and CoRP are further compared with the regularized PCA reconstruction error [8], and achieve SOTA OoD detection performance over various prevailing methods. The source code of this work has been publicly released1. All the experiments are executed on 1 NVIDIA GeForce RTX 3090 GPU. ", "page_idx": 5}, {"type": "text", "text": "Datasets Experiments are executed on the commonly-used small-scale CIFAR10 [39] and largescale ImageNet-1K benchmarks [40], following the settings in [7, 8]. For CIFAR10 as InD, OoD data sets include SVHN [41], LSUN [42], iSUN [43], Textures [44] and Places365 [45]. For ImageNet-1K as InD, OoD data sets contain iNaturalist [46], SUN [47], Places [45] and Textures [44]. ", "page_idx": 5}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/4a288d886326225b6408061e181d1f3f130100aef2d54bf4bae1b921a8c88e02.jpg", "table_caption": ["Table 1: The detection performance of different methods (ResNet50 trained on ImageNet-1K). "], "table_footnote": [], "page_idx": 6}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/d2c13c990ab93f2bbc25ae64fde88785afea459d07b1549f2beeb2eb90f66a5e.jpg", "table_caption": ["Table 2: Comparisons on the computation complexity between KNN [7] and our CoRP (ResNet50 on ImageNet-1K). Experiments are executed on the same machine for a fair comparison. The nearest neighbor searching of KNN is implemented via Faiss [48]. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "Metrics For the evaluation metrics, we employ the commonly-used (i) False Positive Rate of OoD samples with $95\\%$ true positive rate of InD samples (FPR), and (ii) Area Under the Receiver Operating Characteristic curve (AUROC). The average FPR95 and AUROC values over the selected multiple OoD data sets are viewed as the final comparison metrics. ", "page_idx": 6}, {"type": "text", "text": "5.1 Comparisons with nearest neighbor searching ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "The comparisons with KNN [7] cover both the benchmarks. Following the setups in KNN, for fair comparisons, we evaluate models trained via the standard cross-entropy loss and models trained via the supervised contrastive learning [49], and adopt the same checkpoints released by KNN: ResNet18 [50] on CIFAR10 and ResNet50 on ImageNet-1K. Here, the scoring function of CoP and CoRP is $\\bar{S}(\\bar{\\pmb{x}})=-e^{\\Phi}(\\hat{\\pmb{x}})$ in Algorithm 1. ", "page_idx": 6}, {"type": "text", "text": "Table 1 presents empirical results of ResNet50 on the ImageNet-1K benchmark. In the standard training, our CoRP shows superior detection performance over KNN with lower FPR and higher AUROC values averaged over multiple OoD data sets. In supervised contrastive learning, both CoP and CoRP outperform other baseline results on each OoD data set. These results show that the proposed KPCA exploring non-linear patterns is more advantageous than the nearest neighbor searching and all compared methods. Besides, the further improvements of CoRP over CoP also verify the effectiveness of the distance-preserving property of the Gaussian kernel $k_{\\mathrm{gau}}$ on top of the cosine kernel $k_{\\mathrm{cos}}$ for OoD detection. ", "page_idx": 6}, {"type": "text", "text": "On the other hand, regarding the computational complexity in inference, Table 2 empirically shows the superior ${\\mathcal{O}}(1)/{\\mathcal{O}}(M)$ time and memory complexity of CoP/CoRP over the ${\\mathcal O}(N_{\\mathrm{tr}})$ of KNN, including: (i) the inference time of the nearest neighbor search in KNN and the reconstruction error calculation in CoP/CoRP; (ii) the storage of the InD training features in KNN and the $\\smash{\\boldsymbol{U}_{q}^{\\Phi}}$ and $\\pmb{\\mu}^{\\Phi}$ in CoP/CoRP. To be specific, for KNN, storing and iterating all the $N_{\\mathrm{tr}}=1$ , 281, 167 features of ImageNet-1K training set requires nearly $20\\,\\mathrm{GiB}$ and $16\\:\\mathrm{ms}$ , respectively, while our CoP and CoRP directly compute the reconstruction error for each new sample with the pre-calculated projection matrix and the mean vector from the training data, resulting in a much higher processing speed and far less storage. The number of RFFs $M$ for CoRP in this experiment is $M=4,096$ $(M\\ll N_{\\mathrm{tr}})$ . ", "page_idx": 6}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/f116208f23b71d39054eddaff6ad6679c460e8f2407f7beff88686b9772b4411.jpg", "table_caption": ["Table 3: Comparisons on the detection performance between the regularized reconstruction error [8] and our CoP and CoRP fused with other OoD scores (MSP, Energy, ReAct and BATS) on each OoD data set (ResNet50 trained on ImageNet-1K). Best average results are highlighted with underlines. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "In addition, KPCA also outperforms KNN on the CIFAR10 benchmark with improved OoD detection performances, which we leave to Appendix B for more details. ", "page_idx": 7}, {"type": "text", "text": "5.2 Comparisons with regularized reconstruction errors ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In [8], to alleviate the weak detection performance of PCA reconstruction error $e(\\hat{z})$ of Equation (3), the authors proposed to regularize $e(\\hat{z})$ by the feature norm $\\|\\hat{z}\\|_{2}$ and a fusion strategy to boost its detection performance by introducing existing OoD scores. Firstly, the regularized reconstruction error $e_{\\mathrm{reg}}(\\hat{z})$ is calculated in the original $_{\\textit{z}}$ -space as : $\\begin{array}{r}{e_{\\mathrm{reg}}(\\hat{z})=\\frac{\\|U_{q}U_{q}^{\\top}(\\hat{z}-\\pmb{\\mu})-(\\hat{z}-\\pmb{\\mu})\\|_{2}}{\\|\\hat{z}\\|_{2}}}\\end{array}$ . Then, the authors claimed that such a regularized version $e_{\\mathrm{reg}}(\\hat{z})$ is still insufficient for OoD detection, and designed a fusion strategy to combine $e_{\\mathrm{reg}}$ with other existing OoD scores. For example, to fuse $e_{\\mathrm{reg}}$ with the Energy [5] score, the final scoring function is $S(\\hat{\\pmb{x}})=(1-e_{\\mathrm{reg}}(\\hat{z}))\\cdot S_{\\mathrm{Energy}}(\\hat{z})$ . ", "page_idx": 7}, {"type": "text", "text": "In this section, we show that our KPCA reconstruction error $e^{\\Phi}$ outperforms the regularized PCA reconstruction error $e_{\\mathrm{reg}}$ under the same fusion framework. Following the settings in [8], for a fair comparison, the fused OoD scores include MSP [15], Energy [5], ReAct [18] and BATS [19]. The detection experiments are executed on the ImageNet-1K benchmark with pre-trained ResNet50 and MobileNet [51] checkpoints from PyTorch [52]. ", "page_idx": 7}, {"type": "text", "text": "Table 3 presents the comparisons between [8] and ours on the ImageNet-1K benchmark of ResNet50. When fused with MSP, Energy and BATS, both the KPCA-based CoP and CoRP outperform the regularized reconstruction error [8] on almost all the OoD data sets with substantially improved FPR and AUROC values. Specifically, when fused with the ReAct method [18], the CoRP achieves new SOTA OoD detection performance among various prevailing detectors. Experiments on MobileNet also show superior performance of CoP and CoRP, see details in Appendix B. ", "page_idx": 7}, {"type": "text", "text": "All these experiment results indicate that an appropriately mapped $\\Phi(z)$ -space benefits the OoD detection, as the non-linearity in $_{\\textit{z}}$ -space gets alleviated by the feature mapping $\\Phi$ . Our work provides 2 viable selections for $\\Phi$ with empirical validations, which we hope could attract attentions towards the non-linearity in InD and OoD features for the research community from a kernel perspective. ", "page_idx": 8}, {"type": "text", "text": "6 Analytical discussions with KPCA via kernel functions ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In CoP and CoRP, KPCA is executed with the covariance matrix of mapped features $\\Phi(z)$ . In contrast, in the classic KPCA [11, 12], such feature mappings $\\Phi$ are not explicitly given, and it rather works with a kernel function applied to original features $_{z}$ . In this section, we supplement our covariance-based KPCA with its kernel function implementation, including theoretical discussions and empirical comparisons on OoD detection. Our CoP and CoRP are shown to be more effective and efficient than their counterparts that employ kernel functions. ", "page_idx": 8}, {"type": "text", "text": "In the classic KPCA, the kernel trick enables projections to the principal subspace via kernel functions without calculating $\\Phi$ . However, how to map the projections in the principal subspace back to the original $_{z}$ -space remains a non-trivial issue, known as the pre-image problem [53], which makes it problematic to calculate reconstructed features via kernel functions. To address this issue, the following Proposition 1 shows a flexible way to directly calculate reconstruction errors without building reconstructed features, so as to apply the kernel trick, shown in the subsequent Proposition 2. Proposition 1. The KPCA reconstruction error $e^{\\Phi}(\\hat{z})$ can be represented as the norm of features projected in the residual subspace, i.e., the $U_{p}^{\\Phi}$ -subspace with $\\pmb{U}^{\\bar{\\Phi}}=[\\pmb{U}_{q}^{\\Phi},\\pmb{U}_{p}^{\\Phi}]$ : ", "page_idx": 8}, {"type": "equation", "text": "$$\ne^{\\Phi}(\\hat{z})=\\|{\\pmb U}_{p}^{\\Phi\\top}(\\Phi(\\hat{z})-{\\pmb\\mu}^{\\Phi})\\|_{2}.\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "Proposition 1 implies that the reconstruction error equals to the norm of projections in the residual $U_{p}^{\\Phi}$ -subspace, i.e., the subspace consisting of those principal components that are not kept, see proofs in Appendix D. Accordingly, as typically done in the classic KPCA, we can introduce a kernel function to perform dimension reduction, but to the residual subspace, and then calculate the norms of the reduced features as the reconstruction error, illustrated by Proposition 2. ", "page_idx": 8}, {"type": "text", "text": "Given a kernel function $k(\\cdot,\\cdot):\\mathbb{R}^{m}\\times\\mathbb{R}^{m}\\rightarrow\\mathbb{R}$ , we have a kernel matrix $K\\in\\mathbb{R}^{N_{\\mathrm{tr}}\\times N_{\\mathrm{tr}}}$ on training data with $K_{i,j}=k(z_{i},z_{j})$ , and a vector $\\pmb{k}_{\\hat{z}}\\in\\mathbb{R}^{N_{\\mathrm{tr}}}$ with the $i^{\\th}$ -th element $k(z_{i},\\hat{z})$ for a new sample $\\hat{z}$ . Proposition 2 shows how to calculate the KPCA reconstruction error via the kernel function $k$ . ", "page_idx": 8}, {"type": "text", "text": "Proposition 2. The KPCA reconstruction error $e^{k}(\\hat{z})$ w.r.t a kernel function $k$ can be calculated as: ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\begin{array}{r}{e^{k}(\\hat{z})=\\|A^{\\top}k_{\\hat{z}}\\|_{2},}\\end{array}\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "According to Proposition 2, now CoP and CoRP can be implemented via kernel functions. For CoP, we just directly apply the cosine kernel function $k_{\\mathrm{cos}}$ on features $_{\\textit{z}}$ to compute the kernel matrix $\\kappa$ and the projection matrix $\\pmb{A}$ , so as to obtain $e^{k}(\\hat{z})$ following Equation (9). For CoRP, we should adopt the Gaussian kernel function $k_{\\mathrm{gau}}$ on the $\\ell_{2}$ -normalized inputs $\\frac{z}{\\|z\\|_{2}}$ to calculate $\\kappa$ , $\\pmb{A}$ and $e^{k}(\\hat{z})$ . Figure 2 shows comparisons on the detection performance between CoP/CoRP and their kernel function implementations. ", "page_idx": 8}, {"type": "text", "text": "In Figure 2, the detection performance of KPCA with kernel functions is evaluated by varying the explained variance ratio of the kernel matrix $\\kappa$ . The larger the explained variance ratio, the smaller the dimension $l$ of $\\pmb{A}$ . The best detection results achieved by CoP/CoRP are illustrated as the dashed lines. Clearly, regarding the OoD detection performance, reconstruction errors $e^{k}$ calculated by kernel functions are less effective than those calculated explicitly in the mapped $\\Phi(z)$ -space. ", "page_idx": 8}, {"type": "text", "text": "Aside from the detection performance, KPCA with kernel functions is far less computationally efficient than CoP/CoRP in two aspects. On the one hand, the time expense of eigendecomposition on the $N_{\\mathrm{tr}}\\times N_{\\mathrm{tr}}$ kernel matrix $\\kappa$ by the former is more expensive than that on the $m\\times m$ or $M\\times M$ covariance matrix $\\pmb{\\Sigma}^{\\Phi}$ by the latter, since $N_{\\mathrm{tr}}\\gg M$ and $N_{\\mathrm{tr}}\\gg m$ . For example, on the ImageNet-1K benchmark with MobileNet, these settings are $N_{\\mathrm{tr}}\\,=\\,1,281$ , 167, $M\\,=\\,2560$ and $m=1280$ , on which KPCA with kernel functions is actually nearly prohibitive. On the other hand, in the inference stage, KPCA via kernel functions yet requires an ${\\mathcal O}(N_{\\mathrm{tr}})$ time and memory complexity in calculating $k_{\\hat{z}}$ , as all the training data has to be stored and iterated, which is much higher than the ${\\mathcal{O}}(1)/{\\mathcal{O}}(M)$ complexity of our CoP/CoRP. ", "page_idx": 8}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/b90c27e861fa7a3b73b13149fffc5bc3c25f79b6cddeb2ca343786234567ddfc.jpg", "img_caption": ["Figure 2: Comparisons on the average detection FPR values between CoP/CoRP and their kernel function implementations in the CIFAR10 benchmark. In experiments, 5,000 images of the CIFAR10 training set and 1,000 images of the CIFAR10 test set and OoD data sets are randomly selected. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "As PCA reconstruction errors fail to distinguish OoD data from InD data on the penultimate features $_{\\textit{z}}$ of DNNs, kernel PCA is introduced for its non-linearity in the manner of employing explicit feature mappings. To find appropriate kernels that can characterize the non-linear patterns in InD and OoD features, we take a kernel perspective to decouple and analyze key components of an existing KNN detector [7], and thus propose a cosine kernel and a cosine-Gaussian kernel for KPCA. Specifically, two explicit feature mappings $\\Phi(\\cdot)$ induced from the two kernels are leveraged on original features $_{z}$ . For the cosine kernel, its explicit feature mapping can be directly obtained. For the Gaussian kernel, we adopt the celebrated random Fourier features to approximate the Gaussian kernel. The mapped $\\Phi(z)$ -space enables PCA to extract principal components that well separate InD and OoD data, leading to distinguishable reconstruction errors. Extensive empirical results have verified the improved effectiveness and efficiency of the proposed KPCA with new SOTA OoD detection performance. Besides, more in-depth analyzes are drawn on the individual effects of the cosine kernel and the Gaussian kernel, and the involved multiple hyper-parameters. In addition, theoretical discussions and associated experiments are provided to bridge the relationships between our covariance-based KPCA and its kernel function implementation so as to further illustrate the advantages of our method. ", "page_idx": 9}, {"type": "text", "text": "One limitation of the KPCA detector is that the two specific kernels are still manually selected with carefully-tuned parameters. It remains a valuable topic in the OoD detection task whether the parameters of kernels could be learned from data according to some optimization objective. For example, deep kernel learning [54] could be considered as an alternative choice so as to pursue stronger kernels that can better characterize InD and OoD with enhanced detection performance by an additional learning step on the features. We hope that the proposed two effective kernels verified empirically in our work could benefit the research community as a solid example for future studies. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is jointly supported by National Natural Science Foundation of China (62376153, 62376155), and Shanghai Municipal Science and Technology Research Major Project (2021SHZDZX0102). ", "page_idx": 9}, {"type": "text", "text": "Societal impacts ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "The societal impacts of this work are mainly positive, as it aims at detecting OoD samples in the inference or deployment stage of DNNs, which benefits researches in trustworthy deep learning. Through our work, we hope that new inspirations on the non-linearity in data could be drawn from a kernel perspective so as to highlight the safety issue in real-world machine learning applications. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \n[2] Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray, et al. Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730\u201327744, 2022.   \n[3] Clark Barrett, Brad Boyd, Elie Bursztein, Nicholas Carlini, Brad Chen, Jihye Choi, Amrita Roy Chowdhury, Mihai Christodorescu, Anupam Datta, Soheil Feizi, et al. Identifying and mitigating the security risks of generative ai. Foundations and Trends $^\\mathrm{\\textregistered}$ in Privacy and Security, 6(1):1\u201352, 2023.   \n[4] Jingkang Yang, Kaiyang Zhou, Yixuan Li, and Ziwei Liu. Generalized out-of-distribution detection: A survey. International Journal of Computer Vision, pages 1\u201328, 2024.   \n[5] Weitang Liu, Xiaoyun Wang, John Owens, and Yixuan Li. Energy-based out-of-distribution detection. Advances in neural information processing systems, 33:21464\u201321475, 2020.   \n[6] Rui Huang, Andrew Geng, and Yixuan Li. On the importance of gradients for detecting distributional shifts in the wild. Advances in Neural Information Processing Systems, 34:677\u2013 689, 2021.   \n[7] Yiyou Sun, Yifei Ming, Xiaojin Zhu, and Yixuan Li. Out-of-distribution detection with deep nearest neighbors. In International Conference on Machine Learning, pages 20827\u201320840. PMLR, 2022.   \n[8] Xiaoyuan Guan, Zhouwu Liu, Wei-Shi Zheng, Yuren Zhou, and Ruixuan Wang. Revisit pcabased technique for out-of-distribution detection. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 19431\u201319439, 2023.   \n[9] Francesco Tonin, Arun Pandey, Panagiotis Patrinos, and Johan AK Suykens. Unsupervised energy-based out-of-distribution detection using stiefel-restricted kernel machine. In 2021 International Joint Conference on Neural Networks (IJCNN), pages 1\u20138. IEEE, 2021.   \n[10] Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of machine learning research, 9(11), 2008.   \n[11] Bernhard Sch\u00f6lkopf, Alexander Smola, and Klaus-Robert M\u00fcller. Kernel principal component analysis. In International conference on artificial neural networks, pages 583\u2013588. Springer, 1997.   \n[12] Bernhard Sch\u00f6lkopf, Alexander Smola, and Klaus-Robert M\u00fcller. Nonlinear component analysis as a kernel eigenvalue problem. Neural computation, 10(5):1299\u20131319, 1998.   \n[13] Ali Rahimi and Benjamin Recht. Random features for large-scale kernel machines. Advances in neural information processing systems, 20, 2007.   \n[14] Dan Hendrycks, Steven Basart, Mantas Mazeika, Andy Zou, Joseph Kwon, Mohammadreza Mostajabi, Jacob Steinhardt, and Dawn Song. Scaling out-of-distribution detection for realworld settings. In International Conference on Machine Learning, pages 8759\u20138773. PMLR, 2022.   \n[15] Dan Hendrycks and Kevin Gimpel. A baseline for detecting misclassified and out-of-distribution examples in neural networks. In International Conference on Learning Representations, 2016.   \n[16] Shiyu Liang, Yixuan Li, and R Srikant. Enhancing the reliability of out-of-distribution image detection in neural networks. In International Conference on Learning Representations, 2018.   \n[17] Yingwen Wu, Tao Li, Xinwen Cheng, Jie Yang, and Xiaolin Huang. Low-dimensional gradient helps out-of-distribution detection. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2024.   \n[18] Yiyou Sun, Chuan Guo, and Yixuan Li. React: Out-of-distribution detection with rectified activations. Advances in Neural Information Processing Systems, 34:144\u2013157, 2021.   \n[19] Yao Zhu, YueFeng Chen, Chuanlong Xie, Xiaodan Li, Rong Zhang, Hui Xue, Xiang Tian, Yaowu Chen, et al. Boosting out-of-distribution detection with typical features. Advances in Neural Information Processing Systems, 35:20758\u201320769, 2022.   \n[20] Andrija Djurisic, Nebojsa Bozanic, Arjun Ashok, and Rosanne Liu. Extremely simple activation shaping for out-of-distribution detection. In The Eleventh International Conference on Learning Representations, 2023.   \n[21] Kai Xu, Rongyu Chen, Gianni Franchi, and Angela Yao. Scaling for training time and posthoc out-of-distribution detection enhancement. In The Twelfth International Conference on Learning Representations, 2024.   \n[22] Yue Yuan, Rundong He, Yicong Dong, Zhongyi Han, and Yilong Yin. Discriminability-driven channel selection for out-of-distribution detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 26171\u201326180, 2024.   \n[23] Kimin Lee, Kibok Lee, Honglak Lee, and Jinwoo Shin. A simple unified framework for detecting out-of-distribution samples and adversarial attacks. Advances in neural information processing systems, 31, 2018.   \n[24] Jaewoo Park, Yoon Gyo Jung, and Andrew Beng Jin Teoh. Nearest neighbor guidance for out-of-distribution detection. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 1686\u20131695, 2023.   \n[25] Yeonguk Yu, Sungho Shin, Seongju Lee, Changhyun Jun, and Kyoobin Lee. Block selection method for using feature norm in out-of-distribution detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15701\u201315711, 2023.   \n[26] Yue Song, Nicu Sebe, and Wei Wang. Rankfeat: Rank-1 feature removal for out-of-distribution detection. Advances in Neural Information Processing Systems, 35:17885\u201317898, 2022.   \n[27] Yen-Chang Hsu, Yilin Shen, Hongxia Jin, and Zsolt Kira. Generalized odin: Detecting outof-distribution image without learning from out-of-distribution data. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 10951\u201310960, 2020.   \n[28] Zihan Zhang and Xiang Xiang. Decoupling maxlogit for out-of-distribution detection. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 3388\u20133397, 2023.   \n[29] Kun Fang, Qinghua Tao, Xiaolin Huang, and Jie Yang. Revisiting deep ensemble for out-ofdistribution detection: A loss landscape perspective. International Journal of Computer Vision, pages 1\u201320, 2024.   \n[30] Haotian Ye, Chuanlong Xie, Tianle Cai, Ruichen Li, Zhenguo Li, and Liwei Wang. Towards a theoretical framework of out-of-distribution generalization. Advances in Neural Information Processing Systems, 34:23519\u201323531, 2021.   \n[31] Zhen Fang, Yixuan Li, Jie Lu, Jiahua Dong, Bo Han, and Feng Liu. Is out-of-distribution detection learnable? Advances in Neural Information Processing Systems, 35:37199\u201337213, 2022.   \n[32] Jihoon Tack, Sangwoo Mo, Jongheon Jeong, and Jinwoo Shin. Csi: Novelty detection via contrastive learning on distributionally shifted instances. Advances in neural information processing systems, 33:11839\u201311852, 2020.   \n[33] Vikash Sehwag, Mung Chiang, and Prateek Mittal. Ssd: A unified framework for self-supervised outlier detection. In International Conference on Learning Representations, 2020.   \n[34] Yiyou Sun and Yixuan Li. Dice: Leveraging sparsification for out-of-distribution detection. In European Conference on Computer Vision, pages 691\u2013708. Springer, 2022.   \n[35] Haoqi Wang, Zhizhong Li, Litong Feng, and Wayne Zhang. Vim: Out-of-distribution with virtual-logit matching. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4921\u20134930, 2022.   \n[36] Walter Rudin. Fourier analysis on groups, volume 121967. Wiley Online Library, 1962.   \n[37] Kun Fang, Fanghui Liu, Xiaolin Huang, and Jie Yang. End-to-end kernel learning via generative random fourier features. Pattern Recognition, 134:109057, 2023.   \n[38] Mikhail Belkin, Daniel Hsu, Siyuan Ma, and Soumik Mandal. Reconciling modern machinelearning practice and the classical bias\u2013variance trade-off. Proceedings of the National Academy of Sciences, 116(32):15849\u201315854, 2019.   \n[39] A Krizhevsky. Learning multiple layers of features from tiny images. Master\u2019s thesis, University of Toronto, 2009.   \n[40] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In IEEE Conference on Computer Vision and Pattern Recognition, pages 248\u2013255, 2009.   \n[41] Yuval Netzer, Tao Wang, Adam Coates, Alessandro Bissacco, Bo Wu, and Andrew Y Ng. Reading digits in natural images with unsupervised feature learning. In Proceedings of the NIPS Workshop on Deep Learning and Unsupervised Feature Learning, 2011.   \n[42] Fisher Yu, Ari Seff, Yinda Zhang, Shuran Song, Thomas Funkhouser, and Jianxiong Xiao. Lsun: Construction of a large-scale image dataset using deep learning with humans in the loop. arXiv preprint arXiv:1506.03365, 2015.   \n[43] Pingmei Xu, Krista A Ehinger, Yinda Zhang, Adam Finkelstein, Sanjeev R Kulkarni, and Jianxiong Xiao. Turkergaze: Crowdsourcing saliency with webcam based eye tracking. arXiv preprint arXiv:1504.06755, 2015.   \n[44] Mircea Cimpoi, Subhransu Maji, Iasonas Kokkinos, Sammy Mohamed, and Andrea Vedaldi. Describing textures in the wild. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3606\u20133613, 2014.   \n[45] Bolei Zhou, Agata Lapedriza, Aditya Khosla, Aude Oliva, and Antonio Torralba. Places: A 10 million image database for scene recognition. IEEE transactions on pattern analysis and machine intelligence, 40(6):1452\u20131464, 2017.   \n[46] Grant Van Horn, Oisin Mac Aodha, Yang Song, Yin Cui, Chen Sun, Alex Shepard, Hartwig Adam, Pietro Perona, and Serge Belongie. The inaturalist species classification and detection dataset. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 8769\u20138778, 2018.   \n[47] Jianxiong Xiao, James Hays, Krista A Ehinger, Aude Oliva, and Antonio Torralba. Sun database: Large-scale scene recognition from abbey to zoo. In 2010 IEEE computer society conference on computer vision and pattern recognition, pages 3485\u20133492. IEEE, 2010.   \n[48] Jeff Johnson, Matthijs Douze, and Herv\u00e9 J\u00e9gou. Billion-scale similarity search with gpus. IEEE Transactions on Big Data, 7(3):535\u2013547, 2019.   \n[49] Prannay Khosla, Piotr Teterwak, Chen Wang, Aaron Sarna, Yonglong Tian, Phillip Isola, Aaron Maschinot, Ce Liu, and Dilip Krishnan. Supervised contrastive learning. Advances in neural information processing systems, 33:18661\u201318673, 2020.   \n[50] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In IEEE Conference on Computer Vision and Pattern Recognition, pages 770\u2013778, 2016.   \n[51] Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, and Liang-Chieh Chen. Mobilenetv2: Inverted residuals and linear bottlenecks. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 4510\u20134520, 2018.   \n[52] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in neural information processing systems, 32, 2019.   \n[53] JT-Y Kwok and IW-H Tsang. The pre-image problem in kernel methods. IEEE transactions on neural networks, 15(6):1517\u20131525, 2004.   \n[54] Andrew Gordon Wilson, Zhiting Hu, Ruslan Salakhutdinov, and Eric P Xing. Deep kernel learning. In Artificial intelligence and statistics, pages 370\u2013378. PMLR, 2016.   \n[55] Zhihui Zhu, Tianyu Ding, Jinxin Zhou, Xiao Li, Chong You, Jeremias Sulam, and Qing Qu. A geometric analysis of neural collapse with unconstrained features. Advances in Neural Information Processing Systems, 34:29820\u201329834, 2021.   \n[56] Ninh Pham and Rasmus Pagh. Fast and scalable polynomial kernels via explicit feature maps. In Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 239\u2013247, 2013.   \n[57] Heiko Hoffmann. Kernel pca for novelty detection. Pattern recognition, 40(3):863\u2013874, 2007. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Details of representative OoD detectors ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we elaborate the scoring function $S(\\cdot)$ of the OoD detectors included in the comparison experiments of Section 5. Given a well-trained DNN $f:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{c}$ with inputs $\\pmb{x}\\in\\mathbb{R}^{d}$ , the outputs are $c$ -dimension logits $f(\\pmb{x})\\in\\mathbb{R}^{c}\\:w.r.t\\,c$ classes. The DNN $f$ learns features $z\\in\\mathbb{R}^{m}$ of $\\textbf{\\em x}$ before the last linear layer, i.e., the penultimate features $_{z}$ . ", "page_idx": 14}, {"type": "text", "text": "MSP [15] employs the softmax function on the output logits and takes the maximum probability as the scoring function. Given a new sample $\\hat{\\mathbf{x}}\\in\\mathbb{R}^{d}$ , its MSP score is ", "page_idx": 14}, {"type": "equation", "text": "$$\nS_{\\mathrm{MSP}}(\\hat{\\pmb{x}})=\\operatorname*{max}\\left(\\mathrm{softmax}(f(\\hat{\\pmb{x}}))\\right).\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "ODIN [16] introduces the temperature scaling and adversarial examples into the MSP score: ", "page_idx": 14}, {"type": "equation", "text": "$$\nS_{\\mathrm{ODIN}}(\\hat{\\mathbf{x}})=\\operatorname*{max}\\left(\\mathrm{softmax}(\\frac{f(\\hat{\\mathbf{x}}_{\\mathrm{a}})}{T})\\right),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $T$ denotes the temperature and $\\hat{x}_{\\mathrm{a}}$ denotes the perturbed adversarial examples of $\\hat{x}$ . ", "page_idx": 14}, {"type": "text", "text": "Mahala [23] employs the Mahalanobis score to perform OoD detection. The DNN outputs at different layers are modeled as a mixture of multivariate Gaussian distributions, and the Mahalanobis distance is calculated. Then, a linear regressor is trained to achieve a weighted Mahalanobis distance at different layers as the final detection score. To train the linear regressor, the training data and the corresponding adversarial examples are adopted as positive and negative samples, respectively. ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{S_{\\mathrm{mahal}}^{l}(\\hat{\\pmb x})=\\underset{i}{\\mathrm{max}}\\ -(f^{l}(\\hat{\\pmb x})-\\pmb\\mu_{i}^{l})^{T}\\Sigma_{l}(f^{l}(\\hat{\\pmb x})-\\pmb\\mu_{i}^{l}),}\\\\ &{S_{\\mathrm{mahal}}(\\hat{\\pmb x})=\\displaystyle\\sum_{l}\\alpha_{l}\\cdot S_{\\mathrm{mahal}}^{l}(\\hat{\\pmb x}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $f^{l}(\\hat{\\pmb{x}})$ denotes the output features at the $l$ -th layer with the associated mean feature vector $\\pmb{\\mu}_{i}^{l}$ of class- $^{\\,\\cdot\\,i}$ and the covariance matrix $\\Sigma_{l}$ , and $\\alpha_{l}$ denotes the linear regression coefficients. ", "page_idx": 14}, {"type": "text", "text": "Energy [5] uses an energy function on logits as energy is well aligned with input probability densities: ", "page_idx": 14}, {"type": "equation", "text": "$$\nS_{\\mathrm{energy}}({\\hat{\\pmb x}})=\\log\\sum_{i=1}^{c}\\exp(f_{i}({\\hat{\\pmb x}})),\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $f_{i}({\\hat{x}})$ denotes the $i$ -th element in the $c$ -dimension output logits $f(\\hat{\\pmb x})$ . ", "page_idx": 14}, {"type": "text", "text": "GODIN [27] improves ODIN from 2 aspects: decomposing the probabilities and modifying the input pre-processing. On the one hand, a two-branch structure with learnable parameters is imposed after the logits to formulate the decomposed probablities. On the other hand, the magnitude of the adversarial examples is optimized instead of manually tuned in ODIN. ", "page_idx": 14}, {"type": "text", "text": "ReAct [18] proposes activation truncation on the penultimate features $_{\\textit{z}}$ of DNNs, as the authors observe that features of OoD data generally hold high unit activations in the penultimate layers. The feature clipping is implemented in a simple way: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\bar{z}=\\operatorname*{min}\\left\\{z,\\alpha\\right\\},\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\alpha$ is a pre-defined constant. The clipped features $\\bar{z}$ then pass through the last linear layer and yield modified logits. Other logits-based OoD methods such as Energy could be applied on the modified logits to produce a detection score. ", "page_idx": 14}, {"type": "text", "text": "KNN [7] is a simple but time-consuming and memory-inefficient detector since it performs nearest neighbor search on the $\\ell_{2}$ -normalized penultimate features between the test sample and all the training samples. The negative of the ( $k$ -th) shortest $\\ell_{2}$ distance is set as the score for a new sample $\\hat{x}$ . ", "page_idx": 14}, {"type": "text", "text": "ViM [35] combines information from both logits and features in a complicated way for OoD detection. Firstly, penultimate features $_{z}$ are projected to the residual space obtained by PCA. Then the norm of projected features gets scaled together with the logits via the softmax function. Finally the scaled feature norm is selected as the detection score. ", "page_idx": 14}, {"type": "text", "text": "DICE [34] is a sparsification-based OoD detector by preserving the most important weights in the last linear layer. Denote the weights $W\\in\\mathbb{R}^{m\\times c}$ and the bias $\\pmb{b}\\in\\mathbb{R}^{c}$ in the last linear layer, the forward propagation of DICE is defined as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\boldsymbol{f}_{\\mathrm{DICE}}(\\hat{\\boldsymbol{x}})\\triangleq\\left(M\\odot W\\right)^{\\top}\\hat{\\boldsymbol{z}}+\\boldsymbol{b}.\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "$\\odot$ is the element-wise multiplication, and $M\\,\\in\\,\\mathbb{R}^{m\\times c}$ is a masking matrix whose elements are determined by the element-wise multiplication between the $i$ -th column $\\pmb{w}_{i}\\in\\mathbb{R}^{m}$ in $W$ and the penultimate features $\\hat{z}$ : $w_{i}\\odot\\hat{z}$ . Then, similar as ReAct, logits-based detectors could be executed on the modified logits $f_{\\mathrm{DICE}}(\\hat{\\pmb x})$ to produce a detection score. ", "page_idx": 15}, {"type": "text", "text": "BATS [19] proposes to truncate the extreme outputs of Batch Normalization (BN) layers via the estimated mean and standard deviations stored in BN layers, as those extreme features would lead to ambiguity and should be rectified. However, in the released code, the authors actually does not use any information from the BN layers, but instead simply perform clipping on the penultimate features $_{\\textit{z}}$ via the feature mean and standard deviations. ", "page_idx": 15}, {"type": "text", "text": "PCA [8] re-formulates the reconstruction errors and empirically shows the inseparativity via the re-formulated errors between InD and OoD data in the primal $_{\\textit{z}}$ -space. The authors further propose a regularized reconstruction error and a fusion strategy to boost the OoD detection performance. ", "page_idx": 15}, {"type": "text", "text": "NNGuide [24] exploits the guidance of the Energy score on logits to boost the detection performance of the nearest neighbor search on features. Specifically, the training features are firstly scaled by their corresponding Energy scores, then KNN is executed on such re-scaled features for the new sample. The final detection score is set as the multiplication of the searched distance and the Energy score. The time and memory complexity of NNGuide is still the same ${\\mathcal O}(N_{\\mathrm{tr}})$ as that of KNN [7]. ", "page_idx": 15}, {"type": "text", "text": "DML [28] decouples the maximum logits into two parts: the maximum cosine similarity (MaxCosine) and the maximum norm (MaxNorm), and employs their ensemble as the detection score. DML reveals that the cosine similarity and the feature norm jointly contribute to the effectiveness of the previous MSP [15] and MaxLogit [14] methods and designs new training losses from the perspective of feature collapse [55], so as to further improve the performance of MaxCosine and MaxNorm. ", "page_idx": 15}, {"type": "text", "text": "ASH [20] is a post-hoc detection method that removes the abnormal information in features. ASH includes two stages: removing a large portion of the features, and adjusting the remaining feature values by scaling up or assigning a constant value. ASH exhibits advantages over the classic ReAct method [18]: no global thresholds and stronger flexibility, and shows better detection performance. ", "page_idx": 15}, {"type": "text", "text": "SCALE [21] analyzes the rectification and scaling components of the ASH method, and improves ASH by only a scaling process in the post-hoc stage. ", "page_idx": 15}, {"type": "text", "text": "DDCS [22] investigates the effects of different channels based on existing feature-clipping detection methods, and proposes a channel-level anomalous activations pre-rectifying module so as to clip features more carefully for better detection performance. ", "page_idx": 15}, {"type": "text", "text": "We follow the settings in KNN [7] and include CSI [32] and SSD [33] into the comparisons in Section 5.1. The 2 methods adopt the contrastive losses to train DNNs. In the comparison results of Table 1 and the following Table 4, the reported detection results of CSI and SSD are directly from [7], and are obtained by executing the Mahalanobis detector on learned features of DNNs trained by CSI and SSD. Refer to [7] for more details. ", "page_idx": 15}, {"type": "text", "text": "B Supplementary experiment results on OoD detection ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Table 4 illustrates the comparison results on the CIFAR10 benchmark between our CoP/CoRP and the KNN detector [7]. Similar as the comparisons on the ImageNet-1K benchmark in Table 1, CoRP outperforms other baselines in both the standard training and the supervised contrastive learning with lower FPR and higher AUROC average values. ", "page_idx": 15}, {"type": "text", "text": "Table 5 shows the comparison results on the ImageNet-1K benchmark between our CoP/CoRP and the regularized reconstruction error [8] of MobileNet [51]. Similar as the case of ResNet50 in Table 3, under the same fusion trick with other detection scores, our KPCA reconstruction errors of CoP and CoRP significantly outperform the regularized PCA reconstruction error of [8], implying the substantial improvements by characterizing the non-linear data distribution of the InD and OoD features via the devised two proper non-linear kernels. ", "page_idx": 15}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/5979b2cd35db5448f004ca2a0b7fe7acc0c99ea2f29545e7692d9be89df37c75.jpg", "table_caption": ["Table 4: The detection performance of different methods (ResNet18 trained on CIFAR10). "], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/85a1c967bebce9b2bbffaeb4d20426d49543c9b1a918327b3b919dd79d5ec652.jpg", "table_caption": ["Table 5: Comparisons on the detection performance between the regularized reconstruction error [8] and our CoP and CoRP fused with other OoD scores (MSP, Energy, ReAct and BATS) on each OoD data set (MobileNet trained on ImageNet-1K). Best average results are highlighted with underlines. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "C Analytical discussions on kernels ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this section, more in-depth discussions are drawn on the effects of cosine and Gaussian kernels in CoP and CoRP for OoD detection in Appendix C.1 and Appendix C.2, respectively. A comprehensive sensitivity analysis on the involved hyper-parameters in CoP and CoRP are presented in Appendix C.3. ", "page_idx": 16}, {"type": "text", "text": "C.1 Effects of the cosine kernel ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "The cosine kernel in CoP and CoRP appears an indispensable basis in alleviating the linear inseparability in InD and OoD features. The reason for its effectiveness lies in the imbalanced feature norms $\\|z\\|_{2}$ between InD and OoD features, which has also been observed in preceding works [7, 6, 32]. Figure 3 shows the feature norms of multiple InD and OoD data sets, from which one can find clear disparities of the InD and OoD feature norms. The cosine kernel $k_{\\mathrm{cos}}$ and the corresponding feature mapping $\\phi_{\\mathrm{cos}}$ in Equation (6) thereby normalize the feature norms and facilitate the separability between InD and OoD data. ", "page_idx": 16}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/8f579d8a80128b3319ae163e53abdd020f32a6ef9e2e9eed5f5c9c33cafff2a1.jpg", "img_caption": ["Figure 3: A density histogram of the imbalanced norms of InD and OoD features. InD: CIFAR10 and ImageNet-1K. OoD: LSUN and places365, SUN and Textures. "], "img_footnote": [], "page_idx": 17}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/79ed2c22bdcab17d1b5b4c28cbe7b71aad1784f8c2ba13671b2c8164448c1b18.jpg", "img_caption": ["Figure 4: T-SNE visualization of the original features (left), mapped features $w.r t$ a Gaussian kernel (middle) and mapped features $w.r t$ a cosine kernel (right). "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Figure 4 illustrates the t-SNE visualization on the InD and OoD features to further imply the importance of the cosine kernel. As shown in the middle panel of Figure 4, the Gaussian kernel alone fails in creating separable InD and OoD features in the mapped space and actually leads to a complete mess of the mapped features. In contrast, the cosine kernel significantly alleviates the linearly-inseparability of features, shown in the right panel of Figure 4. ", "page_idx": 17}, {"type": "text", "text": "Ablation studies on the cosine feature mapping $\\phi_{\\mathrm{cos}}$ in CoP and CoRP are executed to verify its indispensability for OoD detection. Specifically, CoP without $\\phi_{\\mathrm{cos}}$ reduces to a standard PCA on the $_{z}$ -space, and CoRP without $\\phi_{\\mathrm{cos}}$ reduces to KPCA with a Gaussian kernel. Table 6 shows the corresponding detection FPR and AUROC values on each OoD data set in the ImageNet-1K benchmark of ablations on $\\phi_{\\mathrm{cos}}$ . Both the standard PCA and the Gaussian KPCA exhibit worse detection performance than CoP and CoRP. Particularly, the single Gaussian kernel in KPCA actually results in a complete failure in detecting OoD samples with nearly $95\\%$ FPR values. Therefore, the cosine kernel is essential in characterizing the non-linearity in InD and OoD features and critical for the superior performance of the KPCA detector. ", "page_idx": 17}, {"type": "text", "text": "C.2 Alternative kernels ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "The design of the Gaussian kernel in CoRP is motivated by the useful $\\ell_{2}$ distance on $\\frac{z}{\\|z\\|_{2}}$ in the KNN detector [7]. The Gaussian kernel preserves the beneficial $\\ell_{2}$ distance relationship in $\\phi_{\\mathrm{cos}}(z)$ - space through the RFFs mapping. In this section, we provide two alternative choices aside from the cosine-Gaussian kernel. ", "page_idx": 17}, {"type": "text", "text": "\u2022 The cosine-Laplacian kernel explores the $\\ell_{1}$ distance in $\\phi_{\\mathrm{cos}}(z)$ -space via the Laplacian kernel $k_{\\mathrm{lap}}$ : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r}{k_{\\mathrm{lap}}(z_{1},z_{2})=e^{-\\gamma\\|z_{1}-z_{2}\\|_{1}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "To construct the RFFs for $k_{\\mathrm{lap}}$ , the sampling distribution of the $\\omega_{i}$ in Equation (4) is a Cauchy distribution $\\begin{array}{r}{\\omega\\sim p(\\omega)=\\frac{\\gamma^{2}}{\\pi\\gamma(\\omega^{2}+\\gamma^{2})}}\\end{array}$ . ", "page_idx": 17}, {"type": "table", "img_path": "EZpKBC1ohS/tmp/9c5984e3abf9bc5a044237a3e1b515ad40e14f9fa7957c333f6688afd17e9cc0.jpg", "table_caption": ["Table 6: The detection results among a variety of kernels (ResNet50 trained on ImageNet-1K). "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "\u2022 The cosine-polynomial kernel does not hold the $\\ell_{1}$ nor $\\ell_{2}$ distance-preserving property for $\\phi_{\\mathrm{cos}}(z)$ -space, as the polynomial kernel is defined as: ", "page_idx": 18}, {"type": "equation", "text": "$$\nk_{\\mathrm{poly}}(z_{1},z_{2})=(z_{1}^{\\top}z_{2}+c)^{d}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "To obtain an explicit feature mapping for $k_{\\mathrm{poly}}$ , we do not adopt the RFFs and take the Tensor Sketch approximation [56] instead for simplicity. ", "page_idx": 18}, {"type": "text", "text": "Table 6 illustrates the comparisons on the detection performance among multiple alternative kernels. Actually, both the cosine-Laplacian kernel and the cosine-polynomial kernel cannot bring detection performance gains on top of the cosine kernel (CoP), which indicates that the $\\ell_{1}$ -distance relationship characterized by the Laplacian kernel and the inner-product information characterized by the polynomial kernel in the $\\phi_{\\mathrm{cos}}(z)$ -space are less effective in promoting the separability between InD and OoD features. Thus, the cosine-Gaussian kernel is used and recommended in the proposed KPCA method for OoD detection. ", "page_idx": 18}, {"type": "text", "text": "C.3 Sensitivity analysis ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "A comprehensive sensitivity analysis is executed to show the effects of hyper-parameters in CoP and CoRP. A common hyper-parameter in $\\mathrm{CoP}$ and CoRP is the number of columns $q$ of the dimensionality-reduction matrix ${\\pmb U}_{q}^{\\Phi}$ . Additional hyper-parameters of CoRP include the bandwidth $\\gamma$ of the Gaussian kernel and the number of RFFs $M$ . In the following, we discuss the influence of each hyper-parameter, and report experiment results of the detection performance by varying one hyper-parameter with the others fixed. ", "page_idx": 18}, {"type": "text", "text": "Effect of $q$ $q$ indicates the number of preserved principal components and determines how much information captured by the subspace where the InD and OoD data is projected onto. $q$ is selected as the minimal number of principal components with the amount of information that exceeds the given explained variance ratio. ", "page_idx": 18}, {"type": "text", "text": "Figure 5 illustrates the detection performance of CoP and CoRP under varied explained variance ratios. On CIFAR10 and ImageNet-1K benchmarks, for CoP, a mild value of the explained variance ratio is suggested with around $90\\%$ for keeping the components. Regarding CoRP, a sufficiently large value of the explained variance ratio is no longer essential for CoRP on the ImageNet-1K benchmark, which might be due to that the 2 concatenated kernels make the useful information for distinguishing OoD samples more concentrated in less principal components. ", "page_idx": 18}, {"type": "text", "text": "Effect of $\\gamma$ The Gaussian kernel width $\\gamma$ directly affects the mapped data distribution. For a large $\\gamma$ , $k_{\\mathrm{gau}}(z_{1},z_{2})=e^{-\\gamma\\|z_{1}-z_{2}\\|_{2}^{2}}\\approx0$ for $z_{1}\\neq z_{2}$ , which indicates that the mapped features of $z_{1}$ and $z_{2}$ are (nearly) mutually-orthogonal. In this case, a PCA would become meaningless. For a small $\\gamma$ , the KPCA-based reconstruction errors will approach the standard PCA-based ones, shown by [57]. Figure 6 illustrates the detection FPR95 and AUROC values of CoRP w.r.t varied Gaussian kernel width $\\gamma$ on CIFAR10 and ImageNet-1K benchmarks. Clearly, neither a too large nor a too small kernel width beneftis the detection performance, and a mild value of $\\gamma$ should be carefully tuned for different in-distribution data. ", "page_idx": 18}, {"type": "text", "text": "Effect of $M$ The number of RFFs $M$ determines the approximation ability of RFFs towards the Gaussian kernel. As proved in [13], the larger the $M$ , the better the RFFs approximate $k_{\\mathrm{gau}}$ . ", "page_idx": 18}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/eb264549746c44000f3cd0b5eeb82a4473a1780f74d5b02035b5b5461546e1d6.jpg", "img_caption": ["Figure 5: A sensitivity analysis on the explained variance ratio of CoP (top) and CoRP (bottom). The average FPR and AUROC values of $\\mathrm{OoD}$ data sets in CIFAR10 and ImageNet-1K benchmarks are reported. The Gaussian kernel width $\\gamma$ and the dimension $M$ of RFFs in CoRP are fixed. "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/d5be71a4d908a51264f11cd01f2c94ce5772aaa146112e205e5e4e7c08583fa9.jpg", "img_caption": ["Figure 6: A sensitivity analysis on the Gaussian kernel width $\\gamma$ of CoRP. The average detection FPR and AUROC values of OoD data sets in CIFAR10 and ImageNet-1K benchmarks are reported. The explained variance ratio and the dimension $M$ of RFFs are fixed. "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "Figure 7 indicates the detection FPR95 and AUROC values of CoRP w.r.t. multiple values of the RFFs dimension $M$ on CIFAR10 and ImageNet-1K benchmarks. As $M$ increases, the detection performance gets improved since the RFFs better converge to the Gaussian kernel. Considering the computation efficiency of eigendecomposition on the covariance matrix of $\\mathbb{R}^{M\\times M}$ , in the comparison experiments, we adopt $M\\,=\\,4m$ on CIFAR10 with $m\\,=\\,512$ for ResNet18, and $M\\,=\\,2m$ on ImageNet-1K with $m=2048$ for ResNet50 and $m=1280$ for MobileNet. ", "page_idx": 19}, {"type": "text", "text": "D Supplementary theoretical results ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "The proof of Proposition 1 is presented. ", "page_idx": 19}, {"type": "text", "text": "Proof. Recall $z\\in\\mathbb{R}^{m}$ and suppose $\\Phi:\\mathbb{R}^{m}\\to\\mathbb{R}^{M}$ and $\\boldsymbol{U}^{\\Phi}\\in\\mathbb{R}^{M\\times M}$ is the eigenvector matrix of the covariance matrix of the training data with $U^{\\Phi}\\,=\\,\\left[U_{q}^{\\Phi},U_{p}^{\\Phi}\\right]$ and $q+p\\,=\\,M$ . For the reconstruction error $e^{\\Phi}(\\hat{z})$ of a new test sample $\\hat{z}\\in\\mathbb{R}^{m}$ in the mapped $\\Phi(z)$ -space, we have: ", "page_idx": 19}, {"type": "image", "img_path": "EZpKBC1ohS/tmp/f544d9c1ab645071231f9732387f6685d76a0f11d5cc50c2a4de4a0b06148842.jpg", "img_caption": [], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "Figure 7: A sensitivity analysis on the dimension $M$ of RFFs of CoRP. The average detection FPR and AUROC values of OoD data sets in CIFAR10 and ImageNet-1K benchmarks are reported. The explained variance ratio and the Gaussian kernel width $\\gamma$ are fixed. ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{e^{\\Phi}(\\hat{z})\\Big)^{2}=\\Big\\|(\\Phi(\\hat{z})-\\mu^{\\Phi})-U_{q}^{\\Phi}U_{q}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})\\Big\\|_{2}^{2}}\\\\ &{\\quad\\quad\\quad=\\Big((\\Phi(\\hat{z})-\\mu^{\\Phi})-U_{q}^{\\Phi}U_{q}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})\\Big)^{\\top}\\,\\Big((\\Phi(\\hat{z})-\\mu^{\\Phi})-U_{q}^{\\Phi}U_{q}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})\\Big)}\\\\ &{\\quad\\quad\\quad=(\\Phi(\\hat{z})-\\mu^{\\Phi})^{\\top}(\\Phi(\\hat{z})-\\mu^{\\Phi})-(\\Phi(\\hat{z})-\\mu^{\\Phi})^{\\top}U_{q}^{\\Phi}U_{q}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})}\\\\ &{\\quad\\quad\\quad=(\\Phi(\\hat{z})-\\mu^{\\Phi})^{\\top}\\,\\Big(I-U_{q}^{\\Phi}U_{q}^{\\Phi^{\\top}}\\Big)\\,(\\Phi(\\hat{z})-\\mu^{\\Phi})}\\\\ &{\\quad\\quad\\quad=(\\Phi(\\hat{z})-\\mu^{\\Phi})^{\\top}U_{p}^{\\Phi}U_{p}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})}\\\\ &{\\quad\\quad\\quad=\\Big\\|U_{p}^{\\Phi^{\\top}}(\\Phi(\\hat{z})-\\mu^{\\Phi})\\Big\\|_{2}^{2}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Obviously $e^{\\Phi}(\\hat{z})=\\left\\|\\pmb{U}_{p}^{\\Phi\\top}(\\Phi(\\hat{z})-\\pmb{\\mu}^{\\Phi})\\right\\|_{2}$ and the proof is finished. ", "page_idx": 20}, {"type": "text", "text": "The key in the proof of Proposition 1 is $\\begin{array}{r}{U_{q}^{\\Phi}U_{q}^{\\Phi\\top}\\!+\\!U_{p}^{\\Phi}U_{p}^{\\Phi\\top}=I}\\end{array}$ . Since $U^{\\Phi}$ is the eigenvector matrix of the covariance matrix, thereby $U^{\\Phi}$ is a unitary matrix and satisfies $U^{\\Phi}U^{\\Phi^{\\top}}=U^{\\Phi^{\\top}}U^{\\Phi}=I$ , which leads to $U_{q}^{\\Phi}U_{q}^{\\Phi\\top}+U_{p}^{\\Phi}\\bar{U}_{p}^{\\Phi\\top}=I$ . ", "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We have made clear claims on the paper\u2019s contributions and scope in the abstract and introduction. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 21}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: We have discussed the limitations of this work in Section 7 ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The paper provide the full set of assumptions and a complete and correct proof for each theoretical result. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 22}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: We have fully disclosed all the information needed to reproduce the main experimental results in the appendix and submitted anonymous code for the reproduction. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We have submitted anonymous code for the reproduction of the proposed algorithm in this work. The adopted data is public. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 23}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: All the experiment details have been specified in both the appendix and the released anonymous code. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [No] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: The involved DNNs are pre-trained and the results of the PCA operation are deterministic. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 23}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 24}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We have provided sufficient information on the computer resources. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 24}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The research in the paper conforms with the NeurIPS Code of Ethics in every aspect. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We have discussed the societal impacts of the work in Section 7. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 24}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 25}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: No new models nor datasets are released in this work, and thus the paper poses no such risks. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 25}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: All the creators and original owners of assets used in the paper have been properly credited. The license and terms of use have been explicitly mentioned and properly respected. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: New asserts introduced in the paper have been well documented and provided. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 26}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 26}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 26}, {"type": "text", "text": "\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 27}]