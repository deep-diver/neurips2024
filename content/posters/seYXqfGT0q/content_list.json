[{"type": "text", "text": "Prototypical Hash Encoding for On-the-Fly Fine-Grained Category Discovery ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Haiyang Zheng1\u2217, Nan $\\mathbf{P}\\mathbf{u}^{1}$ \u2217, Wenjing $\\mathbf{L}\\mathbf{i}^{2\\dagger}$ , Nicu Sebe1, Zhun Zhong2\u2020 1University of Trento 2Hefei University of Technology ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In this paper, we study a practical yet challenging task, On-the-fly Category Discovery (OCD), aiming to online discover the newly-coming stream data that belong to both known and unknown classes, by leveraging only known category knowledge contained in labeled data. Previous OCD methods employ the hash-based technique to represent old/new categories by hash codes for instance-wise inference. However, directly mapping features into low-dimensional hash space not only inevitably damages the ability to distinguish classes and but also causes \u201chigh sensitivity\u201d issue, especially for fine-grained classes, leading to inferior performance. To address these issues, we propose a novel Prototypical Hash Encoding (PHE) framework consisting of Category-aware Prototype Generation (CPG) and Discriminative Category Encoding (DCE) to mitigate the sensitivity of hash code while preserving rich discriminative information contained in high-dimension feature space, in a two-stage projection fashion. CPG enables the model to fully capture the intracategory diversity by representing each category with multiple prototypes. DCE boosts the discrimination ability of hash code with the guidance of the generated category prototypes and the constraint of minimum separation distance. By jointly optimizing CPG and DCE, we demonstrate that these two components are mutually beneficial towards an effective OCD. Extensive experiments show the significant superiority of our PHE over previous methods, e.g., obtaining an improvement of $+5.3\\%$ in ALL ACC averaged on all datasets. Moreover, due to the nature of the interpretable prototypes, we visually analyze the underlying mechanism of how PHE helps group certain samples into either known or unknown categories. Code is available at https://github.com/HaiyangZheng/PHE. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "While deep learning based machines have surpassed humans in visual recognition tasks [1, 2, 3, 4], their capability is often limited to providing closed-set answers, e.g., category names. In contrast, humans possess the ability to recognize novel categories upon first observation without knowing their category names. To bridge this gap, Novel/Generalized Category Discovery (NCD/GCD) techniques [5, 6, 7, 8, 9, 10, 11] are proposed to transfer knowledge from known categories to distinguish unseen ones. However, current NCD/GCD methods operate under an offline inference paradigm where the category discovery is often implemented by applying clustering / unsupervised classification algorithms on a pre-collected batch of query data that needs to be discovered. This severely limits the practicability of NCD/GCD techniques in real-world applications, where the systems are expected to provide online feedback for every newly-coming instance. ", "page_idx": 0}, {"type": "text", "text": "To tackle this drawback, Du et al. introduce the On-the-fly Category Discovery (OCD) task [12], which removes the assumption of a predefined query set and requires instance feedback with stream data input. OCD poses two primary challenges: 1) The requirement for real-time feedback is incompatible with offline cluster-based methods [8, 9] (see Fig. 1 (a)). 2) Due to uncertain openworld scenarios, the NCD/GCD methods (e.g., classifier-based methods [13]), which assume the number of categories can be available/discovered as a prior, are ineffective for OCD. As a solution, Du et al. propose the SMILE architecture [12], which employs the sign of an image feature (i.e., hash code) as its category descriptor to identify the corresponding category for online discovery. As illustrated in Fig. 1 (c), SMILE directly mapps image features into low-dimensional hash space with an instance-level contrastive objective and regard that one hash code uniquely represents a category. Given this, although SMILE can derive category descriptors, it suffers from a significant issue of \u201chigh sensitivity\u201d for learned hash-form category descriptors and thus produces a significantly inaccurate number of categories as well as unsatisfied performance. As shown in Fig. 1 (e), this drawback of SMILE is even more severe for fine-grained categories due to the small inter-class variations and large intra-class variations between samples. For example, given two images of the same bird category but with different poses, they commonly share very similar overall features. However, under SMILE, minor variations in a single feature dimension can lead to opposite signs in their hash codes when the feature values are close to zero, classifying these two samples into distinct categories. Moreover, this issue becomes more pronounced as the feature dimensionality increases, as demonstrated in Table 5. ", "page_idx": 0}, {"type": "image", "img_path": "seYXqfGT0q/tmp/e3be6a3ec522639df3eb13480dfee5cfa690c1cd451e1f3931602902c4503410.jpg", "img_caption": ["Figure 1: (a) Schema of Offilne Category Discovery task (e.g., NCD [5] and GCD [8]). (b) Schema of On-the-fly Category Discovery task [12], studied in this paper. (c) Previous work (e.g., SMILE [12]) based on instance-level hash encoding. (d) Our PHE explores prototype-based hash encoding. (e) Performance comparison of PHE and SMILE and observation about \u201cHigh Sensitivity\u201d. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "To address this issue, we propose a new two-stage Prototypical Hash Encoding (PHE) framework to improve the intra-class compactness and inter-class separation of category descriptors while alleviating information loss due to dimension reduction. PHE is composed of Category-aware Prototype Generation (CPG) and Discriminative Category Encoding (DCE). First, CPG utilizes prototype-based interpretable classification models to learn multiple prototypes for each category and yields sparse representations with a probabilistic masking strategy. Then, DCE explicitly maps the prototypes of each category to corresponding category hash centers. By imposing hash codes approaching their hash centers, OCD models are encouraged to produce more accurate hash codes. Meanwhile, we design a center separation loss to ensure that different category hash centers maintain at least a Hamming distance of $d_{m a x}$ , where the $d_{m a x}$ is derived from Gilbert-Varshamov bound in coding theory, as illustrated in Fig. 1 (d). Finally, we design a tailor-made OCD model inference method based on a relaxed Hamming ball condition. Overall, the two-stage PHE framework enables OCD models to maintain the discriminabilities learned in high-dimension feature space and transfer them into low-dimensional encoding space, thereby enhancing accuracy for both seen and unseen categories. Extensive experiments conducted across multiple fine-grained benchmarks demonstrate that our approach substantially outperforms the SMILE architecture (see Fig. 1 (e)). Our contributions are summarized as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 We propose a new PHE framework to explicitly generate prototypical hash centers, which is beneficial for improving the intra-class compactness and the inter-class separation of hash codes. Our PHE can effectively alleviate the \u201chigh sensitivity\u201d issue of hash-based OCD methods. \u2022 We design a tailor-made center separation loss to further improve the discriminability of hash centers by constraining a minimal separation distance derived from coding theory [14]. We also provide visual analyses to better understand the underlying mechanism of our PHE. \u2022 Experiments on eight fine-grained datasets show that our method outperforms previous methods by a large margin, i.e., $+5.3\\%$ improvement averaged on all datasets for all class accuracy. ", "page_idx": 1}, {"type": "text", "text": "2 Related Works ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Novel Category Discovery (NCD), initially introduced by DTC [5], aims to categorize unlabeled novel classes by transferring knowledge from labeled known classes. However, existing NCD methods [5, 6, 7] assume that all unlabeled data exclusively belong to novel classes. Generalized Category Discovery (GCD) is proposed in [8], allowing unlabeled data to be sampled from both novel and known classes. While existing NCD/GCD methods [6, 7, 8, 9, 13, 15, 16] have shown promising results, two key assumptions still impede their real-world application. Firstly, these models heavily rely on a predetermined query set (the unlabeled dataset) during training, limiting their ability to handle truly novel samples and hindering generalization. Secondly, the offline batch processing of the query set during inference makes these models impractical for online scenarios where data emerges continuously and the model requires instant feedback. To address these limitations, Du et al. introduced the On-the-Fly Category Discovery (OCD) [12], which removes the assumption of a predefined query set and requires instance feedback with stream data input. They proposed the SMILE method, which identifies the category of each instance by the signature of its representation (a hash-form code). The comparison among different settings is shown in Table 1. ", "page_idx": 2}, {"type": "text", "text": "In this paper, we address the \u201chigh sensitivity\u201d issue associated with hash-based category descriptors in SMILE, particularly in fine-grained scenarios. We encode category prototypes into hash centers, ensuring maximal separation between these centers. Additionally, we employ Hamming balls centered on these hash centers to represent each category, effectively mitigating the \u201chigh sensitivity\u201d issue. Table 1: Comparison between different category discovery settings. \u2217indicates that the number of new classes (Cls) is set as the ground-truth or previously estimated. ", "page_idx": 2}, {"type": "table", "img_path": "seYXqfGT0q/tmp/1f5d7bc01340793ca6c66467810b35418bb4de14297bf026184e09bed7fc4802.jpg", "table_caption": [], "table_footnote": [], "page_idx": 2}, {"type": "text", "text": "Deep Hashing is a popular method for large-scale image retrieval. It uses deep neural networks to learn a hash function that converts samples into fixed-length binary codes, ensuring similar samples share similar codes. Early methods, such as HashNet [17], DPSH [18], and DSH [19], optimize hash functions based on pairwise similarities or triplet-based similarities. Both approaches suffer from low training efficiency and insufficient data distribution coverage. By defining points as hash centers that are sufficiently spaced apart, methods like DPN [20], OrthoHash [21], and CSQ [22] largely enhance training efficiency and retrieval accuracy. However, in the worst case, hash centers derived from these methods can be arbitrarily close. To address this, Wang et al. [23] introduce the Gilbert-Varshamov bound from coding theory to ensure a large minimal distance between hash centers. ", "page_idx": 2}, {"type": "text", "text": "Drawing inspiration from deep hash methods, we employ a hash center-based approach for category encoding. Unlike deep hashing methods used in image retrieval tasks [22, 23], which rely on predefined center points, our method generates category-specific hash centers directly from category prototypes. This adaptation is particularly suitable for the category discovery task. Furthermore, we utilize Hamming balls centered on these hash centers to represent categories, effectively mitigating the \"high sensitivity\" issue associated with using hash-form descriptors in category discovery tasks. ", "page_idx": 2}, {"type": "text", "text": "Prototype-based Interpretable Models. Chen et al. [24] introduce the Prototypical Part Network (ProtoPNet), a model designed for Interpretable classification. ProtoPNet features a set number of prototypical parts per class, enabling clear decision-making process. In addition, ProtoPNet offers a post-hoc analysis, in which it explains decisions for individual images by displaying all prototypes alongside their weighted similarity scores. This method employs multiple prototypes to represent a category, effectively distinguishing subtle differences between categories and demonstrating strong performance in fine-grained classification. Numerous subsequent studies have adapted ProtoPNet for various applications such as medical image processing and explanatory debugging, among others [25, 26, 27, 28, 29]. Later, ProtoPFormer [30] further integrates the Vision Transformer as a backbone, utilizing both global and part prototypes for interpretable image classification. ", "page_idx": 2}, {"type": "text", "text": "In this paper, we utilize prototype-based models for representation learning and prototype acquisition. Unlike existing methods predominantly tailored for closed-set classification, our approach extends to the generation of discriminative hash codes from the learned category prototypes. This extension allows for broader applicability in handling new and unseen categories, i.e., open-set scenarios. ", "page_idx": 2}, {"type": "image", "img_path": "seYXqfGT0q/tmp/9bac5a4ea8923873122c50267c9b12834e7916b42b4aa3c2b02a1479be0893de.jpg", "img_caption": ["Figure 2: Our PHE framework is composed of the CPG and DHC modules. First, CPG generates category-specific prototypes and prototype-guided instance representations. Then, DHC encodes the generated prototypes as hash centers to encourage the model to learn discriminative instance hash codes. Finally, depending on the Hamming distance between instance hash codes and hash centers, we can obtain instant feedback and online group instances into both known and unknown categories. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "3 Prototypical Hash Encoding ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Problem Setup. The setting of OCD is defined as follows. We are provided with a support set, denoted as $\\mathcal{D}_{S}=\\{(\\mathbf{x}_{i},\\mathbf{\\bar{y}}_{i}^{s})\\}_{i=1}^{M}\\subseteq\\bar{\\mathcal{X}}\\times\\mathcal{Y}_{S}$ for training, and a query set, denoted as $\\begin{array}{r}{\\mathcal{D}_{Q}=\\bar{\\left\\{(\\mathbf{x}_{i},y_{i}^{q})\\right\\}_{i=1}^{N}}\\subseteq}\\end{array}$ $\\mathcal{X}\\times\\mathcal{Y}_{Q}$ for testing. Here, $M$ and $N$ represent the number of samples in $\\mathcal{D}_{S}$ and $\\mathcal{D}_{Q}$ , respectively. $y_{S}$ and $\\mathcal{y}_{Q}$ are the label spaces for the support set and query set, respectively, where $\\dot{\\mathcal{D}}_{S}\\subseteq\\mathcal{D}_{Q}$ . We define classes in $y_{S}$ as known/old classes and classes in $y_{Q}/{\\mathfrak{V}}_{S}$ as unknown/new classes. Only the support set $\\mathcal{D}_{S}$ is used for model training. During testing, $\\mathcal{D}_{Q}$ includes samples from both known and unknown categories, which are inferred one by one, allowing for instant/online feedback. ", "page_idx": 3}, {"type": "text", "text": "Framework Overview. To achieve accurate and online category discovery, we design a Prototypical Hash Encoding (PHE) framework, which mainly consists of a Category-aware Prototype Generation (CPG) module and a Discriminative Hash Encoding (DHE) module, as illustrated in Fig. 2. CPG aims at modeling diverse intra-category information and generating category-specific prototypes for representing fine-grained categories. DHE leverages generated prototypical hash centers to further facilitate discriminative hash code generation. Finally, based on a theoretically derived bounding of the Hamming ball, we can determine the under-discovered category of instance and acquire instant feedback. ", "page_idx": 3}, {"type": "text", "text": "3.1 Category-aware Prototype Generation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "SMILE [12] directly utilizes instance-level supervised contrastive learning on low-dimensional hash features for simultaneous representation learning and category encoding. This approach may result in inadequate representation learning, as low-dimensional features struggle to capture complex data structures and patterns, especially in challenging fine-grained scenarios (see Table 10). ", "page_idx": 3}, {"type": "text", "text": "To solve this issue, we choose to perform representation learning upon the high-dimensional features instead of the low-dimensional hash features. Specifically, given a batch of input images, X, the image features are denoted as $\\mathbf{Z}\\,=\\,\\mathcal{H}_{f}(\\mathcal{E}(\\mathbf{X}))\\,\\in\\,\\mathbb{R}^{N\\times\\hat{L}}$ , where $\\mathcal{E}$ represents the backbone, $\\mathcal{H}_{f}$ denotes a linear head, and $\\hat{L}$ represents the feature dimension. We use a prototype layer $g_{\\mathbf{p}}$ to transform $\\mathbf{Z}$ into a similarity score vector $\\textbf{s}\\in\\mathbb{R}^{m}$ , with $g_{\\mathbf{p}}$ containing $m$ learnable prototypes $\\{\\mathbf{p}_{1},\\mathbf{p}_{2},\\dots,\\mathbf{p}_{m}\\}$ . In the design of the prototype layer, CNN-based methods [24] typically utilize the maximum pooled value from the similarity map, which is calculated between the feature map and the prototype, as the similarity score. In this paper, to align with the Vision Transformer (ViT) [4] backbone commonly-used in OCD, we propose to employ its cls token to compute the prototype similarity score, inspired by ProtopFormer [30]. The similarity score $\\mathbf{s}_{i j}$ for the $i^{\\th}$ -th sample to the $j$ -th prototype is calculated as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{s}_{i\\rightarrow j}=g_{\\mathbf{p}_{j}}(\\mathbf{z}_{i})=\\log\\big(\\frac{||\\mathbf{z}_{i}-\\mathbf{p}_{j}||_{2}^{2}+1}{||\\mathbf{z}_{i}-\\mathbf{p}_{j}||_{2}^{2}+\\epsilon}\\big),\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\epsilon$ is a small constant for numerical stability. ", "page_idx": 3}, {"type": "text", "text": "Probabilistic Masking Strategy. To encourage models to fully capture intra-category diversity, we assign $k$ prototypes equally to each category, thus $m=k*|\\mathcal{D}_{S}|$ . Given the prototype similarity score to all prototypes in the prototype layer of $i$ -th image $\\mathbf{s}_{i}\\;=\\;[\\mathbf{s}_{i\\rightarrow1},\\mathbf{s}_{i\\rightarrow2},...,\\bar{\\mathbf{s}_{i\\rightarrow m}}]$ , a fully connected layer (FC) is employed for supervised classification. To further discretize the prototypes, avoid redundancy, and unleash the full potential of the prototypes, we utilize a probabilistic masking strategy. This strategy masks some units of the similarity score according to probability, thereby disabling the corresponding prototypes and leaving the remaining prototypes activated during training. Specifically, for each unit of similarity score $\\mathbf{s}_{i}$ , we mask it with a probability following the Bernoulli distribution $B(\\theta)$ , with $\\theta$ empirically set to 0.1. We use the following loss function to learn the image representations and prototypes: ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{p}=\\frac{1}{|B|}\\sum_{i\\in B}\\ell(\\pmb{y}_{i},F C(\\pmb{\\mathscr{B}}(\\theta)\\cdot\\mathbf{s}_{i})),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $B$ indicates the mini-batch of support set, $\\ell$ is the traditional cross-entropy loss and $\\pmb{y}_{i}$ is the ground truth of image $\\mathbf{x}_{i}$ . ", "page_idx": 4}, {"type": "text", "text": "Discussion. The benefits of our CPG module are threefold: i) Fine-Grained Category Distinction: Fine-grained categories often exhibit only subtle differences. Our CPG module allows for representing a category with multiple prototypes, which can effectively capture and model both intra-class similarities and inter-class variances. ii) Category-specific Hash Center Generation: Based on the generated category prototypes of CPG, we further map them into low-dimensional hash features to serve as hash centers for each category. This helps in maintaining the distinctiveness of each category in the encoding space. iii) A New perspective for Classification Analysis: Beyond merely using hash encoding for category decisions, we can introduce a new prototype perspective for classification analysis. CPG enables a visualizable reasoning process for classifying unseen categories, providing a more intuitive and interpretable method for understanding category distinctions. ", "page_idx": 4}, {"type": "text", "text": "3.2 Discriminative Hash Encoding ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Category Encoding Learning. Given the set of learned category prototypes $P_{c_{i}}$ for category $c_{i}$ in CPG, we map the mean vector of each category\u2019s prototypes $\\bar{\\sum P_{c_{i}}}/k$ to its hash center, denoted as $\\mathbf{h}_{i}=\\mathcal{H}_{h}(\\sum P_{c_{i}}/k)\\in\\mathbb{R}^{L}$ , where $\\mathcal{H}_{h}$ represents a linear head and $L$ represent the feature dimension. The image feature $\\mathbf{z}_{i}$ is mapped to a hash feature ${\\bf b}_{i}$ , where $\\mathbf{b}_{i}=\\mathcal{H}_{h}(\\mathbf{z}_{i})$ . To ensure that image representations of the same category as closely as possible share the same category descriptor, we constrain each hash feature to be close to its corresponding category hash center and distant from other hash centers. We employ the following loss to optimize the hash features of the images: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{f}=\\frac{1}{|B|}\\sum_{i\\in B}\\ell(\\pmb{y}_{i},s i m(\\mathbf{b}_{i},\\mathbf{h})),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $s i m(\\mathbf{b}_{i},\\mathbf{h})$ represents a pair-wise similarity vector consisting of the cosine similarities between the hash feature of image $\\mathbf{x}_{i}$ and all hash centers. ", "page_idx": 4}, {"type": "text", "text": "Hash Centers Optimization. Due to the subtle differences between fine-grained categories, different category hash centers may become closely similar or even share identical hash codes. This hinders separability between fine-grained categories and leads to incorrect classification results. Therefore, we aim to maximize the differences between hash centers for enhancing inter-class separation. ", "page_idx": 4}, {"type": "text", "text": "Given the hash center $\\mathbf{h}_{i}$ of category $c_{i}$ , we denote its hash code as $\\hat{\\mathbf{h}}_{i}$ , where $\\hat{\\mathbf{h}}_{i}=s i g n(\\mathbf{h}_{i})$ and $s i g n(\\cdot)$ equals $1/{-}1$ for positive/negative values. Since the sign function is non-differentiable, we use a smoothed version of the sign function for back-propagation during training, defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\ns i g n^{*}(a)\\approx\\frac{e^{a\\times\\tau}-e^{-a\\times\\tau}}{e^{a\\times\\tau}+e^{-a\\times\\tau}},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\tau$ is a hyper-parameter that controls the smoothness of the sign function. Larger values of $\\tau$ make the function more closely approximate the true sign function. In this paper, we set $\\tau=3$ . Consequently, $\\hat{\\mathbf{h}}_{i}=s i g n^{*}(\\mathbf{h}_{i})$ . The difference between the $i$ -th and $j$ -th hash centers can be evaluated by the Hamming distance of their hash codes: $\\begin{array}{r}{\\vert\\vert\\hat{\\mathbf{h}}_{i}-\\hat{\\mathbf{h}}_{j}\\vert\\vert_{H}=\\frac{L-\\hat{\\mathbf{h}}_{i}\\cdot\\hat{\\mathbf{h}}_{j}}{2}}\\end{array}$ L\u2212h\u02c6i\u00b7h\u02c6j. Although we aim to maximize the differences between hash centers, we cannot simply increase the Hamming distance between all hash centers, as this can lead to model non-convergence. Since the encoding space is fixed, excessively distancing one hash code can inadvertently bring it closer to another. ", "page_idx": 4}, {"type": "text", "text": "We design a center separation loss, $\\mathcal{L}_{s e p}$ , to ensure that the Hamming distance between any two hash centers is greater than or equal to $d$ , denoted as $||\\hat{\\mathbf{h}}_{i}-\\hat{\\mathbf{h}}_{j}||_{H}\\geq d$ . The center separation loss is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{s e p}=\\sum_{i}\\sum_{j}\\operatorname*{max}(0,d-||\\hat{{\\mathbf{h}}}_{i}-\\hat{{\\mathbf{h}}}_{j}||_{H}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Input: Test data (query set) $\\mathcal{D}_{Q}$ contains both known and unknown categories, trained PHE model contains { backbone $\\mathcal E(\\cdot)$ , linear projector $\\mathcal{H}_{f}(\\cdot)$ , prototype layer $g_{\\mathbf{p}}(\\cdot)$ and linear projector $\\mathcal{H}_{h}(\\cdot)\\$ }, $d_{m a x}$ . 1 Compute hash centers $\\hat{\\mathbf{h}}$ for known categories ; // Hash Centers 2 Compute Hamming ball radius $\\begin{array}{r}{\\mathcal{R}=\\operatorname*{max}(\\lfloor\\frac{d_{m a x}}{2}\\rfloor,1)}\\end{array}$ ; 3 Build a category list $\\mathcal{C}_{H}$ , add $\\hat{\\mathbf{h}}$ to $\\mathcal{C}_{H}$ ; 4 for each image $\\mathbf{x}_{i}\\in\\mathcal{D}_{Q}$ do 5 Compute hash code $\\hat{\\mathbf{b}}_{i}=s i g n(\\mathcal{H}_{h}(\\mathcal{H}_{f}(\\mathcal{E}(\\mathbf{x}_{i}))))$ ; // Category Descriptor 6 for hash center $\\hat{\\mathbf{h}}_{j}\\in\\mathcal{C}_{H}$ do 7 Compute Hamming distance $||\\hat{\\mathbf{b}_{i}}-\\hat{\\mathbf{h}_{j}}||_{H}$ ; 8 if $\\|\\hat{\\mathbf{b}}_{i}-\\hat{\\mathbf{h}}_{j}\\|_{H}\\leq\\mathcal{R}$ then Output pred ${\\hat{y}}_{i}={\\mathcal{C}}_{H}\\,.\\mathrm{index}({\\hat{\\mathbf{h}}}_{j})\\;;$ // Close to a known category 10 $/*$ Different from existing categories $^{*}\\!/$ ; 11 Add $\\hat{\\mathbf{b}_{i}}$ to ${\\mathcal{C}}_{H}$ ; // Create a new category 12 Output pred $\\hat{y}_{i}=|\\mathcal{C}_{H}|$ ; ", "page_idx": 5}, {"type": "text", "text": "indicating that we only optimize the pairs of hash centers whose Hamming distance is less than $d$ However, determining the appropriate value of $d$ is challenging. If $d$ is too large, it can lead to model non-convergence; if it is too small, it can cause inadequate separation between hash centers. We choose a maximum $d_{m a x}$ according to the Gilbert-Varshamov bound [14] in coding theory, as stated in Lemma 3.1. ", "page_idx": 5}, {"type": "text", "text": "Lemma 3.1 For binary symbols, there exists a set of hash codes of length $L,$ $\\{-1,1\\}^{L}$ , with $a$ minimum Hamming distance $d_{:}$ , and a number of hash codes $\\mathcal{Q}$ that satisfies the following inequality: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{Q}\\geq\\frac{2^{L}}{\\sum_{i=0}^{d-1}\\binom{L}{i}}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Therefore, given a number of hash codes equal to $|\\mathcal{Y}_{S}|$ , the maximum $d_{m a x}$ can be determined as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\left\\{|\\mathcal{V}_{S}|\\geq\\frac{2^{L}}{\\sum_{i=0}^{d_{m a x}-1}{\\binom{L}{i}}},\\right.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We apply this upper bound $d_{m a x}$ to $\\mathcal{L}_{s e p}$ . Considering that we use a smoothed version of the sign function, where computed values do not equate to precisely $\\pm1$ , we impose a quantization loss to constrain the values of hash codes to be close to $\\pm1$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{q}=\\sum_{i}(1-|\\hat{\\mathbf{h}}_{i}|).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The optimization loss $\\mathcal{L}_{c}$ for hash centers is defined as a combination of the center separation loss $\\mathcal{L}_{s e p}$ and the quantization loss $\\mathcal{L}_{q}$ : ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{c}=\\mathcal{L}_{s e p}+\\mathcal{L}_{q}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "3.3 Training and Inference ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Model Training. During the model training process, the total loss is formulated as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}=\\mathcal{L}_{p}+\\alpha*\\mathcal{L}_{c}+\\beta*\\mathcal{L}_{f},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\alpha$ and $\\beta$ control the importance of center optimization and hash encoding, respectively. ", "page_idx": 5}, {"type": "text", "text": "Hamming Ball Based Model Inference. During on-the-fly testing, given an input image $x_{i}$ in the query set $D_{Q}$ , we use $\\hat{\\mathbf{b}}_{i}=s i g n(\\mathcal{H}_{h}(\\mathcal{H}_{f}(\\mathcal{E}(\\mathbf{x}_{i}))))$ as its category descriptor. Due to the introduction of the center separation loss, the Hamming distance between any two hash centers is not less than $d_{m a x}$ . We consider a Hamming ball centered on the hash centers with a radius of $\\operatorname*{max}(\\lfloor\\frac{d_{m a x}}{2}\\rfloor,1)$ to represent a category. Specifically, during inference, if the Hamming distance between $\\hat{\\mathbf{b}}_{i}$ and any existing hash center is less than or equal to $\\operatorname*{max}(\\lfloor\\frac{d_{m a x}}{2}\\rfloor,1)$ , we classify the image as belonging to the corresponding category of that hash center. Otherwise, the image is used to establish a new hash center and category. The pseudo-code for the inference is provided in Algorithm 1. ", "page_idx": 5}, {"type": "text", "text": "4 Experiment ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "4.1 Experiment Setup ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Datasets. We have conducted experiments on eight fine-grained datasets, including CUB-200 [31], Stanford Cars [32], Oxford-IIIT Pet [33], Food-101 [34], and four super-categories from the more challenging dataset, iNaturalist [35], including Fungi, Arachnida, Animalia, and Mollusca. Following the setup in OCD [12], the categories of each dataset are split into subsets of seen and unseen categories. Specifically, $50\\%$ of the samples from the seen categories are used to form the labeled set $\\mathcal{D}_{S}$ for training, while the remainder forms the unlabeled set $\\mathcal{D}_{Q}$ for on-the-fly testing. Detailed information about the datasets used is provided in the Appendix. A.1. ", "page_idx": 6}, {"type": "text", "text": "Evaluation Metrics. We follow Du et al. [12] and adopt clustering accuracy as an evaluation protocol, formulated as $\\begin{array}{r}{A C C=\\frac{1}{|\\mathcal{D}_{Q}|}\\sum_{i=1}^{|\\mathcal{D}_{Q}|}\\mathbb{I}(y_{i}=C(\\overline{{y}}_{i}))}\\end{array}$ , where $\\overline{{y}}_{i}$ represents the predicted labels and $y_{i}$ denotes the ground truth. The function $C$ denotes the optimal permutation that aligns predicted cluster assignments with the actual class labels. ", "page_idx": 6}, {"type": "text", "text": "Implementation Details. For a fair comparison, we follow OCD [12] and use the DINO-pretrained ViT-B-16 [36] as the backbone. During training, only the final block of ViT-B-16 is fine-tuned. In our approach, the Projector $\\mathcal{H}_{f}(\\cdot)$ is a single linear layer with an output dimension set to $\\hat{L}=768$ , meaning the feature dimension and prototype dimension are equal to 768. Each category has $k=10$ prototypes. The FC layer in Eq. 2 is non-trainable, which uses positive weights 1 for prototypes from the same category and negative weights $-0.5$ for prototypes from different categories. The Projector $\\mathcal{H}_{h}(\\cdot)$ consists of three linear layers with an output dimension set to $L\\,=\\,12$ , which produces $2^{12}=4096$ binary category encodings. By default, we follow OCD to set this dimension for fair comparison. Additional experiments with varying $L$ are reported in Sec. 4.4. The estimated values of $d_{m a x}$ in center separation loss $\\mathcal{L}_{s e p}$ can be found in Appendix. A.2. The ratio $\\alpha$ and $\\beta$ in the total loss are set to 0.1 and 3, respectively, for all datasets. More details and the pseudo-code for the training process can be found in the Appendix. A.2. ", "page_idx": 6}, {"type": "text", "text": "Compared Methods. Given that OCD is a relatively new task requiring instantaneous inference, traditional baselines from NCD and GCD are unsuitable for this setting. Consequently, we compared with the SMILE [12] along with three strong competitors in [12]: i) Sequential Leader Clustering (SLC) [37]: A classical clustering technique suitable for sequential data. ii) Ranking Statistics (RankStat) [38]: RankStat utilizes the top-3 indices of feature embeddings as category descriptors. iii) Winner-take-all (WTA) [39]: WTA employs indices of maximum values within feature groups as category descriptors. These three strong baselines are set following SMILE [12], and detailed implementation can be found in the Appendix. A.3. ", "page_idx": 6}, {"type": "text", "text": "4.2 Comparison with State of the Art ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We conduct comparison experiments with the aforementioned competitors across eight datasets. The experimental results are reported in Table 2. It is evident that the proposed PHE outperforms all state-of-the-art competitors across nearly all metrics. In particular, when compared with three strong baselines\u2014SLC, RankStat, and WTA\u2014our method demonstrates significant improvements. Additionally, our method surpasses the top competitor, SMILE, by an average of $5.4\\%$ in All classes accuracy on four common fine-grained datasets, and by an average of $5.1\\%$ in All classes accuracy on the four challenging datasets from the iNaturalist dataset. We achieve an average improvement of $11.3\\%$ on Old classes across the eight datasets compared to SMILE, demonstrating the effectiveness of our method in alleviating the \u201chigh sensitivity\u201d issue of hash-based OCD methods. Importantly, our method consistently improves accuracy for unseen/new classes compared to SMILE. For instance, we achieve a $4.1\\%$ improvement on CUB-200 and a $4.4\\%$ improvement on the Oxford Pets dataset for new classes. This demonstrates that our method exhibits stronger generalization capabilities to new classes compared to SMILE. This advantage becomes more pronounced as the dimensionality $L$ of hash features increases, as discussed in Sec. 4.4. ", "page_idx": 6}, {"type": "text", "text": "4.3 Ablation Study ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Components Ablation. We report an ablation analysis of the proposed components in our PHE on CUB dataset and Stanford Cars dataset, as shown in Table 3. \u201cWithout $\\mathcal{L}_{p}$ \u201d refers to the removal of the representation learning in CPG, where we use randomly initialized vectors which are further mapped to hash centers. This configuration results in an average reduction of $1.95\\%$ in All classes accuracy across the two datasets. This variant of PHE shares the same architecture as SMILE, achieving clear decline on both datasets, demonstrating the effectiveness of our hash center-based category encoding method. It is noteworthy that removing $\\mathcal{L}_{c}$ causes a significant performance reduction, especially in seen categories\u2014for instance, a $12.4\\%$ decrease in CUB. This decline is due to the lack of $\\mathcal{L}_{c}$ , which results in insufficient separation of hash centers, causing multiple old classes to share the same hash encoding and thereby being classified as the same. Additionally, removing $\\mathcal{L}_{p}$ also leads to performance degradation. This is because the hash encodings of features are not sufficiently close to the hash centers, resulting in inadequate learning of hash features. ", "page_idx": 6}, {"type": "table", "img_path": "seYXqfGT0q/tmp/65950333383a995f53a8925301ece80378f400b14983f0820d21a0f1785c8c6d.jpg", "table_caption": ["Table 2: Comparison with the State of the Art methods. The best results are marked in bold, and the second best results are marked by underline. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "seYXqfGT0q/tmp/638c60411941ed5e9799d14f3b4e4566358940b888e6d5405b17b4b8928055f8.jpg", "table_caption": ["Table 3: Ablation study on training components. The best results are marked in bold. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "seYXqfGT0q/tmp/41ee8c3cf63de0e032490a46947781225f0d29e662f69b4675a683ea3298bbc2.jpg", "table_caption": ["Table 4: Ablation study on training strategy. The best results are marked in bold. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Strategy Ablation. In Table 4, we evaluate the training strategies of our method. \u201cFixed-h\u201d refers to the use of handcrafted hash points that satisfy Eq. 7. Although this design maintains separation between hash centers, it may alter the relationships between categories learned in CPG, leading to sub-optimal outcomes. \u201cLinear Cls.\u201d and \u201cSupcon Cls.\u201d represent the use of simple linear classification and supervised contrastive learning classification methods for representation learning, respectively, where \u201cFixed- $\\mathbf{\\nabla}\\cdot\\mathbf{h}^{\\star}$ is also applied due to the absence of category prototypes. Although these variants perform well on seen categories, their generalization capabilities are inferior to our full prototype-based method. This demonstrates the importance of integrating prototype learning to enhance generalization across unseen categories. ", "page_idx": 7}, {"type": "text", "text": "4.4 Evaluation ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Evaluation on Hash Code Length. The hash code length $L$ is crucial for category inference as it directly determines the size of the prediction space, which equals to $2^{L}$ . A larger $L$ value results in a greater number of category encodings, making the \u201chigh sensitivity\u201d issue more severe. We evaluate our method and SMILE with different hash code lengths in Table 5. When small changes occur to $L$ (from 12 to 16), SMILE demonstrates stable results. However, with $L=32$ , SMILE experiences a decrease in average all-classes accuracy by $5.1\\%$ on two datasets, and with $L=64$ , the decrease is by $10.2\\%$ averaged on the two datasets. In contrast, our method, which employs hash center-based ", "page_idx": 7}, {"type": "text", "text": "Table 5: Results with different hash code length $L$ . The best results are marked in bold for each $L$ . ", "page_idx": 8}, {"type": "table", "img_path": "seYXqfGT0q/tmp/d604cfed6c0c74a50ac2ad36a5ba7d476f2ea1be4bc339055382d7850207ea5d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "seYXqfGT0q/tmp/91159d4728c33118329c5d26d802e1e861d6c34ccaf2adb4f3f8c2d9bcf43eec.jpg", "img_caption": ["Figure 3: Case Study: Why is a Grasshopper Sparrow classified as a new category? "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "optimization and a Hamming ball-based inference process, effectively mitigates the \u201chigh sensitivity\u201d issue and maintains stable performance as $L$ increases. Furthermore, when $L$ is increased from 16 to 64, the estimated number of classes by SMILE increased by 1986 on the CUB dataset and 3892 on the Stanford Cars dataset, underscoring the impact of \u201chigh sensitivity\u201d of hash-form category descriptors on accuracy. Conversely, our method exhibits remarkable stability. ", "page_idx": 8}, {"type": "text", "text": "Visualization Analysis. We use an images from the support set whose latent representations is most similar to $\\mathbf{p}_{j}$ as the visualization for ${\\bf p}_{j}$ . During on-the-fly inference, the hash code functions as the category descriptor. Additionally, the learned prototypes allow us to visually analyze why the model categorizes certain samples into known or unknown categories. Fig. 3 illustrates this reasoning process from the prototype perspective. On the left, an image labeled in green depicts a Le Conte Sparrow, a category recognized during training. Under it, a red-labeled image represents a Grasshopper Sparrow, a new category. In the center, we display the visualization of the prototypes, showing only five per class. The top five prototypes most similar to the green-labeled image are exclusively associated with the Le Conte Sparrow category, while those closest to the red-labeled, unseen image span two different categories. The Grasshopper Sparrow exhibits significant body stripe similarities to the Le Conte Sparrow and shares head similarities with the Horned Lark. Upon calculating similarities with the top five activated prototypes, the similarity score for the green-labeled image to the Le Conte Sparrow category is 9.0, whereas the unseen Grasshopper Sparrow achieves a similarity of 3.32 with the Le Conte Sparrow and 3.54 with the Horned Lark. This reasoning process is similar to how humans cognitively recognize new species. Given a new species, we use the characteristics of known categories to describe the unknown new category. Consequently, an entity that exhibits high similarity to multiple known categories, rather than only one known category, is likely to be classified as a previously unseen species. ", "page_idx": 8}, {"type": "text", "text": "Hyper-parameters Analysis. 1) The impact of the ratios $\\alpha$ and $\\beta$ in Eq. 10 is illustrated in Fig. 4. We use All classes accuracy as the evaluation metric. $\\alpha$ and $\\beta$ control the relative importance of $\\mathcal{L}_{c}$ and $\\mathcal{L}_{f}$ during the training process, respectively. A lower value of $\\alpha$ is found to be preferable, as higher values can lead to excessive changes in hash centers, thereby affecting training stability. ", "page_idx": 8}, {"type": "image", "img_path": "seYXqfGT0q/tmp/0ab93ed88c1a7afee67666c5ec2ce579673ffe35f1cfbb967d2a4f8b95074088.jpg", "img_caption": ["Figure 4: Impact of hyper-parameters. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Regarding $\\beta$ , the results are generally stable; however, higher values show improved performance across both datasets. Consequently, we selected $\\alpha=0.1$ and $\\beta=3$ for all datasets during training. 2) Additionally, we examine the impact of the number of prototypes per class on the CUB and Stanford Cars datasets, as shown in Fig. 4. When only one prototype per class is used, performance is suboptimal, as it fails to effectively represent the complexity of a category. For instance, a single bird species might exhibit different behaviors, such as flying or standing, that are not adequately captured by a single prototype. More prototypes allow for a better expression of the nuances within a category, which is crucial in fine-grained classification. Therefore, we opt to utilize 10 prototypes per class across all datasets. ", "page_idx": 9}, {"type": "text", "text": "Hash Centers Analysis. We conduct an analysis of the distribution of hash centers before and after ", "page_idx": 9}, {"type": "text", "text": "training to further evaluate the impact of the proposed hash center optimization loss, $\\mathcal{L}_{c}$ . Specifically, we analyze the Hamming distances between hash centers on the CUB dataset. As depicted in Fig. 5, prior to training, the hash centers, derived from randomly initialized prototypes, are distributed relatively uniformly. Notably, some centers exhibit a Hamming distance of zero, indicating multiple centers sharing a single hash code. After training, the Hamming distance between all hash centers is at least $d_{m a x}$ . This significant improvement demonstrates the effectiveness of $\\mathcal{L}_{c}$ in en", "page_idx": 9}, {"type": "image", "img_path": "seYXqfGT0q/tmp/6810e0ff79fa560a70e24e9ea32a58f3402942dd18cce2de0d5514bf172e077b.jpg", "img_caption": ["Figure 5: Evolution of hash centers distribution during the training process. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "suring that multiple categories do not share identical hash codes or reside excessively close to one another. ", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we introduce a Prototypical Hash Encoding (PHE) framework for fine-grained On-thefly Category Discovery. Addressing the limitations of existing methods, which struggle with the high sensitivity of hash-form category descriptors and suboptimal feature representation, our approach incorporates a prototype-based classification model. This model facilitates robust representation learning by developing multiple prototypes for each fine-grained category. We then map these category prototypes to corresponding hash centers, optimizing image hash features to align closely with these centers, thereby achieving intra-class compactness. Additionally, we enhance inter-class separation by maximizing the distance between hash centers, guided by the Gilbert-Varshamov bound. Experiments on eight fine-grained datasets demonstrate that our method outperforms previous methods by a large margin. Moreover, a visualization study is provided to understand the underlying mechanism of our method. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement. This work has been supported by the National Natural Science Foundation of China (62402157), the MUR PNRR project FAIR (PE00000013) funded by the NextGenerationEU, the EU Horizon project ELIAS (No. 101120237), the MUR PNRR project iNEST-Interconnected Nord-Est Innovation Ecosystem (ECS00000043) funded by the NextGenerationEU, and the EU Horizon project AI4Trust (No. 101070190). ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classification with deep convolutional neural networks. Communications of the ACM, 60(6):84\u201390, 2017.   \n[2] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2016.   \n[3] Gao Huang, Zhuang Liu, Laurens Van Der Maaten, and Kilian Q Weinberger. Densely connected convolutional networks. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2017. [4] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, and Neil Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale. In 9th International Conference on Learning Representations, ICLR 2021, Virtual Event, Austria, May 3-7, 2021, 2021. [5] Kai Han, Andrea Vedaldi, and Andrew Zisserman. Learning to discover novel visual categories via deep transfer clustering. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 8401\u20138409, 2019. [6] Zhun Zhong, Enrico Fini, Subhankar Roy, Zhiming Luo, Elisa Ricci, and Nicu Sebe. Neighborhood contrastive learning for novel class discovery. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10867\u201310875, 2021.   \n[7] Enrico Fini, Enver Sangineto, St\u00e9phane Lathuili\u00e8re, Zhun Zhong, Moin Nabi, and Elisa Ricci. A unified objective for novel class discovery. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 9284\u20139292, 2021.   \n[8] Sagar Vaze, Kai Han, Andrea Vedaldi, and Andrew Zisserman. Generalized category discovery. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 7492\u20137501, 2022. [9] Nan Pu, Zhun Zhong, and Nicu Sebe. Dynamic conceptional contrastive learning for generalized category discovery. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2023.   \n[10] Nan Pu, Wenjing Li, Xingyuan Ji, Yalan Qin, Nicu Sebe, and Zhun Zhong. Federated generalized category discovery. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 28741\u201328750, 2024.   \n[11] Haiyang Zheng, Nan Pu, Wenjing Li, Nicu Sebe, and Zhun Zhong. Textual knowledge matters: Cross-modality co-teaching for generalized visual class discovery. arXiv preprint arXiv:2403.07369, 2024.   \n[12] Ruoyi Du, Dongliang Chang, Kongming Liang, Timothy Hospedales, Yi-Zhe Song, and Zhanyu Ma. On-the-fly category discovery. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11691\u201311700, 2023.   \n[13] Xin Wen, Bingchen Zhao, and Xiaojuan Qi. Parametric classification for generalized category discovery: A baseline study. In Proceedings of the IEEE/CVF International Conference on Computer Vision, 2023.   \n[14] Rom Rubenovich Varshamov. Estimate of the number of signals in error correcting codes. Docklady Akad. Nauk, SSSR, 117:739\u2013741, 1957.   \n[15] Florent Chiaroni, Jose Dolz, Ziko Imtiaz Masud, Amar Mitiche, and Ismail Ben Ayed. Parametric information maximization for generalized category discovery. In Proceedings of the IEEE/CVF International Conference on Computer Vision, 2023.   \n[16] Wenbin An, Feng Tian, Qinghua Zheng, Wei Ding, QianYing Wang, and Ping Chen. Generalized category discovery with decoupled prototypical network. In Proceedings of the AAAI Conference on Artificial Intelligence, 2023.   \n[17] Zhangjie Cao, Mingsheng Long, Jianmin Wang, and Philip S Yu. Hashnet: Deep learning to hash by continuation. In Proceedings of the IEEE international conference on computer vision, pages 5608\u20135617, 2017.   \n[18] Wu-Jun Li, Sheng Wang, and Wang-Cheng Kang. Feature learning based deep supervised hashing with pairwise labels. In Subbarao Kambhampati, editor, Proceedings of the Twenty-Fifth International Joint Conference on Artificial Intelligence, IJCAI 2016, New York, NY, USA, 9-15 July 2016, pages 1711\u20131717. IJCAI/AAAI Press, 2016.   \n[19] Haomiao Liu, Ruiping Wang, Shiguang Shan, and Xilin Chen. Deep supervised hashing for fast image retrieval. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 2064\u20132072, 2016.   \n[20] Lixin Fan, Kam Woh Ng, Ce Ju, Tianyu Zhang, and Chee Seng Chan. Deep polarized network for supervised learning of accurate binary hashing codes. In IJCAI, pages 825\u2013831, 2020.   \n[21] Jiun Tian Hoe, Kam Woh Ng, Tianyu Zhang, Chee Seng Chan, Yi-Zhe Song, and Tao Xiang. One loss for all: Deep hashing with a single cosine similarity based learning objective. Advances in Neural Information Processing Systems, 34:24286\u201324298, 2021.   \n[22] Li Yuan, Tao Wang, Xiaopeng Zhang, Francis EH Tay, Zequn Jie, Wei Liu, and Jiashi Feng. Central similarity quantization for efficient image and video retrieval. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 3083\u20133092, 2020.   \n[23] Liangdao Wang, Yan Pan, Cong Liu, Hanjiang Lai, Jian Yin, and Ye Liu. Deep hashing with minimal-distance-separated hash centers. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 23455\u201323464, 2023.   \n[24] Chaofan Chen, Oscar Li, Daniel Tao, Alina Barnett, Cynthia Rudin, and Jonathan K Su. This looks like that: deep learning for interpretable image recognition. Advances in neural information processing systems, 32, 2019.   \n[25] Andrea Bontempelli, Stefano Teso, Katya Tentori, Fausto Giunchiglia, and Andrea Passerini. Concept-level debugging of part-prototype networks. arXiv preprint arXiv:2205.15769, 2022.   \n[26] Jon Donnelly, Alina Jade Barnett, and Chaofan Chen. Deformable protopnet: An interpretable image classifier using deformable prototypes. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10265\u201310275, 2022.   \n[27] Monish Keswani, Sriranjani Ramakrishnan, Nishant Reddy, and Vineeth N Balasubramanian. Proto2proto: Can you recognize the car, the way i do? In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 10233\u201310243, 2022.   \n[28] Meike Nauta, Ron Van Bree, and Christin Seifert. Neural prototype trees for interpretable fine-grained image recognition. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 14933\u201314943, 2021.   \n[29] Jiaqi Wang, Huafeng Liu, Xinyue Wang, and Liping Jing. Interpretable image recognition by constructing transparent embedding space. In Proceedings of the IEEE/CVF international conference on computer vision, pages 895\u2013904, 2021.   \n[30] Mengqi Xue, Qihan Huang, Haofei Zhang, Lechao Cheng, Jie Song, Minghui Wu, and Mingli Song. Protopformer: Concentrating on prototypical parts in vision transformers for interpretable image recognition. arXiv preprint arXiv:2208.10431, 2022.   \n[31] Catherine Wah, Steve Branson, Peter Welinder, Pietro Perona, and Serge Belongie. The caltech-ucsd birds-200-2011 dataset. Computation & Neural Systems Technical Report, 2011.   \n[32] Jonathan Krause, Michael Stark, Jia Deng, and Li Fei-Fei. 3d object representations for finegrained categorization. In Proceedings of the IEEE/CVF International Conference on Computer Vision Workshops, 2013.   \n[33] Omkar M Parkhi, Andrea Vedaldi, Andrew Zisserman, and CV Jawahar. Cats and dogs. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, 2012.   \n[34] Lukas Bossard, Matthieu Guillaumin, and Luc Van Gool. Food-101\u2013mining discriminative components with random forests. In European Conference on Computer Vision, 2014.   \n[35] Grant Van Horn, Oisin Mac Aodha, Yang Song, Yin Cui, Chen Sun, Alex Shepard, Hartwig Adam, Pietro Perona, and Serge Belongie. The inaturalist species classification and detection dataset. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 8769\u20138778, 2018.   \n[36] Mathilde Caron, Hugo Touvron, Ishan Misra, Herv\u00e9 J\u00e9gou, Julien Mairal, Piotr Bojanowski, and Armand Joulin. Emerging properties in self-supervised vision transformers. In Proceedings of the IEEE/CVF International Conference on Computer Vision, 2021.   \n[37] John A Hartigan. Clustering algorithms. John Wiley & Sons, Inc., 1975.   \n[38] Kai Han, Sylvestre-Alvise Rebuff,i Sebastien Ehrhardt, Andrea Vedaldi, and Andrew Zisserman. Autonovel: Automatically discovering and learning novel visual categories. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44(10):6767\u20136781, 2021.   \n[39] Xuhui Jia, Kai Han, Yukun Zhu, and Bradley Green. Joint representation learning and novel category discovery on single-and multi-modal data. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 610\u2013619, 2021. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "Appendix ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A Implementation Details 14   \nA.1 Datasets Details and Evaluation Metric Details 14   \nA.2 Training Details 15   \nA.3 Compared Methods Details 15   \nA.4 Pseudo-code . . 15   \nB Additional Experiment Results and Analysis 16   \nB.1 Error Bars for Main Results . 16   \nB.2 Inference on Different Input Sequences 16   \nB.3 Impact of Feature Dimension on SMILE Performance 17   \nB.4 Comparison with Deep Hash Methods 17   \nB.5 Computational Cost Analysis 17   \nB.6 Training Efficiency Analysis 18   \nB.7 Results of Different Dataset Splits 18   \nB.8 Compared to Prototype Learning Method 18 ", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "C Broader Impact and Limitations Discussion ", "page_idx": 13}, {"type": "text", "text": "19 ", "page_idx": 13}, {"type": "text", "text": "D Additional Visualization Analysis 19 ", "page_idx": 13}, {"type": "text", "text": "A Implementation Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Datasets Details and Evaluation Metric Details ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Dataset Details. As outlined in Table 6, our method is evaluated across multiple benchmarks. We have introduced the iNaturalist 2017 [35] dataset to the On-the-Fly Category Discovery (OCD) task, demonstrating our method\u2019s effectiveness in handling challenging fine-grained datasets. The iNaturalist 2017 dataset, sourced from the citizen science website iNaturalist, consists of 675,170 training and validation images across 5,089 natural fine-grained categories, which include Plantae (plants), Insecta (insects), Aves (birds), and Mammalia (mammals), among others, spread across 13 super-categories. These super-categories exhibit significant intra-category variations, making each a challenging dataset for fine-grained classification. For our evaluation, we selected Fungi, Arachnida, Animalia, and Mollusca as the four super-categories. Following the protocol established in OCD [12], the categories within each dataset are divided into subsets of seen and unseen categories. Specifically, $50\\%$ of the samples from the seen categories are used to form the labeled training set $\\mathcal{D}_{S}$ , while the remainder forms the unlabeled set $\\mathcal{D}_{Q}$ for on-the-fly testing. ", "page_idx": 13}, {"type": "table", "img_path": "seYXqfGT0q/tmp/dac0d7b64d9ec84a978face02cd2a042f4e3ac96a5b8c3a4af6ff9029cbbec6d.jpg", "table_caption": ["Table 6: Statistics of datasets used in our experiments. "], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "Evaluation Metric Details. We employ clustering accuracy, specifically the Strict-Hungarian method as outlined in OCD [12], as our evaluation protocol, a common choice in NCD/GCD tasks. Clusters are ranked by size, and only the top- $|Y_{Q}|$ clusters are retained; others are deemed misclassified. It is crucial to outline our accuracy calculation for old and new classes. We perform the Hungarian assignment once for all categories $\\mathcal{y}_{Q}$ , and subsequently measure classification accuracy for the \"Old\" and \"New\" subsets. This setup follows the protocols in OCD [12] and GCD [12]. ", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "A.2 Training Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Model Training Details. We employ the AdamW optimizer during training, using a learning rate of 1e-4 for the backbone and 1e-3 for the projection head and prototype layer, with a weight decay of 0.05. We train the model for 200 epochs. The batch size is uniformly set at 128 across all datasets for consistent comparisons with leading methods. Training incorporates the use of Exponential Moving Average (EMA). Experiments were conducted using Tesla V100 and 1080Ti GPUs, with results reported as the mean of three runs. ", "page_idx": 14}, {"type": "text", "text": "Calculated $d_{\\bf{m a x}}$ . The value of $d_{\\mathrm{max}}$ is calculated using Eq. 7 for all datasets and hash code lengths $L$ The specific values of $d_{\\mathrm{max}}$ are reported as follows: ", "page_idx": 14}, {"type": "table", "img_path": "seYXqfGT0q/tmp/0ff1e2257ca1f6abf17c3c2926b22bf90346c74640189a25ec841ce889d1fd0f.jpg", "table_caption": ["Table 7: Values of $d_{\\mathrm{max}}$ for different hash code lengths $L$ and datasets. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "A.3 Compared Methods Details ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "The setup for the comparative experiments follows OCD [12]. Detailed information is provided as follows: Ranking Statistics (RankStat). [38] AutoNovel utilizes Ranking Statistics to analyze sample relationships, particularly by using the top-3 indices of feature embeddings as category descriptors. This method aligns with the On-the-Fly Category Discovery (OCD) settings and poses a strong challenge to hash-based descriptors. For a fair comparison, we use the same backbone (DINO-ViT-B-16) for Ranking Statistics (RS) and retain only the fully-supervised learning stages, as no additional data can be used in the On-the-Fly Category Discovery (OCD) task. The embedding dimension is set to 32, resulting in a prediction space of $C_{32}^{3}=4$ , 906, comparable to our method and SMILE, which uses a hash code length of $L=12$ and achieves a prediction space of $2^{12}=4,096$ . Winner-take-all (WTA). [39] To address potential biases towards salient features by Ranking Statistics, Winner-take-all (WTA) hash was proposed as an alternative. WTA avoids reliance on the global order of feature embeddings and instead utilizes indices of maximum values within divided feature groups. With a 48-dimension embedding divided into three groups, WTA generates a prediction space of $16^{3}=4096$ , ensuring comparability for fair assessment. Sequential Leader Clustering (SLC). [37] We employ the same backbone and conducts fully supervised training on the support set for SLC. For on-the-fly testing, SLC utilizes features extracted from the backbone on the query set. We optimized the hyperparameters based on the CUB dataset, applying these uniformly across other datasets to maintain consistency in our comparisons. ", "page_idx": 14}, {"type": "text", "text": "A.4 Pseudo-code ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We have detailed the description of our PHE framework and the Hamming Ball Based Model Inference in the main text. The pseudo-code for the Hamming Ball Based Model Inference is provided in Algorithm 1, and the training process of our PHE framework is shown in Algorithm 2. ", "page_idx": 14}, {"type": "text", "text": "Input: Training data (support set) $\\mathcal{D}_{S}$ contains labeled data, image encoder $\\mathcal E(\\cdot)$ , a linear projection head $\\mathcal{H}_{f}(\\cdot)$ , a prototype layer $g_{\\mathbf{p}}(\\cdot)$ , a frozen layer $F C$ and a linear projection head $\\mathcal{H}_{h}(\\cdot)$ , hyper parameters {training epochs $E_{1}$ , prototypes per class $k$ , et al.}. ", "page_idx": 15}, {"type": "text", "text": "1 $/*$ Model Training $^{*}\\!/$ ;   \n2 for each epoch $e=1\\ldots E_{1}$ do 3 for each batch $(\\mathbf{x}_{i},y_{i})\\in B$ do 4 $/*$ CPG module $^{*}\\!/$ ; 5 $\\mathbf{z}_{i}=\\mathcal{H}_{f}(\\mathcal{E}(\\mathbf{x}_{i}))\\,;$ // image feature 6 $\\mathbf{s}_{i}=g_{\\mathbf{p}}\\grave{(\\mathbf{z}_{i})}$ ; // similarity score 7 Compute $\\mathcal{L}_{p}$ by Eq. (2) on $\\mathbf{s}_{i}$ and $F C$ ; 8 Trained prototypes $P_{c_{j}}$ for class $c_{j}$ ; // prototypes   \n9 $/*$ DHC module $^{*}\\!/$ ;   \n10 $\\begin{array}{l}{{{\\bf h}_{j}=\\mathcal{H}_{h}(\\sum{P_{c_{j}}/k})\\,;}}\\\\ {{{\\bf b}_{i}=\\mathcal{H}_{h}({\\bf z}_{i})\\,;}}\\end{array}$ // hash centers   \n11 // image hash feature   \n12 Compute $\\mathcal{L}_{f}$ by Eq. (3) on ${\\bf b}_{i}$ and all hash centers $\\mathbf{h}$ ;   \n13 Compute $d_{m a x}$ by Eq. (7) ; $//$ hash centers optimization upper bond   \n14 Compute $\\mathcal{L}_{s e p}$ by Eq. (5) on $d_{m a x}$ and all hash centers $\\mathbf{h}$ ;   \n15 Compute $\\mathcal{L}_{q}$ by Eq. (8) on all hash centers $\\mathbf{h}$ ;   \n16 Compute $\\mathcal{L}_{c}$ by Eq. (9) on $\\mathcal{L}_{s e p}$ and $\\mathcal{L}_{q}$ ; // hash center optimization loss   \n17 Compute the overall loss $\\mathcal{L}$ by Eq. (10);   \n18 Back-propagation and optimize $\\mathcal{E},\\mathcal{H}_{f},g_{\\mathbf{p}},\\mathcal{H}_{h}$ ;   \n19 return Trained model PHE(\u00b7) ; ", "page_idx": 15}, {"type": "text", "text": "B Additional Experiment Results and Analysis ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "B.1 Error Bars for Main Results ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In the main paper, we present the full results as the average of three runs to mitigate the impact of randomness. Detailed outcomes for our PHE, encompassing mean values and population standard deviation, are delineated in Table 8. ", "page_idx": 15}, {"type": "table", "img_path": "seYXqfGT0q/tmp/2c25d4f3b36f0602c660130fc3e5e033911fe6a3f0f4a97ce8ecae70880ff77e.jpg", "table_caption": ["Table 8: Mean and std of accuracy in three independent runs. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "B.2 Inference on Different Input Sequences ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We evaluated the accuracy of our PHE method on CUB and Stanford Cars under different input sequences, as shown in Table 9. In the table, \u201cfixed Sequences\u201d indicates that the test data order is not shuffled (all results and comparisons in the main paper are tested this way), while \u201cRandom Sequences\u201d indicates results obtained by randomly shuffling the test data order, with the results averaged over 10 runs. As can be seen from the table, our results are very stable and not affected by the input sequence order. This stability is mainly due to our hash center optimization, which ensures significant inter-class separation, and the use of Hamming balls based on hash centers for category prediction, which is very robust to different input sequences. ", "page_idx": 15}, {"type": "table", "img_path": "seYXqfGT0q/tmp/0b5133a6a142cf6fde44b6c83b8741ff228224c7f670d872b944dcda5102cddb.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "B.3 Impact of Feature Dimension on SMILE Performance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We analyze the performance of the SMILE method [12] with different feature dimensions in Table 10. In the table, \u201cOffline\u201d and \u201cClustering Acc\u201d refer to the clustering accuracy obtained by applying k-means clustering on the features of all test data, given a fixed number of categories (200 for CUB). From the table, it is evident that as the feature dimension $L$ decreases, the on-the-fly prediction accuracy significantly improves. This is because the \"high sensitivity\" issue of hash-form category descriptors becomes more pronounced at higher feature dimensions. On the other hand, as the feature dimension decreases, there is a notable reduction in offline clustering accuracy, with a decrease of $9.9\\%$ when reducing $L$ from 256 to 12. This indicates that when the feature dimension is too low, it inevitably damages the model\u2019s ability to distinguish categories, resulting in poorer feature representation learning. Therefore, our PHE framework separates feature learning from category representation learning, which is one of the reasons why our PHE framework performs better. ", "page_idx": 16}, {"type": "table", "img_path": "seYXqfGT0q/tmp/da6dffacbedc49754762d067d9523404ab9a8e65119248dae23a9784b8d53731.jpg", "table_caption": ["Table 10: Online vs. offline predictions with different hash code lengths $L$ in SMILE on CUB. "], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "B.4 Comparison with Deep Hash Methods ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "We conduct comparative experiments using various deep hashing methods based on our prototype learning model across the CUB and Stanford Cars datasets. The results, as detailed in Table 11, demonstrate the effectiveness of our PHE. Traditional methods like DPN, OrthoHash, and CSQ generate suboptimal hash centers, primarily designed for retrieval tasks with a focus on instancelevel discrimination. Unlike these methods, our PHE incorporates the Gilbert-Varshamov bound to guide the learning of hash centers, specifically for category discovery. This strategy ensures that the hash centers are not only discriminable but also preserve the rich category-specific information inherent in category-level prototypes. Furthermore, our PHE outperforms MDSH, which optimizes hash codes to align with pre-defined static hash centers. In contrast, our approach dynamically maps hash centers from each category\u2019s prototypes, continuously refining these through end-to-end optimization. Additionally, our design incorporates a Hamming-ball-based inference mechanism, which significantly reduces hash sensitivity. For instance, when the hash code length $L$ is set to 32, the MDSH-Hamming ball configuration outperforms the standard MDSH by an average margin of $5.9\\%$ across the two datasets. ", "page_idx": 16}, {"type": "text", "text": "B.5 Computational Cost Analysis ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "The computational cost of PHE is relatively low and primarily depends on the number of known categories, rather than directly correlating with the scale of the dataset. Specifically, each known category is associated with a hash center, with hash centers h of shape [class nums, code length]. The main computational operations involve straightforward two-dimensional matrix multiplications. These include the dot product of features b, with a shape [batch size, code length], and hash centers, as well as the dot product operations used in calculating Hamming distances between hash centers. ", "page_idx": 16}, {"type": "table", "img_path": "seYXqfGT0q/tmp/3ec7dc8a01264483978e312bfb92b57b948115bc457c64bcd48a868ea32118db.jpg", "table_caption": ["Table 11: Comparative results of various hashing methods on CUB and Stanford Cars datasets using 12-bit and 32-bit hash code lengths. \u201cMC\u201d denotes manually obtained centers compliant with the Gilbert-Varshamov bound. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "As detailed in Table 12, although the Food dataset is larger than both CUB and Stanford Cars, it includes only 100 categories. Consequently, the average training time per sample for the Food dataset is significantly lower than that observed for the CUB and Stanford Cars datasets. ", "page_idx": 17}, {"type": "table", "img_path": "seYXqfGT0q/tmp/2646bd66fc3be48ac2dba76aac552db630c198c8dc66042cdf55f13cd121d7e5.jpg", "table_caption": ["Table 12: Comparison of training time per sample across CUB, Stanford Cars and Food datasets. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "B.6 Training Efficiency Analysis ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We provide a comparison of training times between our PHE and the state-of-the-art method, SMILE, with results shown in Table 13. To ensure fairness, all experiments are conducted on an NVIDIA RTX A6000 GPU, with both algorithms trained over 200 epochs using mixed precision. The dataloader parameters are kept consistent across tests, with a batch size of 128. According to the table, our average training time across four datasets is 45.8 minutes shorter than that of SMILE. This improvement is primarily due to the higher computational demands of SMILE\u2019s supervised contrastive learning approach, which processes two different views of samples for representation learning. ", "page_idx": 17}, {"type": "table", "img_path": "seYXqfGT0q/tmp/2bf78ba2aecfa2d22c6bcd72cbdc135412156cdc1f09be55a1a440fe453a7bec.jpg", "table_caption": ["Table 13: Comparison of training times (in minutes) "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "B.7 Results of Different Dataset Splits ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We conduct experiments using different proportions of old category selection on the CUB and Stanford Cars datasets, as shown in Table 14, with all accuracy results reported and hash code length $L$ set to 12. Our PHE outperforms SMILE by an average of $5.95\\%$ when $75\\%$ of old categories are selected and by $1.0\\%$ when $25\\%$ are selected. This indicates that our PHE better models the nuanced inter-category relationships in fine-grained category divisions as the number of categories increases. ", "page_idx": 17}, {"type": "text", "text": "B.8 Compared to Prototype Learning Method ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "We conduct comparative experiments using the powerful prototype learning method SimGCD [13], based on our category encoding method. Due to the lack of unlabeled data, we remove the unsupervised loss component, $L_{c l s}^{u}$ , and the prototypes corresponding to new categories in SimGCD. As shown in Table 15, our use of SimGCD for prototype learning, mapping the prototypes learned by ", "page_idx": 17}, {"type": "table", "img_path": "seYXqfGT0q/tmp/a2a055e1fd2ce07972fe1d7be774a6886dfbf55e08c24ebdd7c4d53ca7f47ec9.jpg", "table_caption": ["Table 14: Comparison with different known category split percentages "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "SimGCD to hash centers for category encoding, yields very poor results on both datasets. \u201cSimGCDMC\u201d, which employs manually obtained centers satisfying the Gilbert-Varshamov bound along with features from the SimGCD projection head, shows an average improvement of $8.8\\%$ across the two datasets. This performance boost demonstrates that the prototypes learned by SimGCD are not suitable for category encoding in fine-grained scenarios. Our PHE offers two main advantages. First, unlike SimGCD, which learns only one prototype per category, our PHE generates multiple prototypes per class, effectively modeling intra-class variance of fine-grained categories. Second, unlike the prototypes in SimGCD, which serve as classifier weights, the prototypes in PHE can be explicitly visualized, providing additional insights into the model\u2019s behavior. ", "page_idx": 18}, {"type": "table", "img_path": "seYXqfGT0q/tmp/4a68ff177f404937dbf2d6207532836073a6de6d3f16c592c72739cebb14df25.jpg", "table_caption": ["Table 15: Comparative results of different representation learning methods on CUB and Scars datasets. \u201cMC\u201d denotes manually obtained centers compliant with the Gilbert-Varshamov bound. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "C Broader Impact and Limitations Discussion ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Broader Impact. The On-the-fly Category Discovery (OCD) task is designed to learn category differences from observed categories and then make real-time predictions across a broader range, including unknown categories. Our proposed Prototypical Hash Encoding (PHE) method for the OCD task holds potential for application in open-world scenarios. For instance, it can assist in botanical classification, where new plant species are discovered and need to be quickly integrated into existing categories without retraining the entire system. ", "page_idx": 18}, {"type": "text", "text": "Limitations. Despite the superior performance of our Prototypical Hash Encoding (PHE) framework compared to existing methods, it still requires further research to enhance the accuracy of recognizing unknown categories. Current On-the-fly Category Discovery (OCD) methods generally achieve low accuracy in predicting new categories, as these categories were not encountered during training, posing significant challenges to effective generalization. Future research should focus on improving the model\u2019s ability to recognize and categorize new, unseen categories. ", "page_idx": 18}, {"type": "text", "text": "A Possible Solution in Future Work. Due to the constraints of training data in the OCD setting, we are considering the integration of additional knowledge from pre-trained Large Language Models (LLMs). First, we can utilize LLMs to establish a bank of category attribute prototypes, which are expected to be relevant across both known and unknown categories. Subsequently, during the real-time prediction process, we plan to employ LLMs and Vision-Language Pretrained Models (VLMs) to match these attribute prototypes with unknown categories. Ultimately, by integrating both instance and attribute features, we aim for our PHE to generate more precise predictions. ", "page_idx": 18}, {"type": "text", "text": "D Additional Visualization Analysis ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "We have conducted additional visualization analysis with images from the CUB dataset and Stanford Cars dataset, as shown in Fig. 6 to 11. As discussed in Sec. 4.4, in addition to using hash codes to represent categroies, our PHE framework allows for visual analysis from the perspective of prototype similarity to understand why certain images are identified as new classes, as depicted in Fig. 6, 7, 9, and 10. Furthermore, even when images are misclassified, such as assigning an image from a new category to an old category as shown in Fig. 8 and Fig. 11, we can still gain interesting insights from the prototype perspective. Firstly, these images from new categories indeed exhibit high similarity to the category where the activated prototypes belong to. Secondly, although the images from new categories show high similarity to old ones, the computed similarity is relatively lower compared to samples that truly belong to that old category. For example, in Fig. 8, the similarity values are 5.48 versus 9.14 for the misclassified new category and the true sample of the old category, respectively. ", "page_idx": 18}, {"type": "text", "text": "", "page_idx": 19}, {"type": "image", "img_path": "seYXqfGT0q/tmp/84d8d7eeb0129e94564977a4a78fcc555ca2b07c83493f99da5ecf614907280c.jpg", "img_caption": ["Figure 6: Case Study of the Cardinal and the Warbling Vireo. "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "seYXqfGT0q/tmp/f7f550d68719c097ebdb86f3e3f4369b8201535a7e682ab884e588a6c35789d3.jpg", "img_caption": ["Figure 7: Case Study of the Chestnut sided Warbler and the Rose breasted Grosbeak. "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "seYXqfGT0q/tmp/98650c28cc685a65e52e57a5fa6c7672e7d4bf808c3532542e0f9bc727d218b4.jpg", "img_caption": ["Figure 8: Case Study of the Yellow Warbler and the Cape May Warbler. "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "seYXqfGT0q/tmp/c1d099c62f104ea9089c9da23627fa7b6631e30fd947209c21c577cf5b82e5cc.jpg", "img_caption": ["Figure 9: Case Study of the Dodge Dakota Club Cab 2007 and the Mazda Tribute SUV 2011. "], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "seYXqfGT0q/tmp/4931bc6a31cfa6216db2a4d7f2463a788daa2e199643d85a466c525551b9d5f7.jpg", "img_caption": ["Figure 10: Case Study of the Buick Verano Sedan 2012 and the Porsche Panamera Sedan 2012. "], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "seYXqfGT0q/tmp/a1853df410bb719615c0241bb3aa477978ba89c07d60cfe5a7b11486bb1bfc08.jpg", "img_caption": ["Figure 11: Case Study of the Dodge Challenger SRT8 2011 and the Volvo C30 Hatchback 2012. "], "img_footnote": [], "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: The contributions designed for on-the-fly novel class discovery are clearly claimed in both abstract and introduction. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 21}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: Please refer to Appendix. C. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Please refer to Sec. 3.2. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 22}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Please refer to Sec. 4.1 and Appendix. A.2. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 23}, {"type": "text", "text": "Justification: Experiments were conducted on open datasets; please refer to Sec. 4.1 for details. Pseudo-code is provided in the Appendix. A.4. We will release the source code upon acceptance. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 23}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Please refer to Sec. 4.1 and Appendix. A.2. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Please refer to Appendix. B.1. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Please refer to Appendix. A.2. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 24}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Our research adheres to all aspects of the NeurIPS Code of Ethics, ensuring compliance with ethical standards throughout the study. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Please refer to Appendix. C. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: The scope of our research does not involve data or models with a high risk for misuse. We utilize publicly available, non-sensitive datasets and models that do not require special safeguards for responsible release. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 25}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Justification: All third-party assets used in our research, including datasets, and models, are properly credited in the manuscript. We have explicitly mentioned the licenses and terms of use for each asset, ensuring that all conditions are fully respected. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: This question does not apply to our research as no new assets were introduced. Our study solely relies on existing, publicly available resources, and thus, no additional documentation for new assets is necessary. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 26}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: This question does not apply to our research as it does not involve crowdsourcing experiments or research with human subjects. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 26}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: This question is not applicable to our research as no human subjects were involved. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}]