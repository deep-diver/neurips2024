[{"figure_path": "seYXqfGT0q/figures/figures_1_1.jpg", "caption": "Figure 1: (a) Schema of Offline Category Discovery task (e.g., NCD [5] and GCD [8]). (b) Schema of On-the-fly Category Discovery task [12], studied in this paper. (c) Previous work (e.g., SMILE [12]) based on instance-level hash encoding. (d) Our PHE explores prototype-based hash encoding. (e) Performance comparison of PHE and SMILE and observation about \u201cHigh Sensitivity\u201d.", "description": "This figure illustrates the difference between offline and online category discovery.  (a) and (b) show the schematic of Offline and Online Category Discovery, respectively. (c) shows the SMILE method's instance-level hash encoding approach. In contrast, (d) presents the proposed PHE method utilizing prototype-based hash encoding. (e) compares the performance of PHE and SMILE, highlighting SMILE's high sensitivity issue, particularly in fine-grained scenarios.", "section": "Introduction"}, {"figure_path": "seYXqfGT0q/figures/figures_3_1.jpg", "caption": "Figure 2: Our PHE framework is composed of the CPG and DHC modules. First, CPG generates category-specific prototypes and prototype-guided instance representations. Then, DHC encodes the generated prototypes as hash centers to encourage the model to learn discriminative instance hash codes. Finally, depending on the Hamming distance between instance hash codes and hash centers, we can obtain instant feedback and online group instances into both known and unknown categories.", "description": "This figure illustrates the proposed Prototypical Hash Encoding (PHE) framework, which consists of two main modules: Category-aware Prototype Generation (CPG) and Discriminative Hash Encoding (DHE). The CPG module generates category-specific prototypes and their corresponding instance representations. These prototypes are then encoded as hash centers by the DHE module, which aims to learn discriminative instance hash codes.  The Hamming distance between the instance hash codes and hash centers determines whether the instance belongs to a known or unknown category, enabling on-the-fly category discovery and online feedback.", "section": "3 Prototypical Hash Encoding"}, {"figure_path": "seYXqfGT0q/figures/figures_8_1.jpg", "caption": "Figure 3: Case Study: Why is a Grasshopper Sparrow classified as a new category?", "description": "This figure provides a case study illustrating how the PHE model classifies a Grasshopper Sparrow as a new category. It visually demonstrates the similarity scores between the test image and the prototypes of known categories. The high similarity to multiple known categories, rather than a single one, leads to its classification as a new category, showcasing the model's ability to handle unseen categories.", "section": "Visualization Analysis"}, {"figure_path": "seYXqfGT0q/figures/figures_9_1.jpg", "caption": "Figure 4: Impact of hyper-parameters.", "description": "This figure shows the impact of hyperparameters \u03b1 and \u03b2 on the overall accuracy of the model, as well as the impact of the number of prototypes per class.  The left two plots show that \u03b1 should be kept relatively small and that \u03b2 should be relatively large for optimal performance. The rightmost plot demonstrates that using more than a single prototype per class significantly improves performance.", "section": "4 Experiment"}, {"figure_path": "seYXqfGT0q/figures/figures_9_2.jpg", "caption": "Figure 5: Evolution of hash centers distribution during the training process.", "description": "This figure shows the distribution of Hamming distances between hash centers before training (Epoch0) and after training (Epoch200) on the CUB dataset. Before training, the hash centers are distributed relatively uniformly, with some centers having a Hamming distance of zero (meaning multiple centers share the same hash code). After training, the Hamming distance between all hash centers is at least *d*<sub>max</sub>, demonstrating the effectiveness of the center separation loss in ensuring that multiple categories do not share identical hash codes or reside excessively close to one another.", "section": "3.2 Discriminative Hash Encoding"}, {"figure_path": "seYXqfGT0q/figures/figures_19_1.jpg", "caption": "Figure 3: Case Study: Why is a Grasshopper Sparrow classified as a new category?", "description": "This figure shows a case study of how the PHE model classifies a Grasshopper Sparrow, which was not in the training set, as a new category. It visualizes the similarity scores between the test image and prototypes from known categories. The high similarity scores to multiple known categories, rather than a single category, suggest the reason for classifying it as new.", "section": "Visualization Analysis"}, {"figure_path": "seYXqfGT0q/figures/figures_19_2.jpg", "caption": "Figure 3: Case Study: Why is a Grasshopper Sparrow classified as a new category?", "description": "This figure provides a case study illustrating how the PHE framework classifies a Grasshopper Sparrow as a new category. It shows the similarity scores between the test image (Grasshopper Sparrow) and the prototypes of known categories (Le Conte Sparrow and Horned Lark). The high similarity scores to multiple known categories indicate that the model correctly identifies the Grasshopper Sparrow as a new category because it shares visual features with multiple known categories.", "section": "Visualization Analysis"}, {"figure_path": "seYXqfGT0q/figures/figures_19_3.jpg", "caption": "Figure 8: Case Study of the Yellow Warbler and the Cape May Warbler.", "description": "This figure presents a case study to illustrate how the PHE model classifies images. It shows the similarity scores between test images (a Yellow Warbler and a Cape May Warbler) and the prototypes generated for known categories. The Yellow Warbler, which belongs to an unseen category, shows higher similarity scores to the Cape May Warbler prototypes than to the prototypes of other known categories. This indicates that the model identifies the subtle differences between similar species, facilitating the discovery of novel categories.", "section": "3.1 Category-aware Prototype Generation"}, {"figure_path": "seYXqfGT0q/figures/figures_20_1.jpg", "caption": "Figure 2: Our PHE framework is composed of the CPG and DHC modules. First, CPG generates category-specific prototypes and prototype-guided instance representations. Then, DHC encodes the generated prototypes as hash centers to encourage the model to learn discriminative instance hash codes. Finally, depending on the Hamming distance between instance hash codes and hash centers, we can obtain instant feedback and online group instances into both known and unknown categories.", "description": "This figure illustrates the architecture of the proposed Prototypical Hash Encoding (PHE) framework.  It consists of two main modules: Category-aware Prototype Generation (CPG) and Discriminative Hash Encoding (DHE). CPG generates category prototypes and instance representations, while DHE maps these prototypes to hash centers. The Hamming distance between instance hash codes and these centers determines category assignment (known or unknown).", "section": "3 Prototypical Hash Encoding"}, {"figure_path": "seYXqfGT0q/figures/figures_20_2.jpg", "caption": "Figure 1: (a) Schema of Offline Category Discovery task (e.g., NCD [5] and GCD [8]). (b) Schema of\nOn-the-fly Category Discovery task [12], studied in this paper. (c) Previous work (e.g., SMILE [12])\nbased on instance-level hash encoding. (d) Our PHE explores prototype-based hash encoding. (e)\nPerformance comparison of PHE and SMILE and observation about \u201cHigh Sensitivity\u201d.", "description": "This figure compares the proposed Prototypical Hash Encoding (PHE) method with the SMILE method for on-the-fly category discovery. It shows the schemas of offline and online category discovery, illustrating the differences in data handling and inference. It highlights the \"high sensitivity\" issue of SMILE, especially for fine-grained categories, and demonstrates the improvement achieved by PHE in terms of accuracy.", "section": "Introduction"}, {"figure_path": "seYXqfGT0q/figures/figures_20_3.jpg", "caption": "Figure 11: Case Study of the Dodge Challenger SRT8 2011 and the Volvo C30 Hatchback 2012.", "description": "This figure shows a case study comparing a Dodge Challenger SRT8 2011 (unseen) and a Volvo C30 Hatchback 2012 (seen). It visualizes the similarity scores between the test images and the prototypes of the known categories. The high similarity score between the unseen image and the prototypes of the Volvo C30 Hatchback 2012 category suggests the model's ability to associate similar features across different car models. This example is presented to illustrate how the PHE helps group certain samples into known or unknown categories based on the similarity between prototypes and their feature vectors.", "section": "4.4 Evaluation"}]