[{"type": "text", "text": "Equivariant Neural Diffusion for Molecule Generation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Fran\u00e7ois Cornet Technical University of Denmark frjc@dtu.dk ", "page_idx": 0}, {"type": "text", "text": "Grigory Bartosh University of Amsterdam g.bartosh@uva.nl ", "page_idx": 0}, {"type": "text", "text": "Mikkel N. Schmidt Technical University of Denmark mnsc@dtu.dk ", "page_idx": 0}, {"type": "text", "text": "Christian A. Naesseth University of Amsterdam c.a.naesseth@uva.nl ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We introduce Equivariant Neural Diffusion (END), a novel diffusion model for molecule generation in 3D that is equivariant to Euclidean transformations. Compared to current state-of-the-art equivariant diffusion models, the key innovation in END lies in its learnable forward process for enhanced generative modelling. Rather than pre-specified, the forward process is parameterized through a time- and data-dependent transformation that is equivariant to rigid transformations. Through a series of experiments on standard molecule generation benchmarks, we demonstrate the competitive performance of END compared to several strong baselines for both unconditional and conditional generation. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The discovery of novel chemical compounds with relevant properties is critical to a number of scientific fields, such as drug discovery and materials design (Merchant et al., 2023). However, due to the large size and complex structure of the chemical space (Ruddigkeit et al., 2012), which combines continuous and discrete features, it is notably difficult to search. Additionally, ab-initio Quantum Mechanics (QM) methods for computing target properties are often computationally expensive, preventing brute-force enumeration. While some of these heavy computations can be amortized through learned surrogates, the need for innovative search methods remains, and generative models have recently emerged as a promising avenue (Anstine and Isayev, 2023). Such models can learn complex data distributions, that, in turn, can be sampled from to obtain novel samples similar to the original data. Compared to other data modalities such as images or text, molecules present additional challenges as they have to adhere to strict chemical rules, and obey the symmetries of the 3D space. ", "page_idx": 0}, {"type": "text", "text": "Currently, the most promising directions for molecule generation in 3D are either auto-regressive models (Gebauer et al., 2019; 2022; Luo and Ji, 2022; Daigavane et al., 2024) building molecules one atom at a time, or Diffusion Models (DMs) (Hoogeboom et al., 2022; Vignac et al., 2023; Le et al., 2024) that learn to revert a corruption mechanism that transforms the data distribution into noise. As both approaches directly operate in 3D space, they can leverage architectures designed for machine learned force fields (Unke et al., 2021), that were carefully developed to encode the symmetries inherent to the data (Sch\u00fctt et al., 2017; 2021; Batzner et al., 2022; Batatia et al., 2022). ", "page_idx": 0}, {"type": "text", "text": "The success of DMs has not been limited to molecule generation, and promising results have been demonstrated on a variety of other data modalities (Yang et al., 2023). Nevertheless, most existing DMs pre-specify the forward process, forcing the reverse process to comply with it. A recent line of work has sought to overcome that limitation and improve generation by replacing the fixed forward process with a learnable one (Bartosh et al., 2023; Nielsen et al., 2024; Bartosh et al., 2024). ", "page_idx": 0}, {"type": "text", "text": "Contributions In this paper, we present Equivariant Neural Diffusion (END), a novel diffusion model for molecule generation in 3D that (1) is equivariant to Euclidean transformations, and (2) features a learnable forward process. We demonstrate competitive unconditional molecule generation performance on the QM9 and GEOM-Drugs benchmarks. For conditional generation driven by composition and substructure constraints, our approach exhibits a substantial performance gain compared to existing equivariant diffusion models. Our set of experiments underscores the benefti of a learnable forward process for improved unconditional and conditional molecule generation. ", "page_idx": 1}, {"type": "text", "text": "2 Background ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We begin by establishing the necessary background for generative modeling of geometric graphs. We first introduce the data representation and its inherent symmetries. We then discuss Diffusion Models (DMs), and more specifically the Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022). Finally, we present the Neural Flow Diffusion Models (NFDM) framework (Bartosh et al., 2024). ", "page_idx": 1}, {"type": "text", "text": "2.1 Equivariance ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Molecules as geometric graphs in $\\mathbf{E}(3)$ We consider geometric graphs embedded in 3-dimensional Euclidean space that represent molecules. Formally, each atomistic system can be described by a tuple $\\boldsymbol{x}=(\\boldsymbol{r},h)$ , where $\\pmb{r}=(\\pmb{r}_{1},...,\\pmb{r}_{M})\\in\\mathbb{R}^{M\\times3}$ form a collection of vectors in 3D representing the coordinates of the atoms, and $\\pmb{h}=\\stackrel{\\prime}{(}\\pmb{h}_{1},...,\\pmb{h}_{M})\\in\\mathbb{R}^{M\\times D}$ are the associated scalar features (e.g. atomic types or charges). When dealing with molecules, we are particularly interested in $E(3)$ , the Euclidean group in 3 dimensions, generated by translations, rotations and reflections. Each group element in $E(3)$ can be represented as a combination of a translation vector $\\mathbf{t}\\in\\mathbb{R}^{3}$ and an orthogonal matrix $\\mathbf{R}\\in O(3)$ encoding rotation or reflection. While scalar features $^h$ remain invariant, coordinates $\\pmb{r}$ transform under translation, rotation and reflection as $\\mathbf{R}\\boldsymbol{r}\\!+\\!\\mathbf{t}=(\\mathbf{R}\\boldsymbol{r}_{1}\\!+\\!\\mathbf{t},...,\\mathbf{R}\\boldsymbol{r}_{M}\\!+\\!\\mathbf{t})$ . ", "page_idx": 1}, {"type": "text", "text": "Equivariant functions A function $f:\\mathcal X\\to\\mathcal Y$ is said to be equivariant to the action of a group $G$ , or $G$ -equivariant, if $g\\cdot f(\\pmb{x})=f(g\\cdot\\pmb{x}),\\forall g\\in G.$ It is said to be $G$ -invariant, if $f(\\pmb{x})=f(\\pmb{g}\\cdot\\pmb{x}),\\forall g\\in G$ . In the case of a function $f:\\left(\\mathbb{R}^{M\\times3}\\times\\mathbb{R}^{M\\times D}\\right)\\to\\left(\\mathbb{R}^{M\\times3}\\times\\mathbb{R}^{M\\times D}\\right)$ operating on geometric graphs, the function is said to be $E(3)$ -equivariant if ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathbf{R}y^{(r)}+\\mathbf{t},y^{(h)}=f\\Big(\\mathbf{R}r+\\mathbf{t},h\\Big),\\forall\\,\\mathbf{R}\\in O(3)\\;\\mathrm{and}\\;\\mathbf{t}\\in\\mathbb{R}^{3},\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\pmb{y}^{(r)}$ and $\\pmb{y}^{(h)}$ denote the output related to $\\pmb{r}$ and $^h$ respectively. There exists a large variety of graph neural network architectures designed to be equivariant to the Euclidean group (Sch\u00fctt et al., 2017; 2021; Batzner et al., 2022; Batatia et al., 2022). ", "page_idx": 1}, {"type": "text", "text": "Equivariant distributions A conditional distribution $p(\\pmb{y}|\\pmb{x})$ is equivariant to rotations and reflections when $p(\\pmb{y}|\\pmb{x})\\,=\\,p(\\mathbf{R}\\pmb{y}|\\mathbf{R}\\pmb{x}),\\forall\\,\\,\\mathbf{R}\\,\\in\\,O(3)$ , while a distribution is said to be invariant when $p(\\pmb{x})=p(\\mathbf{R}\\pmb{x}),\\forall\\,\\mathbf{R}\\in\\mathcal{O}(3)$ . Regarding translation, it is not possible to have a translation-invariant non-zero distribution, as it would require that $\\begin{array}{r}{p(\\pmb{x})=p(\\pmb{x}+\\mathbf{\\dot{t}}),\\forall\\mathbf{t}\\in\\mathbb{R}^{3},\\pmb{x}\\in\\mathbb{R}^{M\\times3}}\\end{array}$ , which would mean that $p(x)$ cannot integrate to 1 (Garcia Satorras et al., 2021). However, a translation-invariant distribution can be constructed in the linear subspace $R$ , where the centre of gravity is fixed to 0 (i.e. zero CoM subspace): $\\begin{array}{r}{R=\\left\\{r\\in\\mathbb{R}^{M\\times3}:\\frac{1}{M}\\sum_{i=1}^{\\bar{M}}r_{i}=\\mathbf{0}\\right\\}}\\end{array}$ (Xu et al., 2022). As $R$ can be shown to be intrinsically equivalent to $\\mathbb{R}^{(M-1)\\times3}$ (Bao et al., 2023), we will consider in what follows that $\\pmb{r}$ is defined in $\\mathbb{R}^{(\\dot{M}-\\bar{1})\\times3}$ for ease of notation. ", "page_idx": 1}, {"type": "text", "text": "2.2 Equivariant Diffusion Models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Diffusion Models (DMs) (Sohl-Dickstein et al., 2015; Ho et al., 2020) are generative models that learn distributions through a hierarchy of latent variables, corresponding to perturbed versions of the data at increasing noise scales. DMs consist of a forward and a reverse (or generative) process. The Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022) is a particular instance of a DM, where the learned marginal $p_{\\theta}(x)$ is made invariant to the action of translations, rotations and reflections by construction. Intuitively, this means that the likelihood of a given molecule under the model does not depend on its orientation. ", "page_idx": 1}, {"type": "text", "text": "Forward process The forward process perturbs samples from the data distribution, $x\\sim q(x)$ , over time through noise injection, resulting in a trajectory of latent variables $(z_{t})_{t\\in[0,1]}$ , conditional on $\\textbf{\\em x}$ . The conditional distribution for $(z_{t})_{t\\in[0,1]}$ given $\\textbf{\\em x}$ , can be described by an initial distribution $q(z_{0}|x)$ and a Stochastic Differential Equation (SDE), ", "page_idx": 2}, {"type": "equation", "text": "$$\nd\\{z_{t}^{(r)},z_{t}^{(h)}\\}=f(t)\\big[z_{t}^{(r)},z_{t}^{(h)}\\big]\\,d t+g(t)\\,d\\{w^{(r)},w^{(h)}\\},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the drift $f(t)$ and volatility $g(t)$ are scalar functions of time, and $\\pmb{w}^{(r)}$ and $\\pmb{w}^{(h)}$ are two independent standard Wiener processes defined in $\\mathbb{R}^{(M-1)\\times3}$ and $\\mathbb{R}^{M\\times D}$ respectively. Specifically, EDM implements the Variance-Preserving SDE (VP-SDE) scheme (Song et al., 2020), with $f(t)=$ $-\\,{\\textstyle\\frac{1}{2}}\\beta(t)$ and $g(t)\\,=\\,\\sqrt{\\beta(t)}$ for a fixed schedule $\\beta(t)$ . Due to the linearity of the drift term, the conditional marginal distribution is known in closed-form (S\u00e4rkk\u00e4 and Solin, 2019), and can be reconstructed as ", "page_idx": 2}, {"type": "equation", "text": "$$\nq\\bigl([\\boldsymbol{z}_{t}^{(r)},\\boldsymbol{z}_{t}^{(h)}]|[r,h]\\bigr)=q(\\boldsymbol{z}_{t}^{(r)}|r)q(\\boldsymbol{z}_{t}^{(h)}|h)=\\mathcal{N}(\\boldsymbol{z}_{t}^{(r)},|\\alpha_{t}r,\\sigma_{t}^{2}|]\\cdot\\mathcal{N}(\\boldsymbol{z}_{t}^{(h)},|\\alpha_{t}h,\\sigma_{t}^{2}|],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\begin{array}{r}{\\alpha_{t}=\\exp\\left(-\\frac{1}{2}\\int_{0}^{t}\\beta(s)\\,d s\\right)}\\end{array}$ and $\\begin{array}{r}{\\sigma_{t}=1\\!-\\!\\exp\\left(-\\frac{1}{2}\\int_{0}^{t}\\beta(s)\\,d s\\right)}\\end{array}$ . It evolves from a low-variance Gaussian centered around the data $q(z_{0}|\\pmb{x})\\approx\\mathcal{N}(z_{0}|\\pmb{x},\\delta^{2}\\mathbb{I})$ to an uninformative prior distribution (that contains no information about the data distribution), i.e. a unit Gaussian $q(z_{1}|\\mathbf{\\bar{x}})\\approx\\mathcal{N}(z_{1}|\\mathbf{0},\\mathbb{I})$ . ", "page_idx": 2}, {"type": "text", "text": "Reverse (generative) process Starting from the prior $[\\boldsymbol{z}_{1}^{(r)},\\boldsymbol{z}_{1}^{(h)}]\\sim\\mathcal{N}(\\boldsymbol{z}_{t}^{(r)}|\\mathbf{0},\\mathbb{I})\\cdot\\mathcal{N}(\\boldsymbol{z}_{t}^{(h)}|\\mathbf{0},\\mathbb{I})$ , samples from $q(x)$ can be generated by reversing the forward process. This can be done by following the reverse-time SDE (Anderson, 1982), ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{d z_{t}}&{=\\left(f(t)[z_{t}^{(r)},z_{t}^{(h)}]-g^{2}(t)[\\nabla_{z_{t}^{(r)}}\\log q(z_{t}),\\nabla_{z_{t}^{(h)}}\\log q(z_{t})]\\right)d t+\\!g(t)\\,d\\{\\bar{w}^{(r)},\\bar{w}^{(h)}\\},}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\bar{\\pmb{w}}^{(r)}$ and $\\bar{\\pmb w}^{(h)}$ are independent standard Wiener processes defined in $\\mathbb{R}^{(M-1)\\times3}$ and $\\mathbb{R}^{M\\times D}$ , respectively, with time flowing backwards. DMs approximate the reverse process by learning an approximation of the score function $\\nabla_{z_{t}}\\log{q(z_{t})}$ parameterized by a neural network $s_{\\theta}(z_{t},t)$ . With the learned score function $s_{\\theta}(z_{t},t)$ , a sample $\\pmb{z}_{0}\\sim p_{\\theta}(\\pmb{z}_{0})\\approx q(\\pmb{z}_{0})\\approx q(\\pmb{x})$ can be obtained by first sampling from the prior $[\\boldsymbol{z}_{1}^{(r)},\\boldsymbol{z}_{1}^{(h)}]\\sim\\mathcal{N}(\\boldsymbol{z}_{t}^{(r)}|\\mathbf{0},\\mathbb{I})\\cdot\\mathcal{N}(\\boldsymbol{z}_{t}^{(h)}|\\mathbf{0},\\mathbb{I})$ , and then simulating the reverse SDE, ", "page_idx": 2}, {"type": "equation", "text": "$$\nd z_{t}=\\Big(f(t)[z_{t}^{(r)},z_{t}^{(h)}]-g^{2}(t)[s_{\\theta}^{(r)}(z_{t},t),s_{\\theta}^{(h)}(z_{t},t)]\\Big)\\,d t+g(t)\\,d\\{\\bar{w}^{(r)},\\bar{w}^{(h)}\\},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the true score function has been replaced by its approximation $s_{\\theta}(z_{t},t)$ . In EDM, the approximate score is parameterized through an equivariant function: $s_{\\theta}(z_{t},t)=\\big[s_{\\theta}^{(r)}(z_{t},t),s_{\\theta}^{(h)}(z_{t},t)\\big]$ such that $s_{\\theta}([\\mathbf{R}z_{t}^{(r)},z_{t}^{(h)}],t)=[\\mathbf{R}s_{\\theta}^{(r)}(z_{t},t),s_{\\theta}^{(h)}(z_{t},t)],\\forall\\,\\mathbf{R}\\in O(3).$ . Practically, this is realized through the specific parameterization, ", "page_idx": 2}, {"type": "equation", "text": "$$\ns_{\\theta}(z_{t},t)=\\frac{\\alpha_{t}\\hat{\\pmb x}_{\\theta}(z_{t},t)-z_{t}}{\\sigma_{t}^{2}},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the data point predictor $\\hat{\\pmb{x}}_{\\theta}$ is implemented by an equivariant neural network. ", "page_idx": 2}, {"type": "text", "text": "Optimization The data point predictor $\\hat{\\pmb{x}}_{\\theta}$ , or $s_{\\theta}$ , is trained by optimizing the denoising score matching loss (Vincent, 2011), ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{DSM}}=\\mathbb{E}_{u(t),q(\\pmb{x},z_{t})}\\Big[\\lambda(t)\\big|\\big|s_{\\theta}(\\pmb{z}_{t},t)-\\nabla_{\\pmb{z}_{t}}\\log q(\\pmb{z}_{t}|\\pmb{x})\\big|\\big|_{2}^{2}\\Big],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\lambda(t)$ is a positive weighting function, and $u(t)$ is a uniform distribution over the interval $[0,1]$ . ", "page_idx": 2}, {"type": "text", "text": "2.3 Neural Flow Diffusion Models ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Neural Flow Diffusion Models (NFDM) (Bartosh et al., 2024) are based on the observation that latent variables in DMs, i.e. $\\scriptstyle z_{t}$ , are conventionally inferred through a pre-specified transformation \u2013 as implied by the chosen type of SDE and the noise schedule. This potentially limits the flexibility of the latent space, and makes the learning of the reverse (generative) process more challenging. ", "page_idx": 2}, {"type": "text", "text": "Forward process In contrast to conventional DMs, NFDM define the forward process implicitly through a learnable transformation $F_{\\varphi}(\\varepsilon,t,{\\pmb x})$ of injected noise $\\varepsilon$ , time $t$ , and data point $\\textbf{\\em x}$ . The latent variables $\\mathscr{z}_{t}$ are obtained by transforming noise samples $\\varepsilon$ , conditional on data point $\\textbf{\\em x}$ and time step $t$ : $\\pmb{z}_{t}=F_{\\varphi}(\\pmb{\\varepsilon},t,\\pmb{x})$ . If $F_{\\varphi}$ is differentiable with respect to $\\varepsilon$ and $t$ , and invertible with respect to $\\varepsilon$ , then, for fixed $\\textbf{\\em x}$ and $\\varepsilon$ , samples from $q_{\\varphi}(z_{t}|x)$ can be obtained by solving the following conditional Ordinary Differential Equation (ODE) until time $t$ , ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "equation", "text": "$$\nd z_{t}=f_{\\varphi}(z_{t},t,x)\\,d t\\,\\mathrm{~with~}f_{\\varphi}(z_{t},t,x)=\\frac{\\partial F_{\\varphi}(\\varepsilon,t,x)}{\\partial t}\\Big|_{\\varepsilon=F_{\\varphi}^{-1}(z_{t},t,x)},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "with $z_{0}\\sim q(z_{0}|\\pmb{x})$ . While $F_{\\varphi}$ and $q(\\varepsilon)$ define the conditional marginal distribution $q_{\\varphi}(z_{t}|x)$ , we need a distribution over the trajectories $(z_{t})_{t\\in[0,1]}$ . NFDM obtain this through the introduction of a conditional SDE starting from $z_{\\mathrm{0}}$ and running forward in time. Given access to the ODE in Eq. (1) and the score function $\\nabla_{z_{t}}\\log q_{\\varphi}(z_{t}|\\mathbf{\\boldsymbol{x}})$ , the conditional SDE sharing the same conditional marginal distribution $q_{\\varphi}(z_{t}|x)$ is given by ", "page_idx": 3}, {"type": "text", "text": "$d z_{t}=f_{\\varphi}^{F}(z_{t},t,x)\\,d t+g_{\\varphi}(t)\\,d w\\,\\mathrm{~with~}f_{\\varphi}^{F}(z_{t},t,x)=f_{\\varphi}(z_{t},t,x)+\\frac{g_{\\varphi}^{2}(t)}{2}\\nabla_{z_{t}}\\log q_{\\varphi}(z_{t}|x),$ (2) where the score function of $q_{\\varphi}(z_{t}|x)$ is $\\nabla_{z_{t}}\\log q_{\\varphi}(z_{t}|x)\\;=\\;\\nabla_{z_{t}}\\left[\\log q(\\varepsilon)\\,+\\,\\log\\,\\left|J_{F}^{-1}\\right|\\right]$ , with $\\pmb{\\varepsilon}=F_{\\varphi}^{-1}(z_{t},t,\\pmb{x})$ , and $\\begin{array}{r}{J_{F}^{-1}=\\frac{\\partial F_{\\varphi}^{-1}({\\pmb z}_{t},t,{\\pmb x})}{\\partial{\\pmb z}_{t}}}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "Reverse (generative) process A conditional reverse SDE that starts from $z_{1}\\sim q(z_{1})$ , runs backward in time, and reverses the conditional forward SDE from Eq. (2) can be defined as ", "page_idx": 3}, {"type": "equation", "text": "$$\nd z_{t}=f_{\\varphi}^{B}(z_{t},t,x)+g_{\\varphi}(t)\\,d\\bar{w}\\;\\operatorname{with}\\,f_{\\varphi}^{B}(z_{t},t,x)=f_{\\varphi}(z_{t},t,x)-\\frac{g_{\\varphi}^{2}(t)}{2}\\nabla_{z_{t}}\\log q_{\\varphi}(z_{t}|x).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "As $\\textbf{\\em x}$ is unknown when generating samples, we can rewrite Eq. (3) with the prediction of $\\textbf{\\em x}$ instead, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{d z_{t}=\\hat{f}_{\\theta,\\varphi}(z_{t},t)\\,d t+\\!g_{\\varphi}(t)\\,d\\bar{w},\\ \\mathrm{where}\\ \\hat{f}_{\\theta,\\varphi}(z_{t},t)=f_{\\varphi}^{B}\\big(z_{t},t,\\hat{x}_{\\theta}(z_{t},t)\\big),}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\hat{\\pmb{x}}_{\\theta}$ is a function that predicts the data point $\\textbf{\\em x}$ . Provided that the reconstruction distribution $q(z_{0}|x)$ and prior distribution $q(z_{1})$ are defined, this fully specifies the reverse (generative) process. ", "page_idx": 3}, {"type": "text", "text": "Optimization The forward and reverse processes can be optimized jointly by matching the drift terms of the true and approximate conditional reverse SDEs through the following objective, ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{NFDM}}=\\mathbb{E}_{u(t),q_{\\varphi}(\\pmb{x},z_{t})}\\Big[\\frac{1}{2g_{\\varphi}^{2}(t)}\\big|\\big|f_{\\varphi}^{B}(z_{t},t,\\pmb{x})-\\hat{f}_{\\theta,\\varphi}(z_{t},t)\\big|\\big|_{2}^{2}\\Big],\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "which can be shown to be equivalent to minimizing the Kullback-Leibler divergence between the posterior distributions resulting from the discretization of Eqs. (3) and (4) (Bartosh et al., 2024). ", "page_idx": 3}, {"type": "text", "text": "3 Equivariant Neural Diffusion ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We now introduce Equivariant Neural Diffusion (END), that generalizes the Equivariant Diffusion Model (EDM) (Hoogeboom et al., 2022), by defining the forward process through a learnable transformation. Our approach is a synthesis of NFDM introduced in Section 2.3, and leverages ideas of EDM outlined in Section 2.2 to maintain the desired invariance of the learned marginal distribution $p_{\\theta,\\varphi}(z_{0})$ . By providing an equivariant learnable transformation $F_{\\varphi}$ and an equivariant data point predictor $\\hat{\\pmb{x}}_{\\theta}$ , we show that it is possible to obtain a generative model with the desired properties. Finally, we propose a simple yet flexible parameterization meeting these requirements. ", "page_idx": 3}, {"type": "text", "text": "3.1 Formulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The key innovation in END lies in its forward process, which is also leveraged in the reverse (generative) process. The forward process is defined through a learnable time- and data-dependent transformation $F_{\\varphi}(\\varepsilon,t,{\\pmb x})$ , such that the latent $\\boldsymbol{z}_{t}$ transforms covariantly with the injected noise $\\varepsilon$ (i.e. a collection of random vectors) and the data point $\\textbf{\\em x}$ , ", "page_idx": 3}, {"type": "equation", "text": "$$\nF_{\\varphi}(\\mathbf{R}\\pmb{\\varepsilon},t,\\mathbf{R}\\pmb{x})=\\mathbf{R}F_{\\varphi}(\\pmb{\\varepsilon},t,\\pmb{x})=\\mathbf{R}z_{t},\\quad\\forall\\,\\mathbf{R}\\in O(3).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "We then define $\\hat{\\pmb{x}}_{\\theta}$ as another learnable equivariant function, such that the predicted data point transforms covariantly with the latent variable $\\boldsymbol{z}_{t}$ , i.e. $\\hat{\\pmb{x}}_{\\theta}({\\bf R}z_{t},t)={\\bf R}\\hat{\\pmb{x}}_{\\theta}(z_{t},t)$ . Finally, we choose the noise and prior distribution, i.e. $p(\\varepsilon)$ and $p(z_{1})$ , to be invariant to the considered symmetry group. ", "page_idx": 3}, {"type": "text", "text": "Invariance of the learned distribution With the following choices: (1) $p(z_{1})$ an invariant distribution, (2) $F_{\\varphi}$ an equivariant function that satisfies $F_{\\varphi}(\\mathbf{R}\\boldsymbol{\\varepsilon},t,\\mathbf{R}\\boldsymbol{x})=\\mathbf{R}F_{\\varphi}(\\boldsymbol{\\varepsilon},t,\\boldsymbol{x})$ , and (3) $\\hat{\\pmb{x}}_{\\theta}$ an equivariant function, we have that the learned marginal $p_{\\theta,\\varphi}(z_{0})$ is invariant as desired. This can be shown by demonstrating that the reverse SDE is equivariant. We start by noting that the reverse SDE in END is given by ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{d z_{t}=\\hat{f}_{\\theta,\\varphi}(z_{t},t)\\,d t+g_{\\varphi}(t)\\,d\\pmb{\\bar{w}}\\,.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As the Wiener process is isotropic, this boils down to verifying that the drift term, $\\hat{f}_{\\theta,\\varphi}(z_{t},t)$ is equivariant, i.e. $\\hat{f}_{\\theta,\\varphi}({\\bf R}z_{t},t)={\\bf R}\\hat{f}_{\\theta,\\varphi}(z_{t},t)$ . As the drift is expressed as a sum of two terms, we inspect each of them separately. The first term is ", "page_idx": 4}, {"type": "equation", "text": "$$\nf_{\\varphi}\\big(z_{t},t,\\hat{x}_{\\theta}(z_{t},t)\\big)=\\frac{\\partial F_{\\varphi}\\big(\\pmb{\\varepsilon},t,\\hat{x}_{\\theta}(z_{t},t)\\big)}{\\partial t}\\Big|_{\\varepsilon=F_{\\varphi}^{-1}(z_{t},t,\\hat{x}_{\\theta}(z_{t},t))}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "If $F_{\\varphi}$ is equivariant, then so is its time-derivative (see Appendix A.3.1). The same holds for its inverse with respect to $\\varepsilon$ (see Appendix A.3.2), such that we have $F_{\\varphi}^{-1}({\\bf R}z_{t},t,{\\bf R}x)={\\bf R}F_{\\varphi}^{-1}(z_{t},t,x)=$ $\\mathbf{R}\\varepsilon$ . We additionally have that $\\hat{\\pmb{x}}_{\\theta}$ is equivariant, by definition. As the equivariance of ${\\dot{F}}_{\\varphi}$ implies the equivariance of $q_{\\varphi}$ , from the second term of the drift, we observe that, for $\\begin{array}{r}{\\pmb{y}_{t}=\\mathbf{R}z_{t}}\\end{array}$ , we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\nabla_{y_{t}}\\log q_{\\varphi}\\bigl(y_{t}|\\hat{x}_{\\theta}(y_{t},t)\\bigr)=\\mathbf{R}\\nabla_{z_{t}}\\log q_{\\varphi}\\bigl(z_{t}|\\hat{x}_{\\theta}(z_{t},t)\\bigr),\\quad\\forall\\,\\mathbf{R}\\in O(3).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In summary, in addition to an invariant prior, an equivariant $F_{\\varphi}$ and an equivariant $\\hat{\\pmb{x}}_{\\theta}$ ensure the equivariance of the reverse process, and hence the invariance of the learned distribution. In Appendix A.3.3, we additionally show that the objective function is invariant, i.e. ${\\mathcal L}_{\\mathrm{END}}({\\bf R}x)=$ $\\bar{\\mathcal{L}}_{\\mathrm{END}}^{\\bar{}^{}}(\\pmb{x}),\\forall\\pmb{R}\\in O(3)$ . ", "page_idx": 4}, {"type": "text", "text": "We note that alternative formulations for the drift of the reverse process, $\\hat{f}_{\\theta,\\varphi}$ , exist. Most notably, it can be learned directly through an equivariant function, without explicit dependence on $F_{\\varphi}$ , while maintaining the desired invariance. ", "page_idx": 4}, {"type": "text", "text": "3.2 Parameterization ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We now introduce a simple parameterization of $F_{\\varphi}$ that meets the requirements outlined above, ", "page_idx": 4}, {"type": "equation", "text": "$$\nF_{\\varphi}(\\pmb{\\varepsilon},t,\\pmb{x})=\\mu_{\\varphi}(\\pmb{x},t)+U_{\\varphi}(\\pmb{x},t)\\pmb{\\varepsilon},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where, due to the geometric nature of $\\textbf{\\em x}$ , $U_{\\varphi}(\\mathbf{\\alpha},t)\\in\\mathbb{R}^{(M-1)\\times3\\times3}$ is structured as a block-diagonal matrix where each block is a $3\\times3$ matrix, ensuring a cheap calculation of the inverse transformation and its Jacobian. This is equivalent to a diagonal parameterization in the case of scalar features. ", "page_idx": 4}, {"type": "text", "text": "Similarly to EDM, our parametrization of $F_{\\varphi}$ leads to a conditional marginal $q_{\\varphi}(z_{t}|x)$ that is a conditional Gaussian with (block-) diagonal covariance, with the notable difference that the mean and covariance are now data- and time-dependent, and learnable through $F_{\\varphi}$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\nq_{\\varphi}(z_{t}|\\pmb{x})=N\\big(\\varkappa_{t}|\\mu_{\\varphi}(\\pmb{x},t),\\Sigma_{\\varphi}(\\pmb{x},t)\\big),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\Sigma_{\\varphi}(\\mathbf{\\alpha},t)=U_{\\varphi}(\\mathbf{\\alpha},t)U_{\\varphi}^{\\top}(\\mathbf{\\alpha},t)$ , such that $\\Sigma_{\\varphi}({\\boldsymbol{x}},t)$ is also block-diagonal. As $F_{\\varphi}$ is linear in $\\varepsilon$ , both $\\mu_{\\varphi}$ and $U_{\\varphi}$ must be equivariant functions whose outputs transform covariantly with $\\textbf{\\em x}$ , in order to ensure the desired equivariance of $F_{\\varphi}$ , ", "page_idx": 4}, {"type": "equation", "text": "$$\nF_{\\varphi}(\\mathbf{R}\\varepsilon,t,\\mathbf{R}x)=\\mu_{\\varphi}(\\mathbf{R}x,t)+U_{\\varphi}(\\mathbf{R}x,t)\\mathbf{R}\\varepsilon=\\mathbf{R}\\mu_{\\varphi}(x,t)+\\mathbf{R}\\left[U_{\\varphi}(x,t)\\varepsilon\\right]=\\mathbf{R}F_{\\varphi}(\\varepsilon,t,x).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We can then readily check that the resulting $q_{\\varphi}$ is equivariant, as $\\forall\\,\\mathbf{R}\\in O(3)$ , we have that ", "page_idx": 4}, {"type": "equation", "text": "$$\nq_{\\varphi}(z_{t}|x)=N\\big(z_{t}|\\mu_{\\varphi}(x,t),\\Sigma_{\\varphi}(x,t)\\big)=N\\big(\\mathbf{R}z_{t}|\\mathbf{R}\\mu_{\\varphi}(x,t),\\mathbf{R}\\Sigma_{\\varphi}(x,t)\\mathbf{R}^{\\top}\\big)=q_{\\varphi}(\\mathbf{R}z_{t}|\\mathbf{R}x).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We note that other, and more advanced, parametrizations are possible, e.g. based on normalizing flows with a flow architecture similar to that of Klein et al. (2024). ", "page_idx": 4}, {"type": "text", "text": "Prior and Reconstruction While not strictly required, it can be advantageous to parameterize the transformation $F_{\\varphi}$ such that the prior and reconstruction losses need not be computed. To do so, we design $F_{\\varphi}(\\varepsilon,\\dot{{\\boldsymbol x}},t)$ such that the conditional distribution evolves from a low-variance Gaussian centered around the data, i.e. $q(z_{0}|\\pmb{x})\\approx\\mathcal{N}(z_{0}|\\pmb{x},\\delta^{2}\\mathbb{I})$ to an uninformative prior distribution (that contains no information about the data distribution), i.e. a unit Gaussian $q(z_{1}|\\pmb{x})\\approx\\mathcal{N}(z_{1}|\\pmb{0},\\mathbb{I})$ . Specifically, we parameterize $F_{\\varphi}$ through the following functions, ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mu_{\\varphi}({\\pmb x},t)=(1-t){\\pmb x}+t\\big(1-t\\big)\\bar{\\mu}_{\\varphi}({\\pmb x},t),}\\\\ &{U_{\\varphi}({\\pmb x},t)=\\big(\\delta^{1-t}\\bar{\\sigma}_{\\varphi}({\\pmb x},t)^{t(1-t)}\\big)\\mathbb{I}+t\\big(1-t\\big)\\bar{U}_{\\varphi}({\\pmb x},t),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "which ensure that (i) in $t\\,=\\,0$ , $\\mu_{\\varphi}({\\pmb x},0)\\,=\\,{\\pmb x}$ and $\\Sigma_{\\varphi}({\\pmb x},0)\\,=\\,\\delta^{2}\\mathbb{I}$ ; (ii) in $t\\,=\\,1$ , $\\mu_{\\varphi}({\\pmb x},1)\\,=\\,{\\bf0}$ and $\\Sigma_{\\varphi}(\\pmb{x},1)=\\mathbb{I}$ ; while being unconstrained for $t\\in]0,1[$ [. We note that this is only one possible parametrization for $F_{\\varphi}$ , and that, by adapting $\\mu_{\\varphi}$ and $U_{\\varphi}$ , richer priors can easily be leveraged \u2013 e.g. harmonic prior given a molecular graph or scale-dependent prior (Jing et al., 2023; Irwin et al., 2024). ", "page_idx": 5}, {"type": "text", "text": "Implementation In practice, $F_{\\varphi}$ is implemented as a neural network with an architecture similar to that of the data point predictor $\\hat{\\mathbf{x}}_{\\theta}(z_{t},t)$ , but with a specific readout layer that produces $[\\bar{\\mu}_{\\varphi}({\\bf{x}},t),\\bar{\\sigma}_{\\varphi}({\\bf{x}},t),\\bar{U}_{\\varphi}({\\bf{\\dot{x}}},t)]$ . The mean output $\\bar{\\mu}_{\\varphi}(\\pmb{x},t)$ is similar to that of $\\hat{\\mathbf{x}}_{\\theta}(z_{t},t)$ . For $U_{\\varphi}({\\boldsymbol{x}},t)$ , as $\\Sigma_{\\varphi}(\\pmb{x},t)=U_{\\varphi}(\\pmb{x},t)U_{\\varphi}^{\\top}(\\pmb{x},t)$ should rotate properly, $\\bar{\\sigma}_{\\varphi}(\\pmb{x},t)$ is a positive invariant scalar, while $\\bar{U}_{\\varphi}(\\pmb{x},t)$ is constructed as a matrix whose columns are vectors that transform covariantly with $\\textbf{\\em x}$ . ", "page_idx": 5}, {"type": "text", "text": "To ease notation, we introduced all notations in the linear subspace $R$ , however in practice we work in the ambient space, i.e. $\\pmb{r}\\in\\mathbb{R}^{M\\times3}$ . We detail in Appendix A.5.1, how working in ambient space is possible. The training and sampling procedures are detailed in Algorithms 1 and 2 in the appendix. ", "page_idx": 5}, {"type": "text", "text": "3.3 Conditional Model ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "While unconditional generation is a required stepping stone, many practical applications require some form of controllability. As other generative models, DMs can model conditional distributions $p({\\pmb x}|{\\pmb c})$ , where $^c$ is a given condition. Different methods exist for sampling from the conditional distribution, e.g. Wu et al. (2024), but the simplest approach consists in training a conditional model on pairs $(x,c)$ . In such setting, $F_{\\varphi}$ and $\\hat{x}_{\\theta}$ simply receive an extra input $^c$ representing the conditional information, such that they respectively become $F_{\\varphi}(\\varepsilon,t,{\\boldsymbol x},{\\boldsymbol c})$ , and $\\hat{\\pmb{x}}_{\\theta}(\\pmb{z}_{t},t,\\pmb{c})$ . It is important to note that, compared to conventional DMs, the forward process of END is now also condition-dependent. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we demonstrate the benefits of END with a comprehensive set of experiments. In Section 4.1, we first display the advantages of END for unconditional generation on 2 standard benchmarks, namely QM9 (Ramakrishnan et al., 2014) and GEOM-DRUGS (Axelrod and GomezBombarelli, 2022). Then, in Section 4.2, we perform conditional generation in 2 distinct settings on QM9. Additional experimental details are provided in Appendix A.6. ", "page_idx": 5}, {"type": "text", "text": "Datasets The QM9 dataset (Ramakrishnan et al., 2014) contains 134 thousand small- and mediumsized organic molecules with up to 9 heavy atoms, and up to 29 when counting hydrogen atoms. GEOM-DRUGS (Axelrod and Gomez-Bombarelli, 2022) contains 430 thousand medium- and largesized drug-like molecules with 44 atoms on average, and up to maximum 181 atoms. We use the same data setup as in previous work (Hoogeboom et al., 2022; Xu et al., 2022). ", "page_idx": 5}, {"type": "text", "text": "4.1 Unconditional Generation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Task We sample 10 000 molecules using the stochastic sampling procedure detailed in Algorithm 2. As END is trained in continuous-time, we vary the number of integration steps from 50 to 1000. We repeat each sampling for 3 seeds, and report averages along with standard deviations for each metric. ", "page_idx": 5}, {"type": "text", "text": "Evaluation metrics We follow previous work (Hoogeboom et al., 2022; Xu et al., 2023), and first evaluate the chemical quality of the generated samples in terms of stability, validity, and uniqueness (in Tables 1, 6 and 9). On QM9, we additionally evaluate how well the model learns the atom and bond types distributions by measuring the total variation between the dataset\u2019s and generated distributions, as well as the overall quality of the generated structures via their strain energy, expressed as the energy difference between the generated structure and a relaxed version thereof (in Tables 2 and 6). On GEOM-DRUGS, we additionally compute connectivity, total variation for atom types, and strain energy (in Tables 2 and 9). Connectivity accounts for the fact that validity can easily be increased by generating several disconnected fragments (where only the largest counts towards validity), the total variation ensures that the model properly samples all atom types, whereas the strain energy evaluates the generated geometries. On both datasets, we also report additional drug-related metrics as per Qiang et al. (2023) (in Tables 7 and 10). More details about evaluation metrics are provided in Appendix A.6.1. ", "page_idx": 5}, {"type": "table", "img_path": "40pE5pFhWl/tmp/b476ce66b48c1ef44834a951098d02d9b449890725e6c8b207e1105ffb04074a.jpg", "table_caption": ["Table 1: Stability and validity results on QM9 and GEOM-DRUGS obtained over 10000 samples, with mean/standard deviation across 3 sampling runs. END compares favorably to the baseline across all metrics on both datasets, while offering competitive performance for reduced number of sampling steps. It reaches a performance level similar to that of current SOTA methods. $^{\\ddag}$ denotes results obtained by our own experiments. "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Baselines We compare END to several relevant baselines from the literature: the original EDM (Hoogeboom et al., 2022); EDM-BRIDGE (Wu et al., 2022), an improved version of EDM that adds a physics-inspired force guidance in the reverse process; GEOLDM (Xu et al., 2023), an equivariant latent DM; and GEOBFN (Song et al., 2024), a geometric version of Bayesian Flow Networks (Graves et al., 2024). A detailed discussion about related work can be found in Section 5. ", "page_idx": 6}, {"type": "text", "text": "Ablations of END In addition to baselines from the literature, we compare different ablated versions of END. As the key component to our method is the learnable forward process, the logical ablation is whether to include a learnable forward $\\scriptstyle(=\\mathrm{END})$ , or not $\\scriptstyle(=\\mathrm{EDM})$ ). To ensure a fair comparison and that any difference in performance does not stem from an increase in learnable parameters, an architectural change or the training paradigm, we implement our own EDM (Hoogeboom et al., 2022), denoted $\\mathrm{EDM^{*}}$ . It features the exact same architecture as END, the same amount of learnable parameters (i.e. through a deeper $\\hat{\\pmb{x}}_{\\theta}$ ), and is similarly trained in continuous-time. Additionally, we provide $\\mathrm{EDM^{*}}+\\gamma$ , similar to $\\mathrm{EDM^{*}}$ but with a learned SNR (Kingma et al., 2021) for each data modality (i.e. atomic types and coordinates), and END ( $\\mu_{\\varphi}$ only), an ablated version of END where only the mean is learned whereas the standard deviation of the conditional marginal is pre-specified and derived from the noise schedule of EDM. Table 5 provides an overview of the compared models. ", "page_idx": 6}, {"type": "text", "text": "Results on QM9 Our main results on the QM9 dataset are summarized in the left part of Tables 1 and 2, where END is shown to significantly outperform the baseline and reach a level of performance similar to current SOTA methods, GEOLDM (Xu et al., 2023) and GEOBFN (Song et al., 2024), across stability and validity metrics. The ablation study in Appendix A.2.1 clearly reveals the beneftis of a learnable forward. On the one hand, the two variants of END are shown to outperform (or be on par with) all baselines across all metrics in Table 6 (in particular, in terms of the more challenging molecule stability), and be in better agreement with the data distribution in Table 7 (except for QED which is captured perfectly by all methods). On the other hand, we observe that, with as few as 100 integration steps, END is capable of generating samples that are qualitatively better than those generated by the simpler baselines in 1000 steps. A few illustrative QM9-like molecules generated by END are displayed in Fig. 1. ", "page_idx": 6}, {"type": "table", "img_path": "40pE5pFhWl/tmp/d1bb432f0bd25dea2891d15fd57e20a1a06cb884deba35b0c182830d3cee9a9a.jpg", "table_caption": ["Table 2: Additional results on QM9 and GEOM-DRUGS obtained over 10000 samples, with mean/standard deviation across 3 sampling runs. END matches better the training distributions, and generates less strained structures than baselines. $^{\\ddag}$ denotes results obtained by our own experiments. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Results on GEOM-DRUGS Our main results on the more realistic GEOM-DRUGS dataset are presented in the right part of Tables 1 and 2, where we observe that END is competitive against the compared baselines in terms of atom stability, while being slightly subpar in terms of validity. However, when accounting for connectivity (via the $\\mathbf{V}{\\times}\\mathbf{C}$ metric), we observe that END does outperform the baseline with an increased sucess rate of around $20\\%$ on average, as well as better than the SOTA method GEOLDM (Xu et al., 2023) by a large margin. The generated molecules also better follow the atom types distribution of the dataset \u2013 as per the lower total variation, and feature better geometries than those generated by competitors \u2013 as implied by the lower strain energy. As for QM9, the ablation study provided in Appendix A.2.3 illustrates the clear improvement provided by a learnable forward process compared to a fixed one. In this more challenging setting, only learning the mean function yields a slight decrease in performance across the metrics reported in Table 9, and a similar agreement with the dataset in terms of the drug-related metrics in Table 10, compared to the full model. Furthermore, while each sampling step is currently slower than $\\mathrm{EDM^{*}}$ (Table 11), the improved sampling efficiency afforded by END (in terms of integration steps) allows practical time gains on this more complex dataset. As a concrete example, samples obtained with END with only 100 steps are qualitatively better those generated by $\\mathrm{EDM^{*}}$ in 1000 integration steps, amounting to a 3x time cut. Examples of GEOM-DRUGS-like molecules generated by END are provided in Fig. 1. ", "page_idx": 7}, {"type": "image", "img_path": "40pE5pFhWl/tmp/6bce871bf62961835ffe55c31ad326ec08808f2498b23af07e4de503a25e3e8c.jpg", "img_caption": ["Figure 1: Representative samples generated by END on QM9 (top), and GEOM-DRUGS (bottom). "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.2 Conditional Generation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Dataset and Setup We perform our experiments on the QM9 dataset, on 2 different tasks: composition-conditioned and substructure-conditioned generation. Both tasks allow for direct validation with ground-truth properties without requiring expensive QM calculations, or approximations with surrogate models. In each case, we train a conditional diffusion model as described in Section 3.3, i.e. where $F_{\\varphi}$ and $\\hat{x}_{\\theta}$ are provided with an extra input corresponding to the condition. Additional details are provided in Appendix A.6.4. ", "page_idx": 8}, {"type": "text", "text": "Task 1: composition-conditioned generation The model is tasked to generate a compound with a predefined composition, i.e. structural isomers of a given formula. The condition is specified as a vector $\\pmb{c}=(c_{1},...,c_{D})\\in\\mathbb{Z}^{D}$ , where $c_{d}$ denotes the number of atoms of type $d$ that the sample should contain. To evaluate the model, we generate 10 samples per target formula, and compute the proportion of samples that match the provided composition. Our results are provided in Table 3, where we observe that CEND significantly outperforms the baseline, and offers nearly fully controllable composition generation. Additionally, reducing the number of sampling steps has a very limited impact on the controllability. Finally, we perform an ablation whose results are presented in Table 8, where fixing the standard deviation is shown to lead to a small decrease in performance, with respect to the full model while remaining significantly better than the baseline with fixed forward. ", "page_idx": 8}, {"type": "text", "text": "Task 2: substructure-conditioned generation We adopt a setup similar to that of Bao et al. (2023), and train a conditional END, where the condition is a molecular fingerprint encoding structural information about the molecule. A fingerprint is a binary vector $\\pmb{c}=(c_{1},...,c_{F})\\in\\{0,1\\}^{F}$ , where $c_{f}$ is set to 1 if substructure $f$ is present in the molecule, or to 0 if not. Fingerprints are obtained using OPENBABEL (O\u2019Boyle et al., 2011). We evaluate the ability of the compared models to leverage the provided structural information, by sampling conditionally on fingerprints obtained from the test set. We then compute the Tanimoto similarity between the fingerprints yielded by generated molecules and the fingerprints provided as conditional inputs. We compare CEND to EEGSDE (Bao et al., 2023), an improved version of EDM (Hoogeboom et al., 2022), that performs conditional generation by combining a conditional diffusion model and regressor guidance. Our results are presented in Table 4, along with a handful of samples in Fig. 2, where CEND is shown to offer better controllability than the compared baselines, as highlighted by the higher similarity. ", "page_idx": 8}, {"type": "table", "img_path": "40pE5pFhWl/tmp/10c59628724664dd0ee9a375423bc5e18c639ee4a368e01ebe75eaef4eca75cd.jpg", "table_caption": ["Table 3: On composition-conditioned generation, CEND offers nearly perfect composition controllability. Matching refers to the $\\%$ of samples featuring the prompted composition. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Table 4: On substructure-conditioned generation, CEND shows competitive performance, surpassing EEGSDE that uses an additional property predictor. \u2020Results are borrowed from Bao et al. (2023). ", "page_idx": 8}, {"type": "table", "img_path": "40pE5pFhWl/tmp/754083619665cbcad3bfd21b30fae5ff6295e571a3fdafb1b34353923f18a8ef.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Figure 2: Excerpt of substructureconditioned samples, where CEND matches the provided substructure better (in terms of compositions and local patterns). ", "page_idx": 8}, {"type": "text", "text": "5 Related Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "The main approaches to molecule generation in 3D are autoregressive models (Gebauer et al., 2019; Simm et al., 2020; Gebauer et al., 2022; Luo and Ji, 2022; Daigavane et al., 2024), flow-based models (Garcia Satorras et al., 2021), and diffusion models (Hoogeboom et al., 2022; Igashov et al., 2024). A notable exception to the geometric graph representation of 3D molecules are voxels (Skalic et al., et al., 2024), from which the 3D graph is extracted via some post-processing procedure. Recently, several works have shown that leveraging 2D connectivity information can lead to improved results (Peng et al., 2023; Vignac et al., 2023; Le et al., 2024). While not incompatible with END, we perform our experiments without modeling that auxiliary information, and therefore do not compare to these approaches directly. Other frameworks have also been tailored to molecule generation, such as Flow Matching (Lipman et al., 2022; Song et al., 2023; Irwin et al., 2024) or Bayesian Flow Networks (Graves et al., 2024; Song et al., 2024), also showing promises for accelerated sampling. ", "page_idx": 8}, {"type": "image", "img_path": "40pE5pFhWl/tmp/30ac889533271eed5f4a099a5abcb241c1944a3fe15069ee4170d4c229d8e010.jpg", "img_caption": ["2019; Ragoza et al., 2022; O Pinheiro "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "In the realm of diffusion models for molecules, EDM-BRIDGE (Wu et al., 2022) and EEGSDE (Bao et al., 2023) extend upon a continuous-time formulation of EDM (Hoogeboom et al., 2022), as END also does. Based on the observation that there exists an infinity of processes mapping from prior to target distributions, EDM-BRIDGE constructs one such process that incorporates some prior knowledge, i.e. part of the drift term is a physically-inspired force term. END can be seen as a generalization of EDM-BRIDGE, where the forward drift term is now learned instead of prespecified. Through experiments, we show that a learnable forward performs better than a fixed one, even when the latter is physics-inspired. EEGSDE specifically targets conditional generation by combining (1) a conditional model score model, (2) a method similar to classifier-guidance (requiring the training of an auxiliary model). In CEND, we instead only learn a conditional model. Finally, GEOLDM (Xu et al., 2023) is a latent diffusion model that performs diffusion in the latent space of an equivariant Variational Auto-Encoder (VAE), and it can be seen as a particular case of END, where $F_{\\varphi}(\\pmb{\\varepsilon},t,\\pmb{x})=\\alpha_{t}E_{\\varphi}(\\pmb{x})+\\epsilon\\sigma_{t}$ , with $E_{\\varphi}(x)$ denoting the (time-independent) encoder of the VAE. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we have presented Equivariant Neural Diffusion (END), a novel diffusion model that is equivariant to Euclidean transformations. The key innovation in END lies in the forward process that is specified by a learnable data- and time-dependent transformation. Experimental results demonstrate the benefits of our method. In the unconditional setting, we show that END yields competitive generative performance across two different benchmarks. In the conditional setting, END offers improved controllability, when conditioning on composition and substructure. Finally, as a by-product of the introduced learnable forward, we also find the sampling efficiency (in terms of integration steps) to be improved, while that property is not actively optimized for in the design of the parameterization nor in the training procedure. ", "page_idx": 9}, {"type": "text", "text": "Avenues for future work are numerous. In particular, further leveraging the flexible framework of NFDM (Bartosh et al., 2024) to constrain the generative trajectories, e.g. to be straight and enable even faster sampling, modelling bond information, or extending the conditional setting to other types of conditioning information, e.g. other point cloud or target property, are all promising directions. ", "page_idx": 9}, {"type": "text", "text": "Limitations From a computational perspective, END is currently slower to train and sample from compared to a baseline with fixed forward with identical number of learnable parameters. Even if convergence is similarly fast, each training (resp. sampling) step incurs a relative $\\approx2.5\\mathrm{{x}}$ (resp. $\\approx\\,3\\mathbf{x}$ ). However, END usually requires much fewer number of function evaluations to achieve comparable (or better) accuracy, and alternative (and more efficient) parameterizations of the reverse process exist. In particular, the drift $\\hat{f}_{\\theta,\\varphi}$ could be learned without direct dependence on $f_{\\varphi}$ , thereby leading to an improved training time and, more importantly, a very limited overhead with respect to vanilla DMs for sampling. In terms of scalability, END suffers from limitations similar to concurrent approaches. It operates on fully-connected graphs \u2013 preventing its scaling to very large graphs, and models categorical features through an arbitrary continuous relaxation \u2013 potentially suboptimal and scaling linearly with the number of chemical elements in the modeled dataset. Encodings that scale more gracefully, such as that of Analog Bits (Chen et al., 2023) (logarithmic) or GeoLDM ( $\\mathrm{Xu}$ et al., 2023) (learned low-dimensional), are good candidates to better deal with discrete features within END. In terms of data, the presented findings are limited to organic molecules and the metrics, while widely used in the community, also have some evident limitations. To fully assess the practical interest of the generated molecules, thorough validation with QM simulations would be required. ", "page_idx": 9}, {"type": "text", "text": "Broader Impact Generative models for molecules have the potential to accelerate in-silico discovery and design of drugs or materials. This work proposes an instance of such model. As any generative model, it also comes with potential dangers, as this could be misused for designing e.g. chemicals with adversarial properties. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "FC acknowledges financial support from the Independent Research Fund Denmark with project DELIGHT (Grant No. 0217-00326B). ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "Amil Merchant, Simon Batzner, Samuel S Schoenholz, Muratahan Aykol, Gowoon Cheon, and Ekin Dogus Cubuk. Scaling deep learning for materials discovery. Nature, 624(7990):80\u201385, 2023.   \nLars Ruddigkeit, Ruud Van Deursen, Lorenz C Blum, and Jean-Louis Reymond. Enumeration of 166 billion organic small molecules in the chemical universe database gdb-17. Journal of chemical information and modeling, 52(11):2864\u20132875, 2012.   \nDylan M Anstine and Olexandr Isayev. Generative models as an emerging paradigm in the chemical sciences. Journal of the American Chemical Society, 145(16):8736\u20138750, 2023.   \nNiklas Gebauer, Michael Gastegger, and Kristof Sch\u00fctt. Symmetry-adapted generation of 3d point sets for the targeted discovery of molecules. Advances in neural information processing systems, 32, 2019.   \nNiklas WA Gebauer, Michael Gastegger, Stefaan SP Hessmann, Klaus-Robert M\u00fcller, and Kristof T Sch\u00fctt. Inverse design of 3d molecular structures with conditional generative neural networks. Nature communications, 13(1):973, 2022.   \nYouzhi Luo and Shuiwang Ji. An autoregressive flow model for 3d molecular geometry generation from scratch. In International Conference on Learning Representations, 2022. URL https: //openreview.net/forum?id $\\cdot=$ C03Ajc-NS5W.   \nAmeya Daigavane, Song Eun Kim, Mario Geiger, and Tess Smidt. Symphony: Symmetry-equivariant point-centered spherical harmonics for 3d molecule generation. In The Twelfth International Conference on Learning Representations, 2024. URL https://openreview.net/forum?id $=$ MIEnYtlGyv.   \nEmiel Hoogeboom, V\u0131ctor Garcia Satorras, Cl\u00e9ment Vignac, and Max Welling. Equivariant diffusion for molecule generation in 3d. In International conference on machine learning, pages 8867\u20138887. PMLR, 2022.   \nClement Vignac, Nagham Osman, Laura Toni, and Pascal Frossard. Midi: Mixed graph and 3d denoising diffusion for molecule generation. In Joint European Conference on Machine Learning and Knowledge Discovery in Databases, pages 560\u2013576. Springer, 2023.   \nTuan Le, Julian Cremer, Frank Noe, Djork-Arn\u00e9 Clevert, and Kristof T Sch\u00fctt. Navigating the design space of equivariant diffusion-based generative models for de novo 3d molecule generation. In The Twelfth International Conference on Learning Representations, 2024. URL https:// openreview.net/forum?id=kzGuiRXZrQ.   \nOliver T Unke, Stefan Chmiela, Huziel E Sauceda, Michael Gastegger, Igor Poltavsky, Kristof T Schuett, Alexandre Tkatchenko, and Klaus-Robert Mueller. Machine learning force fields. Chemical Reviews, 121(16):10142\u201310186, 2021.   \nKristof Sch\u00fctt, Pieter-Jan Kindermans, Huziel Enoc Sauceda Felix, Stefan Chmiela, Alexandre Tkatchenko, and Klaus-Robert M\u00fcller. Schnet: A continuous-filter convolutional neural network for modeling quantum interactions. Advances in neural information processing systems, 30, 2017.   \nKristof Sch\u00fctt, Oliver Unke, and Michael Gastegger. Equivariant message passing for the prediction of tensorial properties and molecular spectra. In International Conference on Machine Learning, pages 9377\u20139388. PMLR, 2021.   \nSimon Batzner, Albert Musaelian, Lixin Sun, Mario Geiger, Jonathan P Mailoa, Mordechai Kornbluth, Nicola Molinari, Tess E Smidt, and Boris Kozinsky. E (3)-equivariant graph neural networks for data-efficient and accurate interatomic potentials. Nature communications, 13(1):2453, 2022.   \nIlyes Batatia, David P Kovacs, Gregor Simm, Christoph Ortner, and G\u00e1bor Cs\u00e1nyi. Mace: Higher order equivariant message passing neural networks for fast and accurate force fields. Advances in Neural Information Processing Systems, 35:11423\u201311436, 2022.   \nLing Yang, Zhilong Zhang, Yang Song, Shenda Hong, Runsheng Xu, Yue Zhao, Wentao Zhang, Bin Cui, and Ming-Hsuan Yang. Diffusion models: A comprehensive survey of methods and applications. ACM Computing Surveys, 56(4):1\u201339, 2023.   \nGrigory Bartosh, Dmitry Vetrov, and Christian A Naesseth. Neural diffusion models. arXiv preprint arXiv:2310.08337, 2023.   \nBeatrix Miranda Ginn Nielsen, Anders Christensen, Andrea Dittadi, and Ole Winther. Diffenc: Variational diffusion with a learned encoder. In The Twelfth International Conference on Learning Representations, 2024. URL https://openreview.net/forum?id $\\cdot^{=}$ 8nxy1bQWTG.   \nGrigory Bartosh, Dmitry Vetrov, and Christian A Naesseth. Neural flow diffusion models: Learnable forward process for improved diffusion modelling. arXiv preprint arXiv:2404.12940, 2024.   \nVictor Garcia Satorras, Emiel Hoogeboom, Fabian Fuchs, Ingmar Posner, and Max Welling. E (n) equivariant normalizing flows. Advances in Neural Information Processing Systems, 34:4181\u20134192, 2021.   \nMinkai Xu, Lantao Yu, Yang Song, Chence Shi, Stefano Ermon, and Jian Tang. Geodiff: A geometric diffusion model for molecular conformation generation. In International Conference on Learning Representations, 2022. URL https://openreview.net/forum?id $\\equiv$ PzcvxEMzvQC.   \nFan Bao, Min Zhao, Zhongkai Hao, Peiyao Li, Chongxuan Li, and Jun Zhu. Equivariant energyguided SDE for inverse molecular design. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id $\\overrightharpoon{}$ r0otLtOwYW.   \nJascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In Francis Bach and David Blei, editors, Proceedings of the 32nd International Conference on Machine Learning, volume 37 of Proceedings of Machine Learning Research, pages 2256\u20132265, Lille, France, 07\u201309 Jul 2015. PMLR. URL https://proceedings.mlr.press/v37/sohl-dickstein15.html.   \nJonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \nYang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2020.   \nSimo S\u00e4rkk\u00e4 and Arno Solin. Applied stochastic differential equations, volume 10. Cambridge University Press, 2019.   \nBrian DO Anderson. Reverse-time diffusion equation models. Stochastic Processes and their Applications, 12(3):313\u2013326, 1982.   \nPascal Vincent. A connection between score matching and denoising autoencoders. Neural computation, 23(7):1661\u20131674, 2011.   \nLeon Klein, Andrew Foong, Tor Fjelde, Bruno Mlodozeniec, Marc Brockschmidt, Sebastian Nowozin, Frank No\u00e9, and Ryota Tomioka. Timewarp: Transferable acceleration of molecular dynamics by learning time-coarsened dynamics. Advances in Neural Information Processing Systems, 36, 2024.   \nBowen Jing, Ezra Erives, Peter Pao-Huang, Gabriele Corso, Bonnie Berger, and Tommi S Jaakkola. Eigenfold: Generative protein structure prediction with diffusion models. In ICLR 2023-Machine Learning for Drug Discovery workshop, 2023.   \nRoss Irwin, Alessandro Tibo, Jon Paul Janet, and Simon Olsson. Efficient 3d molecular generation with flow matching and scale optimal transport. In ICML 2024 AI for Science Workshop, 2024. URL https://openreview.net/forum?id=CxAjGjdkqu.   \nLuhuan Wu, Brian Trippe, Christian Naesseth, David Blei, and John P Cunningham. Practical and asymptotically exact conditional sampling in diffusion models. Advances in Neural Information Processing Systems, 36, 2024.   \nRaghunathan Ramakrishnan, Pavlo O Dral, Matthias Rupp, and O Anatole Von Lilienfeld. Quantum chemistry structures and properties of 134 kilo molecules. Scientific data, 1(1):1\u20137, 2014.   \nSimon Axelrod and Rafael Gomez-Bombarelli. Geom, energy-annotated molecular conformations for property prediction and molecular generation. Scientific Data, 9(1):185, 2022.   \nMinkai Xu, Alexander S Powers, Ron O Dror, Stefano Ermon, and Jure Leskovec. Geometric latent diffusion models for 3d molecule generation. In International Conference on Machine Learning, pages 38592\u201338610. PMLR, 2023.   \nBo Qiang, Yuxuan Song, Minkai Xu, Jingjing Gong, Bowen Gao, Hao Zhou, Wei-Ying Ma, and Yanyan Lan. Coarse-to-fine: a hierarchical diffusion model for molecule generation in 3d. In International Conference on Machine Learning, pages 28277\u201328299. PMLR, 2023.   \nLemeng Wu, Chengyue Gong, Xingchao Liu, Mao Ye, and qiang liu. Diffusion-based molecule generation with informative prior bridges. In Alice H. Oh, Alekh Agarwal, Danielle Belgrave, and Kyunghyun Cho, editors, Advances in Neural Information Processing Systems, 2022. URL https://openreview.net/forum?id $\\equiv$ TJUNtiZiTKE.   \nYuxuan Song, Jingjing Gong, Hao Zhou, Mingyue Zheng, Jingjing Liu, and Wei-Ying Ma. Unified generative modeling of 3d molecules with bayesian flow networks. In The Twelfth International Conference on Learning Representations, 2024. URL https://openreview.net/forum?id= NSVtmmzeRB.   \nAlex Graves, Rupesh Kumar Srivastava, Timothy Atkinson, and Faustino Gomez. Bayesian flow networks, 2024.   \nDiederik Kingma, Tim Salimans, Ben Poole, and Jonathan Ho. Variational diffusion models. Advances in neural information processing systems, 34:21696\u201321707, 2021.   \nNoel M O\u2019Boyle, Michael Banck, Craig A James, Chris Morley, Tim Vandermeersch, and Geoffrey R Hutchison. Open babel: An open chemical toolbox. Journal of cheminformatics, 3:1\u201314, 2011.   \nGregor Simm, Robert Pinsler, and Jos\u00e9 Miguel Hern\u00e1ndez-Lobato. Reinforcement learning for molecular design guided by quantum mechanics. In International Conference on Machine Learning, pages 8959\u20138969. PMLR, 2020.   \nIlia Igashov, Hannes St\u00e4rk, Cl\u00e9ment Vignac, Arne Schneuing, Victor Garcia Satorras, Pascal Frossard, Max Welling, Michael Bronstein, and Bruno Correia. Equivariant 3d-conditional diffusion model for molecular linker design. Nature Machine Intelligence, pages 1\u201311, 2024.   \nMiha Skalic, Jos\u00e9 Jim\u00e9nez, Davide Sabbadin, and Gianni De Fabritiis. Shape-based generative modeling for de novo drug design. Journal of chemical information and modeling, 59(3):1205\u2013 1214, 2019.   \nMatthew Ragoza, Tomohide Masuda, and David Ryan Koes. Generating 3d molecules conditional on receptor binding sites with deep generative models. Chemical science, 13(9):2701\u20132713, 2022.   \nPedro O O Pinheiro, Joshua Rackers, Joseph Kleinhenz, Michael Maser, Omar Mahmood, Andrew Watkins, Stephen Ra, Vishnu Sresht, and Saeed Saremi. 3d molecule generation by denoising voxel grids. Advances in Neural Information Processing Systems, 36, 2024.   \nXingang Peng, Jiaqi Guan, Qiang Liu, and Jianzhu Ma. Moldiff: Addressing the atom-bond inconsistency problem in 3d molecule diffusion generation. In International Conference on Machine Learning, pages 27611\u201327629. PMLR, 2023.   \nYaron Lipman, Ricky TQ Chen, Heli Ben-Hamu, Maximilian Nickel, and Matthew Le. Flow matching for generative modeling. In The Eleventh International Conference on Learning Representations, 2022.   \nYuxuan Song, Jingjing Gong, Minkai Xu, Ziyao Cao, Yanyan Lan, Stefano Ermon, Hao Zhou, and Wei-Ying Ma. Equivariant flow matching with hybrid probability transport for 3d molecule generation. In A. Oh, T. Neumann, A. Globerson, K. Saenko, M. Hardt, and S. Levine, editors, Advances in Neural Information Processing Systems, volume 36, pages 549\u2013568. Curran Associates, Inc., 2023. URL https://proceedings.neurips.cc/paper_files/paper/2023/ file/01d64478381c33e29ed611f1719f5a37-Paper-Conference.pdf.   \nTing Chen, Ruixiang ZHANG, and Geoffrey Hinton. Analog bits: Generating discrete data using diffusion models with self-conditioning. In The Eleventh International Conference on Learning Representations, 2023.   \nArthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bernhard Sch\u00f6lkopf, and Alexander Smola. A kernel two-sample test. The Journal of Machine Learning Research, 13(1):723\u2013773, 2012.   \nGreg Landrum et al. Rdkit: A software suite for cheminformatics, computational chemistry, and predictive modeling. Greg Landrum, 8:31, 2013.   \nDavid Weininger. Smiles, a chemical language and information system. 1. introduction to methodology and encoding rules. Journal of chemical information and computer sciences, 28(1):31\u201336, 1988.   \nPeter Ertl and Ansgar Schuffenhauer. Estimation of synthetic accessibility score of drug-like molecules based on molecular complexity and fragment contributions. Journal of cheminformatics, 1:1\u201311, 2009.   \nTuan Le, Frank Noe, and Djork-Arn\u00e9 Clevert. Representation learning on biomolecular structures using equivariant graph attention. In The First Learning on Graphs Conference, 2022. URL https://openreview.net/forum?id $\\cdot^{=}$ kv4xUo5Pu6. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Appendices ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "A.1 Compared models ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In Table 5, we detail all the compared diffusion models in terms of their transformation $F_{\\varphi}$ . ", "page_idx": 14}, {"type": "table", "img_path": "40pE5pFhWl/tmp/5c0df7a1223e77f0463e9fdd8ae8c0cbb3cec5c52d3febc9a495d27acb645146.jpg", "table_caption": ["Table 5: Compared models. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "A.2 Additional results ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "A.2.1 Ablation on unconditional QM9 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Table 6: Main results of the ablation study on QM9. Metrics are obtained over 10000 samples, with mean/standard deviation across 3 sampling runs. The two variants of END compare favorably to baselines across metrics, while offering competitive performance for reduced number of sampling steps. ", "page_idx": 14}, {"type": "table", "img_path": "40pE5pFhWl/tmp/6d9f7ee0b4d78248586597b30cd7ed9ca239b092dab098a102a479f1a7fc20fa.jpg", "table_caption": [], "table_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "40pE5pFhWl/tmp/0294e02ac6cd1fb6005454c9b113ee887377010c4e09b0f9fee9f0cd15226d01.jpg", "table_caption": ["Table 7: Additional results of the ablation study with metrics from HIERDIFF (Qiang et al., 2023) and MMD (Gretton et al., 2012; Daigavane et al., 2024) on QM9. The two variants of END shows better, or on par, agreement with the true data distribution compared to the baselines. "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "A.2.2 Ablation on composition-conditioned QM9 ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Table 8: Ablation on composition-conditioned generation. The two versions CEND display better controllability. Fixing the standard deviation leads to a small decrease in performance, with respect to the full model while remaining significantly better than the baseline with fixed forward. ", "page_idx": 16}, {"type": "table", "img_path": "40pE5pFhWl/tmp/ed6046ef1b141dde2f64fa87a75cef8d87102e3b9263d51c0974139942dbefca.jpg", "table_caption": [], "table_footnote": [], "page_idx": 16}, {"type": "text", "text": "A.2.3 Ablations on GEOM-DRUGS ", "text_level": 1, "page_idx": 16}, {"type": "table", "img_path": "40pE5pFhWl/tmp/8e51de22ad6d8f0d3cf33e772cd7d84ddd963b90859c1f2281ef7bd3b8eebfd3.jpg", "table_caption": ["Table 9: Main results of the ablation study on GEOM-DRUGS. Metrics are obtained over 10000 samples, with mean/standard deviation across 3 sampling runs. Most notably, END generates more connected samples, and less strained structures. Fixing the standard deviation leads to a slight decrease in performance. "], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "40pE5pFhWl/tmp/4f9ba6ad8e66f26142223075efe6c0e9b89336819c17c17a5b4e7a6b4ad25164.jpg", "table_caption": ["Table 10: Additional results of the ablation study with metrics from HIERDIFF (Qiang et al., 2023) on GEOM-DRUGS. The two variants of END shows better agreement with the true data distribution, compared to the baseline with fixed forward. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "A.3 Equivariance / invariance proofs ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "A.3.1 Time-derivative of an O(3)-equivariant function ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Let $f:\\mathcal{X}\\times[0,1]\\to\\mathcal{Y}$ be a function that is equivariant to actions of the group $O(3)$ , such that ${\\pmb R}\\cdot{\\pmb f}({\\pmb x},t)={\\bar{\\pmb f}}({\\pmb{\\dot{R}}}\\cdot{\\pmb x},t),\\forall{\\pmb R}\\in O(3)$ . ", "page_idx": 18}, {"type": "text", "text": "Proof sketch We need to show that $\\begin{array}{r}{\\frac{\\partial}{\\partial t}\\big(f(\\pmb{R}\\cdot\\pmb{x},t)\\big)=\\pmb{R}\\cdot\\frac{\\partial}{\\partial t}\\big(f(\\pmb{x},t)\\big),\\forall\\pmb{R}\\in O(3)}\\end{array}$ and $\\forall{\\pmb x}\\in{\\mathcal{X}}$ . ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{\\partial}{\\partial t}\\big(f(\\pmb{R}\\cdot\\pmb{x},t)\\big)=\\frac{\\partial}{\\partial t}\\big(\\pmb{R}\\cdot f(\\pmb{x},t)\\big),}\\\\ {=\\pmb{R}\\cdot\\frac{\\partial}{\\partial t}\\big(f(\\pmb{x},t)\\big),}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "where the last equality follows by linearity. ", "page_idx": 18}, {"type": "text", "text": "A.3.2 Inverse of an O(3)-equivariant function ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Let $f:\\mathcal X\\to\\mathcal Y$ be a function that (1) is equivariant to the action of the group $O(3)$ , and (2) admits an inverse $f^{-1}:\\mathcal{V}\\rightarrow\\mathcal{X}$ , then $f^{-1}$ is also equivariant to the action of $O(3)$ . ", "page_idx": 18}, {"type": "text", "text": "Proof sketch We need to show that $f^{-1}\\left(\\pmb{R}\\cdot\\pmb{y}\\right)=\\pmb{R}\\cdot f^{-1}(\\pmb{y}),\\forall\\pmb{R}\\in O(3)$ and $\\forall\\pmb{y}\\in\\mathcal{Y}$ . ", "page_idx": 18}, {"type": "text", "text": "Since $f$ is invertible, we have that to any $\\b{y}\\in\\b{\\mathcal{V}}$ corresponds a unique $x\\in\\mathcal{X}$ , such that ${\\pmb y}=f({\\pmb x})$ , and that $f^{-1}({\\pmb y})\\;=\\;f^{-1}(f({\\pmb x}))\\;=\\;{\\pmb x}$ . As $f$ is equivariant to the action of $O(3)$ , we have that $\\pmb{R}\\cdot\\pmb{f}(\\pmb{x})=\\pmb{f}(\\pmb{R}\\cdot\\pmb{x}),\\forall\\pmb{R}\\in O(3)$ : ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{f^{-1}\\big(\\pmb{R}\\cdot\\pmb{y}\\big)=f^{-1}\\big(\\pmb{R}\\cdot f(\\pmb{x})\\big),}\\\\ &{\\qquad\\qquad\\qquad=f^{-1}\\big(f(\\pmb{R}\\cdot\\pmb{x})\\big),}\\\\ &{\\qquad\\qquad\\qquad=\\pmb{R}\\cdot\\pmb{x},}\\\\ &{\\qquad\\qquad\\qquad=\\pmb{R}\\cdot f^{-1}(\\pmb{y}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "A.3.3 O(3)-invariance of the objective function ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "In this section, we show that the objective function is invariant under the action of $O(3)$ : $\\mathcal{L}_{\\mathrm{END}}(\\mathbf{R}x)=\\mathcal{L}_{\\mathrm{END}}(x),\\forall\\pmb{R}\\in O(3)$ , provided that $F_{\\varphi}$ and $\\hat{x}_{\\theta}$ are equivariant. ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle u\\rangle=\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\Tilde{\\sigma}_{(3)},\\Tilde{\\sigma}_{(4)},\\epsilon_{(1)},\\epsilon_{(2)}}}\\\\ &{\\quad-\\int_{\\r{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\Tilde{\\sigma}_{(3)},\\epsilon_{(1)},\\epsilon_{(1)},\\epsilon_{(2)}}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(3)},\\dots,\\Tilde{\\sigma}_{(2)},\\Tilde{\\sigma}_{(1)},\\epsilon_{(3)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(1)},\\epsilon_{(2)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(1)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(2)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(1)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(2)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(1)},\\epsilon_{(2)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(1)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\Tilde{\\sigma}_{(2)},\\dots,\\Tilde{\\sigma}_{(2)},\\epsilon_{(1)}}\\\\ &{\\quad-\\sum_{\\Tilde{\\sigma}_{(1)},\\dots,\\Tilde{\\sigma}_{(2)},\\epsilon_{(1)}}[\\frac{1}{\\Tilde{\\sigma}_{\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "The first equality is obtained by replacing $\\textbf{\\em x}$ by ${\\bf R}x$ in the definition of the objective function Eq. (5). The second is obtained by multiplying by $\\mathbf{R}\\mathbf{\\dot{R}}^{-1}=\\mathbb{I}$ . The third equality by leveraging that $f_{\\varphi},q_{\\varphi}$ and $\\hat{x}_{\\theta}$ are equivariant. We then perform a change of variable $\\pmb{y}_{t}=\\mathbf{R}^{-1}\\pmb{z}_{t}$ . As rotation does preserve distances, we obtain the last equality. ", "page_idx": 19}, {"type": "text", "text": "Algorithm 1 Training algorithm of END ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Require: $q(\\pmb{x}),F_{\\varphi},$ , $\\hat{\\pmb{x}}_{\\theta}$ for training iterations do $\\begin{array}{r l}&{\\pmb{x}\\sim q\\breve{(\\pmb{x})},t\\sim u(t),\\pmb{\\varepsilon}\\sim p(\\pmb{\\varepsilon})}\\\\ &{z_{t}\\leftarrow\\mu_{\\varphi}(\\pmb{x},t)+U_{\\varphi}(\\pmb{x},t)\\pmb{\\varepsilon}}\\\\ &{\\mathcal{L}=\\frac{1}{2g_{\\varphi}^{2}(t)}\\big|\\big|f_{\\varphi}^{B}(z_{t},t,\\pmb{x})-\\hat{f}_{\\theta,\\varphi}(z_{t},t)\\big|\\big|_{2}^{2}}\\\\ &{\\simeq\\cdots}\\end{array}$ Gradient step on $\\theta$ and $\\varphi$ end for ", "page_idx": 20}, {"type": "text", "text": "Algorithm 2 Stochastic sampling from END ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Require: $F_{\\varphi},{\\hat{\\mathbf{x}}}_{\\theta}$ , integration steps $T$ , empirical distribution of number of atoms $p(N)$ \u2206t = T1 N \u223cp(N) z1 \u223cp(z1) for $t=1,...,\\frac{1}{T}\\ .$ do w\u00af \u223cN(0, I) zt\u2212\u2206t \u2190zt \u2212f\u02c6\u03b8,\u03c6(zt, t)\u2206t + g\u03c6(t) w\u00af \u2206t end for x \u223cp(x|z0) ", "page_idx": 20}, {"type": "text", "text": "A.5 Details about $F_{\\varphi}$ ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "A.5.1 Working in ambient space ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In this section, we omit the invariant features, and consider that $\\pmb{x},z_{t},\\pmb{\\varepsilon}\\in\\mathbb{R}^{M\\times d}$ are all collections of vectors. ", "page_idx": 21}, {"type": "text", "text": "In opposition to the notations introduced in Section 3, we would like $F_{\\varphi}$ and $\\hat{x}_{\\theta}$ (which ultimately are neural networks) to operate in ambient space directly, i.e. on $z_{t},\\mathbf{\\boldsymbol{x}},\\varepsilon\\in R$ with $\\boldsymbol{R}=\\{\\pmb{v}\\in\\mathbb{R}^{M\\times d}$ : $\\begin{array}{r}{\\frac{1}{M}\\sum_{i=1}^{M}\\pmb{v}_{i}=\\pmb{0}\\}}\\end{array}$ , instead of $\\mathbb{R}^{(M-1)\\times d}$ as initially presented. To do so, we use the results from Garcia Satorras et al. (2021) that showed that the Jacobian of the transformation $F_{\\varphi}$ can be computed in ambient space, for $\\scriptstyle z_{t}$ and $\\varepsilon$ that live in the linear subspace $R$ , provided that the transformation $F_{\\varphi}$ (invertible with respect to $\\varepsilon$ ) leaves the center of mass of $\\varepsilon$ unchanged. ", "page_idx": 21}, {"type": "text", "text": "Considering flat representations of $\\boldsymbol{z}_{t},\\boldsymbol{x},\\boldsymbol{\\varepsilon}\\in\\mathbb{R}^{M\\cdot d}$ , the parameterization of $F_{\\varphi}$ introduced in Eqs. (6), (8) and (9) can be adapted as follows to achieve such property ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle F_{\\varphi}({\\pmb\\varepsilon},t,{\\pmb x})=\\mu_{\\varphi}({\\pmb x},t)+U_{\\varphi}({\\pmb x},t){\\pmb\\varepsilon},}}\\\\ {{\\displaystyle\\mu_{\\varphi}({\\pmb x},t)=\\big(\\mathbb{I}_{M\\cdot d}-\\frac{1}{M}T T^{\\top}\\big)\\tilde{\\mu}_{\\varphi}({\\pmb x},t)}}\\\\ {{\\displaystyle U_{\\varphi}({\\pmb x},t)=\\big(\\mathbb{I}_{M\\cdot d}-\\frac{1}{M}T T^{\\top}\\big)\\tilde{U}_{\\varphi}({\\pmb x},t)+\\frac{1}{M}T T^{\\top},}}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "where $T\\in\\mathbb{R}^{M\\cdot d\\times d}=[\\mathbb{I}_{d},\\mathbb{I}_{d},\\ldots]^{\\top}$ , and $\\scriptstyle{\\frac{1}{M}}T T^{\\top}$ corresponds to the linear operator computing the center of mass. In Eq. (11), the unconstrained mean output $\\tilde{\\mu}_{\\varphi}(\\pmb{x},t)$ is simply projected onto the $\\scriptstyle0-\\mathrm{CoM}$ subspace, thereby inducing no translation. In Eq. (12), the unconstrained output of $\\tilde{U}_{\\varphi}({\\bf{\\em x}},t)$ is first projected onto the 0-CoM subspace, before being translated back to the initial center of mass. With this adapted formulation, we need to be able to (1) compute the latent variable $z_{t}$ given $\\varepsilon$ , (2) ", "page_idx": 21}, {"type": "text", "text": "evaluate the Jacobian of the transformation $F_{\\varphi}$ , and (3) evaluate the inverse transformation $F_{\\varphi}^{-1}$ . ", "page_idx": 21}, {"type": "text", "text": "Computing $\\scriptstyle z_{t}$ from $\\varepsilon$ Given that $\\varepsilon\\in R$ , obtaining $\\textstyle z_{t}\\in R$ from $\\varepsilon$ simply amounts to (1) computing $\\tilde{z}_{t}=\\tilde{\\mu}_{\\varphi}(\\mathbf{\\boldsymbol{x}},t)+\\tilde{U}_{\\varphi}(\\mathbf{\\boldsymbol{x}},t)\\varepsilon$ , and then (2) removing the center of mass from $\\tilde{z}_{t}$ \u2013 the second term in Eq. (12) induces no translation as $\\varepsilon\\in R$ . ", "page_idx": 21}, {"type": "text", "text": "Computing $|J_{F_{\\varphi}}|$ and $F_{\\varphi}^{-1}$ In what follows, we shorten the notation, and denote $U_{\\varphi}({\\boldsymbol{x}},t)$ by $U$ and $\\tilde{U}_{\\varphi}({\\bf{\\em x}},t)$ by $\\tilde{U}$ . To leverage known identities, we start by reorganizing Eq. (12), as ", "page_idx": 21}, {"type": "equation", "text": "$$\nU=\\tilde{U}+\\frac{1}{M}{T}{T}^{\\top}(\\mathbb{I}_{M\\cdot d}-\\tilde{U}).\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "The Jacobian of $F_{\\varphi}$ is given by the determinant of $U$ , and the latter can be derived by leveraging the Matrix Determinant Lemma, ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\mathrm{det}\\,U=\\mathrm{det}\\,\\tilde{U}\\cdot\\mathrm{det}\\,\\big(\\mathbb J_{d}+\\frac{1}{M}T^{\\top}(\\mathbb I_{M^{\\cdot}}-\\tilde{U})\\tilde{U}^{-1}T\\big),}\\\\ {\\displaystyle\\qquad=\\mathrm{det}\\,\\tilde{U}\\cdot\\mathrm{det}\\,\\big(\\mathbb J_{d}+\\frac{1}{M}T^{\\top}(\\tilde{U}^{-1}-\\mathbb I_{M^{\\cdot}}d)T\\big),}\\\\ {\\displaystyle\\qquad=\\mathrm{det}\\,\\tilde{U}\\cdot\\mathrm{det}\\,\\big(\\frac{1}{M}\\sum_{m=1}^{M}(\\tilde{U}^{m})^{-1}\\big),}\\\\ {\\displaystyle\\qquad=\\mathrm{det}\\,\\tilde{U}\\cdot\\mathrm{det}\\,V,}\\\\ {\\displaystyle\\qquad=\\prod_{m=1}^{M}\\mathrm{det}\\,\\tilde{U}^{m}\\cdot\\mathrm{det}\\,V,}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "wCohemrep $\\tilde{U}^{m}$ g  dtheen oJtaecso tbhiea $m$ -htehr $d\\times d$ -mblooucnkt si nt $\\tilde{U}$ ,o amnpdu $\\begin{array}{r}{V\\,=\\,\\frac{1}{M}\\sum_{m=1}^{M}(\\tilde{U}^{m})^{-1}}\\end{array}$ -s maa $d\\times d$ -amnda ttrihxe. $M$ $d\\times d$ determinant of $M+1\\ d\\times d$ -matrices. In practice, $d=3$ such that all computations can be performed in closed-form. ", "page_idx": 21}, {"type": "text", "text": "Regarding $F_{\\varphi}^{-1}$ , we do not need to evaluate the inverse transformation itself, but instead evaluate $\\varepsilon$ given $\\scriptstyle z_{t}$ , ", "page_idx": 22}, {"type": "equation", "text": "$$\n{\\pmb\\varepsilon}=U^{-1}\\big({\\pmb z}_{t}-\\mu({\\pmb x},t)\\big).\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "The inverse $U^{-1}$ can be obtained via the Woodbury matrix identity, ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\boldsymbol{U}^{-1}=\\big(\\tilde{\\boldsymbol{U}}+\\frac{1}{M}T\\boldsymbol{T}^{\\top}\\big(\\mathbb{I}_{M\\cdot d}-\\tilde{\\boldsymbol{U}}\\big)\\big)^{-1},}\\\\ &{\\quad\\quad=\\tilde{\\boldsymbol{U}}^{-1}-\\frac{1}{M}\\tilde{\\boldsymbol{U}}^{-1}T\\boldsymbol{V}^{-1}T^{\\top}(\\tilde{\\boldsymbol{U}}^{-1}-\\mathbb{I}_{M\\cdot d}),}\\\\ &{\\quad\\quad=\\tilde{\\boldsymbol{U}}^{-1}(\\mathbb{I}-\\boldsymbol{C}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where V =M1 $\\begin{array}{r}{V=\\frac{1}{M}\\sum_{m=1}^{M}(\\tilde{U}^{m})^{-1}}\\end{array}$ as previously defined in Eq. (18), and $\\begin{array}{r}{C=\\frac{1}{M}T V^{-1}T^{\\top}(\\tilde{U}^{-1}\\!-\\!\\mathbb{I}_{M\\cdot d})}\\end{array}$ . Given the specific structure of , the computation of $\\varepsilon$ can be simplified to ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\pmb{\\varepsilon}=U^{-1}\\bar{z}_{t},}\\\\ &{\\quad=\\tilde{U}^{-1}(\\mathbb{I}-C)\\bar{z}_{t},}\\\\ &{\\quad=\\tilde{U}^{-1}\\big[\\bar{z}_{t}-\\pmb{c}\\big],}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where $\\bar{z}\\,=\\,\\bigl(z_{t}\\,-\\mu({\\bf z},t)\\bigr)$ and $c=C\\bar{z}_{t}$ acts as a translation operator. We note that computing the inverse transformation requires to invert $M+1\\ d\\times d$ -matrices, but as $d=3$ in practice, all computations can be performed in closed-form. ", "page_idx": 22}, {"type": "text", "text": "A.5.2 Invariant features ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "For simplicity, we omitted in Section 3 and Appendix A.5.1 that molecules are described as tuples: $\\boldsymbol{x}=(\\boldsymbol{r},h)$ , as only $\\pmb{r}$ transform under Euclidean transformations. For the invariant features $^h$ , we use the following parameterization ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mu_{\\varphi}^{(h)}({\\pmb x},t)=(1-t){\\pmb h}+t\\big(1-t\\big)\\bar{\\mu}_{\\varphi}^{(h)}({\\pmb x},t),}\\\\ &{\\sigma_{\\varphi}^{(h)}({\\pmb x},t)=\\delta^{1-t}\\bar{\\sigma}_{\\varphi}({\\pmb x},t)^{t(1-t)}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "which ensures that $\\mu_{\\varphi}^{(h)}({\\pmb x},0)=h$ and $\\sigma_{\\varphi}^{(h)}({\\pmb x},0)=\\delta$ ; whereas $\\mu_{\\varphi}^{(h)}({\\pmb x},1)={\\bf0}$ and $\\sigma_{\\varphi}^{(h)}({\\pmb x},1)=\\mathbb{I}$ . ", "page_idx": 22}, {"type": "text", "text": "Implementation As described in the main text in Section 3.2, $F_{\\varphi}$ is implemented as a neural network with an architecture similar to that of the data point predictor $\\hat{\\mathbf{x}}_{\\theta}(z_{t},t)$ , but with a specific readout layer that produces the outputs related to $\\pmb{r}$ $\\bar{([\\bar{\\mu}_{\\varphi}(\\mathbf{\\bar{x}},t),\\bar{\\sigma}_{\\varphi},\\bar{U}_{\\varphi}(\\mathbf{x},t)])}$ . Additionally, it produces $\\bar{\\mu}_{\\varphi}^{(h)}(\\pmb{x},t)$ and $\\bar{\\pmb{\\sigma}}_{\\varphi}^{(h)}(\\pmb{x},t)$ as invariant outputs. ", "page_idx": 22}, {"type": "text", "text": "Inverse transformation The logarithm of the determinant of the inverse transformation $\\log|J_{F}^{-1}|$ writes ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\log|J_{F}^{-1}|=-\\log|J_{F}|=-\\sum_{i=1}^{M\\times D}\\sigma_{\\varphi}^{(h),i}(\\pmb{x},t)-\\sum_{i=m}^{M}\\log\\big|\\operatorname*{det}(U_{\\varphi}^{m}(\\pmb{x},t))\\big|-\\log\\operatorname*{det}|V|,\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where $V$ is defined as in Eq. (18). ", "page_idx": 22}, {"type": "text", "text": "A.6 Experimental details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "In addition to the details provided in this section, we release a public code repository with our implementation of END. ", "page_idx": 23}, {"type": "text", "text": "A.6.1 Evaluation metrics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "In this section, we describe the metrics employed to evaluate the different models: ", "page_idx": 23}, {"type": "text", "text": "\u2022 Stability: An atom is deemed stable if it has a charge of 0, whereas a molecule is stable if all its atoms have 0 charge. We reuse the lookup table from Hoogeboom et al. (2022) to infer bond types from pairwise distances.   \n\u2022 Validity and Connectivity: Validity corresponds to the percentage of samples that can be parsed and sanitized by rdkit (Landrum et al., 2013), after inference of the bonds using the lookup table mechanism (Hoogeboom et al., 2022). It should be noted that the metric does not penalize fragmented samples as long as each individual fragment appears valid. This can be problematic when running evaluation on larger compounds such as those in GEOM-DRUGS, as models tend to generated disconnected structures. To account for that, we also report Connectivity, which simply check that a valid molecule is composed of exactly one fragment.   \n\u2022 Uniqueness: Uniqueness is expressed as the proportion of samples that are valid and have a unique SMILES string (Weininger, 1988) among all the generated samples. On GEOM-DRUGS, we do not report Uniqueness as all generated samples appear unique (as per previous work).   \n\u2022 Total variation: The total variation is computed as the MAE between the (discrete) marginal obtained on the training data and on the generated samples. For bond types on QM9, we compute the ground truth and generated distributions using the lookup table mechanism (Hoogeboom et al., 2022).   \n\u2022 Strain Energy: The strain energy is expressed as the difference in energy between generated structures and a relaxed version thereof obtained as per rdkit\u2019s MMFF (Landrum et al., 2013). From the generated samples, we infer rdkit mol objects using OPENBABEL (O\u2019Boyle et al., 2011). We only evaluate the strain energy of valid and connected samples.   \n\u2022 SA, QED, $\\log{P}$ and MW: SA denotes the \"Synthetic Accessibility Score\", which is a rule-based scoring function that evaluates the complexity of synthesizing a structure by organic reactions (Ertl and Schuffenhauer, 2009). We normalized its values between 0 and 1, with 0 being \u201cdifficult to synthesize\u201d and 1 \u201ceasy to synthesize\u201d. QED denotes \"Quantitative Estimation of Drug-likeness\". $\\log{P}$ denotes the octanol-water partition coefficient. MW denotes the molecular weight. We employ the rdkit\u2019s implementation of all metrics. To do so, we convert the generated samples to rdkit mol objects using OPENBABEL (O\u2019Boyle et al., 2011). We then only evaluate the different metrics for valid and connected samples.   \n\u2022 MMD: On QM9, we follow the procedure of Daigavane et al. (2024), and compute the MMD Gretton et al. (2012) between true and generated pairwise distances distributions for the 10 most common bonds in the dataset: [\"C-H:1.0\", \"C-C:1.0\", \"C-O:1.0\", \"C-N:1.0\", \"H-N:1.0\", \"C-O:2.0\", \"C-N:1.5\", \"H-O:1.0\", \"C-C:1.5\", \"C-N:2.0\"]. ", "page_idx": 23}, {"type": "text", "text": "A.6.2 Architecture ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Our forward transformation $F_{\\varphi}$ and data point predictor $\\hat{x}_{\\theta}$ share a common neural network architecture that we detail here. The architecture is similar to that of EQCAT (Le et al., 2022), and updates a collection of invariant and equivariant features for each node in the graph. We choose that architecture because it allows for an easy construction of $\\bar{U}_{\\varphi}(\\pmb{x},t)$ by linear projection of the final equivariant layer. ", "page_idx": 23}, {"type": "text", "text": "We follow previous work (Hoogeboom et al., 2022) and consider fully-connected graphs. We initially featurize pairwise distances through Gaussian Radial Basis functions, with dataset-specific cutoff taken large enough to ensure full connectivity. In opposition to Hoogeboom et al. (2022), we do not update positions in the message-passing phase, but instead obtain the positions prediction through a linear projection of the final equivariant hidden states. The predictions for the invariant features are obtained by reading out the final invariant hidden states. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "Optimization For all model variants, we employ Adam with a learning rate of $10^{-4}$ . We perform gradient clipping (norm) with a value of 10 on QM9, and a value of 1 on GEOM-DRUGS. ", "page_idx": 24}, {"type": "text", "text": "A.6.3 Unconditional generation ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We reuse the data setup from previous work (Hoogeboom et al., 2022; Xu et al., 2023). ", "page_idx": 24}, {"type": "text", "text": "QM9 On QM9, we use 10 layers of message passing for $\\mathrm{EDM^{*}}$ , while the variants of END feature 5 layers of message-passing in $F_{\\varphi}$ and 5 layers in $\\hat{x}_{\\theta}$ . For all models, we use 256 invariant and 256 equivariant hidden features, along with an RBF expansion of dimension 64 with a cutoff of $10\\mathring\\mathrm{A}$ for pairwise distances. This ensures that the compared models have the same number of learnable parameters, i.e. $\\approx9.4\\mathrm{M}$ each. We train all models for at most 1000 epochs with a batch size of 64. ", "page_idx": 24}, {"type": "text", "text": "GEOM-Drugs On GEOM-DRUGS, we use 10 layers of message passing for $\\mathrm{EDM^{\\ast}}$ , while the variants of END feature 5 layers of message-passing in $F_{\\varphi}$ and 5 in $\\hat{x}_{\\theta}$ . The hidden size of the invariant and equivariant features is set to 192, along with an RBF expansion of dimension 64 with a cutoff of $30\\mathring\\mathrm{A}$ for pairwise distances (as to ensure full-connectivity). Each model features $\\approx5.4\\mathrm{M}$ learnable parameters. We train all models for 10 epochs with an effective batch size of 64. ", "page_idx": 24}, {"type": "text", "text": "A.6.4 Conditional generation ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We use 10 layers of message passing for $\\mathrm{EDM^{*}}$ , while the variants of END feature 5 layers of message-passing in $F_{\\varphi}$ and 5 in $\\hat{x}_{\\theta}$ . The hidden size of the invariant and equivariant features is set to 192 , along with an RBF expansion of dimension 64 with a cutoff of $10\\mathring\\mathrm{A}$ for pairwise distances. We train all models for 1000 epochs with a batch size of 64. ", "page_idx": 24}, {"type": "text", "text": "After an initial encoding, the conditional information is introduced at the end of each message passing step, and alters the scalar hidden states through a one-layer MLP, that shares the same dimension as the hidden scalar state. ", "page_idx": 24}, {"type": "text", "text": "Composition-conditioned generation The encoding of the condition follows that of Gebauer et al. (2022). Each atom type gets its own embedding (of dimension 64), weighted by the proportion it represents in the provided formula. The weighted embeddings of all atom types are then concatenated and flattened, and the obtained vector (of dimension $64\\times$ number of atom types ) is processed through a 2-layer MLP with 64 hidden units. ", "page_idx": 24}, {"type": "text", "text": "The compositions used at sampling time are extracted from the validation and test sets. For each unique formula, the model gets to generate 10 samples. The reported matching rate refers to the $\\%$ of generated samples featuring the prompted composition. ", "page_idx": 24}, {"type": "text", "text": "Substructure-conditioned generation The encoding of the condition follows that of Bao et al. (2023). Each molecule is first converted to an OPENBABEL object (O\u2019Boyle et al., 2011) (solely based on positions and atom types), from which a fingerprint is in turn calculated. The obtained 1024- dimensional fingerprint is simply processed by a 2\u2212layer MLP with hidden dimensions [512, 256], and a final linear projection to 192, i.e. the hidden size of the invariant features. ", "page_idx": 24}, {"type": "text", "text": "The model is evaluated by computing the Tanimoto similarity between the fingerprints obtained from the generated samples and the fingerprints provided as conditional inputs. ", "page_idx": 24}, {"type": "text", "text": "A.7 Compute resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "All experiments were run on a single GPU. The experiments on QM9 were run on a NVIDIA SM3090 with $24\\:\\mathrm{GB}$ of memory. The experiments on GEOM-DRUGS were run on NVIDIA A100 with 40 GB. Training took up to 7 days. ", "page_idx": 24}, {"type": "text", "text": "Sampling The current implementation of END leads to $\\approx\\,3\\mathbf{x}$ increase relative to EDM (with comparable number of learnable parameters) per function evaluation when performing sampling. ", "page_idx": 24}, {"type": "text", "text": "However, END usually requires much fewer number of function evaluations to achieve comparable (or better) accuracy, and we note that alternative parameterizations of the reverse process are possible. In particular, the drift of the reverse process $\\bar{f}_{\\theta,\\varphi}$ could be learned without direct dependence on $f_{\\varphi}$ , thereby leading to very limited overhead with respect to vanilla diffusion models for sampling \u2013 only one neural network forward network would then be required. For reference, we report sampling times on QM9 (1024 samples) in Table 11, for varying numbers of integration steps. ", "page_idx": 25}, {"type": "table", "img_path": "40pE5pFhWl/tmp/41191adda47491f2bea6b0d09be5887ca07ef932f36b3d2d2f2608dc772adb3a.jpg", "table_caption": ["Table 11: Average sampling time in seconds for 1024 samples on QM9. The current implementation of END leads to $\\approx3\\mathbf{x}$ increase relative to EDM. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "Training A training step on QM9 (common batch size of 64) takes on average $\\approx0.37\\mathrm{s}$ (END) vs 0.16s (EDM), this corresponds to a $\\approx\\,2.3\\mathrm{{x}}$ relative increase. We observe the same trend on GEOM-Drugs (with an effective batch size of 64), a training step takes on average $\\approx0.40\\mathrm{s}$ for END vs. $\\approx0.15\\mathrm{s}$ for EDM (corresponding to $\\mathrm{a\\approx2.7x}$ relative increase). In summary, other things equal, END leads to $\\approx2.5\\mathrm{{x}}$ increase relative to EDM per training step while we find it to converge with a similar number of epochs. As for sampling, a direct parametrization of $\\hat{f}_{\\theta,\\varphi}$ would enable faster training \u2013 while still requiring the evaluation of $f_{\\varphi}$ to obtain the target reverse drift term in Eq. (5). ", "page_idx": 25}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: The method section shows that the proposed model has the properties we claim it has, while the experimental section demonstrates its performance. We additionally highlight limitations Section 6. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 26}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: In Section 6, we discuss the limitations of the proposed approach, and of the experimental validation. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 26}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Justification: When appropriate, we provide a proof sketch in Appendix. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 27}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: The data configuration follows from previous work, while most of the experimental details are provided in Appendix. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 27}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: We provide a public code repository with our implementation. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 28}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The data configuration follows from previous work, while most of the experimental details are provided in Appendix. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 28}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: All sampling results are averages over multiple seeds and we include standard errors. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We provide compute resources details in Appendix A.7. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 29}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: The paper conforms with the NeurIPS Code of Ethics. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 29}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: There is a dedicated paragraph in Section 6. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 29}, {"type": "text", "text": "", "page_idx": 30}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 30}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 30}, {"type": "text", "text": "Justification: The paper does not pose such risks. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 30}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We have cited the original papers that released the datasets. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 30}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 31}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: No assets are introduced in the paper. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 31}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: The paper did not require crowdsourcing. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 31}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 31}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 31}, {"type": "text", "text": "Justification: No study participants were involved. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 31}]