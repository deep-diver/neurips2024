[{"figure_path": "WdMhbqCoqW/figures/figures_1_1.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure illustrates the MDPS (Mixture Density Particle Smoother) method. The left panel shows the forward and backward particle filters, which are combined using neural networks to produce a smoothed posterior.  The right panel details the feature extraction and measurement model for global localization, using first-person camera views, BEV feature maps, and map features to calculate particle weights. ", "section": "From Filtering to Smoothing"}, {"figure_path": "WdMhbqCoqW/figures/figures_3_1.jpg", "caption": "Figure 2: Box plots showing median (red line), quartiles (blue box), and range (whiskers) over 11 training runs for Bearings-Only tracking (Sec. 5.1). We boost the robustness of the top-performing MDPF [14], which previously used multinomial resampling, by incorporating variance-reduced stratified resampling; residual resampling is both slower and less effective. Stratified resampling provides larger advantages for the less-sophisticated TG-PF [15] and SR-PF [13] gradient estimators, but these baselines remain inferior to MDPF. Our MDPS substantially improves on all PFs by incorporating both past and future observations when computing posteriors. Classic FFBS particle smoothers [24, 25] have poor performance, even when provided the true likelihoods (rather than a learned approximation), showing the effectiveness of our end-to-end learning of particle proposals and weights. Forward PFs are initialized with noisy samples of the true state, while MDPF-Backward (the backwards-time PF component of MDPS) is initialized by sampling uniformly from the state space.", "description": "The figure compares the performance of different particle filters and smoothers on a bearings-only tracking task.  It shows that stratified resampling improves the performance of several particle filters and that the proposed MDPS significantly outperforms the other methods by incorporating both past and future observations.", "section": "2. Differentiable Particle Filters"}, {"figure_path": "WdMhbqCoqW/figures/figures_5_1.jpg", "caption": "Figure 3: Position and error recall using the MGL [11] dataset. Recall is computed with the top posterior mode as well as with the best of the top-3 posterior modes, extracted via non-maximal suppression. As expected, Retrieval [3] methods do poorly due to their lack of discrimination power between neighboring map patches. Dense search [11] does better by using fine map details during localization, but it requires a ground truth hint (\"Cheating\" with GT, which artificially improves performance) to work well at city-scale environments. Retrieval (PF) [8] uses unlearned state dynamics, which proves useful, but still suffers from the poor discriminative ability of retrieval. In contrast, MDPF [14] uses end-to-end learned dynamics and measurement models, allowing for good performance but suffering from only using past information when estimating posterior densities. Our MDPS is able to learn similar strong dynamics and measurement models as MDPF, and also incorporates future as well as past information to achieve a more accurate posterior density and thus higher recall.", "description": "This figure compares the performance of different global localization methods on the Mapillary Geo-Localization (MGL) dataset.  The methods are evaluated based on position error and recall, considering both the top predicted mode and the best of the top three modes. The results show that MDPS outperforms other methods, especially at higher accuracy levels, demonstrating the benefit of using both past and future information for more accurate localization.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_6_1.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure shows example trajectories from the Mapillary Geo-Localization (MGL) dataset.  It compares the performance of MDPS, MDPF-Forward, and MDPF-Backward in estimating the vehicle's location over time. The top row displays the observations.  The subsequent rows show the true state (black arrow and line), the estimated posterior density (red cloud), and the top three most likely states (blue arrows) for each method.  The figure highlights how MDPS, by integrating forward and backward information, resolves ambiguities and provides a more accurate and precise posterior than the other two methods.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_9_1.jpg", "caption": "Figure 3: Position and error recall using the MGL [11] dataset. Recall is computed with the top posterior mode as well as with the best of the top-3 posterior modes, extracted via non-maximal suppression. As expected, Retrieval [3] methods do poorly due to their lack of discrimination power between neighboring map patches. Dense search [11] does better by using fine map details during localization, but it requires a ground truth hint (\"Cheating\" with GT, which artificially improves performance) to work well at city-scale environments. Retrieval (PF) [8] uses unlearned state dynamics, which proves useful, but still suffers from the poor discriminative ability of retrieval. In contrast, MDPF [14] uses end-to-end learned dynamics and measurement models, allowing for good performance but suffering from only using past information when estimating posterior densities. Our MDPS is able to learn similar strong dynamics and measurement models as MDPF, and also incorporates future as well as past information to achieve a more accurate posterior density and thus higher recall.", "description": "The figure shows the position error and recall for different global localization methods on the Mapillary Geo-Localization (MGL) dataset.  MDPS significantly outperforms other methods, including retrieval-based methods, search-based methods, and even a particle filter using past information only (MDPF). The improved performance of MDPS is attributed to its use of both past and future information for state estimation.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_14_1.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure displays example trajectories from the Mapillary Geo-Localization (MGL) dataset.  It compares the performance of the proposed MDPS method to the forward and backward MDPFs. The top row shows the observations (images from a camera). Subsequent rows show the true vehicle trajectory (black arrow and line), the estimated posterior density (red cloud), and the three most likely positions (blue arrows) for each method. The example highlights that MDPS, by incorporating both forward and backward information, can resolve ambiguities that are challenging for individual filters and achieve a tighter, more accurate posterior density.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_14_2.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure shows example trajectories from the Mapillary Geo-Localization (MGL) dataset.  It compares the performance of MDPS, MDPF-Forward, and MDPF-Backward in estimating the vehicle's location over time. The top row displays the observations (camera images). The rows below show the true state trajectory (black line and arrow), the estimated posterior density (red cloud), and the top 3 most likely poses (blue arrows) for each method. The figure demonstrates how MDPS leverages information from both forward and backward passes to improve localization accuracy and reduce uncertainty, especially in ambiguous situations.", "section": "5.3 Mapillary Geo-Localization (MGL) Dataset"}, {"figure_path": "WdMhbqCoqW/figures/figures_15_1.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure shows example trajectories from the Mapillary Geo-Localization (MGL) dataset.  For each time step, it visualizes the ground truth location (black arrow and line), the estimated posterior density of the current state (red cloud with darker areas indicating higher probability), and the top three most likely modes (blue arrows) predicted by MDPS, MDPF-Forward, and MDPF-Backward. The figure highlights how MDPS, by integrating both forward and backward particle filters, is better able to resolve ambiguities (like similar-looking intersections) and provides a more focused and accurate estimate of the vehicle's location than the forward and backward filters alone.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_15_2.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure shows example trajectories from the Mapillary Geo-Localization (MGL) dataset. For each time step, it displays the true vehicle trajectory, the estimated posterior density by MDPS, MDPF-Forward, and MDPF-Backward, and the top three most probable states. It highlights MDPS's ability to resolve ambiguities in the data by incorporating information from both forward and backward particle filters, resulting in a more accurate and focused posterior density than MDPF alone.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_15_3.jpg", "caption": "Figure 4: Example trajectories from the MGL dataset with observations shown in the top row. We show the current true state and state history (black arrow and black line), the estimated posterior density of the current state (red cloud, with darker being higher probability) and the top 3 extracted modes (blue arrows) for the MDPS as well as its forward and backward MDPFs. Due to ambiguity at early time-steps, MDPF [14] is unable to resolve the correct intersection, and instead places probability mass at multiple intersections. By fusing both forward and backward filters, our MDPS resolves this ambiguity with probability mass focused on the correct intersection. Furthermore, MDPS provides a tighter posterior density than either MDPF-Forward or MDPF-Backward.", "description": "This figure shows example trajectories from the Mapillary Geo-Localization (MGL) dataset. It compares the performance of the proposed Mixture Density Particle Smoother (MDPS) with its forward and backward components (MDPF-Forward and MDPF-Backward) in resolving location ambiguity in a city-scale environment.  The top row displays the camera observations, while the subsequent rows illustrate the true trajectory, the posterior density of states (red clouds), and the top 3 most probable modes (blue arrows) for each method. The visualization highlights MDPS's superior ability to resolve ambiguity and provide a more accurate and concentrated posterior density compared to the individual filter components.", "section": "5.2 City Scale Global Localization Task"}, {"figure_path": "WdMhbqCoqW/figures/figures_17_1.jpg", "caption": "Figure 14: Recall of position and angle for MDPS using the MGL dataset [11] with varying numbers of particles at inference time. Here we specify the number of particles N used for the forward and backward filters of MDPS. The final MDPS posterior density is defined by 2N particles as described in sec. 4. Interestingly, performance plateaus quickly as we increase the number of particles implying MDPS's ability to use particles smartly and efficiently, allowing for fewer particles to be used, lowering the computation and memory requirements neeeded for effective models.", "description": "This figure shows the result of an ablation study on the number of particles used in the MDPS model for the MGL dataset.  The left panel shows recall for different position errors (1m, 3m, 5m, 7m, 10m, 15m), while the right panel shows recall for different angular errors (1\u00b0, 3\u00b0, 5\u00b0, 15\u00b0, 31\u00b0, 45\u00b0).  The x-axis represents the number of particles used in each filter (forward and backward), with the final MDPS using twice that number. The plots demonstrate that performance plateaus relatively quickly as the number of particles increases, suggesting that MDPS efficiently uses particles, leading to computational and memory savings.", "section": "C Number of Particles Ablation Study"}, {"figure_path": "WdMhbqCoqW/figures/figures_18_1.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure shows the architecture of the Mixture Density Particle Smoother (MDPS).  The left side illustrates the two-filter approach, with forward and backward particle filters integrated via neural networks to generate a smoothed posterior. The right side details the feature extraction and measurement model used in the global localization task. It shows how first-person camera views are processed into a BEV feature map and then compared to map features to obtain particle weights.", "section": "From Filtering to Smoothing"}, {"figure_path": "WdMhbqCoqW/figures/figures_19_1.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure illustrates the MDPS method, showing forward and backward particle filters integrated to produce a smoothed mixture posterior. The right side shows the feature encoders and measurement model for global localization, using first-person camera views encoded into a BEV feature map.  Map features are extracted and particle weights computed via inner product.", "section": "From Filtering to Smoothing"}, {"figure_path": "WdMhbqCoqW/figures/figures_19_2.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure illustrates the Mixture Density Particle Smoother (MDPS) architecture. The left panel shows the forward and backward particle filters, which are combined to produce a smoothed posterior.  The right panel details the feature encoders and measurement model used for global localization, showing how first-person camera views are processed into a BEV feature map and combined with map features to compute particle weights.", "section": "From Filtering to Smoothing"}, {"figure_path": "WdMhbqCoqW/figures/figures_20_1.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure shows the architecture of the Mixture Density Particle Smoother (MDPS). The left side illustrates the two-filter approach, where forward and backward particle filters are integrated using neural networks to generate a smoothed posterior distribution.  The right side details the feature extraction and measurement model used for global localization, explaining how first-person camera views and map features are processed to estimate particle weights.", "section": "Introduction"}, {"figure_path": "WdMhbqCoqW/figures/figures_20_2.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure illustrates the Mixture Density Particle Smoother (MDPS) architecture. The left panel shows the forward and backward particle filters, which are integrated using neural networks to produce a smoothed mixture posterior.  The right panel details the feature extraction and measurement model used in the global localization task.  First-person camera views are processed into a bird's-eye-view (BEV) feature map, and map features are extracted using a feed-forward encoder.  Finally, particle weights are calculated using the dot product of BEV and local map features.", "section": "Introduction"}, {"figure_path": "WdMhbqCoqW/figures/figures_21_1.jpg", "caption": "Figure 1: Left: Our MDPS method showing the forward and backward particle filters, which are integrated (via learned neural networks, indicated by trapezoids) to produce a smoothed mixture posterior. Right: Feature encoders and measurement model used for global localization. First-person camera views are encoded into a Birds-Eye-View (BEV) feature map by extracting features before applying a geometric projection [11]. Map features are extracted via a feed-forward encoder, and un-normalized particle weights are computed as an inner product between BEV features and features of a local map extracted from the global map at the particle location.", "description": "This figure shows the architecture of the Mixture Density Particle Smoother (MDPS). The left panel illustrates the two-filter approach, where forward and backward particle filters are integrated using learned neural networks to produce a smoothed mixture posterior.  The right panel details the feature encoders and measurement model used for global vehicle localization. It shows how first-person camera views are processed into a BEV feature map, map features are extracted, and particle weights are calculated using inner products between BEV features and local map features.", "section": "From Filtering to Smoothing"}]