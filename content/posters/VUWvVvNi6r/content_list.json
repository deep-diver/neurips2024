[{"type": "text", "text": "Unveiling the Hidden Structure of Self-Attention via Kernel Principal Component Analysis ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Rachel S.Y. Teo ", "page_idx": 0}, {"type": "text", "text": "Tan M. Nguyen ", "page_idx": 0}, {"type": "text", "text": "Department of Mathematics National University of Singapore rachel.tsy@u.nus.edu ", "page_idx": 0}, {"type": "text", "text": "Department of Mathematics National University of Singapore tanmn@nus.edu.sg ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The remarkable success of transformers in sequence modeling tasks, spanning various applications in natural language processing and computer vision, is attributed to the critical role of self-attention. Similar to the development of most deep learning models, the construction of these attention mechanisms relies on heuristics and experience. In our work, we derive self-attention from kernel principal component analysis (kernel PCA) and show that self-attention projects its query vectors onto the principal component axes of its key matrix in a feature space. We then formulate the exact formula for the value matrix in self-attention, theoretically and empirically demonstrating that this value matrix captures the eigenvectors of the Gram matrix of the key vectors in self-attention. Leveraging our kernel PCA framework, we propose Attention with Robust Principal Components (RPC-Attention), a novel class of robust attention that is resilient to data contamination. We empirically demonstrate the advantages of RPC-Attention over softmax attention on the ImageNet-1K object classification, WikiText-103 language modeling, and ADE20K image segmentation task. The code is publicly available at https://github.com/rachtsy/KPCA_code. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Transformers [83] have emerged as the preeminent model for tackling a myriad of challenging problems in natural language processing [4, 20, 1, 66, 9, 39, 17], computer vision [22, 78, 43, 63, 38, 24], reinforcement learning [13, 35, 94, 40], and other applications [93, 68, 36, 88]. The effectiveness of transformers is rooted in their ability to learn from unlabeled data and take advantage of pre-trained models for downstream tasks that involve diverse data modalities with limited supervision [64, 65, 90, 97, 67]. At the core of the transformer\u2019s success lies the self-attention mechanism, which serves as the fundamental building block of a transformer model. This mechanism enables each token in a sequence to aggregate information from other tokens by computing a weighted average based on similarity scores between their feature representations. Facilitating dynamic interactions among tokens, this attention mechanism allows tokens to selectively attend to others, thereby attaining a contextual representation [5, 56, 60, 42]. The flexibility in capturing diverse syntactic and semantic relationships is an important factor contributing to the success of transformers [77, 85, 33, 84, 53]. ", "page_idx": 0}, {"type": "text", "text": "Self-Attention. For a given input sequence $X:=[\\pmb{x}_{1},\\cdot\\cdot\\cdot\\mathrm{~,~}\\pmb{x}_{N}]^{\\top}\\in\\mathbb{R}^{N\\times D_{x}}$ of $N$ feature vectors, self-attention transforms $\\mathbf{\\deltaX}$ into the output sequence $\\pmb{H}$ in the following two steps: ", "page_idx": 0}, {"type": "text", "text": "Step 1: The input sequence $\\mathbf{\\deltaX}$ is projected into the query matrix $Q$ , the key matrix $\\kappa$ , and the value matrix $V$ via three linear transformations ", "page_idx": 0}, {"type": "equation", "text": "$$\nQ=X W_{Q}^{\\top};K=X W_{K}^{\\top};V=X W_{V}^{\\top},\n$$", "text_format": "latex", "page_idx": 0}, {"type": "text", "text": "where $\\pmb{W_{Q}},\\pmb{W_{K}}\\;\\in\\;\\mathbb{R}^{D\\times D_{x}}$ , and $\\pmb{W_{V}}\\;\\in\\;\\mathbb{R}^{D_{v}\\times D_{x}}$ are the weight matrices. We denote $Q:=$ $[\\pmb{q}_{1},\\cdots,\\pmb{q}_{N}]^{\\top},\\pmb{K}:=[\\pmb{k}_{1},\\cdots,\\pmb{k}_{N}]^{\\top}$ , and $V:=[\\pmb{v}_{1},\\cdots,\\pmb{v}_{N}]^{\\top}$ , where the vectors $\\boldsymbol{q}_{i},\\boldsymbol{k}_{i},\\boldsymbol{v}_{i}$ for $i=1,\\cdot\\cdot\\cdot,N$ are the query, key, and value vectors, respectively. ", "page_idx": 1}, {"type": "text", "text": "Step 2: The output sequence $H:=[h_{1},\\cdot\\cdot\\cdot\\,,h_{N}]^{\\top}$ is then computed as follows ", "page_idx": 1}, {"type": "equation", "text": "$$\nH=\\mathrm{softmax}\\Big(Q K^{\\top}/\\sqrt{D}\\Big)V:=A V,\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where the softmax function is applied to each row of the matrix $Q K^{\\top}/\\sqrt{D}$ . The matrix $\\mathbf{A}:=$ $\\begin{array}{r}{\\mathrm{softmax}\\Big(\\frac{Q K^{\\top}}{\\sqrt{D}}\\Big)\\in{\\mathbb R}^{N\\times N}}\\end{array}$ and its component $a_{i j}$ for $i$ , $j=1,\\cdot\\cdot\\cdot\\,,N$ are called the attention matrix and attention scores, respectively. For each query vector $\\pmb q_{i}$ for $i=1,\\cdot\\cdot\\cdot,N$ , an equivalent form of Eqn. (2) to compute the output vector $h_{i}$ is given by ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\pmb{h}_{i}=\\sum_{j=1}^{N}\\mathrm{softmax}\\Big(\\pmb{q}_{i}^{\\top}\\pmb{k}_{j}/\\sqrt{D}\\Big)\\pmb{v}_{j}.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "The self-attention computed by Eqn. (2) and (3) is called the scaled dot-product or softmax attention. In our paper, we call a transformer that uses this attention the softmax transformer. The structure that the attention matrix $\\pmb{A}$ learns from training determines the ability of the self-attention to capture contextual representations for each token. ", "page_idx": 1}, {"type": "text", "text": "Despite their impressive achievements, the development of most attention layers rely on intuitions and heuristic approaches. The quest for a systematic and principled framework for studying and synthesizing attention layers has remained challenging. ", "page_idx": 1}, {"type": "text", "text": "Contribution. We study and analyze self-attention in transformers from the perspective of kernel principal component analysis (kernel PCA). In particular, we develop a novel connection between self-attention and kernel PCA, showing that self-attention projects its query vectors $\\pmb q_{i}$ , $i=1,\\dots,N_{v}$ , onto principal component axes of the key matrix $\\kappa$ in a feature space. We then inspect the structure of the value matrix $V$ of self-attention suggested by our kernel PCA framework, validating $V$ captures the eigenvectors of the Gram matrix of the key vectors $\\pmb{k}_{j},j=1,\\ldots,N$ . Using our framework, we then propose a new class of robust attention, namely the Attention with Robust Principal Components (RPC-Attention). Our contribution is three-fold. ", "page_idx": 1}, {"type": "text", "text": "1. We derive self-attention from kernel PCA, showing that the attention outputs are projections of the query vectors onto the principal components axes of the key matrix $\\kappa$ in a feature space. 2. We discover and validate that the value matrix $V$ in self-attention captures the eigenvectors of the Gram matrix of the key vectors $\\pmb{k}_{j},j=1,\\ldots,N$ . 3. We develop the Attention with Robust Principal Components (RPC-Attention), a new attention mechanism that is resilient to data contamination, using our kernel PCA framework. ", "page_idx": 1}, {"type": "text", "text": "We empirically demonstrate the beneftis of RPC-Attention on the ImageNet-1K object classification, ADE20K image segmentation, and large scale WikiText-103 language modeling tasks. We further illustrate the robustness of RPC-Attention through our evaluations on popular, standard robustness benchmarks, as well as various white and black box adversarial attacks on ImageNet-1K images, 15 different types of corruptions on the ADE20K dataset, and word swap attack on WikiText-103. ", "page_idx": 1}, {"type": "text", "text": "2 Principal Component Analysis of Attention ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "In this section, we will derive attention from kernel PCA. Suppose we are given a dataset $M\\,=$ $\\{\\pmb{k}_{1},\\ldots,\\pmb{k}_{N}\\}\\subset\\mathbb{R}^{D}$ . Here, ${\\pmb k}_{1},\\dots,{\\pmb k}_{N}$ are attention keys in self-attention. As in kernel PCA, we first project these data points into a feature space using a feature map $\\varphi({\\pmb x}):=\\phi({\\pmb x})/g({\\pmb x})$ , where $\\phi(\\cdot)$ is a nonlinear transformation from $\\mathbb{R}^{D}$ to $\\mathbb{R}^{D^{\\prime}}$ , and $g(\\cdot)$ is a vector-scalar function that computes a scaling factor for $\\phi(x)$ . We center the projected data as follows: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\tilde{\\varphi}(k_{j})=\\varphi(k_{j})-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\varphi(k_{j^{\\prime}}).\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Letting $_{C}$ be the covariance matrix of the centered data in feature space, its eigenvector expansion is ", "page_idx": 2}, {"type": "equation", "text": "$$\nC=\\frac{1}{N}\\sum_{j=1}^{N}\\tilde{\\varphi}(k_{j})\\tilde{\\varphi}(k_{j})^{\\top};\\quad C u_{d}=\\lambda_{d}u_{d},\\;\\;d=1,\\ldots,D_{v}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Plugging $_{C}$ into (5), we obtain ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\frac{1}{N}\\sum_{j=1}^{N}\\tilde{\\varphi}(k_{j})\\{\\tilde{\\varphi}(k_{j})^{\\top}u_{d}\\}=\\lambda_{d}u_{d}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Thus, provided that $\\lambda_{d}>0$ , the eigenvector $\\pmb{u}_{d}$ is given by a linear combination of the $\\tilde{\\varphi}(\\pmb{k}_{j})$ and with $\\begin{array}{r}{a_{d j}=\\frac{1}{N\\lambda_{d}}\\tilde{\\varphi}(k_{j})^{\\top}u_{d}}\\end{array}$ , can be written as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\pmb{u}_{d}=\\sum_{j=1}^{N}a_{d j}\\tilde{\\varphi}(\\pmb{k}_{j}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "2.1 Deriving Attention from Kernel PCA ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In order to derive self-attention from kernel PCA, we consider the query vector $\\pmb q_{i}$ in self-attention as a new data point. The projection $h_{i}$ of a new test point $\\pmb q_{i}$ onto the principal components $\\mathbf{\\nabla}u_{d}$ in Eqn. (7), for $d=1,\\ldots,D_{v}$ , is given by ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle h_{i}(d)=\\varphi(q_{i})^{\\top}u_{d}=\\sum_{j=1}^{N}a_{d j}\\varphi(q_{i})^{\\top}\\tilde{\\varphi}(k_{j})=\\sum_{j=1}^{N}a_{d j}\\varphi(q_{i})^{\\top}(\\varphi(k_{j})-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\varphi(k_{j^{\\prime}}))}}\\\\ {{\\displaystyle\\qquad=\\sum_{j=1}^{N}\\frac{k(q_{i},k_{j})}{g(q_{i})}\\frac{a_{d j}}{g(k_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{k(q_{i},k_{j^{\\prime}})}{g(q_{i})}\\sum_{j=1}^{N}\\frac{a_{d j}}{g(k_{j^{\\prime}})}}}\\\\ {{\\displaystyle\\qquad=\\sum_{j=1}^{N}\\frac{k(q_{i},k_{j})}{g(q_{i})}\\Big(\\frac{a_{d j}}{g(k_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{d j^{\\prime}}}{g(k_{j})}\\Big)=\\sum_{j=1}^{N}\\frac{k(q_{i},k_{j})}{g(q_{i})}v_{d j},}}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the kernel $k(\\pmb{x},\\pmb{y})\\;:=\\;\\phi(\\pmb{x})^{\\top}\\phi(\\pmb{y})$ and $\\begin{array}{r l r}{v_{d j}\\!\\!}&{{}:=}&{\\!\\!\\frac{a_{d j}}{g(\\pmb{k}_{j})}\\,-\\,\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{d j^{\\prime}}}{g(\\pmb{k}_{j})}}\\end{array}$ . We further let the self-attention\u2019s value vectors $\\pmb{v}_{j}\\,=\\,[v_{1j},\\cdot\\cdot\\cdot\\,,v_{D_{v}j}]\\,\\in\\,\\mathbb{R}^{D_{v}\\times1}$ , $j\\,=\\,1,\\,.\\,.\\,,N$ , and rewrite the projection $h_{i}$ as $\\begin{array}{r}{\\pmb{h}_{i}=\\sum_{j=1}^{N}k(\\pmb{q}_{i},\\pmb{\\dot{k}}_{j})/g(\\pmb{\\dot{q}}_{i})\\pmb{v}_{j}}\\end{array}$ . Selecting $\\begin{array}{r}{g(\\pmb{x}):=\\sum_{j=1}^{N}k(\\pmb{x},\\pmb{k}_{j})}\\end{array}$ and $k(\\pmb{x},\\pmb{y})=$ $\\exp(x^{\\top}y/\\sqrt{D})$ , we obtain a formula of an attention: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{h_{i}=\\displaystyle\\sum_{j=1}^{N}\\frac{k(q_{i},k_{j})}{\\sum_{j^{\\prime}=1}^{N}k(q_{i},k_{j^{\\prime}})}v_{j}=\\displaystyle\\sum_{j=1}^{N}\\mathrm{softmax}\\Big(q_{i}^{\\top}k_{j}/\\sqrt{D}\\Big)v_{j}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Recovering Self-Attention: Eqn. (9) matches the exact formula of a self-attention as in Eqn. (3). Thus, we can view outputs $\\boldsymbol{h}_{i}$ of self-attention as projections of the query vectors $\\pmb q_{i}$ $_{i},\\,i=1,\\,.\\,.\\,,N$ , onto $D_{v}$ principal components in a feature space: ", "page_idx": 2}, {"type": "equation", "text": "$$\nH=[\\varphi(q_{1}),\\ldots,\\varphi(q_{N})]^{\\top}[u_{1},\\ldots,u_{D_{v}}].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Computing the Value Vectors: As derived above, the self-attention\u2019s value vectors $\\pmb{v}_{j}$ are given by: $\\pmb{v}_{j}\\,=\\,[v_{1j},\\cdot\\cdot\\cdot\\,,v_{D_{v}j}]\\,\\in\\,\\mathbb{R}^{D_{v}\\times1}$ , $j\\,=\\,1,\\ldots,N$ , where $\\begin{array}{r}{v_{d j}\\;:=\\;\\frac{a_{d j}}{g(\\pmb{k}_{j})}\\,-\\,\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{d j^{\\prime}}}{g(\\pmb{k}_{j})},}\\end{array}$ $d=$ $1,\\hdots,D_{v}$ . Since $g(\\pmb{k}_{j})$ can be calculated as $\\begin{array}{r}{g(\\pmb{k}_{j})=\\sum_{j^{\\prime}=1}^{N}k(\\pmb{k}_{j},\\pmb{k}_{j^{\\prime}})}\\end{array}$ , in order to compute $\\pmb{v}_{j}$ , we need to determine the coefficients $a_{1j},\\dotsc,a_{D_{v}j}$ for $j=1,\\ldots,N$ . ", "page_idx": 2}, {"type": "text", "text": "We define $\\tilde{k}_{\\varphi}({\\pmb x},{\\pmb y}):=\\tilde{\\varphi}({\\pmb x})^{\\top}\\tilde{\\varphi}({\\pmb y})$ and the Gram matrix $\\widetilde{K}_{\\varphi}\\in\\mathbb{R}^{N\\times N}$ with elements $\\widetilde{\\kappa}_{\\varphi}(i,j)=$ $\\tilde{k}_{\\varphi}(\\pmb{k}_{i},\\pmb{k}_{j})$ . Substituting the linear expansion in Eqn. (7) into (6), we attain ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\frac{1}{N}\\sum_{j=1}^{N}\\tilde{\\varphi}(k_{j})\\tilde{\\varphi}(k_{j})^{\\top}\\sum_{j^{\\prime}=1}^{N}a_{d j^{\\prime}}\\tilde{\\varphi}(k_{j^{\\prime}})=\\lambda_{d}\\sum_{j=1}^{N}a_{d j}\\tilde{\\varphi}(k_{j}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "We multiply both sides of the above by $\\tilde{\\varphi}(\\pmb{k}_{\\ell})^{\\top}$ to obtain $\\widetilde{K}_{\\varphi}^{2}a_{d}=\\lambda_{d}N\\widetilde{K}_{\\varphi}a_{d}$ , with the column vector $\\ensuremath{\\mathbf{a}}_{d}=[a_{d1},\\cdots\\,,a_{d N}]^{\\top}\\in\\mathbb{R}^{N\\times1}$ . We compute $\\mathbf{\\nabla}a_{d}$ by  solving ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\widetilde{\\cal K}_{\\varphi}{\\bf a}_{d}=\\lambda_{d}{\\cal N}{\\bf a}_{d}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The calculation of $\\widetilde{K}_{\\varphi}$ is provided in Remark 1. We summarize our results in the following theorem. ", "page_idx": 3}, {"type": "text", "text": "Theorem 1 (Softmax Attention as Principal Component Projections) Given a set $M$ of key vectors, $M:=\\left\\{k_{1},\\ldots,k_{N}\\right\\}\\subset\\mathbb{R}^{D}$ , a kernel $\\bar{k}(\\pmb{x},\\pmb{y}):=\\exp(\\pmb{x}^{\\top}\\pmb{\\dot{y}}/\\sqrt{D})$ , and a vector-scalar function $\\begin{array}{r}{g(\\pmb{x}):=\\sum_{j=1}^{N}k(\\pmb{x},\\pmb{k}_{j})}\\end{array}$ , self-attention performs kernel PCA and projects a query vector $\\mathbf{q}_{i}\\in\\mathbb{R}^{D}$ onto principal component axes of $M$ in an infinite dimensional feature space $\\varphi$ as follows ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\pmb{h}_{i}=\\sum_{j=1}^{N}\\mathrm{softmax}\\Big(\\pmb{q}_{i}^{\\top}\\pmb{k}_{j}/\\sqrt{D}\\Big)\\pmb{v}_{j}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The feature space $\\varphi$ is induced by the kernel $\\begin{array}{r}{k_{\\varphi}(x,y):=\\,\\frac{k(x,y)}{g(x)g(y)}}\\end{array}$ g(kx()xg,(yy)), and the value vectors vj = $[v_{1j},\\ldots,v_{D_{v}j}]\\in\\mathbb{R}^{D_{v}\\times1}$ , $j=1,\\dots,N,$ , where $\\begin{array}{r}{v_{d j}:=\\frac{a_{d j}}{g(\\pmb{k}_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{d j^{\\prime}}}{g(\\pmb{k}_{j})}}\\end{array}$ , $d=1,\\ldots,D_{v}$ . The column vectors $\\mathbf{\\boldsymbol{a}}_{d}=[a_{d1},\\ldots,a_{d N}]^{\\top}\\in\\mathbb{R}^{N\\times1}$ can be determined by solving the eigenvalue problem defined in Eqn. (11). This constraint on $\\pmb{v}_{j}$ can be relaxed by letting the self-attention learn $\\pmb{v}_{j}$ from data via a linear projection of the input $\\pmb{x}_{j}$ , i.e., ${\\pmb v}_{j}={\\pmb W}_{V}{\\pmb x}_{j}$ where $W_{V}$ is a learnable matrix. ", "page_idx": 3}, {"type": "text", "text": "Remark 1 (Calculating the Gram Matrix $\\widetilde{K}_{\\varphi}$ ) In the eigenvalue problem defined in Eqn. (11), the centered Gram matrix $\\widetilde{K}_{\\varphi}$ can be computed from the uncentered Gram matrix $K_{\\varphi}$ with elements $K_{\\varphi}(i,j)=k_{\\varphi}({k_{i}},{k_{j}})=\\varphi({k_{i}})^{\\top}\\varphi(k_{j})$ . In particular, $\\widetilde{K}_{\\varphi}=K_{\\varphi}\\!-\\!\\mathbf{1}_{N}K_{\\varphi}-K_{\\varphi}\\mathbf{1}_{N}+\\mathbf{1}_{N}K_{\\varphi}\\mathbf{1}_{N},$ , where ${\\mathbf{}}1_{N}$ denotes the $N\\!\\times\\!N$ matrix in which every elem ent takes the value $1/N$ [8] (See Appendix B). Here, the kernel k\u03c6(x, y) := $\\begin{array}{r}{k_{\\varphi}(\\mathbf{\\boldsymbol{x}},\\mathbf{\\boldsymbol{y}}):=\\frac{k(\\mathbf{\\boldsymbol{x}},\\mathbf{\\boldsymbol{y}})}{g(\\mathbf{\\boldsymbol{x}})g(\\mathbf{\\boldsymbol{y}})}}\\end{array}$ ", "page_idx": 3}, {"type": "text", "text": "Remark 2 (Determining $D_{v}$ ) The feature space $\\varphi$ is infinite dimensional, so we can find infinitely many principal components. However, the number of nonzero eigenvalues of $_{C}$ in Eqn. (5) cannot exceed $N$ , the number of data points, since $_{C}$ has rank at most equal to $N$ . Notice that only principal components corresponding to nonzero eigenvalues are used for projections in kernel PCA. Thus, $D_{v}$ , the number of principal components used for projections as in Eqn. (10), must be less than or equal to $N$ , i.e., $D_{v}\\leq N$ . ", "page_idx": 3}, {"type": "text", "text": "Remark 3 (Parameterization of the Value Matrix $V$ ) Different parameterizations of the value matrix $V$ can result in different self-attention architectures. For instance, the projection $h_{i}$ of a query vector $\\pmb q_{i}$ onto the principal components $\\mathbf{\\nabla}u_{d}$ , $d=1,\\ldots,D_{v}$ , in Eqn. (8) can be rewritten as ", "page_idx": 3}, {"type": "equation", "text": "$$\nh_{i}(d)=\\sum_{j=1}^{N}\\frac{k(q_{i},k_{j})}{g(q_{i})}\\Big(\\frac{a_{d j}}{g(k_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{g(k_{j^{\\prime}})}{g(k_{j})}\\frac{a_{d j^{\\prime}}}{g(k_{j^{\\prime}})}\\Big).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Letting vdj := $\\begin{array}{r}{v_{d j}:=\\frac{a_{d j}}{g(\\pmb{k}_{j})}}\\end{array}$ and sjj\u2032 $\\begin{array}{r}{s_{j j^{\\prime}}=\\frac{g(\\pmb{k}_{j^{\\prime}})}{g(\\pmb{k}_{j})}}\\end{array}$ g(kjj) , we obtain ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\pmb{h}_{i}(d)=\\sum_{j=1}^{N}\\frac{k(\\pmb{q}_{i},\\pmb{k}_{j})}{g(\\pmb{q}_{i})}\\Big(v_{d j}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}s_{j j^{\\prime}}v_{d j^{\\prime}}\\Big).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Following the same derivation as above, we can write the projection $h_{i}$ as an attention ", "page_idx": 3}, {"type": "equation", "text": "$$\nh_{i}=\\sum_{j=1}^{N}\\mathrm{softmax}\\Big(q_{i}^{\\top}k_{j}/\\sqrt{D}\\Big)\\Big(v_{j}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}s_{j j^{\\prime}}v_{j^{\\prime}}\\Big).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "The matrix form of this new attention form is as follows: ", "page_idx": 3}, {"type": "equation", "text": "$$\nH=\\mathrm{softmax}\\Big(Q K^{\\top}/\\sqrt{D}\\Big)(I-S)V,\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\boldsymbol{\\mathit{I}}$ is an identity matrix, and $\\boldsymbol{S}$ is the matrix whose elements $\\begin{array}{r}{S(j,j^{\\prime})\\,=\\,\\frac{1}{N}\\ensuremath{s}_{j j^{\\prime}}}\\end{array}$ . We name the self-attention defined by Eqn. (12) the Scaled Attention. Even though the softmax attention in (2) and the Scaled Attention in (12) are mathematically equivalent according to our kernel PCA framework, the training procedure might cause the self-attention models that are derived from different parameterizations to have different performances. ", "page_idx": 3}, {"type": "text", "text": "2.2 Analysis on the Convergence of Self-Attention Layers to Kernel PCA ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we discuss empirical justifications that after training, the value vectors $\\pmb{v}_{j}$ parameterized as a 1-layer linear network, i.e., ${\\pmb v}_{j}={\\pmb W}_{V}{\\pmb x}_{j}$ , $j=1,\\dots,N$ , in self-attention converge to the values predicted by our kernel PCA framework in Theorem 1. In other words, we provide evidence that the self-attention layers in transformers try to learn their value vectors $\\pmb{v}_{j}$ to perform the kernel PCA. ", "page_idx": 4}, {"type": "text", "text": "2.2.1 Projection Error Minimization ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "PCA can be formulated based on projection error minimization as well. In particular, PCA minimizes the average projection cost defined as the mean squared distance between the original data points and their projections [62]. Given our kernel PCA framework in Theorem 1, this implies that self-attention minimizes the following projection error ", "page_idx": 4}, {"type": "equation", "text": "$$\nJ_{\\mathrm{proj}}=\\frac{1}{N}\\sum_{i=1}^{N}\\|\\varphi(q_{i})-\\sum_{d=1}^{D_{v}}h_{d i}\\mathbf{u}_{d}\\|^{2}=\\frac{1}{N}\\sum_{i=1}^{N}\\left(\\|\\varphi(q_{i})\\|^{2}-\\|h_{i}\\|^{2}\\right).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In the derivation above, we leverage the orthonormality of {ud}dD=v1 and $h_{d i}\\mathbf{\\Sigma}=\\mathbf{\\Sigma}\\varphi(\\pmb{q}_{i})^{\\top}\\pmb{u}_{d}$ . Here, notice that we can compute $\\|\\varphi(\\pmb{q}_{i})\\|^{2}$ from $\\pmb q_{i}$ and $\\{k_{j}\\}_{j=1}^{N}$ as $\\begin{array}{r l r}{\\|\\varphi(\\pmb{q}_{i})\\|^{2}}&{{}}&{=}\\end{array}$ $\\mathrm{exp}(q_{i}^{\\top}q_{i}/\\sqrt{D})/(\\sum_{j=1}^{N}\\mathrm{exp}(q_{i}^{\\top}k_{j}/\\sqrt{D}))^{2}$ . In Fig. 1, we empirically show that a transformer model minimizes the projection loss $J_{\\mathrm{proj}}$ during training. Here, we train a vision transformer [22], ViT-tiny model in particular, on the ImageNet-1K classification task and compute the average of $J_{\\mathrm{proj}}$ across attention heads and layers. This result suggests that during training, the transformer learns to perform PCA at each self-attention layer by implicitly minimizing the projection loss $J_{\\mathrm{proj}}$ . Thus, the value vector $\\pmb{v}_{j}$ , $j=1,\\dots,N$ , in self-attention layers converge to the values specified in Theorem 1. We provide more details on the computation of $J_{\\mathrm{proj}}$ in Appendix C. ", "page_idx": 4}, {"type": "image", "img_path": "VUWvVvNi6r/tmp/501ed7e465933b296a96d8043efc3d46db199a51a3c27101f5f34e89fd9ebd56.jpg", "img_caption": ["Figure 1: Projection loss vs. training epochs of ViT-tiny model. The reconstruction loss is averaged over the batch, heads, and layers. The downward trend suggests that the model is implicitly minimizing this projection loss. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "2.2.2 Learning Eigenvectors of $\\widetilde{\\cal K}_{\\varphi}\\mathbf{in}\\,{\\bf E q n}.$ (11) ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "In this section, we study empirical results that confirm Eqn. (11). In particular, we aim to verify that after training, the value matrix $V:=[\\pmb{v}_{1},\\cdot\\cdot\\cdot\\ ,\\pmb{v}_{N}]^{\\top}$ captures the eigenvectors $\\mathbf{\\nabla}a_{d}$ , $d=1,\\ldots,D_{v}$ , of the Gram matrix $\\widetilde{K}_{\\varphi}$ . ", "page_idx": 4}, {"type": "text", "text": "We first compute $\\mathbf{\\nabla}a_{d}$ in terms of $V$ . Recall from Eqn. (11) that $\\mathbf{\\boldsymbol{a}}_{d}\\,=\\,\\left[a_{d1},a_{d2},\\cdot\\cdot\\cdot\\,,a_{d N}\\right]^{\\top}$ . We denote the diagonal matrix $G:=\\mathrm{diag}(1/g({\\pmb k}_{1}),\\dots,\\bar{1/g({\\pmb k}_{N})})$ , the matrix $A:=[\\pmb{a}_{1},\\dots,\\pmb{a}_{D_{v}}]$ , and rewrite the value vectors $\\pmb{v}_{j}$ , $j=1,\\ldots,N$ , as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\nv_{j}=\\Big[\\frac{a_{1}[j]}{g(k_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{1}[j^{\\prime}]}{g(k_{j})},\\ldots,\\frac{a_{D_{v}}[j]}{g(k_{j})}-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{D_{v}}[j^{\\prime}]}{g(k_{j})}\\Big].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The value matrix $V$ in self-attention is then given by ", "page_idx": 4}, {"type": "equation", "text": "$$\nV=G A-G\\mathbf{1}_{N}A\\Leftrightarrow A=(I-\\mathbf{1}_{N})^{-1}G^{-1}V\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Thus, given the value matrix $V=X W_{V}^{\\top}$ that the self-attention learns after training, the estimation $\\hat{a}_{d}$ of $\\mathbf{\\nabla}a_{d}$ can be computed as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\hat{\\pmb{a}}_{d}=({\\pmb I}-{\\pmb1}_{N})^{-1}G^{-1}V[:,d].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We empirically verify that $\\begin{array}{r}{\\frac{\\widetilde{K}_{\\varphi}\\hat{a}_{d}}{N\\hat{a}_{d}}\\,=\\,\\gamma\\,=\\,\\left[\\gamma_{1},\\dots,\\gamma_{N}\\right]}\\end{array}$ where $\\gamma_{1}\\,=\\,\\cdot\\cdot\\,=\\,\\gamma_{N}\\,=\\,{\\mathrm{const}}$ , which confirms that $\\hat{a}_{d}$ is an eigenvector of $\\widetilde{K}_{\\varphi}$ . In particular, in Fig. 2(Left), we plot the average pairwise absolute differences of $\\gamma_{i}$ and $\\gamma_{j}$ , $i\\neq j,i,j=1,\\ldots,N$ , for each principal component axis of $\\widetilde{K}_{\\varphi}$ . The results are averaged over all attention heads and all layers in the 12-layer ViT-tiny model trained on ImageNet-1K. As can be seen in our figure, the absolute difference between any pair of $\\gamma_{i}$ and $\\gamma_{j}$ is almost 0 with a very small standard deviation. Similar results are observed at each layer when averaging over all attention heads in that layer. In Fig. 2(Right), we show the results for Layers 2, 5, 8, and 11 in the model. For comparison, we observe that the max, min, mean, and median of the absolute values of these $D_{v}$ eigenvalues, averaged over all attention heads and layers, are 648.46, 4.65, 40.07, and 17.73, respectively, which are much greater than the values of $|\\gamma_{i}-\\gamma_{j}|$ . These results empirically justify thatK N \u03c6a\u02c6a\u02c6dd $\\frac{\\widetilde{K}_{\\varphi}\\hat{a}_{d}}{N\\hat{a}_{d}}\\,=$ const and the value matrix $V$ captures the eigenvectors of $\\widetilde{K}_{\\varphi}$ after the transformer model is trained, as suggested in Eqn. (11). ", "page_idx": 4}, {"type": "image", "img_path": "VUWvVvNi6r/tmp/a9677b963cd1fe8a2f586cd19c8b304e613083cbae10c13f2259ca4429ca1064.jpg", "img_caption": ["Figure 2: Mean and standard deviation of the absolute differences of elements in the constant vector $\\mathbf{1}\\lambda_{d}$ , $d=1,\\ldots,D_{v}$ . The mean should be 0 with small standard deviations when $v_{d j}$ are close to the values predicted in Theorem 1. For comparison, we observe that the max, min, mean, and median of the absolute values of all the eigenvalues, averaged over all attention heads and layers, are 648.46, 4.65, 40.07, and 17.73, respectively, which are much greater than the values of $|\\gamma_{i}-\\gamma_{j}|$ . "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "In order to prove that after training a transformer with the value vectors $\\pmb{v}_{j}$ parameterized as $W_{V}{\\pmb x}_{j}$ , $j=1,\\ldots,N$ , using stochastic gradient descent, $v_{d j}$ converges to $\\begin{array}{r}{\\frac{a_{d j}}{g(\\pmb{k}_{j})}\\,-\\,\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\frac{a_{d j^{\\prime}}}{g(\\pmb{k}_{j})}}\\end{array}$ as stated in Theorem 1, it is sufficient to prove that after the training, the outputs $h_{i}$ of self-attention become projections of the query vectors $\\pmb q_{i}$ , $i=1,\\ldots,N$ , onto $D_{v}$ principal component axes in the feature space $\\varphi$ , i.e., the eigenvectors $\\pmb{u}_{1},\\dots,\\pmb{u}_{D_{v}}$ of the covariance matrix $_{C}$ . To theoretically prove this result for a multi-layer multi-head softmax transformer trained to explicitly minimize a particular loss, e.g., cross-entropy or L2 loss, using stochastic gradient descent is indeed challenging due to the highly nonconvex nature of the optimization problem and the nonlinear structure of the model. Our experimental results in Section 2.2.1 and 2.2.2 empirically justify this result and serve as guidance for the theoretical proof, which we leave for future work. ", "page_idx": 5}, {"type": "text", "text": "3 Robust Softmax Attention ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we employ our kernel PCA framework in Section 2 to derive a new class of robust attention, namely, Attention with Robust Principal Components (RPC-Attention). It is a well-known problem that both PCA and kernel PCA are sensitive to grossly corrupted data routinely encountered in modern applications [11, 49, 34, 19]. Since self-attention performs kernel PCA by projecting the query vectors $\\pmb q_{i}$ , $i=1,\\ldots,N$ , onto principal components in a feature space as derived in Section 2.1, it is also vulnerable to data corruption and perturbation. Our RPC-Attention robustifies self-attention by solving a convex program known as Principal Component Pursuit (PCP) [11]. ", "page_idx": 5}, {"type": "text", "text": "3.1 Principal Component Pursuit ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Given corrupted measurement matrix $M\\in\\mathbb{R}^{N\\times D}$ , both PCA and PCP aim to recover a low-rank matrix $\\pmb{L}\\in\\dot{\\mathbb{R}}^{N\\times D}$ from $_M$ . However, while PCA models the corruption by a small Gaussian noise term, PCP models the corruption by a matrix $S\\in\\mathbb{R}^{N\\times D}$ that can have arbitrarily large magnitude with sparse supports. In particular, PCP solves the following convex optimization problem: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathrm{minimize}_{L,S}\\quad\\|L\\|_{*}+\\lambda\\|S\\|_{1}\\quad\\mathrm{subject}\\;\\mathrm{to}\\quad L+S=M,\n$$", "text_format": "latex", "page_idx": 5}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/ee17004881808d5692ea673d90c3a229ea9e20ad9be5a2c2cb52e94a76c7b525.jpg", "table_caption": [], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "where $\\|L\\|_{*}$ is the nuclear norm of $\\textbf{\\emph{L}}$ , i.e., the sum of the singular values of $\\textbf{\\emph{L}}$ , and $\\begin{array}{r}{\\|\\pmb{S}\\|_{1}=\\sum_{i d}|S_{i d}|}\\end{array}$ is the $\\ell_{1}$ -norm of $\\boldsymbol{S}$ . From [11], under minimal assumptions on the rank and sparsity of $\\textbf{\\emph{L}}$ and $\\boldsymbol{S}$ , the PCP solution exactly recovers the low-rank component $\\textbf{\\emph{L}}$ and the sparse component $\\boldsymbol{S}$ . Since $P C P$ can recover the principal components of a data matrix even when a positive fraction of the measurements are arbitrarily corrupted, it is more robust than $P C A$ . ", "page_idx": 6}, {"type": "text", "text": "3.2 Attention with Robust Principal Components ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In self-attention, following our kernel PCA framework in Section 2, the dataset $M$ is given as $M=$ $\\{\\pmb{k}_{1},\\dots,\\pmb{k}_{N}\\}\\subset\\mathbb{R}^{D}$ and ${\\pmb k}_{1},\\dots,{\\pmb k}_{N}$ are key vectors. Thus, the key matrix $K:=[k_{1},\\cdot\\cdot\\cdot\\,,k_{N}]^{\\top}\\in$ $\\bar{\\mathbb{R}}^{N\\times D}$ in self-attention can be set as the measurement matrix $_M$ in PCP. Then, the PCP for selfattention can be formulated as ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathrm{minimize}_{L,S}\\quad\\|L\\|_{*}+\\lambda\\|S\\|_{1}\\quad\\mathrm{subject}\\;\\mathrm{to}\\quad L+S=K.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Following [11], we utilize the Alternating Direction Method of Multipliers (ADMM) algorithm introduced in [41, 91] to solve the convex program (14). The augmented Lagrangian of (14) is ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}(L,S,Y)=\\|L\\|_{*}+\\lambda\\|S\\|_{1}+\\langle Y,K-L-S\\rangle+\\mu/2\\|K-L-S\\|_{F}^{2}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "An ADMM solves the convex program (14) by iterating the following steps until convergence: [1] setting $S_{k+1}\\,=\\,\\arg\\operatorname*{min}_{S}\\mathcal{L}(L_{k},S,Y_{k})$ , [2] setting $L_{k+1}\\,=\\,\\arg\\operatorname*{min}_{L}\\mathcal{L}(L,S_{k+1},Y_{k})$ , and [3] updating the Lagrange multiplier matrix $\\boldsymbol{Y}_{k+1}\\,=\\,\\boldsymbol{Y}_{k}\\,+\\,\\mu(\\boldsymbol{K}\\,-\\,\\boldsymbol{L}_{k+1}\\,-\\,\\boldsymbol{S}_{k+1})$ . We define $S_{\\tau}(x\\bar{)}:=\\mathrm{sgn}(x)\\operatorname*{max}(|x|-\\tau,0)$ as an element-wise shrinkage operator and ${\\mathscr{D}}_{\\tau}({\\pmb X})={U}S_{\\tau}(\\Sigma){V}^{*}$ as a singular value thresholding operator with the singular value decomposition of $X=U\\Sigma V^{*}$ . As proven in [11], we can rewrite steps [1] and [2] as ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\arg\\operatorname*{min}_{S}\\mathcal{L}(L,S,Y)=S_{\\lambda/\\mu}(K-L+\\mu^{-1}Y);\\,\\arg\\operatorname*{min}_{L}\\mathcal{L}(L,S,Y)=\\mathcal{D}_{\\mu}(K-S-\\mu^{-1}Y).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "$\\mathcal{D}_{\\mu}$ finds a low-rank approximation of $K-S-\\mu^{-1}Y$ . Thus, we obtain an approximation of the above equation by replacing $\\mathcal{D}_{\\mu}$ by a low-rank approximation operator. Such an approximation takes a step towards the minimum of $\\mathcal{L}(L,S,Y)$ when fixing $\\boldsymbol{S}$ and $\\mathbf{Y}$ . It has been empirically observed and theoretically proven that the output matrix $\\pmb{H}$ of self-attention is low-rank, a phenomenon known as over-smoothing or rank collapse [71, 86, 21]. Therefore, we can replace $\\mathcal{D}_{\\mu}$ by a self-attention operator. The ADMM method applied to self-attention, which we name Principal Attention Pursuit (PAP), is given by Algorithm 1. We define our RPC-Attention as ", "page_idx": 6}, {"type": "text", "text": "Definition 1 (Attention with Robust Principal Components) An RPC-Attention performs the PAP in Algorithm 1 for $n$ iterations with $\\lambda$ as a hyperparameter. For the key matrix $\\dot{K}\\in\\mathbb{R}^{N\\times D}$ , RPC-Attention sets $\\dot{\\mu}=N D/4\\|K\\|_{1}$ as suggested in $I I I J,$ where $\\begin{array}{r}{\\|\\pmb{K}\\|_{1}=\\dot{\\sum}_{i d}|K_{i d}|}\\end{array}$ . The output matrix $\\pmb{H}$ of RPC-Attention is set to be the low-rank output matrix $\\textbf{\\emph{L}}$ from $P A P$ . ", "page_idx": 6}, {"type": "text", "text": "4 Experimental Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We aim to numerically show that: (i) RPC-Attention achieves competitive or even better accuracy than the baseline softmax attention on clean data, and (ii) the advantages of RPC-Attention are more prominent when there is a contamination of samples across different types of data and a variety of tasks. We also validate the performance of the Scaled Attention proposed in Remark 3. ", "page_idx": 6}, {"type": "text", "text": "Throughout our experiments, we compare the performance of our proposed models with the baseline softmax attention of the same configuration. All of our results are averaged over 5 runs with different seeds and run on 4 A100 GPU. Details on the models and training settings are provided in Appendix A and additional experimental results are provided in Appendix E. Primarily, we focus on a ViT-tiny model backbone [22], but included in the appendix are experiments on a larger model backbone, ViT-base, and a state of the art (SOTA) robust model, Fully Attentional Networks (FAN) [96]. ", "page_idx": 6}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/a7ea147f7fcc1d1dd6f80c0ca2d5ce5435f24018a7c416a0547d49a599fd4291.jpg", "table_caption": ["Table 1: Top-1, Top-5 accuracy $(\\%)$ , mean corruption error (mCE), and area under the precision-recall curve (AUPR) of RPC-SymViT and SymViT on clean ImageNet-1K data and popular standard robustness benchmarks for image classification. RPC-SymViT (niter/layer1) applies $n$ PAP iterations only at the first layer. RPCSymViT (niter/all-layer) applies $_n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/89c802728623c9480390c2d60e40c577f214233826e4910cdedbaa636a7f4ae6.jpg", "table_caption": ["Table 2: Top-1/5 accuracy $(\\%)$ on attacked ImageNet-1K data. RPC-SymViT (niter/layer1) applies $_n$ PAP iterations at the first layer. RPC-SymViT (niter/all-layer) applies $n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.1 Vision Tasks: ImageNet-1K Object Classification ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We implement PAP in Algorithm 1 in the symmetric softmax attention layers of a ViT-tiny model and compare it to the standard symmetric model as our baseline. We refer to our model as RPC-SymViT and the baseline model as $\\mathrm{{SymViT}}$ . For RPC-SymViT, we study two settings. In the first setting, which we denote by RPC-SymViT (niter/layer1), $n=4,5,6$ , to maintain the computational efficiency of the model, we apply $n$ PAP iterations only at the first layer to recover a cleaner data matrix that is then sent to the subsequent layers in the model. In the second setting, which we denote by RPC-SymViT (niter/all-layer), $n=2$ , we apply $n$ PAP iterations at all layers. We note that an iterative scheme has the potential to have an increased computational load, hence, we provide a comparison on the number of flops per sample, run time per sample, memory and number of parameters between RPC-SymViT and the baseline in Appendix E.9, showing a comparable efficiency. ", "page_idx": 7}, {"type": "text", "text": "Robustness against Data Corruptions. To benchmark robustness to data corruptions, we use the standard datasets, ImageNet-C (IN-C) [31], ImageNet-A (IN-A), ImageNet-O (IN-O) [32], and ImageNet-R (IN-R) [30]. We provide details on each dataset and the metrics for evaluation in Appendix A.1. The direction of increasing or decreasing values of these metrics signifying greater robustness are indicated in the Table 1 with an arrow, along with the results on each dataset. ", "page_idx": 7}, {"type": "text", "text": "Across all evaluations, RPC-SymViT outperforms the SymViT baseline, thereby justifying the advantages of our RPC-Attention. Particularly, RPC-SymViT with 6 iterations in the 1st layer achieves an improvement of over $1\\%$ in terms of accuracy on the clean ImageNet-1K validation set and almost 3 AUPR on ImageNet-O compared to the SymViT. This result is consistent with the intuition that a higher number of iterations executed on a consistent data matrix leads to cleaner data. The full details of all corruption types are presented in Appendix E.3. ", "page_idx": 7}, {"type": "image", "img_path": "VUWvVvNi6r/tmp/93e5e8097c69d8ab5c40a10144a864e9c2e4aea964d13255c3d9768a62869763.jpg", "img_caption": ["Figure 3: Left: Top-1 accuracy of RPC-SymViT vs. baseline SymViT evaluated on PGD/FGSM attacked ImageNet-1K validation set across increasing perturbation budgets. Right: Validation top-1 accuracy $(\\%)$ and loss of Scaled Attention vs. the baseline asymmetric softmax attention in ViT for the first 50 training epochs. "], "img_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/25c12c81c873440b2bee1c3662cf87a2be3056371e65561275cf0cedfe5399fe.jpg", "table_caption": ["Table 3: Validation/test perplexity (PPL) on clean WikiText-103 and word swap attacked dataset. RPC-Symlm (niter/layer $\\boldsymbol{\\imath}_{1}{\\cdot}\\boldsymbol{n}_{2}$ ) applies $_n$ iterations of PAP only in layers $n_{1}$ to $n_{2}$ of the model. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Robustness under Adversarial Attacks. We report the top-1 and top-5 accuracy of the models on ImageNet-1K distorted by white box attacks, including PGD [45], FGSM [28], SLD [79], and CW [12] attacks. We further examine the models on the black-box attack SPSA [82], AutoAttack [18], and a noise-adding attack. In Table 2, we present the results of all attacks, where PGD and FGSM are reported for the maximum perturbation budget. ", "page_idx": 8}, {"type": "text", "text": "On all attacks, RPC-SymViT outperforms SymViT by a substantial margin, demonstrating the effectiveness of RPC-Attention. Notably, as the square attack in AutoAttack is also a score-based black box attack, in order to further verify our method, we include the results of RPC-SymViT (6iter/layer1) and the baseline SymViT on this attack in the Appendix E.4 in which our model also performs better. This result together with our model\u2019s considerable improvement over the baseline on the black-box SPSA attack justifies that RPC-Attention\u2019s robustness against adversarial attacks is not due to any form of gradient masking. In addition, we illustrate RPC-SymViT\u2019s robustness across increasing perturbations for PGD and FGSM in Fig. 3(left). Details on the evaluation of the models under all attacks are provided in Appendix A.2. ", "page_idx": 8}, {"type": "text", "text": "ADE20K Image Segmentation. We continue evaluating the beneftis of our method by implementing RPC-Attention in a Segmenter model [72] and providing results on the ADE20K image segmentation task [95]. Table 6 in Appendix A.3 shows that Segmenter with the RPC-SymViT backbone outperforms the Segmenter with the baseline SymViT backbone on both clean and corrupted data. ", "page_idx": 8}, {"type": "text", "text": "4.2 Language Tasks: WikiText-103 Language Modeling ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We assess our model on the large-scale WikiText-103 language modeling task [47]. Using a standard transformer language model [83], with a symmetric attention layer (Symlm), we replace it with an RPC-Attention layer (RPC-Symlm). As with RPC-SymViT, we only implement RPC-Attention in the first four layers of Symlm and run PAP for 4 iterations to save on computational overhead. The results of the validation and test perplexity (PPL) summarized in Table 3 validate the advantage of our method, surpassing the baseline by at least 1 PPL for all datasets. ", "page_idx": 8}, {"type": "text", "text": "4.3 Validating the Benefits of Scaled Attention ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this section, we provide an empirical comparison between the Scaled Attention in Remark 3 and the softmax attention. We train an asymmetric ViT-tiny model with two different versions of Scaled Attention. While the exact value of $\\boldsymbol{S}$ can be mathematically formulated as in Remark 3, it might lead to numerical errors that are difficult to handle. Therefore, in the first version of Scaled Attention, we let $\\boldsymbol{S}$ be a learned parameter matrix in each layer (Scaled Attention $S$ in Fig. 3(right)). In the second version of Scaled Attention (Scaled Attention $\\alpha\\times\\mathrm{Asym}$ in Fig. 3(right)), given that $s_{j j^{\\prime}}\\,=\\,g(k_{j^{\\prime}})/g(k_{j})$ , we rewrite $\\boldsymbol{S}$ as the product of a symmetric softmax attention matrix and the reciprocal of its transpose. The model learns this reciprocal by a learnable scalar $\\alpha$ and we let $\\pmb{S}=\\alpha\\pmb{A}_{S y m}$ , where $A_{S y m}$ is the symmetric softmax attention. More details are in Appendix E.1. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Fig. 3(right) shows the top-1 validation accuracy and loss over 50 epochs when training ViT models equipped with Scaled Attention and softmax attention on the ImageNet-1K object classification task. The full training curve can also be found in Appendix E.1. The results suggest that both versions of Scaled Attention outperform the softmax attention. This provides further evidence that self-attention learns to approximate a kernel PCA since the Scaled Attention with a more explicit structure of the value matrix $V$ suggested in Theorem 1 obtains better performance than softmax attention. ", "page_idx": 9}, {"type": "text", "text": "5 Related Works ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Theoretical Perspectives of Attention Mechanisms. The study of the attention mechanism in transformers through different theoretical frameworks has been expanding. [81] shows that attention can be analyzed as a kernel smoother over the inputs using an appropriate kernel score that is the similarities between them. [16, 87, 37, 55] reduce the quadratic complexity of transformers by linearizing the softmax kernel to improve the computational and memory efficiency. In addition, there are works interpreting transformers using the frameworks of ordinary/partial differential equations [50, 51, 44, 69, 27, 26] and from probabilistic viewpoints with Gaussian Mixture Models [52, 23, 75, 54, 92]. [15] provides a new perspective by emphasizing the asymmetry of the softmax kernel and recovers the self-attention mechanism from an asymmetric Kernel Singular Value Decomposition (KSVD) using the duality of the optimization problem. Another related work views transformers from the perspective of Support Vector Machines [57, 76]. We discuss [15] and [76], as well as the approaches that use matrix decomposition and iterative algorithms in deep models, in Appendix F. Separate from these works, our kernel PCA perspective derives softmax attention as a projection of the query vectors in a feature space. Using our framework, we are able to predict the exact explicit form of the value matrix in self-attention, demonstrating that this matrix captures the eigenvectors of the Gram matrix of the key vectors in a feature space. Our work is the first to show this insight. ", "page_idx": 9}, {"type": "text", "text": "Robustness of Transformers. There have been many works studying the robustness of Vision Transformers (ViT) [22] against different types of attacks [7, 61, 73, 96]. Recent work that serves to address this include [46], whereby new training strategies and architectural adjustments are proposed to improve the robustness of ViT. In addition, [58] suggests employing a Mahalanobis distance metric to calculate attention weights, expanding the feature space along directions of high contextual relevance, thereby enhancing the model\u2019s robustness. Also, [29] adapts traditional robust kernel density estimation techniques to create new classes of transformers that are resilient to adversarial attacks and data contamination. [14, 10] integrate a Gaussian process into attention for out-ofdistribution detection, and [80] develops equivariant neural functional networks for transformers. Our RPC-Attention is orthogonal to these methods. ", "page_idx": 9}, {"type": "text", "text": "6 Concluding Remarks ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we derive self-attention from kernel principal component analysis (kernel PCA) as a projection of the query vectors onto the principal component axes of the key matrix in a feature space. Using our kernel PCA framework, we derive a new class of robust attention, namely the Attention with Robust Principal Components (RPC-Attention), that is resilient to data contamination. A limitation of RPC-Attention is its derivation from an iterative algorithm that leads to its unrolling architecture, increasing the computational cost of the model. In our paper, we mitigate this by only replacing softmax attention with RPC-Attention in the first layer of the model and demonstrate that doing so is sufficiently effective for robustness. In addition, we provide a comparison of the efficiency of RPC-Attention with softmax attention in Appendix E.9 and find that we are comparable across all metrics at test time while only slightly less efficient during training. It is also interesting to extend our kernel PCA framework to explain multi-layer transformers. We leave these exciting directions as future work. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This research / project is supported by the National Research Foundation Singapore under the AI Singapore Programme (AISG Award No: AISG2-TC-2023-012-SGIL). This research / project is supported by the Ministry of Education, Singapore, under the Academic Research Fund Tier 1 (FY2023) (A-8002040-00-00, A-8002039-00-00). This research / project is also supported by the NUS Presidential Young Professorship Award (A-0009807-01-00). ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Rami Al-Rfou, Dokook Choe, Noah Constant, Mandy Guo, and Llion Jones. Character-level language modeling with deeper self-attention. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 33, pages 3159\u20133166, 2019.   \n[2] Brandon Amos and J Zico Kolter. Optnet: Differentiable optimization as a layer in neural networks. In International conference on machine learning, pages 136\u2013145. PMLR, 2017. [3] Maksym Andriushchenko, Francesco Croce, Nicolas Flammarion, and Matthias Hein. Square attack: a query-efficient black-box adversarial attack via random search. In European conference on computer vision, pages 484\u2013501. Springer, 2020.   \n[4] Alexei Baevski and Michael Auli. Adaptive input representations for neural language modeling. In International Conference on Learning Representations, 2019. [5] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly learning to align and translate. In International Conference on Learning Representations, 2015. [6] Shaojie Bai, J Zico Kolter, and Vladlen Koltun. Deep equilibrium models. Advances in neural information processing systems, 32, 2019. [7] Srinadh Bhojanapalli, Ayan Chakrabarti, Daniel Glasner, Daliang Li, Thomas Unterthiner, and Andreas Veit. Understanding robustness of transformers for image classification. In Proceedings of the IEEE/CVF international conference on computer vision, pages 10231\u201310241, 2021.   \n[8] Christopher M Bishop and Nasser M Nasrabadi. Pattern recognition and machine learning, volume 4. Springer, 2006. [9] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, and Dario Amodei. Language models are few-shot learners. In Advances in Neural Information Processing Systems, volume 33, pages 1877\u20131901. Curran Associates, Inc., 2020.   \n[10] Long Minh Bui, Tho Tran Huu, Duy Dinh, Tan Minh Nguyen, and Trong Nghia Hoang. Revisiting kernel attention with correlated gaussian process representation. In The 40th Conference on Uncertainty in Artificial Intelligence, 2024.   \n[11] Emmanuel J Cand\u00e8s, Xiaodong Li, Yi Ma, and John Wright. Robust principal component analysis? Journal of the ACM (JACM), 58(3):1\u201337, 2011.   \n[12] Nicholas Carlini and David Wagner. Towards evaluating the robustness of neural networks. In 2017 ieee symposium on security and privacy (sp), pages 39\u201357. Ieee, 2017.   \n[13] Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Misha Laskin, Pieter Abbeel, Aravind Srinivas, and Igor Mordatch. Decision transformer: Reinforcement learning via sequence modeling. Advances in neural information processing systems, 34:15084\u201315097, 2021.   \n[14] Wenlong Chen and Yingzhen Li. Calibrating transformers via sparse gaussian processes. In The Eleventh International Conference on Learning Representations, 2023. ", "page_idx": 10}, {"type": "text", "text": "[15] Yingyi Chen, Qinghua Tao, Francesco Tonin, and Johan Suykens. Primal-attention: Selfattention through asymmetric kernel svd in primal representation. Advances in Neural Information Processing Systems, 36, 2024. ", "page_idx": 11}, {"type": "text", "text": "[16] Krzysztof Marcin Choromanski, Valerii Likhosherstov, David Dohan, Xingyou Song, Andreea Gane, Tamas Sarlos, Peter Hawkins, Jared Quincy Davis, Afroz Mohiuddin, Lukasz Kaiser, David Benjamin Belanger, Lucy J Colwell, and Adrian Weller. Rethinking attention with performers. In International Conference on Learning Representations, 2021.   \n[17] Aakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra, Adam Roberts, Paul Barham, Hyung Won Chung, Charles Sutton, Sebastian Gehrmann, Parker Schuh, Kensen Shi, Sasha Tsvyashchenko, Joshua Maynez, Abhishek Rao, Parker Barnes, Yi Tay, Noam Shazeer, Vinodkumar Prabhakaran, Emily Reif, Nan Du, Ben Hutchinson, Reiner Pope, James Bradbury, Jacob Austin, Michael Isard, Guy Gur-Ari, Pengcheng Yin, Toju Duke, Anselm Levskaya, Sanjay Ghemawat, Sunipa Dev, Henryk Michalewski, Xavier Garcia, Vedant Misra, Kevin Robinson, Liam Fedus, Denny Zhou, Daphne Ippolito, David Luan, Hyeontaek Lim, Barret Zoph, Alexander Spiridonov, Ryan Sepassi, David Dohan, Shivani Agrawal, Mark Omernick, Andrew M. Dai, Thanumalayan Sankaranarayana Pillai, Marie Pellat, Aitor Lewkowycz, Erica Moreira, Rewon Child, Oleksandr Polozov, Katherine Lee, Zongwei Zhou, Xuezhi Wang, Brennan Saeta, Mark Diaz, Orhan Firat, Michele Catasta, Jason Wei, Kathy Meier-Hellstern, Douglas Eck, Jeff Dean, Slav Petrov, and Noah Fiedel. Palm: Scaling language modeling with pathways. Journal of Machine Learning Research, 24(240):1\u2013113, 2023.   \n[18] Francesco Croce and Matthias Hein. Reliable evaluation of adversarial robustness with an ensemble of diverse parameter-free attacks. In International conference on machine learning, pages 2206\u20132216. PMLR, 2020.   \n[19] Fernando De la Torre and Michael J Black. Robust principal component analysis for computer vision. In Proceedings Eighth IEEE International Conference on Computer Vision. ICCV 2001, volume 1, pages 362\u2013369. IEEE, 2001.   \n[20] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep bidirectional transformers for language understanding. In Jill Burstein, Christy Doran, and Thamar Solorio, editors, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), pages 4171\u20134186, Minneapolis, Minnesota, June 2019. Association for Computational Linguistics.   \n[21] Yihe Dong, Jean-Baptiste Cordonnier, and Andreas Loukas. Attention is not all you need: Pure attention loses rank doubly exponentially with depth. In International Conference on Machine Learning, pages 2793\u20132803. PMLR, 2021.   \n[22] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, and Neil Houlsby. An image is worth 16x16 words: Transformers for image recognition at scale. In International Conference on Learning Representations, 2021.   \n[23] Prasad Gabbur, Manjot Bilkhu, and Javier Movellan. Probabilistic attention for interactive segmentation. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P.S. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, volume 34, pages 4448\u20134460. Curran Associates, Inc., 2021.   \n[24] Rinon Gal, Yuval Alaluf, Yuval Atzmon, Or Patashnik, Amit Haim Bermano, Gal Chechik, and Daniel Cohen-or. An image is worth one word: Personalizing text-to-image generation using textual inversion. In The Eleventh International Conference on Learning Representations, 2023.   \n[25] Zhengyang Geng, Meng-Hao Guo, Hongxu Chen, Xia Li, Ke Wei, and Zhouchen Lin. Is attention better than matrix decomposition? In International Conference on Learning Representations, 2021.   \n[26] Borjan Geshkovski, Cyril Letrouit, Yury Polyanskiy, and Philippe Rigollet. A mathematical perspective on transformers. arXiv preprint arXiv:2312.10794, 2023.   \n[27] Borjan Geshkovski, Cyril Letrouit, Yury Polyanskiy, and Philippe Rigollet. The emergence of clusters in self-attention dynamics. Advances in Neural Information Processing Systems, 36, 2024.   \n[28] Ian Goodfellow, Jonathon Shlens, and Christian Szegedy. Explaining and harnessing adversarial examples. In International Conference on Learning Representations, 2015.   \n[29] Xing Han, Tongzheng Ren, Tan Nguyen, Khai Nguyen, Joydeep Ghosh, and Nhat Ho. Designing robust transformers using robust kernel density estimation. Advances in Neural Information Processing Systems, 36, 2024.   \n[30] Dan Hendrycks, Steven Basart, Norman Mu, Saurav Kadavath, Frank Wang, Evan Dorundo, Rahul Desai, Tyler Zhu, Samyak Parajuli, Mike Guo, et al. The many faces of robustness: A critical analysis of out-of-distribution generalization. In Proceedings of the IEEE/CVF international conference on computer vision, pages 8340\u20138349, 2021.   \n[31] Dan Hendrycks and Thomas Dietterich. Benchmarking neural network robustness to common corruptions and perturbations. In International Conference on Learning Representations, 2019.   \n[32] Dan Hendrycks, Kevin Zhao, Steven Basart, Jacob Steinhardt, and Dawn Song. Natural adversarial examples. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 15262\u201315271, 2021.   \n[33] John Hewitt and Percy Liang. Designing and interpreting probes with control tasks. In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 2733\u20132743, Hong Kong, China, November 2019. Association for Computational Linguistics.   \n[34] Mia Hubert, Peter J Rousseeuw, and Karlien Vanden Branden. Robpca: a new approach to robust principal component analysis. Technometrics, 47(1):64\u201379, 2005.   \n[35] Michael Janner, Qiyang Li, and Sergey Levine. Offline reinforcement learning as one big sequence modeling problem. Advances in neural information processing systems, 34:1273\u2013 1286, 2021.   \n[36] John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, Russ Bates, Augustin \u017d\u00eddek, Anna Potapenko, et al. Highly accurate protein structure prediction with alphafold. Nature, 596(7873):583\u2013589, 2021.   \n[37] Angelos Katharopoulos, Apoorv Vyas, Nikolaos Pappas, and Fran\u00e7ois Fleuret. Transformers are rnns: Fast autoregressive transformers with linear attention. In International conference on machine learning, pages 5156\u20135165. PMLR, 2020.   \n[38] Salman Khan, Muzammal Naseer, Munawar Hayat, Syed Waqas Zamir, Fahad Shahbaz Khan, and Mubarak Shah. Transformers in vision: A survey. ACM computing surveys (CSUR), 54(10s):1\u201341, 2022.   \n[39] Takeshi Kojima, Shixiang (Shane) Gu, Machel Reid, Yutaka Matsuo, and Yusuke Iwasawa. Large language models are zero-shot reasoners. In Advances in Neural Information Processing Systems, volume 35, pages 22199\u201322213. Curran Associates, Inc., 2022.   \n[40] Kuang-Huei Lee, Ofir Nachum, Mengjiao Sherry Yang, Lisa Lee, Daniel Freeman, Sergio Guadarrama, Ian Fischer, Winnie Xu, Eric Jang, Henryk Michalewski, et al. Multi-game decision transformers. Advances in Neural Information Processing Systems, 35:27921\u201327936, 2022.   \n[41] Zhouchen Lin, Minming Chen, and Yi Ma. The augmented lagrange multiplier method for exact recovery of corrupted low-rank matrices. arXiv preprint arXiv:1009.5055, 2010.   \n[42] Zhouhan Lin, Minwei Feng, Cicero Nogueira dos Santos, Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua Bengio. A structured self-attentive sentence embedding. In International Conference on Learning Representations, 2017.   \n[43] Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and Baining Guo. Swin transformer: Hierarchical vision transformer using shifted windows. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10012\u201310022, 2021.   \n[44] Yiping Lu, Zhuohan Li, Di He, Zhiqing Sun, Bin Dong, Tao Qin, Liwei Wang, and Tie-Yan Liu. Understanding and improving transformer from a multi-particle dynamic system point of view. arXiv preprint arXiv:1906.02762, 2019.   \n[45] Aleksander Madry, Aleksandar Makelov, Ludwig Schmidt, Dimitris Tsipras, and Adrian Vladu. Towards deep learning models resistant to adversarial attacks. In International Conference on Learning Representations, 2018.   \n[46] Xiaofeng Mao, Gege Qi, Yuefeng Chen, Xiaodan Li, Ranjie Duan, Shaokai Ye, Yuan He, and Hui Xue. Towards robust vision transformer. In Proceedings of the IEEE/CVF conference on Computer Vision and Pattern Recognition, pages 12042\u201312051, 2022.   \n[47] Stephen Merity, Caiming Xiong, James Bradbury, and Richard Socher. Pointer sentinel mixture models. In International Conference on Learning Representations, 2017.   \n[48] John Morris, Eli Lifland, Jin Yong Yoo, Jake Grigsby, Di Jin, and Yanjun Qi. Textattack: A framework for adversarial attacks, data augmentation, and adversarial training in nlp. In Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pages 119\u2013126, 2020.   \n[49] Minh Nguyen and Fernando Torre. Robust kernel principal component analysis. Advances in Neural Information Processing Systems, 21, 2008.   \n[50] Tam Nguyen, Tan Nguyen, and Richard Baraniuk. Mitigating over-smoothing in transformers via regularized nonlocal functionals. Advances in Neural Information Processing Systems, 36:80233\u201380256, 2023.   \n[51] Tam Nguyen, C\u00e9sar A Uribe, Tan M Nguyen, and Richard G Baraniuk. Pidformer: Transformer meets control theory. In International Conference on Machine Learning. PMLR, 2024.   \n[52] Tam Minh Nguyen, Tan Minh Nguyen, Dung DD Le, Duy Khuong Nguyen, Viet-Anh Tran, Richard Baraniuk, Nhat Ho, and Stanley Osher. Improving transformers with probabilistic attention keys. In International Conference on Machine Learning, pages 16595\u201316621. PMLR, 2022.   \n[53] Tan Nguyen, Tam Nguyen, Hai Do, Khai Nguyen, Vishwanath Saragadam, Minh Pham, Khuong Duy Nguyen, Nhat Ho, and Stanley Osher. Improving transformer with an admixture of attention heads. Advances in neural information processing systems, 35:27937\u201327952, 2022.   \n[54] Tan Nguyen, Minh Pham, Tam Nguyen, Khai Nguyen, Stanley Osher, and Nhat Ho. Fourierformer: Transformer meets generalized fourier integral theorem. Advances in Neural Information Processing Systems, 35:29319\u201329335, 2022.   \n[55] Tan Nguyen, Vai Suliafu, Stanley Osher, Long Chen, and Bao Wang. Fmmformer: Efficient and flexible transformer via decomposed near-field and far-field attention. Advances in neural information processing systems, 34:29449\u201329463, 2021.   \n[56] Tan M Nguyen, Tam Nguyen, Long Bui, Hai Do, Duy Khuong Nguyen, Dung D Le, Hung Tran-The, Nhat Ho, Stan J Osher, and Richard G Baraniuk. A probabilistic framework for pruning transformers via a finite admixture of keys. In ICASSP 2023-2023 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 1\u20135. IEEE, 2023.   \n[57] Tan Minh Nguyen, Tam Minh Nguyen, Nhat Ho, Andrea L. Bertozzi, Richard Baraniuk, and Stanley Osher. A primal-dual framework for transformers and neural networks. In The Eleventh International Conference on Learning Representations, 2023.   \n[58] Stefan K Nielsen, Laziz U Abdullaev, Rachel Teo, and Tan M Nguyen. Elliptical attention. Advances in Neural Information Processing Systems, 2024.   \n[59] Nicolas Papernot, Fartash Faghri, Nicholas Carlini, Ian Goodfellow, Reuben Feinman, Alexey Kurakin, Cihang Xie, Yash Sharma, Tom Brown, Aurko Roy, Alexander Matyasko, Vahid Behzadan, Karen Hambardzumyan, Zhishuai Zhang, Yi-Lin Juang, Zhi Li, Ryan Sheatsley, Abhibhav Garg, Jonathan Uesato, Willi Gierke, Yinpeng Dong, David Berthelot, Paul Hendricks, Jonas Rauber, and Rujun Long. Technical report on the cleverhans v2.1.0 adversarial examples library. arXiv preprint arXiv:1610.00768, 2018.   \n[60] Ankur Parikh, Oscar T\u00e4ckstr\u00f6m, Dipanjan Das, and Jakob Uszkoreit. A decomposable attention model for natural language inference. In Jian Su, Kevin Duh, and Xavier Carreras, editors, Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 2249\u20132255, Austin, Texas, November 2016. Association for Computational Linguistics.   \n[61] Sayak Paul and Pin-Yu Chen. Vision transformers are robust learners. In Proceedings of the AAAI conference on Artificial Intelligence, volume 36, pages 2071\u20132081, 2022.   \n[62] Karl Pearson. Liii. on lines and planes of closest fti to systems of points in space. The London, Edinburgh, and Dublin philosophical magazine and journal of science, 2(11):559\u2013572, 1901.   \n[63] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International Conference on Machine Learning, pages 8748\u20138763. PMLR, 2021.   \n[64] Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. Improving language understanding by generative pre-training. OpenAI report, 2018.   \n[65] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019.   \n[66] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. Journal of Machine Learning Research, 21(140):1\u201367, 2020.   \n[67] Roshan M Rao, Jason Liu, Robert Verkuil, Joshua Meier, John Canny, Pieter Abbeel, Tom Sercu, and Alexander Rives. Msa transformer. In Proceedings of the 38th International Conference on Machine Learning, volume 139 of Proceedings of Machine Learning Research, pages 8844\u20138856. PMLR, 18\u201324 Jul 2021.   \n[68] Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C Lawrence Zitnick, Jerry Ma, et al. Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences. Proceedings of the National Academy of Sciences, 118(15), 2021.   \n[69] Michael E Sander, Pierre Ablin, Mathieu Blondel, and Gabriel Peyr\u00e9. Sinkformers: Transformers with doubly stochastic attention. In International Conference on Artificial Intelligence and Statistics, pages 3515\u20133530. PMLR, 2022.   \n[70] Imanol Schlag, Kazuki Irie, and J\u00fcrgen Schmidhuber. Linear transformers are secretly fast weight programmers. In International Conference on Machine Learning, pages 9355\u20139366. PMLR, 2021.   \n[71] Han Shi, Jiahui Gao, Hang Xu, Xiaodan Liang, Zhenguo Li, Lingpeng Kong, Stephen M. S. Lee, and James Kwok. Revisiting over-smoothing in BERT from the perspective of graph. In International Conference on Learning Representations, 2022.   \n[72] Robin Strudel, Ricardo Garcia, Ivan Laptev, and Cordelia Schmid. Segmenter: Transformer for semantic segmentation. In Proceedings of the IEEE/CVF international conference on computer vision, pages 7262\u20137272, 2021.   \n[73] Akshayvarun Subramanya, Aniruddha Saha, Soroush Abbasi Koohpayegani, Ajinkya Tejankar, and Hamed Pirsiavash. Backdoor attacks on vision transformers. arXiv preprint arXiv:2206.08477, 2022.   \n[74] J.A.K. Suykens, T. Van Gestel, J. Vandewalle, and B. De Moor. A support vector machine formulation to pca analysis and its kernel version. IEEE Transactions on Neural Networks, 14(2):447\u2013450, 2003.   \n[75] Binh Tang and David S. Matteson. Probabilistic transformer for time series analysis. In A. Beygelzimer, Y. Dauphin, P. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, 2021.   \n[76] Davoud Ataee Tarzanagh, Yingcong Li, Christos Thrampoulidis, and Samet Oymak. Transformers as support vector machines. arXiv preprint arXiv:2308.16898, 2023.   \n[77] Ian Tenney, Dipanjan Das, and Ellie Pavlick. BERT rediscovers the classical NLP pipeline. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 4593\u20134601, Florence, Italy, July 2019. Association for Computational Linguistics.   \n[78] Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, and Herv\u00e9 J\u00e9gou. Training data-efficient image transformers & distillation through attention. In International conference on machine learning, pages 10347\u201310357. PMLR, 2021.   \n[79] Florian Tramer and Dan Boneh. Adversarial training and robustness for multiple perturbations. Advances in neural information processing systems, 32, 2019.   \n[80] Viet-Hoang Tran, Thieu N Vo, An Nguyen The, Tho Tran Huu, Minh-Khoi Nguyen-Nhat, Thanh Tran, Duy-Tung Pham, and Tan Minh Nguyen. Equivariant neural functional networks for transformers. arXiv preprint arXiv:2410.04209, 2024.   \n[81] Yao-Hung Hubert Tsai, Shaojie Bai, Makoto Yamada, Louis-Philippe Morency, and Ruslan Salakhutdinov. Transformer dissection: An unified understanding for transformer\u2019s attention via the lens of kernel. In Kentaro Inui, Jing Jiang, Vincent Ng, and Xiaojun Wan, editors, Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 4344\u20134353, Hong Kong, China, November 2019. Association for Computational Linguistics.   \n[82] Jonathan Uesato, Brendan O\u2019donoghue, Pushmeet Kohli, and Aaron Oord. Adversarial risk and the dangers of evaluating against weak attacks. In International Conference on Machine Learning, pages 5025\u20135034. PMLR, 2018.   \n[83] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In Advances in neural information processing systems, pages 5998\u20136008, 2017.   \n[84] Jesse Vig and Yonatan Belinkov. Analyzing the structure of attention in a transformer language model. In Proceedings of the 2019 ACL Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pages 63\u201376, Florence, Italy, August 2019. Association for Computational Linguistics.   \n[85] Elena Voita, David Talbot, Fedor Moiseev, Rico Sennrich, and Ivan Titov. Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5797\u20135808, Florence, Italy, July 2019. Association for Computational Linguistics.   \n[86] Peihao Wang, Wenqing Zheng, Tianlong Chen, and Zhangyang Wang. Anti-oversmoothing in deep vision transformers via the fourier domain analysis: From theory to practice. In International Conference on Learning Representations, 2022.   \n[87] Sinong Wang, Belinda Z Li, Madian Khabsa, Han Fang, and Hao Ma. Linformer: Self-attention with linear complexity. arXiv preprint arXiv:2006.04768, 2020.   \n[88] Zifeng Wang and Jimeng Sun. Transtab: Learning transferable tabular transformers across tables. Advances in Neural Information Processing Systems, 35:2902\u20132915, 2022.   \n[89] Yongyi Yang, Tang Liu, Yangkun Wang, Jinjing Zhou, Quan Gan, Zhewei Wei, Zheng Zhang, Zengfeng Huang, and David Wipf. Graph neural networks inspired by classical iterative algorithms. In International Conference on Machine Learning, pages 11773\u201311783. PMLR, 2021.   \n[90] Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Russ R Salakhutdinov, and Quoc V Le. Xlnet: Generalized autoregressive pretraining for language understanding. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 32. Curran Associates, Inc., 2019.   \n[91] Xiaoming Yuan and Junfeng Yang. Sparse and low-rank matrix decomposition via alternating direction method. Pacific Journal of Optimization, 9:167, 2013.   \n[92] Shaolei Zhang and Yang Feng. Modeling concentrated cross-attention for neural machine translation with Gaussian mixture model. In Marie-Francine Moens, Xuanjing Huang, Lucia Specia, and Scott Wen-tau Yih, editors, Findings of the Association for Computational Linguistics: EMNLP 2021, pages 1401\u20131411, Punta Cana, Dominican Republic, November 2021. Association for Computational Linguistics.   \n[93] Shuai Zhang, Lina Yao, Aixin Sun, and Yi Tay. Deep learning based recommender system: A survey and new perspectives. ACM Computing Surveys (CSUR), 52(1):1\u201338, 2019.   \n[94] Qinqing Zheng, Amy Zhang, and Aditya Grover. Online decision transformer. In Kamalika Chaudhuri, Stefanie Jegelka, Le Song, Csaba Szepesvari, Gang Niu, and Sivan Sabato, editors, Proceedings of the 39th International Conference on Machine Learning, volume 162 of Proceedings of Machine Learning Research, pages 27042\u201327059. PMLR, 17\u201323 Jul 2022.   \n[95] Bolei Zhou, Hang Zhao, Xavier Puig, Sanja Fidler, Adela Barriuso, and Antonio Torralba. Scene parsing through ade20k dataset. In 2017 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 5122\u20135130, 2017.   \n[96] Daquan Zhou, Zhiding Yu, Enze Xie, Chaowei Xiao, Animashree Anandkumar, Jiashi Feng, and Jose M Alvarez. Understanding the robustness in vision transformers. In International Conference on Machine Learning, pages 27378\u201327394. PMLR, 2022.   \n[97] Liu Zhuang, Lin Wayne, Shi Ya, and Zhao Jun. A robustly optimized BERT pre-training approach with post-training. In Sheng Li, Maosong Sun, Yang Liu, Hua Wu, Kang Liu, Wanxiang Che, Shizhu He, and Gaoqi Rao, editors, Proceedings of the 20th Chinese National Conference on Computational Linguistics, pages 1218\u20131227, Huhhot, China, August 2021. Chinese Information Processing Society of China. ", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "", "page_idx": 16}, {"type": "text", "text": "Supplement to \u201cUnveiling the Hidden Structure of Self-Attention via Kernel Principal Component Analysis\u201d ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Table of Contents ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "A Experiment Details 18   \nA.1 Robustness against Data Corruptions 19   \nA.2 Robustness under Adversarial Attacks 19   \nA.3 ADE20K Image Segmentation 19   \nA.4 WikiText-103 Language Modeling 20   \nB Calculating the Gram Matrix $\\widetilde{K}_{\\varphi}$ 20   \nC Plotting $J_{\\mathbf{proj}}$ in Section 2.2.1 20   \nD Principal Component Pursuit 21   \nE Additional Experimental Results 22   \nE.1 Reparameterization of Self-Attention 22   \nE.2 Pairwise Absolute Differences of $\\gamma_{i}$ and $\\gamma_{j}$ 23   \nE.3 ImageNet-C Results by Corruption Type 23   \nE.4 Square Attack . 23   \nE.5 Results on ADE20K Image Segmentation 24   \nE.6 Results on RPC-SymViT-base 24   \nE.7 Results on RPC-Attention in FAN 25   \nE.8 Results on downstream Natural Language Understanding tasks 25   \nE.9 Computational Efficiency 27   \nE.10 Results on Robust Asymmetric Attention 27   \nF Further Discussion on Related Works 27   \nG Broader Impacts 28 ", "page_idx": 17}, {"type": "text", "text": "A Experiment Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Implementation Details of RPC-SymViT: Our RPC-SymViT models have $5.2\\mathrm{M}$ parameters, the same as the SymViT baseline. We use a standard tiny configuration with 12 transformer layers, 3 attention heads per layer, and a model dimension of 192 and simply replace softmax attention with RPC-Attention. We follow the training settings as in [78] and their implementation is available at https://github.com/facebookresearch/deit. In a Segmenter model, we use the same RPC-SymViT setting to replace the baseline $\\mathrm{{SymViT}}$ backbone. We follow the training details in [72] and their code is publicly available as well, https://github.com/rstrudel/segmenter. ", "page_idx": 17}, {"type": "text", "text": "There are 3 hyperparameters: 1) $\\mu$ : this parameter controls the singular value thresholding operator in the PAP algorithm. We set $\\mu$ to the recommended value given in Definition 1; 2) $\\lambda$ : this is a regularization parameter that controls the sparsity of the corruption matrix $\\boldsymbol{S}$ . We finetune $\\lambda$ for training and observe that RPC-SymViT with $\\lambda=3$ yields the best performance for models with 2 iterations per layer and $\\lambda=4$ yields the best performance for models with iterations only in the first layer; 3) $n$ : the number of iterations of the PAP algorithm in a RPC-Attention layer. ", "page_idx": 17}, {"type": "text", "text": "Implementation Details of RPC-Symlm: For our language model, we use a standard transformer language model [83], with a symmetric attention layer. The model has a dimension of 128 for the keys, queries and values, while the training and evaluation context length is set at 256. There are 16 layers altogether and 8 heads per layer. Similarly, we replace the softmax attention with RPC-Attention only in the first four layers to save on computational overhead. There are the same 3 hyperparameters as in RPC-SymViT and we use the same value for $\\mu$ , $\\lambda=4$ and $n=4$ . We also follow the standard training settings as in [70, 47] and the code base developed by [70], available here https://github.com/IDSIA/lmtool-fwp. ", "page_idx": 18}, {"type": "text", "text": "A.1 Robustness against Data Corruptions ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Datasets: We use the ImageNet-1K dataset that contains 1.28M training images and 50K validation images. There are 1000 classes of images and the model learns an image classification task. For robustness to common corruptions, we use ImageNet-C (IN-C) [31] which consists of 15 different types of corruptions applied to the ImageNet-1K validation set with 5 levels of severity. To test robustness to both input data distribution shifts as well as label distribution shifts, we use ImageNetA (IN-A) and ImageNet-O (IN-O) [32] respectively. Both of these datasets contain a 200 class subset of ImageNet-1K classes with adversarially filtered images. Finally, we test our model on ImageNet-R (IN-R) [30] which contains various artistic renditions of images. This evaluates the model\u2019s generalization ability to abstract visual renditions. ", "page_idx": 18}, {"type": "text", "text": "Metrics: On ImageNet-1K, ImageNet-A and ImageNet-R, we report the top-1 accuracies for all experiments. We include top-5 accuracies on ImageNet-1K. On ImageNet-C, the standard metric for evaluation is the mean Corruption Error (mCE). To calculate this, we average the top-1 error rate for each corruption type across the 5 levels of severity and divide them by AlexNet\u2019s average errors, then take the final average across all corruption types. We report the area under the precision-recall curve (AUPR) for ImageNet-O which requires anomaly scores. The score is obtained by taking the negative of the highest softmax probability output by the model. The direction of increasing or decreasing values of these metrics signifying greater robustness will be indicated in the table with an arrow. ", "page_idx": 18}, {"type": "text", "text": "A.2 Robustness under Adversarial Attacks ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Attacks: We evaluate the robustness of our method against adversarial attacks using CleverHans [59] and AutoAttack [18]. All attacks are executed on ImageNet-1K\u2019s validation set, and each model is evaluated on the whole set. In particular, we use untargeted, white box attacks such as PGD, FGSM, SLD and CW. In addition, we provide results on gradient-free black box attack, SPSA, diverse AutoAttack, in the standard setting and a simple noise-adding attack. AutoAttack consists of untargeted APGD-CE, targeted APGD-DLR, targeted Fast Adaptive Boundary (FAB) and Square Attack. For further justification of the benefit of our method, we evaluate a variant of our model, RPC-SymViT (6iter/layer1) solely on the black-box Square Attack and show that we are robust against black box attacks as well. This is provided in Appendix E.4. We use a perturbation budget of $\\bar{\\epsilon_{\\mathrm{\\Lambda}}}=1/255$ with the $l_{\\infty}$ norm to manipulate the images and evaluate each model with an incremental increase in perturbation for PGD and FGSM. In SPSA, we run 40 steps per attack with a perturbation budget of $\\epsilon=0.1$ . PGD attack uses a step size of $\\alpha=0.15$ for 20 steps, where at each step the image is adjusted slightly to maximize the model\u2019s loss. Similarly, FGSM does this for a single step. For each attack, we report the top-1 and top-5 accuracy of the model on the distorted dataset with the maximum perturbation budget in Table 2 and across all different perturbations in Figure 3. ", "page_idx": 18}, {"type": "text", "text": "A.3 ADE20K Image Segmentation ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Dataset: The ADE20K dataset includes complex scenes featuring highly detailed labels, making it one of the most challenging segmentation tasks. The training set contains 20,210 images spread across 150 distinct semantic categories. The validation set includes 2,000 images, while the test set comprises 3,352 images. The metrics report for this task are the Mean Accuracy $(\\%)$ and Mean Intersection-Over-Union (IOU). ", "page_idx": 18}, {"type": "text", "text": "A.4 WikiText-103 Language Modeling ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Dataset: The WikiText-103 dataset [47] is derived from Wikipedia articles and is designed to capture long-range contextual dependencies. The training set contains about 28,000 articles, with a total of 103 million words. Each article is divided into text blocks with approximately 3,600 words. The validation and test sets have 218,000 and 246,000 words, respectively, with both sets comprising 60 articles and totaling about 268,000 words. For evaluation, we use a batch size of 1 and apply a sliding window of length $L$ to process the text sequences. When calculating perplexity (PPL), we focus only on the final position, except in the first segment, where we evaluate all positions. We corrupt the both validation and test datasets to demonstrate the robustness of RPC-Attention using TextAttack\u2019s word swap attack [48] to create the attacked WikiText-103 dataset. This adversarial attack randomly replaces words in the dataset with a generic \u201cAAA\u201d for evaluation making it difficult for the model to predict the next word in the sequence correctly. ", "page_idx": 19}, {"type": "text", "text": "B Calculating the Gram Matrix $\\widetilde{K}_{\\varphi}$ ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "In this section, we will show that the centered Gram matrix $\\widetilde{K}_{\\varphi}$ can be computed from the uncentered Gram matrix $K_{\\varphi}$ with elements $K_{\\varphi}(i,j)\\,=\\,k_{\\varphi}(\\pmb{k}_{i},\\pmb{k}_{j})\\,=\\,\\varphi(\\pmb{k}_{i})^{\\top}\\,\\varphi(k_{j})$ . In particular, ${\\widetilde{K}}_{\\varphi}=$ $K_{\\varphi}-{\\bf1}_{N}K_{\\varphi}-{\\bf\\dot{\\cal K}}_{\\varphi}{\\bf1}_{N}+{\\bf1}_{N}K_{\\varphi}{\\bf1}_{N}$ , where ${\\mathbf{}}1_{N}$ denotes the $N\\times N$ matrix in which every element takes the value $1/N$ . Our centered feature vector has the form ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\tilde{\\varphi}(k_{j})=\\varphi(k_{j})-\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\varphi(k_{j^{\\prime}}).\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then the elements of the centered Gram matrix are given as follows ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\widetilde{\\mathsf{K}}_{\\varphi}(i,j)=\\widetilde{k}_{\\varphi}(k_{i},k_{j})}\\\\ &{\\qquad\\quad=\\widetilde{\\varphi}(k_{i})^{\\top}\\widetilde{\\varphi}(k_{j})}\\\\ &{\\qquad\\quad=\\varphi(k_{i})^{\\top}\\varphi(k_{j})-\\displaystyle\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\varphi(k_{i})^{\\top}\\varphi(k_{j^{\\prime}})-\\displaystyle\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}\\varphi(k_{j^{\\prime}})^{\\top}\\varphi(k_{j})+\\frac{1}{N^{2}}\\sum_{j^{\\prime}=1}^{N}\\sum_{l=1}^{N}\\varphi(k_{j^{\\prime}})}\\\\ &{\\qquad\\quad=k_{\\varphi}(k_{i},k_{j})-\\displaystyle\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}k_{\\varphi}(k_{i},k_{j^{\\prime}})-\\displaystyle\\frac{1}{N}\\sum_{j^{\\prime}=1}^{N}k_{\\varphi}(k_{j^{\\prime}},k_{j})+\\frac{1}{N^{2}}\\sum_{j^{\\prime}=1}^{N}\\sum_{l=1}^{N}k_{\\varphi}(k_{j^{\\prime}},k_{l})}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "which expressed in matrix form, gives the result. ", "page_idx": 19}, {"type": "text", "text": "C Plotting $J_{\\mathbf{proj}}$ in Section 2.2.1 ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "In Section 2.2.1, we plotted the reconstruction loss at each epoch of training. Here, we provide the details of the calculation of this loss. From Eqn. (13), ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle{\\cal L}=\\frac1N\\sum_{i=1}^{N}\\|\\varphi({\\boldsymbol{q}}_{i})-\\sum_{d=1}^{D_{v}}h_{i d}u_{d}\\|^{2}}}\\\\ {{\\displaystyle~~=\\frac1N\\sum_{i=1}^{N}(\\|\\varphi({\\boldsymbol{q}}_{i})\\|^{2}-\\|{\\boldsymbol{h}}_{i}\\|^{2}).}}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "In the above, $h_{i}$ is simply our attention output and $\\begin{array}{r}{\\|\\varphi(q_{i})\\|^{2}=\\varphi(q_{i})^{\\top}\\varphi(q_{i})=\\frac{e^{q_{i}^{\\top}q_{i}/\\sqrt{D}}}{(\\sum_{j=1}^{N}e^{q_{i}^{\\top}k_{j}}/\\sqrt{D})^{2}}}\\end{array}$ for $i=1,\\ldots,N$ , can be calculated using the kernel trick as follows. Let $\\pmb{A}$ be the softmax attention ", "page_idx": 19}, {"type": "text", "text": "matrix, $\\pmb{a}_{1}$ its first column and $a_{1}^{2}$ denote the element-wise product. ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{l o g(a_{1}^{2})=l o g(\\left[\\frac{e^{2q_{1}^{\\top}k_{1}/\\sqrt{D}}}{(\\sum_{j=1}^{N}e^{q_{1}^{\\top}k_{j}/\\sqrt{D}})^{2}}\\right])}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\left[\\frac{\\vdots}{(\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}}\\right])}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\left[\\frac{e^{2q_{1}^{\\top}k_{1}/\\sqrt{D}}}{(\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}}\\right]}\\\\ &{\\qquad\\qquad=l o g(\\left[\\frac{e^{2q_{1}^{\\top}k_{1}/\\sqrt{D}}}{\\vdots}\\right])-l o g(\\left[\\frac{\\left[\\sum_{j=1}^{N}e^{q_{1}^{\\top}k_{j}/\\sqrt{D}}\\right)^{2}}{(\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}}\\right])}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\implies l o g(\\left[\\underset{(\\sum_{j=1}^{N}e^{q_{1}^{\\top}k_{j}/\\sqrt{D}})^{2}}{\\vdots}\\right])=l o g(\\left[\\underset{e^{2q_{N}^{\\top}k_{1}/\\sqrt{D}}}{\\vdots}\\right])-l o g(a_{1}^{2})}\\\\ &{\\implies l o g(\\left[\\underset{(\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}}{\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}}\\right])=l o g(\\left[\\underset{e^{2q_{N}^{\\top}k_{1}/\\sqrt{D}}}{\\sum_{j=1}^{N}}\\right])-l o g(a_{1}^{2})}\\\\ &{=\\left[\\underset{2q_{N}^{\\top}k_{1}/\\sqrt{D}}{\\sum_{j=1}^{N}}\\right]-l o g(a_{1}^{2})}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\implies\\left[(\\sum_{j=1}^{N}e^{q_{1}^{\\top}k_{j}/\\sqrt{D}})^{2}\\right]=e^{\\left[2q_{N}^{\\top}k_{1}/\\sqrt{D}\\right]}\\left[\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}})^{2}\\right]=e^{\\left[2q_{N}^{\\top}k_{1}/\\sqrt{D}\\right]}\\left[\\sum_{j=1}^{N}e^{q_{N}^{\\top}k_{j}/\\sqrt{D}}\\right]^{2}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Then, ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\left[\\|\\varphi(q_{1})\\|^{2}\\right]=\\left[e^{q_{1}^{\\top}q_{1}/\\sqrt{D}}\\atop{\\vdots}\\right]/e^{\\left[2q_{N}^{\\top}k_{1}/\\sqrt{D}\\right]}}\\bigg[2q_{N}^{\\top}k_{1}/\\sqrt{D}\\bigg]-l o g(a_{1}^{2})\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "D Principal Component Pursuit ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Let $M,L,S\\in\\mathbb{R}^{N\\times D}$ be the matrix of our corrupted measurements, the low-rank matrix we seek to recover and a sparse corruption matrix respectively. The optimization problem we would like to solve is ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l r l}&{\\mathrm{minimize}_{L,S}}&&{\\|\\boldsymbol{L}\\|_{*}+\\lambda\\|S\\|_{1}}\\\\ &{\\mathrm{subject~to}}&&{\\boldsymbol{L}+\\boldsymbol{S}=\\boldsymbol{M}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "Under minimal assumptions that the low-rank component $\\textbf{\\emph{L}}$ is not sparse (i.e., $\\textbf{\\emph{L}}$ satisfies the incoherence condition defined in [11]), and the sparse component $\\boldsymbol{S}$ is not low-rank (i.e., the sparsity pattern of $S$ is selected uniformly at random), we will follow the author\u2019s choice of algorithm to solve the PCP which is to use the Alternating Direction Method of Multipliers (ADMM). ", "page_idx": 20}, {"type": "text", "text": "The ADMM algorithm uses the augmented Lagrangian, ", "page_idx": 20}, {"type": "equation", "text": "$$\nl(L,S,Y)=\\|L\\|_{*}+\\lambda\\|S\\|_{1}+\\langle Y,M-L-S\\rangle+\\mu/2\\|M-L-S\\|_{F}^{2}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "and solves a sequence of optimization problems. We iterate through setting $\\begin{array}{r l}{S_{k+1}}&{{}=}\\end{array}$ arg $\\operatorname*{min}_{S}l(L_{k},S,\\mathbf{\\bar{Y}}_{k})$ and $L_{k+1}=\\arg\\operatorname*{min}_{L}l(L,S_{k+1},Y_{k})$ before updating the Langrange multiplier matrix $Y_{k+1}=Y_{k}+\\mu(M-L_{k+1}-S_{k+1})$ . The advantage of the algorithm is that it turns a complicated optimisation problem into sub problems that have straightforward and efficient solutions. Without much difficulty we can show that: ", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\arg\\operatorname*{min}_{S}l(L,S,Y)=}}\\\\ {{\\arg\\operatorname*{min}_{L}l(L,S,Y)=}}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "image", "img_path": "VUWvVvNi6r/tmp/de79ecb93e3685876a9c7f7bd9c15a8d141bbd42877ee24983d7d4f7cb6c370b.jpg", "img_caption": ["Figure 4: Plot of the validation top-1 accuracy $(\\%)$ and loss on a log scale of the baseline asymmetric attention ViT and two variants with the parameterization of Remark. 3. The curves are plotted for the full training time and show $\\boldsymbol{s}$ trained as a matrix parameter as well as a scalar parameter scaling a symmetric attention matrix. "], "img_footnote": [], "page_idx": 21}, {"type": "text", "text": "where $S_{\\tau}(x)=\\mathrm{sgn}(x)\\operatorname*{max}(|x|-\\tau,0)$ is the shrinkage operator, extended to matrices by applying it element-wise and ${\\mathscr{D}}_{\\tau}({\\pmb X})={U}S_{\\tau}(\\Sigma){V}^{*}$ is the singular value thresholding operator with the singular value decomposition of $\\pmb{X}=\\pmb{U}\\pmb{\\Sigma}\\pmb{V}^{*}$ . ", "page_idx": 21}, {"type": "text", "text": "The algorithm is summarised as below ", "page_idx": 21}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/fdef7abb0a08ad6ca2a217986285bf065120206f74e3cf71afae8ccb882e0429.jpg", "table_caption": [], "table_footnote": [], "page_idx": 21}, {"type": "text", "text": "E Additional Experimental Results ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "E.1 Reparameterization of Self-Attention ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Let $A_{s y m}=[a_{i j}]$ be the softmax attention matrix. Then, from Remark 3, $\\boldsymbol{S}$ has the following form and we multiply the numerator and denominator by $1/K(\\pmb{k}_{j},\\pmb{k}_{j^{\\prime}})$ to obtain a much more convenient expression. ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\allowdisplaybreaks}&{s_{j^{\\prime}j}=\\frac{g(k_{j})}{g(k_{j^{\\prime}})}}\\\\ &{\\quad=\\frac{g(k_{j})}{g(k_{j^{\\prime}})}\\times\\frac{1/K(k_{j},k_{j^{\\prime}})}{1/K(k_{j},k_{j^{\\prime}})}}\\\\ &{\\quad=\\frac{g(k_{j})}{K(k_{j},k_{j^{\\prime}})}\\cdot\\frac{g(k_{j^{\\prime}})}{K(k_{j},k_{j^{\\prime}})}}\\\\ &{\\quad=\\frac{g(k_{j})}{K(k_{j},k_{j^{\\prime}})}\\times\\frac{K(k_{j},k_{j^{\\prime}})}{g(k_{j^{\\prime}})}}\\\\ &{\\quad=\\frac{a_{j^{\\prime}j}}{a_{j^{\\prime}j^{\\prime}}}}\\\\ &{\\implies s=\\frac{1}{N}A_{s p m}\\circledcirc\\mathrm{l}/A_{s p m}^{\\top}}\\end{array}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "In Fig. 4, we plot the full training curve of the two versions of Scaled Attention, Scaled Attention $S$ and Scaled Attention $\\alpha\\times\\mathrm{Asym}$ . We observe that the parameterized models with Scaled Attention do converge more quickly and even obtain a slightly higher validation top-1 accuracy of $73.02\\%$ for the scalar variant as compared to the standard asymmetric ViT at $72.18\\%$ . The final validation loss is also lower at 1.18 and 1.23 respectively. ", "page_idx": 21}, {"type": "image", "img_path": "VUWvVvNi6r/tmp/9d1ab5ed3d89d8393110c3dc7b8544b39907819961f87ae9be165303b9ea73fc.jpg", "img_caption": ["Figure 5: Plot of the mean and standard deviation of the differences in coordinate values of constant vector $\\mathbf{1}\\lambda_{d}$ for $d=1,\\ldots,D_{v}$ for all 12 layers of a ViT-tiny model. The mean should be 0 with small standard deviations when vdj \u2248g(kj) \u2212N j\u2032=1g(kj). ", "Index of the principal component axis "], "img_footnote": [], "page_idx": 22}, {"type": "text", "text": "E.2 Pairwise Absolute Differences of $\\gamma_{i}$ and $\\gamma_{j}$ ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "In Figure 5, we provide the plot of the absolute differences of the coordinates of K \u03c6a\u02c6d in all 12 layers of a ViT-tiny model as elaborated in Section 2.2.2. This would be a constant vector within our framework and the plots provide empirical evidence to justify our claim. In all of the layers, the means are noticeably close to 0 and the standard deviations are also small suggesting that we indeed recovered a constant vector. ", "page_idx": 22}, {"type": "text", "text": "E.3 ImageNet-C Results by Corruption Type ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "In Table 4, we provide the full results of various RPC-SymViT models against the standard SymViT on ImageNet-C for all corruption types averaged over the 5 severity levels. In all types, except for Zoom Blur, the RPC-SymViT model with 6 iterations in the 1st layer outperforms SymViT. ", "page_idx": 22}, {"type": "text", "text": "E.4 Square Attack ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Square attack [3] is a score-based black box attack that does not use local gradient information, hence it is not affected by gradient masking. It operates based on a random search scheme that modifies square-shaped regions such that at each iteration, the perturbation lies approximately at the boundary of the feasible set. We evaluate our RPC-SymViT(6iter/layer1) variant on square attacked ImageNet-1K validation set and compare it to the baseline. Our result of the top-1 and top-5 accuracy in Table 5 illustrates that the effectiveness of RPC-Attention against adversarial attacks is not solely due to a form gradient masking as we still significantly outperform the baseline on square. ", "page_idx": 22}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/b4ffeba083c667d8ab3654f3c9c757461889baca8d6f4cd00fd2b2bc7c8e482a.jpg", "table_caption": ["Table 4: Top-1 accuracy $(\\%)$ and mean corruption error (mCE) of all RPC-SymViT variants and SymViT on each corruption type in ImageNet-C. RPC-SymViT (niter/layer1) applies $n$ PAP iterations only at the first layer. RPC-SymViT (niter/all-layer) applies $n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 23}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/f7531fad496c9757396fc9803e2af94b3c30d13eed6edffa703e3e4cbaf7b5c2.jpg", "table_caption": ["Table 5: Top-1 and Top-5 accuracy $(\\%)$ of RPC-SymViT(6iter/layer1) and baseline SymViT on square attacked ImageNet-1K validation data. RPC-SymViT (niter/layer1) applies $n$ PAP iterations only at the first layer. "], "table_footnote": [], "page_idx": 23}, {"type": "text", "text": "E.5 Results on ADE20K Image Segmentation ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "We further evaluate the beneftis of our method by implementing RPC-Attention in a Segmenter model [72] and providing results on the ADE20K image segmentation task [95] in Table 6. We report the Mean Accuracy and Mean Intersection-Over-Union (IOU) for a Segmenter with a RPC-SymViT backbone and compare it against a baseline SymViT backbone. To assess the robustness of each model, we corrupt the ADE20K dataset with the same 15 corruption types in ImageNet-C and report the same metrics averaged over all corruption types in Table 6 as well. Details of our implementation can be found in Appendix A.3. On both datasets, RPC-SymViT outperforms the baseline substantially. ", "page_idx": 23}, {"type": "text", "text": "E.6 Results on RPC-SymViT-base ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "To show that RPC-Attention is not limited to small-scale models, we conduct experiments on a larger model, SymViT-base with 12 transformer layers, 12 heads per layer, and a hidden dimension of 768. We train a SymViT-base with RPC-Attention in all layers using 2 iterations on ImageNet-1K for ", "page_idx": 23}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/0688f9cf77a0fb2af6e1ab4c606b4444104bf96f225e24c5b197c48ec0971d8a.jpg", "table_caption": ["Table 6: Mean accuracy $(\\%)$ and mean Intersection-Over-Union (IOU) of RPC-SymViT and SymViT on clean ADE20K and corrupted ADE20K dataset. RPC-SymViT (niter/layer1) applies $_n$ PAP iterations only at the first layer. RPC-SymViT (niter/all-layer) applies $_n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/5b68e8d54f7ae1d7e1b3c62659fb9cc0e47a34a85153fc599028ace269efcd4f.jpg", "table_caption": ["Table 7: Top-1, top-5 accuracy $(\\%)$ , mean corruption error (mCE), and area under the precision-recall curve (AUPR) of RPC-SymViT-base and SymViT-base on clean ImageNet-1K data and popular standard robustness benchmarks for image classification. RPC-SymViT-base (niter/all-layer) applies $_n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 24}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/123b8d08b66d902cb6922278cf46d96d7d600d1e81fbb7feadd454e6f0a9d2d6.jpg", "table_caption": ["Table 8: Top-1 and top-5 accuracy $(\\%)$ of RPC-SymViT-base and SymViT-base on PGD and FGSM attacked ImageNet-1K validation data with the highest perturbation budget. RPC-SymViT-base (niter/all-layer) applies $_n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 24}, {"type": "text", "text": "300 epochs. We refer to this model as RPC-SymViT-base (2iter/all-layer). We compare our RPCSymViT-base with the baseline on the same standard robustness benchmarks as before, ImageNet-C, ImageNet-A, and ImageNet-O, as well as on white box attacks PGD and FGSM with the highest perturbation budgets. These results are in Table 7 and 8 respectively and show that RPC-Attention is also effective in SymViT-base. ", "page_idx": 24}, {"type": "text", "text": "E.7 Results on RPC-Attention in FAN ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "To validate that our RPC-Attention is also complementary with SOTA transformer models and can be combined with those methods to improve the SOTA results, we have conducted additional experiments in which we incorporate our RPC-Attention with FAN [96]. FAN is one of the top transformer models that obtain SOTA results on accuracy and robustness. A FAN model augments the MLP layer that follows the standard self-attention with a new channel attention (CA) block. This CA computes an attention matrix along the channel dimension, taking advantage of the feature covariance and allowing the model to filter out irrelevant information. ", "page_idx": 24}, {"type": "text", "text": "We use the FAN-ViT-tiny (FAN-tiny) variant with a symmetric attention for training. In our RPCAttention $^+$ FAN (RPC-FAN-tiny), we replace the attention blocks in the first layer of FAN with our RPC-Attention that runs 4 PAP iterations with hyperparameter values of $\\lambda\\,=\\,4$ and $\\mu=$ $N D/4\\|K\\|_{1}$ . Both our RPC-FAN-tiny and the baseline FAN-tiny are trained for 300 epochs on the ImageNet-1K object classification task. We summarize our results in Tables 9 and 10. RPC-FAN-tiny outperforms the baseline FAN-tiny on all evaluated benchmarks, including ImageNet-1k, ImageNet$\\mathbf{R}$ , and ImageNet-A. Additionally, on PGD and FGSM attacked data, RPC-FAN-tiny significantly outperforms FAN-tiny by over $3\\%$ . ", "page_idx": 24}, {"type": "text", "text": "E.8 Results on downstream Natural Language Understanding tasks ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "We conduct additional experiments on several downstream Natural Language Understanding tasks to illustrate the effectiveness of RPC-Attention during fine-tuning as well. The Stanford Sentiment ", "page_idx": 24}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/9621d196858357bb802154ab61103620db41a9a978a6a65437738db6c238ccf3.jpg", "table_caption": ["Table 9: Top-1, top-5 accuracy $(\\%)$ of RPC-FAN-tiny and FAN-tiny on clean ImageNet-1K data and popular standard robustness benchmarks for image classification. RPC-FAN-tiny (niter/layer1) applies $_n$ PAP iterations only at the first layer. "], "table_footnote": [], "page_idx": 25}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/46da3ad3744b609f1459f891676794ec3dc0e26e31c11895759593ffe0a273ca.jpg", "table_caption": ["Table 10: Top-1 and top-5 accuracy $(\\%)$ of RPC-FAN-tiny and FAN-tiny on PGD and FGSM attacked ImageNet1K validation data with the highest perturbation budget. RPC-FAN-ViT (niter/layer1) applies $n$ PAP iterations only at the first layer. "], "table_footnote": [], "page_idx": 25}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/f7d3d3dcf89ea09626b3c639e6e395fbb4cc41b60ab6640faf8dc153af01c323.jpg", "table_caption": ["Table 11: Train and validation accuracy $(\\%)$ of RPC-SymSMoE, SymSMoE, RPC-SMoE (asymmetric) and SMoE (asymmetric) on SST-2 and IMDB downstream tasks when pre-trained on WikiText-103. RPC is only implemented during fine-tuning, not pre-training and runs for 2 iterations for all layers in each model. "], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "Table 12: Validation and test accuracy of RPC-Attention implemented in a pre-trained transformer language model (RPC-LM) during fine-tuning versus the baseline transformer language model (Baseline-LM). We finetune both models on the 5-class Stanford Sentiment Treebank (SST-5) task with 2 iterations for all layers in the RPC model. ", "page_idx": 25}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/5ec6dce5b7107c926556233030127ffa47c671f710a923a74091c0b09ac8fbee.jpg", "table_caption": [], "table_footnote": [], "page_idx": 25}, {"type": "text", "text": "Treebank v2 (SST-2) and IMDB Sentiment Analysis (IMDB) tasks are binary classifications where the goal is to determine if sentences have positive or negative sentiments. We use 2 baseline Sparse Mixture of Experts (SMoE) models, one with symmetric attention (SymSMoE) and one with asymmetric attention (SMoE), pre-trained on WikiText-103 without RPC, then fine-tuned with (RPC-SymSMoE/RPC-SMoE) and without RPC-Attention for comparison. Their results can be found in Table 11. We observe that RPC-models outperform the baseline models significantly on these tasks. ", "page_idx": 25}, {"type": "text", "text": "On the 5-class sentiment classification task, Stanford Sentiment Treebank (SST-5), we use a pretrained transformer language model from the NAACL 2019 tutorial on \u201cTransfer Learning in Natural Language Processing\u201d for fine-tuning. Their publicly available code can be found at https://github. com/huggingface/naacl_transfer_learning_tutorial. The objective of the task is to determine if the sentences have negative, somewhat negative, neutral, somewhat positive, or positive sentiments. We implement RPC-Attention during fine-tuning only (RPC-LM) and compare the results with the baseline model (Baseline-LM) on SST-5 in Table 12. As can be seen from the table, our RPCAttention is applicable to pre-trained language models and performs significantly better than the baseline. Hence, RPC-Attention is highly effective in downstream natural language understanding tasks and versatile in its application. ", "page_idx": 25}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/a71e6952d38121e94a4ba8a39b851ad712f8a2f91f182f81ddae44c584fd2b19.jpg", "table_caption": ["Table 13: Flop per sample, run time per sample, memory and number of parameters of each RPC-SymViT variant compared to the SymViT baseline. RPC-SymViT (niter/layer1) applies $_n$ PAP iterations only at the first layer. RPC-SymViT (niter/all-layer) applies $_n$ PAP iterations at all layers. "], "table_footnote": [], "page_idx": 26}, {"type": "table", "img_path": "VUWvVvNi6r/tmp/72bf3292bc35b415e034bff3bf92f39cc4ea73616872fd16124b361bcd2bc37c.jpg", "table_caption": ["Table 14: Top-1, top-5 accuracy $(\\%)$ and AUPR of an implementation of RPC-Attention on asymmetric attention evaluated on ImagetNet-1K validation set, ImageNet-R, ImageNet-A and ImageNet-O. These results are compared to the standard asymmetric ViT. "], "table_footnote": [], "page_idx": 26}, {"type": "text", "text": "E.9 Computational Efficiency ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "A possible limitation of introducing an iterative scheme into a deep model is a significant increase in computational overhead. We aim to alleviate that concern by providing the number of flops per sample, run time per sample, memory and number of parameters of each RPC-SymViT variant and the SymViT baseline during both training and test time in Table 13. We observe that RPC-Attention is comparable to the baseline softmax attention across all metrics at test time while only slightly less efficient than the baseline in terms of the number of flops, run time per sample, and memory during training. ", "page_idx": 26}, {"type": "text", "text": "E.10 Results on Robust Asymmetric Attention ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "In this section, we report the results of extending the RPC-SymViT model to the asymmetric attention. However, as the PAP Algorithm. 1 is not designed for multiple data matrices, it is not as effective in the asymmetric case. We implement two variations of the algorithm in an asymmetric attention ViT-tiny with 12 layers. In the 4iter/layer1 version, similar to the symmetric attention case, we run 4 iterations of the algorithm only in the 1st layer of the model by replacing Softmax $(K-S_{k+1}-\\mu^{-1}Y_{k},K-S_{k+1}\\stackrel{\\textstyle-}{-}\\mu^{-1}Y_{k})$ with Softma $\\mathsf{\\Omega}_{:}(\\dot{Q},K-S_{k+1}-\\dot{\\mu}^{-1}\\dot{Y}_{k})$ . For the second version, labeled Sym/Asym, we run the algorithm for 4 iterations in a symmetric attention mechanism in the 1st layer, followed by the standard asymmetric attention in layers 2 to 12. We compare these RPC-AsymViT models to the asymmetric softmax attention ViT. ", "page_idx": 26}, {"type": "text", "text": "As we can see from Table 14, both variants only improve slightly over the benchmark on most of the corrupted datasets. Such a result confirms our intuition that the ADMM algorithm does not extend easily to multiple corrupted matrices as it only solves an objective function involving a single low-rank data matrix and its sparse corruption matrix. ", "page_idx": 26}, {"type": "text", "text": "F Further Discussion on Related Works ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "[15] provides a new perspective by emphasizing the asymmetry of the softmax kernel and recovers the self-attention mechanism from an asymmetric Kernel Singular Value Decomposition (KSVD) using the duality of the optimization problem. Separately, our kernel PCA perspective derives softmax attention and addresses the asymmetry of attention through a projection of the query vectors in feature space. While there are similarities between KSVD and kernel PCA, in the sense of finding low rank approximations and low dimensional representations of the data, the primal objective functions are different and we do not need to consider the dual form. Another related work views transformers from the perspective of Support Vector Machines [76]. Though, kernel PCA can be formulated in a similar fashion as a least squares SVM problem as explained in [74], our work focuses on the forward pass of attention and show that it can recover a kernel PCA solution. In contrast, [74] examines the backward pass and optimization geometry of an attention layer towards a hard margin SVM solution that separates optimal tokens from non-optimal ones, under certain assumptions of the loss function, initial conditions, and certain SVM constraints. Furthermore, using our framework, we are able to predict the exact explicit form of the value matrix in self-attention, demonstrating that this matrix captures the eigenvectors of the Gram matrix of the key vectors in a feature space. To the best of our knowledge, our work is the first to show this insight. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "Hamburger in [25] models the global context discovery as the low-rank recovery of the input tensor and solves it via matrix decomposition. Both Hamburger and our Attention with Robust Principal Components (RPC-Attention) try to recover clean signal subspaces via computing a lowrank approximation of a given matrix. The key differences between our RPC-Attention and Hamburger are: (1) Our RPC-Attention finds a low-rank approximation of the key matrix while Hamburger finds a low-rank approximation of the input matrix, and (2) Our RPC-Attention models the corruption by a sparse matrix while Hamburger does not enforce this condition. The entries of this sparse corruption can have an arbitrarily large magnitude and help model grossly corrupted observations in which only a portion of the observation vector is contaminated by gross error. Numerous critical applications exist where the data being examined can be naturally represented as a combination of a low-rank matrix and a sparse contribution, such as video surveillance, face recognition, and collaborative filtering [11]. ", "page_idx": 27}, {"type": "text", "text": "[89] derives each component in a Graph Neural Network (GNN) from the unfolded iterations of robust descent algorithms applied to minimizing a principled graph regularized energy function. In particular, propagation layers and nonlinear activations implement proximal gradient updates, and graph attention results from iterative reweighted least squares (IRLS). While this is an interesting approach, it has not been extended to explaining the architecture of transformers, including selfattention, yet. In contrast, our kernel principal component analysis (kernel PCA) allows us to derive self-attention in transformers, showing that the attention outputs are projections of the query vectors onto the principal components axes of the key matrix in a feature space. ", "page_idx": 27}, {"type": "text", "text": "[2] and [6] implement each layer as an optimization and fixed-point solver, respectively. In particular, an OptNet layer in [2] solves a quadratic program, and a Deep Equilibrium layer in [6] computes the fixed point of a nonlinear transformation. Different from these layers, our RPC-Attention solves a Principal Component Pursuit - a convex program. Also, both OptNet layer in [2] and Deep Equilibrium layer in [6] do not shed light on the derivation and formulation of self-attention, which our kernel PCA framework does. ", "page_idx": 27}, {"type": "text", "text": "G Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Our research improves both clean data processing and robust performance, especially in areas with significant social relevance. Specifically, we demonstrate enhanced results in image segmentation, benefiting self-driving cars, and language modeling, enhancing AI chatbot assistants. We show notable improvements in resisting adversarial attacks, aiming to protect crucial AI systems from malicious actors. Additionally, we achieve competitive performance in language modeling with contaminated data, which is often encountered in real-world situations. Despite the potential for AI misuse, our research presents substantial advancements in fundamental architectures and theory, which we hope will inspire further socially beneficial developments. ", "page_idx": 27}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: The claims made in the abstract and introduction are clearly stated in the Contribution in the Introduction. These claims accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 28}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Justification: The limitations are discussed in the Conclusion ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 28}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: All theoretical results in the paper are given together with the full set of assumptions and complete/correct proofs (See Section 2.1 in our manuscript). ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 29}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 29}, {"type": "text", "text": "Justification: We provide the experiment details in the Experiment Details Section in the Appendix of our manuscript. We also provide the source code so that the results in the paper can be easily reproduced. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 29}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We provide the source code so that the results in the paper can be easily reproduced. We verify our proposed methods using public benchmarks (See the Experimental Results Section in our manuscript) ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/ guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 30}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We specify all the training and test details necessary to understand the results in the Experiment Details Section in the Appendix of our manuscript. ", "page_idx": 30}, {"type": "text", "text": "Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 30}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 30}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 30}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 30}, {"type": "text", "text": "Justification: We report error bars suitably and correctly defined of the experiments. Guidelines: ", "page_idx": 30}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 30}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 31}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We provide sufficient information on the computer resources for all experiments in our Experimental Results Section. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 31}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: The research conducted in the paper conforms, in every respect, with the NeurIPS Code of Ethics. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: ", "page_idx": 31}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 31}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 31}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 31}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 31}, {"type": "text", "text": "Justification: We discuss broader impacts in Appendix G. ", "page_idx": 31}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 31}, {"type": "text", "text": "\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 32}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 32}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 32}, {"type": "text", "text": "Justification: The paper poses no such risks. Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 32}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 32}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 32}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 32}, {"type": "text", "text": "Justification: We cite the githubs we use and the baselines we compare with in our manuscript. ", "page_idx": 32}, {"type": "text", "text": "Guidelines: ", "page_idx": 32}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 32}, {"type": "text", "text": "", "page_idx": 33}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 33}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing or research with human subjects. Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 33}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 33}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 33}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 33}, {"type": "text", "text": "Justification: The paper does not involve research with human subjects. ", "page_idx": 33}, {"type": "text", "text": "Guidelines: ", "page_idx": 33}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 33}, {"type": "text", "text": "", "page_idx": 34}]