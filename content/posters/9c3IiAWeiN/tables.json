[{"figure_path": "9c3IiAWeiN/tables/tables_6_1.jpg", "caption": "Table 1: Computational results on convex QPs.", "description": "This table presents the computational results of various optimization algorithms on two sets of convex quadratic programs (QPs). The first set, \"Convex QPs (RHS)\", involves perturbing only the right-hand sides of the equality constraints, while the second set, \"Convex QPs (ALL)\", perturbs all model parameters.  The table compares the performance of OSQP, IPOPT, and several learning-to-optimize (L2O) approaches, including NN, DC3, DeepLDE, PDL, LOOP-LC, and H-Proj, against the proposed IPM-LSTM method. For each algorithm, it reports the objective value, constraint violations (maximum and mean for inequalities and equalities), solution time, number of iterations, and the percentage gain in iterations and solution time compared to the default IPOPT solver when using the algorithm's solution as a warm start for IPOPT. This allows for a comprehensive comparison of the effectiveness and efficiency of different optimization methods in solving convex QPs under varying perturbation scenarios.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_8_1.jpg", "caption": "Table 2: Computational results on convex QCQPs.", "description": "This table presents the computational results of various algorithms on convex QCQPs.  It compares the performance of IPM-LSTM against traditional optimizers (IPOPT) and other learning-based optimization approaches (NN, DC3, DeepLDE, PDL, LOOP-LC, H-Proj).  The table shows objective function values, constraint violations (maximum and mean for inequalities and equalities), and solution times.  Separate results are given for two experimental settings: Convex QCQPs (RHS), where only the right-hand sides of equality constraints are perturbed, and Convex QCQPs (ALL), where all model parameters are perturbed. For IPM-LSTM, it also includes the results obtained after using its output as a warm start for IPOPT.  The \"Gain\" column shows the percentage improvement in iterations and time achieved using IPM-LSTM compared to the default IPOPT solver. ", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_8_2.jpg", "caption": "Table 3: Computational results on non-convex QPs.", "description": "This table presents the computational results for non-convex quadratic programs (QPs).  It compares the performance of IPOPT (a state-of-the-art interior point method) alone against IPM-LSTM followed by IPOPT (warm-start). The table shows the objective function value (Obj.), the number of iterations (Ite.), and the solution time (Time (s)) for each solver.  The \"Max Vio.\" column indicates the maximum constraint violation observed for IPM-LSTM. The \"Total Time (s)\" column represents the total time taken by the IPM-LSTM and IPOPT (warm-start) pipeline.  Finally, the \"Gain (Ite./ Time)\" column shows the percentage improvement in the number of iterations and solution time achieved by using IPM-LSTM to warm-start IPOPT, compared to using IPOPT alone.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_14_1.jpg", "caption": "Table 1: Computational results on convex QPs.", "description": "This table presents the computational results for various algorithms on convex quadratic programming problems.  It compares the performance of IPM-LSTM against baseline algorithms (OSQP, IPOPT, NN, DC3, DeepLDE, PDL, LOOP-LC, H-Proj) across two sets of convex QPs ('Convex QPs (RHS)' and 'Convex QPs (ALL)'). The results include the objective function value, maximum and mean constraint violations, solution time, and number of iterations.  The table also shows the gain achieved by using IPM-LSTM's approximate solution to warm-start the IPOPT solver, highlighting improvements in both iterations and solution time.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_15_1.jpg", "caption": "Table 1: Computational results on convex QPs.", "description": "This table presents the computational results of various optimization algorithms on two sets of convex Quadratic Programs (QPs). The first set, \"Convex QPs (RHS)\", involves perturbing only the right-hand sides of equality constraints, while the second set, \"Convex QPs (ALL)\", perturbs all model parameters.  The table compares the performance of OSQP, IPOPT, NN, DC3, DeepLDE, PDL, LOOP-LC, H-Proj, and IPM-LSTM in terms of objective function value, constraint violations, solution time, and the number of iterations.  It also shows the improvements achieved when using the approximate solutions from IPM-LSTM to warm-start IPOPT.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_15_2.jpg", "caption": "Table 6: Perturbation rules.", "description": "This table describes the perturbation rules applied to the parameters of the non-convex quadratic programming problems used in the experiments.  For each problem instance (listed in the first column), the table shows whether each parameter type (Qo, po, pineq, qineq, peq, qeq, xL, xU) underwent perturbation using either the 'p' (multiply by a random value between 0.8 and 1.2 and round if original is an integer), 'r' (round to the nearest integer), or 'c' (no perturbation) methods. This indicates how the input data was modified to create the problem instances for the evaluation of IPM-LSTM and other algorithms.", "section": "D.2 Non-convex QPs"}, {"figure_path": "9c3IiAWeiN/tables/tables_16_1.jpg", "caption": "Table 1: Computational results on convex QPs.", "description": "This table presents the computational results of various methods (OSQP, IPOPT, NN, DC3, DeepLDE, PDL, LOOP-LC, H-Proj, and IPM-LSTM) for solving convex quadratic programs (QPs).  The results are divided into two groups: Convex QPs (RHS), where only the right-hand sides of the equality constraints are perturbed, and Convex QPs (ALL), where all model parameters are perturbed.  For each method, the table shows the objective function value, maximum and mean constraint violations (inequality and equality), and the solution time and number of iterations.  It also shows the speedup achieved by warm-starting IPOPT with solutions generated by each method. The results highlight the performance improvements achieved by IPM-LSTM, particularly when used to warm-start IPOPT.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_16_2.jpg", "caption": "Table 1: Computational results on convex QPs.", "description": "This table presents a comparison of computational results for solving convex quadratic programming problems (QPs) using various methods. The methods compared include IPM-LSTM (the proposed method), OSQP, IPOPT, NN, DC3, DeepLDE, PDL, LOOP-LC, and H-Proj.  The table shows the objective function value achieved by each method, maximum and mean constraint violations (inequality and equality constraints), the computation time, and the number of iterations.  The results are further categorized by problem type (RHS and ALL) and show the improvements achieved using IPM-LSTM, including warm starts with IPOPT, in terms of solution time and the number of iterations.", "section": "4.2 Computational Results"}, {"figure_path": "9c3IiAWeiN/tables/tables_17_1.jpg", "caption": "Table 9: Computational results on convex QPs (RHS) under different LSTM time steps.", "description": "This table presents the computational results of the IPM-LSTM algorithm on convex quadratic programs with different numbers of LSTM time steps (T).  It compares the objective function values, constraint violations (maximum and mean for both inequality and equality constraints), solution times, and the number of iterations for both the end-to-end IPM-LSTM and when using IPM-LSTM to warm-start IPOPT. The \"Gain\" column shows the percentage improvement in iterations and time achieved by using the warm-start approach compared to using IPOPT alone.", "section": "D.5.1 The Number of LSTM Time Steps"}, {"figure_path": "9c3IiAWeiN/tables/tables_18_1.jpg", "caption": "Table 10: The detailed values of Figure 3(a).", "description": "This table provides the numerical data corresponding to the plot in Figure 3(a) of the paper.  It shows the values of ||Jkyk + Fk|| and \u03b7[(zk)Txk]/n at each IPM iteration.  These values are important for assessing the accuracy and convergence of the IPM-LSTM algorithm, specifically relating to Assumption 1, which bounds the error of the approximate solution to the linear system at each iteration.", "section": "D.5.2 Linear System Solutions"}, {"figure_path": "9c3IiAWeiN/tables/tables_19_1.jpg", "caption": "Table 11: The condition numbers of simple non-convex programs in IPM iteration process.", "description": "This table presents the condition numbers (\u03ba(Jk)) of the Jacobian matrices (Jk) involved in solving linear systems within the IPM algorithm for different non-convex program instances across several IPM iterations (1st, 10th, 20th, 50th, 100th).  The values in parentheses represent the condition numbers after applying a preconditioning technique. The table highlights how the condition numbers evolve during the iterative process and demonstrates the effect of preconditioning in maintaining reasonable magnitudes of these numbers, even in later iterations.", "section": "D.5.3 Condition Numbers"}]