[{"type": "text", "text": "DiffPO: A causal diffusion model for learning distributions of potential outcomes ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Yuchen Ma, Valentyn Melnychuk, Jonas Schweisthal & Stefan Feuerriegel LMU Munich Munich Center for Machine Learning yuchen.ma@lmu.de ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Predicting potential outcomes of interventions from observational data is crucial for decision-making in medicine, but the task is challenging due to the fundamental problem of causal inference. Existing methods are largely limited to point estimates of potential outcomes with no uncertain quantification; thus, the full information about the distributions of potential outcomes is typically ignored. In this paper, we propose a novel causal diffusion model called DiffPO, which is carefully designed for reliable inferences in medicine by learning the distribution of potential outcomes. In our DiffPO, we leverage a tailored conditional denoising diffusion model to learn complex distributions, where we address the selection bias through a novel orthogonal diffusion loss. Another strength of our DiffPO method is that it is highly flexible (e.g., it can also be used to estimate different causal quantities such as CATE). Across a wide range of experiments, we show that our method achieves state-of-the-art performance. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Predicting potential outcomes (POs) for patients from observational data is crucial for decisionmaking in medicine [16]. For example, in cancer care, one is interested in individualized predictions of survival under different treatment plans, which can then help medical practitioners choose a treatment plan that promises the largest chance of survival [48]. ", "page_idx": 0}, {"type": "text", "text": "Predicting POs of interventions from observational data is challenging due to the fundamental problem of causal inference, i.e., the fact that one cannot obverse all POs for each individual [27]. Further, in observational data, treatments are generally not assigned completely randomly, and, as a result, the distributions of covariates in the treatment and control groups differ [54]. If this covariate shift is not taken into account, the distributions of POs given the covariates would be learned sub-optimally [13, 11]. ", "page_idx": 0}, {"type": "text", "text": "In the causal inference literature, many existing methods are aimed at conditional average treatment effect (CATE) estimation where POs are used as auxiliary quantities (e.g.,[1, 2, 3, 6, 10, 12, 13, 25, 28, 30, 31, 32, 37, 45, 64, 66]). In principle, some CATE methods could be used for predicting POs but these are not tailored for POs and thus tend to underperform at predicting POs. The underlying reason is that the estimator with the best performance in estimating CATE might not do best at predicting POs in finite samples [11, 13]. Additionally, many state-of-the-art CATE estimators leverage an inductive bias [13, 31], i.e., they assume that POs should share similar structures. As a result, they assume that the CATE follows a much simpler function than the POs, so that it is easier to learn the CATE than each PO separately. Moreover, most of these methods only focus on point estimates instead of learning the distributions of POs. The latter is more difficult but very crucial for reliable decision-making in medical applications. ", "page_idx": 0}, {"type": "table", "img_path": "merJ77Jipt/tmp/5fa2ff8cc1281027777c5ebae47a664985898fe8bf95ab7b702e6604a00d0c2a.jpg", "table_caption": ["Table 1: Overview of key methods for CATE estimation (and predicting POs). $U\\boldsymbol{Q}$ refers to whether the methods allow for uncertainty quantification of POs. Bias addressing refers to whether the methods address the selection bias. Orthogonal refers to whether it is robustness (i.e., Neymanorthogonality wrt. nuisance functions). POs are the target refers to whether the methods are originally designed for the task of predicting POs. "], "table_footnote": ["(\u2717) in the column UQ refers to that methods are not originally designed for uncertainty quantification of POs, but can be adapted for this purpose. "], "page_idx": 1}, {"type": "text", "text": "In this paper, we propose a causal diffusion model called DiffPO for predicting POs. Specifically, we leverage a tailored conditional diffusion model to learn complex distributions of POs. We further propose a novel orthogonal diffusion loss to adjust for the covariate shift problem in finite samples. Our orthogonal diffusion loss ensures Neyman-orthogonality, which offers favorable theoretical properties. In particular, it makes our method more robust to misspecification. Further, our DiffPO is carefully designed for reliable inferences in medicine and thus allows for uncertainty quantification We thereby follow recent calls in medicine to move beyond point estimates and offer distributional knowledge [23, 35], which can inform how likely a certain outcome is and what a probable range of POs is. ", "page_idx": 1}, {"type": "text", "text": "Our method is highly flexible. It can learn distributions of POs for uncertainty quantification and give point estimates of POs. It can also handle different causal quantities, such as the CATE. This is unlike many state-of-the-art methods from CATE estimation which are limited to point estimates [12, 13, 31, 32, 37, 45]. Hence, for different settings, custom methods have to be designed, while our causal diffusion model offers a flexible and reliable approach. ", "page_idx": 1}, {"type": "text", "text": "Overall, our main contributions are the following: (1) We propose a novel causal diffusion model for learning the distributions of POs, which can give both point estimation but also allows for uncertainty quantification. (2) We propose a novel orthogonal diffusion loss that ensures Neyman-orthogonality. (3) We conduct a wide range of experiments in different settings to demonstrate the flexibility and effectiveness of our DiffPO.1 ", "page_idx": 1}, {"type": "text", "text": "2 Related Work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Our work aims to learn the distributions of POs for patients. The task is related to CATE estimation in that the PO framework conceptualizes the CATE as the expected difference between the POs of a patient with and without treatment. Hence, we include also methods for CATE estimation in our literature review below. While these could, in principle, be used for predicting POs, we emphasize that CATE estimation and predicting POs will have a different finite-sample performance. ", "page_idx": 1}, {"type": "text", "text": "2.1 Predicting POs and CATE estimation ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "There have been many works designed for CATE estimation (e.g.,[1, 2, 3, 6, 10, 12, 13, 25, 28, 30, 31, 32, 37, 45, 64, 66]). Existing CATE methods fall into two categories: model-agnostic and model-specific estimators. We only give a concise overview in this section (see Table 1). A detailed literature review is in Appendix A.3. ", "page_idx": 1}, {"type": "text", "text": "Model-agnostic estimators. Model-agnostic learning strategies are also known as meta-learners (e.g.,[12, 13, 31, 32, 37, 45]). These can be split into (a) one-step (plug-in) learners that output regression functions from the observational data and then compute the CATE as the difference between the POs and (b) two-step learners that first estimate nuisance functions to build a pseudooutcome and then obtain CATE directly by regressing the input covariates on the pseudo-outcomes in the second step. (Note that pseudo-outcomes are not potential outcomes). ", "page_idx": 1}, {"type": "text", "text": "The problem with one-step plug-in learners (e.g., S-learner [37], T-learner [37]) is that they often do not address selection bias. The problem with two-step learners (e.g., DR-learner [31, 39], RA-learner [12]) is that these commonly leverage an inductive bias specific to CATE. Thus, two-step learners often have benefits for CATE estimation, but they make restrictive assumptions that hurt the finitesample performance in predicting POs. Hence, in finite samples, such an inductive bias in CATE estimation can even lead to bias in PO prediction. ", "page_idx": 2}, {"type": "text", "text": "Model-specific estimators. Many model-specific estimators provide instantiations the general modelagnostic methods: Here, standard machine learning models are adapted to CATE estimation / POs prediction (e.g.,[10, 30, 54, 61, 64, 66]). Recently, neural networks have been used for model-specific learners [30, 54, 64, 66]. Yet, model-specific estimators based on neural networks are designed for CATE estimation but are not directly aimed at POs. ", "page_idx": 2}, {"type": "text", "text": "Uncertainty quantification. Most state-of-the-art estimators fail to offer uncertainty quantification of POs (see Table 1). In particular, these methods typically only offer point estimates, yet without distributional information and thus do not allow for uncertainty quantification. Yet, distributional information is crucial for reliable decision-making in medicine and presents the focus of our method. ", "page_idx": 2}, {"type": "text", "text": "Implications for benchmarking. Most of the existing works are designed for CATE estimation, but not for learning the distributions of POs. For benchmarking PO prediction, many methods targeting the CATE do not include an estimation of $P O s$ , and, thus, they are not applicable for our task. We show this in the column POs are the target in Table 1. Instead, we can only compare with those methods that are applicable to our task: that is, where the model can directly output POs predictions [37, 54, 64]. ", "page_idx": 2}, {"type": "text", "text": "2.2 Diffusion models for causal inference ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Diffusion models were introduced for learning from complex distribution for a given dataset from which one can then sample high-quality data points (e.g., images) [26, 55, 57]. Diffusion models have achieved state-of-the-art performance, outperforming other generative models on various tasks in the computer vision field (e.g.,[14, 56, 59]). We give a brief technical overview of diffusion models in Sec. 3. ", "page_idx": 2}, {"type": "text", "text": "Diffusion models were previously used for different causal inference tasks but in a different setting from ours, for example, generating the counterfactual of a given image [36, 51], answering causal queries [8], or causal discovery [52]. We emphasize that the aforementioned tasks are different from ours. For example, the task in [36, 51] is similar to minimizing the changes that one needs to make to an image in order for the classifier to categorize the image into a different class. The task of answering causal queries [8, 33, 53] builds upon structural causal models (SCMs), while we are using the PO framework [50]. The assumptions for fitting SCMs are usually much stronger than the latter. In causal discovery [52], the output is the causal graph, while our output is a causal quantity. Hence, these works were all developed for different tasks (and not designed for learning the distributions of POs). Because of this, the works are not applicable as baselines. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminaries on diffusion models ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Diffusion models [26, 55, 57] are likelihood-based generative models that use (1) forward and (2) reverse Markov processes. The (1) forward process \u2018disturbs\u2019 the data distribution $q\\left(x_{0}\\right)$ into a tractable prior $\\bar{\\mathcal{N}}(\\bar{\\mathbf{0}},\\mathbf{I})$ . For this, it gradually adds noise to an initial sample $x_{0}\\sim q\\left(x_{0}\\right)$ across $T$ steps with variance schedules $\\{\\beta_{1},\\dots,\\beta_{T}\\}$ . The forward process can be written as $q\\left(x_{1:T}\\mid x_{0}\\right)=$ $\\textstyle\\prod_{t=1}^{T}q\\left(x_{t}\\;|\\;x_{t-1}\\right)$ with Gaussian distribution $q\\left(x_{t}\\mid x_{t-1}\\right):=\\mathcal{N}\\left(x_{t};\\sqrt{1-\\beta_{t}}x_{t-1},\\beta_{t}\\mathbf{I}\\right)$ . It admits a closed form of $q\\left(x_{t}\\mid x_{0}\\right)$ that is also a Gaussian distribution $\\mathcal{N}\\left(\\sqrt{\\bar{\\alpha}_{t}}x_{0},\\left(1-\\bar{\\alpha}_{t}\\right)\\mathbf{I}\\right)$ , where $\\bar{\\alpha}_{t}=$ $\\textstyle\\prod_{i=1}^{t}\\left(1-\\beta_{i}\\right)$ . ", "page_idx": 2}, {"type": "text", "text": "The (2) reverse process $\\begin{array}{r}{p\\left(x_{0:T}\\right)\\;=\\;\\prod_{t=1}^{T}p\\left(x_{t-1}\\mid x_{t}\\right)}\\end{array}$ gradually denoises the latent variable $x_{T}\\,\\sim\\,\\mathcal{N}({\\bf0,I})$ and further allows for generating new data samples from $q\\left(x_{0}\\right)$ . The distributions $p\\left(x_{t-1}\\mid x_{t}\\right)$ are usually unknown and approximated by a neural network with parameters $\\theta$ . Thus, a parameterized Markov chain $\\left\\{p_{\\theta}\\left(x_{t-1}\\stackrel{}{|}x_{t}\\right)\\right\\}_{t=1}^{T}$ is trained in the reverse process. It can be parameterized as $p_{\\theta}\\left(x_{t-1}\\mid x_{t}\\right):=\\mathcal{N}\\left(x_{t-1};\\mu_{\\theta}\\left(x_{t},\\dot{t}\\right),\\dot{\\Sigma}_{\\theta}\\left(x_{t},t\\right)\\right)$ . [26] suggested using diagonal $\\overline{{\\Sigma}}_{\\theta}\\left(x_{t},t\\right)$ with a constant $\\sigma_{t}$ and computing $\\mu_{\\theta}\\left(x_{t},t\\right)$ as a function of $x_{t}$ and $\\epsilon_{\\theta}\\left(x_{t},t\\right)$ . This yields $\\begin{array}{r}{\\mu_{\\theta}\\left(x_{t},t\\right)=\\frac{1}{\\sqrt{\\alpha_{t}}}\\left(x_{t}-\\frac{\\beta_{t}}{\\sqrt{1-\\bar{\\alpha}_{t}}}\\epsilon_{\\theta}\\left(x_{t},t\\right)\\right)}\\end{array}$ t, w fhoer rteh $\\begin{array}{r}{\\alpha_{t}:=1-\\beta_{t},\\bar{\\alpha}_{t}:=\\prod_{i\\leq t}\\alpha_{i}}\\end{array}$ and where $\\epsilon_{\\theta}\\left(x_{t},t\\right)$ $\\epsilon$ $x_{t}$ ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Later, we develop a novel causal diffusion model for predicting POs. We further explain why the standard loss from above fails in our task because it does not account for the underlying causal structure. As a remedy, we develop an orthogonal diffusion loss that is tailored to learn complex distributions of POs. ", "page_idx": 3}, {"type": "text", "text": "4 Problem Formulation ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Setup: We consider an observational dataset $\\mathcal{D}$ with i.i.d. patient data. The dataset consists of: an outcome of interest $Y\\,\\in\\,\\mathcal{Y}\\,\\subseteq\\,\\mathbb{R}$ , $d_{X}$ -dimensional covariates (also called confounders) $X\\in\\mathcal{X}\\subseteq\\mathbb{R}^{d_{X}}$ , and a treatment $A\\in\\{0,1\\}$ . For example, in critical care, the patient covariates $X$ are different risk factors (e.g., age, gender, prior diseases), the treatment is whether a ventilator is applied, and the outcome is the patient survival. For notation, let $\\pi(x)\\,=\\,p(A\\,=\\,1\\;\\vert\\;X\\,=\\,x)$ denote the propensity score, which gives the probability of a patient receiving the treatment. Let $p(y\\mid x,a)\\,{\\stackrel{.}{=}}\\,{\\overline{{p(Y\\,=\\,y\\mid X\\,=\\,x,{\\bar{A}}\\,=\\,a)}}}$ be the probability density function of the conditional distribution $p(Y\\mid X,A)$ . ", "page_idx": 3}, {"type": "text", "text": "Potential outcomes: We build upon the standard setting of Neyman-Rubin potential outcomes framework [50]. Hence, let $Y(a)$ denote the potential outcome after intervening on the treatment by setting it to $a$ . We have two potential outcomes for each individual: $Y(1)$ if treatment is administered (i.e., $A=1$ ), and $Y(0)$ if not treated (i.e., $A=0$ ). However, due to the fundamental problem of causal inference [27], only one of the POs is observed. Hence, $Y=A Y(1)+\\left(1-A\\right)\\bar{Y}(0)$ . ", "page_idx": 3}, {"type": "text", "text": "Identifiability: To ensure that POs are identifiable, we follow previous literature (e.g.,[12, 31, 64]) and make the following standard assumptions: ", "page_idx": 3}, {"type": "text", "text": "Assumption 1. (1) Consistency: If an individual is assigned treatment a, we observe the associated potential outcome $Y=Y\\left(a\\right)$ . (2) Unconfoundedness: there are no unobserved confounders, so that ${\\overline{{Y(0),Y(1)\\perp\\,A\\mid X}}}$ . (3) Overlap: treatment assignment is non-deterministic, i.e., $0\\,<\\,\\pi(x)\\,<$ $1,\\forall x\\in\\mathcal{X}\\;i f p(x)>0$ . ", "page_idx": 3}, {"type": "text", "text": "Under Assumption 1, the distributions of POs can be identified from observational data via $p(Y(a)\\mid$ $X)=p(Y\\mid{\\bar{X}},A=a)$ . ", "page_idx": 3}, {"type": "text", "text": "Objective: Our main interest lies in predicting POs in medical settings. Formally, $\\mathbb{E}[Y(a)\\mid X]$ are the expected POs corresponding to a treatment assignment (intervention) $a$ for an individual with covariates $X$ . Predicting POs is crucial for decision support in medicine [16]. For example, in critical care, doctors aim to predict the survival of each patient under different treatments (e.g., mechanical ventilation), which can then guide their decision-making. ", "page_idx": 3}, {"type": "text", "text": "However, decision-making in medicine needs to be reliable. Because of this, doctors are not only interested in the point estimate but need to quantify the uncertainty in the POs [23, 35]. For example, uncertainty quantification is needed in medical practice to decide whether to apply either a treatment that has a small but certain benefti or a treatment with a large benefti but potentially a large variability in the outcomes and thus large uncertainty of whether the treatment is actually beneficial for a specific patient. Hence, we estimate the distribution of the POs after assigning treatment $a$ to an individual, i.e., $p(Y(a)~\\vert~X)$ . Learning this distribution allows us to sample from it and obtain predictive intervals for uncertainty quantification. ", "page_idx": 3}, {"type": "text", "text": "5 DiffPO for predicting potential outcomes ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Overview: In the following, we introduce our DiffPO: a diffusion-based model for predicting POs with 3 key components (Fig. 1): $\\circled{1}$ a forward diffusion process, $_2$ a reverse diffusion process, and $\\circled{3}$ a novel orthogonal diffusion loss. Finally, we introduce our training and sample procedure. ", "page_idx": 3}, {"type": "text", "text": "5.1 Forward and reverse diffusion process ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Our DiffPO builds upon diffusion models [26, 55, 57]. We distinguish the distributions learned in the forward process and the reverse process via $q$ and $p$ , respectively, to make the notation straightforward in this section. ", "page_idx": 4}, {"type": "text", "text": "$\\circled{1}$ Forward process: Given a data point $(y,x,a)$ sampled from the observational data distribution $p(Y,X,A)$ , in the forward diffusion process, we gradually add Gaussian noise to the initial $y$ (denoted as $y_{0}$ ) across $T$ time steps. This thus produces a sequence of noisy samples $y_{1},\\dots,y_{T}$ in the same sample space as $y_{0}$ . The forward process follows a Markov chain ", "page_idx": 4}, {"type": "equation", "text": "$$\nq\\left(y_{1:T}\\mid y_{0}\\right):=\\prod_{t=1}^{T}q\\left(y_{t}\\mid y_{t-1}\\right),\\quad q\\left(y_{t}\\mid y_{t-1}\\right):=\\mathcal{N}\\left(\\left.y_{t};\\sqrt{1-\\beta_{t}}y_{t-1},\\beta_{t}\\mathbf{I}\\right),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\beta_{t}$ is a variance schedule: $\\{\\beta_{t}\\in(0,1)\\}_{t=1}^{T}$ is a small positive constant that represents a noise level and, thus, essentially controls the step sizes. By using the reparameterization trick [34], sampling $y_{t}$ at an arbitrary timestep $t$ has a closed form ", "page_idx": 4}, {"type": "equation", "text": "$$\nq\\left(y_{t}\\mid y_{0}\\right)=\\mathcal{N}\\left(y_{t};\\sqrt{\\bar{\\alpha}_{t}}y_{0},\\left(1-\\bar{\\alpha}_{t}\\right)\\mathbf{I}\\right),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\alpha_{t}:=1-\\beta_{t}$ and $\\begin{array}{r}{\\bar{\\alpha}_{t}:=\\prod_{s=1}^{t}\\alpha_{s}}\\end{array}$ . Thus, $y_{t}$ can be expressed as ", "page_idx": 4}, {"type": "equation", "text": "$$\ny_{t}\\left(y_{0},\\epsilon\\right)=\\sqrt{\\bar{\\alpha}_{t}}y_{0}+\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon,\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\epsilon\\in\\mathbb{R}^{d_{Y}}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ . As a result, the data sample $y_{0}$ gradually \u2018looses\u2019 its distinguishable features for later steps $t$ . Eventually, when $T\\,\\rightarrow\\,\\infty$ , $y_{T}$ is equivalent to an isotropic Gaussian distribution. ", "page_idx": 4}, {"type": "text", "text": "$\\pmb{2}$ Reverse process: We aim to learn the true distributions of POs, which can be identified as the conditional distribution in Sec. 4. Using the notation above, it can be rewritten as $q\\left(y_{0}\\mid x,a\\right)=$ $\\textstyle\\int q\\left(y_{0:T}\\mid x,a\\right)\\mathrm{d}y_{1:T}$ . As $q\\left(y_{t-1}\\mid y_{t},x,a\\right)$ is intractable, we need to learn a model distribution $p_{\\theta}$ parameterized by $\\theta$ to approximate the data distribution. ", "page_idx": 4}, {"type": "text", "text": "The reverse process starts at a known prior distribution with density $p\\left(y_{T}\\right)=\\mathcal{N}\\left(y_{T};\\mathbf{0},\\mathbf{I}\\right)$ and then proceeds backward to obtain the data distribution at step $t\\,=\\,0$ . Formally, the reverse diffusion process is also a Markov chain, and the density of its joint distribution $p_{\\boldsymbol{\\theta}}\\left(y_{0:T}\\mid x,a\\right)$ can be written as ", "page_idx": 4}, {"type": "equation", "text": "$$\np_{\\theta}\\left(y_{0:T}\\mid x,a\\right):=p\\left(y_{T}\\right)\\prod_{t=1}^{T}p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right),\\quad y_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "We employ a conditional diffusion model with the reverse process in Eq. (4). The conditional density $p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right)$ is also Gaussian, and we parameterize it as ", "page_idx": 4}, {"type": "equation", "text": "$$\np_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right):=\\mathcal{N}\\left(y_{t-1};\\mu_{\\theta}\\left(y_{t},t\\mid x,a\\right),\\sigma_{t}^{2}\\mathbf{I}\\right).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The reverse process gradually denoises $y_{T}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})$ through the learned Gaussian transitions. Once we have computed the latter, we approximate the original data distribution and can even sample from it. ", "page_idx": 4}, {"type": "text", "text": "Variational inference: Directly computing and maximizing the likelihood $p_{\\theta}(y_{0}\\mid x,a)$ is difficult because it involves intractable integration. As a remedy, we frame the learning objective for the above diffusion processes through variational inference. Thus, the parameters $\\theta$ can then be optimized by maximizing the evidence lower bound (ELBO) via ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\log p_{\\theta}\\left(y_{0}\\mid x,a\\right)\\geq\\mathbb{E}_{y_{1:T}\\sim q\\left(Y_{1:T}\\mid y_{0}\\right)}\\left[\\log\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}\\right].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The right side of Eq. (6) can be rewritten as (see Appendix B for the derivation) ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underbrace{\\mathbb{E}_{y_{1}\\sim q\\left(Y_{1}\\mid y_{0}\\right)}\\left[\\log p_{\\theta}\\left(y_{0}\\mid y_{1},x,a\\right)\\right]}_{\\mathrm{reconstruction}\\,\\mathrm{term}}-\\underbrace{D_{\\mathrm{KL}}\\left(q\\left(y_{T}\\mid y_{0}\\right)\\|p\\left(y_{T}\\right)\\right)}_{\\mathrm{prior\\,matching\\,term}}}\\\\ &{\\qquad\\qquad\\qquad-\\underbrace{\\displaystyle\\sum_{t=2}^{T}\\underbrace{\\mathbb{E}_{y_{t}\\sim q\\left(Y_{t}\\mid y_{0}\\right)}\\left[D_{\\mathrm{KL}}\\left(q\\left(y_{t-1}\\mid y_{t},y_{0}\\right)\\;\\|\\;\\,p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right)\\right)\\right]}_{\\mathrm{denoising\\,matching\\,term}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "table", "img_path": "merJ77Jipt/tmp/4964b207bb526f075d40b80ee3974ff58e2a08fe2d7fa8280c5cb10051a664a0.jpg", "table_caption": [], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "In the denoising matching term, we try to minimize the KL-divergence between two distributions, one is tractable, ground truth denoising transition step $q\\left(y_{t-1}\\mid y_{t},\\Bar{y_{0}}\\right)$ , and other is denoising transition step $p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right)$ . ", "page_idx": 5}, {"type": "text", "text": "Conditional denoising function. In practice, directly optimizing the learning objective in Eq. (7) is inefficient. Recently, [26] has shown a way to turn the optimization of the ELBO into a simpler problem for unconditional diffusion models. We thus follow a similar way to obtain a simpler problem for our learning objective, but for our conditional diffusion models. ", "page_idx": 5}, {"type": "text", "text": "We employ a trainable conditional denoising function $f_{\\theta}:(\\mathcal{Y}\\times\\mathbb{R}\\mid\\mathcal{X},\\mathcal{A})\\to\\mathcal{Y}$ . The conditional denoising function is a function approximation, which we use to predict the \u2018ground truth\u2019 noise component $\\epsilon$ for the noisy data sample $y_{t}$ conditioned on $x$ and $a$ . We consider the following parameterization that computes $\\mu_{\\theta}\\left(y_{t},t\\mid x,a\\right)$ as a function of $y_{t},x,a$ and $f_{\\theta}$ . This gives ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mu_{\\theta}\\left(y_{t},t\\mid x,a\\right)=\\frac{1}{\\sqrt{\\alpha_{t}}}\\left(y_{t}-\\frac{\\beta_{t}}{\\sqrt{1-\\bar{\\alpha}_{t}}}f_{\\theta}\\left(y_{t},t\\mid x,a\\right)\\right).\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The simplified training objective for $t\\sim\\mathrm{Unif}\\{1,\\ldots,T\\}$ is then ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A);\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left[\\left\\|\\epsilon-f_{\\theta}\\left(\\sqrt{\\bar{\\alpha}_{t}}y_{0}+\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon,t\\mid x,a\\right)\\right\\|^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We provide the full derivation of Eq. (8) and Eq. (9) in Appendix C. ", "page_idx": 5}, {"type": "text", "text": "5.2 Orthogonal diffusion loss for addressing selection bias ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "Why we need to address selection bias through our orthogonal diffusion loss: In observational data, treatments are not randomized but are administered according to some (unknown) behavioral policy. This can result in a selection bias, especially in medical practice. For example, patients with a more severe health state will also receive a more aggressive treatment. As a result, when treatment $A$ is selected based on the covariates $X$ , the propensity score $\\pi(X)$ is not constant, implying that the distributions of covariates in treatment and control groups differ. Formally, we have a distribution shift in the covariates, i.e., $p(X\\mid A=0)\\neq p(X\\mid A=1)$ . If not adjusted for, this distribution shift may result in a selection bias and thus an inflated variance in the estimates of POs (and thus the causal effects), especially in low-sample settings [12, 29, 54]. To address this, we thus introduce a novel orthogonal diffusion in the following. ", "page_idx": 5}, {"type": "text", "text": "$\\circled{3}$ Orthogonal diffusion loss. Our proposed orthogonal diffusion loss is inspired by orthogonal learning theory [18, 60]. Orthogonal learning theory provides a general toolbox for inference with semi-parametric models to provide quasi-oracle rates for statistical learning with a nuisance component. Informally, orthogonal losses are first-order insensitive to misspecification of the nuisance functions, which introduces many favorable properties such as double robustness [63]. Below, we construct an orthogonal diffusion loss for our method. ", "page_idx": 5}, {"type": "text", "text": "We start by noting that $\\pi(x)$ is not constant and is unknown in observational datasets. Because of that, one cannot simply use the propensity scores to reweight the data. Instead, we need a trainable approach to reweight the data and thus adjust for the distribution shift from above. To this end, the propensity score $\\pi(x)$ is a nuisance function in our method, which we estimate through a trainable function $g_{\\phi}$ parameterized by $\\phi$ . Let us denote the estimated propensity score by $\\hat{\\pi}(x)=g_{\\phi}(x)$ . We then assign weights $w_{\\hat{\\pi}}(x,a)$ to each sample via some function $w_{\\hat{\\pi}}\\,\\vdots\\,(\\mathcal{X}\\times\\{\\mathrm{\\dot{0},1\\dot{\\}}\\})\\to\\mathbb{R}_{+}$ . More specifically, we define the function $w_{\\hat{\\pi}}:(\\bar{\\mathcal{X}}\\times\\{0,1\\})\\to\\mathbb{R}_{+}$ as ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\nw_{\\hat{\\pi}}(x,a)=\\frac{a}{\\hat{\\pi}(x)}+\\frac{1-a}{1-\\hat{\\pi}(x)}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Then, our orthogonal diffusion loss is given by ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}(\\theta,\\hat{\\pi})=\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A);\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left[w_{\\hat{\\pi}}(x,a)\\left\\lVert\\epsilon-f_{\\theta}\\left(\\sqrt{\\bar{\\alpha}_{t}}y_{0}+\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon,t\\mid x,a\\right)\\right\\rVert^{2}\\right].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "The loss in Eq. (9) fits the conditional distributions $p(Y\\mid X,A)$ based on the data samples from the joint observational distribution, i.e., $(y_{0},x,a)\\,\\sim\\,p(Y,X,A)$ . Due to the selection bias, this implies that $p(Y\\mid X,A=1)$ is learned better for the treated population and $p(Y\\mid X,A=0)$ for the untreated population [60]. Yet, our target is to learn the potential outcome distributions $p(Y(a)\\mid X)={\\bar{p(Y\\mid X,A=a)}}$ for both $a\\,=\\,0$ and $a=1$ equally well in all the populations. This would be equivalent to minimizing the target loss from Eq. (9) if the samples are from the joint distributions of the POs, i.e., $(y_{0},x)\\sim p(Y(a),X)$ . However, we do not have samples from the distributions of POs, thus we need the target loss in Eq. (11) to be estimated via the propensity score $\\pi(x)$ to learn the distributions of POs. Hence, the following remark holds. ", "page_idx": 6}, {"type": "text", "text": "Remark 1. The orthogonal diffusion loss in Eq. (11) evaluated with the ground truth nuisance functions matches the following target loss: ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\mathcal{L}(\\theta,\\pi)=\\sum_{a\\in\\{0,1\\}}\\mathbb{E}_{(y_{0},x)\\sim p(Y(a),X);\\epsilon\\sim N(\\mathbf{0},\\mathbf{I})}\\left[\\left\\|\\epsilon-f_{\\theta}\\left(\\sqrt{\\bar{\\alpha}_{t}}y_{0}+\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon,t\\mid x,a\\right)\\right\\|^{2}\\right].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Proof. The orthogonal diffusion loss in Eq. (11) is an inverse propensity-weighted estimator of the target loss in Eq. (12). \u53e3 ", "page_idx": 6}, {"type": "text", "text": "Theorem 1 (Neyman-orthogonality). The orthogonal diffusion loss in Eq. (11) is Neyman-orthogonal wrt. its nuisance functions. ", "page_idx": 6}, {"type": "text", "text": "As a result of Neyman-orthogonality, our orthogonal diffusion loss has a clear practical advantage: it offers robustness against errors in nuisance function estimation. Specifically, it is first-order insensitive wrt. errors in the propensity score $\\pi(x)$ and, thus, is a more accurate objective for our PO predictive model. ", "page_idx": 6}, {"type": "text", "text": "5.3 Training and sampling ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Training. Our training algorithm proceeds along the following steps. We first train the function $g_{\\phi}$ on the dataset to estimate the propensity score. After this, the parameters of $g_{\\phi}$ are frozen. We then compute each sample weight for the orthogonal diffusion loss through the weight function $w_{\\hat{\\pi}}$ . We finally sample from the observational data distribution and run the forward and reverse process as described in Sec.5.1. The corresponding training loss is given in Eq. (11). ", "page_idx": 6}, {"type": "text", "text": "Sampling. Once our diffusion model has learned the distribution $p_{\\theta}\\left(Y_{t-1}\\mid y_{t},x,a\\right)$ , we can generate samples from it. The sampling process starts by sampling $y_{T}$ from the prior distribution and then denoising it. To obtain $y_{t-1}$ from $p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right)$ , this requires the mean $\\tilde{\\mu}$ from the previous step, which can be computed by Eq. (8). Thus, $y_{t-1}$ can be computed via $\\tilde{\\mu}+\\sigma_{t}z$ , where $\\bar{z}\\sim\\mathcal{N}(\\mathbf{0},\\bar{\\mathbf{I}})$ . This process continues for $t=T,\\dots$ until we arrive at $y_{0}$ . ", "page_idx": 6}, {"type": "text", "text": "Implementation. Our model architecture of denoising function is based on [59] and uses U-Net [49] as the underlying backbone. We use 4 residual blocks where each is built with MLP layers. The diffusion embedding dimension is 128. The number of diffusion sampling steps is 100. Training is conducted with a batch size of 256 and a learning rate of 0.0005. We follow [42] in the way how we learn propensity scores and thus use fully connected neural networks with softmax activation. During training, we can only observe one of the two POs due to the fundamental problem of causal inference [27] (as explained in Sec. 4). To guide the model, we need to identify which PO should the loss be computed on. Hence, we introduce causal masks as input to our model: an observational mask $\\mathrm{m}_{o}$ , a targeted mask $\\mathrm{m}_{t}$ , and a conditional mask $\\mathrm{m}_{c}$ . We only compute the loss at the place where the value of the targeted mask is 1. Further details about our implementation are in Appendix E.1. ", "page_idx": 6}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "6 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "6.1 Learning distributions of POs ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Performance metrics. We use the Wasserstein distance to evaluate the model performance of learning the distributions of POs. The $k$ -Wasserstein distance (for any $k\\geq1$ ) between two distributions $\\nu_{1}$ and $\\nu_{2}$ is ", "page_idx": 7}, {"type": "equation", "text": "$$\nW^{k}\\left(\\nu_{1},\\nu_{2}\\right)=\\left(\\int_{0}^{1}\\left|\\mathbb{F}_{1}^{-1}(l)-\\mathbb{F}_{2}^{-1}(l)\\right|^{k}\\;\\mathrm{d}l\\right)^{1/k},\n$$", "text_format": "latex", "page_idx": 7}, {"type": "text", "text": "where $\\mathbb{F}_{1}^{-1}(l)$ and $\\mathbb{F}_{2}^{-1}(l)$ are the quantile functions (inverse cumulative distribution functions) of $\\nu_{1}$ and $\\nu_{2}$ for quantile $l$ , respectively. Specifically, we compute the empirical Wasserstein distance based on two sets of finite samples, i.e., $\\begin{array}{r}{W^{k}(\\nu_{1},\\nu_{2})=\\left(\\frac{1}{n}\\sum_{i=1}^{n}\\|X_{(i)}-Y_{(i)}\\|^{k}\\right)^{1/k}}\\end{array}$ , where $X_{1},\\ldots,X_{n}$ are the samples from $\\nu_{1}$ and $Y_{1},\\ldots,Y_{n}$ are the samples from $\\nu_{2}$ . In our experiments, we report the empirical Wasserstein distance for $k=1$ . Lower values of $\\boldsymbol{W}^{k}$ are preferred. ", "page_idx": 7}, {"type": "text", "text": "Dataset. Due to the fundamental problem of causal inference, the counterfactual outcomes are never observed in real-world data. We thus follow prior literature (e.g.,[22, 38]) and benchmark our model using synthetic datasets. Further details about the synthetic datasets are in the Appendix F. ", "page_idx": 7}, {"type": "text", "text": "Baselines. Many methods are targeting CATE estimation and, therefore, are not suitable for PO prediction. We thus compare against those methods that are applicable to our task (i.e., the model can directly output POs; see Table 1): (1) S-learner [37]: is a model-agnostic learner that ftis a single regression model by concatenat", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Table 2: Results showing in- & out-of-sample empirical Wasserstein distance (i.e., $\\hat{W}_{\\mathrm{in}}^{1}$ and $\\hat{W}_{\\mathrm{out}}^{1})$ for two potential outcomes (i.e., $a=0$ and $a=1$ ) on the synthetic dataset. Reported: mean $\\pm$ standard deviation over ten-fold train-test splits. ", "page_idx": 7}, {"type": "table", "img_path": "merJ77Jipt/tmp/f90ea029b5df6fdd8c266da5123248ce7e40ac2afb342a29ccc417f6861e0f32.jpg", "table_caption": [], "table_footnote": ["Lower $\\equiv$ better (best in bold). \u2217modified method to make it comparable. "], "page_idx": 7}, {"type": "text", "text": "ing the covariate and the treatment as input; (2) T-learner [37]: is a model-agnostic learner that fits two separate regression models, one for treated and for controls; (3) TARNet [54]: is based on representation learning to share information about the outcome across treated and controls with regularization; (4) CFR [54]: is based on representation learning used in variants of balancing with TARNet; (5) GANITE [64]: uses a generative adversarial network to generate POs and then uses another generative adversarial network to generate CATE. We adapt GANITE to our task by removing the second stage, so that we directly sample POs from the learned distributions in the first stage. However, methods (1) to (4) above are only able to give point estimates of POs. Therefore, we follow [24] to equip them with Monte Carlo (MC) dropout to make these methods comparable. Implementation details are in Appendix E.2. ", "page_idx": 7}, {"type": "text", "text": "Results. The results are in Table 2. We find that our method gives the lowest empirical Wasserstein distance out of all methods, which is desirable. Hence, the experiments show that our method outperforms the baselines by a clear margin. ", "page_idx": 7}, {"type": "text", "text": "6.2 Learning predictive intervals of POs ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Performance metrics. To evaluate the ability of our DiffPO to allow for uncertainty estimation, we follow [24] and examine the predictive intervals (PIs) of the POs generated by different methods. In medical practice, the treatment effectiveness is often reported based on the $95\\%$ and $99\\%$ PIs. We thus compute the individual equal-tailed $(1-\\alpha)$ PIs with $\\alpha\\in[0.01,0.05]$ . We then calculate the faithfulness of the estimated PIs to evaluate the empirical coverage by computing the frequency with which the PIs contain the outcomes in the test data. ", "page_idx": 7}, {"type": "text", "text": "Results: We evaluate the empirical coverage across different quantiles $(1-\\alpha)$ . The results are in Table 3. It shows that our DiffPO is generally faithful, while this is not the case for the baselines. This can be expected: MC dropout relies upon mixtures of Dirac distributions in parameter space, which leads to approximations of the true posterior which are questionable and not faithful [17, 24]. ", "page_idx": 8}, {"type": "text", "text": "Table 3: Results for uncertainty estimation of the two potential outcomes (i.e., $a\\,=\\,0$ and $a\\,=\\,1$ ). Reported: mean $\\pm$ standard deviation over ten-fold train-test splits. ", "page_idx": 8}, {"type": "table", "img_path": "merJ77Jipt/tmp/1c9eb93870a5c2b80a24139b80c61c501a480984c7fd3c176d309fb385e018a5.jpg", "table_caption": [], "table_footnote": ["Higher $\\equiv$ better (best in bold). \u2217modified for comparability. "], "page_idx": 8}, {"type": "text", "text": "6.3 Point estimates of POs ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Performance metrics for POs: To evaluate point estimates of POs, we compute the difference between the predicted PO $\\hat{y}_{i}$ and the ground truth PO $y_{i}$ via the root mean squared error $\\begin{array}{r}{\\mathrm{RMSE}=\\sqrt{\\frac{1}{N}\\sum_{i=1}^{N}\\left(\\hat{y}_{i}-y_{i}\\right)^{2}}}\\end{array}$ . Baselines. We compare against those methods that are applicable to this task (i.e., the model can directly output POs; see Table 1). ", "page_idx": 8}, {"type": "text", "text": "Results. The results are in Table 4. We find that our DiffPO gives the best point estimates of POs. ", "page_idx": 8}, {"type": "text", "text": "Table 4: Results for point estimation of POs benchmarked using the in- & out-of-sample RMSE for the two potential outcomes (i.e., $a=0$ and $a=1$ ) on the synthetic dataset. Reported: mean $\\pm$ standard deviation over ten-fold train-test splits. ", "page_idx": 8}, {"type": "table", "img_path": "merJ77Jipt/tmp/d85b9afa13324c9b35beaf2036f3b06555b38bc843e0ea55305e1e53289d0859.jpg", "table_caption": [], "table_footnote": ["Lower $\\equiv$ better (best in bold). "], "page_idx": 8}, {"type": "text", "text": "6.4 Flexibility to handle other causal quantities ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "A strength of our method is that it is flexible and can not only be used for POs but also for other causal quantities. For example, even though we are aiming at learning the distributions of POs, our method is also capable of estimating the CATE $\\tau(x)\\,=\\,{\\mathrm{\\bar{E}}}[Y(1)-{\\bar{Y}}(0)\\mid X\\,=\\,x]$ , which is the expected difference of POs for an individual with covariate values $X=x$ . For this, one can use our method to first predict $\\mu_{a}(x)=\\mathbb{E}[Y\\mid X,A=a]$ for $a\\in\\{0,1\\}$ and then simply leverage that $\\tau(x)=\\mu_{1}(x)-\\mu_{0}\\dot{(x)}$ . ", "page_idx": 8}, {"type": "text", "text": "Datasets. We estimate the CATE across ACIC 2016 & ACIC 2018, which are widely used dataset collections for CATE benchmarking [66, 12, 42]. The ACIC2016 [46] contains 77 different benchmark datasets, and ACIC2018 [41] contains 24. These datasets include a wide range of data-generating mechanisms (see Appendix F for more details). We use five random train/test splits $(80\\%\\,/\\,20\\%)$ for each dataset, tune hyperparameters on the first split, and evaluate the average out-sample on every split. ", "page_idx": 8}, {"type": "text", "text": "Table 5: Results for benchmarking CATE estimation on ACIC 2016 and ACIC 2018 for both in- & out-of-sample, respectively. Reported: $\\%$ of runs with the best performance. ", "page_idx": 8}, {"type": "table", "img_path": "merJ77Jipt/tmp/e3bbefc302d330ecdb62f49d78093d4f8de9957df617c3f4d32e4e901fd2d7ed.jpg", "table_caption": [], "table_footnote": ["Higher $\\equiv$ better (best in bold). "], "page_idx": 8}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\epsilon_{\\mathrm{PEHE}}=\\sqrt{\\frac{1}{N}\\sum_{i=1}^{N}\\left(\\hat{\\tau}\\left(x_{i}\\right)-\\tau\\left(x_{i}\\right)\\right)^{2}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "Baselines. We consider a broad array of state-of-the-art methods for treatment effect estimation from the literature. Considering the rich methods in the literature, we thus compare with the most popular CATE estimation approaches in this field [10, 30, 37, 54, 61, 64, 66], as listed in the Table 1. Specifically, we use the following baselines: (1) to (5) from Sec. 6.1. (6) DR-learner [39, 31]: generates pseudo-outcomes based on the doubly-robust AIPW estimator; (7) RA-learner [12]: uses a regression-adjusted pseudo-outcome in the second stage; (8) TEDVAE [66]: uses a variational autoencoder to differentiate confounding factor and learns CATE. We instantiate the meta-learners (i.e., S-, T-, DR, and RA-learner) with neural networks, similar to our DiffPO. To ensure a fair comparison across all methods and all experiments, we tune hyperparameters across all methods separately for each experimental dataset. We discuss implementation details of baselines in the Appendix E. ", "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "Results. The results for CATE estimation are in Table 5. We find that our method achieves a good performance similar to existing methods, even though our method is not tailored for CATE estimation. Across a wide range of experiments in different settings, we even observe that our method often achieves state-of-the-art performance. ", "page_idx": 9}, {"type": "text", "text": "6.5 Visualizing the learned distributions of POs ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "A clear advantage of our DiffPO is that we not only return point estimates but also the distribution of POs. This is crucial in medical practice [23, 35] in order to understand the expected probability of whether a treatment is beneficial and thus to better assess the reliability of the estimates. We show the learned distributions for a real-world dataset from medicine. ", "page_idx": 9}, {"type": "text", "text": "IHDP dataset. This is a semi-synthetic dataset from the Infant Health and Development Program (IHDP) [25], which is based on the extracted features and treatment assignments from a real-world clinical trial. The dataset comprises 747 patients, with 25 features for each patient. Further details for IHDP are in Appendix F.3. ", "page_idx": 9}, {"type": "text", "text": "Insights. Our DiffPO is capable of capturing the full information about the distributions of POs. Current state-of-the-art methods usually estimate quantities expressed via the mean of POs, as these methods focus purely on point estimation [31, 37, 54]. However, distributional knowledge of POs is important to account for uncertainty, because it informs how likely a certain outcome is and gives the probability that the PO lies in a desired range, especially in medicine. ", "page_idx": 9}, {"type": "image", "img_path": "merJ77Jipt/tmp/13d08bd690fb76c5bf43043d272f4d874065fd774557615b2ce2b3fef5d77085.jpg", "img_caption": ["Figure 2: Empirical distributions of the conditional POs. Left: $p(Y(0)\\mid x)$ . Right: $p(Y(1)\\mid x)$ . "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "Fig. 2 shows the empirical distributions of POs, i.e., $p(Y(0)\\mid X)$ and $p(Y(1)\\mid X)$ , given a certain patient profile $X=x$ . We can see the distributions of the two POs are different, which can provide extra information for medical decision-making. Here, the learned distributions of POs can help medical practitioners in choosing a treatment plan that promises not only a large benefit for the patients but also that the benefit is highly probable. ", "page_idx": 9}, {"type": "text", "text": "7 Discussion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Conclusion. Our method is carefully designed for predicting POs in medical practice. To this end, our method not only predicts point estimates but also computes the distributions of POs to allow for uncertainty quantification and thus for reliable decision-making. ", "page_idx": 9}, {"type": "text", "text": "Limitations. (1) As with other methods in causal inference, ours rests on mathematical assumptions, yet these are standard in the literature [12, 31, 64]. (2) The efficiency of the sampling process in our DiffPO \u2013 but also diffusion models more generally \u2013 could be improved further. There is already ongoing research, such as different solvers [15, 40, 65] and one-step sampling [58]. However, as we have shown above, our method can successfully scale to real-world datasets from medical practice. ", "page_idx": 9}, {"type": "text", "text": "Broader impact. We expect our method to have a significant impact in medicine where better decision support is needed to personalize treatment decisions to patient profiles [16]. Another strength of our method is that it is flexible. This is unlike many other methods in causal inference which are designed for highly restrictive settings. Hence, we expect our method to be a first step toward developing more generalizable approaches for a variety of causal inference settings. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "This paper is supported by the DAAD program \u201cKonrad Zuse Schools of Excellence in Artificial Intelligence\u201d, sponsored by the Federal Ministry of Education and Research. This work has been supported by the German Federal Ministry of Education and Research (Grant: 01IS24082). ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Ahmed M. Alaa and Mihaela van der Schaar. \u201cBayesian inference of individualized treatment effects using multi-task Gaussian processes\u201d. In: Advances in Neural Information Processing Systems. 2017. [2] Ahmed M. Alaa and Mihaela van der Schaar. \u201cBayesian nonparametric causal inference: Information rates and learning algorithms\u201d. In: IEEE Journal of Selected Topics in Signal Processing 12 (2018), pp. 1031\u20131046. [3] Ahmed M. Alaa and Mihaela van der Schaar. \u201cLimits of estimating heterogeneous treatment effects: Guidelines for practical algorithm design\u201d. In: International Conference on Machine Learning. 2018. [4] Serge Assaad et al. \u201cCounterfactual representation learning with balancing weights\u201d. In: International Conference on Artificial Intelligence and Statistics. 2021. [5] Onur Atan, William R. Zame, and Mihaela van der Schaar. \u201cCounterfactual policy optimization using domain-adversarial neural networks\u201d. In: ICML CausalML workshop. 2018. [6] Ioana Bica, James Jordon, and Mihaela van der Schaar. \u201cEstimating the effects of continuousvalued interventions using generative adversarial networks\u201d. In: Advances in Neural Information Processing Systems. 2020.   \n[7] Ioana Bica et al. \u201cEstimating counterfactual treatment outcomes over time through adversarially balanced representations\u201d. In: International Conference on Learning Representations. 2020.   \n[8] Patrick Chao, Patrick Bl\u00f6baum, and Shiva Prasad Kasiviswanathan. \u201cInterventional and counterfactual inference with diffusion models\u201d. In: arXiv preprint. 2023.   \n[9] Victor Chernozhukov et al. \u201cDouble/debiased/Neyman machine learning of treatment effects\u201d. In: American Economic Review 107.5 (2017), pp. 261\u2013265.   \n[10] Hugh A. Chipman, Edward I. George, and Robert E. McCulloch. \u201cBART: Bayesian additive regression trees\u201d. In: The Annals of Applied Statistics 4.1 (2010).   \n[11] Alicia Curth and Mihaela van der Schaar. \u201cIn search of insights, not magic bullets: Towards demystification of the model selection dilemma in heterogeneous treatment effect estimation\u201d. In: International Conference on Machine Learning. 2023.   \n[12] Alicia Curth and Mihaela van der Schaar. \u201cNonparametric estimation of heterogeneous treatment effects: From theory to learning algorithms\u201d. In: International Conference on Artificial Intelligence and Statistics. 2021.   \n[13] Alicia Curth and Mihaela van der Schaar. \u201cOn inductive biases for heterogeneous treatment effect estimation\u201d. In: Advances in Neural Information Processing Systems (2021).   \n[14] Prafulla Dhariwal and Alexander Nichol. \u201cDiffusion models beat gans on image synthesis\u201d. In: Advances in Neural Information Processing Systems. 2021.   \n[15] Tim Dockhorn, Arash Vahdat, and Karsten Kreis. \u201cGenie: Higher-order denoising diffusion solvers\u201d. In: Advances in Neural Information Processing Systems (2022).   \n[16] Stefan Feuerriegel et al. \u201cCausal machine learning for predicting treatment outcomes\u201d. In: Nature Medicine 30.4 (2024), pp. 958\u2013968.   \n[17] Loic Le Folgoc et al. \u201cIs MC dropout bayesian?\u201d In: arXiv preprint. 2021.   \n[18] Dylan J Foster and Vasilis Syrgkanis. \u201cOrthogonal statistical learning\u201d. In: The Annals of Statistics 51.3 (2023), pp. 879\u2013908.   \n[19] Anna C. Gilbert et al. \u201cTowards understanding the invertibility of convolutional neural networks\u201d. In: International Joint Conference on Artificial Intelligence. 2017.   \n[20] Negar Hassanpour and Russell Greiner. \u201cCounterfactual regression with importance sampling weights\u201d. In: International Joint Conference on Artificial Intelligence. 2019.   \n[21] Negar Hassanpour and Russell Greiner. \u201cLearning disentangled representations for counterfactual regression\u201d. In: International Conference on Learning Representations. 2019.   \n[22] Tobias Hatt and Stefan Feuerriegel. \u201cEstimating average treatment effects via orthogonal regularization\u201d. In: Proceedings of the 30th ACM International Conference on Information & Knowledge Management. 2021.   \n[23] James J. Heckman, Jeffrey Smith, and Nancy Clements. \u201cMaking the most out of programme evaluations and social experiments: Accounting for heterogeneity in programme impacts\u201d. In: The Review of Economic Studies 64.4 (1997), pp. 487\u2013535.   \n[24] Konstantin Hess et al. \u201cBayesian neural controlled differential equations for treatment effect estimation\u201d. In: International Conference on Learning Representations. 2023.   \n[25] Jennifer L. Hill. \u201cBayesian nonparametric modeling for causal inference\u201d. In: Journal of Computational and Graphical Statistics 20.1 (2011), pp. 217\u2013240.   \n[26] Jonathan Ho, Ajay Jain, and Pieter Abbeel. \u201cDenoising Diffusion Probabilistic Models\u201d. In: Advances in Neural Information Processing Systems. 2020.   \n[27] Paul W Holland. \u201cStatistics and causal inference\u201d. In: Journal of the American statistical Association (1986).   \n[28] Fredrik D. Johansson, Uri Shalit, and David Sontag. \u201cLearning representations for counterfactual inference\u201d. In: International Conference on Machine Learning. 2016.   \n[29] Fredrik D. Johansson et al. \u201cGeneralization bounds and representation learning for estimation of potential outcomes and causal effects\u201d. In: Journal of Machine Learning Research 23 (2022), pp. 7489\u20137538.   \n[30] Fredrik D. Johansson et al. \u201cLearning weighted representations for generalization across designs\u201d. In: arXiv preprint (2018).   \n[31] Edward H. Kennedy. \u201cTowards optimal doubly robust estimation of heterogeneous causal effects\u201d. In: Electronic Journal of Statistics 17.2 (2023), pp. 3008\u20133049.   \n[32] Edward H. Kennedy et al. \u201cMinimax rates for heterogeneous causal effect estimation\u201d. In: arXiv preprint (2022).   \n[33] Ilyes Khemakhem et al. \u201cCausal autoregressive flows\u201d. In: International Conference on Artificial Intelligence and Statistics. 2021.   \n[34] Diederik P Kingma and Max Welling. \u201cAuto-encoding variational Bayes\u201d. In: arXiv preprint. 2013.   \n[35] Thomas Kneib, Alexander Silbersdorff, and Benjamin S\u00e4fken. \u201cRage against the mean\u2013a review of distributional regression approaches\u201d. In: Econometrics and Statistics 26 (2023), pp. 99\u2013123.   \n[36] Aneesh Komanduri et al. \u201cCausal Diffusion Autoencoders: Toward counterfactual generation via diffusion probabilistic models\u201d. In: arXiv preprint. 2024.   \n[37] S\u00f6ren R. K\u00fcnzel et al. \u201cMetalearners for estimating heterogeneous treatment effects using machine learning\u201d. In: Proceedings of the National Academy of Sciences 116.10 (2019), pp. 4156\u20134165.   \n[38] Milan Kuzmanovic et al. \u201cCausal machine learning for cost-effective allocation of development aid\u201d. In: Proceedings of the 30th ACM SIGKDD Conference on Knowledge Discovery and Data Mining. 2024.   \n[39] Mark J. van der Laan. \u201cStatistical inference for variable importance\u201d. In: The International Journal of Biostatistics 2.1 (2006).   \n[40] Cheng Lu et al. \u201cDPM-Solver: A fast ODE solver for diffusion probabilistic model sampling in around 10 steps\u201d. In: Advances in Neural Information Processing Systems. 2022.   \n[41] M.F. MacDorman and J.O. Atkinson. \u201cInfant mortality statistics from the linked birth/infant death data set\u20131995 period data\u201d. In: Monthly Vital Statistics Report 46.6 Suppl 2 (1998), pp. 1\u201322.   \n[42] Divyat Mahajan et al. \u201cEmpirical Analysis of Model Selection for Heterogeneous Causal Effect Estimation\u201d. In: arXiv preprint (2022).   \n[43] Valentyn Melnychuk, Dennis Frauen, and Stefan Feuerriegel. \u201cBounds on representationinduced confounding bias for treatment effect estimation\u201d. In: International Conference on Learning Representations. 2024.   \n[44] Pawel Morzywolek, Johan Decruyenaere, and Stijn Vansteelandt. \u201cOn a general class of orthogonal learners for the estimation of heterogeneous treatment effects\u201d. In: arXiv preprint. 2023.   \n[45] Xinkun Nie and Stefan Wager. \u201cQuasi-oracle estimation of heterogeneous treatment effects\u201d. In: Biometrika 108 (2021), pp. 299\u2013319.   \n[46] Kenneth R. Niswander. \u201cThe collaborative perinatal study of the National Institute of Neurological Diseases and Stroke\u201d. In: The Woman and Their Pregnancies (1972).   \n[47] Kazusato Oko, Shunta Akiyama, and Taiji Suzuki. \u201cDiffusion models are minimax optimal distribution estimators\u201d. In: International Conference on Machine Learning. 2023.   \n[48] Lucia C Petito et al. \u201cEstimates of overall survival in patients with cancer receiving different treatment regimens: emulating hypothetical target trials in the Surveillance, Epidemiology, and End Results (SEER)\u2013Medicare Linked Database\u201d. In: JAMA Network Open (2020).   \n[49] Olaf Ronneberger, Philipp Fischer, and Thomas Brox. \u201cU-net: Convolutional networks for biomedical image segmentation\u201d. In: Medical image computing and computer-assisted intervention. 2015.   \n[50] Donald B Rubin. \u201cCausal inference using potential outcomes: Design, modeling, decisions\u201d. In: 100.469 (2005), pp. 322\u2013331.   \n[51] Pedro Sanchez and Sotirios A Tsaftaris. \u201cDiffusion causal models for counterfactual estimation\u201d. In: Causal Learning and Reasoning. 2022.   \n[52] Pedro Sanchez et al. \u201cDiffusion models for causal discovery via topological ordering\u201d. In: International Conference on Learning Representations. 2023.   \n[53] Pablo Sanchez-Martin, Miriam Rateike, and Isabel Valera. \u201cVaca: Design of variational graph autoencoders for interventional and counterfactual queries\u201d. In: arXiv preprint. 2021.   \n[54] Uri Shalit, Fredrik D. Johansson, and David Sontag. \u201cEstimating individual treatment effect: Generalization bounds and algorithms\u201d. In: International Conference on Machine Learning. 2017.   \n[55] Jascha Sohl-Dickstein et al. \u201cDeep unsupervised learning using nonequilibrium thermodynamics\u201d. In: International Conference on Machine Learning. 2015.   \n[56] Jiaming Song, Chenlin Meng, and Stefano Ermon. \u201cDenoising diffusion implicit models\u201d. In: arXiv preprint (2020).   \n[57] Yang Song and Stefano Ermon. \u201cGenerative modeling by estimating gradients of the data distribution\u201d. In: Advances in Neural Information Processing Systems. 2019.   \n[58] Yang Song et al. \u201cConsistency models\u201d. In: arXiv preprint (2023).   \n[59] Yusuke Tashiro et al. \u201cCSDI: Conditional score-based diffusion models for probabilistic time series imputation\u201d. In: Advances in Neural Information Processing Systems. 2021.   \n[60] Stijn Vansteelandt and Pawe\u0142 Morzywo\u0142ek. \u201cOrthogonal prediction of counterfactual outcomes\u201d. In: arXiv preprint. 2023.   \n[61] Stefan Wager and Susan Athey. \u201cEstimation and inference of heterogeneous treatment effects using random forests\u201d. In: Journal of the American Statistical Association 113.523 (2018), pp. 1228\u20131242.   \n[62] Anpeng Wu et al. \u201cLearning decomposed representations for treatment effect estimation\u201d. In: IEEE Transactions on Knowledge and Data Engineering 35.5 (2022), pp. 4989\u20135001.   \n[63] Andrew Ying. \u201cA geometric perspective on double robustness by semiparametric theory and information geometry\u201d. In: arXiv preprint (2024).   \n[64] Jinsung Yoon, James Jordon, and Mihaela van der Schaar. \u201cGANITE: Estimation of individualized treatment effects using generative adversarial nets\u201d. In: International Conference on Learning Representations. 2018.   \n[65] Qinsheng Zhang and Yongxin Chen. \u201cFast sampling of diffusion models with exponential integrator\u201d. In: arXiv preprint (2022).   \n[66] Weijia Zhang, Lin Liu, and Jiuyong Li. \u201cTreatment effect estimation with disentangled latent factors\u201d. In: AAAI. 2021.   \n[67] Yao Zhang, Alexis Bellot, and Mihaela van der Schaar. \u201cLearning overlapping representations for the estimation of individualized treatment effects\u201d. In: International Conference on Artificial Intelligence and Statistics. 2020. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Extended related work", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "A.1 Diffusion models for causal inference ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Diffusion models were originally introduced for learning a complex distribution for a given dataset from which we can then sample high-quality images [55, 57, 26]. Diffusion models have achieved state-of-the-art performance, outperforming other generative models on various tasks in the computer vision field (e.g.,[56, 14, 59]). Motivated by this, diffusion models were previously used for different causal inference tasks but in a different setting from ours [51, 52, 8]. ", "page_idx": 13}, {"type": "text", "text": "[51] proposed a model called Diff-SCM that uses diffusion models and anti-causal predictors to generate the counterfactual of a given image. It leverages a classifier guidance diffusion model. [8] proposed using a diffusion model called DCM for modeling structural causal models (SCMs). It focuses on approximating SCMs given observational data and underlying causal DAG. [8] focused on a similar task as well as [53, 36], with the aim to answer causal queries by employing variational autoencoder and normalizing flow, respectively. [36] focused on the same task as [51], aiming for generating high-quality counterfactual images and proposed a model called CausalDiffAE. [36] follows the idea of [8] to view the diffusion model as an encoder-decoder framework and employ so-called denoising diffusion implicit models (DDIM). Diffusion models have also been used in the causal discovery field. DiffAN [52] is an algorithm based on denoising diffusion training for causal discovery via topological ordering. In this work, we use diffusion models for predicting POs. ", "page_idx": 13}, {"type": "text", "text": "A.2 Neyman-orthogonality ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Neyman-orthogonality of a functional refers to the mean zero property of its directional derivatives along one-dimensional paths that change nuisance functions [18]. A loss function is called Neymanorthogonal when this property holds for all its directional derivatives along one-dimensional paths that change the (infinite-dimensional) parameter of interest. This allows for a debiased machine learning approach to construct estimators and inference procedures that are robust to small mistakes in nuisance functions [9]. Specific orthogonal learners for estimating CATE are given in the DR-learner [39, 31], R-learner [45], and i-learner [60]. ", "page_idx": 13}, {"type": "text", "text": "A.3 Conditional average treatment effect (CATE) ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Our work is about predicting potential outcomes (POs) for individuals; however, it is strongly related in practical applications to conditional average treatment effect (CATE) estimation. The PO framework conceptualizes the CATE estimation problem as estimating the expected difference between an individual\u2019s expected potential outcome with and without treatment. Below, we give a brief overview of the CATE literature. ", "page_idx": 13}, {"type": "text", "text": "The estimation of the CATE has received a lot of attention in the causal inference literature (e.g.,[10, 25, 28, 1, 54, 37, 2, 30, 3, 64, 61, 12, 66, 31, 45, 32, 13]). Among those CATE estimation methods, many have been proposed to estimate the effects of binary treatments (e.g.,[10, 25, 28, 1, 54, 37, 2, 30, 3, 64, 6, 12, 66, 31, 45, 32, 13]). Based on the categorization in [13], we roughly categorize them into three categories based on their most salient characteristics: (i) model-agnostic learning strategies for CATE estimation (also known as meta-learners), and (ii) model-specific ML-based CATE estimators (including representation learning-based and other neural network-based estimators). ", "page_idx": 13}, {"type": "text", "text": "A.3.1 Meta-learners ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "Now we consider popular approaches that involve using model-agnostic learning strategies, also known as meta-learners, which can be implemented using any ML method (e.g.,[37, 31, 45, 32, 13, 12]). The idea behind \u201cmeta-learner\u201d strategies was originally introduced in [37] and expanded in [45, 31, 12]. ", "page_idx": 13}, {"type": "text", "text": "Existing CATE meta-learners can be categorized into: (a) one-step (plug-in) learners (indirect metalearners) that output two regression functions from the observational data and then compute CATE as the difference in the POs (this is the strategy underlying the S- and T-learners); and (b) two-step learners (direct meta-learners/multi-stage direct estimators). These learners first compute nuisance functions to build a pseudo-outcome. In the second step, they obtain the CATE directly by regressing the input covariates on the pseudo-outcome. (Note that pseudo-outcomes are not potential outcomes). ", "page_idx": 13}, {"type": "text", "text": "In terms of (b), existing methods fall largely into three broad classes: regression adjustment (RA), propensity weighting (PW), or doubly robust (DR) strategies. ", "page_idx": 14}, {"type": "text", "text": "A.3.2 Model-specific ML-based CATE estimators ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Many methods proposed in the related work do not fall within the meta-learner class because they rely on the properties of a specific ML method. We roughly categorize them into two branches: one is neural network-based (NN-based) estimators and the other does not use neural networks, for example, some using causal Forest [61], Bayesian regression [25], or Gaussian processes [1]. ", "page_idx": 14}, {"type": "text", "text": "As for the NN-based estimators, some are representation learning-based estimators. Much work of this track focused on handling selection bias by learning shared and balanced feature representations for the two PO functions or incorporating weighting strategies. Examples are BNN [28], TARNet [54], and CFR [30]. [54] used representation learning to share information about the outcome across treated and controls, while regularizing representation distributional distance between the groups. [67, 30] recognized that such regularization may result in a violation of ignorability in the representation and proposed to learn representations in which context information is preserved but where treatment groups overlap. Later, many works proposed further extensions (e.g.,[29, 20, 4, 21, 62, 67, 5, 7]). However, a wrongly chosen dimensionality of the representation or a too large balancing weight can induce confounding bias [43], and, therefore, the representation learning-based methods fall outside the scope of this paper. ", "page_idx": 14}, {"type": "text", "text": "B Evidence lower bound of DiffPO ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Directly computing and maximizing the likelihood $p(\\boldsymbol{y}\\mid\\boldsymbol{x},a)$ is difficult because it involves integrating all latent variables, which is intractable for complex models. Thus, we derive the evidence lower bound (ELBO) similar to the bound of the variational autoencoder. Our original objective can be optimized by maximizing the ELBO, like its analog in the ELBO of a vanilla VAE [34], which is given by ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\log p(y\\mid x,a)=\\log\\int p\\left(y_{0:T}\\mid x,a\\right)d y_{1:T}}\\\\ &{\\qquad\\qquad\\qquad=\\log\\int\\frac{p\\left(y_{0:T}\\mid x,a\\right)q\\left(y_{1:T}\\mid y_{0}\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}d y_{1:T}}\\\\ &{\\qquad\\qquad\\quad=\\log\\mathbb{E}_{q(y_{1:T}\\mid y_{0})}\\left[\\frac{p\\left(y_{0:T}\\mid x,a\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}\\right]}\\\\ &{\\qquad\\qquad\\quad\\geq\\mathbb{E}_{q(y_{1:T}\\mid y_{0})}\\left[\\log\\frac{p\\left(y_{0:T}\\mid x,a\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "The ELBO in Eq. (14) can be rewritten as follows: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{-\\sum_{\\ell\\in\\mathcal{N}_{I}\\setminus\\{r\\}}\\Bigg[\\log\\frac{P_{\\ell}(\\cdot|\\nabla_{\\mathbf{r}}|\\cdot\\nabla_{\\mathbf{r}}|)}{\\Gamma_{\\ell}^{2}(\\mathbf{r})}\\Big|\\sum_{t=0}^{\\infty}\\big(\\frac{\\log\\big(P_{\\ell}(\\cdot|\\nabla_{\\mathbf{r}}|)\\cdot\\nabla_{\\mathbf{r}}\\big)}{\\Gamma_{\\ell}^{2}(\\mathbf{r})}\\big|\\Big)}\\Bigg]}\\\\ &{n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "C Simplified training objective for DiffPO ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "With the reverse process defined above, the learning objective in Eq. (7) is clearly differentiable with respect to $\\theta$ and is ready to be employed for training. However, in practice, directly optimizing this objective is inefficient. Recall that our aim is to match the approximate denoising transition step $p_{\\theta}\\left(y_{t-1}\\mid y_{t},x,a\\right)$ to ground truth denoising transition step $q\\left(y_{t-1}\\mid y_{t},y_{0}\\right)$ as closely as possible, which we can also model as a Gaussian. Thus, optimizing the KL divergence term reduces to minimizing the difference between the means of the two distributions: ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\arg\\operatorname*{min}\\ D_{K,L}\\left(q\\langle y_{t-1}\\mid y_{t},y_{0}\\rangle\\parallel p_{\\theta}\\langle y_{t-1}\\mid y_{t},x,a\\rangle\\right)}\\\\ &{=\\arg\\operatorname*{min}D_{K,L}\\left(N\\langle y_{t-1};\\mu_{t},\\Sigma_{q}(t)\\rangle\\parallel N\\langle y_{t-1};\\mu_{\\theta},\\Sigma_{q}(t)\\rangle\\right)}\\\\ &{=\\arg\\operatorname*{min}\\frac{1}{\\theta}\\left[\\log\\left(\\frac{|\\nabla q_{t}(t)|}{|\\nabla q_{t}(t)|}-d+\\mathrm{tr}\\left(\\Sigma_{q}(t)^{-1}\\Sigma_{q}(t)\\right)+\\left(\\mu_{\\theta}-\\mu_{q}\\right)^{T}\\Sigma_{q}(t)^{-1}\\left(\\mu_{\\theta}-\\mu_{q}\\right)\\right]\\right.}\\\\ &{\\left.-\\arg\\operatorname*{min}\\frac{1}{2}\\left[\\log1-d+d+\\left(\\mu_{\\theta}-\\mu_{q}\\right)^{T}\\Sigma_{q}(t)^{-1}\\left(\\mu_{\\theta}-\\mu_{q}\\right)\\right]}\\\\ &{=\\arg\\operatorname*{min}\\frac{1}{2}\\left[\\left(\\mu_{\\theta}-\\mu_{q}\\right)^{T}\\Sigma_{q}(t)^{-1}\\left(\\mu_{\\theta}-\\mu_{q}\\right)\\right]}\\\\ &{=\\arg\\operatorname*{min}\\frac{1}{2}\\left[\\left(\\mu_{\\theta}-\\mu_{q}\\right)^{T}\\left(\\sigma_{q}^{2}(t)\\right)^{-1}\\left(\\mu_{\\theta}-\\mu_{q}\\right)\\right]}\\\\ &{\\left.-\\arg\\operatorname*{min}\\frac{1}{2}\\left[\\left(\\mu_{\\theta}-\\mu_{q}\\right)^{T}\\left(\\left|\\mu_{\\theta}-\\mu_{q}\\right|\\right)^{-1}\\left(\\mu_{\\theta}-\\mu_{q}\\right)\\right]}\\\\ &{=\\arg\\operatorname*{min}\\frac{1}{2}\\sum_{q=2}^{T}\\left(\\left|\\mu_{q}-\\mu_{q}\\right|\\right)^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "By using the reparameterization trick, we have ", "page_idx": 17}, {"type": "equation", "text": "$$\ny_{0}=\\frac{y_{t}-\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon_{0}}{\\sqrt{\\bar{\\alpha}_{t}}}.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Plugging it into the previously derived true denoising transition mean $\\mu_{q}\\left(y_{t},y_{0}\\right)$ , we yield ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{u_{t}(\\mathbf{b}_{0},\\mathbf{b}_{0})=}&{\\frac{\\sqrt{\\alpha_{t}(1-\\delta_{t-1})}\\,\\mathbf{b}_{0}+\\sqrt{\\alpha_{t-1}(1-\\delta_{t})}\\,\\mathbf{b}_{0}}{1+\\delta_{t}}}\\\\ &{=\\frac{\\sqrt{\\alpha_{t}(1-\\delta_{t-1})}\\,\\mathbf{b}_{0}+\\sqrt{\\alpha_{t-1}(1-\\delta_{t})}\\,\\mathbf{b}_{0}-\\sqrt{\\alpha_{t-1}^{\\delta}\\,\\mathbf{b}_{0}^{\\delta}\\,\\mathbf{b}_{0}}}{1+\\delta_{t}}}\\\\ &{=\\frac{\\sqrt{\\alpha_{t}(1-\\delta_{t})}\\,\\mathbf{b}_{0}+\\left(1-\\alpha_{t}\\right)\\,\\mathbf{b}_{0}-\\sqrt{\\alpha_{t}(1-\\delta_{t})}}{1+\\delta_{t}}}\\\\ &{=\\frac{\\sqrt{\\alpha_{t}(1-\\delta_{t-1})}\\,\\mathbf{b}_{0}+\\left(1-\\alpha_{t}\\right)\\,\\mathbf{b}_{0}}{1-\\delta_{t}}-\\frac{\\left(1-\\alpha_{t}\\right)\\sqrt{1-\\delta_{t}}\\,\\mathbf{b}_{0}}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}}\\\\ &{=\\left(\\frac{\\sqrt{\\alpha_{t}(1-\\delta_{t-1})}}{1+\\delta_{t}}+\\frac{1}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}\\right)\\mathbf{b}_{t}-\\frac{\\left(1-\\alpha_{t}\\right)\\sqrt{1-\\delta_{t}}\\,\\mathbf{b}_{0}}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}}\\\\ &{=\\left(\\frac{\\left(1-\\delta_{t-1}\\right)}{1+\\delta_{t}}+\\frac{1}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}\\right)\\mathbf{b}_{t}-\\frac{1}{\\sqrt{1-\\delta_{t}}\\sqrt{\\alpha_{t}}}}\\\\ &{=\\frac{\\alpha_{t}-\\alpha_{t}}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}+\\frac{1}{\\alpha_{t}}-\\alpha_{t}}\\\\ &{=\\frac{1}{\\left(1-\\delta_{t}\\right)\\sqrt{\\alpha_{t}}}\\mathbf{b}_{t}-\\frac{1}{\\sqrt{1 \n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Therefore, we can set our approximate denoising transition mean $\\mu_{\\theta}\\left(y_{t},t\\mid x,a\\right)$ as ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\mu_{\\theta}\\left(y_{t},t\\mid x,a\\right)=\\frac{1}{\\sqrt{\\alpha_{t}}}y_{t}-\\frac{1-\\alpha_{t}}{\\sqrt{1-{\\bar{\\alpha}}_{t}}\\sqrt{\\alpha_{t}}}f_{\\theta}\\left(y_{t},t\\mid x,a\\right),\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "and the corresponding optimization problem becomes ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\quad\\underset{{\\mathrm{\\scriptsize~arg~min}}}{\\mathrm{\\argmin}}\\,D_{\\mathrm{\\scriptscriptstyle{EL}}}(q(y_{t-1}\\mid y_{t},y_{0})\\parallel p_{\\theta}(y_{t-1}\\mid y_{t},x,a))}\\\\ &{=}&{\\underset{{\\mathrm{\\scriptsize~argmin}}}{\\mathrm{\\argmin}}\\,D_{\\mathrm{\\scriptscriptstyle{EL}}}(N(y_{t-1};\\mu_{t},y_{0}),\\frac{1}{q(t)}(t))\\,\\mathrm{\\scriptsize~}\\|{\\cal N}(y_{t-1};\\mu_{t},\\Sigma_{q}(t)))}\\\\ &{=}&{\\underset{{\\mathrm{\\scriptsize~argmin}}}{\\mathrm{\\argmin}}\\frac{1}{2\\sigma_{q}^{2}(t)}\\left[\\left\\|\\frac{1}{\\sqrt{\\Omega}}y_{t}-\\frac{1-\\alpha_{t}}{\\sqrt{1-\\alpha_{t}}\\sqrt{\\alpha_{t}}}f_{\\theta}(y_{t},t\\mid x,a)-\\frac{1}{\\sqrt{\\alpha_{t}}}y_{t}+\\frac{1-\\alpha_{t}}{\\sqrt{1-\\alpha_{t}}\\sqrt{\\alpha_{t}}}\\epsilon\\right\\|_{2}^{2/}\\right]}\\\\ &{=}&{\\underset{{\\mathrm{\\scriptsize~argmin}}}{\\mathrm{\\argmin}}\\frac{1}{2\\sigma_{q}^{2}(t)}\\left[\\left\\|\\frac{1-\\alpha_{t}}{\\sqrt{1-\\alpha_{t}}\\sqrt{\\alpha_{t}}}\\epsilon-\\frac{1-\\alpha_{t}}{\\sqrt{1-\\alpha_{t}}\\sqrt{\\alpha_{t}}}f_{\\theta}(y_{t},t\\mid x,a)\\right\\|_{2}^{2}\\right]}\\\\ &{=}&{\\underset{{\\mathrm{\\scriptsize~argmin}}}{\\mathrm{\\argmin}}\\frac{1}{2\\sigma_{q}^{2}(t)}\\left[\\left\\|\\frac{1-\\alpha_{t}}{\\sqrt{1-\\alpha_{t}}\\sqrt{\\alpha_{t}}}(\\epsilon-f_{\\theta}(y_{t},t\\mid x,a))\\right\\|_{2}^{2}\\right]}\\\\ &{=}&{\\underset{{\\mathrm{\\scriptsize~argmin}}}{\\mathrm{\\argmin}}\\frac{1}{2\\sigma_{q}^{2}(t)}\\left[\\frac{(1-\\alpha_{t})^{2}}{(1-\\alpha_{t})\\alpha_{t}}\\left[\\|\\epsilon-f_{\\theta}(y_{t},\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "D Proofs ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Theorem 2 (Neyman-orthogonality). The orthogonal diffusion loss ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathcal{L}(\\theta,\\hat{\\pi})=\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A);\\epsilon\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I})}\\left[w_{\\hat{\\pi}}(x,a)\\left|\\left|\\epsilon-f_{\\theta}\\left(\\sqrt{\\bar{\\alpha}_{t}}y_{0}+\\sqrt{1-\\bar{\\alpha}_{t}}\\epsilon,t\\mid x,a\\right)\\right|\\right|^{2}\\right],\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "is Neyman-orthogonal wrt. its nuisance functions. ", "page_idx": 19}, {"type": "text", "text": "Proof. As it was shown in the Sec. 5.1, the minimization of the orthogonal diffusion loss is equivalent to the maximization of the following weighted ELBO wrt. to $\\theta$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\mathcal{E}(p_{\\theta},\\hat{\\pi})=\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A)}\\left[w_{\\hat{\\pi}}(x,a)\\,\\mathbb{E}_{y_{1:T}\\sim q(Y_{1:T}\\mid y_{0})}\\left[\\log\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}\\right]\\right].\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "We denote a maximizer of the weighted ELBO with the ground truth nuisance functions by $p_{\\theta^{*}}=$ $\\mathrm{argmax}_{p_{\\theta}}\\,\\mathcal{E}(p_{\\theta},\\pi)$ . Given a flexible enough diffusion model, $p_{\\theta^{*}}(y_{0}\\mid x,a)$ coincides with the ground truth posterior and, thus matches the ground truth conditional distribution, namely, $p(Y~|~$ $X,A)$ [47]. ", "page_idx": 19}, {"type": "text", "text": "To demonstrate Neyman-orthogonality, we need to show that a pathwise cross-derivative is equal to zero [18, 60, 44], i.e., ", "page_idx": 19}, {"type": "equation", "text": "$$\nD_{\\pi}D_{p_{\\theta^{*}}}{\\mathcal E}(p_{\\theta^{*}},\\pi)[p_{\\theta}-p_{\\theta^{*}},\\hat{\\pi}-\\pi]=0\\quad\\mathrm{for~every~}p_{\\theta}\\mathrm{~and~}\\hat{\\pi}.\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "We start by taking the pathwise derivative wrt. the optimal diffusion model $p_{\\theta^{*}}$ : ", "page_idx": 19}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\ \\ \\ \\ D_{p_{\\theta^{*}}}{\\mathcal{E}}(p_{\\theta^{*}},\\pi)[p_{\\theta}-p_{\\theta^{*}}]}\\\\ &{=\\!\\frac{\\,\\mathrm{d}}{\\mathrm{d}t}\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A)}\\left[w_{\\pi}(x,a)\\mathbb{E}_{y_{1:T}\\sim q(Y_{1:T}\\mid y_{0})}\\left[\\log\\frac{p_{\\theta^{*}}\\left(y_{0:T}\\mid x,a\\right)+t\\left(p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)-t\\right)}{q\\left(y_{1:T}\\mid y_{0}\\right)}\\right]\\right.}\\\\ &{\\ \\ \\ \\ \\ \\left.=\\!\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A)}\\left[w_{\\pi}(x,a)\\mathbb{E}_{y_{1:T}\\sim q(Y_{1:T}\\mid y_{0})}\\left[\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,a\\right)}{p\\theta^{*}\\left(y_{0:T}\\mid x,a\\right)+t\\left(p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,a\\right)\\right)}\\right]\\right.}\\\\ &{\\ \\ \\ \\ \\ \\left.=\\!\\mathbb{E}_{(y_{0},x,a)\\sim p(Y,X,A)}\\left[w_{\\pi}(x,a)\\mathbb{E}_{y_{1:T}\\sim q(Y_{1:T}\\mid y_{0})}\\left[\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,a\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,a\\right)}{p\\theta^{*}\\left(y_{0:T}\\mid x,a\\right)}\\right]\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 19}, {"type": "text", "text": "Then, we take a derivative wrt. the propensity score $\\pi$ : ", "page_idx": 20}, {"type": "equation", "text": "", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathop{=}\\!\\frac{\\pi\\,\\varphi\\circ\\!\\!}{\\mathrm{d}t}\\!\\!}&{\\to\\!\\frac{\\pi\\,\\varphi\\circ\\!\\!}{\\mathrm{s}}\\!\\!\\!\\!}&{n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n+\\;\\frac{p(A=0\\mid x)}{(1-\\pi(x))^{2}}\\operatorname{\\mathbb{E}}_{y_{0}\\sim p(Y\\mid x,0)}\\mathbb{E}_{y_{1:T}\\sim q(Y_{1:T}\\mid y_{0})}\\left[\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,0\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,0\\right)}{p_{\\theta^{*}}\\left(y_{0:T}\\mid x,0\\right)}\\right]\\right]\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n=\\mathbb{E}_{x\\sim p(X)}\\Bigg[-\\frac{1}{\\pi(x)}\\int\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,1\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,1\\right)}{p_{\\theta^{*}}\\left(y_{0:T}\\mid x,1\\right)}\\,p(y_{0}\\mid x,1)\\,q(y_{1:T}\\mid y_{0})\\,\\mathrm{d}y_{0}\\,\\mathrm{d}y_{1:T}\\Bigg]\\Bigg],\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n+\\ {\\frac{1}{1-\\pi(x)}}\\int{\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,0\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,0\\right)}{p_{\\theta^{*}}\\left(y_{0:T}\\mid x,0\\right)}}\\,p(y_{0}\\mid x,0)\\,q(y_{1:T}\\mid y_{0})\\,\\mathrm{d}y_{0}\\,\\mathrm{d}y_{1:T}\\Biggr]\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\lefteqn{\\stackrel{(*)}{=}\\mathbb{E}_{x\\sim p(X)}\\Bigg[-\\frac{1}{\\pi(x)}\\int\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,1\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,1\\right)}{p_{\\theta^{*}}\\left(y_{1:T}\\mid y_{0},x,1\\right)}\\,q(y_{1:T}\\mid y_{0})\\,\\mathrm{d}y_{0}\\,\\mathrm{d}y_{1:T}}\\quad}&{}\\\\ &{\\qquad\\qquad+\\,\\frac{1}{1-\\pi(x)}\\int\\frac{p_{\\theta}\\left(y_{0:T}\\mid x,0\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\mid x,0\\right)}{p_{\\theta^{*}}\\left(y_{1:T}\\mid y_{0},x,0\\right)}\\,q(y_{1:T}\\mid y_{0})\\,\\mathrm{d}y_{0}\\,\\mathrm{d}y_{1:T}\\Bigg]}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\overset{(**)}{=}\\mathbb{E}_{x\\sim p(X)}\\Bigg[-\\cfrac{1}{\\pi(x)}\\displaystyle\\int\\left(p_{\\theta}\\left(y_{0:T}\\ |\\ x,1\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\ |\\ x,1\\right)\\right)\\mathrm{d}y_{0}\\ \\mathrm{d}y_{1:T}}\\\\ &{\\qquad\\qquad\\qquad\\qquad+\\cfrac{1}{1-\\pi(x)}\\displaystyle\\int\\left(p_{\\theta}\\left(y_{0:T}\\ |\\ x,0\\right)-p_{\\theta^{*}}\\left(y_{0:T}\\ |\\ x,0\\right)\\right)\\mathrm{d}y_{0}\\ \\mathrm{d}y_{1:T}\\Bigg]}\\\\ &{=\\mathbb{E}_{x\\sim p(X)}\\Bigg[-\\cfrac{1}{\\pi(x)}(1-1)+\\cfrac{1}{1-\\pi(x)}\\big(1-1)\\Bigg]=0,}\\end{array}\n$$", "text_format": "latex", "page_idx": 20}, {"type": "text", "text": "where the equality $(*)$ holds due $p(y_{0}\\mid x,a)=p_{\\theta^{*}}(y_{0}\\mid x,a)$ ; and the equality $(**)$ holds due to that the forward process is independent of $x$ and $a$ , namely, $p_{\\theta^{*}}(y_{1:T}\\mid y_{0},x,a)=p_{\\theta^{*}}(y_{1:T}\\mid y_{0})=$ $q(y_{1:T}\\mid y_{0})$ . \u53e3 ", "page_idx": 20}, {"type": "text", "text": "E Implementation details ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "In the following, we summarize the implementation details of our DiffPO and baselines. ", "page_idx": 21}, {"type": "text", "text": "E.1 Implementation details of DiffPO ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We implemented our DiffPO in PyTorch. (Code is available at https://github.com/yccm/ DiffPO). Experiments were carried out on $1\\times$ NVIDIA A100-PCIE-40GB. We report the default settings of our model below but note that hyperparameters may require slight adjustments depending on the dataset. ", "page_idx": 21}, {"type": "text", "text": "Our model architecture of the denoising function $f_{\\theta}$ is based on the architecture of [59], and we use U-Net [49] as the basic backbone. We use 4 diffusion residual blocks, where each is built with MLP layers. The diffusion embedding dimension is 128. The $\\beta$ starts at 0.0001 and ends at 0.5, and the schedule is the \u201cquadratic\u201d version. The number of diffusion sampling steps is set to 100. The training batch size is set to 256 with a learning rate of 0.0005. The training epoch is set to 500. ", "page_idx": 21}, {"type": "text", "text": "During training, we can only observe one of the two POs due to the fundamental problem of causal inference [27] (as explained in Sec. 4). To guide the model, we need to identify which of two POs should be generated. Hence, we introduce causal masks as input to our model: an observational mask $\\mathrm{m_{o}}$ , a targeted mask $\\mathrm{m_{t}}$ , and a conditional mask $\\mathrm{m_{c}}$ . For the observational mask $\\mathrm{m_{o}}$ , it is 1 at the place where we have the observational data and 0 for the opposite case. Since we condition on $x$ and $a$ , the conditional mask $\\mathrm{m_{c}}$ is 1 for the element $x$ and $a$ , and 0 otherwise. For the target mask, the observed outcomes $y$ in the original dataset are 1, while all the other elements are 0. In this way, we can compute the loss only at the place where the value of the targeted mask is 1, i.e., where we have the ground truth outcomes. We follow [42] in the way how we learn propensity scores and use fully connected neural networks with softmax activation. Thus we add weight to each sample via a learned function when computing the orthogonal loss. ", "page_idx": 21}, {"type": "text", "text": "E.2 Implementation details of baselines ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We follow the implementation from https://github.com/AliciaCurth/CATENets/tree/main for most of the CATE estimators, including S-learner [37], T-learner [37], DR-learner [39, 31], RAlearner [12], TARNet [54]. For GANITE, we follow the implementation of https://github.com/ vanderschaarlab/mlforhealthlabpub/tree/main/alg/ganite. For TEDVAE, we follow the implementation of https://github.com/WeijiaZhang24/TEDVAE. ", "page_idx": 21}, {"type": "text", "text": "We performed hyperparameters tuning of the nuisance functions models for all the baselines based on five-fold cross-validation using the training subset. For each baseline, we performed a grid search with respect to different tuning criteria, evaluated on the validation subsets. We aimed for a fair comparison and thus kept the number of parameters, network structures, and grid size similar across models. For evaluating the uncertainty estimation, for both training and testing, the dropout probabilities were set to $p=0.1$ . ", "page_idx": 21}, {"type": "text", "text": "F Dataset details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "F.1 Synthetic dataset ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "We use one of the datasets from ACIC2018 with 177 covariates to generate the synthetic dataset with a coefficient matrix $W$ , i.e., ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\left\\{\\begin{array}{l l}{X\\sim\\mathrm{\\normalfont~Real-World}\\left(\\cdot\\right),}\\\\ {A\\sim\\mathrm{\\normalfont~Real-World}\\left(X\\right),}\\\\ {Y:=U_{Y}+\\sin(W X)+A X+A;\\quad U_{Y}\\sim N(0,1)}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "We use a ten-fold split for train/test samples $(80\\%/20\\%)$ . ", "page_idx": 22}, {"type": "text", "text": "F.2 ACIC 2016 & 2018 datasets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "The 2016 Atlantic Causal Inference Challenge (ACIC2016) [46] contains 77 different settings of benchmark datasets, and ACIC2018 [41] contains 24, respectively. They are designed to benchmark causal inference algorithms with various data-generating mechanisms. Covariates of ACIC 2016 are taken from a large study of developmental disorders, and covariates of ACIC 2018 are derived from the linked birth and infant death data. ACIC 2016 and ACIC 2018 differ in the number of true confounders, the varying levels of overlap, and the form of conditional outcome distributions. ACIC 2016 has 77 different data-generating mechanisms with 100 equal-sized samples for each mechanism $n=4802$ , $d_{X}=82\\,\\$ ). ACIC 2018 provides 63 distinct data-generating mechanisms with around 40 non-equal-sized samples for each mechanism ( $\\ln$ ranges from 1, 000 to 50, 000, $d_{X}=177,$ ). Notably, ACIC 2018 has a constant CATE for most of the datasets, but heterogeneous propensity scores. ", "page_idx": 22}, {"type": "text", "text": "F.3 IHDP dataset ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "The Infant Health and Development Program (IHDP) [25] has features and treatment assignments from a real-world clinical trial. The dataset comprised 747 subjects, with 25 features for each subject. Out of the 25 features, 6 are continuous, and 19 are binary with a binary treatment. For both treated and untreated, synthetic outcomes of IHDP are sampled from different conditional normal distributions. These distributions are homoscedastic $\\smash{\\sigma^{2}=1\\!\\!\\!/}$ ) but have substantially different conditional means. The potential outcomes are simulated according to the standard non-linear \u201cResponse Surface $\\mathbf{B}^{\\bullet}$ setting in [25] with the following data-generating mechanism: ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\left\\{\\begin{array}{l l}{X\\sim\\operatorname{Real-World}(\\cdot),}\\\\ {A\\sim\\operatorname{Real-World}(X),}\\\\ {Y\\sim N\\big(A\\left(X\\beta-\\omega\\right)+(1-A)\\left(\\exp((X+W)\\beta)\\right),1\\big),}\\end{array}\\right.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where $\\beta,W,\\omega$ are constant parameters of the simulation. For further details, we refer to [25]. ", "page_idx": 22}, {"type": "text", "text": "G Additional experiments ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "G.1 Simulation experiments ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "We examine the Neyman-orthogonality property of our orthogonal diffusion loss through simulation experiments. We conduct experiments to show that the orthogonal diffusion loss can address the problem of model misspecifications when estimating nuisance functions (e.g., the propensity score $\\bar{\\pi}(x))$ . ", "page_idx": 23}, {"type": "text", "text": "To this end, we perturb the propensity score manually to assess the robustness of the loss when the nuisance functions are estimated with varying errors. During training, we consistently increase the sample size and evaluate the CATE estimation error on the synthetic dataset. As shown in Fig. 3, the CATE estimation error decreases as the sample size grows and eventually converges to zero. This demonstrates that, even when the propensity score is misspecified, the orthogonal loss remains robust, enabling our DiffPO to converge to the correct objective. This experiment supports Theorem 1 by illustrating how the stability and consistency of the orthogonal loss contribute to convergence. In sum, it shows the theoretical benefits of our proposed orthogonal diffusion loss. ", "page_idx": 23}, {"type": "image", "img_path": "merJ77Jipt/tmp/e8f09cf18c4bc51762bacdc097a5b5b4521ad0585cb59c1d2222a0187d9453e6.jpg", "img_caption": ["Figure 3: We manually perturb the propensity score during training on the synthetic data. We replace the estimated propensity score $\\hat{\\pi}(x)$ with a randomly sampled value $\\tilde{\\pi}(\\boldsymbol{x})$ from the interval $(0,1)$ . The weight $w_{\\hat{\\pi}}(x,a)$ for each sample in the orthogonal diffusion loss ${\\mathcal{L}}(\\theta,{\\hat{\\pi}})$ is thus replaced by weight $w_{\\tilde{\\pi}}(x,a)$ . The CATE estimation error gradually converges as the sample size increases. This aligns with our expectation, as the loss remains robust even with varying errors in the estimation of nuisance functions. "], "img_footnote": [], "page_idx": 23}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: The main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 24}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Justification: We discuss the limitations of the work in Sec.7. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 24}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We provide the full set of assumptions in Sec. 4 and proof in the Appendix. Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 25}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Justification: We fully disclose all the information needed to reproduce the main experimental results in the Appendix. E. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 25}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We provide open access to the data and code and provide an anonymous link to our code: https://anonymous.4open.science/r/DIFFPO ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 26}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We specify all the training and test details in the Sec. 6 and in the Appendix E. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 26}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: we report standard deviation in our experiment results. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our experiments do not require any specific hardware/resources. We admit the runtime of our method is longer compared to baselines. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 27}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: Our research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 27}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We discuss the broader impacts of our method in Sec.7. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: Our work does not pose such risks. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 28}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 28}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 28}, {"type": "text", "text": "Justification: All the datasets used in our paper are cited accordingly. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 28}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 29}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: We do not provide any assets in our work. ", "page_idx": 29}, {"type": "text", "text": "Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 29}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing or research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 29}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 29}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 29}, {"type": "text", "text": "Justification: Our work does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 29}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 29}]