[{"type": "text", "text": "Dynamics of Supervised and Reinforcement Learning in the Non-Linear Perceptron ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Christian Schmid   \nInstitute of Neuroscience   \nUniversity of Oregon   \ncschmid9@uoregon.edu ", "page_idx": 0}, {"type": "text", "text": "James M. Murray Institute of Neuroscience University of Oregon jmurray9@uoregon.edu ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The ability of a brain or a neural network to efficiently learn depends crucially on both the task structure and the learning rule. Previous works have analyzed the dynamical equations describing learning in the relatively simplified context of the perceptron under assumptions of a student-teacher framework or a linearized output. While these assumptions have facilitated theoretical understanding, they have precluded a detailed understanding of the roles of the nonlinearity and inputdata distribution in determining the learning dynamics, limiting the applicability of the theories to real biological or artificial neural networks. Here, we use a stochastic-process approach to derive flow equations describing learning, applying this framework to the case of a nonlinear perceptron performing binary classification. We characterize the effects of the learning rule (supervised or reinforcement learning, SL/RL) and input-data distribution on the perceptron\u2019s learning curve and the forgetting curve as subsequent tasks are learned. In particular, we find that the input-data noise differently affects the learning speed under SL vs. RL, as well as determines how quickly learning of a task is overwritten by subsequent learning. Additionally, we verify our approach with real data using the MNIST dataset. This approach points a way toward analyzing learning dynamics for more-complex circuit architectures. ", "page_idx": 0}, {"type": "text", "text": "Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Learning, which is typically implemented in both biological and artificial neural networks with iterative update rules that are noisy due to the noisiness of input data and possibly of the update rule itself, is characterized by stochastic dynamics. Understanding these dynamics and how they are affected by task structure, learning rule, and neural-circuit architecture is an important goal for designing efficient artificial neural networks (ANNs), as well as for gaining insight into the means by which the brain\u2019s neural circuits implement learning. ", "page_idx": 0}, {"type": "text", "text": "As a step toward developing a full mathematical characterization of the dynamics of learning for multilayer ANNs solving complex tasks, recent work has made progress by making simplifying assumptions about the task structure and/or neural-circuit architecture. One fruitful approach has been to study learning dynamics in what is perhaps the simplest non-trivial ANN architecture: the individual perceptron. Even with this simplification, however, fully characterizing the mathematics of learning has been challenging for complex tasks, and further simplifications have been required. ", "page_idx": 0}, {"type": "image", "img_path": "doaJTihgIZ/tmp/fe4386012f5f7e1dac27d2297b8b59c39efd1126d03b9cf422fefc7d92e07deb.jpg", "img_caption": ["Figure 1: Learning dynamics in the nonlinear perceptron. A: The perceptron, parametrized by weights w, maps an input $\\mathbf{x}$ to the output $\\hat{y}$ . B: The inputs are drawn from two multivariate normal distributions with labels $y=\\pm1$ . The weight vector w is orthogonal to the classification boundary. C: Due to the stochasticity inherent in the update equations, the weights are described by the flow of a probability distribution in weight space. "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "One approach has been to analyze learning in the student-teacher framework [Gardner and Derrida, 1989, Seung et al., 1992], in which a student perceptron learns to produce an input-to-output mapping that approximates that of a teacher perceptron. This has led to insights about the differences in learning dynamics between different types of learning rules (e.g., supervised and reinforcement learning) [Werfel et al., 2003, Z\u00fcge et al., 2023, Patel et al., 2023]. Such insights are highly relevant for neuroscience, where a longstanding goal has been to infer the learning mechanisms that are used in the brain [Lim et al., 2015, Nayebi et al., 2020, Portes et al., 2022, Humphreys et al., 2022, Mehta et al., 2023, Payeur et al., 2023]. However, by construction, the student-teacher setup in the perceptron only applies to input-output mappings that are linearly separable, which is seldom the case in practice. Another approach has been to study learning dynamics in the linearized perceptron [Werfel et al., 2003, Mignacco et al., 2020, Bordelon and Pehlevan, 2022], which enables exact solutions even for structured input data distributions that are not linearly separable. However, the dynamics of learning in nonlinear neural networks\u2014even very simple ones\u2014performing classification tasks are not fully understood. Further, whether and how the dynamics of learning might differ under different learning rules in such settings has not been investigated. ", "page_idx": 1}, {"type": "text", "text": "Here, we take a stochastic-process approach (similar to Yaida [2018] and Murray and Escola [2020]) to derive flow equations describing learning in the finite-dimensional nonlinear perceptron trained in a binary classification task (Fig. 1). These results are compared for two different online learning rules: supervised learning (SL, which corresponds to logistic regression) and reinforcement learning (RL). We characterize the effects of the input-data distribution on the learning curve, finding that, for SL but not for RL, noise along the coding direction slows down learning, while noise orthogonal to the coding direction speeds up learning. In addition, we verify our approach by training a nonlinear perceptron on the MNIST dataset. Finally, applying the approach to continual learning, we quantify how the input noise and learning rule affect the rate at which old classifications are forgotten as new ones are learned. Together, these results establish the validity of the approach in a simplified context and provide a path toward analyzing learning dynamics for more-complex tasks and architectures. ", "page_idx": 1}, {"type": "text", "text": "Stochastic-process approach for describing weight evolution ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We consider a general iterative update rule of the form ", "page_idx": 1}, {"type": "equation", "text": "$$\nw_{i}^{t+\\delta t}-w_{i}^{t}=\\eta f_{i}(\\mathbf{w}^{t}),\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\mathbf{w}^{t}\\in\\mathbb{R}^{n}$ for arbitrary $n>0$ , and $\\eta$ is the learning rate. The stochastic update term $f_{i}$ on the right-hand side is drawn from a probability distribution\u2014it depends on the weights themselves, as well as the input to the network and, potentially, output noise. Starting from this update equation, our goal is to derive an expression characterizing the evolution of the probability distribution of the weights, $p(\\mathbf{w},t)$ (cf. Fig. 1C). We assume that $f_{i}(\\mathbf{w})$ does not explicitly depend on $\\eta$ , and that all the moments $\\langle f_{i}^{k}\\rangle_{L}$ , $k=1,2,\\dots$ , where $\\langle\\cdot\\rangle_{L}$ denotes an average over the noise in the update equation (1) (including the input distribution as well as, potentially, output noise), exist as smooth functions of w. ", "page_idx": 1}, {"type": "text", "text": "Given the stochastic process defined by (1), the probability distribution at time $t+\\delta t$ given the distribution at time $t$ is ", "page_idx": 2}, {"type": "equation", "text": "$$\np(\\mathbf{w},t+\\delta t)=\\int d\\mathbf{w}^{\\prime}p(\\mathbf{w},t+\\delta t|\\mathbf{w}^{\\prime},t)p(\\mathbf{w}^{\\prime},t).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Denoting the weight update as $\\delta\\mathbf{w}:=\\mathbf{w}-\\mathbf{w}^{\\prime}$ , the integrand in this equation can be written as ", "page_idx": 2}, {"type": "equation", "text": "$$\np(\\mathbf{w},t+\\delta t|\\mathbf{w}^{\\prime},t)p(\\mathbf{w}^{\\prime},t)=p(\\mathbf{w}+\\delta\\mathbf{w}-\\delta\\mathbf{w},t+\\delta t|\\mathbf{w}-\\delta\\mathbf{w},t)p(\\mathbf{w}-\\delta\\mathbf{w},t).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Changing the integration variable to $\\delta\\mathbf{w}$ and performing a Taylor expansion in $\\delta\\mathbf{w}$ , the right-hand side of (2) yields ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\int d\\mathbf{w}^{\\prime}p(\\mathbf{w},t+\\delta t|\\mathbf{w}^{\\prime},t)p(\\mathbf{w}^{\\prime},t)=}\\\\ {\\displaystyle p(\\mathbf{w},t)-\\sum_{i}\\frac{\\partial}{\\partial w_{i}}\\left[\\alpha_{i}(\\mathbf{w})p(\\mathbf{w},t)\\right]+\\frac{1}{2}\\sum_{i j}\\frac{\\partial^{2}}{\\partial w_{i}\\partial w_{j}}\\left[\\beta_{i j}(\\mathbf{w})p(\\mathbf{w},t)\\right]+O(\\delta\\mathbf{w}^{3}),}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\alpha_{i}(\\mathbf{w})=\\int d\\delta\\mathbf{w}\\delta w_{i}p(\\mathbf{w}+\\delta\\mathbf{w},t+\\delta t|\\mathbf{w},t)\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "and ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\beta_{i j}(\\mathbf{w})=\\int d\\delta\\mathbf{w}\\delta w_{i}\\delta w_{j}p(\\mathbf{w}+\\delta\\mathbf{w},t+\\delta t|\\mathbf{w},t).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Here, we assumed that the probability distribution describing the weight updates $f$ has bounded derivatives with respect to w. ", "page_idx": 2}, {"type": "text", "text": "Although (2) is only defined for discrete time steps, we assume a continuous probability density $p(\\mathbf{w},t)$ interpolates between the updates and exists as a smooth function for all values of $t$ . We can then expand the left-hand side of (2) to obtain ", "page_idx": 2}, {"type": "equation", "text": "$$\np(\\mathbf{w},t+\\delta t)=p(\\mathbf{w},t)+\\delta t\\frac{\\partial}{\\partial t}p(\\mathbf{w},t)+O(\\delta t^{2}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "For the iterative update rules that we will consider, we have $\\delta\\mathbf{w}\\propto\\eta$ , where $\\eta$ is a learning rate. In order to take a continuous-time limit, we let $\\eta:=\\delta t$ and take the limit $\\delta t\\rightarrow0$ . For the general learning rule (1), the coefficients in (4) have the form ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\alpha_{i}(\\mathbf{w})=\\langle f_{i}\\rangle_{L},\\quad\\beta_{i j}(\\mathbf{w})=\\langle f_{i}f_{j}\\rangle_{L},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\langle\\cdot\\rangle_{L}$ denotes an average over the noise in the update equation (1) (including the input distribution as well as, potentially, output noise). Thus, we find ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\eta\\frac{\\partial p}{\\partial t}(\\mathbf{w},t)=-\\;\\eta\\sum_{i}\\frac{\\partial}{\\partial w_{i}}\\left(p(\\mathbf{w},t)\\langle f_{i}\\rangle_{L}\\right)+\\mathcal{O}(\\eta^{2}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Finding the $p(\\mathbf{w},t)$ that solves this equation cannot in general be done exactly when $f_{i}$ is nonlinear. However, by multiplying (9) with powers of w and integrating, as well as expanding in ${\\bf w}-\\langle{\\bf w}\\rangle$ , where $\\langle\\cdot\\rangle$ denotes the average with respect to $p(\\mathbf{w},t)$ , we can derive a system of equations for the moments of $p(\\mathbf{w},t)$ [Risken, 1996]. As we derive in the appendix, this gives the following expressions for the first two moments up to $O((\\mathbf{w}-\\langle\\mathbf{w}\\rangle)^{3})$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{c}{{\\displaystyle\\frac{d}{d t}\\langle w_{i}\\rangle=\\left(1+\\displaystyle\\frac{1}{2}\\sum_{k,l}\\mathrm{Cov}(w_{k},w_{l})\\partial_{k}\\partial_{l}\\right)\\langle f_{i}\\rangle_{L}(\\langle{\\bf w}\\rangle),}}\\\\ {{\\displaystyle\\frac{d}{d t}\\mathrm{Cov}(w_{i},w_{j})=\\sum_{k}\\left[\\mathrm{Cov}(w_{i},w_{k})\\partial_{k}\\langle f_{j}\\rangle_{L}(\\langle{\\bf w}\\rangle)+\\mathrm{Cov}(w_{j},w_{k})\\partial_{k}\\langle f_{i}\\rangle_{L}(\\langle{\\bf w}\\rangle)\\right].}}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Together, these equations characterize the flow of $p(\\mathbf{w},t)$ for a general iterative learning algorithm in a general ANN architecture. ", "page_idx": 2}, {"type": "image", "img_path": "doaJTihgIZ/tmp/8815f9ff1935c6c912b8e3f939631486da423ec9ba4f920891a8f08c5c3f2346.jpg", "img_caption": ["Figure 2: Learning dynamics in a perceptron classification task. A, B: Flow fields determining the weight dynamics with trajectories for different initial conditions for SL (A) and RL (B). C, D: Learning dynamics from simulations closely follow the analytical results for SL (C) and RL (D). E: Dependence of the asymptotic weight norm on the regularization parameter $\\lambda$ . "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "Learning dynamics in the nonlinear perceptron ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "While the above approach is general and could be applied to any iterative learning algorithm for any ANN architecture, for the remainder of this work we will focus on its application to the nonlinear perceptron (Fig. 1A), a one-layer neural network that receives an input $\\mathbf{x}\\in\\mathbb{R}^{N}$ , multiplies it with a weight vector $\\textbf{w}\\in\\mathbb{R}^{N}$ , and produces an output $\\hat{y}$ . The task we study is a binary Gaussian classification task, in which the model is presented with samples $\\mathbf{x}$ drawn from two distributions $p(\\mathbf{x}|y)$ with labels $y=\\pm1$ , where $\\begin{array}{r}{p(y=\\pm1)=\\frac{1}{2}}\\end{array}$ . Each $p(\\mathbf{x}|y)$ is given by a multivariate normal distribution with $\\mathbf{x}\\sim\\mathcal{N}(\\pmb{\\mu}^{y},\\pmb{\\Sigma}^{y})$ (Fig. 1B). We analyze both the case of SL with deterministic output, for which $\\hat{y}=\\phi(\\mathbf{w}\\cdot\\mathbf{x})$ , as well as RL, for which the stochastic output is given by $\\pi(\\hat{y}=$ $\\pm1\\bar{\\big)}=\\phi(\\pm\\mathbf{w}\\cdot\\mathbf{x})$ , where $\\phi$ is the logistic sigmoid function. The goal of the model is to output a label $\\hat{y}$ that closely matches the ground truth $y$ when given an input $\\mathbf{x}$ . ", "page_idx": 3}, {"type": "text", "text": "Derivation of the flow equations ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The supervised learning rule we consider is regularized stochastic gradient descent for a binary cross-entropy loss, which results in the weight update rule ", "page_idx": 3}, {"type": "equation", "text": "$$\nf(\\mathbf{w})_{i}=(\\tilde{y}-\\hat{y})x_{i}-\\lambda w_{i},\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\begin{array}{r}{\\tilde{y}=\\frac{1}{2}(y+1)\\in\\{0,1\\}}\\end{array}$ is the shifted input label, and $\\lambda$ is the regularization hyperparameter.   \nThis learning rule describes online logistic regression. ", "page_idx": 3}, {"type": "text", "text": "For reinforcement learning, we use the REINFORCE policy-gradient rule with reward baseline [Williams, 1992, Sutton and Barto, 2018]: ", "page_idx": 3}, {"type": "equation", "text": "$$\nf(\\mathbf{w})_{i}=\\hat{y}\\delta\\phi(-\\hat{y}\\mathbf{w}\\cdot\\mathbf{x})x_{i}-\\lambda w_{i}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here $\\delta=y\\hat{y}-\\langle y\\hat{y}\\rangle$ is the reward prediction error, and $\\hat{y}$ is the stochastic output of the perceptron with probability $\\bar{\\pi}(\\hat{y}=\\pm1)=\\phi(\\pm\\mathbf{w}\\cdot\\mathbf{x})$ . To facilitate mathematical feasibility, we replace the perceptron activation function by a shifted error function $\\begin{array}{r}{\\phi(z)=\\frac{1}{2}\\left(1+\\mathrm{Erf}\\left(\\frac{\\sqrt{\\pi}}{4}z\\right)\\right)}\\end{array}$ . ", "page_idx": 3}, {"type": "text", "text": "We first derive the learning dynamics for stochastic gradient descent. We assume that the initial condition is uniquely specified, with $p(\\mathbf{w},0)=\\delta(\\mathbf{w}-\\mathbf{\\bar{w}}^{0})$ . In this case, the weight covariance will ", "page_idx": 3}, {"type": "text", "text": "be zero, and the flow equations (10) simply reduce to ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\langle w_{i}\\rangle=\\langle f_{i}\\rangle_{L}\\big|_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "To make the formulas more concise, we set $\\lambda=0$ . It can be reintroduced by simply adding the term $-\\lambda\\mathbf{w}$ . We then get ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle f_{i}\\rangle_{L}(\\mathbf{w})=\\langle(\\widetilde{y}-\\phi(\\mathbf{w}\\cdot\\mathbf{x}))x_{i}\\rangle_{\\mathbf{x},y}}\\\\ &{=\\frac{1}{2}\\langle(1-\\phi(\\mathbf{w}\\cdot\\mathbf{x}))x_{i}\\rangle_{\\mathbf{x}\\sim N(\\mu^{+},\\mathbf{x}^{+})}-\\frac{1}{2}\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim N(\\mu^{-},\\mathbf{x}^{-})}}\\\\ &{=\\frac{1}{2}\\mu_{i}^{+}\\left(1-\\Phi\\left(\\frac{a_{+}}{\\sqrt{1+b_{+}^{2}}}\\right)\\right)-\\frac{1}{2}\\frac{1}{\\sqrt{2\\pi}}\\frac{(\\mathbf{\\Sigma}^{+}\\cdot\\tilde{\\mathbf{w}})_{i}}{\\sqrt{1+b_{+}^{2}}}e^{-\\frac{a_{+}^{2}}{2(1+b_{+}^{2})}}}\\\\ &{\\quad-\\,\\frac{1}{2}\\mu_{i}^{-}\\Phi\\left(\\frac{a_{-}}{\\sqrt{1+b_{-}^{2}}}\\right)-\\frac{1}{2}\\frac{1}{\\sqrt{2\\pi}}\\frac{(\\mathbf{\\Sigma}^{-}\\cdot\\tilde{\\mathbf{w}})_{i}}{\\sqrt{1+b_{-}^{2}}}e^{-\\frac{a_{-}^{2}}{2(1+b_{-}^{2})}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Here, $\\textstyle\\Phi(z)\\,=\\,{\\frac{1}{2}}\\left(1+\\operatorname{Erf}\\left(z/{\\sqrt{2}}\\right)\\right)\\,=\\,\\phi(z\\cdot{\\sqrt{8/\\pi}})$ is the cumulative distribution function of the standard normal distribution. To simplify notation, we have introduced $\\tilde{\\mathbf{w}}=\\mathbf{w}\\cdot\\sqrt{\\pi/8}$ , as well as the quantities ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{a_{y}=\\pmb{\\mu}^{y}\\cdot\\tilde{\\mathbf{w}},}\\\\ &{b_{y}=\\sqrt{\\tilde{\\mathbf{w}}^{T}\\pmb{\\Sigma}^{y}\\tilde{\\mathbf{w}}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "To aid interpretation of these results, we assume that $\\pmb{\\mu}^{\\pm}=\\pmb{\\mu}$ and $\\pmb{\\Sigma}=\\sigma^{2}\\mathbb{I}$ . Then (15) implies ", "page_idx": 4}, {"type": "equation", "text": "$$\n{\\frac{d}{d t}}\\langle\\mu\\cdot\\mathbf{w}\\rangle=|\\mu|^{2}\\left(1-\\Phi\\left({\\frac{\\mu\\cdot{\\tilde{\\mathbf{w}}}}{\\sqrt{1+\\sigma^{2}|{\\tilde{\\mathbf{w}}}|^{2}}}}\\right)\\right)-{\\frac{1}{{\\sqrt{2\\pi}}}}{\\frac{\\sigma^{2}\\mu\\cdot{\\tilde{\\mathbf{w}}}}{\\sqrt{1+\\sigma^{2}|{\\tilde{\\mathbf{w}}}|^{2}}}}e^{-{\\frac{(\\mu\\cdot{\\tilde{\\mathbf{w}}})^{2}}{2(1+\\sigma^{2}|{\\tilde{\\mathbf{w}}}|^{2})}}}\\Bigr|_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "as well as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\frac{d}{d t}|\\langle\\mathbf{w}\\rangle|^{2}}&{=2\\mathbf{w}\\cdot\\boldsymbol{\\mu}\\left(1-\\Phi\\left(\\frac{\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}}\\right)\\right)-\\frac{1}{2}\\frac{\\sigma^{2}|\\mathbf{w}|^{2}}{\\sqrt{1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}}e^{-\\frac{(\\mu\\cdot\\tilde{\\mathbf{w}})^{2}}{2(1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2})}}\\Big|_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle}}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "An interpretation of (18) is that the first term pushes the weight vector in the decoding direction, while the second term acts as a regularization, whereby the cross-entropy loss penalizes misclassifications more as $\\pmb{\\mu}\\cdot\\mathbf{w}$ increases. An increase in the input noise leads to a higher overlap of the distributions, which means that even the Bayes-optimal classifier will make more mistakes. ", "page_idx": 4}, {"type": "text", "text": "For RL, we need to calculate ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{f_{i}\\rangle_{L}(\\mathbf{w})=\\langle\\hat{y}\\delta\\phi(-\\hat{y}\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x},y,\\hat{y}}}\\\\ &{=\\langle\\phi(-\\mathbf{w}\\cdot\\mathbf{x})\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu^{+},\\mathbf{z}^{+})}-\\langle\\phi(-\\mathbf{w}\\cdot\\mathbf{x})\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu^{-},\\mathbf{z}^{-})}}\\\\ &{=\\frac{(\\mathbf{Z}^{+}\\cdot\\tilde{\\mathbf{w}})_{i}}{\\sqrt{2\\pi}\\sqrt{1+b_{+}^{2}}}e^{-\\frac{a_{+}^{2}}{2(1+b_{+}^{2})}}\\left(1-2\\Phi\\left(\\frac{a_{+}}{\\sqrt{1+b_{+}^{2}}\\sqrt{1+2b_{+}^{2}}}\\right)\\right)+2\\mu_{i}^{+}T\\left(\\frac{a_{+}}{\\sqrt{1+b_{+}^{2}}},\\frac{1}{\\sqrt{1+2b_{+}^{2}}}\\right)}\\\\ &{-\\,\\frac{(\\mathbf{Z}^{-}\\cdot\\tilde{\\mathbf{w}})_{i}}{\\sqrt{2\\pi}\\sqrt{1+b_{-}^{2}}}e^{-\\frac{a_{-}^{2}}{2(1+b_{-}^{2})}}\\left(1-2\\Phi\\left(\\frac{a_{-}}{\\sqrt{1+b_{-}^{2}}\\sqrt{1+2b_{-}^{2}}}\\right)\\right)-2\\mu_{i}^{-}T\\left(\\frac{a_{-}}{\\sqrt{1+b_{-}^{2}}},\\frac{1}{\\sqrt{1+2b_{-}^{2}}}\\right)}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Here, $T(\\cdot,\\cdot)$ is Owen\u2019s $\\mathrm{T}$ function: ", "page_idx": 4}, {"type": "equation", "text": "$$\nT(h,a)=\\frac{1}{2\\pi}\\int_{0}^{a}\\frac{e^{-\\frac{1}{2}h^{2}(1+x^{2})}}{1+x^{2}}d x.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As for supervised learning, we can simplify this expression for isotropic distributions with means $\\pm\\pmb{\\mu}$ and get ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\frac{d}{d t}\\langle\\mu\\cdot\\mathbf{w}\\rangle=\\lvert\\mu\\rvert^{2}4T\\left(\\frac{\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2}}},\\frac{1}{\\sqrt{1+2\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2}}}\\right)}\\\\ {\\quad\\quad\\quad\\quad-\\frac{1}{\\sqrt{2\\pi}}\\frac{2\\sigma^{2}\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2}}}e^{-\\frac{(\\mu\\cdot\\tilde{\\mathbf{w}})^{2}}{2(1+\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2})}}\\mathrm{Erf}\\left(\\frac{\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2}}\\sqrt{2+4\\sigma^{2}\\lvert\\tilde{\\mathbf{w}}\\rvert^{2}}}\\right)\\Big\\rvert_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle}}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "image", "img_path": "doaJTihgIZ/tmp/79063216fad4a589980c789b37bd22e456eaf68fe9e1720d0425c3cba15a4f13.jpg", "img_caption": [], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "Figure 3: Relationship between input noise and time to learn the task. A: The time required for the alignment $\\mu\\cdot\\langle\\mathbf{w}\\rangle/|\\langle\\mathbf{w}\\rangle|$ to reach $80\\%$ depends on the noise $\\sigma$ of the isotropic input distributions. B: To characterize anisotropic input noise, the total input variance is split into a noise component $\\sigma_{\\parallel}^{2}$ parallel to and a component $\\sigma_{\\perp}^{2}$ orthogonal to the decoding direction. C: Shifting the input noise into the decoding direction slows down learning. ", "page_idx": 5}, {"type": "text", "text": "and ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}{\\lefteqn{\\frac{d}{d t}|\\langle\\mathbf{w}\\rangle|^{2}=\\!8\\mathbf{w}\\cdot\\boldsymbol{\\mu}T\\left(\\frac{\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}},\\frac{1}{\\sqrt{1+2\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}}\\right)}}\\\\ &{}&{-\\,\\frac{1}{2}\\frac{2\\sigma^{2}|\\mathbf{w}|^{2}}{\\sqrt{1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}}e^{-\\frac{(\\mu\\cdot\\tilde{\\mathbf{w}})^{2}}{2(1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2})}}\\mathrm{Erf}\\left(\\frac{\\mu\\cdot\\tilde{\\mathbf{w}}}{\\sqrt{1+\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}\\sqrt{2+4\\sigma^{2}|\\tilde{\\mathbf{w}}|^{2}}}\\right)\\Big|_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "As we show in the appendix, and as demonstrated in Fig. 2, the flow equations for both SL and RL have a unique, globally stable fixed point whenever $\\lambda>0$ or the input noise $\\sigma>0$ (Fig. 2A,B). The solutions of (15) and (20) exhibit agreement with learning curves obtained by direct simulation of (1) (Fig. 2C,D), where the small remaining discrepancy arises from the fact that, for the simulation, we used a standard logistic sigmoid function instead of the error function sigmoid curve used for the analytical calculations. We also see that the asymptotic weight norm decreases approximately linearly with $\\ln\\lambda$ (Fig. 2E). Of particular note is the observation that, perhaps counter-intuitively, higher levels of noise appear to lead to faster learning for SL, though the effect is more ambiguous in the case of RL. This will be analyzed in more detail in the following section. ", "page_idx": 5}, {"type": "text", "text": "Impact of noise on learning time ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We next investigate the effect of different types of input noise on the dynamics of learning and whether differences arise for the supervised and reinforcement algorithms. We begin with the case of isotropic input noise, with $\\pmb{\\Sigma}=\\sigma^{2}\\ddot{\\mathbb{I}}$ and means $\\pm\\pm\\pmb{\\mu}$ with $|\\pmb{\\mu}|=1$ . In this case, the optimal alignment |\u00b5\u27e8\u00b7\u27e8ww\u27e9|\u27e9 of 1 is always reached asymptotically, so we focus on how quickly this value is approached as a function of the input noise. ", "page_idx": 5}, {"type": "text", "text": "In the case of SL, analytically analyzing the logarithmic derivative of the alignment between $\\pmb{\\mu}$ and $\\langle\\mathbf{w}\\rangle$ yields a flow equation of the form ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\log\\frac{\\mu\\cdot\\langle\\mathbf{w}\\rangle}{|\\langle\\mathbf{w}\\rangle|}=g_{\\mathrm{iso}}(\\mu,\\mathbf{w})+\\sigma^{2}h_{\\mathrm{iso}}(\\mu,\\mathbf{w})^{2}+\\mathcal{O}(\\sigma^{4}),\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $g_{\\mathrm{iso}}$ and $h_{\\mathrm{iso}}$ do not depend on $\\sigma$ . Thus, the higher the input noise, the faster the task is learned. The analogous relationship for RL is indeterminate, such that input noise may either speed up or slow down learning in this case, depending on the parameters. As is illustrated in Fig. 3A, numerical integration of the flow equations reveals qualitatively distinct trends for the dependence of learning speed on noise. ", "page_idx": 5}, {"type": "text", "text": "Anisotropic input distributions ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "To analyze the case of anisotropic input noise, we divide the total noise into two components: a component $\\sigma_{\\parallel}^{2}=1+\\varepsilon$ in the direction of $\\pmb{\\mu}$ and the noise $\\sigma_{\\perp}^{2}=1-\\varepsilon$ orthogonal to it, while keeping the total noise $\\sigma_{\\parallel}^{2}+\\sigma_{\\perp}^{2}$ fixed (Fig. 3B). For both SL and RL, we find that learning slows down when the noise is shifted to the decoding direction and speeds up when it is shifted to orthogonal directions (Fig. 3C). To confirm this analysis analytically, we calculate the logarithmic derivative of the alignment between $\\pmb{\\mu}$ and $\\langle\\mathbf{w}\\rangle$ and find ", "page_idx": 5}, {"type": "image", "img_path": "doaJTihgIZ/tmp/c1002dbccf425688579c73123852bfb09337359728a9e79e9121ac40bd95a33d.jpg", "img_caption": ["Figure 4: Dynamics of the total variance of w for isotropic input noise. Higher noise leads to a faster decay in $\\operatorname{tr}\\left(\\operatorname{Cov}(\\mathbf{w})\\right)$ for supervised learning (A) and for reinforcement learning $({\\bf{B}})$ . "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\log\\frac{\\pmb{\\mu}\\cdot\\langle\\mathbf{w}\\rangle}{|\\langle\\mathbf{w}\\rangle|}=g_{\\mathrm{an}}(\\pmb{\\mu},\\mathbf{w})+\\varepsilon h_{\\mathrm{an}}(\\pmb{\\mu},\\mathbf{w})^{2}+\\mathcal{O}(\\varepsilon^{2}),\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $g_{\\mathrm{an}}$ and $h_{\\mathrm{an}}$ are independent of $\\varepsilon$ . From this expression, we see that, at least to leading order in $\\varepsilon$ , noise anisotropy orthogonal to the decoding direction tends to increase the speed of learning, while anisotropy along the decoding direction tends to decrease the speed of learning. This is in apparent contrast to a recent study in two-layer networks, where input variance along the task-relevant dimension was found to increase the speed of learning [Saxe et al., 2019]. The reason for these seemingly opposite results is because, in the the task studied in that work, variance along the coding direction is a signal that facilitates learning, while, in our case of binary classification, variance along the coding direction is noise that impairs learning. ", "page_idx": 6}, {"type": "text", "text": "Input noise covariance ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "So far, we have assumed that the initial weight distribution, which can be thought of as characterizing an ensemble of networks with different initializations, is specified deterministically, i.e. $p(\\mathbf{w},0)=$ $\\delta(\\mathbf{w}-\\mathbf{w}^{0})$ . In this case, according to (11), the covariance of w will remain zero at later times. If training is instead initiated with a distribution $p(\\mathbf{w},0)$ having nonzero covariance, then we can ask how this covariance evolves with training\u2014in particular, whether the covariance of this distribution diverges, converges to 0, or approaches a finite value as $t\\to\\infty$ . ", "page_idx": 6}, {"type": "text", "text": "This calculation can be easily performed in the limit $\\sigma\\rightarrow0$ where the inputs are just $x=\\pm\\pm$ . Then (15) simply becomes ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\langle f_{i}\\rangle_{L}(\\mathbf{w})=\\mu_{i}\\left(1-\\phi(\\pmb{\\mu}\\cdot\\mathbf{w})\\right)-\\lambda w_{i},\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "and (11) implies that ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\mathrm{tr}\\left(\\mathrm{Cov}({\\bf w})\\right)=-\\frac{e^{-\\pi(\\mu\\cdot{\\bf w})^{2}/16}}{4}\\mu^{T}\\mathrm{Cov}({\\bf w})\\mu-2\\lambda\\mathrm{tr}\\left(\\mathrm{Cov}({\\bf w})\\right).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Since $\\operatorname{Cov}(\\mathbf{w})$ is positive semidefinite, both terms on the right-hand side of (27) are always nonpositive for $\\lambda>0$ and lead to exponential decay of $\\operatorname{tr}\\left(\\operatorname{Cov}(\\mathbf{w})\\right)$ , so the eigenvalues of $\\operatorname{Cov}(\\mathbf{w})$ approach zero. Thus, the covariance of the distribution $p(\\mathbf{w},t)$ vanishes as $t\\to\\infty$ (Fig. 4A). ", "page_idx": 6}, {"type": "text", "text": "The same calculation can be performed for the RL algorithm, again with the result that $\\mathrm{tr}(\\mathrm{Cov}(\\mathbf{w}))\\rightarrow$ 0 as $t\\to\\infty$ whenever $\\lambda>0$ (Fig. 4B). As can be seen in Fig. 4, the total variance continues to decay to zero upon including input noise (in the $\\eta\\rightarrow0$ limit we are working in), with the decay speeding up as the noise is increased. ", "page_idx": 6}, {"type": "text", "text": "Application to real tasks ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In order to test whether the theoretical equations derived above apply to realistic input data, we next train a perceptron with stochastic gradient descent to perform binary classification with crossentropy loss on the MNIST dataset (Fig. 5A). To obtain suitable input representations, the images corresponding to the digits 0 and 1 are first convolved with a set of 1440 Gabor filters [Haghighat et al., 2015]. (In the appendix, we perform the same analysis on the raw MNIST data without the Gabor convolution and obtain similar results.) We then model these two input classes as multivariate Gaussians with covariances $\\Sigma_{0,1}$ and means $\\pmb{\\mu}_{0,1}$ (or $\\pm\\pmb{\\mu}$ after a translation). The evolution of the weight vector during training is found by numerically integrating (15). To quantify the test accuracy during training, an approximation of the expected error at each time step is derived by integrating the Gaussian approximations to the two input distributions up to the hyperplane orthogonal to the weight vector. As can be seen in Fig. 5B, this theoretically derived learning curve closely matches the actual generalization performance of the trained classifier on the hold-out set. ", "page_idx": 6}, {"type": "image", "img_path": "doaJTihgIZ/tmp/804f4d8c066ff0fec1bf50e09b1f556dc8381ba0703a8d50a742a732b9b9f92b.jpg", "img_caption": ["Figure 5: Comparison of the theory with training on MNIST. A: A nonlinear perceptron is trained to classify the digits 0 and 1 in the MNIST dataset. B: Comparison of the empirical test classification accuracy with the theoretical prediction. C: Even after the task has been learned, the theory accurately captures non-trivial ongoing learning dynamics. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "doaJTihgIZ/tmp/c6e1499a576229ee1dfa879b9eca03c1e67db96d58386b7a162622ac4a081da5.jpg", "img_caption": ["Figure 6: Forgetting curves. A: Learning curves for multi-task learning, where w are trained on Task 1 $\\mathbf{\\boldsymbol{\\mu}}_{\\mu}=\\pmb{\\mu}_{1})$ after training to $80\\%$ on Task 0 $\\mathbf{\\nabla}\\mu=\\pmb{\\mu}_{0})$ . B: The alignment of $\\langle\\mathbf{w}\\rangle$ with $\\pmb{\\mu}_{\\mathrm{0}}$ after training on additional tasks $1,\\ldots,9$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "To further illustrate that the flow equations capture non-trivial aspects of the learning dynamics, Fig. 5C shows the alignment of w with $\\pmb{\\mu}$ , which continues to evolve after the task has been learned. The close alignment of the experimental results with the analytical predictions shows that the flow equations can capture learning dynamics in a realistic task with input data distributions that are not necessarily Gaussian. ", "page_idx": 7}, {"type": "text", "text": "Continual learning ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In addition to describing the dynamics of learning a single task, the flow equations derived above can also describe the learning and forgetting of multiple tasks. In continual learning, natural and artificial agents struggle with catastrophic forgetting, which causes older learning to be lost as it is overwritten with newer learning [Hadsell et al., 2020, Kudithipudi et al., 2022, Flesch et al., 2023]. Here, we ask how the number of tasks that can be remembered by the perceptron depends on the level of noise and the learning algorithm. The weights are first trained on Task 0, with input distribution defined by $\\pmb{\\mu}=\\pmb{\\mu}_{0}$ and $\\Sigma^{-}\\,\\sigma^{2}\\mathbb{I}$ , until the alignment of w with $\\pmb{\\mu}_{0}$ has reached $80\\%$ . We then train on subsequent tasks $\\pmb{\\mu}=\\pmb{\\mu}_{1},\\pmb{\\mu}_{2},\\dots$ This yields a forgetting curve that decays exponentially with the number of tasks, as shown in the simulation results in Fig. 6. The decay constant does not significantly depend on the learning algorithm being used, but we observe that a higher input noise leads to faster forgetting. Together with the results in the preceding subsections, this hints toward a trade-off between the learning speed and forgetting of previously learned tasks as the amount of input noise is varied. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "Discussion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this work, we have used a stochastic-process framework to derive the dynamical equations describing learning in the nonlinear perceptron performing binary classification. We have quantified how the input noise and learning rule affect the speed of learning and forgetting, in particular finding that greater input noise leads to faster learning for SL but not for RL. Finally, we have verified that our approach captures learning dynamics in an MNIST task that has a more-complex input data distribution. Together, the results characterize ways in which task structure, learning rule, and neural-circuit architecture significantly impact learning dynamics and forgetting rates. ", "page_idx": 8}, {"type": "text", "text": "One limitation of our approach is the assumption that the input distributions are multivariate Gaussians, which may not be the case for real datasets. While the agreement between the theoretical and empirical results applied to the MNIST data in Fig. 5 is encouraging in this regard, there may be greater discrepancies in cases where the input distributions are more complex. Indeed, recent work on the nonlinear perceptron has shown that, while the first- and second-order cumulants of the input distribution are learned early in training, later stages of training involve learning beyond-second-order (i.e. non-Gaussian) statistical structure in the input data [Refinetti et al., 2023], suggesting that our theory\u2019s ability to describe late-stage training in complex datasets may be somewhat limited. Another limitation is the choice to neglect higher-order terms in ${\\bf w}-\\langle{\\bf w}\\rangle$ (Equations (10), (11)) and $\\eta$ (Equation (9)). This may limit the ability to characterize instabilities and noise effects induced by non-infinitesimal learning rates. Future work will be needed to assess these effects. ", "page_idx": 8}, {"type": "text", "text": "While other work has approached SGD learning in neural networks within a stochastic-process framework, most of these works have not derived the noise statistics from the noisy update rule (as done here and in Yaida [2018] and Murray and Escola [2020]), but rather have added Gaussian noise to the mean update (e.g. [He et al., 2019, Li et al., 2019, 2021]). While the results for the flow of the weights\u2019 mean $\\langle\\mathbf{w}\\rangle(t)$ are the same under both approaches, the approach that we take enables us to additionally derive the flow of the weight covariance. Further, it allows for the possibility of describing effects arising from finite learning rate by including higher-order terms in $\\eta$ from the expansion of (4)\u2014a topic that we will address in an upcoming publication. ", "page_idx": 8}, {"type": "text", "text": "In our results on continual learning, we found that only a few tasks could be remembered by the perceptron before being overwritten. This is perhaps somewhat surprising given recent work [Murray and Escola, 2020] showing that the binary perceptron can recall $O(N)$ individual random patterns in a continual-learning setup. This difference may arise in part from the fact that that work used a more efficient, margin-based supervised learning rule [Crammer et al., 2006] rather than the stochastic gradient descent rule used here, as well as the fact that input noise and weight regularization were not included. This difference suggests that there is likely room for significant improvements in continuallearning performance with the setup studied here. This would be another interesting direction for future work, given that recent work has found that nonlinearity can drastically increase the amount of catastrophic forgetting in continual learning [Domin\u00e9 et al., 2023]. ", "page_idx": 8}, {"type": "text", "text": "Finally, we speculate that qualitative differences between learning rules such as that shown in Fig. 3 may provide a path for designing experiments to distinguish between learning rules implemented in the brain. More work will be needed, however, to formulate testable experimental predictions for more-realistic learning rules and network architectures. More generally, the approach developed here paves the way for analyzing numerous questions about learning dynamics in more-complex circuit architectures and diverse task structures. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgements ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We are grateful to Elliott Abe for early collaboration related to this project. Support for this work was provided by NIH-BRAIN award RF1-NS131993. ", "page_idx": 8}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Blake Bordelon and Cengiz Pehlevan. Learning curves for SGD on structured features. International Conference on Learning Representations. ArXiv preprint arXiv:2106.02713, 2022.   \nJames Bradbury, Roy Frostig, Peter Hawkins, Matthew James Johnson, Chris Leary, Dougal Maclaurin, George Necula, Adam Paszke, Jake VanderPlas, Skye Wanderman-Milne, and Qiao Zhang. JAX: composable transformations of Python+NumPy programs, 2018. URL http://github.com/google/jax.   \nKoby Crammer, Ofer Dekel, Joseph Keshet, Shai Shalev-Shwartz, Yoram Singer, and Manfred K Warmuth. Online passive-aggressive algorithms. Journal of Machine Learning Research, 7(3), 2006.   \nCl\u00e9mentine CJ Domin\u00e9, Lukas Braun, James E Fitzgerald, and Andrew M Saxe. Exact learning dynamics of deep linear networks with prior knowledge. Journal of Statistical Mechanics: Theory and Experiment, 2023 (11):114004, 2023.   \nTimo Flesch, Andrew Saxe, and Christopher Summerfield. Continual task learning in natural and artificial agents. Trends in Neurosciences, 46(3):199\u2013210, 2023.   \nElizabeth Gardner and Bernard Derrida. Three unfinished works on the optimal storage capacity of networks. Journal of Physics A: Mathematical and General, 22(12):1983, 1989.   \nRaia Hadsell, Dushyant Rao, Andrei A Rusu, and Razvan Pascanu. Embracing change: Continual learning in deep neural networks. Trends in cognitive sciences, 24(12):1028\u20131040, 2020.   \nMohammad Haghighat, Saman Zonouz, and Mohamed Abdel-Mottaleb. Cloudid: Trustworthy cloud-based and cross-enterprise biometric identification. Expert Systems with Applications, 42(21):7905\u20137916, 2015. URL https://github.com/mhaghighat/gabor. BSD 2-clause license.   \nFengxiang He, Tongliang Liu, and Dacheng Tao. Control batch size and learning rate to generalize well: Theoretical and empirical evidence. Advances in neural information processing systems, 32, 2019.   \nPeter C Humphreys, Kayvon Daie, Karel Svoboda, Matthew Botvinick, and Timothy P Lillicrap. Bci learning phenomena can be explained by gradient-based optimization. bioRxiv, pages 2022\u201312, 2022.   \nZiwei Ji and Matus Telgarsky. Directional convergence and alignment in deep learning. Advances in Neural Information Processing Systems, 33:17176\u201317186, 2020.   \nDhireesha Kudithipudi, Mario Aguilar-Simon, Jonathan Babb, Maxim Bazhenov, Douglas Blackiston, Josh Bongard, Andrew P Brna, Suraj Chakravarthi Raja, Nick Cheney, Jeff Clune, et al. Biological underpinnings for lifelong learning machines. Nature Machine Intelligence, 4(3):196\u2013210, 2022.   \nQianxiao Li, Cheng Tai, and E Weinan. Stochastic modified equations and dynamics of stochastic gradient algorithms i: Mathematical foundations. Journal of Machine Learning Research, 20(40):1\u201347, 2019.   \nZhiyuan Li, Sadhika Malladi, and Sanjeev Arora. On the validity of modeling sgd with stochastic differential equations (sdes). Advances in Neural Information Processing Systems, 34:12712\u201312725, 2021.   \nSukbin Lim, Jillian L McKee, Luke Woloszyn, Yali Amit, David J Freedman, David L Sheinberg, and Nicolas Brunel. Inferring learning rules from distributions of firing rates in cortical neurons. Nature neuroscience, 18 (12):1804\u20131810, 2015.   \nYash Mehta, Danil Tyulmankov, Adithya E Rajagopalan, Glenn C Turner, James E Fitzgerald, and Jan Funke. Model based inference of synaptic plasticity rules. bioRxiv, pages 2023\u201312, 2023.   \nFrancesca Mignacco, Florent Krzakala, Pierfrancesco Urbani, and Lenka Zdeborov\u00e1. Dynamical mean-field theory for stochastic gradient descent in gaussian mixture classification. Advances in Neural Information Processing Systems, 33:9540\u20139550, 2020.   \nJames M Murray and G Sean Escola. Remembrance of things practiced with fast and slow learning in cortical and subcortical pathways. Nature Communications, 11(1):1\u201312, 2020.   \nAran Nayebi, Sanjana Srivastava, Surya Ganguli, and Daniel L Yamins. Identifying learning rules from neural network observables. Advances in Neural Information Processing Systems, 33:2639\u20132650, 2020.   \nDonald Bruce Owen. A table of normal integrals. Communications in Statistics-Simulation and Computation, 9 (4):389\u2013419, 1980. ", "page_idx": 9}, {"type": "text", "text": "Nishil Patel, Sebastian Lee, Stefano Sarao Mannelli, Sebastian Goldt, and Andrew M Saxe. The rl perceptron: Dynamics of policy learning in high dimensions. In ICLR 2023 Workshop on Physics for Machine Learning, 2023. ", "page_idx": 10}, {"type": "text", "text": "Alexandre Payeur, Amy L Orsborn, and Guillaume Lajoie. Neural manifolds and learning regimes in neuralinterface tasks. bioRxiv, pages 2023\u201303, 2023. ", "page_idx": 10}, {"type": "text", "text": "Jacob Portes, Christian Schmid, and James M Murray. Distinguishing learning rules with brain machine interfaces. Advances in neural information processing systems, 35:25937\u201325950, 2022. ", "page_idx": 10}, {"type": "text", "text": "Maria Refinetti, Alessandro Ingrosso, and Sebastian Goldt. Neural networks trained with sgd learn distributions of increasing complexity. In International Conference on Machine Learning, pages 28843\u201328863. PMLR, 2023. ", "page_idx": 10}, {"type": "text", "text": "Hannes Risken. The Fokker-Planck Equation. Springer, 1996. ", "page_idx": 10}, {"type": "text", "text": "Andrew M Saxe, James L McClelland, and Surya Ganguli. A mathematical theory of semantic development in deep neural networks. Proceedings of the National Academy of Sciences, 116(23):11537\u201311546, 2019. ", "page_idx": 10}, {"type": "text", "text": "Hyunjune Sebastian Seung, Haim Sompolinsky, and Naftali Tishby. Statistical mechanics of learning from examples. Physical review A, 45(8):6056, 1992. ", "page_idx": 10}, {"type": "text", "text": "Richard S Sutton and Andrew G Barto. Reinforcement learning: An introduction. MIT press, 2018. ", "page_idx": 10}, {"type": "text", "text": "Pauli Virtanen, Ralf Gommers, Travis E. Oliphant, Matt Haberland, Tyler Reddy, David Cournapeau, Evgeni Burovski, Pearu Peterson, Warren Weckesser, Jonathan Bright, St\u00e9fan J. van der Walt, Matthew Brett, Joshua Wilson, K. Jarrod Millman, Nikolay Mayorov, Andrew R. J. Nelson, Eric Jones, Robert Kern, Eric Larson, C J Carey, \u02d9Ilhan Polat, Yu Feng, Eric W. Moore, Jake VanderPlas, Denis Laxalde, Josef Perktold, Robert Cimrman, Ian Henriksen, E. A. Quintero, Charles R. Harris, Anne M. Archibald, Ant\u00f4nio H. Ribeiro, Fabian Pedregosa, Paul van Mulbregt, and SciPy 1.0 Contributors. SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python. Nature Methods, 17:261\u2013272, 2020. doi: 10.1038/s41592-019-0686-2. ", "page_idx": 10}, {"type": "text", "text": "Justin Werfel, Xiaohui Xie, and H Seung. Learning curves for stochastic gradient descent in linear feedforward networks. Advances in neural information processing systems, 16, 2003. ", "page_idx": 10}, {"type": "text", "text": "Ronald J Williams. Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine learning, 8:229\u2013256, 1992. ", "page_idx": 10}, {"type": "text", "text": "Sho Yaida. Fluctuation-dissipation relations for stochastic gradient descent. In International Conference on Learning Representations, 2018. ", "page_idx": 10}, {"type": "text", "text": "Paul Z\u00fcge, Christian Klos, and Raoul-Martin Memmesheimer. Weight versus node perturbation learning in temporally extended tasks: Weight perturbation often performs similarly or better. Physical Review X, 13(2): 021006, 2023. ", "page_idx": 10}, {"type": "text", "text": "Derivation of the general evolution equations ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "In this section, we derive equations (10) and (11) from (9). We start with ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\frac{\\partial p}{\\partial t}(\\mathbf{w},t)=-\\sum_{j}\\frac{\\partial}{\\partial w_{j}}\\left(p(\\mathbf{w},t)\\langle f_{j}\\rangle_{L}\\right),\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "multiply both sides by $w_{i}$ and integrate over w. The left-hand side simply becomes ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\frac{d}{d t}\\langle w_{i}\\rangle_{\\mathbf{w}}.\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "For the right-hand side, we can use integration by parts to get ", "page_idx": 11}, {"type": "equation", "text": "$$\n-\\int d\\mathbf{w}\\,w_{i}\\sum_{j}\\frac{\\partial}{\\partial w_{j}}\\left(p(\\mathbf{w},t)\\langle f_{j}\\rangle_{L}\\right)=\\int d\\mathbf{w}\\,p(\\mathbf{w},t)\\langle f_{i}\\rangle_{L}=\\langle\\langle f_{i}\\rangle_{L}(\\mathbf{w})\\rangle_{\\mathbf{w}}.\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "To evaluate this expectation value, we introduce the mean-zero weight $\\hat{\\mathbf{w}}=\\mathbf{w}-\\langle\\mathbf{w}\\rangle$ , which describes the fluctuations of w around its mean. If we expand $\\langle f_{i}\\rangle_{L}(\\mathbf{w})$ to second order in $\\hat{\\bf w}$ , (30) becomes ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle f_{i}\\rangle_{L}(\\mathbf{w})\\rangle_{\\mathbf{w}}=\\biggr\\langle\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\displaystyle\\sum_{j}\\hat{w}_{j}\\partial_{j}\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\displaystyle\\frac{1}{2}\\sum_{j,k}\\hat{w}_{j}\\hat{w}_{k}\\partial_{j}\\partial_{k}\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\mathcal{O}(\\hat{\\mathbf{w}}^{3})\\biggr\\rangle_{\\mathbf{w}}}\\\\ &{\\qquad\\qquad=\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\displaystyle\\sum_{j}\\langle\\hat{w}_{j}\\rangle_{\\mathbf{w}}\\partial_{j}\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\displaystyle\\frac{1}{2}\\sum_{j,k}\\langle\\hat{w}_{j}\\hat{w}_{k}\\rangle_{\\mathbf{w}}\\partial_{j}\\partial_{k}\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\mathcal{O}(\\hat{\\mathbf{w}}^{3})}\\\\ &{\\qquad\\qquad=\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\displaystyle\\frac{1}{2}\\sum_{j,k}\\mathrm{Cov}(w_{k},w_{j})\\partial_{j}\\partial_{k}\\langle f_{i}\\rangle_{L}(\\langle\\mathbf{w}\\rangle)+\\mathcal{O}(\\hat{\\mathbf{w}}^{3}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "The derivation of (11) follows analogously. ", "page_idx": 11}, {"type": "text", "text": "Derivation of explicit SL and RL flow equations ", "text_level": 1, "page_idx": 11}, {"type": "text", "text": "In order to analyze (10) and (11), we must evaluate the following expectation values: ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}\\quad\\mathrm{and}\\quad\\langle\\phi^{2}(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "with $\\begin{array}{r}{\\phi(x)=\\frac{1}{2}\\left(1+\\mathrm{Erf}\\left(\\frac{\\sqrt{\\pi}}{4}x\\right)\\right)}\\end{array}$ . Without loss of generality, we will calculate these integrals in a coordinate system where $\\mathbf{w}=w_{1}\\mathbf{e}_{1}$ . We can then factorize $p(x_{1},x_{2},.\\dotsc)=p_{m}(x_{1})p_{c}(x_{2},.\\dotsc|x_{1})$ . The marginal distribution is Gaussian with $\\mu_{m}=\\mu_{1}$ and $\\Sigma_{m}=\\Sigma_{11}$ , and the conditional distribution is also normal with $\\begin{array}{r}{(\\mu_{c})_{i}=\\mu_{i}+\\frac{1}{\\Sigma_{11}}\\Sigma_{1i}(\\dot{x}_{1}-\\dot{\\mu_{1}})}\\end{array}$ , and $\\begin{array}{r}{(\\ddot{\\Sigma_{c}})_{i j}=\\dot{\\Sigma}_{i j}-\\frac{1}{\\Sigma_{11}}\\Sigma_{1i}\\Sigma_{1j}}\\end{array}$ . ", "page_idx": 11}, {"type": "text", "text": "Furthermore, to simplify notations, we introduce $\\tilde{\\mathbf{w}}=\\mathbf{w}\\cdot\\sqrt{\\pi/8}$ , as well as the quantities ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{a=\\pmb{\\mu}\\cdot\\tilde{\\mathbf{w}},}\\\\ &{b=\\sqrt{\\tilde{\\mathbf{w}}^{T}\\Sigma\\tilde{\\mathbf{w}}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "Let\u2019s first calculate \u27e8\u03d5(w \u00b7 x)\u27e9x\u223cN(\u00b5,\u03a3): ", "page_idx": 11}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}=\\langle\\phi(w_{1}x_{1})\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}}\\\\ &{\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ =\\frac{1}{\\sqrt{2\\pi\\Sigma_{11}}}\\displaystyle\\int_{\\mathbb R}d x_{1}e^{-\\frac{1}{2}(x_{1}-\\mu_{1})^{2}/\\Sigma_{11}}\\phi(w_{1}x_{1})}\\\\ &{\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ =\\frac{1}{\\sqrt{2\\pi}}\\displaystyle\\int_{\\mathbb R}d u\\,e^{-u^{2}/2}\\phi\\left(w_{1}(\\mu_{1}+u\\sqrt{\\Sigma_{11}})\\right)}\\\\ &{\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ =\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 11}, {"type": "text", "text": "where $\\Phi(x)\\,=\\,{\\textstyle{\\frac{1}{2}}}\\,+\\,{\\textstyle{\\frac{1}{2}}}\\,\\mathrm{Erf}(x/\\sqrt{2})$ is the cumulative distribution function of the standard normal distribution. To evaluate the last line of this and the following integrals, we used the reference [Owen, 1980]. ", "page_idx": 11}, {"type": "text", "text": "For the integral $\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\pmb{\\mu},\\pmb{\\Sigma})}$ , we first do the calculation for $i=1$ : ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{1}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\mathbf{\\Sigma})}=\\langle\\phi(w_{1}x_{1})x_{1}\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\mathbf{\\Sigma})}}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\frac{1}{\\sqrt{2\\pi\\Sigma_{11}}}\\int_{\\mathbb{R}}d x_{1}e^{-\\frac{1}{2}(x_{1}-\\mu_{1})^{2}/\\Sigma_{11}}\\phi(w_{1}x_{1})\\,x_{1}}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\frac{1}{\\sqrt{2\\pi}}\\int_{\\mathbb{R}}d u\\,e^{-u^{2}/2}\\phi\\left(w_{1}(\\mu_{1}+u\\sqrt{\\Sigma_{11}})\\right)(\\mu_{1}+u\\sqrt{\\Sigma_{11}})}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\mu_{1}\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}}\\right)+\\frac{1}{\\sqrt{2\\pi}}\\frac{\\sum_{11}\\tilde{w}_{1}}{\\sqrt{1+b^{2}}}e^{-\\frac{a^{2}}{2(1+b^{2})}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "For $i\\neq1$ , we get ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\rangle_{\\mathbf{x}\\sim N(\\mu,\\Sigma)}=\\langle\\phi(w_{1}x_{1})x_{i}\\rangle_{\\mathbf{x}\\sim N(\\mu,\\Sigma)}}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad=\\frac{1}{\\sqrt{2\\pi\\sum_{11}}}\\int_{\\mathbb R}d x_{1}e^{-\\frac{1}{2}(x_{1}-\\mu_{1})^{2}/\\Sigma_{11}}\\phi(w_{1}x_{1})\\,\\left(\\mu_{i}+\\frac{\\sum_{1i}}{\\sum_{11}}(x_{1}-\\mu_{1})\\right)}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\quad=\\mu_{i}\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}}\\right)+\\frac{1}{\\sqrt{2\\pi}}\\frac{\\sum_{i1}\\tilde{w}_{1}}{\\sqrt{1+b^{2}}}e^{-\\frac{a^{2}}{2(1+b^{2})}}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Thus, for general $i$ and w we can write ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\left\\langle\\phi(\\mathbf{w}\\cdot\\mathbf{x})x_{i}\\right\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\mathbf{Z})}=\\mu_{i}\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}}\\right)+\\frac{1}{\\sqrt{2\\pi}}\\frac{(\\Sigma\\tilde{\\mathbf{w}})_{i}}{\\sqrt{1+b^{2}}}e^{-\\frac{a^{2}}{2(1+b^{2})}}.\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "We next calculate ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\left\\langle\\phi^{2}(\\mathbf{w}\\cdot\\mathbf{x})\\right\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}=\\left\\langle\\phi^{2}(w_{1}x_{1})\\right\\rangle_{\\mathbf{x}\\sim\\mathcal{N}(\\mu,\\Sigma)}}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\frac{1}{\\sqrt{2\\pi\\sum_{11}}}\\displaystyle\\int_{\\mathbb{R}}d x_{1}e^{-\\frac{1}{2}(x_{1}-\\mu_{1})^{2}/\\Sigma_{11}}\\phi^{2}(w_{1}x_{1})}\\\\ &{\\qquad\\qquad\\qquad\\qquad=\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}}\\right)-2T\\left(\\frac{a}{\\sqrt{1+b^{2}}},\\frac{1}{\\sqrt{1+2b^{2}}}\\right),}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "where $T$ stands for Owen\u2019s $T$ function. ", "page_idx": 12}, {"type": "text", "text": "Analogously, we can calculate ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{l}{{\\displaystyle\\langle\\phi^{2}({\\bf w}\\cdot{\\bf x})x_{i}\\rangle_{{\\bf x}\\sim{\\cal N}(\\mu,{\\bf\\Sigma})}=}\\ ~}\\\\ {{\\displaystyle\\mu_{i}\\langle\\phi^{2}({\\bf w}\\cdot{\\bf x})\\rangle+\\frac{2(\\Sigma\\tilde{\\bf w})_{i}}{\\sqrt{2\\pi}\\sqrt{1+b^{2}}}\\Phi\\left(\\frac{a}{\\sqrt{1+b^{2}}\\sqrt{1+2b^{2}}}\\right)e^{-\\frac{a^{2}}{2(1+b^{2})}}.}}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Fixed point analysis ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "In this section, we analyze the fixed points of the systems of equations (18) & (19) for $\\mathrm{SL}$ and (22) & (23) for RL. We will first show the intuitive result that any fixed point $\\left\\langle\\mathbf{w}^{*}\\right\\rangle$ is maximally aligned with $\\pmb{\\mu}$ , i.e. $\\langle\\mathbf{w}^{*}\\rangle\\cdot\\pmb{\\mu}=|\\pmb{\\mu}|\\cdot|\\langle\\mathbf{w}^{*}\\rangle|$ , as long as $\\sigma>0$ . For simplicity, we set the regularization parameter $\\lambda=0$ . Note that for both SL and RL, the flow equations take the form ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{l}{\\displaystyle\\frac{d}{d t}\\langle\\mathbf{w}\\rangle\\cdot{\\boldsymbol{\\mu}}=|{\\boldsymbol{\\mu}}|^{2}f_{1}({\\boldsymbol{\\mu}},\\mathbf{w},\\sigma)-{\\boldsymbol{\\mu}}\\cdot\\langle\\mathbf{w}\\rangle f_{2}({\\boldsymbol{\\mu}},\\mathbf{w},\\sigma),}\\\\ {\\displaystyle\\frac{1}{2}\\frac{d}{d t}|\\langle\\mathbf{w}\\rangle|^{2}={\\boldsymbol{\\mu}}\\cdot\\langle\\mathbf{w}\\rangle f_{1}({\\boldsymbol{\\mu}},\\mathbf{w},\\sigma)-|\\langle\\mathbf{w}\\rangle|^{2}f_{2}({\\boldsymbol{\\mu}},\\mathbf{w},\\sigma)}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "for some functions $f_{1}$ and $f_{2}>0$ . Also, it\u2019s easy to see that $\\left\\langle\\mathbf{w}^{*}\\right\\rangle\\cdot\\pmb{\\mu}>0$ . Thus, a fixed point $\\left\\langle\\mathbf{w}^{*}\\right\\rangle$ satisfies ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\frac{f_{1}}{f_{2}}=\\frac{\\pmb{\\mu}\\cdot\\left\\langle\\mathbf{w}^{*}\\right\\rangle}{|\\pmb{\\mu}|^{2}},}\\\\ {\\frac{f_{1}}{f_{2}}=\\frac{|\\left\\langle\\mathbf{w}^{*}\\right\\rangle|^{2}}{\\pmb{\\mu}\\cdot\\left\\langle\\mathbf{w}^{*}\\right\\rangle}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Thus, setting these equal to one another, we find that $\\langle\\mathbf{w}^{*}\\rangle\\cdot\\pmb{\\mu}=|\\pmb{\\mu}|\\cdot|\\langle\\mathbf{w}^{*}\\rangle|$ and the two equations reduce to a single equation for $|\\langle\\mathbf{w}^{*}\\rangle|$ . ", "page_idx": 13}, {"type": "text", "text": "Assume without loss of generality that $|\\pmb{\\mu}|=1$ . For supervised learning, (19) then implies that ", "page_idx": 13}, {"type": "equation", "text": "$$\n0=\\frac{|\\langle\\mathbf{w}^{*}\\rangle|}{2}\\mathrm{Erfc}\\left(\\frac{|\\langle\\mathbf{w}^{*}\\rangle|\\sqrt{\\pi}}{\\sqrt{16+2\\pi\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}}\\right)-\\frac{1}{4}\\frac{\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}{\\sqrt{1+\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}\\pi/8}}e^{-\\frac{|\\langle\\mathbf{w}^{*}\\rangle|^{2}\\pi}{16+2\\pi\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}},\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "where $\\mathrm{Erfc}(z)=1-\\mathrm{Erf}(z)$ is the complementary error function. ", "page_idx": 13}, {"type": "text", "text": "We can factor out the common exponential asymptotics of both terms to get ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{0=e^{-\\frac{|\\langle\\mathbf{w}^{*}\\rangle|^{2}\\pi}{16+2\\pi\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}}\\Bigg(e^{+\\frac{|\\langle\\mathbf{w}^{*}\\rangle|^{2}\\pi}{16+2\\pi\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}}\\frac{1}{2}\\mathrm{Erfc}\\left(\\frac{|\\langle\\mathbf{w}^{*}\\rangle|\\sqrt{\\pi}}{\\sqrt{16+2\\pi\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}}}\\right)}\\\\ &{\\phantom{=}-\\frac{1}{4}\\frac{\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|}{\\sqrt{1+\\sigma^{2}|\\langle\\mathbf{w}^{*}\\rangle|^{2}\\pi/8}}\\Bigg).}\\end{array}\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Of the two terms in the parentheses, the first term starts at $\\frac{1}{2}$ for $|\\langle\\mathbf{w}^{*}\\rangle|=0$ and is monotonically decreasing to the value $\\begin{array}{r}{\\frac{1}{2}e^{1/2\\sigma^{2}}\\mathrm{Erfc}(\\frac{1}{\\sqrt{2}\\sigma})\\approx\\frac{1}{\\sqrt{2\\pi}}(\\sigma-\\sigma^{3}+\\stackrel{\\cdot}{\\mathcal{O}}(\\sigma^{5}))}\\end{array}$ , while the second term starts at 0 and increases to the larger value \u221a\u03c32\u03c0. Thus, there is a unique fixed point. For RL, uniqueness of the fixed point can be shown using an analogous argument. ", "page_idx": 13}, {"type": "text", "text": "This fixed point $\\langle{w^{*}}\\rangle$ is stable, because for SL, (14) implies that $\\begin{array}{r}{\\frac{d}{d t}\\langle w\\rangle=-\\nabla_{w}\\langle\\mathcal{L}\\rangle_{L}}\\end{array}$ , where $\\mathcal{L}$ is the cross-entropy loss and $\\langle\\cdot\\rangle_{L}$ is the average over the input distribution. Thus, $\\langle{\\mathcal{L}}\\rangle_{L}$ is a Lyapunov function for the dynamical system. For RL, the same argument holds by the policy-gradient theorem, where $\\langle\\mathcal{L}\\rangle_{L}$ additionally includes an average over the output noise. ", "page_idx": 13}, {"type": "text", "text": "Note that, for $\\lambda=\\sigma=0$ , although $|\\langle\\mathbf{w}\\rangle|$ diverges, a calculation of $\\begin{array}{r}{\\frac{d}{d t}\\log\\frac{(\\langle\\mathbf{w}\\rangle\\cdot\\pmb{\\mu})^{2}}{|\\pmb{\\mu}|^{2}|\\langle\\mathbf{w}\\rangle|^{2}}}\\end{array}$ shows that the alignment between $\\pmb{\\mu}$ and still converges to 1. This result is consistent with those of and Telgarsky [2020]. ", "page_idx": 13}, {"type": "text", "text": "MNIST details ", "text_level": 1, "page_idx": 13}, {"type": "image", "img_path": "doaJTihgIZ/tmp/4de720dd4b15dcc80cb553c5255f564adb91140ff5241164a1958b0bdcd76210.jpg", "img_caption": ["Figure 7: Comparison of the theory with training on raw MNIST. A: Comparison of the empirical test classification accuracy with the theoretical prediction. B: Just like for the Gabor-filtered inputs, the theory accurately captures non-trivial ongoing learning dynamics. "], "img_footnote": [], "page_idx": 13}, {"type": "text", "text": "When applying our theory to the MNIST dataset, we compare SGD applied to actual data (orange curves) with calculated SGD curves from our theory (blue curves). In the main text, we preprocess the data by convolving raw pixel values with a bank of Gabor fliters to approximate a more realistic scenario where the binary classifier appears at the end of a convolutional neural network. For the plots in Figure 7, we use raw pixel values to demonstrate that our evolution equations (15) work in general settings without relying on Gabor filter representation. In both cases, we globally translate all input vectors such that the dataset\u2019s mean is zero. We directly evaluate test set accuracy (Figures 5B and 7A) and the correlation of w at each SGD step with the mean $\\pmb{\\mu}$ of digit \u20191\u2019 (Figures 5C and 7B)). To calculate the theoretical accuracy curve, we first numerically solve the differential equations (15) for the mean $\\pmb{\\mu}$ and covariances $\\Sigma_{0,1}$ obtained from the empirical dataset to derive $\\mathbf{w}(t)$ . We then integrate two multivariate normal distributions with these $\\pmb{\\mu}$ and $\\Sigma$ values in the half-spaces bounded by $\\mathbf{w}(t)$ (expressible as an error function) and plot the result as the theoretical accuracy curve in Figures 5B and 7A. The tSNE embedding in Figure 5A is included for illustrative purposes only and is not used in calculations. ", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "Experiments ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "The numerical code implementing the model and performing the analyses was mostly written in JAX [Bradbury et al., 2018], as well as Wolfram Mathematica and SciPy [Virtanen et al., 2020]. For Fig. 2, the flow fields were plotted for the limit of zero input noise and a regularization parameter of $\\lambda=0.1$ . The learning curves are plotted for $\\lambda=0$ and $\\bar{\\Sigma}=\\sigma^{2}\\mathbb{I}$ , with $\\sigma=0.1$ and $\\sigma=1$ . As in all other figures besides Fig. 5, we set $|\\pmb{\\mu}|=1$ . Each experiment was repeated for 10 runs with different random seeds, with the standard deviation indicated as a (barely visible) shaded region. The curve of $|\\langle\\mathbf{w}^{*}\\rangle|$ is plotted for the limit of zero input noise. For Fig. 3, we numerically integrated (10) with $\\lambda=0$ . For the total variance plotted in Fig. 4, we set $\\lambda=0.1$ and integrate the differential equations (11) numerically. For Fig. 5, the Gabor-filtered inputs were created using [Haghighat et al., 2015] with default parameters. The perceptron was trained using SGD with a logistic sigmoid output, and the orange curve in panel B shows test accuracy. The training was repeated 10 times with shuffled data. We set $\\lambda=1$ . For the forgetting curves in Fig. 6, we set $\\lambda=10$ and the learning rate to $\\eta=10^{-2}$ . The curves shown are averages over 50 different random initializations each. The input dimension is set to $N=500$ . For all other simulations, the learning rate was set to $\\eta=10^{-3}$ . The computations were performed on an NVIDIA Titan $\\mathrm{Xp}$ GPU, with runtimes of at most a few minutes. ", "page_idx": 14}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: As we claim in the abstract, we study the learning dynamics of a nonlinear perceptron analytically, and apply the results to better understand the effects of the input distibution, learning rules and an actual perceptron training on MNIST. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 15}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: We have included a paragraph in the Discussion section that describes the most-significant limitations of our approach. ", "page_idx": 15}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 15}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: All of our mathematical results are based on clearly stated assumptions, and the steps for obtaining the results are described sufficiently thoroughly that a reader should be able to reproduce them. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 16}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 16}, {"type": "text", "text": "Justification: The mathematical equations on which our empirical results are based are provided in the text, and all parameters used for producing the results are stated in the figure captions or appendix. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 16}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: All the source code files can be found in the supplemental materials, which should allow a reader to straightforwardly recreate all experimental results. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 17}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: All parameters used for producing the results are stated in the figure captions or appendix. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 17}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The empirical curves in all relevant figures include shading to represent standard deviations. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 17}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 18}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The modest compute resources required for our experiments are described in the appendix. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 18}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The research conducted in this paper conforms with the Code of Ethics in all respects. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 18}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: This work is foundational research, and we do not foresee any direct societal impacts that could potentially arise from it. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 19}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: Our work poses no such risks. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 19}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The only non-standard external code we used is [Haghighat et al., 2015] for the extraction of Gabor filters. As mentioned in the citation, the code is released under a BSD clause-2 license. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 20}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 20}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 20}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research on human subjects. Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. ", "page_idx": 20}, {"type": "text", "text": "\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 21}]