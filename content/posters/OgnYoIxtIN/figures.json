[{"figure_path": "OgnYoIxtIN/figures/figures_1_1.jpg", "caption": "Figure 1: An illustration of our approach. The training phase uses a set of datasets D to train basis functions {g1,..., gk} to span F. The zero-shot phase uses online data to identify the coefficients for a new function, which can be estimated as a linear combination of the basis functions.", "description": "This figure illustrates the two phases of the proposed approach: offline training and zero-shot prediction.  In the training phase, a set of datasets D is used to train a set of basis functions (g1,...,gk) which span the function space F.  These basis functions are parameterized by neural ODEs. In the zero-shot prediction phase, online data is used to identify the coefficients for a new function f, which is then approximated as a linear combination of the pre-trained basis functions. This process does not require retraining.", "section": "1 Introduction"}, {"figure_path": "OgnYoIxtIN/figures/figures_5_1.jpg", "caption": "Figure 2: The approximated dynamics for different Van der Pol systems, where the parameter \u03bc is varied. This plot shows that a NODE can only fit a single Van der Pol system, whereas FE + NODE + Res can fit a space of Van der Pol systems from 5000 example data points.", "description": "This figure compares the performance of different methods for approximating the dynamics of Van der Pol oscillators with varying parameters (\u03bc).  The top row shows the results for different values of \u03bc using a Neural ODE (NODE) method, demonstrating the NODE's inability to generalize across different parameter settings. The bottom row displays results obtained using the proposed method (Function Encoder + Neural ODE + Residuals, or FE + NODE + Res), showcasing its ability to capture a broader space of dynamical systems. The dashed black lines represent the ground truth trajectories, highlighting the superior accuracy and generalization capability of the FE + NODE + Res method.", "section": "4.1 Visualization on a Van der Pol Oscillator"}, {"figure_path": "OgnYoIxtIN/figures/figures_6_1.jpg", "caption": "Figure 3: Model performance on predicting the dynamics of MuJoCo robotics environments with hidden parameters. 200 example data points are given to identify dynamics. The results show that FE + NODE + Res. makes accurate, long-horizon predictions even in the presence of hidden parameters. Evaluation is over 5 seeds, shaded regions show the first and third quartiles around the median.", "description": "This figure compares the performance of different methods (NODE, FE + Res., FE + NODE, FE + NODE + Res., and Oracle) on predicting the dynamics of two MuJoCo robotics environments (Half Cheetah and Ant) with hidden parameters.  The plots show 1-step and k-step Mean Squared Error (MSE) over gradient updates and lookahead steps. The FE + NODE + Res method demonstrates superior performance in long-horizon prediction accuracy, even with limited data and hidden parameters. The shaded regions represent the uncertainty around the median performance across multiple trials.", "section": "Long-Horizon Prediction on MuJoCo Environments"}, {"figure_path": "OgnYoIxtIN/figures/figures_7_1.jpg", "caption": "Figure 3: Model performance on predicting the dynamics of MuJoCo robotics environments with hidden parameters. 200 example data points are given to identify dynamics. The results show that FE + NODE + Res. makes accurate, long-horizon predictions even in the presence of hidden parameters. Evaluation is over 5 seeds, shaded regions show the first and third quartiles around the median.", "description": "This figure presents a comparison of different model's performance on predicting the dynamics of two MuJoCo environments (Half-Cheetah and Ant) with hidden parameters.  The models being compared are NODE, FE+Res, FE+NODE, and FE+NODE+Res.  The x-axis represents the number of gradient updates or lookahead steps, and the y-axis represents the 1-step or k-step Mean Squared Error (MSE). The shaded regions indicate the interquartile range (IQR) across 5 different trials, showcasing the model's robustness and predictive accuracy. The figure demonstrates that the FE+NODE+Res model consistently outperforms other models, especially in terms of long-horizon prediction accuracy (k-step MSE).", "section": "Long-Horizon Prediction on MuJoCo Environments"}, {"figure_path": "OgnYoIxtIN/figures/figures_7_2.jpg", "caption": "Figure 5: Qualitative analysis of the difference in control between NODEs and our approach. Two trajectories with the same initial position but different masses are shown. NODE is unaware of the mass, and so its z position requires constant correction. In contrast, FE + NODE (+Res) accounts for the mass through the coefficients, meaning it is more accurate and requires fewer corrections.", "description": "This figure compares the performance of Neural ODEs (NODE) and the proposed Function Encoder + Neural ODE (+Res) approach in controlling a quadrotor's altitude (z-axis). Two trajectories are shown, one with a low mass and one with a high mass. The NODE approach, unaware of the mass, demonstrates significant oscillations and requires frequent corrections to maintain altitude. In contrast, the FE + NODE (+Res) approach accurately tracks the desired altitude in both scenarios, showing robustness against variations in system parameters.", "section": "4.3 Realistic Robotics Experiments and Control of a Quadrotor System"}, {"figure_path": "OgnYoIxtIN/figures/figures_14_1.jpg", "caption": "Figure 6: We ablate the effect of the number of basis functions (k) on the performance of the learned model. Results are shown for the FE + NODE + Res. algorithm applied to the Half Cheetah environment. The results indicate the the proposed approach is insensitive to the number of basis functions around k = 100, while performance eventually decays as k approaches 0.", "description": "This figure shows the ablation study on the number of basis functions used in the FE + NODE + Res. model for the Half Cheetah environment.  The left panel shows example frames from the Half Cheetah environment. The middle panel is a line plot showing that the 1-step loss decreases as the number of basis functions increases but plateaus around k=100.  The right panel is a shaded area plot showing that the MSE over time steps is low when using approximately 100 basis functions but increases if too few or too many are used.", "section": "G.1 Number of Basis Functions"}, {"figure_path": "OgnYoIxtIN/figures/figures_14_2.jpg", "caption": "Figure 7: We ablate the effect of the number of example data points on the performance of the learned model. Results are shown for the FE + NODE + Res. algorithm applied to the Half Cheetah environment. The results indicate that the proposed approach is insensitive to increasing example dataset sizes, which suggests that 200 data points is sufficient for the coefficients to converge.", "description": "This figure shows the ablation study on the number of example data points used in the training phase of the proposed method, FE + NODE + Res, on the Half Cheetah environment.  The plot demonstrates the model's robustness to the amount of training data; even with just 200 data points, the model achieves good performance. Increasing the number of data points does not improve the performance significantly, indicating that 200 data points is sufficient to train the model effectively.", "section": "G.2 Number of Example Data Points"}, {"figure_path": "OgnYoIxtIN/figures/figures_14_3.jpg", "caption": "Figure 2: The approximated dynamics for different Van der Pol systems, where the parameter \u03bc is varied. This plot shows that a NODE can only fit a single Van der Pol system, whereas FE + NODE + Res can fit a space of Van der Pol systems from 5000 example data points.", "description": "This figure compares the performance of Neural ODEs (NODE) and Function Encoders with Neural ODEs and Residuals (FE + NODE + Res) on approximating the dynamics of Van der Pol oscillators with varying parameters (\u03bc).  NODE struggles to generalize across different \u03bc values, while FE + NODE + Res effectively learns a representation that captures the behavior across a wide range of \u03bc values. The plot shows several trajectories for each method and different \u03bc values, illustrating FE + NODE + Res's superior ability to accurately model different dynamics without retraining.", "section": "4.1 Visualization on a Van der Pol Oscillator"}]