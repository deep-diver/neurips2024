[{"figure_path": "483IPG0HWL/tables/tables_4_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of different local search (LS) methods, including the optimality gap and the per-instance execution time for solving the Traveling Salesman Problem (TSP) with different problem sizes (TSP20, TSP50, TSP100, TSP200).  The methods compared include various types of Guided Local Search (GLS) approaches, a reinforcement learning approach (NeuOpt), and the proposed method (KGLS-ReEvo).  The results show the improvement in solution quality and efficiency achieved by the proposed approach.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_6_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of various local search (LS) methods for solving the Traveling Salesman Problem (TSP).  The methods compared include traditional GLS, several GLS variants incorporating machine learning (GNNGLS, NeuralGLS+, EoH), and a state-of-the-art neural combinatorial optimization (NCO) method (NeuOpt). For each method, the table reports the optimality gap (percentage difference between the solution found and the optimal solution) and the average per-instance execution time. The results demonstrate the effectiveness of the ReEvo-enhanced GLS (KGLS-ReEvo) in achieving superior performance and sample efficiency.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_6_2.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants for solving the Traveling Salesman Problem (TSP).  The methods compared include several state-of-the-art (SOTA) learning-based and neural local search approaches, as well as the classic Guided Local Search (GLS) and a new GLS variant enhanced with ReEvo-generated heuristics (KGLS-ReEvo). The results are reported in terms of optimality gap (the difference between the solution obtained and the optimal solution) and execution time for each instance of the TSP with different sizes (TSP20, TSP50, TSP100, and TSP200).", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_7_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants, including the proposed method KGLS-ReEvo, on the TSP problem.  The comparison includes optimality gap (percentage difference from optimal solution) and per-instance execution time. It shows how KGLS-ReEvo improves upon the baseline KGLS and outperforms other state-of-the-art (SOTA) methods. Notably, it highlights that KGLS-ReEvo uses a single heuristic across problem sizes, unlike other methods.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_7_2.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants, including the proposed KGLS-ReEvo method, on four different TSP problem instances.  The comparison includes optimality gaps (percentage difference from optimal solution) and per-instance execution time (in seconds).  It demonstrates the effectiveness of ReEvo in improving upon the original KGLS algorithm and outperforming state-of-the-art learning-based and neural GLS solvers.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_8_1.jpg", "caption": "Table 5: Ablation study of ReEvo components with both white and black-box prompting.", "description": "This table presents the ablation study results of ReEvo's components. It evaluates the performance of ReEvo with different components removed (no long-term reflections, no short-term reflections, no crossover, no mutation) and compares it with a baseline (LLM generations alone). The experiments are conducted under both white-box and black-box prompting settings.  The results show that all components contribute positively to ReEvo's performance and that it is more sample efficient than the LLM baseline.", "section": "6.3 Comparative evaluations"}, {"figure_path": "483IPG0HWL/tables/tables_20_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants for solving the traveling salesman problem (TSP).  The methods compared include several GLS variants (including the one enhanced with ReEvo), as well as a state-of-the-art neural combinatorial optimization (NCO) method.  The table reports the optimality gap (the difference between the solution found and the optimal solution) and the per-instance execution time for TSP instances of sizes 20, 50, 100, and 200 nodes.  The results demonstrate the improvement achieved by ReEvo over existing state-of-the-art methods.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_21_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of different local search variants for solving the Traveling Salesman Problem (TSP).  The methods compared include several GLS (Guided Local Search) variations, a learning-based method (NeuOpt), and the proposed KGLS-ReEvo method.  The table shows the optimality gap (percentage difference from the optimal solution) and per-instance execution time for TSP instances of sizes 20, 50, 100, and 200 nodes.  The results demonstrate the improved performance of KGLS-ReEvo over existing methods.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_21_2.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of different local search variants for solving the Traveling Salesman Problem (TSP).  The methods compared include several variations of Guided Local Search (GLS) incorporating machine learning and neural approaches, along with a classic GLS method. The table reports optimality gaps (the difference between the solution found and the optimal solution) and the per-instance execution time for four different problem sizes (TSP20, TSP50, TSP100, TSP200).  The results highlight the improved performance of the ReEvo-enhanced GLS (KGLS-ReEvo) compared to the baseline GLS and other state-of-the-art (SOTA) methods.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_22_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants for solving the traveling salesman problem (TSP).  The methods compared include several guided local search (GLS) approaches enhanced with reinforcement learning (RL) or large language models (LLMs), as well as a standard GLS method.  The table reports the optimality gap (the difference between the solution found and the optimal solution) and the per-instance execution time for various sizes of TSP instances (TSP20, TSP50, TSP100, and TSP200). This allows for a comparison of the effectiveness and efficiency of different heuristic search methods for combinatorial optimization problems. ", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_23_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants for solving the Traveling Salesman Problem (TSP) with varying sizes (TSP20, TSP50, TSP100, TSP200). The methods compared include NeuOpt (learning-based LS with reinforcement learning), GNNGLS and NeuralGLS+ (graph neural network-based GLS), EoH (a prior language hyper-heuristic approach), KGLS (a classical GLS), and KGLS-ReEvo (the proposed approach combining KGLS with penalty heuristics generated by ReEvo). For each method, the table reports the optimality gap (the percentage difference between the solution found and the optimal solution) and the average execution time per instance. The results demonstrate that KGLS-ReEvo achieves state-of-the-art performance, outperforming other methods across all problem sizes while being more sample-efficient.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_24_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of various local search (LS) methods for solving the Traveling Salesman Problem (TSP).  The methods include several variations of Guided Local Search (GLS) enhanced with different techniques (reinforcement learning, supervised learning, language hyper-heuristics), along with a state-of-the-art neural combinatorial optimization approach (NeuOpt). The table reports the optimality gap (percentage difference between the solution found and the optimal solution) and the per-instance execution time for four different TSP problem sizes (20, 50, 100, and 200 nodes). The results demonstrate the performance improvement achieved by the KGLS-ReEvo method, an integration of ReEvo with KGLS, which outperforms other state-of-the-art methods, particularly in larger problem instances.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_25_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search variants, including the proposed KGLS-ReEvo method, on solving TSP problems of varying sizes (TSP20, TSP50, TSP100, TSP200).  The metrics used are the optimality gap (percentage difference between the solution found and the optimal solution) and the per-instance execution time (in seconds).  The table allows for a comparison of the ReEvo method against state-of-the-art (SOTA) learning-based and neural methods for local search.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_25_2.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table compares the performance of different local search (LS) variants on solving the Traveling Salesman Problem (TSP) with varying problem sizes (TSP20, TSP50, TSP100, TSP200).  The methods compared include NeuOpt (a learning-based local search method), GNNGLS and NeuralGLS+ (graph neural network-enhanced GLS methods), EoH (an LLM-based hyper-heuristic method), KGLS (a standard GLS), and the proposed KGLS-ReEvo (KGLS enhanced with ReEvo-generated heuristics). The table reports the optimality gap (the difference between the solution found and the optimal solution, expressed as a percentage) and the per-instance execution time for each method and problem size. This demonstrates ReEvo's effectiveness in improving the optimality of local search algorithms.", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_25_3.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of different local search variants for solving the Traveling Salesman Problem (TSP).  The methods compared include several GLS (Guided Local Search) variations enhanced with different techniques (reinforcement learning, symbolic learning, Language Hyper-Heuristics), as well as a classic GLS method and the KGLS-ReEvo approach (KGLS combined with ReEvo). The table reports the optimality gap (the difference between the solution found and the optimal solution) and the execution time for each method across various TSP sizes (20, 50, 100, and 200 nodes).", "section": "5.1 Penalty heuristics for Guided Local Search"}, {"figure_path": "483IPG0HWL/tables/tables_31_1.jpg", "caption": "Table 1: Evaluation results of different local search (LS) variants. We report optimality gaps and per-instance execution time.", "description": "This table presents a comparison of different local search variants, focusing on their performance in solving the Traveling Salesman Problem (TSP).  The methods compared include various Guided Local Search (GLS) approaches augmented with reinforcement learning, neural networks, and Language Hyper-Heuristics (LHHs), along with a standard GLS implementation.  The results are categorized by TSP problem size and show the optimality gaps (percentage difference from the optimal solution) and the per-instance execution time (in seconds). This allows readers to assess the relative effectiveness of each method in terms of solution quality and efficiency. The table highlights the superior performance of KGLS-ReEvo, showcasing the effectiveness of the LHH approach.", "section": "5.1 Penalty heuristics for Guided Local Search"}]