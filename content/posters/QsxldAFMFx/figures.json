[{"figure_path": "QsxldAFMFx/figures/figures_3_1.jpg", "caption": "Figure 1: (left) Our overall architecture. We augment a base model with a set of MHR adapters and a routing matrix composed of each player's style vector. (right) Detailed view of an MHR layer, showing a skill inventory of adapters shared across players. The player's style vector specifies which skills are active (in this case, the first and third) to generate the final low-rank weight shift that is applied to the (frozen) base model layer.", "description": "The figure illustrates the architecture of the model used for behavioral stylometry.  The left side shows the overall architecture, where a base model is augmented with multi-head routing (MHR) adapters and a routing matrix representing each player's style vector. The right side provides a detailed view of a single MHR layer, highlighting how the player's style vector selects from a shared \"skill\" inventory of adapters to generate a low-rank weight shift applied to the base model.", "section": "3 ML Methodology"}, {"figure_path": "QsxldAFMFx/figures/figures_6_1.jpg", "caption": "Figure 2: Accuracy at various game counts of the individual models (Maia) and our method (MHR-Maia).", "description": "This figure compares the accuracy of move prediction using the original Maia model and the proposed MHR-Maia model across different numbers of games per player.  The x-axis represents the number of games used to train each player's model, ranging from 25 to 10000. The y-axis shows the accuracy of move prediction, indicating that with more games, both models improve in accuracy, but the MHR-Maia model is comparatively close to the accuracy of Maia with fewer training games. This highlights the effectiveness of the MHR-Maia approach in achieving high accuracy with less data.", "section": "5.2 Move generation"}, {"figure_path": "QsxldAFMFx/figures/figures_7_1.jpg", "caption": "Figure 3: Cosine similarity between style vectors learned from different partitions of the same player (red) vs across different players (blue).", "description": "This figure displays the results of a cosine similarity analysis performed on style vectors.  Style vectors were generated using two different methods: by splitting a single player's game data into multiple partitions and training a separate style vector for each partition (red bars), and by training style vectors across different players' game data (blue bars). The x-axis represents the cosine similarity, a metric indicating how similar two vectors are (1.0 being identical, 0.0 being orthogonal). The y-axis represents the proportion of style vector pairs exhibiting that level of cosine similarity.  The comparison is designed to show how consistently a single player's style vector remains similar across different segments of their gameplay compared to how different the style vectors of distinct players are.", "section": "5.3 Analysis of style vectors"}, {"figure_path": "QsxldAFMFx/figures/figures_7_2.jpg", "caption": "Figure 4: Comparing player styles using human-interpretable evaluation metrics.", "description": "This figure compares the playing styles of five different players using several human-interpretable metrics related to chess strategy. Each player is represented by a polygon on the radar chart. The metrics include bishop pairs, threats, mobility in the middlegame, king danger, passed pawns in the middlegame, end game evaluation, and imbalance. The polygon vertices show the value of each metric for a specific player, and the shape and position of the polygon provide a visual representation of their playing style. Comparing the polygons shows how the players differ in their strategic approaches.", "section": "5.3 Analysis of style vectors"}, {"figure_path": "QsxldAFMFx/figures/figures_7_3.jpg", "caption": "Figure 3: Cosine similarity between style vectors learned from different partitions of the same player (red) vs across different players (blue).", "description": "This figure displays the cosine similarity between style vectors. The red bars represent the cosine similarity between style vectors derived from different partitions of the same player's data, indicating intra-player consistency.  The blue bars represent the cosine similarity between style vectors from different players, showcasing inter-player variability. The distributions clearly show higher similarity within a player's data compared to between players, demonstrating the effectiveness of the method in capturing individual styles.", "section": "5.3 Analysis of style vectors"}, {"figure_path": "QsxldAFMFx/figures/figures_8_1.jpg", "caption": "Figure 6: Winrate as a weaker player is interpolated with a stronger player as a function of \u03bb.", "description": "This figure shows the win rate of an interpolated player in 1000 simulated games against a stronger player. The interpolated player's style vector is a convex combination of a weaker and a stronger player's style vectors, controlled by the parameter \u03bb.  As \u03bb increases from 0 to 1, the interpolated player's style transitions from the weaker player's style to the stronger player's style. The plot shows that the interpolated player's win rate increases roughly linearly with \u03bb, demonstrating that the win rate reflects a weighted average of the styles being combined.", "section": "5.4 Synthesis of new styles"}, {"figure_path": "QsxldAFMFx/figures/figures_8_2.jpg", "caption": "Figure 7: Modifying a player's style towards a specific attribute", "description": "This figure shows how the style of a player can be steered towards a specific attribute by adding a delta style vector to the original style vector. The delta style vector is computed by averaging the style vectors of top-k players who exhibit high values for the specific attribute and subtracting the average style vector of the entire player population. The results show that the style of a player can be successfully steered towards the desired attribute while maintaining their overall style.", "section": "5.4 Synthesis of new styles"}, {"figure_path": "QsxldAFMFx/figures/figures_13_1.jpg", "caption": "Figure 8: Cosine similarity of style vectors trained with varying game sizes compared to a style vector trained with 10,000 games, run on 50 players.", "description": "This figure shows how well style vectors trained on different numbers of games match the style vector trained on a large dataset (10,000 games).  The x-axis represents the number of games used for training a style vector, and the y-axis shows the cosine similarity between that vector and the vector trained on 10,000 games.  The shaded area represents the standard deviation across 50 different players.  As expected, the similarity increases as more games are used for training, demonstrating the ability to learn representative style vectors even with limited data.", "section": "A.2 Maia Architecture/Data"}, {"figure_path": "QsxldAFMFx/figures/figures_14_1.jpg", "caption": "Figure 9: Skill distribution of Rocket League players in our dataset.", "description": "This figure shows the distribution of Rocket League player skill ranks in the dataset used in the paper.  The x-axis represents the different skill ranks (from Bronze I to Supersonic Legend), and the y-axis shows the percentage of players at each rank.  The distribution appears roughly bell-shaped, indicating a concentration of players around the middle skill ranks, with fewer players at the highest and lowest skill levels.", "section": "A.3 Rocket League Architecture/Data"}]