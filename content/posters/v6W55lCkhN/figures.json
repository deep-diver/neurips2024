[{"figure_path": "v6W55lCkhN/figures/figures_1_1.jpg", "caption": "Figure 1: An overview of CE-NAS. The sampling and evaluation tasks will be allocated different GPU resources based on carbon emission intensity during the neural architecture search. Specifically, when the CO2 intensity is low, we allocate more resources to energy-intensive evaluation, which focuses on assessing the performance of sampled architectures generated through energy-efficient sampling. Conversely, when CO2 intensity is high, more GPUs are dedicated to energy-efficient sampling, which utilizes various NAS algorithms to sample new architectures from a search space partitioned based on previously evaluated architectures. The specific GPU allocation strategy is learned through a reinforcement learning agent, as detailed in the middle section of the figure.", "description": "This figure presents a high-level overview of the CE-NAS framework.  It illustrates how the framework dynamically allocates GPU resources between energy-efficient sampling and energy-intensive evaluation of neural architectures.  The allocation is based on predicted carbon intensity, aiming to reduce the carbon footprint of the NAS process.  A reinforcement learning agent learns the optimal GPU allocation policy.", "section": "3 The Design of a Carbon-Efficient NAS Framework"}, {"figure_path": "v6W55lCkhN/figures/figures_5_1.jpg", "caption": "Figure 2: An overview of CE-NAS. This carbon trace is based on the US-CAL-CISO data from 2021, specifically covering the period from 0:00, July 2, 2021, to 8:00, July 4, 2021. The blue trace is its actual carbon trace and the yellow trace is the prediction trace by our carbon predictor described in sec. 3.5.2", "description": "The figure shows the actual and predicted carbon intensity for a specific region (US-CAL-CISO) over a period of 80 hours in 2021. The carbon predictor, described in section 3.5.2, is evaluated here and shows reasonably good performance.", "section": "3.5 Carbon-Efficient GPU Allocation"}, {"figure_path": "v6W55lCkhN/figures/figures_6_1.jpg", "caption": "Figure 3: Search progress over time. CE-NAS has the second lowest relative carbon emission while achieving the second best HVlog_diff on HW-NAS-Bench, and CE-NAS has the second lowest relative carbon emission while achieving the second best HV on NasBench301.", "description": "This figure shows a comparison of the search progress over time for different neural architecture search (NAS) methods on two benchmark datasets: HW-NAS-Bench and NasBench301. The y-axis represents the log hypervolume difference, a metric that measures the quality of the search results, and the x-axis represents time in hours. The figure demonstrates that CE-NAS achieves a good balance between carbon efficiency and search efficiency, outperforming other methods in terms of hypervolume while keeping carbon emissions low.", "section": "4 CE-NAS Experimental Evaluation"}, {"figure_path": "v6W55lCkhN/figures/figures_7_1.jpg", "caption": "Figure 3: Search progress over time. CE-NAS has the second lowest relative carbon emission while achieving the second best HVlog_diff on HW-NAS-Bench, and CE-NAS has the second lowest relative carbon emission while achieving the second best HV on NasBench301.", "description": "This figure shows the search progress over time for two different benchmarks, HW-NAS-Bench and NasBench301.  It compares CE-NAS to other NAS algorithms, illustrating how CE-NAS maintains comparable search efficiency while significantly reducing carbon emissions. The plots show the hypervolume (a measure of search quality) over time, with CE-NAS achieving near SOTA results with lower CO2 output.  This demonstrates the carbon-efficiency of the CE-NAS approach.", "section": "4 CE-NAS Experimental Evaluation"}, {"figure_path": "v6W55lCkhN/figures/figures_8_1.jpg", "caption": "Figure 5: Search efficiency under carbon emission constraints. These results are based on Nas-Bench301 with carbon trace showing in fig. 2, and we ran each method five times.", "description": "The figure shows box plots visualizing the hypervolume achieved by different NAS methods (CE-NAS, Vanilla LaMOO, One-shot LaMOO, Heuristic) under various carbon emission constraints (25000g, 50000g, 75000g, 100000g).  The results are based on the NasBench301 benchmark and a carbon trace depicted in Figure 2. Each method was run five times to obtain the data for these plots. The hypervolume is a metric that reflects the quality of the obtained Pareto frontier, indicating how well a method explores the multi-objective search space. Lower carbon constraints restrict the total resources available for the search, thus impacting the final achieved hypervolume. The box plot provides a visual representation of the distribution of results for each method and carbon constraint showing the median, quartiles, and potential outliers.", "section": "4.2.2 Simulation using NasBench301"}, {"figure_path": "v6W55lCkhN/figures/figures_19_1.jpg", "caption": "Figure 2: An overview of CE-NAS. This carbon trace is based on the US-CAL-CISO data from 2021, specifically covering the period from 0:00, July 2, 2021, to 8:00, July 4, 2021. The blue trace is its actual carbon trace and the yellow trace is the prediction trace by our carbon predictor described in sec. 3.5.2", "description": "The figure shows a comparison of actual and predicted carbon intensity over time. The actual carbon intensity data is from US-CAL-CISO in 2021. The predicted carbon intensity is generated by a carbon predictor (detailed in section 3.5.2 of the paper). This figure helps to visualize the accuracy of the carbon intensity prediction model used in the CE-NAS framework.", "section": "3.5 Carbon-Efficient GPU Allocation"}, {"figure_path": "v6W55lCkhN/figures/figures_23_1.jpg", "caption": "Figure 7: Comparisons of architecture qualities between LaMOO-selected region and the entire search space of HW-Nasbench. We ran LaMOO 10 times. For each run, we randomly sampled 50 architectures from the LaMOO-selected space and the whole search space.", "description": "This figure compares the architecture qualities (hypervolume, accuracy, and inference energy) between architectures selected by LaMOO from a specific region of the search space and architectures randomly sampled from the entire search space using HW-NASBench.  The results demonstrate that LaMOO effectively focuses the search on a subset of architectures with better properties.", "section": "3.3 Energy-Efficient Architecture Sampling"}, {"figure_path": "v6W55lCkhN/figures/figures_23_2.jpg", "caption": "Figure 1: An overview of CE-NAS. The sampling and evaluation tasks will be allocated different GPU resources based on carbon emission intensity during the neural architecture search. Specifically, when the CO2 intensity is low, we allocate more resources to energy-intensive evaluation, which focuses on assessing the performance of sampled architectures generated through energy-efficient sampling. Conversely, when CO2 intensity is high, more GPUs are dedicated to energy-efficient sampling, which utilizes various NAS algorithms to sample new architectures from a search space partitioned based on previously evaluated architectures. The specific GPU allocation strategy is learned through a reinforcement learning agent, as detailed in the middle section of the figure.", "description": "This figure illustrates the CE-NAS framework.  It shows how GPU resources are dynamically allocated between energy-efficient sampling and energy-intensive evaluation tasks of neural architectures, based on predicted carbon intensity. When carbon intensity is low, more resources are allocated to evaluation; when high, more to efficient sampling. A reinforcement learning agent learns this allocation policy.", "section": "CE-NAS Overview"}, {"figure_path": "v6W55lCkhN/figures/figures_24_1.jpg", "caption": "Figure 1: An overview of CE-NAS. The sampling and evaluation tasks will be allocated different GPU resources based on carbon emission intensity during the neural architecture search. Specifically, when the CO2 intensity is low, we allocate more resources to energy-intensive evaluation, which focuses on assessing the performance of sampled architectures generated through energy-efficient sampling. Conversely, when CO2 intensity is high, more GPUs are dedicated to energy-efficient sampling, which utilizes various NAS algorithms to sample new architectures from a search space partitioned based on previously evaluated architectures. The specific GPU allocation strategy is learned through a reinforcement learning agent, as detailed in the middle section of the figure.", "description": "This figure illustrates the CE-NAS framework, highlighting its dynamic GPU resource allocation based on carbon emission intensity.  When carbon intensity is low, more resources are allocated to the energy-intensive evaluation of architectures. Conversely, during high carbon intensity periods, more resources are focused on energy-efficient sampling of architectures. A reinforcement learning agent learns this resource allocation strategy.", "section": "3 The Design of a Carbon-Efficient NAS Framework"}]