[{"type": "text", "text": "Self-Discover: Large Language Models Self-Compose Reasoning Structures ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Pei Zhou Jay Pujara Xiang Ren $\\diamondsuit$ Xinyun Chent Heng-Tze Chengt Quoc V. Lei  Ed H. Chit  Denny Zhout'  Swaroop Mishrat  Huaixiu Steven Zhengi \u2191Google DeepMind $\\diamondsuit$ University of Southern California ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We introduce SELF-DIsCOVER, a general framework for LLMs to self-discover the task-intrinsic reasoning structures to tackle complex reasoning problems that are challenging for typical prompting methods. Core to the framework is a selfdiscovery process where LLMs select multiple atomic reasoning modules such as critical thinking and step-by-step thinking, and compose them into an explicit reasoning structure for LLMs to follow during decoding. SELF-DIsCOVER substantially improves GPT-4 and PaLM 2's performance on challenging reasoning benchmarks such as BigBench-Hard, grounded agent reasoning, and MATH, by as much as $32\\%$ compared to Chain of Thought (CoT). Furthermore, SELFDISCOVER outperforms inference-intensive methods such as CoT-Self-Consistency by more than $20\\%$ ,whilerequiring $10{-}40\\mathrm{x}$ fewer inference compute. Finally, we show that the self-discovered reasoning structures are universally applicable across model families: from PaLM 2-L to GPT-4, and from GPT-4 to Llama2, and share commonalities with human reasoning patterns. ", "page_idx": 0}, {"type": "image", "img_path": "BROvXhmzYK/tmp/8559238ff11dd67bc6ca948d967f20789d7384f35c7b81060abb8abcd2923472.jpg", "img_caption": ["Figure 1: SELF-DIsCOVER guides LLMs to self-discover and compose atomic reasoning modules into a reasoning structure to solve challenging tasks. Through testing on challenging reasoning benchmarks incuding Big Bench-Hard (BBH), agent reasoning (T4D), and MATH, we find that SELF-D1SCOVER outperforms Direct Answering on 23/25 and CoT on 21/25 tasks in zero-shot setting using PaLM 2-L. Full BBH results are in Appendix C Table 3. "], "img_footnote": [], "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Large Language Models (LLM) (Brown et al., 2020; Chowdhery et al., 2022; OpenAI, 2023b; Anil et al., 2023) powered by transformers (Vaswani et al., 2017) have produced impressive breakthroughs in generating coherent texts (OpenA1, 2022), and following instructions (Zhong et al., 2021; Mishra et al., $2022{\\mathrm{c}}$ : Wei et al., 2021; Chung et al., 2022; Ouyang et al., 2022). In pursuit of the goal to enhance LLMs\u2032 capability to reason and solve complex problems, various prompting methods have been proposed, drawing inspirations from cognitive theories of how humans reason. For example, few-shot and zero-shot chain-of-thought (CoT) (Nye et al., 2021; Wei et al., 2022; Kojima et al., 2022; Yasunaga et al., 2023) resembles how humans solve problems step-by-step, decomposition-based prompting (Zhou et al., 2022a; Drozdov et al., 2022; Patel et al., 2022; Ha0 et al., 2023; Khot et al., 2022) is inspired by how humans breakdown a complex problem into a series of smaller subproblems, and then solve those subproblems one by one (Polya, 2004), and step-back prompting (Zheng et al., 2023) is motivated by how humans reflect on task nature to derive general principles. However, a fundamental limitation is that each technique itself serves as an atomic reasoning module making an implicit prior assumption of the process on how to tackle a given task. Instead, we argue that each task has a unique intrinsic structure underlying the reasoning process involved in solving it efficiently. For instance, least-to-most prompting (Zhou et al., 2022a; Drozdov et al., 2022) has shown to be much more effective than CoT (Wei et al., 2022) at solving tasks such as symbolic manipulation and compositional generalization, due to the decomposition structure of the tasks. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "This paper aims at self-discovering the underlying reasoning structure unique to each task, while being highly efficient in terms of computation. Our approach, SELF-DIsCoVER, is inspired by how humans internally devise a reasoning program for problem-solving (Newell et al., 1958; Rasmussen, 1983), as illustrated in Figure 2 . From a set of atomic reasoning modules described in natural language such as \u201cbreakdown into sub tasks\u201d and \u201ccritical thinking\", an LLM, and task examples without labels, SELF-DIsCOvER composes a coherent reasoning structure intrinsic to the task (Stage 1) and then solves instances of the task using the discovered structure (Stage 2). Stage 1 operates at the task-level and uses three actions to guide the LLM to generate a reasoning structure for the task. At Stage 2, during the final decoding, the LLM simply follows the self-discovered structure to arrive at the final answer. ", "page_idx": 1}, {"type": "text", "text": "Solving problems using SELF-DIsCOVER brings several benefits compared to other methods for LLM reasoning. First, the discovered reasoning structure is grounded in atomic reasoning modules benefiting from the strengths of multiple reasoning modules in contrast to applying a priori module such as CoT. Second, SELF-DIsCOVER is efficient in computation as it only requires 3 more inference steps on the task-level, while being more performant than inference-heavy ensemble approaches such as self-consistency Wang et al. (2022). Lastly, the discovered reasoning structure is intrinsic to the task, and conveys LLMs' insights about the task in a more interpretable way than the optimized prompts (Zhou et al., 2022b; Yang et al., 2023). ", "page_idx": 1}, {"type": "text", "text": "We test SELF-DIsCOVER on 25 challenging reasoning tasks including Big Bench-Hard (BBH) (Suzgun et al., 2022), Thinking for Doing (T4D) (Zhou et al., 2023) and MATH (Hendrycks et al., 2021). SELF-D1sCOVER outperforms CoT on 21/25 task with performance gains up to $42\\%$ (Figure 1), highlighting the advantage of the self-discovered reasoning structure composed from the atomic reasoning modules against a single a priori CoT module. Furthermore, we demonstrate that SELF-DIsCOvER achieves superior performance against inference-heavy methods such as CoT $^+$ Self-Consistency and majority voting of every module while requiring 10-40x fewer inference compute (Figure 5). Finally, we compare SELF-DIsCOVER with prompts optimized (OPRO) using a training set (Yang et al., 2023) (Figure 8). We find that SELF-DIsCOVER still performs on par or better than OPRO while the self-discovered reasoning structure are much more interpretable. ", "page_idx": 1}, {"type": "text", "text": "We conduct a set of analysis to understand the effectiveness of SELF-DIsCovER. By breaking down BBH tasks into 4 different categories, we find that SELF-DIsCOVER performs best on tasks requiring world knowledge and has a moderate performance boost on algorithmic tasks compared to CoT (Figure 4). This is further confirmed by the error analysis on MATH, where $74.7\\%$ model failures comes from computation errors (e.g. math). We also take a closer look at the self-discovered reasoning structures, and show the universality of them by transferability study from PaLM 2-L to GPT-4, and from GPT-4 to Llama-2-70B. We hope to encourage more future work on structured reasoning for solving challenging problems using LLMs. ", "page_idx": 1}, {"type": "text", "text": "2  Self-Discovering Reasoning Structures for Problem-Solving ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We take inspiration from how humans use prior knowledge and skills to devise a reasoning program to solve problems (Newell et al., 1958; Rasmussen, 1983). When we face a new problem, we often first search internally what knowledge and skills from our prior experience might be helpful to solve it. Then we will attempt to apply relevant knowledge and skills to this task. And finally we will connect multiple individual skills and knowledge to solve the problem. We design SELF-DIsCOvER to enact these steps into two stages as illustrated in Figure 2. ", "page_idx": 2}, {"type": "text", "text": "Given a task and a set of reasoning module descriptions representing high-level problem-solving heuristics such as \u201cUse critical thinking\u201d and \u201cLet's think step by step\", Stage 1 of SELFDIsCovER aims to uncover the intrinsic reasoning structure for solving this task via meta-reasoning. Specifically, we uses three meta-prompts to guide LLMs to select, adapt, and implement an actionable reasoning structure with no labels or training required. We format the structure in key-value pairs similar to JSON due to interpretability and findings on following JSON boosts reasoning and generation quality (Zhou et al., 2023; OpenAI, 2023a). The structure of the meta-prompts and full prompts are shown in Figure 9. Stage 1 operates on task-level, meaning we only need to run SELF-DIsCOVER once for each task. Then, in Stage 2, we can simply use the discovered reasoning structure to solve every instance of the given task by instructing models to follow the provided structure by filling each key and arrive at a final answer. ", "page_idx": 2}, {"type": "image", "img_path": "BROvXhmzYK/tmp/00a32ae647fe25b87c5301b5cc29aa2bbb35c94a463cd037632aab0ff27f87f8.jpg", "img_caption": ["Figure 2: Mllustration of using SELF-DiscovER for problem-solving. Given a generative LM, task, and seed reasoning module descriptions, we guide LMs to generate a reasoning structure in key-value format to solve the task. Finally, models can follow the self-discovered structures to solve the every instance from the task by filling in the values in JSON step-by-step. "], "img_footnote": [], "page_idx": 2}, {"type": "text", "text": "2.1  Stage 1: Self-Discover Task-Specific Structures ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "The first stage consists of three actions: 1) SELECT, where relevant reasoning modules for tasksolving are chosen from the set of reasoning module descriptions; 2) ADAPT, where descriptions of selected reasoning modules are rephrased to be more specific to the task at hand; and 3) IMPLEMENT, where the adapted reasoning descriptions are implemented into a structured actionable plan so that the task can be solved by following the structure. ", "page_idx": 2}, {"type": "text", "text": "SELECT First, not every reasoning module is helpful for every task, so the first stage of SELFDISCovER guides model to select modules that are useful based on task examples. For example, \"reflective thinking\u201d might help search for first-principle theories on science problems, while \u201ccreative thinking\" helps on generating a novel continuation to a story. Given raw set of reasoning module descriptions $D$ such as \u201ccritical thinking\", and \u201cbreak the problem into sub-problems\" (full set in Appendix A), and a few task examples without labels $t_{i}\\in T$ , SELF-DISCOVER first selects a subset of reasoning modules $D_{S}$ that are useful for solving the tasks by using a model $\\mathcal{M}$ and a meta-prompt $p_{S}$ ", "page_idx": 2}, {"type": "equation", "text": "$$\nD_{S}=\\mathcal{M}(p_{S}\\parallel D\\parallel t_{i}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "ADAPT Since each reasoning module provides a general description of how to solve problems, the next step of SELF-DIsCOVER aims at tailoring each selected module to the task at hand. For example, from \u201cbreak the problem into sub-problems\"\u201d to\u201ccalculate each arithmetic operation in order\u201d for arithmetic problems. Given selected reasoning module subset $D_{S}$ from the previous step, ADAPT rephrases each of the selected module to be more specific to the task. Similarly to SELECT, this stage uses a meta-prompt $p_{A}$ and a generative model $\\mathcal{M}$ to generate the adapted reasoning module descriptions $D_{A}$ ", "page_idx": 2}, {"type": "image", "img_path": "BROvXhmzYK/tmp/d835ed2514b917f862d8429fb30b6e86a86abb745523a695e98c5910a10ae077.jpg", "img_caption": ["Figure 3: Mllustration of three actions of SELF-DiscovER. We use LMs to compose a coherent reasoning structure by selecting relevant modules, adapting to task-specific descriptions, and implement a reasoning structure inJsoN. "], "img_footnote": [], "page_idx": 3}, {"type": "text", "text": "", "page_idx": 3}, {"type": "equation", "text": "$$\nD_{A}=\\mathcal{M}(p_{A}\\parallel D_{S}\\parallel t_{i}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "IMPLEMENT Finally, given the adapted reasoning module descriptions $D_{A}$ , SELF-DISCOVER Operationalizes the reasoning modules into an implemented reasoning structure $D_{I}$ with specified instruction on what to generate for each step. In addition to a meta prompt $p_{I}$ , IMPLEMENT also provides a demonstration of a human-written reasoning structure $S_{h u m a n}$ on another task to better convert the natural language descriptions into a reasoning structure: ", "page_idx": 3}, {"type": "equation", "text": "$$\nD_{I}=\\mathcal{M}(p_{I}\\parallel S_{h u m a n}\\parallel D_{A}\\parallel t_{i}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "2.2  Stage 2: Tackle Tasks Using Discovered Structures ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "After the three stages, we have an implemented reasoning structure $D_{I}$ uniquely adapted for the task weneed tosolve $T$ . Then we can simply append the reasoning structure to all instances of the task and prompt models to follow the reasoning structure to generate an answer $A$ ", "page_idx": 3}, {"type": "equation", "text": "$$\nA=\\mathcal{M}(D_{I}\\parallel t),\\forall t\\in T.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "3 Experiment Setup ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "3.1 Tasks ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We focus on diverse reasoning benchmarks that are still challenging for LLMs: BIG-Bench Hard (BBH) (Suzgun et al., 2022) contains 23 carefully-selected challenging tasks from BIG-Bench (Srivastava et al., 2023). BBH tasks cover a diverse range of reasoning problems spanning the following 4 categories according to their authors: 1) Algorithmic and Multi-Step Arithmetic Reasoning, 2) Natural Language Understanding, 3) Use of World Knowledge, and 4) Multilingual Knowledge and Reasoning. We also test on a grounded social agent reasoning task called Thinking for Doing (T4D) where models must leverage mental state reasoning to determine actions to perform (Zhou et al., 2023), where GPT-4 with CoT only reaches around $50\\%$ . Finally, we subsample 200 examples from the MATH (Hendrycks et al., 2021) test set, and generate instance-level reasoning structures via a one-shot demonstration to adapt to the complexity of MATH tasks. For evaluations, we use accuracy to measure the model performance on BBH, T4D and MATH (details can be found in Appendix B). ", "page_idx": 3}, {"type": "text", "text": "3.2Models ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We use several state-of-the-art LLMs: GPT-4 (gpt-4-turbo-preview) (OpenAI, 2023b), GPT-3.5-turbo (ChatGPT) (OpenAI, 2022)', instruction-tuned PaLM 2-L (Anil et al., $2023)^{2}$ , and an open-source LLM Llama2-70B (Touvron et al., 2023). ", "page_idx": 4}, {"type": "text", "text": "3.3 Baselines ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We compare SELF-DIsCOVER with other zero-shot prompting methods for LLM reasoning: ", "page_idx": 4}, {"type": "text", "text": "\u00b7 Direct Prompting, where model directly generates the answer without intermediate reasoningsteps.   \n\u00b7 CoT (Wei et al., 2022; Kojima et al., 2022), where models are prompted to generate a reasoning process leading to the final answer.   \n\u00b7 Plan-and-Solve (Wang et al., 2023), where models are prompted to first generate a plan and then solve the problem. SELF-DIsCOvER differs by grounding the reasoning structure in atomic reasoning modules, and prompting the decoding to follow the explicit key-value reasoningstructure. ", "page_idx": 4}, {"type": "text", "text": "Next, we also consider other baselines that make use of the raw seed reasoning modules (RM) we pass to SELF-DIsCOVER. We compare with the following methods\u2019 performance and the inference call efficiency on a subset of tasks. ", "page_idx": 4}, {"type": "text", "text": "\u00b7 CoT-Self-Consistency Wang et al. (2022), we sample multiple outputs from LLM with CoT and aggregate answers to get the final answer. We compare this method on a subset of tasks due to the cost of repetitive queries.   \n\u00b7 Majority voting of each RM: we prompt models to solve the tasks by appending each RM and use majority voting of all answers to get the final answer. We examine whether integrating multiple RMs into a coherent reasoning structure is advantageous to applying each RM to solve the task and use majority voting to ensemble them post-hoc, which costs much more inference computation.   \n\u00b7 Best of each RM: this method assumes that we have access to oracle labels and uses the highest accuracy from applying each RM. We compare with this to examine whether SELFDISCovER competes with methods that depend on perfect prior knowledge of which RM to use on a new task. ", "page_idx": 4}, {"type": "text", "text": "Furthermore, for analysis on universality of reasoning structures, we compare with a promptoptimization method that require a training set to improve prompts: LLMs as optimizers (OPRO) (Yang et al., 2023). We aim to show that when we apply structures or prompts optimized from one model, the reasoning structures can retain more performance gains than the wordings of prompts. ", "page_idx": 4}, {"type": "text", "text": "4 Results ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We answer the following questions through experimental results: 1) Does discovering reasoning structures improve LLM reasoning capabilities? (4.1) 2) Which categories of problems do SELFDISCOVER perform the best? (4.2) and 3) Can SELF-DIsCOVER boost LLM performance effciently? (4.3) Finally, we will show qualitative examples of self-discovered structures, LLM output following the structures, and compare with LLM output following other prompting methods for reasoning (4.4). ", "page_idx": 4}, {"type": "text", "text": "4.1  Does SELF-DIsCOVER Improve LLM Reasoning? ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Overall, SELF-D1sCOvER improves PaLM 2-L and GPT-4's reasoning across diverse set of reasoning tasks. Table 1 shows the overall results on complex reasoning tasks of BBH, T4D and ", "page_idx": 4}, {"type": "text", "text": "Table 1: Self-Discover significantly improves LLM reasoning across a diverse set of 25 complex tasks: BBH, T4D and MATH. CoT: zero-shot Chain of Thought (Kojima et al., 2022). PS: plan-and-solve prompting (Wang et al., 2023). ", "page_idx": 5}, {"type": "table", "img_path": "BROvXhmzYK/tmp/b1528aa266e71b33cd0cbf7aba447e989ed0057518340b2c74c5acf9eee11917.jpg", "table_caption": [], "table_footnote": [], "page_idx": 5}, {"type": "text", "text": "MATH using PaLM 2-L and GPT-4. We compare Self-Discover with baselines including direct prompting, CoT, and Plan-and-Solve (PS). ", "page_idx": 5}, {"type": "text", "text": "On aggregated 23 tasks of BBH, SELF-DIsCOVER achieves $7\\%$ and $6\\%$ absolute improvement on PaLM 2-L over Chain-of-Thought and Plan-and-Solve, respectively. Similar gains ( ${}^{6\\%}$ and $8\\%$ 0 are observed when SELF-DIsCOVER is applied to GPT-4. Breakdown results of each task's improvement over direct answering and CoT of PaLM 2-L are shown in Figure 1, where we find SELF-D1sCOVER outperforms them on over 20/24 tasks. For a per-task performance for all 23 BBH tasks, please refer to Appendix C. ", "page_idx": 5}, {"type": "text", "text": "On the grounded social agent task T4D, SELF-DISCOVER reaches over $\\geq\\,27\\%$ $32\\%$ absolute improvement over all baselines on PaLM 2-L (GPT-4). SELF-DISCOVER achieves $69\\%$ and $85\\%$ accuracy on PaLM 2-L and GPT-4, significantly outperforming previous SoTA prompting method such as Foresee and Reflect (FaR) which employs an expert-designed reasoning structure. In contrast, SELF-DIscovER generates the reasoning structure automatically from a set of atomic reasoning modules without human interventions. ", "page_idx": 5}, {"type": "text", "text": "For MATH, we observe a moderate gain of $1\\%.7\\%$ $(2\\%-3\\%)$ on PaLM 2-L (GPT-4) from SELFDISCOvER compared to the baselines. Upon error analysis (see Appendix E for details), we find that the reasoning structures generated by PaLM 2-L from SELF-DIsCOVER are correct $87.5\\%$ of the time: human experts can follow the reasoning structures to solve the tasks perfectly. The majority of the failures $(74.7\\%)$ comes from errors in executing the computations, consistent with prior findings Zheng et al. (2023). ", "page_idx": 5}, {"type": "text", "text": "4.2 Which Types of Problems Do SELF-D1sCovER Help the Most? ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "SELF-D1sCOvER performs best on tasks that require diverse world knowledge. Figure 4 presents the average improvement in terms of delta in accuracy of SELF-DIsCOVER over direct answer and CoT on 4 categories of reasoning tasks we test. We adopt the categorization from Suzgun et al.(2022).We find that SELFDISCovER improves over these two baselines on all categories, but especially on tasks that require world knowledge such as sports understanding,movierecommendation,andruin names. ", "page_idx": 5}, {"type": "image", "img_path": "BROvXhmzYK/tmp/81cf6417609f2a35e45fcc09847692405ca59dedfe151bd32acabd16c3ee349f.jpg", "img_caption": ["Figure 4: Breakdown of SELF-DIscOvER performance improvement on 4 categories on PaLM 2-L. SELF-DISCOVER performs the best on tasks requiring world knowledge. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "These tasks demand models to reason using fact and general commonsense ", "page_idx": 5}, {"type": "text", "text": "knowledge. We interpret SELF-DISCOVER's advantages on these tasks as strength from integrating multiple reasoning modules from various perspectives as only applying CoT might miss key knowledge in the reasoning process. We observe that the gain on the Algorithmic category is moderate, consistent with the findings from Sec. 4.1 on MATH. ", "page_idx": 5}, {"type": "image", "img_path": "BROvXhmzYK/tmp/e3c2e56d8865a0bc83de266b6d68aa7d17ba02422b283a0f660724db5d8e7bed.jpg", "img_caption": ["Figure 5: Comparison of accuracy with number of inference calls required per instance. For CoT-SelfConsistency, we sample 10 times. Best of each RM method requires gold labels $(^{*})$ .SELF-DISCOVERrequires only 1 inference call per instance, same as Direct and CoT while reaching better performance compared with $40\\mathrm{x}$ more call required methods on GPT-4. We acknowledge that SELF-DisCOvER input and output are longer than CoT and Direct prompting, increasing cost. However, as the number of instances increases, the efficiency of SELF-DisCOvER in terms of inference per instance is highly desirable. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "4.3 How Efficient is SELF-DIsCOvER? ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "SELF-D1scovER achieves better performance while requiring 10-40x fewer inference computer compared to self-consistency or majority voting. Here we examine a subset of 2 tasks from BBH and present a more thorough comparison of methods including those requiring many inference calls that are too costly to run on all 24 tasks. Figure 5 shows average accuracy and number of inference calls required per instance for each method using GPT-4. Accuracy wise (y-axis), we find that SELF-DIsCOVER outperforms other baselines even those that require repeated inference calls such as CoT-self-consistency and majority voting of applying each RM. Efficiency wise ( $\\mathbf{\\lambdax}-$ axis), SELF-DIsCOvER only requires one call per instance and three more inference calls on the task-level, CoT-self-consistency requires 10 times more since we have to sample 10 times for each instance, and methods using each RM requires 40 times more as we use 40 RMs. In summary, SELF-DisCOvER presents itself a strong reasoning boosting method that is efficient to deploy on large-scale. ", "page_idx": 6}, {"type": "text", "text": "4.4   Qualitative Examples ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We show examples of model-discovered structures for different reasoning tasks in Figure 10 from PaLM 2-L. We observe that each structure is uniquely adapted to the task, integrates multiple reasoning modules, and provides insights on how to solve the tasks. Furthermore, example of comparing reasoning processes from CoT, Plan-and-Solve, and SELF-DIsCOVER is shown in Figure 6. We find that CoT and Plan-and-Solve makes incorrect assertions early and arrives at a wrong answer while following structure from SELF-D1sCOvER leads the model to generate logical conclusions (\"path is closed as the beginning and ending coordinates are the same') and arrive at the correct answer. ", "page_idx": 6}, {"type": "text", "text": "5   Deep Diving Into Self-Discovered Reasoning Structures ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "After experimental results showing the effectiveness and efficiency of SELF-DisCOVER on a range of reasoning tasks, this section further analyzes are all actions of SELF-DiscovER needed and what other benefits can self-discovered structures bring? In Sec. 5.1, we show that it is critical to the model's performance to use the reasoning structures discovered through the three steps of SELECT, ADAPT and IMPLEMENT. In Sec. 5.2, we demonstrate the universality of the self-discovered reasoning structures by (1) applying the structures discovered by PaLM 2-L to GPT-4, (2) applying the structures discovered by GPT-4 to Llama-2-70B. We further show the commonalities between the reasoning structures and human reasoning patterns in Appendix F. ", "page_idx": 6}, {"type": "image", "img_path": "BROvXhmzYK/tmp/9be9e5d9fd007f76c0886cdf472c7bc92cfbf4ddf40f6902d59e64dcc5427cca.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 6: Comparison of generated reasoning process from CoT, Plan-and-Solve, and SELF-DiscovER on BBH-geometric shape task. Both CoT and Plan-and-Solve incorrectly asserts that the path does not form a regular shape as it is not a closed path (highlighted in red) and arrive at a wrong answer. The reasoning structure (in blue Courier font) from SELF-DisCovER first breaks down each line segment and analyze the coordinates carefully, then leverages logical reasoning to conclude that it forms a closed shape as the path ends at the same coordinate (highlighted in purple and orange), and selects the correct answer through final reasoning. ", "page_idx": 7}, {"type": "text", "text": "5.1 Importance of SELF-D1sCOvER Actions ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We conduct ablation study on the three actions: SELECT, ADAPT, and IMPLEMENT to analyze the effects of SELF-DISCOVER actions. Figure 7 show results using GPT-4 on 4 reasoning tasks when we apply SELECT (-S) or apply SELECT and ADAPT (-SA) or apply all three actions. We find that with each stage, model's zeroshot reasoning capability improve consistently across tasks, indicating that all three actions are beneficial. ", "page_idx": 7}, {"type": "image", "img_path": "BROvXhmzYK/tmp/67e66b97c847e192a4beceeec109ff4b8629e6e098035cd021327f5174fe930a.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 7: Ablation study on three SELF-DIsCOvER actions on 4 reasoning tasks: all three actions are beneficial for task-solving. ", "page_idx": 7}, {"type": "text", "text": "5.2  Towards Universality of Discovered Reasoning Structures ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Applying PaLM 2-L Discovered Structures to GPT-4 We first use a PaLM 2-L model to discover the reasoning structures of 4 reasoning tasks. Then, we apply the resulting reasoning structures to the decoding of GPT-4 as grounding. We compare our approach to OPRO (Yang et al., 2023) which discovered zero-shotprompts through optimizations. We apply OPRO prompts optimized using PaLM 2-L on each task to GPT-4 on the same reasoning tasks. Figure 8 shows that SELF-DISCOVER outperforms OPRO on 3 out of 4 tasks despite that OPRO used $20\\%$ data to op", "page_idx": 7}, {"type": "image", "img_path": "BROvXhmzYK/tmp/24dc39884a1db40a8645b386bc35f030330bffba696c19f9c6892b5d259731d5.jpg", "img_caption": [], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 8: Transferrability tests of optimized prompts (OPRO) and composed structures (SELF-DIsCOvER). ", "page_idx": 7}, {"type": "text", "text": "timize the prompt. In contrast, SELF-D1sCOvER is done in a zero-shot manner, demonstrating the efficiency of our method and universality of the discovered reasoning structures. ", "page_idx": 8}, {"type": "text", "text": "Applying GPT-4 Discovered Structures to Llama2 and ChatGPT Motivated by transferrability performance across LLMs, we further investigate can self-discovered reasoning structures from LLMs boost reasoning for smaller LMs that are challenging to come up with structures themselves3. We use GPT-4 to discover the task-intrinsic reasoning structures, and then apply those structures to the decoding of open-sourced Llama2-70B as well as GPT-3.5-turbo (ChatGPT) on two subsets of tasks from BBH. We find that using self-discovered structures on Llama2 $(52\\%)$ outperforms CoT $(42\\%)$ on disambiguation QA zero-shot and on GPT-3.5-turbo $(56\\%)$ outperforms CoT $(51\\%)$ on geometry with 3-shot demonstration from structured reasoning process. ", "page_idx": 8}, {"type": "text", "text": "6 Related Work ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "6.1 Prompting Methods ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Recent advancements in the area of LLMs have given rise to a plethora of few-shot (Brown et al., 2020) and instruction (Mishra et al., 2022c; Wei et al., 2021; Ouyang et al., 2022) prompting techniques, including Chain-of-Thought prompting (CoT) (Nye et al., 2021; Wei et al., 2022), Least-to-most prompting (Zhou et al., 2022a; Drozdov et al., 2022), Decomposed prompting (Khot et al., 2022), Reframing (Mishra et al., 2022b), Help Me Think Prompting (Mishra & Nouri, 2023), Stepback Prompting (Zheng et al., 2023) and search-based approaches like Tree-of-Thought (ToT) (Yao et al., 2023a), Graph-of-Thought (Besta et al., 2023; Ya0 et al., 2023b), Branch-solve-merge (Saha et al., 2023) and RAP (Hao et al., 2023). Each of the prompting methods has some strengths and weaknesses in terms of their successful application domain. Our work SELF-D1sCOVER presents the missing piece in the prompting literature, as SELF-D1sCOVER provides a way to self-compose over various prompting methods via the proposed self-discovery mechanism. Composing over prompting methods in SELF-D1sCOvER is analogous to the programming literature where a program is written using various basic building blocks such as for loop, if/else condition etc. ", "page_idx": 8}, {"type": "text", "text": "6.2  Reasoning and Planning ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "With the development of various reasoning and planning benchmarks such as GSM8K Cobbe et al. (2021), Math Hendrycks et al., BigBench Srivastava et al. (2023) etc., various methods have been proposed to improve model performance. Often these methods induce specific reasoning structures mimicking the reasoning structure of the underlying task associated with the dataset. For example, chain of thought Wei et al. (2022) and scratchpad Nye et al. (2021) induce generation of explanations associated with a reasoning question. Similarly other methods induces specific reasoning structures such as question summarization Kuznia et al. (2022), question decomposition Patel et al. (2022), program generation Mishra et al. (2022a); Chen et al. (2022); Ga0 et al. (2023b), etc. However, in a real world user traffic, queries can be diverse covering various reasoning structures. Our work SELF-DIsCOvER allows models to combine multiple reasoning approaches by self-composing into a structure without the need to access task labels. There have been some related work that explores LLM combining skills in-context such as SkiC (Chen et al., 2023), devising a strategy (Gao et al., 2023a), and planning with iterative quering (Liu et al., 2023). However, they require human annotating skills and reasoning plans while SELF-DIsCOVER leverages a scalable solution with the help of LLM's meta-task reasoning capabilities. ", "page_idx": 8}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We introduce SELF-DIsCOvER, an efficient and performant framework for models to self-discover a reasoning structure for any task from a seed set of general problem-solving skills. We observe drastic improvements on challenging reasoning benchmarks from multiple LLMs up to $30\\%$ .Ablationsstudy of SELF-DisCOvER demonstrates that the composed reasoning structures are universally transferable between LLMs. Forward looking, we are excited to explore more on LLM structured reasoning to push the boundary of problem-solving and discover potentials for Human-AI collaboration. ", "page_idx": 8}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We thank anonymous reviewers for their constructive feedback during the discussion period. We thank team members from Google DeepMind, INK Lab, and JAUNTS Lab for their insightful feedback on this paper. This work was funded in part by the Defense Advanced Research Projects Agency with awards HR00112220046, HR00112390061, and N660011924033. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Anil, R., Dai, A. M., Firat, O., Johnson, M., Lepikhin, D., Passos, A., Shakeri, S., Taropa, E., Bailey, P., Chen, Z., et al. Palm 2 technical report. arXiv preprint arXiv:2305.10403, 2023. ", "page_idx": 9}, {"type": "text", "text": "Besta, M., Blach, N., Kubicek, A., Gerstenberger, R., Gianinazzi, L., Gajda, J., Lehmann, T., Podstawski, M., Niewiadomski, H., Nyczyk, P., et al. Graph of thoughts: Solving elaborate problems with large language models. arXiv preprint arXiv:2308.09687, 2023.   \nBrown, T., Mann, B., Ryder, N., Subbiah, M., Kaplan, J. D., Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Askell, A., et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877-1901, 2020.   \nChen, J., Pan, X., Yu, D., Song, K., Wang, X., Yu, D., and Chen, J. Skills-in-context prompting: Unlocking compositionality in large language models. arXiv preprint arXiv:2308.00304, 2023.   \nChen, W., Ma, X., Wang, X., and Cohen, W. W. Program of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks. arXiv preprint arXiv:2211.12588, 2022.   \nChowdhery, A., Narang, S., Devlin, J., Bosma, M., Mishra, G., Roberts, A., Barham, P, Chung, H. W., Sutton, C., Gehrmann, S., et al. Palm: Scaling language modeling with pathways. arXiv preprint arXiv:2204.02311, 2022.   \nChung, H. W., Hou, L., Longpre, S., Zoph, B., Tay, Y., Fedus, W., Li, Y, Wang, X., Dehghani, M., Brahma, S., et al. Scaling instruction-finetuned language models. arXiv preprint arXiv:2210.11416, 2022.   \nCobbe, K., Kosaraju, V., Bavarian, M., Chen, M., Jun, H., Kaiser, L., Plappert, M., Tworek, J., Hilton, J., Nakano, R., et al. Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021.   \nDrozdov, A., Scharli, N., Akyurek, E., Scales, N., Song, X., Chen, X., Bousquet, O., and Zhou, D. Compositional semantic parsing with large language models. arXiv preprint arXiv:2209.15003, 2022.   \nFernando, C., Banarse, D., Michalewski, H., Osindero, S., and Rocktaschel, T. Promptbreeder: Self-referential self-improvement via prompt evolution. arXiv preprint arXiv:2309.16797, 2023.   \nGao, C., Jiang, H., Cai, D., Shi, S., and Lam, W. Strategyllm: Large language models as strategy generators, executors, optimizers, and evaluators for problem solving. arXiv preprint arXiv:2311.08803, 2023a.   \nGao, L., Madan, A., Zhou, S., Alon, U., Liu, P, Yang, Y, Callan, J, and Neubig, G. Pal: Programaided language models. In International Conference on Machine Learning, Pp. 10764-10799. PMLR, 2023b.   \nHao, S., Gu, Y, Ma, H., Hong, J. J., Wang, Z., Wang, D. Z., and Hu, Z. Reasoning with language model is planning with world model. arXiv preprint arXiv:2305.14992, 2023.   \nHendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset. Sort, 2(4):0-6.   \nHendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset, 2021.   \nKhot, T., Trivedi, H., Finlayson, M., Fu, Y., Richardson, K., Clark, P., and Sabharwal, A. Decomposed prompting: A modular approach for solving complex tasks. In The Eleventh International Conference on Learning Representations, 2022.   \nKojima, T., Gu, S. S., Reid, M., Matsuo, Y., and Iwasawa, Y. Large language models are zero-shot reasoners. Advances in neural information processing systems, 35:22i99-22213, 2022.   \nKuznia, K., Mishra, S., Parmar, M., and Baral, C. Les is more: Summary of long instructions is better for program synthesis. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pp. 4532-4552, 2022.   \nLiu, T., Guo, Q., Yang, Y, Hu, X., Zhang, Y., Qiu, X., and Zhang, Z. Plan, verify and switch: Integrated reasoning with diverse x-of-thoughts. arXiv preprint arXiv:2310.14628, 2023.   \nMishra, S. and Nouri, E. HELP ME THINK: A simple prompting strategy for non-experts to create customized content with models. In Rogers, A., Boyd-Graber, J., and Okazaki, N. (eds.), Findings of the Association for Computational Linguistics: ACL 2023, pp. 11834-11890, Toronto, Canada, July 2023. Association for Computational Linguistics. doi: 10.18653/v1/2023.fndings-acl.751. URL https://aclanthology.org/2023.findings-acl.751.   \nMishra, S., Finlayson, M., Lu, P, Tang, L., Welleck, S., Baral, C., Rajpurohit, T., Tafjord, O., Sabharwal, A., Clark, P., et al. Lila: A unified benchmark for mathematical reasoning. In Proceedings of the 2022 Conference on Empirical Methods in Natural Language Processing, pp. 5807-5832, 2022a.   \nMishra, S., Khashabi, D., Baral, C., Choi, Y, and Hajshirzi, H. Reframing instructional promts to gptk's language. In Findings of the Association for Computational Linguistics: ACL 2022, pp. 589-612, 2022b.   \nMishra, S., Khashabi, D., Baral, C., and Hajishirzi, H. Cross-task generalization via natural language crowdsourcing instructions. In Proceedings of the 6Oth Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pp. 3470-3487, 2022c.   \nNewell, A., Shaw, J. C., and Simon, H. A. Elements of a theory of human problem solving. Psychological review, 65(3):151, 1958.   \nNye, M., Andreassen, A. J., Gur-Ari, G., Michalewski, H., Austin, J., Bieber, D., Dohan, D., Lewkowycz, A., Bosma, M., Luan, D., et al. Show your work: Scratchpads for intermediate computation with language models. arXiv preprint arXiv:2112.00114, 2021.   \nOpenAI. Chatgpt: Optimizing language models for dialogue, 2022. URL ht tps : / /openai. com/blog/chatgpt/.   \nOpenAI. Json generation mode, 2023a. URL https://platform.openai.com/docs/ guides/text-generation/ json-mode.   \nOpenAI, R. Gpt-4 technical report. arXiv, pp. 2303-08774, 2023b.   \nOuyang, L., Wu, J., Jiang, X., Almeida, D., Wainwright, C., Mishkin, P., Zhang, C., Agarwal, S., Slama, K., Ray, A., et al. Training language models to follow instructions with human feedback. Advances in Neural Information Processing Systems, 35:27730-27744, 2022.   \nPatel, P., Mishra, S., Parmar, M., and Baral, C. Is a question decomposition unit all we need? In Proceedings ofthe 2022 Conference on Empirical Methods in Natural Language Processing, Pp. 4553-4569, 2022.   \nPolya, G. How to solve it: A new aspect of mathematical method, volume 85. Princeton university press, 2004.   \nRasmussen, J. Skills, rules, and knowledge; signals, signs, and symbols, and other distinctions in human performance models. IEEE transactions on systems, man, and cybernetics, (3):257-266, 1983.   \nSaha, S., Levy, O., Celikyilmaz, A., Bansal, M., Weston, J., and Li, X. Branch-solve-merge improves large language model evaluation and generation. arXiv preprint arXiv:2310.15123, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "Srivastava, A., Rastogi, A., Rao, A., Shoeb, A. A. M., Abid, A., Fisch, A., Brown, A. R., Santoro, A. Gupta, A., Garriga-Alonso, A., et al. Beyond the imitation game: Quantifying and extrapolating the capabilities of language models. Transactions on Machine Learning Research, 2023. ", "page_idx": 11}, {"type": "text", "text": "Suzgun, M., Scales, N., Scharli, N., Gehrmann, S., Tay, Y., Chung, H. W., Chowdhery, A., Le, Q. V., Chi, E. H., Zhou, D., et al. Challenging big-bench tasks and whether chain-of-thought can solve them. arXiv preprint arXiv:2210.09261, 2022.   \nTouvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P, Bhosale, S., et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023.   \nVaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., Kaiser, L. u., and Polosukhin, I.  Attention is all you need.. In Advances in Neural Information Processing Systems, volume 30. Curran Associates, Inc., 2017.  URL https://proceedings.neurips.cc/paper_files/paper/2017/file/ 3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf.   \nWang, L., Xu, W., Lan, Y., Hu, Z., Lan, Y., Lee, R. K.-W., and Lim, E.-P. Plan-and-solve prompting: Improving zero-shot chain-of-thought reasoning by large language models. arXiv preprint arXiv:2305.04091,2023.   \nWang, X., Wei, J, Schuurmans, D., Le, Q. V., Chi, E. H., Narang, S., Chowdhery, A., and Zhou, D. Self-consistency improves chain of thought reasoning in language models. In The Eleventh International Conference on Learning Representations, 2022.   \nWei, J., Bosma, M., Zhao, V., Guu, K., Yu, A. W., Lester, B., Du, N., Dai, A. M., and Le, Q. V. Finetuned language models are zero-shot learners. In International Conference on Learning Representations, 2021.   \nWei, J., Wang, X., Schuurmans, D., Bosma, M., Xia, F., Chi, E., Le, Q. V., Zhou, D., et al. Chain-ofthought prompting elicits reasoning in large language models. Advances in Neural Information Processing Systems, 35:24824-24837, 2022.   \nYang, C., Wang, X., Lu, Y., Liu, H., Le, Q. V., Zhou, D., and Chen, X. Large language models as optimizers. arXiv preprint arXiv:2309.03409, 2023.   \nYao, S., Yu, D., Zhao, J., Shafran, I., Grifths, T. L., Cao, Y., and Narasimhan, K. Tree of thought: Deliberate problem solving with large language models. arXiv preprint arXiv:2305.10601, 2023a.   \nYao, Y., Li, Z., and Zhao, H. Beyond chain-of-thought, effective graph-of-thought reasoning in large language models. arXiv preprint arXiv:2305.16582, 2023b.   \nYasunaga, M., Chen, X., Li, Y., Pasupat, P, Leskovec, J., Liang, P, Chi, E. H., and Zhou, D. Large language models as analogical reasoners. arXiv preprint arXiv:2310.01714, 2023.   \nZheng, H. S., Mishra, S., Chen, X., Cheng, H.-T., Chi, E. H., Le, Q. V., and Zhou, D. Take a step back: Evoking reasoning via abstraction in large language models. arXiv preprint arXiv:2310.06117, 2023.   \nZhong, R., Le, K., Zhang, Z., and Klein, D. Adapting language models for zero-shot learning by meta-tuning on dataset and prompt collections. arXiv preprint arXiv:2104.04670, 2021.   \nZhou, D., Scharli, N., Hou, L., Wei, J, Scales, N., Wang, X., Schuurmans, D., Cui, C., Bousquet, O., Le, Q. V., et al. Least-to-most prompting enables comlex reasoning in large language models. In The Eleventh International Conference on Learning Representations, 2022a.   \nZhou, P., Madaan, A., Potharaju, S. P., Gupta, A., McKee, K. R., Holtzman, A., Pujara, J., Ren, X., Mishra, S., Nematzadeh, A., et al. How far are large language models from agents with theory-of-mind? arXiv preprint arXiv:2310.03051, 2023.   \nZhou, Y, Muresanu, A. I., Han, Z., Paster, K, Pitis, S., Chan, H., and Ba, J. Large language models are human-level prompt engineers. In The Eleventh International Conference on Learning Representations, 2022b. ", "page_idx": 11}, {"type": "text", "text": "A Self-Discover Prompt Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Table 2 shows all 39 reasoning modules we use for SELF-DIsCOVER, adopted from Fernando et al.   \n(2023), that contain cognitive heuristics of problem-solving. ", "page_idx": 12}, {"type": "text", "text": "Figure 9 contains the structure of the three actions of SELF-DisCOVER during Stage 1, where it discovers an intrinsic reasoning structure on the task-level. ", "page_idx": 12}, {"type": "text", "text": "For Stage 2, where we use the self-discovered structure to solve the task instances, we start with the prompt: \u201cFollow the step-by-step reasoning plan in JSON to correctly solve the task. Fill in the values following the keys by reasoning specifically about the task given. Do not simply rephrase the keys.\", followed by the reasoning structure, and finally the task instance. ", "page_idx": 12}, {"type": "table", "img_path": "BROvXhmzYK/tmp/6fe6ba9b73c6ff52d804d0a84b0e41e814f1769b62a1fb557640c67f27670304.jpg", "table_caption": [], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "B Evaluation Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "We use accuracy and exact matching as with other methods tested on BBH, T4D and MATH. To properly evaluate the generated answers from LLMs, we prompt the models to end the answer with \"Thus,thefinal answeris $\\left[X J^{\\circ}\\right.$ , where X is either one answer option such as \u201cA\" or a string such as \u201cvalid\"'. During evaluation, we manually examine each task's outputs from LLMs and design heuristics to extract the final answers. For MATH dataset, we find that it is challenging to extract the answers accurately. As a result, we subsample 200 test examples from MATH, and manually sanity check and annotate the extracted answers for all methods tested in our paper. ", "page_idx": 12}, {"type": "text", "text": "Here we also provide more details on token counts for Self-Discover and other baselines. Since Self-Discover only added 3 calls per task, on per instance level it only needs to run once. The average length of self-discovered structures is 224 tokens for BBH, 183 tokens for T4D, and 152 for MATH, which is similar to ToT/GoT prompts with around 234 tokens. We run the stage 2 (generating solution based on the structure) only in 1 inference pass where the model fills the values in the self-discovered structures. Thus, Self-Discover still reduces much inference cost compared to CoT-Self-Consistency, majority voting, etc. which requires 20s-40s fold of each CoT reasoning path token counts. ", "page_idx": 12}, {"type": "text", "text": "C  BBH Per Task Performance ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Per-task performance on BBH (23 tasks in total) are shown in Table 3. ", "page_idx": 12}, {"type": "text", "text": "Table 2: All 39 reasoning modules consisting of high-level cognitive heuristics for problem-solving We adopt them from Fernando et al. (2023). ", "text_level": 1, "page_idx": 13}, {"type": "table", "img_path": "BROvXhmzYK/tmp/0c44b5de05495cab77067fdf9e6625df247db144536f740fdc845dae4d209dd3.jpg", "table_caption": [], "table_footnote": [], "page_idx": 13}, {"type": "table", "img_path": "BROvXhmzYK/tmp/9f2d488a3fbc6c488b89ba359698a4fe7e1ffd5dbbba98ca00065876f4a36cea.jpg", "table_caption": ["Table 3: Big Bench-Hard (Suzgun et al., 2022) per-task performance of GPT-4 and PaLM 2-L withSELF-DISCOVER. "], "table_footnote": [], "page_idx": 13}, {"type": "image", "img_path": "BROvXhmzYK/tmp/bccdc4a2c452352de0e3ea661504ae6bd34919562726b9815d65c8b780008583.jpg", "img_caption": ["Figure 10: Examples of self-discovered structures on BBH tasks using PaLM 2-L. We observe traits of atomic reasoning modules such as \u201cstep-by-step thinking\", \u201c\"refect on task nature'\", and an interesting creative thinking case where models devise an algorithm using stack to solve parenthesis parsing task. "], "img_footnote": [], "page_idx": 14}, {"type": "table", "img_path": "BROvXhmzYK/tmp/4138556f4fcc5e93ccca104a77454f5d7532dd26c264377d42695d2770d61e38.jpg", "table_caption": ["Table 4: Additional baselines including Tree-of-Thought (ToT) and Graph-of-Thought (GoT) [Added rows]. "], "table_footnote": [], "page_idx": 14}, {"type": "text", "text": "D  Additional Experiments ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We further include Tree-of-Thought (Yao et al., 2023a) and Graph-of-Thought (Besta et al., 2023) (zero-shot versions) as baselines for comparison shown in Table 4. ", "page_idx": 14}, {"type": "text", "text": "To show the effectiveness of Self-Discover on more general tasks, we tested on a subset of MMLU (10 subtasks, with 50 diverse questions each, all randomly sampled) and results are shown in Table 5. Wefind thatGPT- $^{.4+}$ Self-Discoverwins GPT- ${}\\cdot4+\\mathrm{CoT}$ in zero-shot on 7 out of 10, ties on 2 out of 10, and loses on 1 out of 10 tasks. In addition, we tried Self-Discover on the instance-level, where for each question, we run stage 1 to output the reasoning structure, then solve the task. We find that the instance-level Self-Discover performs even better on MMLU, outperforming CoT by $7.2\\%$ On average for all tasks. This result, combined with those in main content, shows that the strength of Self-Discover spans across two types of tasks: for well-defined hard reasoning tasks such as BBH, task-level Self-Discover works well while being very efficient; for very open-domain tasks such as MMLU, we can do instance-level Self-Discover, which significantly outperforms CoT while still fewer inference required than self-consistency. ", "page_idx": 14}, {"type": "text", "text": "We show additional examples of self-discovered structures in Figure 10. We observe traits of atomic reasoning modules such as \u201cstep-by-step thinking\", \u201creflect on task nature\u201d\", and an interesting creative thinking case where models devise an algorithm using stack to solve parenthesis parsing task. ", "page_idx": 14}, {"type": "table", "img_path": "BROvXhmzYK/tmp/01c8abd846f66ee0ad29f5960ebce20690972d2dc3572ab17d8ce8b64b00086c.jpg", "table_caption": ["Table 5: MMLU (Suzgun et al., 2022) per-task performance of GPT-4 and PaLM 2-L with SELFDISCOVER. We sampled 10 tasks with 50 examples each. SD (instance) refers to that we run stage one on each question and use the generated structure during solving, to acount for the diversity of questions. [New Table] "], "table_footnote": [], "page_idx": 15}, {"type": "text", "text": "Task-Navigation: If you follow these instructions, do you return to the starting point? Always face forward. Take 1 step backward. Take 9 steps left. Take 2 steps backward. Take 6 steps forward. Take 4 steps forward. Take 4 steps backward. Take 3 steps right. ", "page_idx": 15}, {"type": "image", "img_path": "BROvXhmzYK/tmp/4a6eced213ec1da78009dd877b864190bf84ee1737127626eae92162bf594206.jpg", "img_caption": ["Figure 11: Case study of human-written structure shares commonalities with LLM-discovered reasoning structure. We observe similar reasoning patterns-both structures contain step-wise analysis of each instruction. "], "img_footnote": [], "page_idx": 15}, {"type": "text", "text": "E Error Analysis ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "We perform an error analysis of SELF-DIsCOvER on the MATH dataset of 200 samples to understand the failure modes. We manually annotate whether the generated reasoning structure is correct or not together with whether the correctness of model prediction using SELF-DIsCOvER. A reasoning structure is defined as correct if a human expert can solve the task by simply following the reasoning structure. ", "page_idx": 15}, {"type": "text", "text": "Out of 200 examples, we find that $87.5\\%$ (175) examples have correct reasoning structures. $12.5\\%$ (25) examples have incorrect reasoning structures leading to prediction errors. Table 6 shows 4 such examples where the LLM misunderstands the task, or makes an error in one of the steps or adds unnecessary steps in the reasoning structure. ", "page_idx": 15}, {"type": "text", "text": "Next, we analyze the errors made by the model in SELF-DIsCOVER: out of 99 examples where the model prediction is wrong, wrong reasoning structures account for only $25.3\\%$ of the errors.The remaining $74.7\\%$ errors are due to errors in the intermediate calculations such as math computations. Table 7 shows 3 examples of such errors. This insight indicates that future improvements should aim at improving the step-wise calculation accuracy of LLMs, such as using tools or code generation. ", "page_idx": 15}, {"type": "text", "text": "F Further Anaysis ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Model-Discovered Reasoning Structures vs. Human Reasoning Patterns We investigate whether LLM-discovered reasoning structures share some commonalities with human reasoning patterns. We give humans 3 task instances without labels and an example reasoning structure (same as SELF", "page_idx": 15}, {"type": "table", "img_path": "BROvXhmzYK/tmp/c97c6020825d5d4cf500996d054729a4729a23bcaa813ea72d18aba84222a86b.jpg", "table_caption": ["Table 6: Examples of wrong reasoning structures for MATH. The first error in the reasoning structure is highlighted in red. "], "table_footnote": [], "page_idx": 16}, {"type": "table", "img_path": "BROvXhmzYK/tmp/570a388ef3ed6e44baf3965e0cde0e2c90fcec8ae5085cd689f6f9e13fcb2245.jpg", "table_caption": ["Table 7: Examples of wrong calculations for MATH. The first error in the intermediate computations is highlighted in red. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "DIscovER meta-reasoning stage) and ask them to write a reasoning structure for a task before solving it. Figure 11 shows comparison of human and LLM-composed reasoning structures on the BBH-navigation task. We observe similar structures such as mental-noting after each movement. From promising findings of LLM self-discovered structures boost and share traits of human metareasoning, we hope to encourage more future work to study humna-AI collaboration for complex problem-solving. ", "page_idx": 18}, {"type": "text", "text": "To show whether the chosen reasoning modules and discovered structures provide a diverse coverage, we have included more details on frequency of selected reasoning modules in Table 8. Furthermore, we observe a very diverse set of self-discovered structures as the 12 examples shown in Figure 6, 10, 11, and Table 6 and 7. Math problem structures (Table 6) tend to be very different from BBH ones (Figure 10). Due to the non-deterministic nature of LLMs, the number of reasoning structures that can be discovered by Self-Discover is infinite, because it can use multiple reasoning modules in many different orders. In our prompts, we specifically do not restrict how the structures should use the modules and find examples where models use new modules not in the seed list (Figure 10 Dyck-Language example where model devises a stack algorithm, which is not in the seed list). ", "page_idx": 18}, {"type": "table", "img_path": "BROvXhmzYK/tmp/6aca5f75e2a3cfcd07bab1b6030805bae95dfe98c76d8c511e859e618fa7b1bb.jpg", "table_caption": ["Table 8: Selected reasoning module frequency on 25 sub tasks (BBH, T4D and MATH), for full reasoning module descriptions, please refer to Table 2 in Appendix. Top 5 selected modules are in bold. "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately refect the paper's contributions and scope? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We accurately report the results from our experiments in the abstract and introduction. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u00b7 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u00b7 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u00b7 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u00b7 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 20}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Justification: We present an extensive analysis of the limitation of Self-Discover in both Sections 4 and 5 with an extended error analysis on MATH in Appendix E. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "\u00b7 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u00b7 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u00b7 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u00b7 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u00b7 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u00b7 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u00b7 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u00b7 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 20}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 20}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 21}, {"type": "text", "text": "Justification: We do not present theoretical results. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not include theoretical results.   \n\u00b7 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u00b7 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u00b7 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u00b7 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u00b7 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 21}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We provided detailed prompts, explanation of how each inference procedure, and each model specification to reproduce the main experimental results. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not include experiments.   \n\u00b7 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u00b7 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u00b7 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u00b7 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 21}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [No] ", "page_idx": 22}, {"type": "text", "text": "Justification: Due to legal constraints, we are not able to fully release the code and data at the current time. But we provide, with the best faith, details to reproduce our results. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u00b7 The answer NA means that paper does not include experiments requiring code.   \n\u00b7 Please see the NeurIPS code and data submission guidelines (https : / /nips . CC / public/guides /CodeSubmissionPolicy) for more details.   \n\u00b7 While we encourage the release of code and data, we understand that this might not be possible, so ^\u201cNo\" is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u00b7 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (ht tps : / /nips.cc/public/guides /CodeSubmissionPolicy) for more details.   \n\u00b7 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u00b7 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u00b7 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u00b7 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 22}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We provide details of inference procedures including initial prompts, framework of each data/test split, and model specifications. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not include experiments. \u00b7 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u00b7 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 22}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Justification: We include discussions of statistical significance and most improvements are significant. ", "page_idx": 22}, {"type": "text", "text": "Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not include experiments. \u00b7 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 22}, {"type": "text", "text": "\u00b7 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u00b7 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u00b7 The assumptions made should be given (e.g., Normally distributed errors).   \n\u00b7 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u00b7 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u00b7 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u00b7 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce theexperiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We specify the LLM models we use. And since our experiments do not involve large-scale training, it is not computationally costly. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not include experiments.   \n\u00b7 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u00b7 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u00b7 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper). ", "page_idx": 23}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https: / /neurips.cc/public/EthicsGuidelines? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: We follow NeurIPS code of ethics carefully. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u00b7 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics   \n\u00b7 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u00b7 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 23}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 23}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our work is a foundational study on model's reasoning capabilities. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u00b7 The answer NA means that there is no societal impact of the work performed. ", "page_idx": 23}, {"type": "text", "text": "\u00b7 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u00b7 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u00b7 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u00b7 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u00b7 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 24}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 24}, {"type": "text", "text": "Justification: This paper poses no such risks. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u00b7 The answer NA means that the paper poses no such risks.   \n\u00b7 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u00b7 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u00b7 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 24}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We cite all models, data, and code we use in our experiments. Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not use existing assets.   \n\u00b7 The authors should cite the original paper that produced the code package or dataset.   \n\u00b7 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u00b7 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u00b7 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u00b7 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswit hcode . com/ dataset s has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u00b7 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u00b7 If this information is not available online, the authors are encouraged to reach out to the asset's creators. ", "page_idx": 24}, {"type": "text", "text": "", "page_idx": 25}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: We do not release new assets. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not release new assets.   \n\u00b7 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u00b7 The paper should discuss whether and how consent was obtained from people whose assetisused.   \n\u00b7 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 25}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: We do not involve extensive crowdsourcing. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u00b7 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u00b7 According to the NeurIPs Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 25}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution)were obtained? ", "page_idx": 25}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 25}, {"type": "text", "text": "Justification: We do not involve extensive crowdsourcing. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u00b7 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u00b7 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u00b7 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPs Code of Ethics and the guidelines for their institution.   \n\u00b7 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}]