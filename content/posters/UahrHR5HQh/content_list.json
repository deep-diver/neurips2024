[{"type": "text", "text": "Variational Flow Matching for Graph Generation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Floor Eijkelboom\u2217 UvA-Bosch Delta Lab University of Amsterdam ", "page_idx": 0}, {"type": "text", "text": "Grigory Bartosh\u2217AMLabUniversity of Amsterdam", "page_idx": 0}, {"type": "text", "text": "Christian A. Naesseth Max Welling Jan-Willem van de Meent UvA-Bosch Delta Lab UvA-Bosch Delta Lab UvA-Bosch Delta Lab University of Amsterdam University of Amsterdam University of Amsterdam ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "We present a formulation of flow matching as variational inference, which we refer to as variational flow matching (VFM). Based on this formulation we develop CatFlow, a flow matching method for categorical data. CatFlow is easy to implement, computationally efficient, and achieves strong results on graph generation tasks. The key observation in VFM is that we can parameterize the vector field of the flow in terms of a variational approximation of the posterior probability path, which is the distribution over possible end points of a trajectory. We show that this variational interpretation admits both the CatFlow objective and the original flow matching objective as special cases. We also relate VFM to score-based models, in which the dynamics are stochastic rather than deterministic, and derive a bound on the model likelihood based on a reweighted VFM objective. We evaluate CatFlow on one abstract graph generation task and two molecular generation tasks. In all cases, CatFlow exceeds or matches performance of the current state-of-the-art. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "In recent years, the field of generative modeling has seen notable advancements. In image generation [41, 45], the development and refinement of diffusion-based approaches \u2014 specifically those using denoising score matching [59] \u2014 have proven effective for generation at scale [15, 54]. However, while training can be done effectively, the constrained space of sampling probability paths in a diffusion requires tailored techniques to work [52, 64]. This is in contrast to more flexible approaches such as continuous normalizing flows (CNFs) [8], that are able to learn a more general set of probability paths than diffusion models [53], at the expense of being expensive to train as they require one to solve an ODE during each training step (see e.g. [5, 46, 14]). ", "page_idx": 0}, {"type": "text", "text": "Recently, Lipman and collaborators [27] proposed flow matching (FM), an efficient and simulationfree approach to training CNFs. Concretely, they use a per-sample interpolation to derive a simpler objective for learning the marginal vector field that generates a desired probability path in a CNF. This formulation provides equivalent gradients without explicit knowledge of the (generally intractable) marginal vector field. This work has been extended to different geometries [7, 23] and various applications [60, 9, 13, 24]. Similar work has been proposed concurrently in [32, 1]. ", "page_idx": 0}, {"type": "text", "text": "This paper identifies a reformulation of flow matching that we refer to as variational flow matching (VFM). In flow matching, the vector field at any point can be understood as the expected continuation toward the data distribution. In VFM, we explicitly parameterize the learned vector field as an expectation relative to a variational distribution. The objective of VFM is then to minimize the ", "page_idx": 0}, {"type": "text", "text": "Kullback-Leibler (KL) divergence between the posterior probability path, i.e. the distribution over possible end points (continuations) at a particular point in the space, and the variational approximation. ", "page_idx": 1}, {"type": "text", "text": "We show that VFM recovers the original flow matching objective when the variational approximation is Gaussian and the conditional vector field is linear in the data. Under the assumption of linearity, a solution to the VFM problem is also exact whenever the variational approximation matches the marginals of the posterior probability path, which means that we can employ a fully-factorized variational approximation without loss of generality. ", "page_idx": 1}, {"type": "text", "text": "While VFM provides a general formulation, our primary interest in this paper is its application to graph generation, where the data are categorical. This setting leads to a simple method that we refer to as CatFlow, in which the objective reduces to training a classifier over end points on a per-component basis. We apply CatFlow to a set of graph generation tasks, both for abstract graphs [35] and molecular generation [40, 19]. By all metrics, our results match or substantially exceed those obtained by existing methods. ", "page_idx": 1}, {"type": "text", "text": "2 Background ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Transport Framework for Generative Modeling and CNFs ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Common generative modeling approaches such as normalizing flows [42, 38] and diffusion models [15, 54] parameterize a transformation $\\varphi$ from some initial tractable probability density $p_{0}$ \u2013 typically a standard Gaussian distribution \u2013 to the target data density $p_{1}$ . In general, there is a trade-off between allowing $\\varphi$ to be expressive enough to model the complex transformation while ensuring that the determinant term is still tractable. One such transformation is a continuous normalizing flow (CNF). ", "page_idx": 1}, {"type": "text", "text": "Any time-dependent1 vector field $v_{t}:[0,1]\\times\\mathbb{R}^{D}\\rightarrow\\mathbb{R}^{D}$ gives rise to such a transformation \u2013 called a flow \u2013 as such a field induces a time-dependent diffeomorphism $\\varphi_{t}:[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}$ defined by the following ordinary differential equation (ODE): ", "page_idx": 1}, {"type": "equation", "text": "$$\n{\\frac{d}{d t}}\\varphi_{t}(x)=v_{t}(\\varphi_{t}(x)){\\mathrm{~with~initial~conditions~}}\\varphi_{0}(x)=x.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "In CNFs, this vector field is learned using a neural network $v_{t}^{\\theta}$ . Through the change of variables formula $p_{t}(\\boldsymbol{x})$ can be evaluated (see appendix E) and hence one could try and optimize the empirical divergence between the resulting distribution $p_{1}$ and target distribution. However, obtaining a gradient sample for the loss requires ones to solve the ODE induced during training, making this approach computationally expensive. ", "page_idx": 1}, {"type": "text", "text": "2.2 Flow Matching ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "In flow matching [27], the aim is to regress the underlying vector field of a CNF directly on the interval $t\\in[0,1]$ . Flow matching leverages the fact that even though we do not have access to the actual underlying vector field \u2013 which we denote as $u_{t}$ \u2013 and probability path $p_{t}$ , one can construct a per-example formulation by defining conditional flows, i.e. the trajectories towards specific datapoints $x_{1}$ . Concretely, FM sets: ", "page_idx": 1}, {"type": "equation", "text": "$$\nu_{t}(x)=\\int u_{t}(x\\mid x_{1})\\frac{p_{t}(x\\mid x_{1})p_{\\mathrm{data}}(x_{1})}{p_{t}(x)}\\mathrm{d}x_{1},\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $u_{t}(x\\mid x_{1})$ is the conditional trajectory. The most common way to define $u_{t}(x\\mid x_{1})$ is as the straight line continuation from $x$ to $x_{1}$ , implying one can obtain samples $x\\sim p_{t}(x\\mid x_{1})$ simply by interpolating samples $x_{0}\\sim p_{0}$ for some $p_{0}$ and $x_{1}\\sim p_{1}$ , ", "page_idx": 1}, {"type": "equation", "text": "$$\nu_{t}(x\\mid x_{1}):={\\frac{x_{1}-x}{1-t}}\\implies x=t x_{1}+(1-t)x_{0}{\\mathrm{~is~a~sample~}}x\\sim p_{t}(x\\mid x_{1}).\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "Crucially, the flow matching objective ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{FM}}(\\theta)=\\mathbb{E}_{t\\sim[0,1],x\\sim p_{t}(x)}\\left[\\left|\\left|v_{t}^{\\theta}(x)-u_{t}(x)\\right|\\right|_{2}^{2}\\right]\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "is equivalent in expectation (up to a constant) to the conditional flow matching objective ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{L}_{\\mathrm{CFM}}(\\theta)=\\mathbb{E}_{t\\sim[0,1],x_{1}\\sim p_{\\mathrm{data}}(x_{1}),x\\sim p_{t}(x|x_{1})}\\left[\\left\\|v_{t}^{\\theta}(x)-u_{t}(x\\mid x_{1})\\right\\|_{2}^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "An advantage of flow matching is that this conditional trajectory $u_{t}(x\\mid x_{1})$ can be chosen to make the problem tractable. The authors show that diffusion models can be instantiated as flow matching with a specific conditional trajectory, but also show that assuming a simple, straight-line trajectory leads to more efficient training. Note that in contrast to likelihood-based training of CNFs, flow matching is simulation free, leading to a scalable approach to learning CNFs. ", "page_idx": 2}, {"type": "text", "text": "3 Variational Flow Matching for Graph Generation ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We derive CatFlow through a novel, variational view on flow matching we call Variational Flow Matching (VFM). The VFM framework relies on two insights. First, we can define the marginal vector field and its approximation in terms of an expectation with respect to a distribution over end points of the transformation. This implies that we can map a flow matching problem onto a variational counterpart. Second, under typical assumptions on the forward process, we can decompose the expected conditional vector field into components for individual variables which can be computed in terms of the marginals of the distribution over end points of the conditional trajectories. This implies that, without loss of generality, we can solve a VFM problem using a fully-factorized variational approximation, providing a tractable approximate vector field. For categorical data, the corresponding vector field can be computed efficiently via direct summation. This results in a closed-form objective to train CNFs for categorical data, which we refer to as CatFlow. We develop the theory of VFM in section 3 and we relate VFM to flow matching and score-based diffusion in section 4. ", "page_idx": 2}, {"type": "text", "text": "3.1 Flow Matching using Variational Inference ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In any flow matching problem, the vector field in eq. (2) can be expressed as an expectation ", "page_idx": 2}, {"type": "equation", "text": "$$\nu_{t}(x)=\\int u_{t}(x\\mid x_{1})p_{t}(x_{1}\\mid x)\\mathrm{d}x_{1}=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $p_{t}(x_{1}\\mid x)$ is the posterior probability path, the distribution over possible end points $x_{1}$ of paths passing through $x$ at time $t$ , ", "page_idx": 2}, {"type": "equation", "text": "$$\np_{t}(x_{1}\\mid x):={\\frac{p_{t}(x,x_{1})}{p_{t}(x)}},\\qquad\\qquad\\quad p_{t}(x,x_{1}):=p_{t}(x\\mid x_{1})\\,p_{\\mathrm{data}}(x_{1}).\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "This makes intuitive sense: the velocity in point $x$ is given by all the continuations from $x$ to final points $x_{1}$ , weighted by how likely that final point is given that we are at $x$ . Note that to compute $u_{t}(x)$ , one has to evaluate a joint integral over $D$ dimensions. ", "page_idx": 2}, {"type": "text", "text": "This observation leads us to propose a change in parameterization of the learned vector field. Rather than predicting the components of the vector field directly, we can define an approximate vector field in terms of an expectation with respect to a variational distribution $q_{t}^{\\theta}$ with parameters $\\theta$ , ", "page_idx": 2}, {"type": "equation", "text": "$$\nv_{t}^{\\theta}(x):=\\int u_{t}(x\\mid x_{1})\\;q_{t}^{\\theta}(x_{1}\\mid x)\\;\\mathrm{d}x_{1}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Clearly, in this construction $v_{t}^{\\theta}(x)$ will be equal to $u_{t}(x)$ when $q_{t}^{\\theta}(x_{1}\\mid x)$ and $p_{t}(x_{1}\\mid x)$ are identical.   \nThis implies that we can map a flow matching problem onto a variational inference problem. ", "page_idx": 2}, {"type": "text", "text": "Concretely, we can define a variational flow matching problem by minimizing the Kullback-Leibler (KL) divergence from $p_{t}$ to $q_{t}^{\\theta}$ , which we can express as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathbb{E}_{t}\\left[\\mathrm{KL}\\big(p_{t}(x)p_{t}(x_{1}\\mid x)\\mid\\mid p_{t}(x)q_{t}^{\\theta}(x_{1}\\mid x)\\big)\\right]=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right]+\\mathrm{const},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $t\\sim\\mathrm{Uniform}(0,1)$ and $x,x_{1}\\sim p_{t}(x,x_{1})$ (see appendix A.1 for derivations). This leads us to propose the variational flow matching (VFM) objective ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{VFM}}(\\theta)=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right].\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "While this variational formulation of flow matching is promising, two potential drawbacks emerge in practical applications. First, although it is feasible to reformulate any flow matching problem as a variational inference task, doing so requires learning an approximation of a potentially complex, high-dimensional distribution $p_{t}(x_{1}\\mid x)$ (including any correlations between the different $x_{1}^{d},$ ). Second, representing $v_{t}^{\\theta}(x)$ as an expectation may pose intractability challenges. Interestingly, under typical assumptions about the conditional velocity field in flow matching, this objective simplifies significantly, making it no more computationally demanding than standard flow matching, a point we will further address in section 3.2. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "3.2 Mean-Field Variational Flow Matching ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Decomposing the conditional vector field. At first glance, we do not seem to obtain much from this variational view due to the intractability of $p_{t}(x_{1}\\mid x)$ and $v_{t}^{\\theta}(x)$ . Fortunately, we can simplify the objective and the calculation of the marginal vector field under the typical case where the conditional vector field $u_{t}(x\\mid x_{1})$ is linear in $x_{1}$ , such as in straight line interpolations commonly used in flow matching. This leads to two simplifications. First, we notice that the expected value of a linear conditional velocity field simply equals the conditional velocity field towards the expectation/mean of the distribution we are considering, i.e. ", "page_idx": 3}, {"type": "equation", "text": "$$\nu_{t}(x)=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]=u_{t}(x\\mid\\mathbb{E}_{p_{t}}\\left[x_{1}\\mid x\\right])\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "This means that as long as our variational distribution has the same mean as $p_{t}(x_{1}\\mid x)$ , we will learn the same underlying field. Second, we realize that the expected value of $\\boldsymbol{x}_{1}^{d}$ only depends on $p_{t}(x_{1}^{d}\\mid x)$ , and thus as such as long as $q_{t}^{\\theta}(x_{1}\\mid x)$ has the same marginal expectations $\\mathbb{E}\\left[x_{1}^{d}\\mid x\\right]$ , we will learn the same field as under $p_{t}(x_{1}\\mid x)$ . In other words, it suffices to learn a fully-factorized approximation $q_{t}^{\\theta}(x_{1}\\mid x)$ , there is no need to fully characterize the covariance of the posterior probability path. Thich allows us to reduce a high-dimensional variational problem to a series of low dimension problems. ", "page_idx": 3}, {"type": "text", "text": "Formally, the following holds: ", "page_idx": 3}, {"type": "text", "text": "Theorem 1. Assume that the conditional vector field $u_{t}(x\\mid x_{1})$ is linear in $x_{1}$ . Then, for any distribution $r_{t}(x_{1}\\mid x)$ such that the marginal distributions coincide with those of $p_{t}(x_{1}\\mid x)$ , the corresponding expectations of $u_{t}(x\\mid x_{1})$ are equal, i.e. ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbb{E}_{r_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "We provide a proof in appendix A.3. ", "page_idx": 3}, {"type": "text", "text": "It follows directly from theorem 1 that without loss of generality we can consider the considerably easier task of a fully-factorized approximation ", "page_idx": 3}, {"type": "equation", "text": "$$\nq_{t}^{\\theta}(x_{1}\\mid x):=\\prod_{d=1}^{D}q_{t}^{\\theta}(x_{1}^{d}\\mid x).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "We refer to this special case as mean-field variational flow matching (MF-VFM), and the VFM objective reduces to ", "page_idx": 3}, {"type": "equation", "text": "$$\n{\\mathcal{L}}_{\\mathrm{MF-VFM}}(\\theta)=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right]=-\\mathbb{E}_{t,x,x_{1}}\\left[\\sum_{d=1}^{D}\\log q_{t}^{\\theta}(x_{1}^{d}\\mid x)\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Even though we use a factorized model, it is worth emphasizing that due to the linearity of the conditional field, a mean-field variational distribution can learn the solution exactly. ", "page_idx": 3}, {"type": "text", "text": "Computing the marginal vector field. To calculate the vector field $v_{t}^{\\theta}(x)$ , we can simply substitute the factorized distribution $q_{t}^{\\theta}(x_{1}\\mid x)$ into eq. (8). However, this still requires an evaluation of an expectation. Fortunately, leveraging the linearity condition significantly simplifies this computation, since as long as we have access to the first moment of one-dimensional distributions $q_{t}^{\\theta}(x_{1}^{d}\\mid x)$ , we can efficiently calculate $v_{t}^{\\theta}(x)$ by simply considering the conditional field towards it. Note that for many distributions \u2013 e.g. Gaussian \u2013 learning its parameters is equivalent to learning its expected value. Note that the training procedure will differ for two distinct distributions \u2013 e.g. Gaussian versus Categorical \u2013 so the form of the distribution $q_{t}^{\\theta}(x_{1}\\mid x)$ remains practically important, a flexibility provided through the variational view on flow matching. ", "page_idx": 3}, {"type": "image", "img_path": "UahrHR5HQh/tmp/58ba17d027d3d91a6d027341f17e82ef5de16fb52869979415ba332d9c0c265e.jpg", "img_caption": [], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Figure 1: Parameterization of the vector field in CatFlow. Given an interpolant $x_{t}=t x_{1}+(1-t)x_{0}$ , CatFlow predicts a categorical distribution $q_{t}^{\\theta}(x_{1}\\mid x_{t})$ parameterized by a vector $\\mu_{t}(\\boldsymbol{x}_{t})$ . The resulting construction for the vector field $v_{t}^{\\theta}(x_{t})=(\\mu_{t}(x_{t})-x_{t})/(1-t)$ ensures that trajectories converge to a point on the simplex at $t=1$ . ", "page_idx": 4}, {"type": "text", "text": "If we now use the standard flow matching case of using a conditional vector field based on a linear interpolation, the approximate vector field can be expressed in terms of the first moment of the variational approximation: ", "page_idx": 4}, {"type": "equation", "text": "$$\nv_{t}^{\\theta}(x)=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}|x)}\\left[{\\frac{x_{1}-x}{1-t}}\\right]={\\frac{\\mu_{1}-x}{1-t}},\\qquad\\qquad\\mu_{1}:=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}|x)}\\left[x_{1}\\right].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note that this covers both the case of categorical data, which we focus on in this paper, and the case of continuous data, as considered in traditional flow matching methods. We provided the general algorithm for training and generation in appendix B.1. ", "page_idx": 4}, {"type": "text", "text": "At first glance, the linearity condition of the conditional vector field $u_{t}(x\\mid x_{1})$ in theorem 1 might seem restricting. However, in most state-of-the-art generative modeling techniques, this condition is satisfied, e.g. diffusion-based models, such as flow matching [27, 2, 32], diffusion models [15, 54], and models that combine the injection of Gaussian noise with blurring [44, 16], among others [10, 51]. ", "page_idx": 4}, {"type": "text", "text": "3.3 CatFlow: Mean-Field Variational Flow Matching for Categorical Data ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "The CatFlow Objective In CatFlow, we directly apply the VFM framework to the categorical case. Let our parameterised variational distribution $q_{t}^{\\tilde{\\theta}}(x_{1}^{\\grave{d}^{\\star}}|\\dot{\\textbf{\\i}}\\boldsymbol{x})=\\mathsf{C a t}(x_{1}^{d}\\mid\\theta_{t}^{d}(\\boldsymbol{x}))$ , and let us denote the parameters of this categorical as ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mu_{t}^{d k}(x):=q_{t}^{\\theta}(x_{1}^{d}=k\\mid x)=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}\\mid x)}[\\mathbb{I}[x_{1}^{d}=k]].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Then, the dth component of the learned vector field is ", "page_idx": 4}, {"type": "equation", "text": "$$\nv_{t}^{\\theta,d}(x):=\\sum_{k=1}^{K_{d}}\\mu_{t}^{d k}(x)\\frac{\\mathbb{I}[x_{1}^{d}=k]-x}{1-t}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Intuitively, CatFlow learns a distribution over the conditional trajectories to all corners of the probability simplices, rather than regressing towards an expected conditional trajectory. ", "page_idx": 4}, {"type": "text", "text": "In the categorical setting, the MF-VFM objective can be written out explicitly. Writing out the probability mass function of the categorical distribution, we see that ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\log q_{t}^{\\theta}(x_{1}^{d}\\mid x)=\\log\\prod_{k=1}^{K^{d}}(\\mu_{t}^{d k}(x))^{\\mathbb{I}[x_{1}^{d}=k]}=\\sum_{d=1}^{D}\\mathbb{I}[x_{1}^{d}=k]\\log\\mu_{t}^{d k}(x).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "As such, we find that CatFlow objective is given by a standard cross-entropy loss: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{CatFlow}}(\\theta)=-\\mathbb{E}_{t,x,x_{1}}\\left[\\sum_{d=1}^{D}\\sum_{k=1}^{K^{d}}\\mathbb{I}[x_{1}^{d}=k]\\log\\mu_{t}^{d k}(x)\\right].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Note, however, that when actually computing $v_{t}^{\\theta}$ , this can be done efficiently, since ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbb{E}_{q_{t}^{\\theta}(x_{1}^{d}\\mid x)}\\left[u_{t}(x^{d}\\mid x_{1}^{d})\\right]=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}^{d}\\mid x)}\\left[{\\frac{x_{1}^{d}-x^{d}}{1-t}}\\right]={\\frac{\\mu^{d}(x)-x^{d}}{1-t}},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "since $\\mu^{d}(x):=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}^{d}|x)}[u_{t}^{d}(x_{1}^{d}\\mid x)]$ and the other terms are not in the expectation. Note that this geometrically corresponds to learning the mapping to a point in the probability simplex, and then flowing towards that. This procedure is illustrated in fig. 1. Because of this, training CatFlow is no less efficient than flow matching. We provided the algorithm for training and generation for CatFlow and a Gaussian VFM objective in appendix B.2 and appendix B.3 respectively. ", "page_idx": 5}, {"type": "text", "text": "More precisely, training CatFlow offers two key benefits over standard flow matching. First, given that CatFlow predicts points in the probability simplex and parametrizes the velocities to point into it, an inductive bias is introduced ensuring all generative paths align with realistic trajectories, hence avoiding misaligned paths. Second, using a cross-entropy loss instead of a mean-squared error improves gradient behavior during training. Both aspects enhance learning dynamics and speed up convergence, which is evaluated in section 6.3. Lastly, CatFlow\u2019s ability to learn probability vectors \u2013 rather than directly choosing classes as is common in discrete approaches \u2013 allows the model to express uncertainty about variables at a specific time. This is especially useful in complex domains like molecular generation, where initial uncertainty about components decreases as more structure is established, leading to more precise predictions. ", "page_idx": 5}, {"type": "text", "text": "Permutation Equivariance. Graphs, defined by vertices and edges, lack a natural vertex order unlike other data types. This permutation invariance means any vertex labeling represents the same graph if the connections remain unchanged. Note that even though the following results apply to graphs, an unordered set of categorical variables can be described by a graph without edges. Under natural conditions \u2013 see appendix A \u2013 we ensure CatFlow adheres to this symmetry (see appendix A.4 for the proof). ", "page_idx": 5}, {"type": "text", "text": "Theorem 2. CatFlow generates exchangeable distributions, i.e. CatFlow generates all graph permutations with equal probability. ", "page_idx": 5}, {"type": "text", "text": "4 Flow Matching and Score Matching: Bridging the Gap ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this section, we relate the VFM framework to existing generative modeling approaches. First, we show that VFM has standard flow matching as a special case when the variational approximation is Gaussian. This implies that VFM provides a more general approach to learning CNFs. Second, we show that through VFM, we are not only able to compute the target vector field, but also the score function as used in score-based diffusion. This has two primary theoretical implications: 1) VFM simultaneously learns deterministic and stochastic dynamics \u2013 as diffusion models rely on stochastic dynamics, and 2) VFM provides a variational bound on the model likelihood. ", "page_idx": 5}, {"type": "text", "text": "Relationship to Flow Matching. VFM admits FM as a special case, under certain assumptions on $u_{t}(x\\mid x_{1})$ , when the variational approximation is Gaussian. Formally, the following holds (see theorem 3 in appendix A.2 for the proof): ", "page_idx": 5}, {"type": "text", "text": "Theorem 3. Assume the conditional vector field $u_{t}(x\\mid x_{1})$ is linear in $x_{1}$ and is of the form ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{u_{t}(x|x_{1})=A_{t}(x)x_{1}+b_{t}(x),}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $A_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}\\times\\mathbb{R}^{D}$ and $b_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}$ . Moreover, assume that $A_{t}(x)$ is an invertible matrix and $q_{t}^{\\theta}(x_{1}\\mid x)=\\mathcal{N}(x_{1}\\mid\\mu_{t}^{\\theta}(x),\\Sigma_{t}(x))$ , where $\\Sigma_{t}(x)={\\textstyle\\frac{1}{2}}(A_{t}^{\\top}(x)A_{t}(x))^{-1}$ . Then, VFM reduces to flow matching. ", "page_idx": 5}, {"type": "text", "text": "Relationship to Score-Based Models. Flow matching [27] is inspired by score-based models [54] and shares strong connections with them. This leads us to two observations. The first is that it should be possible to define a variational parameterization of the score function in diffusion models that is analogous to the one in VFM. The second is that we can build on existing results that show that many diffusion model objectives, including the standard flow matching objective with a linear interpolant, can be expressed as special cases of a general weighted loss function [22, 21]. Here we simililarly define a bound on the log-likelihood in terms of a reweighted VFM objective. ", "page_idx": 5}, {"type": "text", "text": "In score-based models, the objective is to approximate the score function $\\nabla_{x}\\log{p_{t}(x)}$ with a function $s_{t}^{\\theta}(x)$ . A connection to VFM becomes apparent by observing that the score function can also be expressed as an expectation with respect to $p_{t}(x_{1}\\mid x)$ (see appendix A.5 for derivation): ", "page_idx": 5}, {"type": "text", "text": "", "page_idx": 6}, {"type": "equation", "text": "$$\n\\nabla_{x}\\log p_{t}(x)=\\int p_{t}(x_{1}\\mid x)\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\mathrm{d}x_{1}=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\right],\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\nabla_{x}\\log{p_{t}(x\\mid x_{1})}$ is the tractable conditional score function. Similarly, we can parameterize $s_{t}^{\\theta}(x)$ in terms of an expectation with respect to a variational approximation $q_{t}^{\\theta}(x_{1}\\mid x)$ , ", "page_idx": 6}, {"type": "equation", "text": "$$\ns_{t}^{\\theta}(x):=\\int q_{t}^{\\theta}(x_{1}\\mid x)\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\,\\mathrm{d}x_{1}.\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "It is now clear that $s_{t}^{\\theta}(x)=\\nabla_{x}\\log p_{t}(x)$ when $q_{t}^{\\theta}(x_{1}\\mid x)=p_{t}(x_{1}\\mid x)$ . This suggests that there exists a variational formulation of score-based models that is entirely analogous to VFM. Indeed, existing work on continuous diffusion for categorical data [11] defines a parameterization of the score function of this form (see section 5 for a more detailed discussion). ", "page_idx": 6}, {"type": "text", "text": "Following [54, 3], we can construct stochastic generative dynamics $d x\\;=\\;\\tilde{v}_{t}^{\\theta}(x)d t+g_{t}d w$ to approximate the true dynamics $d x=\\tilde{u}_{t}(x)d t+g_{t}\\bar{d}w$ (see details in appendix A.6), with ", "page_idx": 6}, {"type": "equation", "text": "$$\n\\tilde{u}_{t}(x):=\\mathbb{E}_{p_{t}(x_{1}|x)}\\left[u_{t}(x\\mid x_{1})+\\frac{g_{t}^{2}}{2}\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\right],\\quad\\tilde{v}_{t}^{\\theta}(x):=v_{t}^{\\theta}(x)+\\frac{g_{t}^{2}}{2}s_{t}^{\\theta}(x).\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Here $g_{t}:[0,1]\\to\\mathbb{R}_{+}$ is a scalar function, and $w$ is a standard Wiener process. ", "page_idx": 6}, {"type": "text", "text": "This connection has two important implications. First, it shows that learning a variational approximation $q_{t}^{\\theta}(x_{1}\\mid x)$ can be used to define both deterministic and stochastic dynamics, whereas flow matching typically considers deterministic dynamics only (as flows are viewed through the lens of ODEs). Second, it enables us to show that a reweighted version of the VFM objective provides a bound on the log-likelihood of the model. This result, inspired by [21], provides another theoretical motivation for learning using the VFM objective. ", "page_idx": 6}, {"type": "text", "text": "Theorem 4. Rewrite the Variational Flow Matching objective as follows: ", "page_idx": 6}, {"type": "equation", "text": "$$\n{\\mathcal{L}}_{\\mathrm{VFM}}(\\theta)=\\mathbb{E}_{t,x}\\left[{\\mathcal{L}}^{\\theta}(t,x)\\right]\\quad{\\mathrm{where}}\\quad{\\mathcal{L}}^{\\theta}(t,x)=-\\mathbb{E}_{x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right].\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "Then, the following holds: ", "page_idx": 6}, {"type": "equation", "text": "$$\n-\\mathbb{E}_{x_{1}}\\left[\\log q_{1}^{\\theta}(x_{1})\\right]\\leq\\mathbb{E}_{t,x}\\left[\\lambda_{t}(x)\\mathcal{L}^{\\theta}(t,x)\\right]+C,\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\lambda_{t}(x)$ is a non-negative function and $C$ is a constant. ", "page_idx": 6}, {"type": "text", "text": "We provide a proof in appendix A.7. We further note that that applying the same linearity condition that we discussed in section 3.2 to the conditional score function maintains all the same connections with score-based models. ", "page_idx": 6}, {"type": "text", "text": "5 Related Work ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Diffusion Models for Discrete Data. Several approaches to diffusion models have been developed for graph generation. In [58], the authors define a Markov process that progressively edits graphs by adding or removing edges and altering node or edge categories and is trained using a graph transformer network, that reverses this process to predict the original graph structure from its noisy version. This approach breaks down the complex task of graph distribution learning into simpler node and edge classification tasks. Moreover, [20] proposes a score-based generative model for graph generation using a system of stochastic differential equations (SDEs). The model effectively captures the complex dependencies between graph nodes and edges by diffusing both node features and adjacency matrices through continuous-time processes. These are non-autoregressive graph generation approaches that perform on par with autoregressive ones, such as in [31, 26, 36]. Other non-autoregressive approaches worth mentioning are [28, 34, 33]. ", "page_idx": 6}, {"type": "text", "text": "There is also work on diffusion-based models for discrete data in the form of text and other sequential data [4, 33, 61, 18]. Though not explicitly formulated in terms of a variational perspective, the work on continuous diffusion for categorical data [11] arrives at a an approach that is closely related to that of CatFlow. This work defines a diffusion in the embedding space of a transformer-based language model. It defines an approximation of the score function as an expected value of a conditional score function as in eq. (23), which leads to an expression for the learned score function in terms of a mean embedding, analogous to the one we obtain in eq. (15). Where this approach differs from CatFlow, other than in that it defines a flow in the embedding space of language models, is in how the objective is defined. The authors also minimize a cross-entropy loss, but employ a time-warped objective, similar to the general weighted objective proposed in [22], where the warping is optimized to ensure that the entropy of predictions decreases linearly when moving from noise to data in uniform time. ", "page_idx": 6}, {"type": "table", "img_path": "UahrHR5HQh/tmp/b646d99c6a90a23cc1d39ef11cfb3c1cf862b464be5ce536cf95fb56473ab24d.jpg", "table_caption": ["Table 1: Results abstract graph generation. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "text", "text": "Flow-based methods for Discrete Data. Recently, two flow-based methods for discrete generative modeling have been proposed, which differ both in terms of technical approach and intended use case from the work that we present here.2 ", "page_idx": 7}, {"type": "text", "text": "In [56], a Dirichlet flow framework for DNA sequence design is introduced, utilizing a transport problem defined over the probability simplex, similar to diffusion on simplices proposed in [43]. This approach differs from CatFlow in that it represents the conditional probability path $p_{t}(x\\mid x_{1})$ using a Dirichlet distribution. This implies that points $x$ are constrained to the simplex, which is not the case for CatFlow. Dirichlet Flows have not been evaluated on graph generation, but we did carry out preliminary experiments based on the released source code. We compare to this approach in our experiments. ", "page_idx": 7}, {"type": "text", "text": "In [6], Discrete Flow Models (DFMs) are introduced. DFMs use Continuous-Time Markov Chains to enable flexible and dynamic sampling in multimodal generative modeling of both continuous and discrete data. Though sharing a goal, this approach differs significantly from CatFlow as in the end the resulting model does not learn a CNF, but rather generation through sequential sampling from a time-dependent categorical distribution. As in the case of Dirichlet flows, no evaluation on graph generation was performed. ", "page_idx": 7}, {"type": "text", "text": "The switch to the variational perspective is inspired by [58], showing significant improvement through viewing the dynamics as a classification task over end points. However, CatFlow is still a continuous model, and integrates \u2013 rather than iteratively samples \u2013 during generation. ", "page_idx": 7}, {"type": "text", "text": "6 Experiments ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "We evaluate CatFlow in three sets of experiments. First, we consider an abstract graph generation task proposed in [35], where the goal of this task is to evaluate if CatFlow is able to capture the topological properties of graphs. Second, we consider two common molecular benchmarks, QM9 [40] and ZINC250k [19], consisting of small and (relatively) large molecules respectively. This task is chosen to see if CatFlow can learn semantic information in graph generation, such as molecular properties. Finally, we perform an ablation comparing CatFlow to standard flow matching, specifically in terms of generalization. The experimental setup and model choices are provided in appendix D. ", "page_idx": 7}, {"type": "text", "text": "Note that we treat graphs as purely categorical/discrete objects and do not consider \u2018geometric\u2019 graphs that are embedded in e.g. Euclidean space. Specifically, for some graph with $K_{v}$ node classes and $K_{e}$ edge classes, we process the graph as a fully-connected graph, where each node is treated as a categorical variable of one of $K_{v}$ classes and each edge of $K_{e}+1$ classes, where the extra class corresponds with being absent. ", "page_idx": 7}, {"type": "table", "img_path": "UahrHR5HQh/tmp/9a4d4ed5e4ab2c74944cec2fafc4347a8a9e9d17ea64984026e0157d989ce22c.jpg", "table_caption": ["Table 2: Results molecular generation. "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "6.1 Abstract graph generation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We first evaluate CatFlow on an abstract graph generation task, including synthetic and real-world graphs. We consider 1) Ego-small (200 graphs), consisting of small ego graphs drawn from a larger Citeseer network dataset [48], 2) Community-small (100 graphs), consisting of randomly generated community graphs, 3) Enzymes (587 graphs), consisting of protein graphs representing tertiary structures of the enzymes from [47], and 4) Grid (100 graphs), consisting of 2D grid graphs. We follow the standard experimental setup popularized by [62] and hence report the maximum mean discrepancy (MMD) to compare the distributions of degree, clustering coefficient, and the number of occurrences of orbits with 4 nodes between generated graphs and a test set. Following [20], we also use the Gaussian Earth Mover\u2019s Distance kernel to compute the MMDs instead of the total variation. ", "page_idx": 8}, {"type": "text", "text": "The results of the Ego-small and Community-small tasks are summarized in table 1, and additional results (and error bars) are provided in appendix C. The results indicate that CatFlow is able to capture topological properties of graphs, and performs well on abstract graph generation. ", "page_idx": 8}, {"type": "text", "text": "6.2 Molecular Generation: QM9 & ZINC250k ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Molecular generation entails designing novel molecules with specific properties, a complex task hindered by the vast chemical space and long-range dependencies in molecular structures. We evaluate CatFlow on two popular molecular generation benchmarks: QM9 and ZINC250k [40, 19]. ", "page_idx": 8}, {"type": "text", "text": "We follow the standard setup \u2013 e.g. as in [49, 33, 58, 20] \u2013 of kekulizing the molecules using RDKit [25] and removing the hydrogen atoms. We sample 10,000 molecules and evaluate them on validity, uniqueness, and Fr\u00e9chet ChemNet Distance (FCD) \u2013 evaluating the distance between data and generated molecules using the activations of ChemNet [39]. Here, validity is computed without valency correction or edge resampling, hence following [63] rather than [49, 33], as is more reasonable due to the existence of formal charges in the data itself. We do not report novelty for QM9 and ZINC250k, as QM9 is an exhaustive list of all small molecules under some chemical constraint and all models obtain (close to) $100\\%$ novelty on ZINC250k.3 ", "page_idx": 8}, {"type": "image", "img_path": "UahrHR5HQh/tmp/e517819709ba7b16d2e61bab0d91c66dc78935696347731d8fd8471f4c4a5c83.jpg", "img_caption": ["Figure 2: CatFlow samples of QM9 (top) and ZINC250k (bottom). "], "img_footnote": [], "page_idx": 8}, {"type": "image", "img_path": "UahrHR5HQh/tmp/abdcad6a49b9310f42052a4e5d94120246b30f0363c66be433fec2dbf4505744.jpg", "img_caption": ["Figure 3: Ablation results. We compare standard flow matching and CatFlow. We visualize performance degradation in terms of a score, which is the percentage of molecules that is valid and unique, for a varying number of layers and percentage of the training data. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "The results are summarized in table 2 and samples from the model are shown in fig. 2. CatFlow obtains state-of-the-art results on both QM9 and ZINC250k, virtually obtaining perfect performance on both datasets. It is worth noting that CatFlow also converges faster than flow matching and is not computationally more expensive than any of the baselines either during training or generation. ", "page_idx": 9}, {"type": "text", "text": "6.3 CatFlow Ablations ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "To understand the difference in performance between CatFlow and a standard flow matching formulation we perform ablations. we focus on generalization capabilities, and as such consider ablations that the number of parameters in the model and the amount of training data. ", "page_idx": 9}, {"type": "text", "text": "In fig. 3 we report a score, which is the percentage of generated molecules that is valid and unique. CatFlow not only outperforms regular flow matching in the large model and full data setting, but is also significantly more robust to a decrease in model-size and data. Moreover, we observe significantly faster convergence (curves not shown). We hypothesize this is a consequence of the optimization procedure not exploring \u2018irrelevant\u2019 paths that do not point towards the probability simplex. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We have introduced a variational reformulation of flow matching. This formulation in turn informed the design of a simple flow matching method for categorical data, which achieves strong performance on graph generation tasks. Variational flow is very general and opens up several lines of inquiry. We see immediate opportunities to apply CatFlow to other discrete data types, including text, source code, and more broadly to the modeling of mixed discrete-continuous data modalities. Additionally, the connections to score-based models that we identify in this paper, suggest a path towards learning both deterministic and stochastic dynamics. ", "page_idx": 9}, {"type": "text", "text": "Limitations. While the VFM formulation that we identify in this paper has potential in terms of its generality, we have as yet only considered its application to the specific task of categorical graph generation. We leave other use cases of VFM to future work. A limitation of CatFlow, which is shared with related approaches to graph generation, is that reasoning about the set of possible edges has a cost that is quadratic in the number of nodes. As a result CatFlow does not scale well to e.g. large proteins of $1\\dot{0}^{4}$ or more atoms. ", "page_idx": 9}, {"type": "text", "text": "Ethics Statement. Graph generation in general, and molecular generation specifically, holds great promise for advancing drug discovery and personalized medicine. However, this technology also poses ethical concerns, such as the potential for misuse in creating harmful substances. In terms of technology readiness, this work is not yet at a level where we foresee direct benefits or risks. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgements. This project was supported by the Bosch Center for Artificial Intelligence. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Michael S Albergo, Nicholas M Boff,i and Eric Vanden-Eijnden. Stochastic interpolants: A unifying framework for flows and diffusions. arXiv preprint arXiv:2303.08797, 2023.   \n[2] Michael Samuel Albergo and Eric Vanden-Eijnden. Building Normalizing Flows with Stochastic Interpolants. In The Eleventh International Conference on Learning Representations, September 2022.   \n[3] Brian DO Anderson. Reverse-time diffusion equation models. Stochastic Processes and their Applications, 12(3):313\u2013326, 1982.   \n[4] Jacob Austin, Daniel D Johnson, Jonathan Ho, Daniel Tarlow, and Rianne Van Den Berg. Structured denoising diffusion models in discrete state-spaces. Advances in Neural Information Processing Systems, 34:17981\u201317993, 2021.   \n[5] Heli Ben-Hamu, Samuel Cohen, Joey Bose, Brandon Amos, Maximillian Nickel, Aditya Grover, Ricky T. Q. Chen, and Yaron Lipman. Matching normalizing flows and probability paths on manifolds. In Kamalika Chaudhuri, Stefanie Jegelka, Le Song, Csaba Szepesvari, Gang Niu, and Sivan Sabato, editors, Proceedings of the 39th International Conference on Machine Learning, volume 162 of Proceedings of Machine Learning Research, pages 1749\u20131763. PMLR, 17\u201323 Jul 2022.   \n[6] Andrew Campbell, Jason Yim, Regina Barzilay, Tom Rainforth, and Tommi Jaakkola. Generative flows on discrete state-spaces: Enabling multimodal flows with applications to protein co-design. In Ruslan Salakhutdinov, Zico Kolter, Katherine Heller, Adrian Weller, Nuria Oliver, Jonathan Scarlett, and Felix Berkenkamp, editors, Proceedings of the 41st International Conference on Machine Learning, volume 235 of Proceedings of Machine Learning Research, pages 5453\u20135512. PMLR, 21\u201327 Jul 2024.   \n[7] Ricky TQ Chen and Yaron Lipman. Flow matching on general geometries. In The Twelfth International Conference on Learning Representations, 2024.   \n[8] Ricky TQ Chen, Yulia Rubanova, Jesse Bettencourt, and David K Duvenaud. Neural ordinary differential equations. Advances in neural information processing systems, 31, 2018.   \n[9] Quan Dao, Hao Phung, Binh Nguyen, and Anh Tran. Flow matching in latent space. arXiv preprint arXiv:2307.08698, 2023.   \n[10] Giannis Daras, Mauricio Delbracio, Hossein Talebi, Alex Dimakis, and Peyman Milanfar. Soft diffusion: Score matching with general corruptions. Transactions on Machine Learning Research, 2023.   \n[11] Sander Dieleman, Laurent Sartran, Arman Roshannai, Nikolay Savinov, Yaroslav Ganin, Pierre H. Richemond, Arnaud Doucet, Robin Strudel, Chris Dyer, Conor Durkan, Curtis Hawthorne, R\u00e9mi Leblond, Will Grathwohl, and Jonas Adler. Continuous diffusion for categorical data, December 2022.   \n[12] Vijay Prakash Dwivedi and Xavier Bresson. A generalization of transformer networks to graphs. AAAI Workshop on Deep Learning on Graphs: Methods and Applications, 2021.   \n[13] Ehsan Ebrahimy and Robert Shimer. Stock\u2013flow matching. Journal of Economic Theory, 145(4):1325\u20131353, 2010.   \n[14] Will Grathwohl, Ricky T. Q. Chen, Jesse Bettencourt, and David Duvenaud. Scalable reversible generative models with free-form continuous dynamics. In International Conference on Learning Representations, 2019.   \n[15] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840\u20136851, 2020.   \n[16] Emiel Hoogeboom and Tim Salimans. Blurring diffusion models. In The Eleventh International Conference on Learning Representations, 2023.   \n[17] Emiel Hoogeboom, V\u0131ctor Garcia Satorras, Cl\u00e9ment Vignac, and Max Welling. Equivariant diffusion for molecule generation in 3d. In International conference on machine learning, pages 8867\u20138887. PMLR, 2022.   \n[18] Naoto Inoue, Kotaro Kikuchi, Edgar Simo-Serra, Mayu Otani, and Kota Yamaguchi. Layoutdm: Discrete diffusion model for controllable layout generation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 10167\u201310176, 2023.   \n[19] John J Irwin, Teague Sterling, Michael M Mysinger, Erin S Bolstad, and Ryan G Coleman. Zinc: a free tool to discover chemistry for biology. Journal of chemical information and modeling, 52(7):1757\u20131768, 2012.   \n[20] Jaehyeong Jo, Seul Lee, and Sung Ju Hwang. Score-based Generative Modeling of Graphs via the System of Stochastic Differential Equations. In Proceedings of the 39th International Conference on Machine Learning, pages 10362\u201310383. PMLR, June 2022.   \n[21] Diederik Kingma and Ruiqi Gao. Understanding Diffusion Objectives as the ELBO with Simple Data Augmentation. Advances in Neural Information Processing Systems, 36:65484\u201365516, December 2023.   \n[22] Diederik Kingma, Tim Salimans, Ben Poole, and Jonathan Ho. Variational Diffusion Models. In Advances in Neural Information Processing Systems, volume 34, pages 21696\u201321707. Curran Associates, Inc., 2021.   \n[23] Leon Klein, Andreas Kr\u00e4mer, and Frank Noe. Equivariant flow matching. In Thirty-Seventh Conference on Neural Information Processing Systems, November 2023.   \n[24] Jonas Kohler, Yaoyi Chen, Andreas Kramer, Cecilia Clementi, and Frank No\u00e9. Flow-matching: Efficient coarse-graining of molecular dynamics without forces. Journal of Chemical Theory and Computation, 19(3):942\u2013952, 2023.   \n[25] Greg Landrum. Rdkit: Open-source cheminformatics software, 2016.   \n[26] Renjie Liao, Yujia Li, Yang Song, Shenlong Wang, Will Hamilton, David K Duvenaud, Raquel Urtasun, and Richard Zemel. Efficient graph generation with graph recurrent attention networks. Advances in neural information processing systems, 32, 2019.   \n[27] Yaron Lipman, Ricky T. Q. Chen, Heli Ben-Hamu, Maximilian Nickel, and Matthew Le. Flow matching for generative modeling. In The Eleventh International Conference on Learning Representations, 2023.   \n[28] Phillip Lippe and Efstratios Gavves. Categorical Normalizing Flows via Continuous Transformations. In International Conference on Learning Representations, October 2020.   \n[29] Jenny Liu, Aviral Kumar, Jimmy Ba, Jamie Kiros, and Kevin Swersky. Graph normalizing flows. Advances in Neural Information Processing Systems, 32, 2019.   \n[30] Meng Liu, Keqiang Yan, Bora Oztekin, and Shuiwang Ji. GraphEBM: Molecular graph generation with energy-based models. In Energy Based Models Workshop - ICLR 2021, 2021.   \n[31] Qi Liu, Miltiadis Allamanis, Marc Brockschmidt, and Alexander Gaunt. Constrained graph variational autoencoders for molecule design. Advances in neural information processing systems, 31, 2018.   \n[32] Xingchao Liu, Chengyue Gong, and Qiang Liu. Flow straight and fast: Learning to generate and transfer data with rectified flow. In The Eleventh International Conference on Learning Representations, 2023.   \n[33] Youzhi Luo, Keqiang Yan, and Shuiwang Ji. Graphdf: A discrete flow model for molecular graph generation. In International conference on machine learning, pages 7192\u20137203. PMLR, 2021.   \n[34] Kaushalya Madhawa, Katushiko Ishiguro, Kosuke Nakago, and Motoki Abe. Graphnvp: An invertible flow model for generating molecular graphs. arXiv preprint arXiv:1905.11600, 2019.   \n[35] Karolis Martinkus, Andreas Loukas, Nathana\u00ebl Perraudin, and Roger Wattenhofer. Spectre: Spectral conditioning helps to overcome the expressivity limits of one-shot graph generators. In International Conference on Machine Learning, pages 15159\u201315179. PMLR, 2022.   \n[36] Roc\u00edo Mercado, Tobias Rastemo, Edvard Lindel\u00f6f, G\u00fcnter Klambauer, Ola Engkvist, Hongming Chen, and Esben Jannik Bjerrum. Graph networks for molecular design. Machine Learning: Science and Technology, 2(2):025023, 2021.   \n[37] Chenhao Niu, Yang Song, Jiaming Song, Shengjia Zhao, Aditya Grover, and Stefano Ermon. Permutation invariant graph generation via score-based generative modeling. In International Conference on Artificial Intelligence and Statistics, pages 4474\u20134484. PMLR, 2020.   \n[38] George Papamakarios, Eric Nalisnick, Danilo Jimenez Rezende, Shakir Mohamed, and Balaji Lakshminarayanan. Normalizing flows for probabilistic modeling and inference. Journal of Machine Learning Research, 22(57):1\u201364, 2021.   \n[39] Kristina Preuer, Philipp Renz, Thomas Unterthiner, Sepp Hochreiter, and Gunter Klambauer. Fr\u00e9chet chemnet distance: a metric for generative models for molecules in drug discovery. Journal of chemical information and modeling, 58(9):1736\u20131741, 2018.   \n[40] Raghunathan Ramakrishnan, Pavlo O Dral, Matthias Rupp, and O Anatole Von Lilienfeld. Quantum chemistry structures and properties of 134 kilo molecules. Scientific data, 1(1):1\u20137, 2014.   \n[41] Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical text-conditional image generation with clip latents. arXiv preprint arXiv:2204.06125, 1(2):3, 2022.   \n[42] Danilo Rezende and Shakir Mohamed. Variational inference with normalizing flows. In International conference on machine learning, pages 1530\u20131538. PMLR, 2015.   \n[43] Pierre H. Richemond, Sander Dieleman, and Arnaud Doucet. Categorical SDEs with Simplex Diffusion, October 2022.   \n[44] Severi Rissanen, Markus Heinonen, and Arno Solin. Generative modelling with inverse heat dissipation. In International Conference on Learning Representations (ICLR), 2023.   \n[45] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684\u201310695, 2022.   \n[46] Noam Rozen, Aditya Grover, Maximilian Nickel, and Yaron Lipman. Moser flow: Divergencebased generative modeling on manifolds. Advances in Neural Information Processing Systems, 34:17669\u201317680, 2021.   \n[47] Ida Schomburg, Antje Chang, Christian Ebeling, Marion Gremse, Christian Heldt, Gregor Huhn, and Dietmar Schomburg. Brenda, the enzyme database: updates and major new developments. Nucleic acids research, 32(suppl_1):D431\u2013D433, 2004.   \n[48] Prithviraj Sen, Galileo Namata, Mustafa Bilgic, Lise Getoor, Brian Galligher, and Tina EliassiRad. Collective classification in network data. AI magazine, 29(3):93\u201393, 2008.   \n[49] Chence Shi, Minkai Xu, Zhaocheng Zhu, Weinan Zhang, Ming Zhang, and Jian Tang. Graphaf: a flow-based autoregressive model for molecular graph generation. In International Conference on Learning Representations, 2019.   \n[50] Martin Simonovsky and Nikos Komodakis. Graphvae: Towards generation of small graphs using variational autoencoders. In Artificial Neural Networks and Machine Learning\u2013ICANN 2018: 27th International Conference on Artificial Neural Networks, Rhodes, Greece, October 4-7, 2018, Proceedings, Part I 27, pages 412\u2013422. Springer, 2018.   \n[51] Raghav Singhal, Mark Goldstein, and Rajesh Ranganath. Where to diffuse, how to diffuse and how to get back: Automated learning in multivariate diffusions. In International Conference on Learning Representations, 2023.   \n[52] Jiaming Song, Chenlin Meng, and Stefano Ermon. Denoising diffusion implicit models. In International Conference on Learning Representations, 2020.   \n[53] Yang Song, Conor Durkan, Iain Murray, and Stefano Ermon. Maximum likelihood training of score-based diffusion models. Advances in neural information processing systems, 34:1415\u2013 1428, 2021.   \n[54] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2020.   \n[55] Yuxuan Song, Jingjing Gong, Minkai Xu, Ziyao Cao, Yanyan Lan, Stefano Ermon, Hao Zhou, and Wei-Ying Ma. Equivariant Flow Matching with Hybrid Probability Transport for 3D Molecule Generation. In Thirty-Seventh Conference on Neural Information Processing Systems, November 2023.   \n[56] Hannes Stark, Bowen Jing, Chenyu Wang, Gabriele Corso, Bonnie Berger, Regina Barzilay, and Tommi Jaakkola. Dirichlet flow matching with applications to DNA sequence design. In Ruslan Salakhutdinov, Zico Kolter, Katherine Heller, Adrian Weller, Nuria Oliver, Jonathan Scarlett, and Felix Berkenkamp, editors, Proceedings of the 41st International Conference on Machine Learning, volume 235 of Proceedings of Machine Learning Research, pages 46495\u201346513. PMLR, 21\u201327 Jul 2024.   \n[57] Brian L Trippe, Jason Yim, Doug Tischer, David Baker, Tamara Broderick, Regina Barzilay, and Tommi S Jaakkola. Diffusion probabilistic modeling of protein backbones in 3d for the motifscaffolding problem. In The Eleventh International Conference on Learning Representations, 2022.   \n[58] Clement Vignac, Igor Krawczuk, Antoine Siraudin, Bohan Wang, Volkan Cevher, and Pascal Frossard. DiGress: Discrete Denoising diffusion for graph generation. In The Eleventh International Conference on Learning Representations, September 2022.   \n[59] Pascal Vincent. A connection between score matching and denoising autoencoders. Neural computation, 23(7):1661\u20131674, 2011.   \n[60] Jonas Wildberger, Maximilian Dax, Simon Buchholz, Stephen Green, Jakob H Macke, and Bernhard Sch\u00f6lkopf. Flow matching for scalable simulation-based inference. Advances in Neural Information Processing Systems, 36, 2024.   \n[61] Dongchao Yang, Jianwei Yu, Helin Wang, Wen Wang, Chao Weng, Yuexian Zou, and Dong Yu. Diffsound: Discrete diffusion model for text-to-sound generation. IEEE/ACM Transactions on Audio, Speech, and Language Processing, 2023.   \n[62] Jiaxuan You, Rex Ying, Xiang Ren, William Hamilton, and Jure Leskovec. Graphrnn: Generating realistic graphs with deep auto-regressive models. In International conference on machine learning, pages 5708\u20135717. PMLR, 2018.   \n[63] Chengxi Zang and Fei Wang. Moflow: an invertible flow model for generating molecular graphs. In Proceedings of the 26th ACM SIGKDD international conference on knowledge discovery & data mining, pages 617\u2013626, 2020.   \n[64] Qinsheng Zhang and Yongxin Chen. Fast sampling of diffusion models with exponential integrator. In The Eleventh International Conference on Learning Representations, 2022. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Proofs and Derivations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "A.1 Derivation of the Variational Flow Matching Objective ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "We derive eq. (9) that states the equivalence of the optimization of the VFM objective and minimization of the KL divergence between the true endpoint distribution $p_{t}(x_{1}\\mid x)$ and the variational approximation $q_{t}^{\\theta}(x_{1}\\mid x)$ . Note that ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\operatorname*{min}_{\\theta}\\;\\mathbb{E}_{t,x}\\left[{\\mathrm{KL}}\\big(p_{t}(x_{1}\\mid x)\\mid\\mid q_{t}^{\\theta}(x_{1}\\mid x)\\big)\\right]=\\operatorname*{max}_{\\theta}\\;\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right],\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $t\\sim\\mathrm{Uniform}(0,1),\\,x\\sim p_{t}(x)$ and $x_{1}\\sim p_{\\mathrm{data}}(x_{1})$ . ", "page_idx": 14}, {"type": "text", "text": "First, we rewrite the KL divergence as combination of entropy and cross-entropy $\\mathsf{K L}\\left(p\\mid\\mid q\\right)=$ ${\\mathrm{H}}(p,q)-{\\mathrm{H}}(p)$ : ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{t,x}\\left[\\mathrm{KL}\\left(p_{t}(x_{1}\\mid x)\\mid\\mid q_{t}^{\\theta}(x_{1}\\mid x)\\right)\\right]=\\!\\!\\mathbb{E}_{t,x}\\left[\\mathrm{H}\\!\\left(p_{t}(x_{1}\\mid x),q_{t}^{\\theta}(x_{1}\\mid x)\\right)\\right]-}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\mathbb{E}_{t,x}\\left[\\mathrm{H}\\!\\left(p_{t}(x_{1}\\mid x)\\right)\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "We observe that the entropy term does not depend on the parameters $\\theta$ . Consequently we disregard it when optimising the variational distribution $\\,{\\dot{q}}_{t}^{\\theta}(x_{1}\\mid x)$ . ", "page_idx": 14}, {"type": "text", "text": "Second, we rewrite the cross-entropy term: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathbb{E}_{t,x}\\left[\\mathrm{H}\\big(p_{t}(x_{1}\\mid x),q_{t}^{\\theta}(x_{1}\\mid x)\\big)\\right]=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right].\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Therefore, the second part of eq. (27) corresponds to negative cross-entropy and minimisation corresponds to maximisation of negative cross-entropy. ", "page_idx": 14}, {"type": "text", "text": "A.2 Flow Matching as a Special Case of Variational Flow Matching ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Theorem 3. Assume the conditional vector field $u_{t}(x\\mid x_{1})$ is linear in $x_{1}$ and is of the form ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r}{u_{t}(x|x_{1})=A_{t}(x)x_{1}+b_{t}(x),}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $A_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}\\times\\mathbb{R}^{D}$ and $b_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}$ . Moreover, assume that $A_{t}(x)$ is an invertible matrix and $q_{t}^{\\theta}(x_{1}\\mid x)=\\mathcal{N}(x_{1}\\mid\\mu_{t}^{\\theta}(x),\\Sigma_{t}(x))$ , where $\\Sigma_{t}(x)={\\textstyle\\frac{1}{2}}(A_{t}^{\\top}(x)A_{t}(x))^{-1}$ . Then, VFM reduces to flow matching. ", "page_idx": 14}, {"type": "text", "text": "Proof. Let us substitute the assumed form of $q_{t}^{\\theta}(x_{1}\\mid x)$ into the VFM objective: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathcal{L}_{\\mathtt{V F M}}(\\theta)=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right]}&{}\\\\ {=-\\mathbb{E}_{t,x,x_{1}}\\left[\\log\\left((2\\pi)^{-D/2}\\left|\\Sigma_{t}(x)\\right|^{-1/2}\\exp\\left(-\\left\\|A_{t}(x)\\left(x_{1}-\\mu_{t}^{\\theta}(x)\\right)\\right\\|_{2}^{2}\\right)\\right)\\right]}&{}\\\\ {=\\mathbb{E}_{t,x,x_{1}}\\left[\\left\\|A_{t}(x)\\left(x_{1}-\\mu_{t}^{\\theta}(x)\\right)\\right\\|_{2}^{2}\\right]+\\frac{1}{2}\\mathbb{E}_{t,x,x_{1}}\\Big[D\\log\\left(2\\pi\\right)+\\log\\left|\\Sigma_{t}(x)\\right|\\Big]}&{}\\\\ {=\\mathbb{E}_{t,x,x_{1}}\\left[\\left\\|\\left(A_{t}(x)x_{1}+b_{t}(x)\\right)-\\left(A_{t}(x)\\mu_{t}^{\\theta}(x)+b_{t}(x)\\right)\\right\\|_{2}^{2}\\right]+C}&{}\\\\ {=\\mathbb{E}_{t,x,x_{1}}\\left[\\left\\|u_{t}(x\\mid x_{1})-v_{t}^{\\theta}(x)\\right\\|_{2}^{2}\\right]+C,}&{}\\end{array}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "which is what we wanted to show. ", "page_idx": 14}, {"type": "text", "text": "A.3 Decomposition of the Flow ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Theorem 1. Assume that the conditional vector field $u_{t}(x\\mid x_{1})$ is linear in $x_{1}$ . Then, for any distribution $r_{t}(x_{1}\\mid x)$ such that the marginal distributions coincide with those of $p_{t}(x_{1}\\mid x)$ , the corresponding expectations of $u_{t}(x\\mid x_{1})$ are equal, i.e. ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathbb{E}_{r_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right].\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Proof. Applying the linearity condition, we rewrite the conditional vector field $\\boldsymbol u_{t}(\\boldsymbol x|\\boldsymbol x_{1})$ as such: ", "page_idx": 15}, {"type": "equation", "text": "$$\nu_{t}(x\\mid x_{1})=A_{t}(x)x_{1}+b_{t}(x),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where $A_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\rightarrow\\mathbb{R}^{D}\\times\\mathbb{R}^{D}$ and $b_{t}(x):[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}^{D}$ . Then, we substitute it into equation: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbb{E}_{p_{t}(x_{1}|x)}\\left[u_{t}(x\\mid x_{1})\\right]=\\mathbb{E}_{p_{t}(x_{1}|x)}\\left[A_{t}(x)x_{1}+b_{t}(x)\\right]}\\\\ &{}&{=A_{t}(x)\\mathbb{E}_{p_{t}(x_{1}|x)}\\left[x_{1}\\right]+b_{t}(x).}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Then, we know, that for any distribution $r$ such that the marginal distributions coincide with those of $p$ the following holds: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\mathbb{E}_{r}[x]=\\mathbb{E}_{p}[x].\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "Applying this fact to eq. (38) we obtain: ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]=A_{t}(x)\\mathbb{E}_{r_{t}(x_{1}\\mid x)}\\left[x_{1}\\right]+b_{t}(x)}\\\\ &{\\qquad\\qquad\\qquad=\\mathbb{E}_{r_{t}(x_{1}\\mid x)}\\left[A_{t}(x)x_{1}+b_{t}(x)\\right]}\\\\ &{\\qquad\\qquad\\qquad=\\mathbb{E}_{r_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "which is what we wanted to show. ", "page_idx": 15}, {"type": "text", "text": "A.4 CatFlow ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Let $\\mathcal{G}\\;=\\;(\\mathcal{V},\\mathcal{E})$ be a graph with node and edge features given by $\\mathbf{H}_{n}\\ \\in\\ \\mathbb{R}^{|\\mathcal{V}|\\times d_{n}}$ and ${\\bf H}_{e}~\\in$ $\\mathbb{R}^{|\\mathcal{V}|\\times|\\mathcal{V}|\\times d_{e}}$ respectively, and let $x$ denote the graphs and its features. Moreover, let $\\pi\\in S_{|\\mathcal{V}|}$ be a permutation and $\\mathbf{P}$ its associated permutation matrix, such that the action of the group is defined as ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\bullet\\ \\boldsymbol{\\pi}\\cdot\\mathbf{H}_{n}:=\\mathbf{P}\\mathbf{H}_{n},}\\\\ {\\bullet\\ \\boldsymbol{\\pi}\\cdot\\mathbf{H}_{e}:=\\mathbf{P}\\mathbf{H}_{e}\\mathbf{P}^{\\top}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "To simplify notation, we will simply write $\\pi\\cdot x$ to denote the above operation. ", "page_idx": 15}, {"type": "text", "text": "Lemma 1. If $\\mu_{t}(x)$ is permutation equivariant w.r.t $S_{|\\nu|}$ , then so is $v_{t}$ . ", "page_idx": 15}, {"type": "text", "text": "Proof. Note that ", "page_idx": 15}, {"type": "equation", "text": "$$\nv_{t}(\\pi\\cdot x)=\\frac{\\mu_{t}(\\pi\\cdot x)-\\pi\\cdot x}{1-t}=\\frac{\\pi\\cdot\\mu_{t}(x)-\\pi\\cdot x}{1-t},\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where the last step follows from permutation equivariance. Moreover, since $\\pi$ acts on $x$ through permutation matrices, we can leverage the distributive property of linear operators, i.e. we conclude that ", "page_idx": 15}, {"type": "equation", "text": "$$\n{\\frac{\\pi\\cdot\\mu_{t}(x)-\\pi\\cdot x}{1-t}}=\\pi\\cdot{\\frac{(\\mu_{t}(x)-x)}{1-t}}=\\pi\\cdot v_{t}(x),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "finishing the proof. ", "page_idx": 15}, {"type": "text", "text": "Theorem 5. Let $p_{0}$ be an exchangeable distribution \u2013 e.g. a standard normal distribution \u2013 and $\\mu_{t}(x)$ be permutation equivariant. Then, all permutations of graphs are generated with equal probability. ", "page_idx": 15}, {"type": "text", "text": "Proof. By result 1, we know that $\\mu_{t}(x)$ being permutation equivariant implies that ${v_{t}}(x)$ is permutation equivariant. Moreover, if we let $\\begin{array}{r}{\\Gamma(x):=x+\\int_{0}^{1}v_{t}(x_{t})d t}\\end{array}$ , the for all $\\pi\\,\\in\\,S_{n}$ we have that ", "page_idx": 15}, {"type": "equation", "text": "$$\n\\Gamma(\\pi\\cdot x)=\\pi\\cdot x+\\int_{0}^{1}v_{t}(\\pi\\cdot x_{t})d t=\\pi\\cdot x+\\int_{0}^{1}\\pi\\cdot v_{t}(x_{t})d t=\\pi\\cdot\\Gamma(x),\n$$", "text_format": "latex", "page_idx": 15}, {"type": "text", "text": "where again the last step follows by basic properties of linear operators. Therefore, since $p_{0}$ assigns equal density of all permutations of $x$ , the resulting distribution $p_{1}$ preservers this property, which is what we wanted to show. \u53e3 ", "page_idx": 15}, {"type": "text", "text": "A.5 Derivation of the Score Function ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this subsection we want to derive the equation that allows us to express the score function $\\nabla_{x}\\log{p_{t}(x)}$ in terms of the posterior probability path $p_{t}(x\\mid x_{1})$ . Notice that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\nabla_{x}\\log p_{t}(x)=\\frac{1}{p_{t}(x)}\\nabla_{x}p_{t}(x)}\\\\ &{=\\frac{1}{p_{t}(x)}\\nabla_{x}\\int p_{t}(x\\mid x_{1})p(x_{1})d x_{1}}\\\\ &{=\\frac{1}{p_{t}(x)}\\int p(x_{1})\\nabla_{x}p_{t}(x\\mid x_{1})d x_{1}}\\\\ &{=\\int\\frac{p_{t}(x\\mid x_{1})p(x_{1})}{p_{t}(x)}\\nabla_{x}\\log p_{t}(x\\mid x_{1})d x_{1}}\\\\ &{=\\int p_{t}(x_{1}\\mid x)\\nabla_{x}\\log p_{t}(x\\mid x_{1})d x_{1}}\\\\ &{=\\int p_{t}(x_{1}\\mid x)\\nabla_{x}\\log p_{t}(x\\mid x_{1})d x_{1}}\\\\ &{=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "A.6 Stochastic Dynamics with Variational Flow Matching ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this subsection, we discuss how the VFM framework can be applied to construct stochastic generative dynamics and how it relates to score-based models. ", "page_idx": 16}, {"type": "text", "text": "First, let us consider the marginal vector field $u_{t}(x)$ . It provides the deterministic dynamic that can be written as the following ordinary differential equation (ODE): ", "page_idx": 16}, {"type": "equation", "text": "$$\nd x=u_{t}(x)d t.\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "For the vector field $u_{t}(x)$ we know that \u2013 starting from the distribution $p_{0}(x)$ \u2013 it generates some probability path $p_{t}(\\boldsymbol{x})$ . However, as we know from [54, 3], if we have access to the score function $\\bar{\\nabla}_{x}\\log p_{t}(\\bar{x})$ of distribution $p_{t}(\\boldsymbol{x})$ , we can construct a stochastic differential equation (SDE) that, staring from distribution $p_{0}(x)$ , generates the same probability path $p_{t}(\\boldsymbol{x})$ : ", "page_idx": 16}, {"type": "equation", "text": "$$\nd x=\\left[u_{t}(x)+\\frac{g_{t}^{2}}{2}\\nabla_{x}\\log p_{t}(x)\\right]d t+g_{t}d w,\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $g:\\mathbb{R}\\to\\mathbb{R}_{\\geq0}$ is a scalar function, and $w$ is a standard Wiener process. ", "page_idx": 16}, {"type": "text", "text": "Given that ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r}{u_{t}(x)=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]\\quad\\mathrm{and}\\quad\\nabla_{x}\\log p_{t}(x)=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\right],}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "we can rewrite eq. (50) in the following form: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{c}{d x=\\tilde{u}_{t}(x)d t+g_{t}d w,\\quad\\mathrm{where}}\\\\ {\\tilde{u}_{t}(x)=\\mathbb{E}_{p_{t}(x_{1}\\mid x)}\\left[\\tilde{u}_{t}(x\\mid x_{1})\\right]\\quad\\mathrm{and}\\quad\\tilde{u}_{t}(x\\mid x_{1})=u_{t}(x\\mid x_{1})+\\displaystyle\\frac{g_{t}^{2}}{2}\\nabla_{x}\\log p_{t}(x\\mid x_{1}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "Importantly, the function $g_{t}$ does not affect the distribution path $p_{t}(\\boldsymbol{x})$ : it only changes the stochasticity of the trajectories. In the extreme case when $g_{t}\\equiv0$ , the SDE in eq. (50) coincides with the ODE in eq. (49). ", "page_idx": 16}, {"type": "text", "text": "Moreover, if we construct the stochastic dynamics in this way, we obtain score-based models as a special case. In score-based models [54] the deterministic process that corresponds to probability path $p_{t}(\\boldsymbol{x})$ has the following form: ", "page_idx": 16}, {"type": "equation", "text": "$$\nd x=u_{t}(x)d t\\quad\\mathrm{where}\\quad u_{t}(x)=f_{t}(x)+\\frac{g_{t}^{2}}{2}\\nabla_{x}\\log p_{t}(x),\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "where $f_{t}(x)$ is tractable. Substituting this $u_{t}(x)$ into eq. (50) we obtain: ", "page_idx": 16}, {"type": "equation", "text": "$$\n\\begin{array}{r}{d x=\\left[f_{t}(x)+g_{t}^{2}\\nabla_{x}\\log p_{t}(x)\\right]d t+g_{t}d w.}\\end{array}\n$$", "text_format": "latex", "page_idx": 16}, {"type": "text", "text": "The SDE in eq. (55) only depends on the score function, so in score-based models, the aim is to learn the score function. ", "page_idx": 17}, {"type": "text", "text": "Now, let us note that similarly to vector field $u_{t}(x)$ , the drift term $\\tilde{u}_{t}(\\boldsymbol{x})$ in eq. (52) can be expressed in terms of an end point distribution $p_{t}(x_{1}\\mid x)$ . Consequently, having a variational approximation of end point distribution $q_{t}^{\\theta}(x_{1}\\mid x)$ , allows us to construct an approximation of the drift term $\\tilde{u}_{t}(\\boldsymbol{x})$ : ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{c}{\\tilde{v}_{t}^{\\theta}(x)=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}\\mid x)}\\left[\\tilde{u}_{t}(x\\mid x_{1})\\right]=v_{t}^{\\theta}(x)+\\displaystyle\\frac{g_{t}^{2}}{2}s_{t}^{\\theta}(x),}\\\\ {v_{t}^{\\theta}(x)=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}\\mid x)}\\left[u_{t}(x\\mid x_{1})\\right]\\quad\\mathrm{~and~}\\quad s_{t}^{\\theta}(x)=\\mathbb{E}_{q_{t}^{\\theta}(x_{1}\\mid x)}\\left[\\nabla_{x}\\log p_{t}(x\\mid x_{1})\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Thus, we may define the following approximated SDE: ", "page_idx": 17}, {"type": "equation", "text": "$$\nd x=\\tilde{v}_{t}^{\\theta}(x)d t+g_{t}d w\\quad\\mathrm{or}\\quad d x=\\left[v_{t}^{\\theta}(x)+\\frac{g_{t}^{2}}{2}s_{t}^{\\theta}(x)\\right]d t+g_{t}d w.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Then, eq. (58) is not just simply a new dynamic, it is a family of dynamics that admits deterministic dynamics as a special case when $g_{t}\\equiv0$ . Importantly, the only thing we need to construct the stochastic process in eq. (58) is an approximation of the end point distributions $q_{t}^{\\theta}(x_{1}\\mid x)$ . Additionally we know that when $p_{t}(x_{1}\\mid x)=q_{t}^{\\theta}(x_{1}\\mid x)$ , $\\tilde{u}_{t}(x)=\\tilde{v}_{t}^{\\theta}(x)$ , the processes coincide for all functions $g_{t}$ . Therefore, we can train the model with the same objective as in VFM. ", "page_idx": 17}, {"type": "text", "text": "A.7 Variational Flow Matching as a Variational Bound on the Log-likelihood ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "In this subsection, we leverage the connections of VFM with stochastic processes to show that a reweighted integral over the point-wise VFM objective defines a bound on the data likelihood in the generative model. ", "page_idx": 17}, {"type": "text", "text": "Theorem 4. Rewrite the Variational Flow Matching objective as follows: ", "page_idx": 17}, {"type": "equation", "text": "$$\n{\\mathcal{L}}_{\\mathrm{VFM}}(\\theta)=\\mathbb{E}_{t,x}\\left[{\\mathcal{L}}^{\\theta}(t,x)\\right]\\quad{\\mathrm{where}}\\quad{\\mathcal{L}}^{\\theta}(t,x)=-\\mathbb{E}_{x_{1}}\\left[\\log q_{t}^{\\theta}(x_{1}\\mid x)\\right].\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Then, the following holds: ", "page_idx": 17}, {"type": "equation", "text": "$$\n-\\mathbb{E}_{x_{1}}\\left[\\log q_{1}^{\\theta}(x_{1})\\right]\\leq\\mathbb{E}_{t,x}\\left[\\lambda_{t}(x)\\mathcal{L}^{\\theta}(t,x)\\right]+C,\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "where $\\lambda_{t}(x)$ is a non-negative function and $C$ is a constant. ", "page_idx": 17}, {"type": "text", "text": "Proof. Let us consider the two stochastic processes, that we discussed in appendix A.6: ", "page_idx": 17}, {"type": "equation", "text": "$$\nd x=\\tilde{u}_{t}(x)d t+g_{t}d w,\\quad\\mathrm{where}\\quad d x=\\tilde{v}_{t}^{\\theta}(x)d t+g_{t}d w.\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Note that they both start from the same prior distribution $p_{0}(x)$ . The first one, by design, generates probability path $p_{t}(\\boldsymbol{x})$ and ends up in the data distribution $p_{\\mathrm{data}}(x)=p_{1}(x)$ . The second process generates some probability path $q_{t}^{\\theta}(x)$ that depends on the variational distribution $q_{t}^{\\theta}(x_{1}|x)$ . ", "page_idx": 17}, {"type": "text", "text": "We want to find a variational bound on KL divergence between $p_{1}(x)$ and $q_{1}^{\\theta}(x)$ . We start by applying the result from [1] (see Lemma 2.22): ", "page_idx": 17}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\mathrm{KL}\\left(p_{1}(x_{1})\\|q_{1}^{\\theta}(x_{1})\\right)\\leq\\mathbb{E}_{t,x}\\left[\\frac{1}{2g_{t}^{2}}\\left\\|\\tilde{u}_{t}(x)-\\tilde{v}_{t}^{\\theta}(x)\\right\\|_{2}^{2}\\right]}\\\\ &{\\quad\\quad\\quad\\quad\\quad=\\mathbb{E}_{t,x}\\left[\\frac{1}{2g_{t}^{2}}\\left\\|\\int\\left(p_{t}(x_{1}\\mid x)-q_{t}^{\\theta}(x_{1}\\mid x)\\right)\\tilde{u}_{t}(x|x_{1})d x_{1}\\right\\|_{2}^{2}\\right]}\\\\ &{\\quad\\quad\\quad\\quad\\quad\\leq\\mathbb{E}_{t,x}\\left[\\frac{1}{2g_{t}^{2}}\\left(\\int\\left\\|\\left(p_{t}(x_{1}\\mid x)-q_{t}^{\\theta}(x_{1}\\mid x)\\right)\\tilde{u}_{t}(x|x_{1})\\right\\|d x_{1}\\right)^{2}\\right]}\\\\ &{\\quad\\quad\\quad\\quad\\leq\\mathbb{E}_{t,x}\\left[\\frac{1}{2g_{t}^{2}}\\left(\\int\\left|p_{t}(x_{1}\\mid x)-q_{t}^{\\theta}(x_{1}\\mid x)\\right|\\|\\tilde{u}_{t}(x|x_{1})\\|\\,d x_{1}\\right)^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 17}, {"type": "text", "text": "Now, let us introduce two auxiliary functions: ", "page_idx": 18}, {"type": "equation", "text": "$$\nl_{t}(x)=\\operatorname*{sup}_{x_{1}}\\|\\tilde{u}_{t}(x|x_{1})\\|\\quad\\mathrm{and}\\quad\\lambda_{t}(x)=\\frac{l_{t}(x)}{g_{t}^{2}}.\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "If we utilise ${\\lambda}_{t}(x)$ to write down the following bound, we see that ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathrm{KL}\\left(p_{1}(x_{1})\\|q_{1}^{\\theta}(x_{1})\\right)\\leq\\mathbb{E}_{t,x}\\left[\\frac{\\lambda_{t}(x)}{2}\\left(\\int\\left|p_{t}(x_{1}\\mid x)-q_{t}^{\\theta}(x_{1}\\mid x)\\right|d x_{1}\\right)^{2}\\right].\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Next, we can apply Pinsker\u2019s inequality, which states that for two probability distributions $p$ and $q$ the following holds: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\int|p(x)-q(x)|d x\\leq2\\mathrm{KL}(p\\|q).\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "Applying it to the inner integral, we have: ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathrm{KL}\\left(p_{1}(x_{1})\\|q_{1}^{\\theta}(x_{1})\\right)\\leq\\mathbb{E}_{t,x}\\left[\\lambda_{t}(x)\\mathrm{KL}\\Big(p_{t}(x_{1}\\mid x)\\|q_{t}^{\\theta}(x_{1}\\mid x)\\Big)\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "We may rewrite the left part of inequality as a combination of the data entropy and the model\u2019s likelihood, where only the likelihood depends on parameters $\\theta$ : ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\mathrm{KL}\\left(p_{1}(x_{1})\\|q_{1}^{\\theta}(x_{1})\\right)=-\\mathbf{H}\\left(p_{1}(x_{1})\\right)-\\mathbb{E}_{x_{1}}\\left[\\log q_{1}^{\\theta}(x_{1})\\right].\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "The right part of inequality can be rewritten as an expectation of entropy that does not depend on any parameters $\\theta$ plus a reweighted VFM objective with weighting coefficient $\\lambda_{t}(x)$ : ", "page_idx": 18}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathbb{E}_{t,x}\\left[\\lambda_{t}(x)\\mathrm{KL}\\Big(p_{t}(x_{1}\\mid x)\\|q_{t}^{\\theta}(x_{1}\\mid x)\\Big)\\right]=-\\,\\mathbb{E}_{t,x}\\left[\\lambda_{t}(x)\\mathrm{H}(p_{t}(x_{1}\\mid x))\\right]}\\\\ &{}&{-\\,\\mathbb{E}_{t,x,x_{1}}\\left[\\lambda_{t}(x)q_{t}^{\\theta}(x_{1}\\mid x)\\right]}\\end{array}\n$$", "text_format": "latex", "page_idx": 18}, {"type": "text", "text": "We see that this reweighted version of the VFM objective defines an upper bound on the model likelihood, which was what we wanted to show. \u53e3 ", "page_idx": 18}, {"type": "text", "text": "A.8 Stochastic Dynamics under Linearity Conditions ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "In this subsection, we discuss the connection between VFM and stochastic dynamics under the condition of linearity in $x_{1}$ of the conditional vector field $u_{t}(x\\mid x_{1})$ and conditional score function $\\nabla_{x}\\log{p_{t}(x\\mid x_{1})}$ . ", "page_idx": 18}, {"type": "text", "text": "As we discuss in section 3.2, under the linearity condition, we may express $u_{t}(x)$ in terms of any distribution of end points $r_{t}(x_{1}\\mid x)$ if it has the same marginals as $p_{t}(x_{1}\\mid x)$ . In appendix A.5, we demonstrate that the score function $\\nabla_{x}\\log{p_{t}(x)}$ can also be expressed in terms of end point distributions $p_{t}(x_{1}\\mid x)$ . Therefore, the score function may also be equally expressed in terms of distribution $r_{t}(x_{1}\\mid x)$ if it has the same marginals as $p_{t}(x_{1}\\mid x)$ . This fact is easy to show in the same way as we present in appendix A.3. ", "page_idx": 18}, {"type": "text", "text": "Consequently, under the linearity conditions, the drift term $\\tilde{u}_{t}(\\boldsymbol{x})$ can also be expressed in terms of $r_{t}(x_{1}\\mid x)$ , as it is just a linear combination of the vector field $u_{t}(x)$ and score function $\\nabla_{x}\\log{p_{t}(x)}$ . Hence, the transition from the distribution $p_{(}x_{1}\\mid x)$ to some distribution $r_{(}x_{1}\\mid x)$ does not affect the discussion of connections of stochastic dynamics in appendix A.6. ", "page_idx": 18}, {"type": "text", "text": "Furthermore, the transition from distribution $p_{t}(x_{1}\\mid x)$ to some distribution $r_{t}(x_{1}\\mid x)$ does not affect connections of the VFM objective with the model likelihood that we discuss in appendix A.7.   \nIt is easy to see that in the derivations, we only rely on functions $\\tilde{u}_{t}(\\boldsymbol{x})$ and $\\tilde{v}_{t}^{\\theta}(x)$ (see eq. (60)).   \nHowever, as we discussed, they are not affected by the transition from $p_{t}(x_{1}\\mid x)$ to some $r_{t}(x_{1}\\mid x)$ .   \nTherefore, we may repeat all the same derivations for some $r_{(}x_{1}|x)$ using a factorized distribution. ", "page_idx": 18}, {"type": "text", "text": "B Algorithms ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "B.1 General Variational Flow Matching ", "page_idx": 19}, {"type": "text", "text": "Algorithm 1 Variational Flow Matching # Training Sample $x_{1}$ from data and $x_{0}\\sim p_{0}(x_{0})$ Sample $t\\sim\\mathcal{U}(0,1)$ Compute $x_{t}=t x_{1}+(1-t)x_{0}$ Compute loss ${\\mathcal{L}}=-\\log q_{t}^{\\theta}(x_{1}\\mid x_{t})$ Backpropagate. # Generation Sample $x_{0}\\sim p_{0}(x_{0})$   \nSRoeltvuer n OxDE x1 = x0 + tt==01Eqt\u03b8 [1x\u22121|tx+t\u03b5]\u2212xtdt ", "page_idx": 19}, {"type": "text", "text": "B.2 Categorical Variational Flow Matching (CatFlow) ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Algorithm 2 Categorical Variational Flow Matching (CatFlow) ", "page_idx": 19}, {"type": "text", "text": "# Assume $\\begin{array}{r}{q_{t}(x_{1}\\mid x_{t})=\\prod_{d=1}^{D}\\mathsf{C a t}(x_{1}^{d}\\mid\\mu_{t}^{d}(x_{t}))}\\end{array}$ where $\\mu$ is learnable ", "page_idx": 19}, {"type": "text", "text": "# Training   \nSample $x_{1}$ from data and $x_{0}\\sim p_{0}(x_{0})$   \nSample $t\\sim\\mathcal{U}(0,1)$   \nCompute $x_{t}=t x_{1}+(1-t)x_{0}$   \nCompute cross-entropy loss $\\begin{array}{r}{\\mathcal{L}=-\\sum_{d=1}^{D}\\sum_{k=1}^{K^{d}}\\mathbb{I}[x_{1}^{d}=k]\\log\\mu_{t}^{d k}(x)}\\end{array}$ Backpropagate.   \n# Generation   \nSample $x_{0}\\sim p_{0}(x_{0})$   \nSolve ODE $\\begin{array}{r}{x_{1}=x_{0}+\\int_{t=0}^{t=1}\\frac{\\mu_{t}(x_{t})-x_{t}}{1-t+\\varepsilon}\\mathrm{d}t}\\end{array}$ ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "B.3 Gaussian Variational Flow Matching ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Algorithm 3 Gaussian Variational Flow Matching # Assume $\\begin{array}{r}{q_{t}(x_{1}\\mid x_{t})=\\prod_{d=1}^{D}\\mathcal{N}(x_{1}^{d}\\mid\\mu_{t}^{d}(x_{t}),I)}\\end{array}$ where $\\mu$ is learnable ", "page_idx": 19}, {"type": "text", "text": "# Training   \nSample $x_{1}$ from data and $x_{0}\\sim p_{0}(x_{0})$   \nSample $t\\sim\\mathcal{U}(0,1)$   \nCompute $x_{t}=t x_{1}+(1-t)x_{0}$   \nCompute mean squared error loss $\\begin{array}{r}{\\mathcal{L}=\\frac{1}{2}\\sum_{d=1}^{D}||\\mu_{t}^{d}(x_{t})-x_{1}^{d}||^{2}}\\end{array}$ Backpropagate.   \n# Generation   \nSample $x_{0}\\sim p_{0}(x_{0})$   \nSolve ODE $\\begin{array}{r}{x_{1}=x_{0}+\\int_{t=0}^{t=1}\\frac{\\mu_{t}(x_{t})-x_{t}}{1-t+\\varepsilon}\\mathrm{d}t}\\end{array}$ ", "page_idx": 19}, {"type": "text", "text": "", "page_idx": 19}, {"type": "text", "text": "C Additional Results ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "C.1 Detailed results ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Here, we provide the results for CatFlow with standard deviations, as computed as in [20] through multiple seeds. ", "page_idx": 20}, {"type": "table", "img_path": "UahrHR5HQh/tmp/58ac39ec1fcfee03a2131e65d507ce1f0e61373f627095e575dcb6c78c401d3d.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "UahrHR5HQh/tmp/f81d033396aa904648df68932229c6408ef2ccaacc632ed7b0c59ace5f5c34da.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "table", "img_path": "UahrHR5HQh/tmp/4803ac4a21eacb441344b2779225e71536bed6fc7fdb384710c0ee4c0dd16ad3.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "C.2 Extra results SBM and Planar Graphs ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Results on Stochastic Block Model and Planar Graphs. We ran extra experiments for (standard) flow matching and Dirichlet flow matching. We observe that CatFlow obtains SOTA performance on all tasks and metrics. Moreover, it is worth noting CatFlow was significantly faster to train than Dirichlet FM due to a computationally cheaper forward process. ", "page_idx": 20}, {"type": "table", "img_path": "UahrHR5HQh/tmp/21285bcee3b3cd31648bd625c44ab1c260f7bf72698e2ca58e70816cba456074.jpg", "table_caption": [], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "D Experimental setup ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "D.1 Model ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "To ensure a comparison on equal terms to baselines, we employ the same graph transformer network as proposed in [12], which was also used in [58], along with the same hyper-parameter setup. We summarize the parametrization of our network here. ", "page_idx": 21}, {"type": "text", "text": "Just as done in DiGress, our graph transformer takes as input a graph $(\\mathbf{H}_{n},\\mathbf{H}_{e})$ and predicts a distribution over the clean graphs, using structural and spectral features to improve the network expressivity, which we denote as $\\mathbf{H}_{g}$ . Each transformer layer does the following operations: ", "page_idx": 21}, {"type": "text", "text": "1. Node Features $\\mathbf{H}_{n}$ and Edge Features ${\\bf{H}}_{e}$ : ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Linear Transformation: Apply linear transformations to both $\\mathbf{H}_{n}$ and ${\\bf{H}}_{e}$ . (b) Outer Product and Scaling: Compute the outer product of the transformed features and apply scaling. ", "page_idx": 21}, {"type": "text", "text": "2. Node Features $\\mathbf{H}_{n}$ : ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Feature-wise Linear Modulation (FiLM): Apply FiLM to the transformed node features using global features $\\mathbf{H}_{g}$ . ", "page_idx": 21}, {"type": "text", "text": "3. Edge Features ${\\bf{H}}_{e}$ : ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Feature-wise Linear Modulation (FiLM): Apply FiLM to the transformed edge features using global features $\\mathbf{H}_{g}$ . ", "page_idx": 21}, {"type": "text", "text": "4. Self-Attention Mechanism: ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Linear Transformation: Apply a linear transformation to the transformed node features.   \n(b) Softmax Operation: Compute the attention scores using the softmax function.   \n(c) Attention Score Calculation: Calculate the weighted sum of the transformed node features based on the attention scores. ", "page_idx": 21}, {"type": "text", "text": "5. Global Features $y$ : ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Pooling: Apply PNA pooling to the node features $\\mathbf{H}_{n}$ and edge features ${\\bf{H}}_{e}$ .   \n(b) Summation: Sum the pooled features with the global features $\\mathbf{H}_{g}$ . ", "page_idx": 21}, {"type": "text", "text": "6. Final Outputs: ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "(a) Node Features $\\mathbf{H}_{n}^{\\prime}$ : Obtain updated node features after the attention mechanism.   \n(b) Edge Features $\\mathbf{H}_{e}^{\\prime}$ : Obtain updated edge features after the attention mechanism.   \n(c) Global Features $\\mathbf{H}_{g}^{\\prime}$ : Obtain updated global features after summation. ", "page_idx": 21}, {"type": "text", "text": "Here, the FiLM operation is defined as: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathrm{FiLM}(M_{1},M_{2})=M_{1}W_{1}+(M_{1}W_{2})\\odot M_{2}+M_{2}\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "for learnable weight matrices $W_{1}$ and $W_{2}$ , and PNA is defined as: ", "page_idx": 21}, {"type": "equation", "text": "$$\n\\mathrm{PNA}(X)=\\mathrm{cat}(\\operatorname*{max}(X),\\operatorname*{min}(X),\\operatorname*{mean}(X),\\mathrm{std}(X))W.\n$$", "text_format": "latex", "page_idx": 21}, {"type": "text", "text": "D.2 Hyperparameters and Computational Costs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "We report the hyperparameters here: ", "page_idx": 21}, {"type": "text", "text": "All models were trained until convergence. Furthermore, all data splits are kept the same as in [20], and hidden dimensions are kept the same as [58]. All experiments were run on a single NVIDIA RTX 6000 and took about a day to run. ", "page_idx": 21}, {"type": "table", "img_path": "UahrHR5HQh/tmp/ef2cca2af0518a735e3c18933a10a047ba9060c63b26f7ff17dcdfd1dbd82990.jpg", "table_caption": [], "table_footnote": ["Table 3: Hyperparameter setup. "], "page_idx": 22}, {"type": "text", "text": "E Detail CNFs ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "To compute the resulting distribution $p_{t}$ for CNF, one can use the change of variables formula: ", "page_idx": 22}, {"type": "equation", "text": "$$\n[\\varphi_{t}]_{*}p_{0}(x)=p_{0}(\\varphi_{t}^{-1}(x))\\mathrm{det}\\left[\\frac{\\partial\\varphi_{t}^{-1}}{\\partial x}(x)\\right].\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "This induces a probability path, i.e. a mapping $p_{t}:[0,1]\\times\\mathbb{R}^{D}\\to\\mathbb{R}_{>0}$ such that $\\begin{array}{r}{\\int p_{t}(x)d x=1}\\end{array}$ for all $t\\in[0,1]$ . We say that $v_{t}$ generates this probability path given a starting distribution $p_{0}$ . In theory, one could try and optimize the empirical divergence between the resulting distribution $p_{1}$ and target distribution, but obtaining a gradient sample for the loss requires us to solve the ODE at each step during training, making this approach computationally prohibitive. ", "page_idx": 22}, {"type": "text", "text": "One way to assess if a vector field generates a specific probability path is using the continuity equation, i.e. we can assess whether $v_{t}$ and $p_{t}$ satisfy ", "page_idx": 22}, {"type": "equation", "text": "$$\n\\frac{\\partial}{\\partial t}p_{t}(x)+\\nabla\\cdot(p_{t}(x)v_{t}(x))=0,\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "where $\\nabla$ is the divergence operator. Note that by sampling $x_{0}\\sim p_{0}$ , a new sample from $p_{1}$ can be generated by following this ODE, i.e. integrating ", "page_idx": 22}, {"type": "equation", "text": "$$\nx_{1}=x_{0}+\\int_{0}^{1}v_{t}(x_{t})\\mathrm{d}t.\n$$", "text_format": "latex", "page_idx": 22}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Our paper follows the structure of the abstract and introduction directly. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 23}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: We added a section addressing limitations in section 7. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 23}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: We provide all proofs in detail in appendix A. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 24}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: Besides code, we provide the model description and hyperparameters in appendix D. Moreover, our model and datasets are common in the field, e.g. [20], so no novel experimental details are required. Our main contribution, the objective, is clearly stated in section 3. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 24}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We provide all code to the experiments. Moreover, all data is publically available, and will be provided in the repository, including data processing. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 25}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We provide the hyperparameters and experimental detail appendix D. Moreover, we took all of our choices from previous works of [20], which is also publicly available. Last, our code will be made public. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 25}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We provide error bars and how they are computed in appendix C. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 25}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 26}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We provide this information in appendix D. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 26}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] Justification: We read and checked the code of ethics. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 26}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] Justification: We reflect on this in our conclusion, i.e. section 7. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 26}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 27}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 27}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 27}, {"type": "text", "text": "Justification: We do not publish such models and as such do not require safeguards for them. Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 27}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 27}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 27}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 27}, {"type": "text", "text": "Justification: We cite the authors of the relevant assets where used, see section 6. All relevant information about licenses is publicly available and respected in our code. ", "page_idx": 27}, {"type": "text", "text": "Guidelines: ", "page_idx": 27}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 27}, {"type": "text", "text": "", "page_idx": 28}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: We provide a new objective to train and use previous code/assets for the experiments which are referenced. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 28}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 28}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: This work did not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 28}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 28}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 28}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 28}, {"type": "text", "text": "Justification: We did not work with subjects. ", "page_idx": 28}, {"type": "text", "text": "Guidelines: ", "page_idx": 28}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 28}, {"type": "text", "text": "", "page_idx": 29}]