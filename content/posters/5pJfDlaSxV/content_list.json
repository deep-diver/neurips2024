[{"type": "text", "text": "Verifiably Robust Conformal Prediction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Linus Jeary\u2217 Department of Informatics King\u2019s College London, UK linus.jeary@kcl.ac.uk ", "page_idx": 0}, {"type": "text", "text": "Tom Kuipers\u2217 Department of Informatics King\u2019s College London, UK tom.kuipers@kcl.ac.uk ", "page_idx": 0}, {"type": "text", "text": "Mehran Hosseini ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Department of Informatics King\u2019s College London, UK mehran.hosseini@kcl.ac.uk ", "page_idx": 0}, {"type": "text", "text": "Nicola Paoletti Department of Informatics King\u2019s College London, UK nicola.paoletti@kcl.ac.uk ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Conformal Prediction (CP) is a popular uncertainty quantification method that provides distribution-free, statistically valid prediction sets, assuming that training and test data are exchangeable. In such a case, CP\u2019s prediction sets are guaranteed to cover the (unknown) true test output with a user-specified probability. Nevertheless, this guarantee is violated when the data is subjected to adversarial attacks, which often result in a significant loss of coverage. Recently, several approaches have been put forward to recover CP guarantees in this setting. These approaches leverage variations of randomised smoothing to produce conservative sets which account for the effect of the adversarial perturbations. They are, however, limited in that they only support $\\ell_{2}$ -bounded perturbations and classification tasks. This paper introduces VRCP (Verifiably Robust Conformal Prediction), a new framework that leverages recent neural network verification methods to recover coverage guarantees under adversarial attacks. Our VRCP method is the first to support perturbations bounded by arbitrary norms including $\\ell_{1},\\,\\ell_{2}$ , and $\\ell_{\\infty}$ , as well as regression tasks. We evaluate and compare our approach on image classification tasks (CIFAR10, CIFAR100, and TinyImageNet) and regression tasks for deep reinforcement learning environments. In every case, VRCP achieves above nominal coverage and yields significantly more efficient and informative prediction regions than the SotA. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Conformal Prediction (CP) (Vovk et al., 2005; Angelopoulos and Bates, 2021) is a popular uncertainty quantification method. In essence, it is a model-agnostic, distribution-free framework that allows one to construct prediction sets that are guaranteed to include the true (unknown) output with probability greater than $1-\\alpha$ , where $\\alpha\\in(0,1)$ is a user-specified miscoverage/error rate. In other words, for a test point $(x_{n+1},y_{n+1})$ , CP seeks to construct a prediction set $C(x_{n+1})$ such that the following coverage (a.k.a. validity) guarantee holds: ", "page_idx": 0}, {"type": "equation", "text": "$$\n\\mathbb{P}_{\\mathbf{x}_{n+1},y_{n+1}}[y_{n+1}\\in C(\\mathbf{x}_{n+1})]\\geq1-\\alpha.\n$$", "text_format": "latex", "page_idx": 0}, {"type": "text", "text": "Importantly, the above guarantee holds when the calibration data, used to construct $C(x_{n+1})$ , and the test point are exchangeable (a special case is when calibration and test data are i.i.d.). ", "page_idx": 0}, {"type": "image", "img_path": "5pJfDlaSxV/tmp/a07662846a10804aed4df3a069b270b7acd332a8b64b3101b471456009216f83.jpg", "img_caption": ["Figure 1: Distribution of prediction set sizes for vanilla conformal prediction (vanilla CP) which violates Eq. (2), as well as for our proposed robust algorithms (VRCP\u2013I and VRCP\u2013C) along with the SotA $\\scriptstyle(\\mathrm{RSCP+}$ and $\\mathrm{RSCP+}$ (PTT), see Section 3) on the CIFAR10 dataset. As we observe, VRCP\u2013I and VRCP\u2013C closely resemble the spread of vanilla CP prediction set sizes, whilst the SotA falls short of achieving this. Here we use an adversarial perturbation of radius $\\epsilon=0.02$ , error rate $\\alpha=0.1$ , number of splits $n_{\\mathrm{splits}}=50$ and smoothing parameter (used in $\\mathrm{RSCP+}$ and $\\mathrm{RSCP+}$ (PTT)) $\\sigma=2\\epsilon$ . "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "When exchangeability is violated, e.g., in the presence of test-time distribution shifts, CP\u2019s coverage guarantee (1) ceases to hold, and we cannot rely on the prediction sets it produces. In this work, we address shifts induced by adversarial perturbations on the test inputs. In particular, we focus on perturbations in the form of additive $\\ell_{p}$ -bounded noise. ", "page_idx": 1}, {"type": "text", "text": "To recover guarantees under adversarial inputs, the general mechanism is to inflate the prediction set to permit larger degrees of uncertainty. However, special care must be taken to avoid producing overly large or even trivial sets \u2013 i.e. those containing all possible outputs \u2013 as such sets do not provide any useful inference. ", "page_idx": 1}, {"type": "text", "text": "Contributions We propose a CP framework that provides statistically valid prediction sets despite the presence of $\\ell_{p}$ -bounded adversarial perturbations at inference time. Formally, for any adversarially perturbed test point $\\tilde{{\\boldsymbol{x}}}_{n+1}={\\boldsymbol{x}}_{n+1}+\\delta$ , our method produces adversarially robust sets $C_{\\epsilon}$ that enjoy the following guarantee: ", "page_idx": 1}, {"type": "equation", "text": "$$\n\\mathbb{P}[y_{n+1}\\in C_{\\epsilon}(\\tilde{\\mathbf{x}}_{n+1})]\\geq1-\\alpha\\quad\\forall\\delta\\ \\mathrm{{s.t.}}\\ \\|\\delta\\|_{p}\\leq\\epsilon.\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "While CP uses an underlying predictor $f$ , often a neural network (NN), to construct prediction regions, the novelty of our approach is to leverage NN verification algorithms to compute upper and lower output bounds of $f({\\boldsymbol{x}}^{\\prime})$ for any $\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{\\bar{x}})=\\{\\pmb{x}^{\\prime}:\\|\\pmb{x}^{\\prime}-\\pmb{x}\\|_{p}^{\\prime}\\leq\\epsilon\\}$ . We use these bounds to inflate the CP regions, resulting in provably robust and efficient prediction sets. To the best of our knowledge, this is the first work that combines NN verification algorithms and CP to construct adversarially robust prediction sets. We call our method VRCP (Verifiably Robust Conformal Prediction). ", "page_idx": 1}, {"type": "text", "text": "Recent work (discussed in Section 3) achieves adversarially robust coverage using probabilistic methods, specifically, randomised smoothing (Cohen et al., 2019). Our approach overcomes some of the theoretical and empirical drawbacks of these prior methods, which are restricted to classification tasks with $\\ell_{2}$ -norm bounded guarantees and are overly conservative in practice. ", "page_idx": 1}, {"type": "text", "text": "Thanks to our verification-based approach, VRCP is the first to extend adversarially robust conformal prediction to regression tasks and the first to go beyond $\\ell_{2}$ -norm bounded guarantees. In Section 4, we introduce two versions of VRCP that apply verification at calibration and inference time, respectively. Further, in Section 5, we empirically validate our theoretical guarantees and demonstrate a direct improvement over previous work in terms of prediction set efficiency (i.e., average set size) compared to prior work. Fig. 1 shows an extract of our results on CIFAR10, demonstrating that VRCP yields more informative (tighter) prediction regions, a trend that we observe experimentally across all our benchmarks. ", "page_idx": 1}, {"type": "text", "text": "2 Preliminaries ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "We denote with $\\mathbb{R}_{+}$ the set of positive real numbers. Vectors $\\pmb{x}\\in\\mathbb{R}^{d}$ are shown in bold italic and scalars $x\\in\\mathbb R$ in italic typeface. We denote the norm used to make $\\mathbb{R}^{d}$ a normed vector space by $\\lVert\\cdot\\rVert$ . This could for instance be $\\ell_{1},\\ell_{2}$ , or $\\ell_{\\infty}$ -norm. Whenever a specific norm is intended, we indicate it using an index, e.g., $\\lVert\\cdot\\rVert_{2}$ indicates the $\\ell_{2}$ -norm. We denote the $\\epsilon$ -ball around a point $\\pmb{x}\\in\\mathbb{R}^{d}$ with respect to the used norm by $B_{\\epsilon}(x)$ . ", "page_idx": 1}, {"type": "text", "text": "2.1 Conformal Prediction ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "We provide a brief overview of the inductive (or split) vanilla CP approach. Suppose we have a dataset $\\mathcal{D}$ containing pairs $(\\pmb{x},y)$ sampled i.i.d. from an (unknown) data-generating distribution over a feature space $X\\subseteq\\mathbb{R}^{d}$ and label space $Y$ such that $\\mathcal{D}=\\left\\{(\\pmb{x}_{1},y_{1}),\\dots,(\\pmb{x}_{m},y_{m})\\right\\}$ . ", "page_idx": 2}, {"type": "text", "text": "We partition the dataset into disjoint training and calibration sets $\\mathcal{D}_{\\mathrm{train}}$ and $\\mathcal{D}_{\\mathrm{cal}}$ , letting $n=|\\mathcal{D}_{\\mathrm{cal}}|$ . We fit a predictor $f$ on $\\mathcal{D}_{\\mathrm{train}}$ and define a score function $S:(X\\times Y)\\to\\mathbb{R}$ as some notion of prediction error, such as $S(\\pmb{x},y)=\\|f(\\pmb{x})-y\\|$ when $f$ is a regressor, or $S(\\mathbf{x},y)=1-f(\\mathbf{x})_{y}$ when $f$ is a classifier with $f(\\cdot)_{y}$ being $y$ \u2019s predicted likelihood. ", "page_idx": 2}, {"type": "text", "text": "After applying the score function to all calibration points, we construct the score distribution as $\\begin{array}{r}{F=\\delta\\dot{\\infty}\\hat{/}(\\dot{n}{+}1)^{\\circ}{+}\\sum_{i=1}^{n}\\delta_{s_{i}}\\big/n{+}1}\\end{array}$ , where $\\delta_{s}$ is the Dirac distribution with parameter $s$ , $s_{i}=S(\\pmb{x}_{i},y_{i})$ and $\\delta_{\\infty}$ represents the unknown score (potentially infinite) of the test point. ", "page_idx": 2}, {"type": "text", "text": "Given a miscoverage/error rate $\\alpha$ and a test point $(x_{n+1},y_{n+1})$ , we define the prediction set $C(x_{n+1})$ by including all labels that appear sufficiently likely w.r.t. the score distribution: $C(x_{n+1})=\\{y\\in$ $\\bar{Y}:S(x_{n+1},y)\\leq Q_{1-\\alpha}(\\bar{F)}\\bar{\\}$ , where $Q_{1-\\alpha}(F)$ is the $1\\mathrm{~-~}\\alpha$ quantile of $F$ . This set satisfies the marginal coverage guarantee in Eq. (1) if the test point and the calibration points are exchangeable. ", "page_idx": 2}, {"type": "text", "text": "2.2 Adversarial Attacks ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Neural networks have been shown to be vulnerable to adversarial attacks, i.e., small changes to their input that jeopardise the prediction (Szegedy et al., 2014; Biggio and Roli, 2018). This notion can be formally defined as maximising an adversarial objective function (e.g., the loss of the true label) subject to $\\lVert\\pmb{x}-\\tilde{\\pmb{x}}\\rVert\\leq\\epsilon$ . Alternatively, it can be defined as finding an adversarial example $\\tilde{\\mathbf{{x}}}\\in\\mathbb{R}^{m}$ , such that $\\lVert\\pmb{x}-\\tilde{\\pmb{x}}\\rVert\\leq\\epsilon$ and $\\|f(\\tilde{\\mathbf{x}})-y\\|\\geq\\delta$ for a given neural network $f:\\ensuremath{\\mathbb{R}^{d}}\\to\\ensuremath{\\mathbb{R}^{n}}$ . ", "page_idx": 2}, {"type": "text", "text": "2.3 Neural Network Verification ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Various approaches have been proposed to verify the robustness of NNs against adversarial attacks. These approaches can be divided into complete and incomplete algorithms. Given a neural network $f$ , a verifier is complete if it allows computing exact bounds $f^{\\perp}$ and $f^{\\top}$ for the image $f(B_{\\epsilon}({\\pmb x}))=$ $\\left\\{f(\\pmb{x}^{\\prime}):\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\bar{\\pmb{x}})\\right\\}$ , i.e., such that ", "page_idx": 2}, {"type": "equation", "text": "$$\nf^{\\perp}=\\operatorname*{min}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x})}\\{f(\\pmb{x}^{\\prime})\\},\\quad f^{\\top}=\\operatorname*{max}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x})}\\{f(\\pmb{x}^{\\prime})\\},\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where min and max are computed coordinate-wise for vector-valued NNs. A verifier is incomplete, but sound, if it computes bounds that are valid but not exact, i.e., such that: ", "page_idx": 2}, {"type": "equation", "text": "$$\nf^{\\bot}\\leq\\operatorname*{min}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x})}\\{f(\\pmb{x}^{\\prime})\\},\\quad f^{\\top}\\geq\\operatorname*{max}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x})}\\{f(\\pmb{x}^{\\prime})\\}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Our results are verifier-agnostic, meaning that they are valid for any verifier that can produce exact bounds (as in Eq. (3)) or conservative bounds (as in Eq. (4)), depending on the completeness or incompleteness of the verifier used. The fastest and simplest way to compute the bounds in Eq. (4) is to propagate the bounds on the input $B_{\\epsilon}(x)$ through the network to compute the output bounds. Several methods based on this approach have been proposed (Gowal et al., 2018; Wang et al., 2018; Zhang et al., 2018a; Batten et al., 2024; Lopez et al., 2023). At the expense of fast computation speed, these methods may result in loose bounds in Eq. (4). On the other hand, several complete methods (Pulina and Tacchella, 2010; Katz et al., 2017; Hosseini and Lomuscio, 2023) for NN verification have been put forward. Even though these methods compute exact bounds, their downside is their high computational cost. ", "page_idx": 2}, {"type": "text", "text": "3 Related Work ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Adversarially Robust Conformal Prediction Gendler et al. (2021) introduced an algorithm called Randomly Smoothed Conformal Prediction (RSCP) that integrates randomised smoothing (Duchi et al., 2012; Cohen et al., 2019; Salman et al., 2019) with CP to provide robust coverage under adversarial attacks. RSCP replaces the CP score function $S(x,y)$ with a smoothed score $\\widetilde{S}(\\pmb{x},y)$ obtained by averaging the values of $S({\\boldsymbol{x}}+{\\boldsymbol{v}},y)$ over $n_{\\mathrm{MC}}$ realisations of a Gaussian noise vector $\\pmb{v}\\sim\\mathcal{N}(0,\\sigma^{2}I)$ , for a given smoothing level $\\sigma$ . To correct for potential $\\ell_{2}$ -norm bounded $\\epsilon$ perturbations at inference time, the critical value computed over the smoothed scores is inflated by $\\epsilon/\\sigma$ . This method produces empirically sound results, but the provided formal guarantees were found to be invalid in a later work (Yan et al., 2023), as discussed below. ", "page_idx": 2}, {"type": "text", "text": "", "page_idx": 3}, {"type": "text", "text": "Provably Robust Conformal Prediction Yan et al. (2023) address the issue with the robustness guarantee of Gendler et al. (2021) by correctly bounding the estimation error caused by the MonteCarlo sampling used when generating the smoothed scores. The bound introduces an additional hyperparameter $\\beta$ such that they now find the $Q_{1-\\alpha+2\\beta}$ of smooth calibrated scores and inflate by Hoeffding\u2019s bound $\\sqrt{-\\ln(\\beta)/2n_{\\mathrm{MC}}}$ before correcting by $\\epsilon/\\sigma$ . Furthermore, the smoothed scores of the test points are decreased by an empirical Bernstein bound. This further inflation of the critical value and deflation of smooth scores for each test point often cause their amended algorithm, so-called $\\mathrm{RSCP+}$ , to generate trivial prediction sets. ", "page_idx": 3}, {"type": "text", "text": "To address this issue, the authors introduce two methods to improve the efficiency of $\\mathrm{RSCP+}$ . Firstly, they use robustly calibrated training (RCT), a training-time regularisation technique that penalises NN parameters that contribute to high scores for the true label. Our approach assumes that the underlying classifier is given; hence, we do not evaluate RCT in our experiments. ", "page_idx": 3}, {"type": "text", "text": "Secondly, they implement a post-training transformation (PTT), which aims to decrease the values of the smoothed calibration scores that lie between $Q_{1-\\alpha}$ (the critical value of the base scores) and $\\widetilde{Q}_{1-\\alpha}$ (that of the smoothed scores). To this purpose, they transform the CDF of the smoothed scores $\\widetilde{S}$ by composing learned ranking and sigmoid transformations with hyperparameters $b$ and $T$ using a holdout set $\\mathcal{D}_{\\mathrm{hold}}$ sampled i.i.d from $\\mathcal{D}_{\\mathrm{cal}}$ . PTT however is not theoretically guaranteed to improve the average set sizes computed by $\\mathrm{RSCP+}$ and, in many cases, its efficacy is largely dependent on how representative the sampled holdout set is of the calibration set. We demonstrate the effect of PTT\u2019s sample dependence empirically in Section 5.1. ", "page_idx": 3}, {"type": "text", "text": "Probabilistically Robust Conformal Prediction Ghosh et al. (2023) also focus on the adversarial setting but maintain a relaxed form of robust coverage, where input perturbations $\\delta$ are drawn from a specific distribution and only a proportion of such perturbations are sought to be covered. In contrast, we do not make assumptions about the noise distribution, and we account for any $\\epsilon_{}$ -bounded perturbation. ", "page_idx": 3}, {"type": "text", "text": "All the works2 discussed here rely on randomised smoothing Duchi et al. (2012) and as such are limited to the $\\ell_{2}$ -norm. In contrast, our VRCP approach relies on NN verifiers, can be used with any $\\ell_{p}$ -norms supported by the verification method, and does not require smoothing hyperparameters or holdout sets. ", "page_idx": 3}, {"type": "text", "text": "4 Verifiably Robust Conformal Prediction (VRCP) ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this section, we formally introduce two variants of VRCP. Both methods allow us to construct adversarially robust prediction sets at inference time. ", "page_idx": 3}, {"type": "text", "text": "The first variant, VRCP via Robust Inference $(V R C P{-}I)$ , employs NN verification at inference time to compute a lower bound of the score for the given test input (best-case score), thereby obtaining more conservative regions. The calibration procedure is computed as in standard CP. The second variant, VRCP via Robust Calibration $(V R C P{-}C)$ , instead uses NN verification at calibration time to derive upper bounds for the calibration scores (worst-case), thereby obtaining a more conservative calibration threshold (critical value). This allows us to use the regular scores at inference time, without requiring NN verification. ", "page_idx": 3}, {"type": "text", "text": "4.1 Verifiably Robust Conformal Prediction via Robust Inference (VRCP\u2013I) ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "Given a calibration set $\\mathcal{D}_{\\mathrm{cal}}$ , a test input $x_{n+1}$ , and score function $S(\\cdot,\\cdot)$ , we compute the prediction set for $x_{n+1}$ as follows. ", "page_idx": 3}, {"type": "text", "text": "1. For each $y\\in Y$ we compute, ", "page_idx": 4}, {"type": "equation", "text": "$$\ns^{\\perp}(\\pmb{x}_{n+1},y)\\leq\\operatorname*{inf}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x}_{n+1})}S(\\pmb{x}^{\\prime},y).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "2. The robust prediction set is then defined as ", "page_idx": 4}, {"type": "equation", "text": "$$\nC_{\\epsilon}({\\pmb x}_{n+1})=\\{{\\pmb y}:s^{\\bot}({\\pmb x}_{n+1},{\\pmb y})\\leq Q_{1-\\alpha}(F)\\}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Below, we show that we are able to maintain the marginal coverage guarantee from Eq. (2) for any $\\ell_{p}$ -norm bounded adversarial attack. ", "page_idx": 4}, {"type": "text", "text": "Theorem 1. Let $\\tilde{{\\boldsymbol{x}}}_{n+1}={\\boldsymbol{x}}_{n+1}+\\delta$ for a clean test sample $x_{n+1}$ and $\\lVert\\pmb{\\delta}\\rVert_{p}\\leq\\epsilon$ . The prediction set $C_{\\epsilon}(\\tilde{\\pmb{x}}_{n+1})$ defined in Eq. (6) satisfies $\\mathbb{P}\\left[y_{n+1}\\in C_{\\epsilon}({\\tilde{\\mathbf{x}}}_{n+1})\\right]\\geq1-\\alpha$ . ", "page_idx": 4}, {"type": "text", "text": "Proof. We obtain that ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{P}\\left[y_{n+1}\\in C_{\\epsilon}(\\tilde{x}_{n+1})\\right]=\\mathbb{P}\\left[s^{\\perp}(\\tilde{x}_{n+1},y_{n+1})\\leq Q_{1-\\alpha}(F)\\right]}&{}\\\\ {\\geq\\mathbb{P}\\left[\\underset{x^{\\prime}\\in B_{\\epsilon}(\\tilde{x}_{n+1})}{\\operatorname*{inf}}S(x^{\\prime},y_{n+1})\\leq Q_{1-\\alpha}(F)\\right]}&{\\qquad\\mathrm{by~Eq.~}(5)}\\\\ {\\geq\\mathbb{P}\\left[S(x_{n+1},y_{n+1})\\leq Q_{1-\\alpha}(F)\\right]\\ \\geq1-\\alpha.}&{\\quad\\sqcup}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "4.2 Verifiably Robust Conformal Prediction via Robust Calibration ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Given a calibration set $\\mathcal{D}_{\\mathrm{cal}}$ , a test input $x_{n+1}$ , and score function $S(\\cdot,\\cdot)$ , we compute the robustly calibrated prediction set for $x_{n+1}$ as follows. ", "page_idx": 4}, {"type": "text", "text": "1. We compute the upper-bound calibration distribution as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\boldsymbol{F}^{\\top}=\\frac{\\delta_{\\infty}}{(n+1)}+\\sum_{i=1}^{n}\\frac{\\delta_{s_{i}^{\\top}}}{n+1},\\mathrm{where~}s_{i}^{\\top}\\geq\\operatorname*{sup}_{x^{\\prime}\\in B_{\\epsilon}({\\pmb x}_{i})}S({\\pmb x}^{\\prime},y_{i}).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "2. The robust post-calibration prediction set is then defined as ", "page_idx": 4}, {"type": "equation", "text": "$$\nC_{\\epsilon}(x_{n+1})=\\{y:S(x_{n+1},y)\\leq Q_{1-\\alpha}(F^{\\top})\\}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Theorem 2. Let $\\tilde{{\\boldsymbol{x}}}_{n+1}={\\boldsymbol{x}}_{n+1}+\\delta$ for a clean test sample $x_{n+1}$ and $\\lVert\\pmb{\\delta}\\rVert_{p}\\leq\\epsilon$ . The prediction set $C_{\\epsilon}(\\tilde{\\pmb{x}}_{n+1})$ defined in Eq. (8) satisfies $\\mathbb{P}\\left[y_{n+1}\\in C_{\\epsilon}({\\tilde{\\mathbf{x}}}_{n+1})\\right]\\geq1-\\alpha$ . ", "page_idx": 4}, {"type": "text", "text": "Proof. We have that ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{^{\\left.^{\\left.^{\\left.^{\\left.^{\\alpha}\\right|}y_{n+1}\\right.\\kern-\\nulldelimiterspace}5}\\right|}=\\mathbb{P}\\left[S(\\tilde{x}_{n+1},y_{n+1})\\leq Q_{1-\\alpha}\\left(F^{\\top}\\right)\\right]}\\\\ &{\\qquad\\qquad\\qquad\\geq\\mathbb{P}\\left[S(\\tilde{x}_{n+1},y_{n+1})\\leq Q_{1-\\alpha}\\left(\\left\\{\\underset{x^{\\prime}\\in B_{\\epsilon}(x_{i})}{\\operatorname*{sup}}S(x^{\\prime},y_{i})\\right\\}_{i=1}^{n}\\cup\\left\\{\\infty\\right\\}\\right)\\right]}\\\\ &{\\qquad\\qquad\\geq\\mathbb{P}\\left[\\underset{x^{\\prime}\\in B_{\\epsilon}(x_{n+1})}{\\operatorname*{sup}}S(x^{\\prime},y_{n+1})\\leq Q_{1-\\alpha}\\left(\\left\\{\\underset{x^{\\prime}\\in B_{\\epsilon}(x_{i})}{\\operatorname*{sup}}S(x^{\\prime},y_{i})\\right\\}_{i=1}^{n}\\cup\\left\\{\\infty\\right\\}\\right)\\right]}\\\\ &{\\qquad\\qquad\\geq1-\\alpha}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Let $P^{\\top}$ denote the distribution of $(x^{\\top},y)$ where $\\pmb{x}^{\\top}\\,=\\,\\mathrm{argsup}_{\\pmb{x}^{\\prime}\\in B_{\\epsilon}(\\pmb{x})}S(\\pmb{x}^{\\prime},\\pmb{y})$ and $(\\pmb{x},y)\\sim P$ The final inequality above holds since it is equivalent to constructing a CP prediction set using $n$ i.i.d realisations of $\\mathbf{\\bar{\\rho}}P^{\\top}$ and evaluating it on $x_{n+1}\\sim P^{\\top}$ . The resulting set will include the true test output $y_{n+1}$ with probability at least $1-\\alpha$ . \u53e3 ", "page_idx": 4}, {"type": "text", "text": "4.3 Computation of score bounds ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Classification In the classification setting, we use the score function proposed in (Lei et al., 2013; Gendler et al., 2021): ", "page_idx": 4}, {"type": "equation", "text": "$$\nS(\\pmb{x},y)=1-f(\\pmb{x})_{y},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $f(\\pmb{x})_{y}\\in(0,1)$ is the model-predicted likelihood for label $y$ . In this setting, to compute $s^{\\perp}$ and $s^{\\top}$ (required by VRCP\u2013I and VRCP\u2013C, respectively), it suffices to use NN verification algorithms to derive the output bounds for $f(x)$ . Specifically, in VRCP\u2013I, for a test input $x_{n+1}$ and for each $y\\in Y$ we derive $s^{\\perp}(x_{n+1},y)$ as ", "page_idx": 5}, {"type": "equation", "text": "$$\ns^{\\perp}(\\pmb{x}_{n+1},y)=1-f(\\pmb{x}_{n+1})_{y}^{\\top},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $f(\\pmb{x}_{n+1})_{y}^{\\top}$ denotes the upper bound computed by the neural network verifier for the modelpredicted likelihood of label $y\\in Y$ and input $x_{n+1}$ . ", "page_idx": 5}, {"type": "text", "text": "In VRCP\u2013C, for each calibration point $(\\pmb{x}_{i},y_{i})$ we compute $s^{\\top}({\\pmb x}_{i},y_{i})$ as ", "page_idx": 5}, {"type": "equation", "text": "$$\ns^{\\top}({\\pmb x}_{i},y_{i})=1-f({\\pmb x}_{i})_{y_{i}}^{\\perp},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $f(\\pmb{x}_{i})_{y_{i}}^{\\perp}$ denotes the lower bound of the model output for label $y_{i}$ given input $\\pmb{x}_{i}$ . ", "page_idx": 5}, {"type": "text", "text": "Regression In the regression tasks, we follow the conformalized quantile regression (CQR) methodology proposed by (Romano et al., 2019). We train quantile regressors $f_{\\alpha_{\\mathrm{low}}}$ and $f_{\\alpha_{\\mathrm{high}}}$ to estimate the $\\alpha_{\\mathrm{low}}=\\alpha/2$ and $\\alpha_{\\mathrm{high}}=1-\\alpha/2$ quantiles of $y\\mid x$ . In CQR, we use the following score function: ", "page_idx": 5}, {"type": "equation", "text": "$$\nS(\\pmb{x},y)=\\operatorname*{max}\\{f_{\\alpha_{\\mathrm{low}}}(\\pmb{x})-y,y-f_{\\alpha_{\\mathrm{high}}}(\\pmb{x})\\}.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "Unlike classification, where the label space is discrete, we cannot construct the region explicitly by enumerating all possible outputs $y$ . Instead, the prediction region for a given test point $C(x_{n+1})$ is constructed implicitly, by adjusting the quantile predictions by the critical value of the calibration distribution $Q_{1-\\alpha}(F)$ , as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\nC({\\pmb x}_{n+1})=\\left[f_{\\alpha_{\\mathrm{low}}}({\\pmb x}_{n+1})-Q_{1-\\alpha}(F),f_{\\alpha_{\\mathrm{ligh}}}({\\pmb x}_{n+1})+Q_{1-\\alpha}(F)\\right]\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "In both VRCP\u2013C and VRCP\u2013I, the score function leverages an NN verifier to derive the bounds over the upper and lower quantiles of the model. In VRCP\u2013C, we compute the worst-case calibration scores as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\begin{array}{r}{s^{\\top}(\\pmb{x}_{i},y_{i})=\\operatorname*{max}\\{f_{\\alpha_{\\mathrm{low}}}^{\\top}(\\pmb{x}_{i})-y_{i},y_{i}-f_{\\alpha_{\\mathrm{high}}}^{\\bot}(\\pmb{x}_{i})\\}.}\\end{array}\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "In VRCP\u2013I for classification, for each output we check inclusion in $C_{\\epsilon}$ by using the best-case score $s^{\\perp}$ . As explained above, explicit enumeration is infeasible for regression, and so we construct our robust region by replacing predicted quantiles in Eq. (13) with their conservative approximations, as follows: ", "page_idx": 5}, {"type": "equation", "text": "$$\nC_{\\epsilon}({\\pmb x}_{n+1})=\\left[f_{\\alpha_{\\mathrm{low}}}^{\\perp}({\\pmb x}_{n+1})-Q_{1-\\alpha}(F),f_{\\alpha_{\\mathrm{high}}}^{\\top}({\\pmb x}_{n+1})+Q_{1-\\alpha}(F)\\right]\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "The above-defined region is equivalent to enumerating all possible outputs $y$ , and for each, considering the best-case score $\\begin{array}{r}{\\check{s}^{\\perp}(\\pmb{x}_{n+1},\\dot{y})=\\operatorname*{max}\\left\\{f_{\\alpha_{\\mathrm{low}}}^{\\perp}(\\pmb{x}_{n+1}^{\\mathrm{~\\,~\\ast~}})\\stackrel{\\cdot}{-}y,y-f_{\\alpha_{\\mathrm{ligh}}}^{\\top}(\\pmb{x}_{n+1}^{\\mathrm{~\\,~\\ast~}})\\right\\}}\\end{array}$ . A proof is available in Appendix A. ", "page_idx": 5}, {"type": "text", "text": "A nice property of both VRCP\u2013I and VRCP\u2013C is that they guarantee that they can only increase the size of the prediction set for any input $\\textbf{\\em x}$ compared to vanilla CP, thus will always attain at least as much coverage as the vanilla CP procedure. Moreover, as we show in Section 5, both algorithms do not trivially inflate the size of the prediction sets and maintain a similar distribution of set sizes. This is formalised in the Proposition 1, which is proved in Appendix A. ", "page_idx": 5}, {"type": "text", "text": "Proposition 1. Let $C(x)$ and $C_{\\epsilon}(x)$ be the prediction sets obtained using vanilla CP and VRCP (using VRCP\u2013I or VRCP\u2013C), respectively. For any input $\\textbf{\\em x}$ , we have that $\\bar{C}(\\pmb{x})\\subseteq C_{\\epsilon}(\\pmb{x})$ . ", "page_idx": 5}, {"type": "text", "text": "5 Evaluation ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We evaluate VRCP\u2013I and VRCP\u2013C on classification (image) and regression (RL) benchmarks, and compare them against the SotA approaches on each benchmark. For all the networks used, we did not perform adversarial training as we assume that the attack budget $\\epsilon$ is unknown at training time. Nonetheless, both our approaches can benefit from adversarial training, as it results in models that are more verifiable and have tighter bounds for the same attack budget.3 ", "page_idx": 5}, {"type": "text", "text": "5.1 Classification Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate each method using a nominal coverage of $1-\\alpha=0.9$ and report the $95\\%$ confidence intervals for coverage and average set sizes computed over 50 splits $\\ensuremath{n_{\\mathrm{splits}}}=50)$ ) of the calibration, holdout and test set. ", "page_idx": 6}, {"type": "text", "text": "Bounds We use the verification library auto_LiRPA ( $\\mathrm{{Xu}}$ et al., 2020a) to compute the output bounds for $f(x)$ required in Eq. (10) and Eq. (11) for VRCP\u2013I and VRCP\u2013C respectively. In particular, we use two SotA GPU-parallelised incomplete NN verification algorithms, CROWN Zhang et al. (2018b) and $\\alpha$ -CROWN $\\mathrm{Xu}$ et al. (2020b). In brief, CROWN performs linear bound propagation and $\\alpha$ -CROWN employs a branch-and-bound algorithm to tighten the CROWN bounds at the expense of slower verification times. Therefore, we use CROWN to compute the output bounds for the TinyImageNet model and $\\alpha$ -CROWN for the smaller CIFAR10 and CIFAR100 models. ", "page_idx": 6}, {"type": "text", "text": "Our CIFAR10 model with $\\alpha$ -CROWN takes $\\approx0.5\\mathrm{s}$ per image to compute bounds with $\\epsilon=0.03$ , whereas our larger CIFAR100 model takes $\\approx7.2\\mathrm{s}$ with $\\epsilon=0.02$ . Comparatively, computing the smoothed scores takes $\\approx0.09\\mathrm{s}$ per image to compute on both models under the same respective $\\epsilon$ values. The largest model for the TinyImageNet dataset uses CROWN to compute bounds at a rate of $\\approx0.2\\mathrm{s}$ per image whereas the smoothed scores take $\\approx0.24\\mathrm{s}$ . All measurements are made with respect to the hardware details listed in Appendix B. ", "page_idx": 6}, {"type": "text", "text": "Attacks We use the PGD attack algorithm (Madry et al., 2017), which is a popular white-box attack algorithm to generate adversarial inputs with respect to either the $\\ell_{2}$ or $\\ell_{\\infty}$ -norm. ", "page_idx": 6}, {"type": "text", "text": "Models For all datasets, we train a CNN model on training set images with random crop and horizontal flip augmentations. Full model details are outlined in the appendix. ", "page_idx": 6}, {"type": "text", "text": "Hyperparameters $\\mathrm{RSCP+}$ based approaches use $\\sigma\\,=\\,2\\epsilon$ , $\\beta\\,=\\,0.001$ and those with PTT use $|\\mathcal{D}_{\\mathrm{hold}}|\\,=\\,500$ , $b=0.9$ and $T=1/400$ . For PGD, we choose a step size of $1/255$ and compute 100 steps for each attack. For CIFAR10 and CIFAR100 $|\\mathcal{D}_{\\mathrm{train}}|\\,=\\,50{,}000$ and for TinyImageNet $|\\mathcal{D}_{\\mathrm{train}}|=100\\small{,}000$ . For all datasets $\\lvert\\mathcal{D}_{\\mathrm{cal}}\\rvert=4{,}500$ and $|\\mathcal{D}_{\\mathrm{test}}|=5\\small{,}000$ . ", "page_idx": 6}, {"type": "text", "text": "Results In Table 1, we benchmark both our methods against the baseline vanilla CP (which is agnostic of the attack), $\\mathrm{RSCP+}$ and $\\mathrm{RSCP+}$ with PTT. At inference time, images are attacked using PGD to generate $\\ell_{2}$ -norm bounded attacks with $\\epsilon=0.02$ for CIFAR100 and TinyImageNet, and $\\epsilon=0.03$ for CIFAR10. ", "page_idx": 6}, {"type": "text", "text": "In all domains, the vanilla CP method fails to construct valid prediction sets with nominal marginal coverage, as expected. $\\mathrm{RSCP+}$ maintains robust marginal coverage but produces trivial prediction sets in all settings due to the highly conservative inflation of the threshold with respect to the calibration scores. Using PTT improves $\\mathrm{RSCP+}^{\\bullet}$ s performance but introduces significant variance in the set sizes: in many cases, PTT still produces trivial prediction sets and is heavily dependent on the sampled holdout set for $\\mathrm{RSCP+}$ to generate useful predictions. ", "page_idx": 6}, {"type": "text", "text": "Both of our methods have minimal sample dependence, as demonstrated by a very small variability in coverage and size over the 50 splits. We obtain prediction sets with substantially smaller average sizes than the other robust approaches, and hence, they provide more informative uncertainty estimates. VRCP\u2013I provides slightly more efficient regions than VRCP\u2013C. Still, it implies additional computational overhead at inference time because it requires computing bounds via NN verification for each test sample. In contrast, in VRCP\u2013C, bounds are computed only once at calibration time. On the other hand, in an environment where we may want to change $\\epsilon$ for different test points at inference time, VRCP\u2013I would be a sound choice, while VRCP\u2013C would require re-calibration. ", "page_idx": 6}, {"type": "text", "text": "Effect of increasing adversarial noise Fig. 2b shows the impact of increasing $\\epsilon$ across all evaluated robust methods. Our methods consistently produce smaller average set sizes with minor sample dependence, and simultaneously provide a more conservative marginal coverage than $\\mathrm{RSCP+}$ (PTT). We remark that, unlike $\\mathrm{RSCP+}$ , we do not require a holdout set or any score function transformations. ", "page_idx": 6}, {"type": "text", "text": "Effect of increasing Monte-Carlo samples Fig. 2a displays the influence of the $n_{\\mathrm{MC}}$ hyperparameter on the $\\mathrm{RSCP+}$ based methods with respect to our CIFAR10 model. Whilst increasing samples ", "page_idx": 6}, {"type": "table", "img_path": "5pJfDlaSxV/tmp/ebd5d54d4edf340465a333ca3a29fe9f74376f1b4fc4be8298357539d14cbd24.jpg", "table_caption": ["Table 1: Marginal Coverage and Average Set Sizes for different methods on CIFAR10, CIFAR100 and TinyImageNet. All results record a $95\\%$ confidence interval with $n_{\\mathrm{splits}}=50$ , $\\alpha=0.1$ , $\\sigma=2\\epsilon$ , $n_{\\mathrm{MC}}=1024$ , $\\epsilon=0.03$ for CIFAR10 and $\\epsilon=0.02$ otherwise. "], "table_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "5pJfDlaSxV/tmp/acf0e7777f2946f513944750524ae86201b1f89ad8c9d23bd0abf44a059c511b.jpg", "img_caption": ["(a) Varying $n_{\\mathrm{MC}}$ for $n_{\\mathrm{splits}}=50$ , $\\epsilon=0.03$ , $\\alpha=0.1$ , and $\\sigma=2\\epsilon$ . "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "5pJfDlaSxV/tmp/d8fb32288636004f5cfac464997c8d013975efcfee542c840e8bab48eee5ce70.jpg", "img_caption": ["(b) Varying the value of $\\epsilon$ for $n_{\\mathrm{splits}}=50$ , $\\sigma=2\\epsilon$ , $\\alpha=0.1$ , and $n_{\\mathrm{MC}}=1024$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Figure 2: Marginal Coverage and Average Set Sizes on CIFAR100 with $95\\%$ confidence intervals. ", "page_idx": 7}, {"type": "text", "text": "improves the performances of randomised smoothing approaches, we incur a large computational overhead when computing the smoothed scores. In our experiments in Table 1 we fix $n_{\\mathrm{MC}}=1024$ which is four times larger than the value for $n_{\\mathrm{MC}}$ used in previous work (Gendler et al., 2021; Yan et al., 2023) as a trade-off between prediction quality and computation. ", "page_idx": 8}, {"type": "text", "text": "Beyond $\\ell_{2}$ -norm bounded attacks Table 2 demonstrates that both of our methods generalise to other $\\ell_{p}$ - bounded perturbations other than for when $p=2$ which $\\mathrm{RSCP+}$ is limited to. In particular, we examine the $\\ell_{\\infty}$ , where even a small $\\epsilon$ can cause misclassification. We experiment using CIFAR10 and use $\\epsilon=0.001$ . PGD is used to generate $\\ell_{\\infty}$ -bounded adversarial examples. ", "page_idx": 8}, {"type": "text", "text": "Set size distribution From Fig. 1 we can visually examine the sample dependency issue that the PTT introduces. In the splits where the holdout set allows the PTT to make an informative transformation, $\\mathrm{RSCP+}$ is able to make quite reasonable predictions, otherwise, $\\mathrm{RSCP+}$ just returns trivial sets. This is clearly an undesirable property and adds significant variance to the predictions. ", "page_idx": 8}, {"type": "table", "img_path": "5pJfDlaSxV/tmp/cebcee5a02d64ea47e5ef1c382b11870f548ee565e3e769a87dfb568f035659d.jpg", "table_caption": ["Table 2: Marginal Coverage and Average Set Sizes for $\\epsilon$ perturbations with respect to the $\\ell_{\\infty}$ -norm on the CIFAR10 dataset. All results record a $95\\%$ confidence interval with $n_{\\mathrm{splits}}=50$ , $\\alpha=0.1$ and $\\epsilon=0.001$ . "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Both of our methods increase the spread of the average set sizes to account for the presence of adversarial examples whilst still maintaining a consistent distribution. ", "page_idx": 8}, {"type": "text", "text": "5.2 Regression Experiments ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We evaluate our VRCP framework on regression tasks from the PettingZoo Multi-Particle Environment (MPE) library Terry et al. (2021) for deep reinforcement learning. In these environments, the world is a 2D space containing $n$ agents (of which some may be adversarial) and $m$ landmarks, which are defined as circles of fixed radii. The position of the landmarks is fixed, and agents traverse the space according to second-order motion laws. We evaluate our method on three tasks: ", "page_idx": 8}, {"type": "text", "text": "\u2022 Adversary The good agents must try to reach a specific goal landmark whilst avoiding the adversaries. We use 2 good agents, 1 adversary and 2 landmarks.   \n\u2022 Spread All agents collaborate and minimise the distance to each landmark. We set the number of agents and landmarks equal to 3.   \n\u2022 Push In this task, there is a single good agent, adversary and landmark. The task is for the adversary to maximise the distance between the landmark and the good agent. ", "page_idx": 8}, {"type": "text", "text": "In our experiments, for data-generation we select 5,000 random initial world configurations and, for each, simulate 25 Monte-Carlo trajectories of length $k=5$ . The regression task for all environments is to predict the upper and lower quantiles of the total cumulative reward over the $k$ steps, given as input the initial world state. As in the classification experiments, we partition the dataset into the following partitions: $|\\mathcal{D}_{\\mathrm{train}}|=1\\mathrm{,}000$ , $\\lvert\\mathcal{D}_{\\mathrm{cal}}\\rvert=2{,}000$ and $|\\mathcal{D}_{\\mathrm{test}}|=2\\mathrm{,}00\\mathrm{0}$ . ", "page_idx": 8}, {"type": "text", "text": "For computing the bounds, we use CROWN Zhang et al. (2018b) with $\\ell_{\\infty}$ -bounded perturbations. To generate the adversarially perturbed test points, we use the Fast Gradient Sign Method as given in (Goodfellow et al., 2015). ", "page_idx": 8}, {"type": "text", "text": "As seen in Table 3, both VRCP methods recover the marginal coverage guarantees in the presence of adversarial perturbations, whereas vanilla CP fails drastically after $\\epsilon\\;=\\;0.02$ . We note that the performance of VRCP\u2013C and VRCP\u2013I are similar, although VRCP\u2013I tends to produce more conservative intervals (without sacrificing efficiency). ", "page_idx": 8}, {"type": "text", "text": "6 Limitations ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "VRCP\u2019s scalability depends on that of the underlying neural network verifier. We evaluated VRCP on small to medium-sized neural networks. For large networks, existing complete verification methods would become computationally infeasible, while incomplete methods would produce bounds that are too loose to be useful. However, it is important to note that since VRCP is agnostic of the specific verification tool used, it would directly benefti from any future advances in neural network verification. Thus, as neural network verification tools continue to evolve and improve, so does VRCP. ", "page_idx": 8}, {"type": "table", "img_path": "5pJfDlaSxV/tmp/7d4e886741edefad8f79e1f6e2a724c2b980595dd3c76d1939ffb72e178cf7e8.jpg", "table_caption": ["Table 3: Marginal coverage and average interval lengths for each MPE regression task for various $\\epsilon$ perturbations bounded by an $\\ell_{\\infty}$ -norm. All results record a $95\\%$ confidence interval with $n_{\\mathrm{splits}}=50$ . "], "table_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "We introduced Verifiably Robust Conformal Prediction (VRCP), a novel framework that leverages conformal prediction and neural network verification to produce prediction sets that maintain marginal coverage under adversarial perturbations. We presented two variants: VRCP\u2013C, which applies verification at calibration time, and VRCP\u2013I, which applies verification at inference time. ", "page_idx": 9}, {"type": "text", "text": "Extensive experiments on classification and regression tasks demonstrated that VRCP recovers valid marginal coverage in the presence of $\\ell_{1},\\ell_{2}$ , and $\\ell_{\\infty}$ -norm bounded adversarial attacks while producing more accurate prediction sets than existing methods. VRCP is the first adversarially robust CP framework supporting regression tasks and perturbations beyond the $\\ell_{2}$ -norm, achieving strong results without relying on probabilistic smoothing or posthoc corrections. VRCP\u2019s theoretical guarantees and empirical performance showcase the potential of leveraging verification tools for uncertainty quantification of machine learning models under attack. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgments and Disclosure of Funding ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "This work is supported by the \u201cREXASI-PRO\u201d H-EU project, call HORIZON-CL4-2021-HUMAN01-01, Grant agreement ID: 101070028. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "V. Vovk, A. Gammerman, and G. Shafer, Algorithmic learning in a random world. Springer, 2005, vol. 29.   \nA. N. Angelopoulos and S. Bates, \u201cA gentle introduction to conformal prediction and distribution-free uncertainty quantification,\u201d arXiv preprint arXiv:2107.07511, 2021.   \nJ. Cohen, E. Rosenfeld, and Z. Kolter, \u201cCertified adversarial robustness via randomized smoothing,\u201d in international conference on machine learning. PMLR, 2019, pp. 1310\u20131320.   \nC. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan, I. J. Goodfellow, and R. Fergus, \u201cIntriguing properties of neural networks,\u201d in 2nd International Conference on Learning Representations, ICLR, 2014.   \nB. Biggio and F. Roli, \u201cWild patterns: Ten years after the rise of adversarial machine learning,\u201d in Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, 2018, pp. 2154\u20132156.   \nS. Gowal, K. Dvijotham, R. Stanforth et al., \u201cOn the effectiveness of interval bound propagation for training verifiably robust models,\u201d 2018, arXiv preprint arXiv:1810.12715.   \nS. Wang, K. Pei, J. Whitehouse, J. Yang, and S. Jana, \u201cFormal security analysis of neural networks using symbolic intervals,\u201d in USENIX Security Symposium. USENIX Association, 2018, pp. 1599\u20131614.   \nH. Zhang, T.-W. Weng, P.-Y. Chen, C.-J. Hsieh, and L. Daniel, \u201cEfficient neural network robustness certification with general activation functions,\u201d in Advances in Neural Information Processing Systems, NuerIPS, 2018.   \nB. Batten, M. Hosseini, and A. Lomuscio, \u201cTight verification of probabilistic robustness in bayesian neural networks,\u201d in The 27th International Conference on Artificial Intelligence and Statistics, AISTATS, vol. 238, 2024.   \nD. M. Lopez, S. W. Choi, H. Tran, and T. T. Johnson, \u201cNNV 2.0: The neural network verification tool,\u201d in Computer Aided Verification - 35th International Conference, CAV, ser. Lecture Notes in Computer Science, C. Enea and A. Lal, Eds., vol. 13965. Springer, 2023, pp. 397\u2013412.   \nL. Pulina and A. Tacchella, \u201cAn abstraction-refinement approach to verification of artificial neural networks,\u201d in Computer Aided Verification, 22nd International Conference, CAV, ser. Lecture Notes in Computer Science, vol. 6174. Springer, 2010, pp. 243\u2013257.   \nG. Katz, C. W. Barrett, D. L. Dill, K. Julian, and M. J. Kochenderfer, \u201cReluplex: An efficient SMT solver for verifying deep neural networks,\u201d in Computer Aided Verification - 29th International Conference, CAV, ser. Lecture Notes in Computer Science, vol. 10426. Springer, 2017, pp. 97\u2013117.   \nM. Hosseini and A. Lomuscio, \u201cBounded and unbounded verification of rnn-based agents in nondeterministic environments,\u201d in International Conference on Autonomous Agents and Multiagent Systems, AAMAS. IFAAMAS, 2023, pp. 2382\u20132384.   \nA. Gendler, T.-W. Weng, L. Daniel, and Y. Romano, \u201cAdversarially robust conformal prediction,\u201d in International Conference on Learning Representations, 2021.   \nJ. C. Duchi, P. L. Bartlett, and M. J. Wainwright, \u201cRandomized smoothing for stochastic optimization,\u201d SIAM Journal on Optimization, vol. 22, no. 2, pp. 674\u2013701, 2012.   \nH. Salman, J. Li, I. Razenshteyn, P. Zhang, H. Zhang, S. Bubeck, and G. Yang, \u201cProvably robust deep learning via adversarially trained smoothed classifiers,\u201d Advances in neural information processing systems, vol. 32, 2019.   \nG. Yan, Y. Romano, and T.-W. Weng, \u201cProvably robust conformal prediction with improved efficiency,\u201d in The Twelfth International Conference on Learning Representations, 2023.   \nS. Ghosh, Y. Shi, T. Belkhouja, Y. Yan, J. Doppa, and B. Jones, \u201cProbabilistically robust conformal prediction,\u201d in Uncertainty in Artificial Intelligence. PMLR, 2023, pp. 681\u2013690.   \nS. H. Zargarbashi, M. S. Akhondzadeh, and A. Bojchevski, \u201cRobust yet efficient conformal prediction sets,\u201d in 41st International Conference on Machine Learning, ICML, ser. Proceedings of Machine Learning Research, vol. 235. PMLR, 21\u201327 Jul 2024, pp. 17 123\u201317 147.   \nJ. Lei, J. Robins, and L. Wasserman, \u201cDistribution-free prediction sets,\u201d Journal of the American Statistical Association, vol. 108, no. 501, pp. 278\u2013287, 2013.   \nY. Romano, E. Patterson, and E. Candes, \u201cConformalized quantile regression,\u201d Advances in neural information processing systems, vol. 32, 2019.   \nK. Xu, Z. Shi, H. Zhang, Y. Wang, K.-W. Chang, M. Huang, B. Kailkhura, X. Lin, and C.-J. Hsieh, \u201cAutomatic perturbation analysis for scalable certified robustness and beyond,\u201d Advances in Neural Information Processing Systems, vol. 33, 2020.   \nH. Zhang, T.-W. Weng, P.-Y. Chen, C.-J. Hsieh, and L. Daniel, \u201cEfficient neural network robustness certification with general activation functions,\u201d Advances in neural information processing systems, vol. 31, 2018. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "K. Xu, H. Zhang, S. Wang, Y. Wang, S. Jana, X. Lin, and C.-J. Hsieh, \u201cFast and complete: Enabling complete neural network verification with rapid and massively parallel incomplete verifiers,\u201d arXiv preprint arXiv:2011.13824, 2020. A. Madry, A. Makelov, L. Schmidt, D. Tsipras, and A. Vladu, \u201cTowards deep learning models resistant to adversarial attacks,\u201d arXiv preprint arXiv:1706.06083, 2017. J. Terry, B. Black, N. Grammel, M. Jayakumar, A. Hari, R. Sullivan, L. S. Santos, C. Dieffendahl, C. Horsch, R. Perez-Vicente et al., \u201cPettingzoo: Gym for multi-agent reinforcement learning,\u201d Advances in Neural Information Processing Systems, vol. 34, pp. 15 032\u201315 043, 2021. I. J. Goodfellow, J. Shlens, and C. Szegedy, \u201cExplaining and harnessing adversarial examples,\u201d 2015. ", "page_idx": 11}, {"type": "text", "text": "A Additional Proof Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "Here we prove Proposition 1 regarding the prediction sets obtained from VRCP\u2013I and VRCP\u2013C. ", "page_idx": 12}, {"type": "text", "text": "Proof of Proposition $^{\\,l}$ . To prove $C(\\pmb{x})\\subseteq C_{\\epsilon}(\\pmb{x})$ for VRCP\u2013I it suffices to observe that ", "page_idx": 12}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{C_{\\epsilon}(\\pmb{x})=\\{y\\in Y:s^{\\pm}(\\pmb{x},y)\\leq Q_{1-\\alpha}(F)\\}\\supseteq\\bigcup_{x^{\\prime}\\in B_{\\epsilon}(x_{n+1})}\\{y\\in Y:S(\\pmb{x}^{\\prime},y)\\leq Q_{1-\\alpha}(F)\\}}\\\\ &{\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad=\\bigcup_{x^{\\prime}\\in B_{\\epsilon}(x_{n+1})}C(\\pmb{x}^{\\prime})\\supseteq C(\\pmb{x}).}\\end{array}\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "To prove the same for VRCP\u2013C, we observe that since $Q_{1-\\alpha}(F^{\\top})\\geq Q_{1-\\alpha}(F)$ , we have that ", "page_idx": 12}, {"type": "equation", "text": "$$\nC_{\\epsilon}({\\pmb x})=\\{{\\pmb y}\\in Y:S({\\pmb x},{\\pmb y})\\leq Q_{1-\\alpha}(F^{\\top})\\}\\supseteq\\{{\\pmb y}\\in Y:S({\\pmb x},{\\pmb y})\\leq Q_{1-\\alpha}(F)\\}=C({\\pmb x}).\n$$", "text_format": "latex", "page_idx": 12}, {"type": "text", "text": "Next, we prove the validity of the VRCP\u2013I region for the regression case, defined in Eq. (15). ", "page_idx": 12}, {"type": "text", "text": "Proof. It suffices to show that all $y\\;\\in\\;C_{\\epsilon}({\\pmb x}_{n+1})\\;=\\;[f^{\\bot}\\,-\\,q,f^{\\top}\\,+\\,q]$ satisfy $s^{\\perp}(x_{n+1},y)\\,=$ max $\\{f^{\\perp}-y,y-f^{\\top}\\}\\leq q$ and all $y\\not\\in C_{\\epsilon}(x_{n+1})$ do not. For simplicity of notation, we abbreviated $f_{\\alpha_{\\mathrm{high}}}^{\\top}(\\pmb{x}_{n+1})$ with $f^{\\top}$ , $f_{\\alpha_{\\mathrm{low}}}^{\\perp}\\left(\\pmb{x}_{n+1}\\right)$ with $f^{\\perp}$ and $Q_{1-\\alpha}(F)$ with $q$ . ", "page_idx": 12}, {"type": "text", "text": "Assume $y\\in C_{\\epsilon}(x_{n+1})$ . We divide the proof into two cases: ", "page_idx": 12}, {"type": "text", "text": "1. $s^{\\perp}(x_{n+1},y)\\,=\\,f^{\\perp}\\,-\\,y$ , which implies that $\\scriptstyle y\\ \\in\\ [f^{\\perp}\\ -\\ q,\\frac{f^{\\top}+f^{\\perp}}{2}]$ . It suffices to show that $f^{\\perp}-y\\leq q$ for $y=f^{\\perp}-q$ , which is clearly satisfied.   \n2. $s^{\\perp}(x_{n+1},y)\\,=\\,y\\,-\\,f^{\\top}$ , which implies that $\\begin{array}{r}{y\\ \\in\\ [\\frac{f^{\\top}+f^{\\bot}}{2},f^{\\top}+q]}\\end{array}$ . It suffices to show that $y-f^{\\top}\\leq q$ for $y=f^{\\top}+q$ , which is clearly satisfied. ", "page_idx": 12}, {"type": "text", "text": "Finally, we show that $y\\,\\not\\in\\,C_{\\epsilon}(x_{n+1})$ implies $s^{\\perp}(x_{n+1},y)\\,>\\,q$ : if $y\\,<\\,f^{\\perp}\\,-\\,q$ , we have that $s^{\\perp}(x_{n+1},y)=f^{\\perp}-y>q$ . Similarly, if $y>f^{\\perp}+q$ , we have that $s^{\\perp}(x_{n+1},y)=y-f^{\\top}>q$ . ", "page_idx": 12}, {"type": "text", "text": "B Model Details ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "All experimental results were obtained from running the code provided in our GitHub repository on a server with $2\\mathbf{x}$ Intel Xeon Platinum 8360Y (36 cores, 72 threads, $2.4\\mathrm{GHz})$ ), 512GB of RAM and an NVIDIA A40 48GB GPU. All pre-trained models as well as the training scripts are also provided in the GitHub repository. In summary, the models\u2019 train and test performances are provided in Tables 4 and 5. ", "page_idx": 12}, {"type": "text", "text": "Table 4: Train and test accuracies $(\\%)$ for the classifications models on CIFAR10, CIFAR100, and TinyImageNet datasets. It should be noted that the model\u2019s accuracy has no effect on VRCP\u2019s validity and only affects the efficiency of the prediction sets (more accurate models, tighter prediction regions) CIFAR100.TinvI ", "page_idx": 12}, {"type": "table", "img_path": "5pJfDlaSxV/tmp/70ae30a4fdfafde3c928ee4e0f63fcebf95c2d1963b344320c48b9c3025b3e36.jpg", "table_caption": ["Metric CIFAR10 TinyImageNet "], "table_footnote": [], "page_idx": 12}, {"type": "text", "text": "B.1 Classification ", "text_level": 1, "page_idx": 12}, {"type": "text", "text": "CIFAR10 We use 2 convolution layers with average pooling and dropout, followed by 2 linear layers. ReLU activations across all layers. ", "page_idx": 12}, {"type": "text", "text": "CIFAR100 We use 1 convolution layer with average pooling, 2 further convolution layers with average pooling and dropout followed by 2 linear layers. ReLU activations across all layers. ", "page_idx": 12}, {"type": "text", "text": "TinyImageNet We use 4 convolution layers with dropout followed by 2 linear layers with dropout. Leaky ReLU activation function with $a=0.1$ ", "page_idx": 13}, {"type": "text", "text": "For all models we train using images augmented with random crop with 4 pixels of padding and random horizontal filp. We standardise the TinyImageNet models with $\\mu=0.5$ and $\\sigma=0.5$ overall 3 RGB channels. ", "page_idx": 13}, {"type": "text", "text": "As previously mentioned, we do not make any assumptions during training about the perturbations we expect to see at inference time. As such, unlike the existing SotA methods, we do not train on smoothed or adversarially attacked images. ", "page_idx": 13}, {"type": "text", "text": "All models are trained for 200 epochs with a batch size of 128 using the stochastic gradient descent optimiser with momentum set to 0.9. We also employ a weight decay of $5\\times10^{=4}$ and a cosine annealing learning rate scheduler. ", "page_idx": 13}, {"type": "text", "text": "B.2 Regression ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "For the MPE datasets, we train Deep Q-Net policies for the RL tasks for the sole purposes of generating the appropriate datasets and provide these policies in the GitHub repository. ", "page_idx": 13}, {"type": "text", "text": "The model used for the quantile regressors is a simple linear architecture consisting of 3 layers, separated with ReLU activation functions and dropout. We trained the model to estimate the $\\alpha/2$ and $1-\\alpha/2$ quantiles, where $\\alpha=0.1$ , as in the other experiments. ", "page_idx": 13}, {"type": "text", "text": "The exact parameters for the RL policies can be found in the config flies within the GitHub repository, however have little bearing on the efficiency of our results, being used only for the data-generating process. The quantile regressors are each trained for 400 epochs, with a learning rate of $10^{-5}$ , dropout of 0.1 and a decay of $1\\bar{0}^{-5}$ . ", "page_idx": 13}, {"type": "text", "text": "Table 5: Train and test loss for the regression models in the adversary, spread, and push environments. ", "page_idx": 13}, {"type": "table", "img_path": "5pJfDlaSxV/tmp/d67b77db2e32c805503fa376c6bf0faf21a56f86bc126e237c9d2635884e57ac.jpg", "table_caption": [], "table_footnote": [], "page_idx": 13}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: Claims made in the abstract and introduction are supported by our results in Section 5. Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 14}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Justification: Covered in Section 6. ", "page_idx": 14}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 14}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 14}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 14}, {"type": "text", "text": "Justification: Covered in Section 4. Guidelines: ", "page_idx": 14}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and cross-referenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 15}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 15}, {"type": "text", "text": "Justification: All relevant details provided in Section 5, Appendix B and in our GitHub repository. Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 15}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 15}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Justification: All code used for experiments is available in our GitHub repository. Guidelines: ", "page_idx": 15}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code. ", "page_idx": 15}, {"type": "text", "text": "\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/ guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/ guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 16}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: Hyperparameters for experiments are all provided in Section 5 and model details are provided in Appendix B. ", "page_idx": 16}, {"type": "text", "text": "Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them.   \n\u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 16}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 16}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Justification: All experiments in Section 5 provide a $95\\%$ confidence interval taken over 50 splits. Guidelines: ", "page_idx": 16}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 16}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: Compute resources discussed in Section 5 and Appendix B ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 17}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We have reviewed the CoE and deemed that our work is fully aligned with the statements. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 17}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 17}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 17}, {"type": "text", "text": "Justification: There is no significant societal impact of the work provided outside of the fact that we provide a robust approach to defend against adversarial attacks. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology. ", "page_idx": 17}, {"type": "text", "text": "\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 18}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our approach provides defences for adversarial attacks and our methods are not exploitable by design. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 18}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Justification: All credit is given to authors of any assets used as a citation in the paper in the README flie of the GitHub repository. Relevant licenses are also included in the same repository. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 18}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: The model details are included in Appendix B and documentation on how to reproduce results and train the models is given in the README file in the GitHub repository. Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc. ", "page_idx": 18}, {"type": "text", "text": "\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used. ", "page_idx": 19}, {"type": "text", "text": "\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 19}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] Justification: Not relevant to our work. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 19}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 19}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 19}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 19}, {"type": "text", "text": "Justification: Not relevant to our work. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 19}]