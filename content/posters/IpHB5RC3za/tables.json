[{"figure_path": "IpHB5RC3za/tables/tables_7_1.jpg", "caption": "Table 1: Comparison with the meta-detector named Streamer. DSGN++opt represents the method equipped with our real-time optimization strategies. The symbol \u201c\u2020\u201d denotes the basic framework of StreamYOLO [59], which is built upon the DSGN++opt architecture.", "description": "This table compares the proposed StreamDSGN method with the Streamer meta-detector for 3D object detection on the KITTI dataset.  It shows the performance (streaming average precision - sAP) of both methods using different base detectors (DSGN++ and its optimized version DSGN++opt) across three object categories (Car, Pedestrian, Cyclist) and different IoU thresholds (0.5 and 0.7).  Latency of each approach is also presented.", "section": "4.2 Comparison with Meta-detector"}, {"figure_path": "IpHB5RC3za/tables/tables_7_2.jpg", "caption": "Table 2: Ablation studies of our methods. Setting a denotes the DSGN++opt. Setting b represents directly predicting future results. Setting c incorporates historical feature based on b and serves as our baseline method (highlighted in gray). Settings d, e, and f respectively incorporate our enhancement strategies. Setting g is our final proposed solution (highlighted in green).", "description": "This table presents the results of ablation studies conducted to evaluate the effectiveness of different components and strategies within the StreamDSGN model.  It shows the impact of each component on the streaming average precision (sAP) for both BEV and 3D perspectives, categorized by object difficulty (Easy, Moderate, Hard). The table systematically adds components to the baseline model (Setting c) to show the incremental improvements achieved with each addition.  The final configuration (Setting g) incorporates all proposed enhancements.", "section": "4 Experiments"}, {"figure_path": "IpHB5RC3za/tables/tables_14_1.jpg", "caption": "Table 1: Comparison with the meta-detector named Streamer. DSGN++opt represents the method equipped with our real-time optimization strategies. The symbol \u201c\u2020\u201d denotes the basic framework of StreamYOLO [59], which is built upon the DSGN++opt architecture.", "description": "This table compares the proposed method, StreamDSGN, with a meta-detector called Streamer, under various settings. Streamer utilizes either DSGN++ or a real-time optimized version (DSGN++opt) as its base detector and incorporates a Kalman filter for prediction.  The table shows the latency (in milliseconds), and streaming average precision (sAP) at IoU thresholds of 0.5 and 0.7 for three object categories (Car, Pedestrian, Cyclist) across three difficulty levels (Easy, Moderate, Hard) for both BEV and 3D perspectives. The results highlight StreamDSGN's improved performance and efficiency.", "section": "4.2 Comparison with Meta-detector"}, {"figure_path": "IpHB5RC3za/tables/tables_14_2.jpg", "caption": "Table 4: Comparison of the domain gap between our split Tracking dataset and the 3D Object Detection dataset.", "description": "This table compares the performance of PointPillars and DSGN++ on the KITTI Object Detection dataset and a custom split of the KITTI Tracking dataset.  The purpose is to demonstrate the impact of the dataset split on model performance and analyze the domain gap between the two datasets.  The results show that both methods perform better on the custom split Tracking dataset, highlighting a smaller domain gap compared to using the full Object Detection dataset.", "section": "4 Experiments"}, {"figure_path": "IpHB5RC3za/tables/tables_15_1.jpg", "caption": "Table 5: Ablation studies of fusion stage.", "description": "This table presents the ablation study results for comparing two different fusion stage locations in the StreamDSGN architecture: before the detection head (as in StreamYOLO) and before the BEV backbone (as proposed in the paper).  The results show that placing the fusion stage before the BEV backbone leads to significantly improved performance across all difficulty levels.", "section": "4.3 Ablation Studies"}, {"figure_path": "IpHB5RC3za/tables/tables_15_2.jpg", "caption": "Table 6: Comparison with SOTA fusion method and ablation studies on FFF. The term \"rd\" and \"d\" represent the downsample ratio and maximum displacement, respectively.", "description": "This table presents ablation study results on the effectiveness of the Feature-Flow Fusion (FFF) method.  It compares the performance of FFF against the state-of-the-art (SOTA) Dual-Flow method [59] using various downsampling ratios (rd) and maximum displacements (d). The results, measured by sAPBEV and sAP3D (streaming average precision for Bird's Eye View and 3D respectively), across different difficulty levels (Easy, Moderate, Hard), demonstrate the trade-offs between latency and accuracy with different hyperparameter settings of the FFF method.", "section": "4.3 Ablation Studies"}, {"figure_path": "IpHB5RC3za/tables/tables_15_3.jpg", "caption": "Table 7: Grid search of \u03c4 in Equation 8 for MCL.", "description": "This table presents the results of a grid search performed to find the optimal value of the hyperparameter \u03c4 in the Motion Consistency Loss (MCL) function.  The search explored various values of \u03c4, ranging from 0.0 to 1.0, and measured the resulting streaming average precision (sAP) for both BEV (Bird's Eye View) and 3D object detection, categorized by difficulty level (Easy, Moderate, Hard). The table allows for comparison of the performance with and without the MCL function and helps determine the best-performing \u03c4 value that balances the velocity and acceleration loss terms in the MCL.", "section": "4.3 Ablation Studies"}, {"figure_path": "IpHB5RC3za/tables/tables_15_4.jpg", "caption": "Table 8: Comparison of the Complexity of BEV Backbones.", "description": "This table compares the performance of the original Hourglass backbone with the proposed Large Kernel BEV Backbone (LKBB).  It shows that LKBB, while having a similar number of parameters, achieves a significant reduction in FLOPs (floating point operations) and a modest increase in latency. Despite the slightly higher latency, the enhanced accuracy of LKBB suggests improved efficiency in terms of performance versus computational cost.", "section": "4.2 Comparison with Meta-detector"}]