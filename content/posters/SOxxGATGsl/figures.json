[{"figure_path": "SOxxGATGsl/figures/figures_6_1.jpg", "caption": "Figure 1: The results obtained with different time horizons.", "description": "This figure presents the results of a simulation comparing the performance of three algorithms (MBAD, UD, and Zooming) across three different time horizons (T = 10000, 20000, and 50000). The y-axis represents the cumulative regret, showing the difference between the rewards obtained by each algorithm and the rewards obtained by the optimal arm. The x-axis shows the time horizon (T). The results demonstrate the superior performance of the MBAD algorithm, especially for larger time horizons, compared to UD and Zooming.", "section": "5 Numerical Evaluations"}, {"figure_path": "SOxxGATGsl/figures/figures_8_1.jpg", "caption": "Figure 1: The results obtained with different time horizons.", "description": "This figure presents the results of a simulation comparing three algorithms: the proposed MBAD algorithm, the uniform discretization with UCB1 algorithm (UD), and the Zooming algorithm.  The x-axis represents the time horizon (T), and the y-axis shows the regret.  The MBAD algorithm significantly outperforms both UD and Zooming, demonstrating its efficiency in managing limited memory resources.", "section": "5 Numerical Evaluations"}, {"figure_path": "SOxxGATGsl/figures/figures_12_1.jpg", "caption": "Figure 2: Flowchart for the MBUD algorithm", "description": "This flowchart illustrates the process of the Memory Bounded Uniform Discretization (MBUD) algorithm. It begins by dividing the exploration phase into [log log T] phases, further segmented into cross exploration phases and the summarize phase.  The algorithm iterates over arms within the discretized action space. During cross exploration phases, the algorithm uses the CROSSCUBE function to generate a new cube and selects an arm from this cube. The algorithm evaluates the selected arm against the current best-estimated arm, updating it if necessary. The summarize phase revisits all arms within the uniform discretization space. Finally, the algorithm selects the best-estimated arm and plays it for the remaining rounds.", "section": "A.1 Flowchart for the MBUD Algorithm"}, {"figure_path": "SOxxGATGsl/figures/figures_13_1.jpg", "caption": "Figure 3: Flowchart for the MBAD algorithm", "description": "The flowchart illustrates the MBAD algorithm's adaptive discretization, showing how it focuses on promising regions to find the optimal arm. It starts by setting parameters, then uses the ADAPTIVECUBE function to generate and select arms from cubes.  The algorithm moves to the next cube if the best arm remains unchanged, or it evaluates and selects subcubes if a comparison budget condition is met. This process iteratively refines the search space until convergence to the optimal subcube.", "section": "A.2 Flowchart for the MBAD Algorithm"}, {"figure_path": "SOxxGATGsl/figures/figures_20_1.jpg", "caption": "Figure 4: Performance comparisons for Gaussian distribution with different variances.", "description": "The figure shows the performance comparison of three algorithms, namely, Zooming, UD (uniform discretization with UCB1), and MBAD, under different variances of Gaussian noise.  It demonstrates how the algorithms' regret (difference between the total expected reward and the total reward obtained by the algorithm) changes with the time horizon (number of rounds).  The MBAD algorithm consistently shows lower regret, indicating superior performance, especially when the variance is smaller.", "section": "5 Numerical Evaluations"}, {"figure_path": "SOxxGATGsl/figures/figures_20_2.jpg", "caption": "Figure 5: Performance comparisons for (a) Uniform distribution; (b) Quadratic reward function.", "description": "This figure compares the performance of three algorithms: Zooming, UD (Uniform Discretization with UCB1), and MBAD (Memory Bounded Adaptive Discretization) across two different settings.  The left subplot (a) shows the results using a uniform noise distribution, while the right subplot (b) shows the results when using a quadratic reward function. The x-axis represents the time horizon (T), and the y-axis represents the cumulative regret.  The figure demonstrates MBAD's performance relative to the other algorithms under varied reward function and noise distribution conditions.", "section": "Numerical Evaluations"}]