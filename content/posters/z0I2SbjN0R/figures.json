[{"figure_path": "z0I2SbjN0R/figures/figures_1_1.jpg", "caption": "Figure 1: We propose DiffusionPDE, a generative PDE solver under partial observations. Given a family of PDE with coefficient (initial state) a and solution (final state) u, we train the diffusion model on the joint distribution of a and u. During inference, we gradually denoise a Gaussian noise, guided by sparse observation and known PDE function, to recover the full prediction of both a and u that align well with the sparse observations and the given equation.", "description": "This figure illustrates the architecture of DiffusionPDE, a generative model for solving partial differential equations (PDEs) with partial observations.  The training phase involves learning the joint distribution of PDE coefficients (initial state) and solutions (final state) using a diffusion model. During inference, the model takes sparse observations and the known PDE function as input. It then iteratively denoises Gaussian noise, guided by both the sparse observations and the PDE constraints, to reconstruct the full coefficient and solution fields.", "section": "1 Introduction"}, {"figure_path": "z0I2SbjN0R/figures/figures_4_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to recover both the coefficient and solution of a PDE from sparse observations.  It shows three scenarios: sparse observations on the coefficient only, sparse observations on the solution only, and sparse observations on both. Each scenario displays the ground truth coefficient and solution, the corresponding recovered coefficient and solution by DiffusionPDE, and the location of the sparse observations. The error rates (or relative errors) for the recovered data are provided for each scenario. The result demonstrates the versatility of the method, as it can successfully reconstruct the PDE regardless of where the observations come from.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_5_1.jpg", "caption": "Figure 8: Recovered coefficients, solutions, and their corresponding visualized absolute errors for various PDE families.", "description": "This figure visualizes the results of applying DiffusionPDE to three different types of PDEs: Darcy Flow, Poisson equation, and Helmholtz equation.  For each PDE, it shows the ground truth coefficients and solutions alongside the results obtained using DiffusionPDE guided by observation loss only and those obtained using DiffusionPDE guided by both observation and PDE loss. The absolute errors for both coefficients and solutions are also shown in heatmap visualizations, making it clear how the combined use of observation and PDE loss leads to significantly improved accuracy.", "section": "D Improvement in Prediction through PDE Loss Term"}, {"figure_path": "z0I2SbjN0R/figures/figures_7_1.jpg", "caption": "Figure 4: We compare DiffusionPDE with state-of-the-art neural PDE solvers [3\u20136]. In the forward Navier-Stokes problem, we give 500 sparse observations of the initial state to solve for the final state. In the inverse set-up, we take observations of the final state and solve for the initial. For the Burgers' equation, we use 5 sensors throughout all time steps and want to recover the solution at all time steps. Note that we train on neighboring snapshot pairs for the baselines in order to add continuous observations of the Burgers' equation. Results show that existing methods do not support PDE solving under sparse observations, and we believe they are not easily extendable to do so. We refer readers to the supplementary for a complete set of visual results.", "description": "This figure compares the performance of DiffusionPDE against other state-of-the-art neural PDE solvers (DeepONet, PINO, FNO, PINNs) on three different PDE problems: forward and inverse Navier-Stokes and Burgers' equation.  The key takeaway is that DiffusionPDE significantly outperforms the baselines, especially when dealing with sparse observations. While the baselines struggle with even moderately sparse data, DiffusionPDE accurately reconstructs solutions with only a small percentage of observations, showcasing its robustness and effectiveness in handling real-world scenarios where full information is rarely available.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_8_1.jpg", "caption": "Figure 5: We compare GraphPDE [8] and our method for solving the inverse bounded Navier-Stokes equation. Given the boundary conditions and 1% observations of the final vorticity field, we solve the initial vorticity field. We set the fluids to flow in from the top, with boundary conditions at the edges and a middle cylinder. While GraphPDE can recover the overall pattern of the initial state, it suffers from noise when the fluid passes the cylinder and misses the high vorticities at the bottom.", "description": "This figure compares the performance of GraphPDE and DiffusionPDE in solving the inverse problem of the bounded Navier-Stokes equation.  Both methods are given boundary conditions and 1% of the final vorticity field as input, and are tasked with reconstructing the initial vorticity field.  The figure highlights that DiffusionPDE significantly outperforms GraphPDE in accuracy, with a relative error of 2.7% compared to GraphPDE's 12.0%.  The visual representation demonstrates that while GraphPDE recovers the overall shape, it struggles with fine details, particularly around the cylinder. DiffusionPDE produces a much more accurate and detailed reconstruction.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_9_1.jpg", "caption": "Figure 6: We compare the performance of DiffusionPDE and Diffusion with CFG for the unbounded Navier-Stokes equation, and visualize the error. With 500 observation points, DiffusionPDE demonstrates superior accuracy, achieving lower errors in both forward and inverse problem-solving.", "description": "This figure compares the performance of DiffusionPDE and a standard diffusion model with classifier-free guidance (CFG) on the unbounded Navier-Stokes equation.  Both methods were given 500 sparse observations (3% of the total data) for solving both the forward and inverse problems.  The results demonstrate that DiffusionPDE achieves significantly lower relative errors in both cases, highlighting its superior accuracy for solving PDEs with partial observations.", "section": "Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_9_2.jpg", "caption": "Figure 7: We compare our DiffusionPDE method with the approaches of Shu et al. [54] and OFormer [59] for the unbounded Navier-Stokes equation. Using 500 observation points, DiffusionPDE effectively solves both the forward and inverse problems, achieving significantly lower errors.", "description": "This figure compares the performance of DiffusionPDE against two other methods (Shu et al. and OFormer) on the unbounded Navier-Stokes equation, a complex fluid dynamics problem.  The experiment uses 500 sparse observations (only a small percentage of the total data) to solve both the forward problem (predicting the final state from the initial state) and the inverse problem (predicting the initial state from the final state). The results show that DiffusionPDE significantly outperforms the other two methods in terms of accuracy, achieving much lower relative errors.", "section": "Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_15_1.jpg", "caption": "Figure 8: Recovered coefficients, solutions, and their corresponding visualized absolute errors for various PDE families.", "description": "This figure shows the effectiveness of adding PDE loss to the observation loss for improving the accuracy of recovered solutions and coefficients. It visualizes the recovered coefficients, solutions, and corresponding absolute errors for Darcy flow, Poisson equation, and Helmholtz equation, demonstrating the significant improvement in accuracy when both losses are combined.", "section": "D Improvement in Prediction through PDE Loss Term"}, {"figure_path": "z0I2SbjN0R/figures/figures_16_1.jpg", "caption": "Figure 8: Recovered coefficients, solutions, and their corresponding visualized absolute errors for various PDE families.", "description": "This figure visualizes the results of DiffusionPDE on three different PDEs: Darcy Flow, Poisson equation, and Helmholtz equation.  It shows the recovered coefficients and solutions alongside the ground truth for each PDE.  For each PDE, there are three columns representing the results obtained using only observation loss, the combined guidance of observation and PDE loss, and the ground truth. This comparison visually demonstrates the improvement in accuracy achieved by incorporating the PDE loss term in the guidance process. The absolute errors are also visualized, further highlighting the effectiveness of using both the observation and PDE loss.", "section": "D Improvement in Prediction through PDE Loss Term"}, {"figure_path": "z0I2SbjN0R/figures/figures_17_1.jpg", "caption": "Figure 4: We compare DiffusionPDE with state-of-the-art neural PDE solvers [3\u20136]. In the forward Navier-Stokes problem, we give 500 sparse observations of the initial state to solve for the final state. In the inverse set-up, we take observations of the final state and solve for the initial. For the Burgers\u2019 equation, we use 5 sensors throughout all time steps and want to recover the solution at all time steps. Note that we train on neighboring snapshot pairs for the baselines in order to add continuous observations of the Burgers\u2019 equation. Results show that existing methods do not support PDE solving under sparse observations, and we believe they are not easily extendable to do so. We refer readers to the supplementary for a complete set of visual results.", "description": "This figure compares the performance of DiffusionPDE against other state-of-the-art neural PDE solvers (DeepONet, PINO, FNO, PINNs) on three different PDE problems (Burgers', forward Navier-Stokes, and inverse Navier-Stokes).  It highlights DiffusionPDE's ability to accurately solve these problems using significantly fewer observations (5 sensors for Burgers', 500 sparse observations for Navier-Stokes), showcasing its superior performance under partial observation conditions.", "section": "4.4 Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_17_2.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure shows the results of DiffusionPDE applied to Darcy's equation, demonstrating its ability to recover both the coefficient and solution from sparse observations.  Three scenarios are presented: sparse observations on the coefficient only, sparse observations on the solution only, and sparse observations on both.  The results demonstrate DiffusionPDE's accuracy compared to the ground truth in all cases.  The figure illustrates the versatility of the approach, highlighting its effectiveness even with very limited data.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_17_3.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to handle sparse observations.  It shows the results of solving the Darcy equation using only sparse observations of either the coefficient (a) or the solution (u), or both.  DiffusionPDE successfully reconstructs both the coefficient and solution in each case, highlighting its advantage over traditional methods that require complete information.", "section": "Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_17_4.jpg", "caption": "Figure 10: Results of forward and inverse problems for different PDE families with sparse observation.", "description": "This figure visualizes the results of applying DiffusionPDE to various PDEs under sparse observation conditions.  It shows both forward (predicting the solution given the coefficients) and inverse (recovering the coefficients given the solution) problems.  The results are compared against ground truth, demonstrating the accuracy of DiffusionPDE in reconstructing both coefficients and solutions even with limited information. Each subfigure represents a different PDE, showing the ground truth, sparse observations used, and the results produced by DiffusionPDE and other state-of-the-art methods (DeepONet, PINO, FNO, PINNs, GraphPDE). The relative errors are also indicated for each method, highlighting the superior performance of DiffusionPDE.", "section": "4.4 Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_17_5.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to solve both forward and inverse problems using only sparse observations of either the coefficient (a) or the solution (u), or both.  It showcases the model's capacity to recover both the full coefficient field and the full solution from incomplete input data, highlighting its versatility compared to traditional methods.  The results shown are for Darcy's equation, but the caption indicates the method performs similarly for other PDEs.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_18_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the capability of DiffusionPDE to handle partial observations. It showcases the successful reconstruction of both coefficients and solutions of the Darcy equation using only sparse observations of either coefficients, solutions, or both.  The results highlight the versatility of DiffusionPDE in handling incomplete data, a major challenge for classical and learning-based PDE solvers.", "section": "Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_18_2.jpg", "caption": "Figure 5: We compare GraphPDE [8] and our method for solving the inverse bounded Navier-Stokes equation. Given the boundary conditions and 1% observations of the final vorticity field, we solve the initial vorticity field. We set the fluids to flow in from the top, with boundary conditions at the edges and a middle cylinder. While GraphPDE can recover the overall pattern of the initial state, it suffers from noise when the fluid passes the cylinder and misses the high vorticities at the bottom.", "description": "This figure compares the performance of DiffusionPDE and GraphPDE on solving the inverse problem of the bounded Navier-Stokes equation.  Both models use only 1% of the total available information (observations of the final vorticity field).  DiffusionPDE is shown to recover the initial vorticity field with significantly greater accuracy and less noise than GraphPDE, particularly in regions of high vorticity near the cylinder.", "section": "4.4 Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_18_3.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates DiffusionPDE's ability to handle sparse observations.  It shows results for solving the Darcy's equation using the proposed method. Three scenarios are presented: sparse observations on the coefficient (a), sparse observations on the solution (u), and sparse observations on both the coefficient and the solution. The figure visually compares the recovered coefficient and solution in each scenario with their ground truth counterparts. The relative error rate is provided for each case, demonstrating the accuracy of the method even with limited information.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_18_4.jpg", "caption": "Figure 4: We compare DiffusionPDE with state-of-the-art neural PDE solvers [3-6]. In the forward Navier-Stokes problem, we give 500 sparse observations of the initial state to solve for the final state. In the inverse set-up, we take observations of the final state and solve for the initial. For the Burgers' equation, we use 5 sensors throughout all time steps and want to recover the solution at all time steps. Note that we train on neighboring snapshot pairs for the baselines in order to add continuous observations of the Burgers' equation. Results show that existing methods do not support PDE solving under sparse observations, and we believe they are not easily extendable to do so. We refer readers to the supplementary for a complete set of visual results.", "description": "This figure compares DiffusionPDE to other state-of-the-art methods for solving PDEs with sparse observations.  It shows the results of forward and inverse problems for the Navier-Stokes and Burgers' equations, highlighting DiffusionPDE's superior performance, particularly in scenarios with highly limited data (e.g., only 5 sensors for the Burgers' equation).", "section": "4.4 Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_19_1.jpg", "caption": "Figure 1: We propose DiffusionPDE, a generative PDE solver under partial observations. Given a family of PDE with coefficient (initial state) a and solution (final state) u, we train the diffusion model on the joint distribution of a and u. During inference, we gradually denoise a Gaussian noise, guided by sparse observation and known PDE function, to recover the full prediction of both a and u that align well with the sparse observations and the given equation.", "description": "This figure illustrates the overall architecture of DiffusionPDE, a generative model for solving partial differential equations (PDEs) when only partial observations are available.  The model is trained on the joint distribution of PDE coefficients (initial state) and their corresponding solutions (final state).  During inference, the model takes noisy data as input and iteratively denoises it, guided by both sparse observations of the solution or coefficient and the known PDE constraints.  The output is a full reconstruction of both the coefficient and solution spaces, consistent with both the observations and the PDE.", "section": "1 Introduction"}, {"figure_path": "z0I2SbjN0R/figures/figures_20_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient \\(a\\) or the solution \\(u\\) to recover both of them, using one trained network. Here, we show the recovered \\(a\\) and \\(u\\) of the Darcy's eqaution given sparse observations on \\(a\\), \\(u\\), or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure shows that DiffusionPDE can handle sparse observations of either the coefficient or the solution to recover both using a single trained network.  It demonstrates the results of using DiffusionPDE to solve Darcy's equation with sparse observations of the coefficient, solution, or both. The results are compared to the ground truth, and the low error rates demonstrate the effectiveness of DiffusionPDE.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_21_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to recover both the coefficients (a) and solutions (u) of a partial differential equation (PDE), specifically Darcy's equation, using sparse observations. It showcases three scenarios: sparse observations on coefficients only, sparse observations on solutions only, and sparse observations on both. In each scenario, DiffusionPDE successfully recovers both a and u, which are visually compared to the ground truth, indicating the model's accuracy even with limited data.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_22_1.jpg", "caption": "Figure 1: We propose DiffusionPDE, a generative PDE solver under partial observations. Given a family of PDE with coefficient (initial state) a and solution (final state) u, we train the diffusion model on the joint distribution of a and u. During inference, we gradually denoise a Gaussian noise, guided by sparse observation and known PDE function, to recover the full prediction of both a and u that align well with the sparse observations and the given equation.", "description": "This figure illustrates the architecture of DiffusionPDE, a generative model for solving partial differential equations (PDEs) with only partial observations of the solution and/or coefficients.  The model is trained on the joint distribution of the PDE coefficients (initial state) and the corresponding solutions (final state). During inference, the model takes as input a noisy version of the solution and/or coefficients and iteratively denoises it, guided by sparse observations and the known PDE, to recover the complete solution and coefficients.", "section": "1 Introduction"}, {"figure_path": "z0I2SbjN0R/figures/figures_22_2.jpg", "caption": "Figure 16: Relative errors of recovered Darcy Flow solutions with sparse noisy observation.", "description": "This figure demonstrates the robustness of DiffusionPDE against noisy observations. It shows the relative error of recovered Darcy Flow solutions when different levels of Gaussian noise (0%, 1%, 3%, 5%, 10%, and 15%) are added to the sparse observations.  The results indicate that DiffusionPDE maintains relatively low error rates even with a significant amount of noise.", "section": "K Robustness of DiffusionPDE"}, {"figure_path": "z0I2SbjN0R/figures/figures_23_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to handle sparse observations.  It shows three scenarios: sparse observations of only the coefficient (a), only the solution (u), and both a and u.  In each scenario, DiffusionPDE successfully reconstructs both the coefficient and the solution of the Darcy equation, showcasing its effectiveness even with highly incomplete data.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_23_2.jpg", "caption": "Figure 6: We compare the performance of DiffusionPDE and Diffusion with CFG for the unbounded Navier-Stokes equation, and visualize the error. With 500 observation points, DiffusionPDE demonstrates superior accuracy, achieving lower errors in both forward and inverse problem-solving.", "description": "This figure compares the performance of the proposed DiffusionPDE method and a standard diffusion model using classifier-free guidance (CFG) on the unbounded Navier-Stokes equation.  The experiment uses 500 sparse observations.  Both forward (predicting the final state from the initial state) and inverse (predicting the initial state from the final state) problems are evaluated.  The figure visually shows the ground truth, DiffusionPDE results, CFG results, and the relative errors of each.  DiffusionPDE shows significantly lower errors in both forward and inverse settings.", "section": "Main Evaluation Results"}, {"figure_path": "z0I2SbjN0R/figures/figures_23_3.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient \\(a\\) or the solution \\(u\\) to recover both of them, using one trained network. Here, we show the recovered \\(a\\) and \\(u\\) of the Darcy's eqaution given sparse observations on \\(a\\), \\(u\\), or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to handle sparse observations in solving partial differential equations (PDEs).  It shows results for the Darcy equation, where only a small percentage (1-3%) of the total data is available as observations, either for the coefficient (\\(a\\)) or the solution (\\(u\\)) or both. DiffusionPDE successfully recovers the full coefficient field and solution with high accuracy by using one trained network and sparse observations.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_24_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy's eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to handle sparse observations.  It shows the recovered coefficients and solutions for Darcy's equation when only sparse observations of either the coefficients, solutions, or both are available.  The results are compared to the ground truth, highlighting the accuracy of DiffusionPDE even with limited data.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_24_2.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy\u2019s eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates the ability of DiffusionPDE to handle sparse observations in both forward and inverse problems.  It shows the results of using DiffusionPDE to solve the Darcy equation, given sparse observations of the coefficient (a), solution (u), or both. The recovered coefficients and solutions are compared to the ground truth, showcasing DiffusionPDE's ability to accurately recover the PDE under partial observations.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_25_1.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient a or the solution u to recover both of them, using one trained network. Here, we show the recovered a and u of the Darcy\u2019s eqaution given sparse observations on a, u, or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure demonstrates DiffusionPDE's ability to handle sparse observations in both forward and inverse PDE solving problems. It shows that DiffusionPDE can recover both the coefficient and solution of the Darcy equation accurately even when only a small percentage of observations are available for either the coefficient or the solution, or both. The results highlight the versatility of DiffusionPDE compared to traditional methods that typically require full observations.", "section": "4 Experiments"}, {"figure_path": "z0I2SbjN0R/figures/figures_25_2.jpg", "caption": "Figure 2: Different from forward and inverse PDE solvers, DiffusionPDE can take sparse observations on either the coefficient \\(a\\) or the solution \\(u\\) to recover both of them, using one trained network. Here, we show the recovered \\(a\\) and \\(u\\) of the Darcy's eqaution given sparse observations on \\(a\\), \\(u\\), or both. Compared with the ground truth, we see that our method successfully recovers the PDE in all cases.", "description": "This figure shows the results of applying DiffusionPDE to solve the Darcy equation under three different scenarios of partial observation: sparse observation of coefficient (a), sparse observation of solution (u), and sparse observation of both (a and u).  The figure visually compares the recovered coefficients and solutions obtained by DiffusionPDE with the ground truth for each scenario, demonstrating that DiffusionPDE accurately recovers the solution even with limited observations.", "section": "4 Experiments"}]