[{"type": "text", "text": "Local Curvature Smoothing with Stein\u2019s Identity for Efficient Score Matching ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Genki Osada\u2217 LY Corporation, Japan ", "page_idx": 0}, {"type": "text", "text": "Makoto Shing Sakana AI, Japan ", "page_idx": 0}, {"type": "text", "text": "Takashi Nishide University of Tsukuba, Japan ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "The training of score-based diffusion models (SDMs) is based on score matching. The challenge of score matching is that it includes a computationally expensive Jacobian trace. While several methods have been proposed to avoid this computation, each has drawbacks, such as instability during training and approximating the learning as learning a denoising vector field rather than a true score. We propose a novel score matching variant, local curvature smoothing with Stein\u2019s identity (LCSS). The LCSS bypasses the Jacobian trace by applying Stein\u2019s identity, enabling regularization effectiveness and efficient computation. We show that LCSS surpasses existing methods in sample generation performance and matches the performance of denoising score matching, widely adopted by most SDMs, in evaluations such as FID, Inception score, and bits per dimension. Furthermore, we show that LCSS enables realistic image generation even at a high resolution of $1024\\times1024$ . ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Score-based diffusion models (SDMs) [35, 30, 7, 31, 12] have emerged as powerful generative models that have achieved remarkable results in various fields [27, 26, 24]. While likelihood-based models learn the density of observed (i.e., training) data as points [25, 5, 28, 38, 37, 14], SDMs learn the gradient of logarithm density called the score \u2014 a vector field pointing toward increasing data density. The sample generation process of SDMs has two steps: 1) learning the score for a given dataset and 2) generating samples by guiding a random noise vector toward high-density regions based on the learned score using stochastic differential equation (SDE). ", "page_idx": 0}, {"type": "text", "text": "Score matching used for learning the score includes a computationally expensive Jacobian trace, making it challenging to apply to high-dimensional data. While some methods have been proposed to avoid computing the Jacobian trace, each has its drawbacks. Denoising score matching (DSM) [39], ubiquitously employed in SDMs, learns not the ground truth score but its approximation and imposes constraints on the design of SDE. On the other hand, sliced score matching (SSM) [33] and its variant, finite-difference SSM (FD-SSM) [23], suffer from high variance due to using random projection. ", "page_idx": 0}, {"type": "text", "text": "In this paper, we propose a novel score matching variant, local curvature smoothing with Stein\u2019s identity (LCSS). The key idea of LCSS is to use Stein\u2019s identity to bypass the expensive computation of Jacobian trace. To apply Stein\u2019s identity, we take the expectation over a Gaussian distribution centered on input data points, which is indeed equivalent to the regularization with local curvature smoothing. Exploiting this equivalence, we propose a score matching method that offers both regularization benefits and faster computation. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "We first establish a method as an independent score matching technique, then propose a timeconditional version for its application to SDMs. We present the experimental results using synthetic data and several popular datasets. Our proposed method is highly efficient compared to existing score matching methods and enables the generation of high-resolution images with a size of 1024. We show that LCSS outperforms SSM, FD-SSM, and DSM in the quality of generated images and is comparable to DSM in the qualitative evaluation of the FID score, Inception score, and the negative likelihood measured in bits per dimension. While DSM requires the drift and diffusion coefficients of an SDE to be affine, our LCSS has no such constraint, allowing for a more flexible SDE design (Sec. 2.4). Hence, this paper contributes to opening up new directions in SDMs\u2019 research based on more flexible SDEs. ", "page_idx": 1}, {"type": "text", "text": "Related works. Liu et al. [20] proposed a method for directly estimating scores using Stein\u2019s identity without using score matching. Shi et al. [29] further enhanced that method by applying spectral decomposition to the function in Stein\u2019s identity. However, Song et al. [33] reported that these methods underperform compared to SSM. In our approach, we use Stein\u2019s identity specifically to avoid computing the Jacobian trace in score matching. The regularization effect attained by adding noise to data has been recognized for a long time [3], which our method utilizes. The relationship between noise-adding regularization and curvature smoothing in the least square function is elucidated in Bishop [2]. The previous studies of score matching variants are described in the next section. In efforts to remove the affine constraint of SDE in SDMs, Kim et al. [13] proposed running SDE in the latent space of normalizing flows. This constraint stems from using DSM for score matching, and we propose a score matching method free from such constraint. ", "page_idx": 1}, {"type": "text", "text": "2 Preliminary ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "2.1 Score-based diffusion models ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Score-based diffusion models (SDMs) [35, 31] define an stochastic differential equation (SDE) for $\\mathbf{x}_{t}\\in\\mathbb{R}^{d}$ in continuous time $t\\in[0,T]$ as ", "page_idx": 1}, {"type": "equation", "text": "$$\nd\\mathbf{x}_{t}=\\mathbf{f}(\\mathbf{x}_{t},t)d t+g(t)d\\mathbf{w}_{t},\n$$", "text_format": "latex", "page_idx": 1}, {"type": "text", "text": "where $\\mathbf{f}(\\cdot,t):\\mathbb{R}^{d}\\to\\mathbb{R}^{d}$ is the drift coefficient, $g(t)\\in\\mathbb{R}$ is the diffusion coefficient, and ${\\bf w}_{t}$ denotes a standard Wiener process. Eq. (1), known as the forward process, has a corresponding reverse ", "page_idx": 1}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/03917ae96ff22dca27e76c7ba36c3ed1ee2c13d53eaa2d93c1e31cae2add2170.jpg", "img_caption": [], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "Figure 1: Samples generated from models trained on CelebA-HQ $\\phantom{0}{.1024}\\times1024)$ using our proposed score matching method, LCSS. The rightmost images in each row are generated by $\\scriptstyle\\mathrm{DDPM++}$ with subVP SDE, while the rest are by $\\mathrm{NCSN++}$ with VE SDE. ", "page_idx": 1}, {"type": "text", "text": "process from time $T$ to 0 [1]: ", "page_idx": 2}, {"type": "equation", "text": "$$\nd\\mathbf{x}_{t}=\\left[\\mathbf{f}(\\mathbf{x}_{t},t)-g(t)^{2}\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}_{t})\\right]d t+g(t)d\\bar{\\mathbf{w}}_{t}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\bar{\\bf w}_{t}$ is a standard Wiener process in reverse-time and $p_{t}(\\mathbf{x}_{t})$ denotes the ground truth marginal density of $\\mathbf{x}_{t}$ following the forward process. Samples from a dataset are represented as $\\mathbf{x}_{0}\\sim p_{0}$ , while initial vectors for sample generation with Eq. (2) are $\\mathbf{x}_{T}\\sim p_{T}$ . In Eq. (2), the only unknown term is $\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}_{t})$ , referred to as the score of density $p_{t}(\\mathbf{x}_{t})$ . To estimate $\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}_{t})$ , SDMs train a score network $\\mathbf{s}_{\\theta}$ parametrized by $\\theta$ by score matching. ", "page_idx": 2}, {"type": "text", "text": "2.2 Score matching ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "A score network $\\mathbf{s}_{\\theta}$ that estimates the score of the ground truth density is trained through score matching [9]. Score matching, a technique independent of SDMs and SDE, has no concept of time. So, as long as our discussion is focused on score matching, we use the notation of $\\mathbf{x}$ and $p$ , without the subscript of $t$ , and treat a score network without conditioning on $t$ , i.e., denote it as $\\mathbf{s}_{\\theta}(\\mathbf{x})$ instead of $\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t)$ . Score matching is defined as the minimization of $\\begin{array}{r}{\\mathcal{I}(\\theta)\\,:=\\,\\frac{1}{2}\\,\\mathbb{E}_{\\mathbf{x}\\sim p}\\left\\|\\mathbf{s}_{\\theta}(\\mathbf{x})-\\nabla_{\\mathbf{x}}\\log p(\\mathbf{x})\\right\\|_{2}^{2}}\\end{array}$ . Calculating ${\\mathcal{I}}(\\theta)$ is generally impractical since it requires knowing the ground truth $\\nabla_{\\mathbf{x}}\\log{p(\\mathbf{x})}$ , but Hyv\u00e4rinen [9] has shown that ${\\mathcal{I}}(\\theta)$ is equivalent to the following $\\mathcal{I}_{\\mathrm{SM}}(\\theta)$ up to constant: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{SM}}(\\theta):=\\mathbb{E}_{\\mathbf{x}\\sim p}\\left[\\mathcal{J}_{\\mathrm{SM}}^{s}(\\theta,\\mathbf{x})\\right]\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\mathcal{I}_{\\mathrm{SM}}^{s}(\\theta,\\mathbf{x})$ is the version of $\\mathcal{I}_{\\mathrm{SM}}(\\theta)$ for a single data point $\\mathbf{x}$ , defined as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{SM}}^{s}(\\theta,\\mathbf{x}):=\\mathrm{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}))+\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\mathbf{x})\\right\\rVert_{2}^{2}.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Score matching in SDMs and its problem. SDMs train a time-conditional score function $\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t)$ using score matching. The loss function of SDMs is defined as the integral of $\\mathcal{I}_{\\mathrm{SM}}(\\theta)$ over time $t\\in[0,T]$ as ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{SM}}(\\theta):=\\int_{0}^{T}\\lambda(t)\\,\\mathbb{E}_{\\mathbf{x}_{t}\\sim p_{t}}\\,\\mathbb{E}_{\\mathbf{x}_{0}\\sim p_{0}}\\left[\\mathrm{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t))+\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t)\\right\\rVert_{2}^{2}\\right]d t.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The weight function $\\lambda(t)$ is determined by the form of the SDE, and $\\lambda(t)$ used for typical SDEs can be found in Table 1 in [34]. The $p_{t}$ is obtained from the SDE in Eq. (1), with its mean dependent on $\\mathbf{x}_{\\mathrm{0}}$ , and its specific form in typical SDEs is given as Eq. (29) in Song et al. [35]. The problem is that since $\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t)$ has the same dimension as input $\\mathbf{x}_{t}$ , computing its Jacobian trace, $\\operatorname{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}_{t},t))$ , is costly. It renders training with score matching impractical in high-dimensional data. ", "page_idx": 2}, {"type": "text", "text": "2.3 Existing score matching variants ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "To avoid the computation of the Jacobian trace, the following scalable variants of $\\mathcal{I}_{\\mathrm{SM}}$ have been developed. While any score matching method can be used to train $\\mathbf{s}_{\\theta}$ , SDMs predominantly employ DSM due to its empirical performance [31, 35, 12]. ", "page_idx": 2}, {"type": "text", "text": "Sliced score matching (SSM) and finite-difference sliced score matching (FD-SSM). SSM [33] approximates $\\mathrm{Tr}\\big(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})\\big)$ with Hutchinson\u2019s trick [8] and minimizes the following: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\mathcal{T}_{\\mathrm{SSM}}(\\theta):=\\mathbb{E}_{\\mathbf{v}\\sim p_{\\mathbf{v}}}\\mathbb{E}_{\\mathbf{x}\\sim p}\\left[\\frac{1}{\\epsilon^{2}}\\mathbf{v}^{T}\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})\\mathbf{v}+\\frac{1}{2d}\\left\\|\\mathbf{s}_{\\theta}(\\mathbf{x})\\right\\|_{2}^{2}\\right],\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\epsilon$ is a small scaler value and $\\mathbf{v}\\sim p_{\\mathbf{v}}$ is a $d$ -dimensional random vector such that $\\mathbb{E}_{\\mathbf{v}\\sim p_{\\mathbf{v}}}[\\mathbf{v}\\mathbf{v}^{T}]=$ $\\frac{\\epsilon^{2}I}{d\\,.}$ . To enhance the efficiency of SSM further, FD-SSM [23] adopts finite difference to Eq. (6). The objective function is ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r l r}&{}&{\\mathcal{I}_{\\mathrm{FD-SSM}}(\\theta):=\\mathbb{E}_{\\mathbf{v}\\sim p_{\\mathbf{v}}}\\mathbb{E}_{\\mathbf{x}\\sim p}\\left[\\frac{1}{2\\epsilon^{2}}\\left(\\mathbf{v}^{T}\\mathbf{s}_{\\theta}(\\mathbf{x}+\\mathbf{v})-\\mathbf{v}^{T}\\mathbf{s}_{\\theta}(\\mathbf{x}-\\mathbf{v})\\right)\\right.}\\\\ &{}&{\\left.~~~~~~~~~~~~~~~+\\frac{1}{8d}\\left\\|\\mathbf{s}_{\\theta}(\\mathbf{x}+\\mathbf{v})+\\mathbf{s}_{\\theta}(\\mathbf{x}-\\mathbf{v})\\right\\|_{2}^{2}\\right].}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "The drawback of these two methods is the high variance induced by random projection with v. In particular, the error between the true trace of matrix $A$ , $\\operatorname{Tr}(A)$ , and the estimate by Hutchinson\u2019s trick, $\\tilde{T}_{A}$ , is $\\begin{array}{r}{|\\operatorname{Tr}(A)-\\tilde{T}_{A}|\\leq\\frac{1}{\\sqrt{M}}\\left\\|A\\right\\|_{F}}\\end{array}$ where $\\|\\cdot\\|_{F}$ is the Frobenius norm and $M$ is the sampling times from $p_{\\mathbf{v}}$ [22]. Typically, $M=1$ setting is employed in these methods, potentially making the error magnitude non-negligible and causing instability in training process, as we see in Sec 4.2.3. ", "page_idx": 3}, {"type": "text", "text": "Denoising score matching (DSM). DSM [39] circumvents the computation of $\\mathrm{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}))$ by perturbing $\\mathbf{x}$ with a Gaussian noise distribution $q_{\\sigma}(\\tilde{\\mathbf{x}}|\\mathbf{x})$ with noise scale $\\sigma$ and then estimating the score of the perturbed distribution $\\begin{array}{r}{q_{\\sigma}(\\tilde{\\mathbf{x}}):=\\int q_{\\sigma}(\\tilde{\\mathbf{x}}|\\dot{\\mathbf{x}})\\dot{p}(\\mathbf{x})d\\mathbf{x}}\\end{array}$ . The DSM minimizes ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{J}_{\\mathrm{DSM}}(\\theta):=\\mathbb{E}_{\\tilde{\\mathbf{x}}\\sim q_{\\sigma}(\\tilde{\\mathbf{x}}|\\mathbf{x})}\\mathbb{E}_{\\mathbf{x}\\sim p}\\left[\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\tilde{\\mathbf{x}})-\\nabla_{\\mathbf{x}}\\log q_{\\sigma}(\\tilde{\\mathbf{x}}|\\mathbf{x})\\right\\rVert_{2}^{2}\\right].\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "In SDMs, the following time-conditional version is used: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{DSM}}(\\theta,t):=\\mathbb{E}_{\\tilde{\\mathbf{x}}_{t}\\sim q_{\\sigma_{t}}(\\tilde{\\mathbf{x}}|\\mathbf{x}_{0})}\\mathbb{E}_{\\mathbf{x}_{0}\\sim p_{0}}\\left[\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\tilde{\\mathbf{x}}_{t},t)-\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}(\\tilde{\\mathbf{x}}_{t}|\\mathbf{x}_{0})\\right\\rVert_{2}^{2}\\right],\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "where $\\sigma_{t}$ is designed to increase as $t$ progresses from 0 to $T$ . Almost all SDMs use DSM for score matching because it performs faster and is more stable than SSM and FD-SSM. However, DSM has three drawbacks. 1) Approximation: in DSM, $\\mathbf{s}_{\\theta}$ learns $\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}\\big(\\tilde{\\mathbf{x}}_{t}\\big|\\mathbf{x}_{0}\\big)$ rather than the ground true score, $\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}_{t})$ . 2) Constraining the design of SDE: DSM constrains SDE coefficients to be affine. We will describe this in Sec. 2.4. ", "page_idx": 3}, {"type": "text", "text": "3) The dilemma regarding $\\sigma_{t}$ : Only when $\\sigma_{t}\\,\\rightarrow\\,0$ does $\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}\\big(\\tilde{\\mathbf{x}}_{t}\\big|\\mathbf{x}_{0}\\big)$ match $\\nabla_{\\mathbf{x}}\\log p_{t}(\\mathbf{x}_{t})$ However, as $\\sigma\\rightarrow0$ , both the numerator and denominator of $\\frac{\\mathbf{x}_{0}-\\tilde{\\mathbf{x}}_{t}}{\\sigma_{t}^{2}}$ approach 0, leading to potential numerical instability [19]. ", "page_idx": 3}, {"type": "text", "text": "2.4 DSM restricts SDE to affine ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The design of SDEs directly influences the performance of SDMs, as demonstrated in previous studies [12]. The benefits of non-linear SDE, particularly highlighted in [13], enable more accurate alignment of scores with the ground-truth data distributions than affine SDE and thus enhance the quality of generated samples. (Fig. 2 in [13] illustrates this.) However, unless specific modifications are made as proposed in these studies, the general SDEs [35] used in almost all existing SDMs must be affine. This constraint comes from the fact that the SDMs, consciously or unconsciously, select DSM for their score matching methods. The loss function of DSM requires $\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}\\big(\\tilde{\\mathbf{x}}_{t}\\big|\\mathbf{x}_{0}\\big)$ as Eq. (9). Thus, to compute Eq. (9) at every training iteration, $\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}\\big(\\tilde{\\mathbf{x}}_{t}\\big|\\mathbf{x}_{0}\\big)$ needs to be in closed form. DSM models $q_{\\sigma_{t}}(\\tilde{\\mathbf{x}}_{t}|\\mathbf{x}_{0})$ as a Gaussian distribution, for which this requirement is satisfied as $\\begin{array}{r}{\\nabla_{\\mathbf{x}}\\log q_{\\sigma_{t}}(\\tilde{\\mathbf{x}}_{t}|\\mathbf{x}_{0})=\\frac{\\mathbf{x}_{0}-\\tilde{\\mathbf{x}}_{t}}{\\sigma_{t}^{2}}}\\end{array}$ . However, this Gaussian modeling comes at the cost of imposing a constraint on the SDE design: the drift and diffusion terms of SDE, i.e., $\\mathbf{f}(\\mathbf{x}_{t},t)$ and $g(t)$ in Eq. (1), need to be affine. The existing SDMs are DSM-based, so the SDEs used in these SDMs, including the VE SDE and subVP SDE we use in our experiments, are designed to adhere to this constraint. The details of the same discussion and the specific form of the Gaussian distribution $q_{\\sigma_{t}}(\\tilde{\\mathbf{x}}_{t}|\\mathbf{x}_{0})$ for the typical SDEs can be found in Sec. 3.3 in Song et al. [35]. Unlike DSM, SSM and FD-SSM do not have this limitation, allowing for more flexible SDE design and thus removing the requirement to limit the forward process\u2019s convergence destination to Gaussian distributions. Unfortunately, as we will see later, SSM and FD-SSM cannot handle high-dimensional data due to the high-variance they cause. Our proposed method uniquely satisfies both the flexible design of SDEs and compatibility with high-dimensional data. ", "page_idx": 3}, {"type": "text", "text": "3 Our Method ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "We propose a novel score matching variant that avoids the expensive computation of the Jacobian trace. The crux of our method is using Stein\u2019s identity to bypass Jacobian computation. Our approach comprises three steps: 1) introducing local curvature smoothing regularization into score matching (Definition 1), 2) treating the regularization of 1) as taking an expectation over a Gaussian distribution (Lemma 1), and 3) applying Stein\u2019s identity (Corollary 2). While introducing regularization may appear to cause extra computational costs, it enables faster computation by the use of Stein\u2019s identity trick. We begin by discussing our method separately from SDMs, without involving the time variable $t$ , and then explain its incorporation into SDMs at the end of this section. ", "page_idx": 3}, {"type": "text", "text": "3.1 Score matching with Local Curvature Smoothing with Stein\u2019s identity (LCSS) ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "We first introduce some lemmas and corollaries that constitute our method. ", "page_idx": 4}, {"type": "text", "text": "Definition 1 (Score matching with local curvature smoothing [15]). Regularizing the score matching objective $\\mathcal{I}_{S M}^{s}$ at a data point $\\mathbf{x}\\in\\mathbb{R}^{d}$ with local curvature smoothing (LCS) is defined as: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{J}_{L C S}^{s}(\\theta,\\mathbf{x},\\sigma):=\\mathcal{J}_{S M}^{s}(\\theta,\\mathbf{x})+\\frac{1}{2}\\sigma^{2}\\left\\lVert\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})\\right\\rVert_{F}^{2}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Given $\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})$ approximating the Hessian of $\\log p(\\mathbf{x})$ , minimizing the regularization term $\\begin{array}{r}{\\frac{1}{2}\\sigma^{2}\\left\\lVert\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})\\right\\rVert_{F}^{2}}\\end{array}$ acts as a local curvature smoothing where the square of the curvature of the surface of the log-density at $\\mathbf{x}$ are penalized. Curvature smoothing is one of the commonly employed regularizations in machine learning [3]. ", "page_idx": 4}, {"type": "text", "text": "Lemma 1 (Kingma and LeCun [15]). Score matching with local curvature smoothing (Definition 1) is equivalent to the expectation of $\\mathcal{I}_{S M}^{s}(\\theta,\\mathbf{x})$ over a Gaussian distribution centered at x, i.e., $\\mathbf{x}^{\\prime}\\sim$ $\\mathcal{N}(\\hat{\\mathbf{x}},\\sigma^{2}\\mathbb{I}_{d})$ : ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathcal{I}_{L C S}^{s}(\\boldsymbol{\\theta},\\mathbf{x},\\sigma)=\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\mathcal{I}_{S M}^{s}(\\boldsymbol{\\theta},\\mathbf{x}^{\\prime})\\right]+\\mathcal{O}(\\epsilon^{2}),\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\epsilon:=\\|\\mathbf{x}^{\\prime}-\\mathbf{x}\\|_{2}$ . ", "page_idx": 4}, {"type": "text", "text": "Lemma 1 states that taking the expectation of score matching objective with respect to a Gaussian distribution centered around $\\mathbf{x}$ yields an effect equivalent to a curvature smoothing regularization. ", "page_idx": 4}, {"type": "text", "text": "Definition 2 (Stein class [36]). Assume that $Q(\\mathbf{z})$ is a continuous differentiable probability density supported on $\\mathcal{Z}\\subset\\mathbb{R}^{d}$ . Then, a function $f:\\mathcal{Z}\\to\\mathbb{R}$ is the Stein class of $Q$ if $f$ satisfies ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\int_{\\mathbf{z}\\in\\mathcal{Z}}\\nabla_{\\mathbf{z}}(f(\\mathbf{z})Q(\\mathbf{z}))d\\mathbf{z}=0.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The condition for Eq. (12) to hold is ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\operatorname*{lim}_{\\|\\mathbf{z}\\|\\rightarrow\\infty}f(\\mathbf{z})Q(\\mathbf{z})=0.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Lemma 2 (Stein\u2019s identity, Liu et al. [20], Gorham and Mackey [6]). Let $\\mathbf{h}:\\mathcal{Z}\\rightarrow\\mathbb{R}^{d^{\\prime}}$ be a smooth (i.e., continuous and differentiable) vector valued function $\\mathbf{h}(\\mathbf{z})\\overset{.}{=}[h_{1}(\\mathbf{z}),h_{2}(\\mathbf{z}),\\ldots h_{d^{\\prime}}(\\mathbf{z})]^{T}$ . Then , $i f\\,h_{i}({\\bf z})\\forall i=1,\\ldots,d^{\\prime}$ is the Stein class of a smooth density $Q(\\mathbf{z})$ , the following identity holds: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{z}\\sim Q}\\left[\\mathbf{h}(\\mathbf{z})\\nabla_{\\mathbf{z}}\\log Q(\\mathbf{z})^{T}+\\nabla_{\\mathbf{z}}\\mathbf{h}(\\mathbf{z})\\right]=\\mathbf{0}_{d^{\\prime},d}.\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In Eq. (14), $\\nabla_{\\mathbf{z}}\\log Q(\\mathbf{z})^{T}$ is a $1\\times d$ matrix, $\\nabla_{\\mathbf{z}}\\mathbf{h}(\\mathbf{z})$ is a $d^{\\prime}\\times d$ matrix, and $\\mathbf{0}_{d^{\\prime},d}$ is a $d^{\\prime}\\times d$ zero matrix. ", "page_idx": 4}, {"type": "text", "text": "Corollary 1 (Li and Turner [18]). When $Q(\\mathbf{z})=\\mathcal{N}(\\mathbf{z};\\mu,\\sigma^{2}\\mathbb{I}_{d})$ , we have ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbb{E}_{{\\mathbf{z}}\\sim Q}\\left[h_{i}({\\mathbf{z}})\\frac{z_{i}-\\mu_{i}}{\\sigma^{2}}\\right]=\\mathbb{E}_{{\\mathbf{z}}\\sim Q}\\left[\\nabla_{\\mathbf{z}}h_{i}({\\mathbf{z}})\\right].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Eq. (15) holds for the $i$ -th element of the vector $\\mathbf{h}$ . The condition Eq. (13) holds for Gaussian distribution $Q$ , since $Q(\\mathbf{z})\\rightarrow0$ as $\\|\\mathbf{z}\\|\\rightarrow\\infty$ . Then, $h_{i}(\\mathbf{z})\\forall i=1,\\ldots,d^{\\prime}$ are the Stein class of $Q$ , and thus Lemma 2 is valid for a Gaussian distribution $Q$ . As we also know $\\begin{array}{r}{\\nabla_{\\mathbf{z}}\\log Q(\\mathbf{z})=-\\frac{1}{\\sigma^{2}}(\\mathbf{z}-\\pmb{\\mu})}\\end{array}$ , by substituting it into Lemma 2, we obtain Corollary 1. ", "page_idx": 4}, {"type": "text", "text": "Corollary 2 (Bypassing Jacobian trace computation). Let $\\mathbf{x}\\in\\mathbb{R}^{d\\times1}$ , $\\mathbf{s}_{\\theta}(\\mathbf{x})\\in\\mathbb{R}^{d\\times1}$ , and $Q(\\mathbf{x}^{\\prime})=$ $\\mathcal{N}(\\mathbf{x}^{\\prime};\\mathbf{x},\\bar{\\sigma}^{2}\\mathbb{I}_{d})$ . With Corollary $^{\\,l}$ and a few assumptions, we have the following: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\mathrm{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime}))\\right]=\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime})^{T}\\cdot\\frac{\\mathbf{x}^{\\prime}-\\mathbf{x}}{\\sigma^{2}}\\right].\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "The $\\mathbf{s}_{\\theta}$ , which represents a score network in our context, corresponds to $\\mathbf{h}$ in Lemma 2 and Corollary 1. The derivation of Eq. (16) is presented in Appendix A, in which we assume the interchangeability between the expectation and summation regarding $\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime})$ . ", "page_idx": 4}, {"type": "text", "text": "Objective function of LCSS. We propose a variant of score matching method, local curvature smoothing with Stein\u2019s identity (LCSS). The development of the objective function of LCSS, $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ , begins with the curvature smoothing regularization of Eq. (10), followed by the application of Lemma 1 and Corollary 2. Since $\\mathcal{I}_{\\mathrm{LCS}}^{s}(\\theta,\\mathbf{x},\\sigma)$ in Eq. (10) involves computationally expensive $\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})$ , alongside the original challenge of $\\mathrm{Tr}\\big(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x})\\big)$ in $\\mathcal{I}_{\\mathrm{SM}}^{s}$ , training with $\\mathcal{I}_{\\mathrm{LCS}}^{s}$ is impractical for high-dimensional data. However, by inserting the transformation of Lemma 1, it enables the application of Corollary 2 to $\\mathcal{I}_{\\mathrm{LCS}}^{s}$ . By substituting Eq. (4) into Eq. (11) and ignoring ${\\mathcal{O}}(\\epsilon^{2})$ , we have ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{LCS}}^{s}(\\theta,\\mathbf{x},\\sigma)=\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{4})}\\left[\\mathrm{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime}))+\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime})\\right\\rVert_{2}^{2}\\right],\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "and by applying Eq. (16) to the first term, we obtain $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{LCSS}}^{s}(\\boldsymbol{\\theta},\\mathbf{x},\\boldsymbol{\\sigma}):=\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\boldsymbol{\\sigma}^{2}\\mathbb{I}_{\\mathrm{d}})}\\left[\\mathbf{s}_{\\boldsymbol{\\theta}}(\\mathbf{x}^{\\prime})^{T}\\cdot\\frac{\\mathbf{x}^{\\prime}-\\mathbf{x}}{\\sigma^{2}}+\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\boldsymbol{\\theta}}(\\mathbf{x}^{\\prime})\\right\\rVert_{2}^{2}\\right].\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "In $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ , $\\operatorname{Tr}(\\nabla_{\\mathbf{x}}\\mathbf{s}_{\\theta}(\\mathbf{x}))$ is replaced with the inner product, $\\mathbf{s}_{\\theta}(\\mathbf{x}^{\\prime})^{T}\\,\\cdot\\,\\frac{\\mathbf{x}^{\\prime}-\\mathbf{x}}{\\sigma^{2}}$ , which is computed efficiently, thereby bypassing the issue of high computational cost. ", "page_idx": 5}, {"type": "text", "text": "Comparing LCSS with existing score matching methods. Unlike SSM and FD-SSM, LCSS does not use random projection, eliminating the high variance issue. While DSM learns the approximation of ground truth score $\\nabla_{\\mathbf{x}}\\log q_{\\sigma}(\\tilde{\\mathbf{x}}|\\mathbf{x})$ , LCSS learns the ground truth score $\\nabla_{\\mathbf{x}}\\log{p(\\mathbf{x})}$ . Furthermore, unlike DSM, $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ does not require $\\nabla_{\\mathbf{x}}\\log q_{\\sigma}(\\tilde{\\mathbf{x}}|\\mathbf{x})$ , thus eliminating the need for affine restrictions on the SDE coefficients. The original score matching, i.e., minimizing $\\mathcal{I}_{\\mathrm{SM}}^{s}$ , involves the following two: (1) Increasing the first term $\\mathrm{Tr}(\\nabla_{\\mathbf x}\\mathbf s_{\\theta}(\\mathbf x))\\approx\\nabla_{\\mathbf x}\\cdot\\nabla_{\\mathbf x}\\log p(\\mathbf x)$ , the divergence of the score, in the negative direction promotes $\\mathbf{s}_{\\theta}$ to learn the vector field flowing into points where $\\mathbf{x}$ exists. (2) Minimizing the second term $\\frac{1}{2}\\left\\|\\mathbf{s}_{\\theta}(\\mathbf{x})\\right\\|_{2}^{2}$ promotes $\\mathbf{s}_{\\theta}$ to learn that its length approaches 0 at points where $\\mathbf{x}$ exists. The LCSS also performs both (1) and (2), but instead of at a single point $\\mathbf{x}$ , it considers a Gaussian cloud centered around $\\mathbf{x}$ . By applying Stein\u2019s identity, LCSS bypasses the challenge of (1), thereby making score matching feasible even for high-dimensional data. ", "page_idx": 5}, {"type": "text", "text": "3.2 Score-based diffusion models with LCSS ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "We define time-conditional version of LCSS for training SDMs as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{I}_{\\mathrm{LCSS}}^{s}(\\theta,\\mathbf{x}_{0},t,\\sigma_{t}):=\\mathbb{E}_{\\mathbf{x}_{t}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x}_{0},\\sigma_{t}^{2}\\mathbb{I}_{\\mathrm{d}})}\\left[\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)^{T}\\cdot\\frac{\\mathbf{x}_{t}^{\\prime}-\\mathbf{x}_{0}}{\\sigma_{t}^{2}}+\\frac{1}{2}\\left\\|\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)\\right\\|_{2}^{2}\\right]\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "and formulate the loss function of SDMs based on LCSS as: ", "page_idx": 5}, {"type": "equation", "text": "$$\n\\mathcal{L}_{\\mathrm{LCSS}}(\\theta):=\\int_{0}^{T}\\lambda(t)\\,\\mathbb{E}_{{\\mathbf{x}_{0}}\\sim p_{0}}\\left[\\mathcal{J}_{\\mathrm{LCSS}}^{s}(\\theta,{\\mathbf{x}_{0}},t,\\sigma_{t})\\right]d t.\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "We replace $\\sigma$ in Eq. (18) with a time-varying $\\sigma_{t}$ . By making $\\sigma_{t}$ take on a wide range of values depending on $t$ , we aim to facilitate robust learning of score vectors even in low-density regions in $p_{0}$ , mirroring the original motivation of NCSN [31]. With Eq. (19), $\\mathbf{s}_{\\theta}$ learns a vector in the direction of $-(\\mathbf{x}_{t}^{\\prime}-\\mathbf{x}_{0})$ to minimize the inner product of the first term, weighted by $\\frac{1}{\\sigma_{t}^{2}}$ , while minimizing its $L_{2}$ norm, $\\|\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)\\|_{2}$ . Sampling $\\mathbf{x}_{t}^{\\prime}$ in the expectation in Eq. (19) only once yields satisfactory performance, as evidenced by our experimentation. ", "page_idx": 5}, {"type": "text", "text": "SDEs for LCSS-based SDMs can be designed flexibly without restricting the drift and diffusion coefficients to be affine. However, devising a new SDE is beyond the scope of this paper and is left for future work, and our experiments use existing SDEs designed for use with DSM: the Variance Exploding (VE) SDE and the sub Variance Preserving (subVP) SDE [35]. Taking advantage of the fact that $p_{t}$ is a Gaussian distribution in both SDEs, we employ the standard deviation of $p_{t}$ as the value ot $\\sigma_{t}$ in each SDE in our experiments. For example, for VE SDE, $\\sigma_{t}=g(t)$ . For both SDEs, $\\sigma_{t}$ increases as $t$ goes from 0 to $T$ , but the way it increases is different for each SDE. ", "page_idx": 5}, {"type": "text", "text": "Following Song and Ermon [31], we set $\\lambda(t)\\,=\\,g(t)^{2}$ . With this setting, $\\lambda(t)$ becomes $\\lambda(t)\\,=$ $g(t)^{2}\\,=\\,\\bar{\\sigma}_{t}^{2}$ , effectively cancelling out $\\sigma_{t}^{2}$ in the denominator of Eq. (19) and avoiding unstable situations where the denominator could become zero. For other SDE types (VP and sub VP), $\\lambda(t)$ is more elaborate but similarly cancels out $\\sigma_{t}^{2}$ in the denominator. For fairness, we note that, similarly, in training SDMs with DSM, applying the coefficient $\\lambda(t)=g(t)^{2}$ allows for the cancellation of $\\sigma_{t}^{2}$ in the denominator, thus circumventing the weakness of DSM. ", "page_idx": 5}, {"type": "text", "text": "4 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we demonstrate that our LCSS enables fast model training and high-quality image generation on several commonly used image datasets. ", "page_idx": 6}, {"type": "text", "text": "4.1 Setup", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We use five SDMs: NCSNv2 $[32]^{2}$ as a discrete-time model, $\\mathrm{NCSN++}$ and $\\scriptstyle\\mathrm{DDPM++}$ and their extensive version, $\\mathrm{NCSN++}$ deep and $\\scriptstyle\\mathrm{DDPM++}$ deep, as continuous-time models. Only for a synthetic dataset, Checkerboard, we use a multilayer perceptron (MLP) with publicly available code3 based on Song and Ermon [31]. In continuous-time models, we use VE SDE for $\\mathrm{NCSN++}$ and $\\mathrm{NCSN++}$ deep and subVP SDE for $\\scriptstyle\\mathrm{DDPM++}$ and $\\scriptstyle\\mathrm{DDPM++}$ deep as per Song et al. [35]. The same SDEs are applied to all the score matching methods we evaluate, including our LCSS. We use the official codes from the original papers, and the hyperparameters are kept as in the official code, unless stated otherwise. 4 For LCSS, we perform only one sampling iteration to calculate the expectation in $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ (Eq. (19)). We set $\\sigma_{t}=g(t)$ in each SDEs. All experiments are performed on a server with 128 GB RAM, 32 Intel Xeon, Silver 4316 CPUs, and eight NVIDIA A100 SXM GPUs. ", "page_idx": 6}, {"type": "text", "text": "4.2 Results ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We evaluate the proposed LCSS against existing score matching methods, SSM, FD-SSM, and DSM, in density estimation, training efficiency, and qualitative and quantitative sample generation evaluation. ", "page_idx": 6}, {"type": "text", "text": "4.2.1 Density estimation ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We first compare LCSS to SSM, FD-SSM, and DSM in score matching performance. We visualize estimated densities on Checkerboard dataset, whose density is multi-modal. The details of the experiments, including the training loss curve, are presented in Appendix B. Table 1 depicts the density distribution learned by the model. Compared to SSM and FD-SSM, LCSS demonstrates higher accuracy in density estimation with faster convergence and stability in loss reduction. DSM exhibits similar accuracy in density estimation and stability in loss reduction to LCSS. However, LCSS shows slightly better consistency in estimating high-density regions (bright-colored areas) and maintains stable loss. ", "page_idx": 6}, {"type": "text", "text": "4.2.2 Training efficiency ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We compare LCSS with the existing score matching methods for training efficiency. We measure the time taken for model training on Checkerboard and FFHQ dataset [11] resized to $256\\times256$ . Table 2 shows the average elapsed time over 100 epochs for Checkerboard and 1000 iterations for FFHQ, respectively. It shows that LCSS is the most efficient. ", "page_idx": 6}, {"type": "text", "text": "4.2.3 Sample quality ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "We show generated samples on CIFAR-10 using $\\mathrm{NCSN++}$ deep and $\\scriptstyle\\mathrm{DDPM++}$ deep trained with LCSS in Appendix C.1. In this subsection, we qualitatively compare the sample generation capability of LCSS with existing methods. ", "page_idx": 6}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/89a9b8f8077b2b6b9c30bdb0566d2f654f7f1b622b77e48fdbc30f78aa57bff9.jpg", "img_caption": ["Figure 2: Comparison of sample quality in the early stages of training. The model is NCSNv2 trained on CIFAR-10. The left three panels show generated samples at 5k steps training, while the right three show generated samples at $90\\mathrm{k}$ steps training. "], "img_footnote": [], "page_idx": 7}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/b04a87ecab66e5304209681f4d91384efd0a770c6b3c52f969652bed0da5f9f6.jpg", "img_caption": ["Figure 3: Comparison of generated samples on CelebA $(64\\times64)$ . The left three show samples from models trained for 10k steps. In the right three, FD-SSM and LCSS images are from models trained for $210\\mathbf{k}$ steps, whereas SSM images are from a model trained for $60\\mathrm{k}$ steps. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "Comparison with SSM and FD-SSM. We first focus on comparing LCSS with SSM and FDSSM.5 We generate samples using NCSNv2 on CIFAR-10 $(32\\times32)$ [16], CelebA $(64\\times64)$ [21], and FFHQ $(256\\times256)$ [11]. The results show that LCSS demonstrates stable long-term training and faster convergence compared to the other two methods. This can be explained by LCSS not using random projection, unlike SSM and FD-SSM. Details are provided below. ", "page_idx": 7}, {"type": "text", "text": "On CIFAR-10 $(32\\times32)$ , unlike LCSS, SSM and FD-SSM, when reaching $95\\mathrm{k}$ and $495\\mathbf{k}$ training steps, respectively, are unable to continue generating meaningful images and produce only entirely black images. Fig. 2 displays generated images at $5\\mathrm{k}$ and 90k training steps for each method. The faster convergence of LCSS compared to SSM and FD-SSM is exhibited from the differences in the image quality. On CelebA $(64\\times64)$ , Fig. 3 (left) displays images generated by each method at 10k steps, highlighting LCSS\u2019s faster learning. Fig. 3 (right) presents the generated images of LCSS and FD-SSM at the $210\\mathbf{k}$ training steps. For SSM, after $65\\mathrm{k}$ training steps, it only generated completely black images, so the displayed SSM images are from the model trained for 60k iteration. On FFHQ $(256\\times256)$ , LCSS can generate decent images, while SSM and FD-SSM failed, as shown in Fig. 4 ", "page_idx": 7}, {"type": "text", "text": "Comparison with DSM. In the previous experiments, we saw that LCSS significantly outperforms SSM and FD-SSM in image generation. In this subsection, we compare LCSS with DSM, widely adopted as the objective function in score-based diffusion models. The results show that LCSS surpasses DSM in qualitative evaluation, and achieves performance on par with DSM in quantitative evaluation on CIFAR-10 using Fr\u00e9chet inception distance (FID), Inception score (IS), and negative log likelihood measured in bits per dimension (BPD). The details are below. ", "page_idx": 7}, {"type": "text", "text": "We compare generated samples on FFHQ, AFHQ, and $\\mathrm{FFHQ}+\\mathrm{AFHQ}$ . The size of images in the three datasets is $(256\\!\\times\\!256)$ , and we train NCSNv2 for 600k with batch size 16 on each of them. On FFHQ, LCSS can generate more realistic images than DSM, as shown in Fig. 4. We note that during the training with DSM, around 210k training steps, a sharp decline in the quality of generated images was observed. On AFHQ [4], Fig. 5 shows that LCSS generates realistic samples, but DSM does not. We also create and examine with a dataset $\\mathrm{FFHQ}+\\mathrm{AFHQ}$ , a fusion of FFHQ and AFHQ, designed to increase learning difficulty by diversifying data modalities. On FFHQ $^+$ AFHQ, Fig. 6 shows LCSS\u2019s superior capability in generating realistic images over DSM. ", "page_idx": 7}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/447b9995982c4eb5d1167db800cbd0d5b42ca035d93b40d390f027f7d9d898b8.jpg", "img_caption": ["Figure 6: Samples on FFHQ $^+$ AFHQ. "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "", "page_idx": 7}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/380e1903bcbaf47fabf03470d2199e94d393801a838dab54c1d071ca3f3999f8.jpg", "img_caption": ["Figure 4: Samples on FFHQ $(256\\times256)$ . Models are trained for 600k steps with batch size 16. SSM and FDSSM fail to produce face images. ", "Figure 5: Samples on AFHQ $256\\times$ 256). Models are trained in the same setting as those on FFHQ. "], "img_footnote": [], "page_idx": 8}, {"type": "table", "img_path": "yPPNi7vc7n/tmp/5504a1999bb022b3baa4d4d56862943d834ed3efbe76e92e82b24dde3c5c4ab9.jpg", "table_caption": ["Table 3: Sample quality evaluation on CIFAR-10. FID $(\\downarrow)$ , IS (\u2191), and BPD (\u2193). "], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "Table 3 shows the qualitative results on CIFAR-10. Regardless of SDMs, LCSS tends to surpass DSM in IS but underperform in FID. Compared to the values in Song et al. [35], our experimental results generally exhibit higher (better) IS values and higher (worse) FID values.6 In BPD, LCSS surpasses DSM in $\\mathsf{D D P M++}$ variants but underperforms in $\\mathrm{NCSN++}$ variants. Overall, qualitative evaluation on CIFAR-10 suggests no decisive superiority between LCSS and DSM, hinting at distinct characteristics. ", "page_idx": 8}, {"type": "text", "text": "Summary. Table 4 illustrates a highly simplified comparison of the relative performance between LCSS and DSM. Model training is more complex in Case $\\#2$ than in Case #1. It was observed that in challenging conditions like Case #2, DSM suffered from performance degradation. We regularly monitored the quality of generated images during model training. In the experiments of Case #2 with DSM, as noted above, although the quality of generated images was improving up to a certain stage (around $210\\mathbf{k}$ iterations, for example), it suddenly deteriorated. Also, frequent spikes in loss values were observed during training with DSM, which appeared to be a trigger for the deterioration. Unlike DSM, LCSS retained superior performance without suffering from such instability. ", "page_idx": 8}, {"type": "text", "text": "4.3 High resolution image generation ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "We demonstrate that learning with LCSS enables models to generate high-resolution images. We train $\\mathrm{NCSN++}$ and $\\scriptstyle\\mathrm{DDPM++}$ on CelebA HQ $5024\\times1024)$ [10], using hyperparameters consistent with those used to train DSM-based models in Song et al. [35]. In Fig. 1, we show generated images: $\\mathrm{NCSN++}$ images are from the model trained for around 1.3M iterations, and $\\scriptstyle\\mathrm{DDPM++}$ ones are trained for around $0.3\\mathbf{M}$ iterations, with batch size 16 for both. The figures show that LCSS is promising as a score matching method. More generated samples are presented in Appendix C.2. ", "page_idx": 8}, {"type": "text", "text": "4.4 Ablation study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "The loss function of LCSS, similar to the original score matching, consists of two terms. To study the roles of each term, using the modified version of $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ in Eq. (19) with a balancing coefficient $\\gamma$ as ", "page_idx": 8}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x}_{t}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x}_{0},\\sigma_{t}^{2}\\mathbb{I}_{\\mathbf{d}})}\\left[\\gamma\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)^{T}\\cdot\\frac{\\mathbf{x}_{t}^{\\prime}-\\mathbf{x}_{0}}{\\sigma_{t}^{2}}+\\frac{1}{2}\\left\\lVert\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)\\right\\rVert_{2}^{2}\\right],\n$$", "text_format": "latex", "page_idx": 8}, {"type": "text", "text": "we train NCSNv2 on FFHQ. Images generated from the models trained with different $\\gamma$ are shown in Fig. 7. When $\\gamma=0.5$ , only noisy images akin to those at time $t=T$ , $\\mathbf{x}_{T}$ , are produced. With $\\gamma<1$ , the force to minimize the second term, $\\big\\|\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)\\big\\|_{2}^{2}$ , is more emphasized than when using the original $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ , leading to shorter score vector lengths. The score vector length is directly linked to the spatial movement distance of $\\mathbf{x}_{t}$ during the reverse process for sample generation. Since the score vector is forced to be short, the noise $\\mathbf{x}_{T}$ generated at the start of the sample generation process cannot reach the regions corresponding to realistic images with high density as it traces back from time $T$ to 0. On the other hand, when $\\gamma>1$ , particularly for $\\gamma=10$ , it is observed that as the number of training iterations increased, images with emphasized contours but lost textures are generated. It suggests that the involvement of the first term of $\\mathcal{I}_{\\mathrm{LCSS}}^{s}$ in contour formation. The object contours in an image are characterized by rapid changes in pixel values, which can be associated with high curvature or changes in second-order derivatives. Since $\\mathbf{s}_{\\theta}(\\mathbf{x}_{t}^{\\prime},t)^{T}\\cdot\\frac{\\mathbf{x}_{t}^{\\prime}-\\mathbf{x}_{t}}{\\sigma^{2}}$ in Eq. (21) or (19) corresponds to the Hessian trace of log-density, this observation can be interpreted as natural. It is implied that the first and second terms in the loss function of LCSS are dedicated to the formation of contours and texture, respectively. ", "page_idx": 8}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/a13190735b4504b0814ffb5ebeb1b48f2a8916c47b85b486b815952fc6448217.jpg", "img_caption": ["Figure 7: Generated samples on FFHQ $(256\\times256)$ by the model trained with LCSS (ours) with different $\\gamma$ . The notation iter signifies the training iterations. "], "img_footnote": [], "page_idx": 9}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "5 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "Limitation. While LCSS, unlike DSM, can design SDEs flexibly without restricting them to affine forms, we used existing affine SDEs designed for use together with DSM, i.e., VE SDE and subVP SDE, in this work. Proposing more flexible SDEs leveraging LCSS is left for future work. ", "page_idx": 9}, {"type": "text", "text": "We proposed a local curvature smoothing with Stein\u2019s identity (LCSS), a regularized score matching method expressed in a simple form, enabling fast computation. We demonstrated LCSS\u2019s effectiveness in training on high-dimensional data and showed that LCSS-based SDMs enable high-resolution image generation. Currently, SDMs primarily rely on DSM, constraining the design of SDE. LCSS offers an alternative to DSM, opening avenues for SDM research based on more flexible SDEs. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] Brian DO Anderson. Reverse-time diffusion equation models. Stochastic Processes and their Applications, 12(3):313\u2013326, 1982.   \n[2] Chris M Bishop. Training with noise is equivalent to tikhonov regularization. Neural computation, 7(1):108\u2013116, 1995.   \n[3] Christopher M Bishop. Neural networks for pattern recognition. Oxford university press, 1995.   \n[4] Yunjey Choi, Youngjung Uh, Jaejun Yoo, and Jung-Woo Ha. Stargan v2: Diverse image synthesis for multiple domains. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2020.   \n[5] Laurent Dinh, David Krueger, and Yoshua Bengio. Nice: Non-linear independent components estimation. In International Conference on Learning Representations, 2015.   \n[6] Jackson Gorham and Lester Mackey. Measuring sample quality with stein's method. In C. Cortes, N. Lawrence, D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 28. Curran Associates, Inc., 2015.   \n[7] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. In H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages 6840\u20136851. Curran Associates, Inc., 2020.   \n[8] M.F. Hutchinson. A stochastic estimator of the trace of the influence matrix for laplacian smoothing splines. Communications in Statistics - Simulation and Computation, 18(3):1059\u2013 1076, 1989. doi: 10.1080/03610918908812806.   \n[9] Aapo Hyv\u00e4rinen. Estimation of non-normalized statistical models by score matching. Journal of Machine Learning Research, 6(24):695\u2013709, 2005.   \n[10] Tero Karras, Timo Aila, Samuli Laine, and Jaakko Lehtinen. Progressive growing of GANs for improved quality, stability, and variation. In International Conference on Learning Representations, 2018.   \n[11] Tero Karras, Samuli Laine, and Timo Aila. A style-based generator architecture for generative adversarial networks. In 2019 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 4396\u20134405, 2019. doi: 10.1109/CVPR.2019.00453.   \n[12] Tero Karras, Miika Aittala, Timo Aila, and Samuli Laine. Elucidating the design space of diffusion-based generative models. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 26565\u201326577. Curran Associates, Inc., 2022.   \n[13] Dongjun Kim, Byeonghu Na, Se Jung Kwon, Dongsoo Lee, Wanmo Kang, and Il-chul Moon. Maximum likelihood training of implicit nonlinear diffusion model. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 32270\u201332284. Curran Associates, Inc., 2022.   \n[14] Diederik P Kingma and Max Welling. Auto-encoding variational bayes. In International Conference on Learning Representations, 2014.   \n[15] Durk P Kingma and Yann LeCun. Regularized estimation of image statistics by score matching. In J. Lafferty, C. Williams, J. Shawe-Taylor, R. Zemel, and A. Culotta, editors, Advances in Neural Information Processing Systems, volume 23. Curran Associates, Inc., 2010.   \n[16] Alex Krizhevsky, Geoffrey Hinton, et al. Learning multiple layers of features from tiny images. 2009.   \n[17] Chieh-Hsin Lai, Yuhta Takida, Naoki Murata, Toshimitsu Uesaka, Yuki Mitsufuji, and Stefano Ermon. Fp-diffusion: Improving score-based diffusion models by enforcing the underlying score fokker-planck equation. In Proceedings of the 40th International Conference on Machine Learning, 2023.   \n[18] Yingzhen Li and Richard E. Turner. Gradient estimators for implicit models. In International Conference on Learning Representations, 2018.   \n[19] Jae Hyun Lim, Aaron Courville, Christopher Pal, and Chin-Wei Huang. Ar-dae: towards unbiased neural entropy gradient estimation. In Proceedings of the 37th International Conference on Machine Learning, ICML\u201920. JMLR.org, 2020.   \n[20] Qiang Liu, Jason Lee, and Michael Jordan. A kernelized stein discrepancy for goodness-of-fit tests. In Maria Florina Balcan and Kilian Q. Weinberger, editors, Proceedings of The $33r d$ International Conference on Machine Learning, volume 48 of Proceedings of Machine Learning Research, pages 276\u2013284, New York, New York, USA, 20\u201322 Jun 2016. PMLR.   \n[21] Ziwei Liu, Ping Luo, Xiaogang Wang, and Xiaoou Tang. Deep learning face attributes in the wild. In Proceedings of International Conference on Computer Vision (ICCV), December 2015.   \n[22] Raphael A. Meyer, Cameron Musco, Christopher Musco, and David P. Woodruff. Hutch++: Optimal Stochastic Trace Estimation, pages 142\u2013155. doi: 10.1137/1.9781611976496.16.   \n[23] Tianyu Pang, Kun Xu, Chongxuan LI, Yang Song, Stefano Ermon, and Jun Zhu. Efficient learning of generative models via finite-difference score matching. In H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages 19175\u201319188. Curran Associates, Inc., 2020.   \n[24] Aditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical text-conditional image generation with clip latents, 2022.   \n[25] Danilo Rezende and Shakir Mohamed. Variational inference with normalizing flows. In Proceedings of the 32nd International Conference on Machine Learning, volume 37 of Proceedings of Machine Learning Research, pages 1530\u20131538, Lille, France, 07\u201309 Jul 2015. PMLR.   \n[26] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj\u00f6rn Ommer. Highresolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 10684\u201310695, June 2022.   \n[27] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, Kamyar Ghasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, Jonathan Ho, David J Fleet, and Mohammad Norouzi. Photorealistic text-to-image diffusion models with deep language understanding. In S. Koyejo, S. Mohamed, A. Agarwal, D. Belgrave, K. Cho, and A. Oh, editors, Advances in Neural Information Processing Systems, volume 35, pages 36479\u201336494. Curran Associates, Inc., 2022.   \n[28] Tim Salimans, Andrej Karpathy, Xi Chen, and Diederik P. Kingma. PixelCNN $^{++}$ : Improving the pixelCNN with discretized logistic mixture likelihood and other modifications. In International Conference on Learning Representations, 2017.   \n[29] Jiaxin Shi, Shengyang Sun, and Jun Zhu. A spectral approach to gradient estimation for implicit distributions. In Jennifer Dy and Andreas Krause, editors, Proceedings of the 35th International Conference on Machine Learning, volume 80 of Proceedings of Machine Learning Research, pages 4644\u20134653. PMLR, 10\u201315 Jul 2018.   \n[30] Jascha Sohl-Dickstein, Eric Weiss, Niru Maheswaranathan, and Surya Ganguli. Deep unsupervised learning using nonequilibrium thermodynamics. In Francis Bach and David Blei, editors, Proceedings of the 32nd International Conference on Machine Learning, volume 37 of Proceedings of Machine Learning Research, pages 2256\u20132265, Lille, France, 07\u201309 Jul 2015. PMLR.   \n[31] Yang Song and Stefano Ermon. Generative modeling by estimating gradients of the data distribution. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 32. Curran Associates, Inc., 2019.   \n[32] Yang Song and Stefano Ermon. Improved techniques for training score-based generative models. In H. Larochelle, M. Ranzato, R. Hadsell, M.F. Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages 12438\u201312448. Curran Associates, Inc., 2020.   \n[33] Yang Song, Sahaj Garg, Jiaxin Shi, and Stefano Ermon. Sliced score matching: A scalable approach to density and score estimation. In Proceedings of the Thirty-Fifth Conference on Uncertainty in Artificial Intelligence, UAI 2019, Tel Aviv, Israel, July 22-25, 2019, page 204, 2019.   \n[34] Yang Song, Conor Durkan, Iain Murray, and Stefano Ermon. Maximum likelihood training of score-based diffusion models. In M. Ranzato, A. Beygelzimer, Y. Dauphin, P.S. Liang, and J. Wortman Vaughan, editors, Advances in Neural Information Processing Systems, volume 34, pages 1415\u20131428. Curran Associates, Inc., 2021.   \n[35] Yang Song, Jascha Sohl-Dickstein, Diederik P Kingma, Abhishek Kumar, Stefano Ermon, and Ben Poole. Score-based generative modeling through stochastic differential equations. In International Conference on Learning Representations, 2021.   \n[36] Charles Stein. A bound for the error in the normal approximation to the distribution of a sum of dependent random variables. In Proceedings of the sixth Berkeley symposium on mathematical statistics and probability, volume 2: Probability theory, volume 6, pages 583\u2013603. University of California Press, 1972.   \n[37] Benigno Uria, Iain Murray, and Hugo Larochelle. Rnade: The real-valued neural autoregressive density-estimator. In Advances in Neural Information Processing Systems, volume 26, pages 2175\u20132183. Curran Associates, Inc., 2013.   \n[38] Aaron van den Oord, Nal Kalchbrenner, Lasse Espeholt, koray kavukcuoglu, Oriol Vinyals, and Alex Graves. Conditional image generation with pixelcnn decoders. In Advances in Neural Information Processing Systems, volume 29, pages 4790\u20134798. Curran Associates, Inc., 2016.   \n[39] Pascal Vincent. A connection between score matching and denoising autoencoders. Neural computation, 23(7):1661\u20131674, 2011. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "A Applying Stein Identity to Jacobian Trace ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "To derive Corollary 2, we first introduce the following two assumptions. ", "page_idx": 13}, {"type": "text", "text": "Assumption 1. Let x be a real-valued vector, $\\mathbf{x}=[x_{1},\\ldots,x_{d}]^{T}$ . Considering the derivative of $a$ function $\\mathbf{s}_{\\theta}:\\mathbb{R}^{d}\\rightarrow\\mathbb{R}^{d}$ , we assume that the expectation and summation are interchangeable as follows: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\sum_{i=1}^{d}\\frac{\\partial s_{\\theta_{i}}(\\mathbf{x}^{\\prime})}{\\partial x_{i}}\\right]=\\sum_{i=1}^{d}\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\frac{\\partial s_{\\theta_{i}}(\\mathbf{x}^{\\prime})}{\\partial x_{i}}\\right].\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Assumption 2. For the same function $\\mathbf{s}_{\\theta}$ in Assumption $^{\\,l}$ , we assume the following interchangeability: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim N(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[\\sum_{i=1}^{d}\\left(s_{\\theta_{i}}(\\mathbf{x}^{\\prime})(x_{i}^{\\prime}-x_{i})\\right)\\right]=\\sum_{i=1}^{d}\\mathbb{E}_{\\mathbf{x}^{\\prime}\\sim N(\\mathbf{x},\\sigma^{2}\\mathbb{I}_{d})}\\left[s_{\\theta_{i}}(\\mathbf{x}^{\\prime})(x_{i}^{\\prime}-x_{i})\\right].\n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "The interchangeability holds when a (score) function $\\mathbf{s}_{\\theta}$ is integrable and differentiable. As $\\mathbf{s}_{\\theta}$ is implemented by neural networks in our case, we assume these conditions are met. We noted that if there are correlations between the dimensions of $\\mathbf{x}^{\\prime}$ over which expectations are taken, interchangeability does not always hold. However, because $\\mathbf{x}^{\\prime}$ is a sample from a diagonal Gaussian, $\\mathbf{x}^{\\prime}\\sim\\mathcal{N}(\\bar{\\mathbf{x}},\\sigma^{2}\\mathbb{I}_{d})$ , there are no correlations between dimensions, thus fulfilling this condition. ", "page_idx": 13}, {"type": "text", "text": "Derivation of Corollary 2. Using these assumptions, Eq. (16) is derived as follows: ", "page_idx": 13}, {"type": "equation", "text": "$$\n\\begin{array}{r l}{\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\prod(\\Gamma_{\\mathbf{Y}}\\times u_{\\mathbf{y}}(\\mathbf{x}^{\\top}))=\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\sum_{i=1}^{d}\\hat{\\beta}_{i,i}(x_{i}^{\\top})\\right]}&{}\\\\ {=}&{\\frac{1}{\\sum_{i=1}^{d}}\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\frac{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}\\right]}\\\\ {=}&{\\frac{1}{\\sum_{i=1}^{d}}\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\frac{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}\\frac{\\hat{\\beta}_{i,i}^{\\top}}{\\hat{\\beta}_{i,i}^{\\top}}\\right]}\\\\ {=}&{\\frac{1}{\\sum_{i=1}^{d}}\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\frac{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}\\frac{\\hat{\\beta}_{i,i}^{\\top}}{\\hat{\\beta}_{i,i}^{\\top}}\\right]}\\\\ {=}&{\\sum_{i=1}^{d}\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\frac{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}{\\hat{\\beta}_{i,i}(x_{i}^{\\top})}\\frac{\\hat{\\beta}_{i,i}^{\\top}}{\\hat{\\beta}_{i,i}^{\\top}}\\right]}\\\\ {=}&{\\sum_{i=1}^{d}\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\sum_{i=1}^{d}\\left(x_{i}^{\\top}\\right)^{\\frac{d_{i}}{d_{i}}-\\frac{d_{i}}{d_{i}}}\\right]}\\\\ {=}&{\\mathbb{E}_{u\\sim\\mathcal{N}(x,v),(\\alpha,\\eta)}\\left[\\frac{\\hat{\\beta}_{i,i}^{\\top}} \n$$", "text_format": "latex", "page_idx": 13}, {"type": "text", "text": "Assumption 1 is applied in transitioning from Eq. (24) to Eq. (25). The transition from Eq. (25) to Eq. (26) is achieved by applying the chain rule, with $x_{i}^{\\prime}=x_{i}+\\sigma\\epsilon$ where $\\mathbf{\\boldsymbol{\\epsilon}}\\sim\\mathcal{N}(\\mathbf{\\boldsymbol{0}},\\mathbf{\\boldsymbol{1}})$ , due to x\u2032i \u223cN(xi, \u03c32), and thus we have \u2202\u2202xxii $\\begin{array}{r}{\\frac{\\partial x_{i}^{\\prime}}{\\partial x_{i}}=1}\\end{array}$ in Eq. (27). We use Corollary 1 in the transition from Eq. (27) to Eq. (28). We finally apply Assumption 2 in the transition from Eq. (28) to Eq. (29). ", "page_idx": 13}, {"type": "text", "text": "B Experiments on Checkerboard ", "text_level": 1, "page_idx": 13}, {"type": "text", "text": "We describe the setup for the experiments on Checkerboard dataset. We use the publicly available code7. The generation of the Checkerboard dataset can be found, for example, in Appendix D.1 in Lai et al. [17]. In the data space $\\mathcal{X}\\in\\mathbb{R}^{2}$ , we train a function $f_{\\theta}:\\mathcal{X}\\to\\mathbb{R}$ parameterized by $\\theta$ to ", "page_idx": 13}, {"type": "text", "text": "estimate density directly. The score, calculated as $\\nabla_{\\mathbf{x}}f_{\\theta}$ , corresponds to $\\mathbf{s}_{\\theta}$ in the main text. We apply the score matching methods we examine to estimate $\\nabla_{\\mathbf{x}}f_{\\theta}$ , resulting in the trained density estimation function $f_{\\theta}$ . Sampling is performed using Langevin dynamics based on $\\nabla_{\\mathbf{x}}f_{\\theta}$ as: ", "page_idx": 14}, {"type": "equation", "text": "$$\n{\\bf x}_{t-1}={\\bf x}_{t}+\\frac{\\epsilon}{2}\\nabla_{\\bf x}f_{\\theta}({\\bf x}_{t})+{\\bf z}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "where $\\mathbf{z}\\sim\\mathcal{N}(0,\\epsilon\\mathbb{I}_{2})$ and $\\epsilon=0.1$ . The function $f_{\\theta}$ is implemented as a simple multilayer perceptron (MLP) with two hidden layers, each with 300 units, which is the same architecture as the one used in Song and Ermon [31]. The number of Langevin dynamics steps is 1000, with the initial vector, $\\mathbf{x}_{\\mathrm{1000}}$ , being randomly sampled from a uniform distribution. We use stochastic gradient descent with a batch size of $10\\mathbf{k}$ , a learning rate of $1e-3$ , and train for 200 epochs. Fig. 1 shows the sampling results of 250M points. The loss curve during training on Checkerboard is shown in Fig. 8. ", "page_idx": 14}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/e846ced06deb90ef4a36508d3c37b5ce9c1b4ab62571f59c6e9314833a7121a2.jpg", "img_caption": ["Figure 8: Training loss curve on checkerboard, corresponding to Fig. 1. From left to right: SSM, DSM, and LCSS (ours). "], "img_footnote": [], "page_idx": 14}, {"type": "text", "text": "C More results ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "C.1 Generated Samples on CIFAR-10 ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Fig. 9 shows generated samples from the models trained on CIFAR-10 using LCSS. The models are $\\mathrm{NCSN++}$ deep with VE SDE and $\\scriptstyle\\mathrm{DDPM++}$ deep with subVP SDE. ", "page_idx": 14}, {"type": "text", "text": "C.2 Generated Samples on CelebA-HQ ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Fig. 10 shows generated samples from models trained on CelebA-HQ $(1024\\times1024)$ ) using LCSS.   \nThe model is $\\mathrm{NCSN++}$ with VE SDE. ", "page_idx": 14}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/4d989e88ab07a874dccefde8a333c05cc25ed9146298815f25973f67e7f8634c.jpg", "img_caption": ["Figure 9: Generated samples on CIFAR-10 with LCSS. The model for the top is $\\mathrm{NCSN++}$ deep with VE SDE, and the one for the bottom is $\\scriptstyle\\mathrm{DDPM++}$ deep with subVP SDE. "], "img_footnote": [], "page_idx": 15}, {"type": "image", "img_path": "yPPNi7vc7n/tmp/ef4599ea355a25245b7143c1a1b1a22faf5372877dde93e27f5d380306889e8b.jpg", "img_caption": ["Figure 10: Samples generated from $\\mathrm{NCSN++}$ with VE SDE trained on CelebA-HQ $(1024\\times1024)$ using LCSS. "], "img_footnote": [], "page_idx": 16}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: We outline what is demonstrated to support the claim made in the paper\u2019s title at the level of both the abstract and introduction. ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 17}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Justification: Section 5 contains a paragraph explaining the limitations ", "page_idx": 17}, {"type": "text", "text": "Guidelines: ", "page_idx": 17}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 17}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 17}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 17}, {"type": "text", "text": "Justification: The derivation of Corollary 2 is presented in the appendix, and the lemmas we used are referenced. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 18}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 18}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 18}, {"type": "text", "text": "Justification: Our main results can be expressed in a very simple form. By replacing the loss function of the existing SDMs with Eq. (20), the experiment can be reproduced. In addition, the code and trained models utilized in the experiments are based on the official release of Song et al. [35], as mentioned in the paper. ", "page_idx": 18}, {"type": "text", "text": "Guidelines: ", "page_idx": 18}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 18}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The code we used in our experiments is based on Song et al. [35]\u2019s already published code. We plan to release our code after the publication of this paper. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 19}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: The details of the experiments of observing SDM likelihood behavior are in the main text. Almost all settings are the same as Song et al. [35] or [31]. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 19}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 19}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 19}, {"type": "text", "text": "Justification: For the qualitative evaluation using FID, IS, and BPD, we calculated the mean over all samples in the CIFAR-10 test set, and in line with common practice, error bars are not shown, as in Song et al. [35], for example. ", "page_idx": 19}, {"type": "text", "text": "Guidelines: ", "page_idx": 19}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper. ", "page_idx": 19}, {"type": "text", "text": "\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 20}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We presented it in the second paragraph of Section 4. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 20}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: We read and confirmed that this study is in compliance with it. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 20}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 20}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 20}, {"type": "text", "text": "Justification: Our proposal enables the development of score-based generative models based on nonlinear SDEs, potentially significantly improving generation quality over existing methods. As noted in the guidelines below, this could lead to the misuse in creating more sophisticated deepfakes. ", "page_idx": 20}, {"type": "text", "text": "Guidelines: ", "page_idx": 20}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 21}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 21}, {"type": "text", "text": "Answer: [NA] Justification: - ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks. ", "page_idx": 21}, {"type": "text", "text": "\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 21}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: We provided proper citations for the code, trained models, and datasets used in our experiments. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 21}, {"type": "text", "text": "", "page_idx": 22}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA] Justification: - Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 22}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 22}, {"type": "text", "text": "Guidelines: \u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects. \u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper. \u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 22}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "page_idx": 22}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 22}, {"type": "text", "text": "Answer: [NA]   \nJustification: -   \nGuidelines: \u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 22}, {"type": "text", "text": "", "page_idx": 23}]