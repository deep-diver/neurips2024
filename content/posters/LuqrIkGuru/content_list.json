[{"type": "text", "text": "Are Your Models Still Fair? Fairness Attacks on Graph Neural Networks via Node Injections ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Zihan Luo, Hong Huang\u2020, Yongkang Zhou, Jiping Zhang, Nuo Chen, Hai Jin ", "page_idx": 0}, {"type": "text", "text": "Huazhong University of Science and Technology, China {zihanluo,honghuang,yongkangzhou ,jipingz,nuo chen,hjin}@hust.edu.cn ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Despite the remarkable capabilities demonstrated by Graph Neural Networks (GNNs) in graph-related tasks, recent research has revealed the fairness vulnerabilities in GNNs when facing malicious adversarial attacks. However, all existing fairness attacks require manipulating the connectivity between existing nodes, which may be prohibited in reality. To this end, we introduce a Node Injectionbased Fairness Attack (NIFA), exploring the vulnerabilities of GNN fairness in such a more realistic setting. In detail, NIFA first designs two insightful principles for node injection operations, namely the uncertainty-maximization principle and homophily-increase principle, and then optimizes injected nodes\u2019 feature matrix to further ensure the effectiveness of fairness attacks. Comprehensive experiments on three real-world datasets consistently demonstrate that NIFA can significantly undermine the fairness of mainstream GNNs, even including fairnessaware GNNs, by injecting merely $1\\%$ of nodes. We sincerely hope that our work can stimulate increasing attention from researchers on the vulnerability of GNN fairness, and encourage the development of corresponding defense mechanisms. Our code and data are released at: https://github.com/CGCL-codes/NIFA. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Due to the strong capability in understanding graph structure, Graph Neural Networks (GNNs) have achieved much progress in graph-related domains such as social recommendation [30, 31] and bioinformatics [4, 27]. Nevertheless, despite the impressive capabilities demonstrated by GNNs, more and more in-depth research has revealed shortcomings in the fairness of GNN models, which greatly restricts their applications in the real world. ", "page_idx": 0}, {"type": "text", "text": "In fact, studies [5, 42] have found that the biases and prejudices existed in training data would be further amplified through the message propagation mechanism of GNNs, leading to model predictions being correlated with certain sensitive attributes, such as gender and race. Such correlations are usually undesired and can result in fairness issues and societal harm. For instance, in online recruitment, a recommender based on GNNs may be associated with the gender of applicants, leading to differential treatments towards different demographics and consequently giving rise to group unfairness. To address fairness issues in GNNs, researchers have proposed solutions such as adversarial learning [5, 28], data augmentation [17, 22] and others, which have achieved promising results. ", "page_idx": 0}, {"type": "text", "text": "However, recent research in the machine learning domain indicates that fairness is actually susceptible to adversarial attacks [3, 26, 29]. Given this, we cannot help but wonder: \u201cIs the fairness of GNN models also highly vulnerable?\u201d For example, in e-commerce, if attackers could exacerbate performance disparities between male and female user groups by attacking GNN-based recommendation models, they could ultimately cause the e-commerce platform to provoke dissatisfaction from specific user demographics and gradually lose its appeal among these users. Several studies [11, 13, 41] have explored the vulnerability of GNN fairness and proposed effective attack strategies. Unlike conventional attacks, these fairness attacks aim to undermine GNN fairness without excessively compromising its utility. However, all these works require altering connectivity between existing nodes, whose authority is typically limited in the real world, such as modifying the relationship between real users. In contrast, injecting fake nodes into the original graph is a more practical way to launch an attack without manipulating the existing graph [12, 32, 34], which is still under-explored in the field of GNN fairness attack. To address this gap, we aim to be the first to launch an attack on GNN fairness via node injection, examining their vulnerabilities under such a more realistic setting. ", "page_idx": 0}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "Specifically, launching a node injection-based fairness attack on GNNs is non-trivial, whose challenges can be summarized as follows: RQ1: How to determine the node injection strategy? The node injection can be decomposed into two steps, including selecting appropriate target nodes and connecting the injected nodes with them, both will impact the effectiveness of the attack. RQ2: How to determine the features of the injected nodes after node injection? Like the real nodes, injected nodes will also participate in the message propagation process of GNNs, thereby affecting their neighbors and even the whole graph. Given the key role of massage propagation in GNN fairness [40, 45], proposing suitable strategies to determine the features of injected nodes is also important. ", "page_idx": 1}, {"type": "text", "text": "To address these challenges, we propose a gray-box poisoning attack method namely Node Injectionbased Fairness Attack (NIFA) during the GNN training phase. In detail, for the two steps in the first challenge, NIFA innovatively designs two corresponding principles. The first is the uncertaintymaximization principle, which asks to select real nodes with the highest model uncertainty as target nodes for injection. The idea is that nodes with higher uncertainty are typically more susceptible to attacks, thereby ensuring the attack\u2019s effectiveness. After selecting target nodes, NIFA follows the second principle, the homophily-increase principle, to connect target nodes with injected nodes. This principle aims to deteriorate GNN fairness by enhancing message propagation within sensitive groups [22, 40]. For the second challenge, multiple novel objective functions are proposed after node injection to guide the optimization of the injected nodes\u2019 features, which could further impact the victim GNN\u2019s fairness from a feature perspective. In summary, our contributions are as follows: ", "page_idx": 1}, {"type": "text", "text": "\u2022 To the best of our knowledge, we are the first to conduct fairness attacks on GNNs via node injections, and our work successfully highlights the vulnerability of GNN fairness. We also summarize several key insights for the future defense of GNNs\u2019 fairness attacks from the success of NIFA. \u2022 We propose a node injection-based gray-box attack named NIFA. To be concrete, NIFA first designs two novel principles to guide the node injection operations from a structure perspective, and then proposes multiple objective functions for the injected nodes\u2019 feature optimization. \u2022 We conduct extensive experiments on three real-world datasets, which consistently show that NIFA can effectively attack existing GNN models with only a $1\\%$ perturbation rate and an unnoticeable utility compromise, even including fairness-aware GNN models. Comparisons with other state-of-the-art baselines also verify the superiority of NIFA in achieving fairness attacks. ", "page_idx": 1}, {"type": "text", "text": "2 Related work ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "Fairness on GNNs. Researchers have discovered various fairness issues of GNNs, which often lead to societal harms [22, 37] and performance deterioration [21, 33] in practical applications. Algorithmic fairness on GNNs can be categorized into two main types based on the definition: individual fairness [1, 6] and group fairness [5, 37, 46]. Individual fairness requires that similar individuals should receive similar treatment, while group fairness aims to protect specific disadvantaged groups [16]. In detail, many researchers have delved into studies focusing on fairness grounded in sensitive attributes. For instance, Dai et al. [5] reduce the identifiability of sensitive attributes in node embeddings through adversarial training to enhance fairness. FairVGNN [38] goes a step further by introducing a feature masking strategy to address the problem of sensitive information leakage during the feature propagation process in GNNs. Graphair [17] achieves fairness through an automated data augmentation method and FairSIN [40] designs a novel sensitive information neutralization method for fairness. Beyond fairness related to sensitive attributes, some researchers also direct attention to fairness related to graph structures, like DegFairGNN [21] and Ada-GNN [23]. In this work, we mainly focus on attacks on the group fairness of GNNs based on sensitive attributes. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Attacks on GNNs. Finding out potential vulnerabilities thus improving the security of GNNs remains a pivotal concern in the field of trustworthy GNNs [42]. From the perspective of attackers, they aim to compromise the GNNs\u2019 performance on graph data via manipulating graph structures [24, 32, 47], node attributes [48], or node labels [19]. Among these methods, node injection attacks, given the attackers\u2019 limited authority to manipulate the connectivity between existing nodes, emerge as one of the most prevalent methods [32, 34, 43]. However, existing attacks, including node injection attacks, mainly focus on undermining GNN\u2019s utility, with little attention to the vulnerability of GNN fairness. Different from attacks on GNN utility, fairness-targeted attacks aim to deteriorate the fairness without significantly compromising the accuracy. FA-GNN [11], FATE [13], and G-FairAttack [41] stand out as the few ones that we are aware of to explore attacks on GNN fairness. FA-GNN\u2019s empirical findings suggest that adding edges with certain strategies can significantly compromise GNN fairness without affecting its performance [11]. FATE [13] formulates the fairness attacks as a bi-level optimization problem and proposes a meta-learning-based framework. G-FairAttack [41] designs a novel surrogate loss with utility constraints to launch the attacks in a non-gradient manner. Nevertheless, all these works require modifying the link structure between existing nodes, which may be prohibited in reality due to the lack of authority. ", "page_idx": 2}, {"type": "text", "text": "3 Preliminary ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "Here we will introduce some basic notations and concepts, and then give our problem definition. ", "page_idx": 2}, {"type": "text", "text": "3.1 Notations ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "A graph is denoted as $\\mathcal{G}\\,=\\,(\\mathcal{V},\\mathbf{A},\\mathbf{X})$ , where $\\mathcal{V}$ is the node set, and $\\mathbf{A}\\in\\mathbb{R}^{|\\mathcal{V}|\\times|\\mathcal{V}|}$ represents the adjacency matrix. $\\mathbf{X}\\in\\mathbb{R}^{|\\mathcal{V}|\\times D}$ denotes the feature matrix, in which $D$ is the feature dimension. Under the settings of node classification, each node $v\\,\\in\\,\\mathcal{V}$ will be assigned with a label $y_{v}\\in\\mathcal{V}$ , and a GNN-based mapping function $f_{\\theta}:\\{\\mathcal{V},\\mathcal{G}\\}\\rightarrow\\{1,2,...,|\\mathcal{V}|\\}^{|\\mathcal{V}|}$ with parameters $\\theta$ is learned to leverage the graph signals for label prediction, where $\\boldsymbol{\\wp}$ represents the true label set. ", "page_idx": 2}, {"type": "text", "text": "3.2 Fairness-related concepts ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In alignment with prior works [5, 7, 17], we mainly focus on group fairness where each node will be assigned with a binary sensitive attribute $s\\in\\{0,\\dot{1}\\}$ , although our attack could also be generalized to the settings of multi-sensitive groups and we leave this as our future work. Based on the sensitive attributes, the nodes can be divided into two non-overlapped groups $\\mathcal{V}=\\{\\mathcal{V}_{0},\\mathcal{V}_{1}\\}$ , and we employ the following two kinds of fairness related definitions: ", "page_idx": 2}, {"type": "text", "text": "Definition 1. Statistical Parity $(S P)$ . The Statistical Parity requires the prediction probability distribution to be independent of sensitive attributes, i.e. for any class $y\\in\\mathcal{V}$ and any node $v\\in\\mathcal{V}$ : ", "page_idx": 2}, {"type": "equation", "text": "$$\nP(\\hat{y}_{v}=y|s=0)=P(\\hat{y}_{v}=y|s=1),\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where $\\hat{y}_{v}$ denotes the predicted label of node $v$ . ", "page_idx": 2}, {"type": "text", "text": "Definition 2. Equal Opportunity $(E O)$ . The Equal Opportunity requires that the probability of predicting correctly is independent of sensitive attributes, i.e. for any class $y\\in\\mathcal{V}$ and any node $v\\in\\mathcal{V}$ , we can have: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{P(\\hat{y}_{v}=y|y_{v}=y,s=0)=P(\\hat{y}_{v}=y|y_{v}=y,s=1).}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "Based on the above definitions, we can define two kinds of metrics $\\Delta_{S P}$ and $\\Delta_{E O}$ to quantitatively measure fairness. For both metrics, smaller values indicate better fairness: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\Delta_{S P}=\\mathbb{E}|P(\\hat{y}=y|s=0)-P(\\hat{y}=y|s=1)|,\n$$", "text_format": "latex", "page_idx": 2}, {"type": "equation", "text": "$$\n\\Delta_{E O}=\\mathbb{E}|P(\\hat{y}=y|y=y,s=0)-P(\\hat{y}=y|y=y,s=1)|.\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "3.3 Problem definition ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this paper, our goal is to launch fairness-targeted attacks on GNN models through the application of node injection during the training phase, i.e. poisoning attack. Following the line of previous attacks on GNNs [32, 41], our attack is under the prevalent gray-box setting, where the attackers can obtain the graph $\\mathcal{G}$ with node labels $\\boldsymbol{\\wp}$ , and the sensitive information $s$ , but can not access the model architecture and parameters $\\theta$ . Detailed introduction to our attack settings is provided in Appendix B. Specifically, through injecting malicious node set $\\nu_{I}$ into the graph, the original graph $\\mathcal{G}\\bar{=}\\left(\\mathcal{V},\\mathbf{A},\\mathbf{X}\\right)$ is poisoned as $\\mathcal{G}^{\\tilde{\\prime}}\\,{=}\\,(\\dot{\\mathcal{V}}^{\\prime},\\mathbf{A}^{\\tilde{\\prime}},\\mathbf{X}^{\\prime})$ , where ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\mathcal{V}^{\\prime}=\\mathcal{V}\\cup\\mathcal{V}_{I},\\;\\;\\mathbf{X}^{\\prime}=\\left[\\begin{array}{c}{\\mathbf{X}}\\\\ {\\mathbf{X}_{I}}\\end{array}\\right],\\mathbf{X}_{I}\\in\\mathbb{R}^{|\\mathcal{V}_{I}|\\times D},}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "equation", "text": "$$\n\\mathbf{A}^{\\prime}=\\left[\\begin{array}{l l}{\\mathbf{A}}&{\\mathbf{V}_{I}}\\\\ {\\mathbf{V}_{I}^{T}}&{\\mathbf{A}_{I}}\\end{array}\\right],\\mathbf{V}_{I}\\in\\mathbb{R}^{|\\mathcal{V}|\\times|\\mathcal{V}_{I}|},\\mathbf{A}_{I}\\in\\mathbb{R}^{|\\mathcal{V}_{I}|\\times|\\mathcal{V}_{I}|}.\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Both $\\mathbf{V}_{I}$ and $\\mathbf{A}_{I}$ are matrices for illustrating the connectivity related to injected nodes, and $\\mathbf{X}_{I}$ is the feature matrix of injected nodes $\\nu_{I}$ . The true label set $\\boldsymbol{\\wp}$ will not be poisoned by injected nodes in our settings, as such information is typically hard to modify in reality. For conciseness, we denote $\\mathcal F(\\cdot)$ and $\\mathcal{M}(\\cdot)$ as the evaluation functions on fairness and utility for the learned mapping function $f_{\\theta}$ , respectively. Then our goal as an injection-based attack on fairness could be formulated as: ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\begin{array}{r l}&{\\underset{\\mathcal{G}^{\\prime}}{\\operatorname*{max}}\\left|\\mathcal{F}\\big(f_{\\theta^{*}}(\\mathcal{V},\\mathcal{G}^{\\prime})\\big)\\right|}\\\\ &{\\;\\mathrm{s.t.}\\;\\underset{\\theta^{*}}{\\operatorname{arg\\,max}}\\mathcal{M}\\big(f_{\\theta^{*}}(\\mathcal{V},\\mathcal{G}^{\\prime})\\big),\\;\\;\\mathcal{G}^{\\prime}=(\\mathcal{V}^{\\prime},\\mathbf{A}^{\\prime},\\mathbf{X}^{\\prime}),\\;\\;|\\mathcal{V}_{I}|\\leq b,\\;\\;d e g(v)_{v\\in\\mathcal{V}_{I}}\\leq d.}\\end{array}\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "As a poisoning attack, the first constraint in Eq. (7) requires to train the victim model $f_{\\theta^{*}}$ with parameters $\\theta^{*}$ on the poisoned graph $\\mathcal{G}^{\\prime}$ , so that the predictions of $f_{\\theta^{*}}$ are as correct as possible before evaluating the attack performance. The following constraints in Eq. (7) make sure that the proposed attack is unnoticeable and deceptive to the defenders, i.e. the number of injected nodes is below a predefined budget $b^{1}$ and the degrees of injected nodes are constrained by a budget $d$ . Our goal is to find a poisoned graph $\\mathcal{G}^{\\prime}$ to deteriorate the fairness of victim models $f_{\\theta^{*}}$ as severely as possible, i.e. maximize the fairness metrics $\\Delta_{S P}$ and $\\Delta_{E O}$ introduced previously. ", "page_idx": 3}, {"type": "text", "text": "4 Methodology ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "In this section, we first give an overview of our attack method NIFA. Then we will elaborate on the details of each module and summarize the implementation algorithms at last. ", "page_idx": 3}, {"type": "text", "text": "4.1 Framework overview ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The overall framework of NIFA is illustrated in Figure 1. As mentioned before, NIFA first employs two principles to guide the node injection operations. For the first uncertainty-maximization principle, NIFA utilizes the Bayesian GNN for model uncertainty estimation of each node, and then selects target nodes with the highest uncertainty (a). As for the second homophily-increase principle, NIFA requires each injected node can only establish connections to target nodes from one single sensitive group (b), thus increasing the homophily-ratio and enhancing information propagation within sensitive groups. After node injection, multiple objective functions are designed to guide the optimization of injected nodes\u2019 feature matrix, where we introduce an iterative optimization strategy for avoiding over-fitting issues (c). The details of each part will be introduced later. ", "page_idx": 3}, {"type": "text", "text": "4.2 Node injection with principles ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "The first step of NIFA is conducting node injections, which aims to ensure the effectiveness of NIFA from a structure perspective. In detail, we propose two novel principles to guide the node injection operations, namely Uncertainty-maximization principle and Homophily-increase principle. ", "page_idx": 3}, {"type": "image", "img_path": "LuqrIkGuru/tmp/f54b6d6f234df7623de26a272dba3a26bd3d32791cb36f44a02b4fb756493c7c.jpg", "img_caption": ["Figure 1: The overall framework of NIFA: (a) Utilizing uncertainty estimation, nodes exhibiting high uncertainty (depicted as shaded nodes) are designated as targeted nodes. (b) Injected nodes are equally assigned to each sensitive group, and only connect targeted nodes with the same sensitive attribute. (c) After node injection, the injected feature matrix and surrogate model are optimized iteratively by diverse objective functions. "], "img_footnote": [], "page_idx": 4}, {"type": "text", "text": "Uncertainty-maximization principle. Intuitively, nodes with higher model uncertainties are positioned closer to the decision boundary, which means their predicted labels are more vulnerable and easier to flip when facing adversarial attacks. We acknowledge that the model uncertainty may not be the only method to measure the vulnerability of nodes, and we will discuss potential alternative approaches in Appendix H.2. Inspired by [20], we utilize a Bayesian GNN to estimate the model uncertainty of each node, where we employ the Monte Carlo dropout approach [9] to approximate the distributions of the sampled model parameters. Given a GNN with parameters $\\theta_{B}$ , we obtain different model parameters through $T$ times independent Bernoulli dropout sampling processes, i.e.: ", "page_idx": 4}, {"type": "equation", "text": "$$\n\\begin{array}{r}{\\begin{array}{c}{P(M_{i})\\,\\sim\\,\\mathrm{Bernoulli}(p)}\\\\ {\\theta_{B_{i}}\\,=\\,M_{i}\\odot\\theta_{B}}\\end{array},i\\in\\{1,2,\\dots,T\\},}\\end{array}\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $M_{i}$ is the $i$ th sampled binary mask following the Bernoulli distribution with parameter $p$ , and $\\odot$ denotes the dot production operation. Here we take a two-layer GCN [10] with parameters $\\theta_{B}$ as the Bayesian GNN for estimating the uncertainty of each node, and $\\theta_{B}$ is optimized by minimizing the following objective function, which consists of a cross-entropy loss plus a regularization term: ", "page_idx": 4}, {"type": "equation", "text": "$$\nL(\\theta_{B})=-\\frac{1}{T}\\sum_{i=1}^{T}\\mathcal{y}\\log(f_{\\theta_{B_{i}}}(\\mathcal{V},\\mathcal{G}))+\\frac{1-p}{2T}\\|\\theta_{B}\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "where $\\boldsymbol{\\wp}$ denotes the true labels, $\\|\\cdot\\|_{2}^{2}$ denotes the L2 regularization, $T$ is the number of sampling processes and $f_{\\theta_{\\mathcal{B}_{i}}}(\\cdot)$ is the mapping function with the $i$ th sampled parameters $\\theta_{B_{i}}$ . After the training process, model uncertainty can be estimated by calculating the variance of $T$ times predictions with the sampled parameters $\\{\\dot{\\theta}_{B_{i}}\\}_{i=1}^{T}$ . Intuitively, nodes with lower variance are more confident in their predictions and vice versa. Thus, the model uncertainty scores $U\\in\\mathbb{R}^{|\\nu|}$ are positively correlated with the model prediction variance, and we simply estimate $U$ with the following formulation: ", "page_idx": 4}, {"type": "equation", "text": "$$\nU=V_{i=1}^{T}(f_{\\theta_{B_{i}}}(\\mathcal{V},\\mathcal{G})).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "Under the guidance of the uncertainty-maximization principle, we will select nodes with the top $k\\%$ model uncertainty $U$ in each sensitive group as the target nodes, where $k$ is a hyper-parameter. ", "page_idx": 4}, {"type": "text", "text": "Homophily-increase principle. After selecting target nodes, the next step is to connect the injected nodes with them. In particular, we first present our strategy in this step, with more rationales provided later: the injected nodes $\\nu_{I}$ are first equally assigned to each sensitive group in the graph, then each injected node will exclusively connect to $d$ random target nodes with the same sensitive attribute, as illustrated in Figure 1(b), where $d$ is a hyper-parameter. At this stage, the node injection operations are completed, with the structure of the original graph $\\mathcal{G}$ manipulated. ", "page_idx": 4}, {"type": "text", "text": "Intuitively, compared with random node injection, our strategy prevents information propagation between nodes of different sensitive groups through the injected nodes, making it easier to accentuate differences in embeddings between groups and thereby exacerbate unfairness issues [37]. We also provide a brief theoretical analysis to show that such a strategy could lead to the increase of nodelevel homophily ratio. Similar to [8], we define the node-level homophily-ratio $\\mathcal{H}_{u}$ as the ratio of neighbors of node $u$ that have the same sensitive attribute as node $u$ , i.e. $\\begin{array}{r}{\\mathcal{H}_{u}\\,=\\,\\frac{\\sum_{v\\in\\mathcal{N}_{u}}\\mathbb{1}(s_{u}=s_{v})}{|\\mathcal{N}_{u}|}}\\end{array}$ where $\\mathcal{N}_{u}$ denotes the neighbors of node $u$ and $\\mathbb{1}(\\cdot)$ is an indicator function. Then we can have: ", "page_idx": 4}, {"type": "text", "text": "", "page_idx": 5}, {"type": "text", "text": "Lemma 1. For target node u that will connect with injected nodes, our proposed node injection strategy will lead to the increase of node-level homophily-ratio $\\mathcal{H}_{u}$ . ", "page_idx": 5}, {"type": "text", "text": "Due to space limitation, the proof for Lemma 1 is provided in Appendix C. It is worth noting that $\\mathcal{H}_{u}$ is also equivalent to the probability of choosing neighbors with the same sensitive attribute for node $u$ . From the perspective of message propagation, higher node-level homophily-ratio indicates that more sensitive-related information will be aggregated to the target node, thus leading to more severe unfairness issues on sensitive attributes2. We believe that such characteristics could empower our node injection strategy with stronger capability on fairness attacks. ", "page_idx": 5}, {"type": "text", "text": "4.3 Feature optimization ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "In this part, we will introduce the details of optimizing injected nodes\u2019 features $\\mathbf{X}_{I}$ , which helps further advance the effectiveness of NIFA. Generally, under a gray-box attack setting, there is no visible information about the victim models for the attackers, thus requiring attackers to propose a surrogate GNN model $\\boldsymbol{S}$ at first for assessing their attacks. To be specific, similar to the training process of victim models as described in Eq. (7), the surrogate model $\\boldsymbol{S}$ will be trained on the poisoned graph $\\mathcal{G}^{\\prime}$ and optimize its parameter $\\theta_{S}$ to maximize the utility. Conversely, $\\mathbf{X}_{I}$ is designed to mislead $\\boldsymbol{S}$ , ensuring that even a well-trained surrogate model will still maintain high unfairness under attacks. Instead of employing a pre-trained frozen surrogate model $\\boldsymbol{S}$ , NIFA asks two components, i.e. $\\boldsymbol{S}$ and $\\mathbf{X}_{I}$ to be trained iteratively with different objective functions, which avoids the attack being over-fitting to specific model parameters. In detail, the surrogate model $\\boldsymbol{S}$ follows the common training procedure of a GNN classifier with cross-entropy loss, while for the injected nodes\u2019 feature optimization, we devise multiple effective objective functions as follows: ", "page_idx": 5}, {"type": "text", "text": "Classification loss. Although our primary goal is to maximize the unfairness of a GNN model, it is crucial to ensure that the utility of the victim model will not experience a significant decrease after training on a poisoned graph [11, 13, 41], thus being unnoticeable for utility-based attack detection. To this end, we set cross-entropy loss as our first objective function, i.e.: ", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{C E}=-\\frac{1}{|\\mathcal{V}^{t r}|}\\sum_{u\\in\\mathcal{V}^{t r}}y_{u}\\log h_{u},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $\\nu^{t r}$ denotes the original training node set, and $h_{u}$ denotes the output logits of node $u$ . ", "page_idx": 5}, {"type": "text", "text": "Fairness loss. Aiming at enlarging the unfairness on GNNs, we then design two kinds of fairness loss based on the definitions of $\\Delta_{S P}$ and $\\Delta_{E O}$ , which are formulated as: ", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{S P}=-\\|\\frac{1}{|\\mathcal{V}_{0}^{t r}|}\\sum_{u\\in\\mathcal{V}_{0}^{t r}}h_{u}-\\frac{1}{|\\mathcal{V}_{1}^{t r}|}\\sum_{u\\in\\mathcal{V}_{1}^{t r}}h_{u}\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "equation", "text": "$$\nL_{E O}=-\\|\\sum_{y\\in\\mathcal{Y}}(\\frac{1}{|\\mathcal{V}_{0,y}^{t r}|}\\sum_{u\\in\\mathcal{V}_{0,y}^{t r}}h_{u,y}-\\frac{1}{|\\mathcal{V}_{1,y}^{t r}|}\\sum_{u\\in\\mathcal{V}_{1,y}^{t r}}h_{u,y})\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 5}, {"type": "text", "text": "where $h_{u}\\in\\mathbb{R}^{|\\mathcal{D}|}$ denotes the raw output of node $u$ , and $h_{u,y}\\in\\mathbb{R}$ denotes the raw output of node $u$ on class $y$ . $\\mathcal{V}_{i,y}^{t r}$ denotes the training nodes with sensitive attribute $i$ and label $y$ . By minimizing $L_{S P}$ and $L_{E O}$ , the gap in output between different groups increases, leading to high unfairness. ", "page_idx": 5}, {"type": "text", "text": "Constraint of feature. To further accentuate the differences between different sensitive groups, it is important to ensure that the information introduced by injected nodes for different sensitive groups ", "page_idx": 5}, {"type": "text", "text": "is distinct during the message propagation process. To this end, we devise the following constraint function on the injected node feature matrix $\\mathbf{X}_{I}$ : ", "page_idx": 6}, {"type": "equation", "text": "$$\nL_{C F}=-\\|\\frac{1}{|\\mathcal{V}_{I,0}|}\\sum_{u\\in\\mathcal{V}_{I,0}}\\mathbf{X}_{I,u}-\\frac{1}{|\\mathcal{V}_{I,1}|}\\sum_{u\\in\\mathcal{V}_{I,1}}\\mathbf{X}_{I,u}\\|_{2}^{2},\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\nu_{I,i}$ is the injected node set linking to the $i$ th sensitive group during the node injection. ", "page_idx": 6}, {"type": "text", "text": "Overall loss. By combining the aforementioned objective terms, the overall loss $L$ for injected nodes\u2019 features optimization can be formulated as: ", "page_idx": 6}, {"type": "equation", "text": "$$\nL=L_{C E}+\\alpha\\cdot L_{C F}+\\beta\\cdot(L_{S P}+L_{E O}),\n$$", "text_format": "latex", "page_idx": 6}, {"type": "text", "text": "where $\\alpha$ and $\\beta$ are two hyper-parameters to control the weights of different objective functions. ", "page_idx": 6}, {"type": "text", "text": "4.4 Implementation algorithm ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Training process. Due to space limitation, we summarize the pseudo-code of NIFA in Algorithm 1 in Appendix D. Initially, we perform node injection operations based on two proposed principles (lines 2-4). Subsequently, an iterative training strategy is utilized to optimize the surrogate model and injected nodes\u2019 feature (lines 5-15). Specifically, after each inner loop for $\\mathbf{X}_{I}$ training, it is clamped to fit the range of the original feature $\\mathbf{X}$ (line 14) so that the defenders cannot filter out the injected nodes easily through abnormal feature detection. For datasets with discrete features, $\\mathbf{X}_{I}$ is rounded to the nearest integer at the end of the training process (lines 16-18). ", "page_idx": 6}, {"type": "text", "text": "Inference process. As a poisoning attack, the original clean graph $\\mathcal{G}$ is poisoned as $\\mathcal{G}^{\\prime}$ after malicious node injection and feature optimization. The victim models will re-train on the poisoned graph $\\mathcal{G}^{\\prime}$ normally, and we take the predictions from the poisoned victim model for final evaluation. ", "page_idx": 6}, {"type": "text", "text": "5 Experiments ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "5.1 Experimental settings ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "Datasets. Experiments are conducted on three real-world datasets namely Pokec-z, Pokec-n, and DBLP. Both Pokec-z and Pokec-n are subgraphs sampled from Pokec, one of the largest online social networks in Slovakia, according to the provinces of users [5]. Each node in these graphs represents a user, while each edge represents an unidirectional following relationship. The datasets provide node attributes including age, gender, and hobbies, and the classification task is to predict the working fields of users. DBLP is a coauthor network dataset [11], where each node represents an author and two authors will be connected if they publish at least one paper together. The node features are constructed based on the words selected from the corresponding author\u2019s published papers. The final classification task is to predict the research area of the authors. The detailed dataset statistics are summarized in Table 1. ", "page_idx": 6}, {"type": "table", "img_path": "LuqrIkGuru/tmp/946e044678c110999fef5ba14d2a88b4ceab2078a40a052ac1a0b06c4d7b3ee6.jpg", "table_caption": ["Table 1: Dataset statistics "], "table_footnote": [], "page_idx": 6}, {"type": "text", "text": "", "page_idx": 6}, {"type": "text", "text": "Victim models. As a gray-box attack method, we target multiple classical GNNs as victim models, including GCN [14], GraphSAGE [10], APPNP [15], and SGC [39]. We also include three wellestablished fairness-aware GNNs \u2014 FairGNN [5], FairVGNN [38], and FairSIN [40] as our selected victim models. The details of these victim models will be elaborated in Appendix E. ", "page_idx": 6}, {"type": "text", "text": "Baselines. Depending on the attack goals, we mainly consider the following two kinds of graph attack methods as our baselines, including $^{\\,I}$ ) Utility attack: AFGSM [36], TDGIA [47] , and $\\mathrm{G^{2}A2C}$ [12], and 2) Fairness attack: FA-GNN [11], FATE [13], and G-FairAttack [41]. The details of these baselines will be further introduced in Appendix F. ", "page_idx": 6}, {"type": "text", "text": "Implementation details. As shown in Table 1, only a part of the nodes have the label information, and we randomly select $50\\%$ , $25\\%$ , and $25\\%$ labeled nodes as the training set, validation set, and test set, respectively. In line with the prior work, [11], we choose region as the sensitive attribute for Pokec-z and Pokec-n, and gender for DBLP. For all victim models, we employ a two-layer GCN model as the surrogate model. Due to space limitations, please refer to Appendix G for more reproducibility details. ", "page_idx": 6}, {"type": "text", "text": "Table 2: Attack performance of NIFA on different victim GNN models. The results are reported in percentage $(\\%)$ . We bold the results when NIFA successfully deteriorates the fairness of victim GNN models (smaller $\\Delta_{S P}$ and $\\Delta_{E O}$ indicate better fairness, and we aim to maximize the fairness metrics for a fairness attack). ", "page_idx": 7}, {"type": "table", "img_path": "LuqrIkGuru/tmp/36dc7ee4780cdd00137db878e1b2911ba571f83b057e9ff0cda9291d777dd8cf.jpg", "table_caption": [], "table_footnote": [], "page_idx": 7}, {"type": "table", "img_path": "LuqrIkGuru/tmp/93be4dfbfa2436fec58067e0380b2f11eca83cffaebc1c63b83d024f8cff47f7.jpg", "table_caption": ["Table 3: Accuracy and Fairness performance of attack launched by the different attackers. The results are reported in percentage $(\\%)$ . The best attack performance on fairness is bolded. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "5.2 Main attack performance ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "To comprehensively evaluate NIFA\u2019s effectiveness, we employ multiple mainstream GNNs including GCN, GraphSAGE, APPNP, and SGC, besides three classical fairness-aware GNNs namely FairGNN, FairVGNN, and FairSIN as our victim models. We record the average accuracy, $\\Delta_{S P}$ and $\\Delta_{E O}$ before and after conducting our poisoning attack on the victim models five times. The experimental results are reported in Table 2, and we can have the following observations: ", "page_idx": 7}, {"type": "text", "text": "\u2022 The proposed attack demonstrates consistent effectiveness on all datasets with different mainstream GNNs as victim models. For instance, the $\\Delta_{S P}$ and $\\Delta_{E O}$ of GCN on Pokec-z increase significantly from $7.13\\%$ , $5.10\\%$ to $17.36\\%$ and $15.59\\%$ , respectively. Such observation successfully reveals the vulnerability of GNN fairness under our node injection-based attacks. ", "page_idx": 7}, {"type": "text", "text": "\u2022 On three fairness-aware models, FairGNN, FairVGNN, and FairSIN, NIFA still causes noticeable fairness impacts. For example, the $\\Delta_{E O}$ of FairVGNN on Pokec-z increases from $2.59\\%$ to $9.28\\%$ , a nearly fourfold increase. It indicates that even fairness-aware GNN models are also vulnerable to our attack, highlighting the urgency of proposing more robust fairness mechanisms. ", "page_idx": 7}, {"type": "text", "text": "\u2022 Instead of sacrificing the utility of victim GNNs for better fairness attack results, all victim models\u2019 accuracy is only slightly impacted on all datasets, which illustrates the distinction between fairness attacks and utility attacks, and underscores NIFA\u2019s deceptive nature for administrators. ", "page_idx": 7}, {"type": "text", "text": "5.3 Comparison with other attack Models ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "In this section, we aim to compare NIFA with several competitors on graph attacks. Specifically, we choose six well-established attackers on either utility or fairness as our baselines, including AFGSM [36], TDGIA [47], $\\mathrm{G^{2}A2C}$ [12], FA-GNN [11], FATE [13], and G-FairAttack [41]. For all baselines, the victim model is set as GCN, and the numbers of injected nodes or modified edges are set to be the same as ours for a fair comparison. Note that, both FATE and G-FairAttack fail to deploy on Pokec-z and Pokec-n due to scalability issues3. Results after repeating five times are shown in Table 3. ", "page_idx": 7}, {"type": "text", "text": "", "page_idx": 8}, {"type": "text", "text": "It can be seen that NIFA consistently achieves the state-of-the-art fairness attack performance on three datasets. The reasons might be two-fold: 1) the utility attack methods are mainly designed to impact the accuracy of victim models, while overlooking the fairness objectives. 2) As pioneering works in fairness attacks on GNNs, all baselines on fairness attacks need to modify the original graph, such as adding or removing some edges or modifying features of real nodes. For deceptiveness consideration, their modifications are usually constrained by a small budget. However, NIFA introduces new nodes into the original graph through node injection and can optimize the injected nodes in a relatively larger feature space. Such superiority of node injection attack helps NIFA have a greater impact on the original graph from the feature perspectives. ", "page_idx": 8}, {"type": "text", "text": "5.4 Ablation study ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this part, we conduct ablation experiments to prove the effectiveness of the uncertaintymaximization principle, homophily-increase principle, and iterative training strategy, respectively. In detail, we consider the following three variants of NIFA. 1) NIFA-U: the uncertaintymaximization principle is removed, and we randomly choose targeted nodes from the labeled nodes. 2) NIFA- $\\mathcal{H}$ : we still choose real nodes with the top ${\\bf k}\\%$ model uncertainty as the targeted nodes, but the homophily-increase principle is removed, i.e. each injected node may connect with targeted nodes from different sensitive groups simultaneously. 3) NIFA-I: we remove the iterative training strategy here, which means that the surrogate model is trained on the clean graph in advance, and the feature optimization process will only involve the training process of injected feature matrix. For all variants, we set GCN as the victim model. ", "page_idx": 8}, {"type": "text", "text": "The results are reported in Figure 2, where we can have the following observations. Firstly, after removing the uncertainty-maximization principle (NIFA-U), the fairness attack performance consistently decreases on three datasets. This is expected since the concept of uncertainty helps NIFA find more vulnerable nodes, thus improving the attack ", "page_idx": 8}, {"type": "image", "img_path": "LuqrIkGuru/tmp/689286802f14f3146ebefacdc57e2f85673d071b0cbcab3514dc5fb905286259.jpg", "img_caption": ["Figure 2: Ablation study of each module in NIFA "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "effectiveness. Secondly, after removing the homophily-increase principle (NIFA-H), the attack performance drops obviously, which verifies the homophily-ratio is crucial in GNN fairness. Finally, without iterative training during feature optimization (NIFA-I), the attack performance decreases slightly on all datasets. The main reason is that the iterative training strategy could help NIFA to have better robustness to dynamic victim models. ", "page_idx": 8}, {"type": "text", "text": "6 Defense discussion to fairness attacks on GNNs ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "As previously emphasized, our intrinsic aim is to unveil the vulnerabilities of existing GNN models in terms of fairness, thereby inspiring related defense research. In fact, as an emerging field that is just beginning to be explored, defense strategies against GNN fairness attacks are relatively scarce. However, we still can summarize several key insights from NIFA for further careful study: ", "page_idx": 8}, {"type": "text", "text": "Reliable training nodes. One key assumption in NIFA is that the nodes with high model uncertainty will be much easier to be attacked, which can also be supported by the ablation study in Section 5.4. In this way, administrators can pay more attention to these nodes and their abnormal neighbors for defense purposes. For example, engineers can pre-train a model to detect the abnormal nodes or edges in advance, especially those that emerged recently in the training data, and weaken their impacts on the model by randomly masking these nodes or edges in the input graph or decreasing their weights in the message propagation during the training of GNNs. ", "page_idx": 8}, {"type": "image", "img_path": "LuqrIkGuru/tmp/72ef0a17473fb42d29ad3f52b074a712333baa6c02b930df4a8df91ef4790ae1.jpg", "img_caption": ["Figure 3: Defense performance on Pokec-z with masking $\\eta$ training nodes with the highest uncertainty "], "img_footnote": [], "page_idx": 8}, {"type": "text", "text": "", "page_idx": 9}, {"type": "text", "text": "To verify our assumption, we conduct a simple experiment by removing a proportion of nodes $(\\eta)$ with the highest uncertainty $U$ from supervision signals after the attack. Similarly, GCN [10] is employed as the victim model and we gradually tune $\\eta$ from 0 to 0.6 with step 0.1, where $\\eta=0$ means no defense is involved. The performance of NIFA on the Pokec-z dataset with different $\\eta$ is illustrated in Figure 3. It can be seen that, since NIFA mainly focuses on attacking nodes with high uncertainty, after masking a part of these nodes during the training stage, the fairness attack performance of NIFA gradually decreases with a small fluctuation in accuracy. However, it is worth noting that although such an intuitive strategy can defend the attack from NIFA to some extent, there is still obvious fairness deterioration compared with the performance of clean GCN in Table 2 $(\\Delta_{S P}{=}7.13$ , $\\Delta_{E O}{=}5.10_{\\cdot}$ ). More dedicated and effective defense mechanisms in the future are still in demand. ", "page_idx": 9}, {"type": "text", "text": "Strengthen the connections among groups. One main reason behind the success of NIFA in fairness attack is the guidance of the homophily-increase principle during node injection. The ablation study in Appendix 5.4 also provides empirical evidence for this claim. As we analyze in Section 4.2, NIFA will lead to the increase of node-level homophily-ratio, which means more sensitive-related information will be aggregated and enlarged within the group. Given this, we believe that an effective defensive strategy is to strengthen the information propagation among different sensitive groups, thus preventing the risks of information cocoons [22, 25] and fairness issues. ", "page_idx": 9}, {"type": "text", "text": "Fairness auditing. At last, we find that a crucial assumption in NIFA and other research [11, 13, 41] is that GNN model administrators will only audit the utility metrics of the models, such as accuracy or F1-scores. Therefore, as long as attackers can ensure that the model utility is not affected excessively, it will be hard for administrators to realize the attack. Consequently, we strongly suggest that model administrators should also incorporate fairness-related metrics into their monitoring scopes, especially before model deployment or during the beta testing phase, thus, mitigating the potential broader negative impacts and social risks. For instance, if an updated GNN model suddenly demonstrates obvious fairness deterioration compared with the previous versions, the model administrators should be careful about the potential fairness attacks. However, the challenge of this approach mainly lies in the diverse definitions of fairness, such as group fairness [5, 23], individual fairness [6], etc., and group fairness based on different sensitive attributes [5, 38] or structures [21, 22] may further lead to different definitions. Therefore, model administrators might need prior knowledge or expertise to determine what kinds of fairness metrics to be included in their monitoring scopes. ", "page_idx": 9}, {"type": "text", "text": "7 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we aim to examine the vulnerability of GNN fairness under adversarial attacks, thus mitigating the potential risks when applying GNNs in the real world. All existing fairness attacks on GNNs require modifying the connectivity or features of existing nodes, which is typically infeasible in reality. To this end, we propose a node injection-based poisoning attack namely NIFA. In detail, NIFA first proposes two novel principles for node injection operations and then designs multiple objective functions to guide the feature optimization of injected nodes. Extensive experiments on three datasets demonstrate that NIFA can effectively attack most mainstream GNNs and fairnessaware GNNs with an unnoticeable perturbation rate and utility degradation. Our work highlights the vulnerabilities of GNNs to node injection-based fairness attacks and sheds light on future research about robust fair GNNs and defensive mechanisms for potential fairness attacks. ", "page_idx": 9}, {"type": "text", "text": "Limitations. Firstly, NIFA is still under the settings of gray-box attacks, which requires accessibility to the labels and sensitive attributes. We acknowledge that such information may not always be available and we leave the extensions to the more realistic black-box attack settings as future work. Moreover, although we present some insights on the defense strategies of GNN fairness, more effective defense measures are still under-explored, calling for more future research efforts. At last, currently we only focus on fairness based on sensitive attributes, while neglecting the fairness based on graph structures. Since different fairness may stem from different sources, we leave this as our future work. ", "page_idx": 9}, {"type": "text", "text": "Acknowledgement ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "The work is supported by the National Natural Science Foundation of China (No.62172174). The authors would also like to thank Xiran Song and Jianxun Lian for their suggestions and contributions. ", "page_idx": 10}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 10}, {"type": "text", "text": "[1] C. Agarwal, H. Lakkaraju, and M. Zitnik. Towards a unified framework for fair and stable graph representation learning. In Proceedings of the Thirty-seventh Conference on Uncertainty in Artificial Intelligence, UAI 2021, Virtual Event, July 27-30, 2021, volume 161 of Proceedings of Machine Learning Research, pages 2114\u20132124. AUAI Press, 2021.   \n[2] A. Bojchevski, O. Shchur, D. Zu\u00a8gner, and S. Gu\u00a8nnemann. Netgan: Generating graphs via random walks. In Proceedings of the Thirty-fifth International Conference on Machine Learning, ICML 2018, pages 610\u2013619. PMLR, 2018.   \n[3] A. Chhabra, P. Li, P. Mohapatra, and H. Liu. Robust fair clustering: A novel fairness attack and defense framework. In Proceedings of the Eleventh International Conference on Learning Representations, ICLR 2023, Kigali, Rwanda, May 1-5, 2023. OpenReview.net, 2023. [4] M. Cos\u00b8kun and M. Koyutu\u00a8rk. Node similarity-based graph convolution for link prediction in biological networks. Bioinformatics, 37(23):4501\u20134508, 2021.   \n[5] E. Dai and S. Wang. Say no to the discrimination: Learning fair graph neural networks with limited sensitive attribute information. In Proceedings of the Fourteenth ACM International Conference on Web Search and Data Mining, WSDM 2021, Virtual Event, Israel, March 8-12, 2021, pages 680\u2013688. ACM, 2021.   \n[6] Y. Dong, J. Kang, H. Tong, and J. Li. Individual fairness for graph neural networks: A ranking based approach. In Proceedings of the Twenty-seventh ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2021, Virtual Event, Singapore, August 14-18, 2021, page 300\u2013310, New York, NY, USA, 2021. ACM.   \n[7] Y. Dong, N. Liu, B. Jalaian, and J. Li. EDITS: modeling and mitigating data bias for graph neural networks. In Proceedings of the Thirty-first ACM Web Conference, WWW 2022, Virtual Event, Lyon, France, April 25-29, 2022, pages 1259\u20131269. ACM, 2022.   \n[8] L. Du, X. Shi, Q. Fu, X. Ma, H. Liu, S. Han, and D. Zhang. Gbk-gnn: Gated bi-kernel graph neural networks for modeling both homophily and heterophily. In Proceedings of the Thirtyfirst ACM Web Conference, WWW 2022, Virtual Event, Lyon, France, April 25-29, 2022, page 1550\u20131558. ACM, 2022.   \n[9] Y. Gal and Z. Ghahramani. Dropout as a bayesian approximation: Representing model uncertainty in deep learning. In Proceedings of the Thirty-third International Conference on Machine Learning, ICML 2016, pages 1050\u20131059. PMLR, 2016.   \n[10] W. L. Hamilton, Z. Ying, and J. Leskovec. Inductive representation learning on large graphs. In Proceedings of Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems 2017, NeurIPS 2017, Long Beach, CA, USA, December 4-9, 2017, pages 1024\u20131034, 2017.   \n[11] H. Hussain, M. Cao, S. Sikdar, D. Helic, E. Lex, M. Strohmaier, and R. Kern. Adversarial inter-group link injection degrades the fairness of graph neural networks. In Proceedings of the 2022 IEEE International Conference on Data Mining, ICDM 2022, Orlando, FL, USA, November 28 - Dec. 1, 2022, pages 975\u2013980. IEEE, 2022.   \n[12] M. Ju, Y. Fan, C. Zhang, and Y. Ye. Let graph be the go board: gradient-free node injection attack for graph neural networks via reinforcement learning. In Proceedings of the Thirty-seventh AAAI Conference on Artificial Intelligence, AAAI 2023, Washington, DC, USA, February 7-14, 2023, pages 4383\u20134390. AAAI Press, 2023.   \n[13] J. Kang, Y. Xia, R. Maciejewski, J. Luo, and H. Tong. Deceptive fairness attacks on graphs via meta learning. In Proceedings of the Twelfth International Conference on Learning Representations, ICLR 2024, Vienna Austria, May 7-11, 2024. OpenReview.net, 2024.   \n[14] T. N. Kipf and M. Welling. Semi-supervised classification with graph convolutional networks. In Proceedings of the Fifth International Conference on Learning Representations, ICLR 2017, Toulon, France, April 24-26, 2017. OpenReview.net, 2017.   \n[15] J. Klicpera, A. Bojchevski, and S. Gu\u00a8nnemann. Predict then propagate: Graph neural networks meet personalized pagerank. In Proceedings of the Seventh International Conference on Learning Representations, ICLR 2019, New Orleans, LA, USA, May 6-9, 2019. OpenReview.net, 2019.   \n[16] Y. Li, H. Chen, Z. Fu, Y. Ge, and Y. Zhang. User-oriented fairness in recommendation. In Proceedings of the Thirtieth ACM Web Conference, WWW 2021, Virtual Event, Ljubljana, Slovenia, April 19-23, 2021, pages 624\u2013632. ACM, 2021.   \n[17] H. Ling, Z. Jiang, Y. Luo, S. Ji, and N. Zou. Learning fair graph representations via automated data augmentations. In Proceedings of the Eleventh International Conference on Learning Representations, ICLR 2023, Kigali, Rwanda, May 1-5, 2023. OpenReview.net, 2023.   \n[18] X. Liu, W. Jin, Y. Ma, Y. Li, H. Liu, Y. Wang, M. Yan, and J. Tang. Elastic graph neural networks. In Proceedings of the Thirty-eigth International Conference on Machine Learning, ICML 2021, Virtual Event, July 18-24, 2021, pages 6837\u20136849. PMLR, 2021.   \n[19] X. Liu, S. Si, J. Zhu, Y. Li, and C. Hsieh. A unified framework for data poisoning attack to graph-based semi-supervised learning. In Proceedings of Advances in Neural Information Processing Systems 32: Annual Conference on Neural Information Processing Systems 2019, NeurIPS 2019, Vancouver, BC, Canada, December 8-14, 2019, pages 9777\u20139787, 2019.   \n[20] Y. Liu, X. Ao, F. Feng, and Q. He. UD-GNN: uncertainty-aware debiased training on semihomophilous graphs. In Proceedings of the Twenty-eighth ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2022, Washington, DC, USA, August 14-18, 2022, pages 1131\u20131140. ACM, 2022.   \n[21] Z. Liu, T. Nguyen, and Y. Fang. On generalized degree fairness in graph neural networks. In Proceedings of the Thirty-Seventh AAAI Conference on Artificial Intelligence, AAAI 2023, Washington, DC, USA, February 7-14, 2023, pages 4525\u20134533. AAAI Press, 2023.   \n[22] Z. Luo, H. Huang, J. Lian, X. Song, X. Xie, and H. Jin. Cross-links matter for link prediction: Rethinking the debiased gnn from a data perspective. In Proceedings of Advances in Neural Information Processing Systems 36: Annual Conference on Neural Information Processing Systems 2023, NeurIPS 2023, New Orleans, LA, USA, December 10-16, 2023, 2023.   \n[23] Z. Luo, J. Lian, H. Huang, H. Jin, and X. Xie. Ada-gnn: Adapting to local patterns for improving graph neural networks. In Proceedings of the Fifteenth ACM International Conference on Web Search and Data Mining, WSDM 2022, Virtual Event / Tempe, AZ, USA, February 21-25, 2022, pages 638\u2013647. ACM, 2022.   \n[24] Y. Ma, S. Wang, T. Derr, L. Wu, and J. Tang. Graph adversarial attack via rewiring. In Proceedings of the Twenty-seventh ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2021, Virtual Event, Singapore, August 14-18, 2021, pages 1161\u20131169. ACM, 2021.   \n[25] F. Masrour, T. Wilson, H. Yan, P. Tan, and A. Esfahanian. Bursting the filter bubble: Fairnessaware network link prediction. In Proceedings of the Thirty-fourth AAAI Conference on Artificial Intelligence, AAAI 2020, New York, NY, USA, February 7-12, 2020, pages 841\u2013848. AAAI Press, 2020.   \n[26] N. Mehrabi, M. Naveed, F. Morstatter, and A. Galstyan. Exacerbating algorithmic bias through fairness attacks. In Proceedings of the Thirty-fifth AAAI Conference on Artificial Intelligence, AAAI 2021, Virtual Event, February 2-9, 2021, pages 8930\u20138938. AAAI Press, 2021.   \n[27] B. Rozemberczki, C. T. Hoyt, A. Gogleva, P. Grabowski, K. Karis, A. Lamov, A. Nikolov, S. Nilsson, M. Ughetto, Y. Wang, T. Derr, and B. M. Gyori. Chemicalx: A deep learning library for drug pair scoring. In Proceedings of the Twenty-eighth ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2022, Washington, DC, USA, August 14-18, 2022, pages 3819\u20133828. ACM, 2022.   \n[28] U. Singer and K. Radinsky. Eqgnn: Equalized node opportunity in graphs. In Proceedings of the Thirty-sixth AAAI Conference on Artificial Intelligence, AAAI 2022, Virtual Event, February 22 - March 1, 2022, pages 8333\u20138341. AAAI Press, 2022.   \n[29] D. Solans, B. Biggio, and C. Castillo. Poisoning attacks on algorithmic fairness. In Proceedings of the Machine Learning and Knowledge Discovery in Databases - European Conference, ECML PKDD 2020, Ghent, Belgium, September 14-18, 2020, pages 162\u2013177. Springer, 2020.   \n[30] X. Song, J. Lian, H. Huang, Z. Luo, W. Zhou, X. Lin, M. Wu, C. Li, X. Xie, and H. Jin. xgcn: An extreme graph convolutional network for large-scale social link prediction. In Proceedings of the Thirty-second ACM Web Conference, WWW 2023, Austin, Texas, USA, April 30 - May 4, 2023, pages 349\u2013359. ACM, 2023.   \n[31] X. Song, J. Lian, H. Huang, M. Wu, H. Jin, and X. Xie. Friend recommendations with selfrescaling graph neural networks. In Proceedings of the Twenty-eighth ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2022, Washington, DC, USA, August 14-18, 2022, pages 3909\u20133919, 2022.   \n[32] Y. Sun, S. Wang, X. Tang, T. Hsieh, and V. G. Honavar. Adversarial attacks on graph neural networks via node injections: A hierarchical reinforcement learning approach. In Proceedings of the Twenty-ninth ACM Web Conference, WWW 2020, Taipei, Taiwan, April 20-24, 2020, pages 673\u2013683. ACM / IW3C2, 2020.   \n[33] X. Tang, H. Yao, Y. Sun, Y. Wang, J. Tang, C. C. Aggarwal, P. Mitra, and S. Wang. Investigating and mitigating degree-related biases in graph convoltuional networks. In Proceedings of the Twenty-ninth ACM International Conference on Information and Knowledge Management, CIKM 2020, Virtual Event, Ireland, October 19-23, 2020, pages 1435\u20131444. ACM, 2020.   \n[34] S. Tao, Q. Cao, H. Shen, J. Huang, Y. Wu, and X. Cheng. Single node injection attack against graph neural networks. In Proceedings of the Thirtieth ACM International Conference on Information and Knowledge Management, CIKM 2021, Virtual Event, Queensland, Australia, November 1-5, 2021, pages 1794\u20131803. ACM, 2021.   \n[35] L. Van der Maaten and G. Hinton. Visualizing data using t-sne. Journal of Machine Learning Research, 9(11), 2008.   \n[36] J. Wang, M. Luo, F. Suya, J. Li, Z. Yang, and Q. Zheng. Scalable attack on graph data by injecting vicious nodes. Data Min. Knowl. Discov., 34(5):1363\u20131389, 2020.   \n[37] N. Wang, L. Lin, J. Li, and H. Wang. Unbiased graph embedding with biased graph observations. In Proceedings of the Thirty-first ACM Web Conference, WWW 2022, Virtual Event, Lyon, France, April 25-29, 2022, pages 1423\u20131433. ACM, 2022.   \n[38] Y. Wang, Y. Zhao, Y. Dong, H. Chen, J. Li, and T. Derr. Improving fairness in graph neural networks via mitigating sensitive attribute leakage. In Proceedings of the Twenty-eighth ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2022, Washington, DC, USA, August 14-18, 2022, pages 1938\u20131948. ACM, 2022.   \n[39] F. Wu, A. H. S. Jr., T. Zhang, C. Fifty, T. Yu, and K. Q. Weinberger. Simplifying graph convolutional networks. In Proceedings of the Thirty-sixth International Conference on Machine Learning, ICML 2019, Long Beach, California, USA, Jun 9-15, 2019, pages 6861\u20136871. PMLR, 2019.   \n[40] C. Yang, J. Liu, Y. Yan, and C. Shi. Fairsin: Achieving fairness in graph neural networks through sensitive information neutralization. In Proceedings of the Thirty-eighth AAAI Conference on Artificial Intelligence, AAAI 2024, Vancouver, Canada, February 20-27, 2024, pages 9241\u20139249. AAAI Press, 2024.   \n[41] B. Zhang, Y. Dong, C. Chen, Y. Zhu, M. Luo, and J. Li. Adversarial attacks on fairness of graph neural networks. In Proceedings of the Twelfth International Conference on Learning Representations, ICLR 2024, Vienna Austria, May 7-11, 2024. OpenReview.net, 2024.   \n[42] H. Zhang, B. Wu, X. Yuan, S. Pan, H. Tong, and J. Pei. Trustworthy graph neural networks: Aspects, methods, and trends. Proc. IEEE, 112(2):97\u2013139, 2024.   \n[43] X. Zhang, P. Bao, and S. Pan. Maximizing malicious influence in node injection attack. In Proceedings of the Seventeenth ACM International Conference on Web Search and Data Mining, WSDM 2024, Merida, Mexico, March 4-8, 2024, pages 958\u2013966. ACM, 2024.   \n[44] X. Zhang and M. Zitnik. Gnnguard: Defending graph neural networks against adversarial attacks. In Proceedings of Advances in Neural Information Processing Systems 33: Annual Conference on Neural Information Processing Systems 2020, NeurIPS 2020, Virtual, December 6-12, 2020, 2020.   \n[45] H. Zhu, G. Fu, Z. Guo, Z. Zhang, T. Xiao, and S. Wang. Fairness-aware message passing for graph neural networks. CoRR, abs/2306.11132, 2023.   \n[46] Y. Zhu, J. Li, L. Chen, and Z. Zheng. The devil is in the data: Learning fair graph neural networks via partial knowledge distillation. In Proceedings of the Seventeenth ACM International Conference on Web Search and Data Mining, WSDM 2024, Merida, Mexico, March 4-8, 2024, pages 1012\u20131021. ACM, 2024.   \n[47] X. Zou, Q. Zheng, Y. Dong, X. Guan, E. Kharlamov, J. Lu, and J. Tang. TDGIA: effective injection attacks on graph neural networks. In Proceedings of the Twenty-seventh ACM SIGKDD Conference on Knowledge Discovery and Data Mining, KDD 2021, Virtual Event, Singapore, August 14-18, 2021, pages 2461\u20132471. ACM, 2021.   \n[48] D. Z\u00a8ugner, A. Akbarnejad, and S. G\u00a8unnemann. Adversarial attacks on neural networks for graph data. In Proceedings of the Twenty-fourth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD 2018, London, UK, August 19-23, 2018, pages 2847\u20132856. ACM, 2018. ", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "A Ethical consideration ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this study, we propose a fairness attack towards GNN models via node injections. It is worth noting that the main purpose of this work is to reveal the vulnerability of current GNN models to fairness attacks, thereby inspiring and motivating both industrial and academic researchers to pay more attention to future potential attacks and enhancing the robustness of GNN fairness. We acknowledge the potential for our research to be misused or exploited by malicious hackers and to have real-world implications or even harm. Therefore, we will open-source our code under the CC-BY-NC-ND license4 in the future, which means that the associated code cannot be used for any commercial purposes, and no derivatives or adaptations of the work are permitted. Additionally, we discuss some feasible defense mechanisms in Section 6, which we believe can to some extent mitigate the fairness attacks proposed in our work and hopefully inspire future fairness defenses. ", "page_idx": 14}, {"type": "text", "text": "B Attack settings ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "In this section, we would like to explicitly introduce our attack settings from the following aspects: ", "page_idx": 14}, {"type": "text", "text": "Attack stage. Attacks can be categorized into two types according to the time when the attacks take place [42]: poisoning attack and evasion attack. Poisoning attacks occur at the training phase of victim models, which will lead to poisoned models. In contrast, evasion attacks target the inference phase, and can not affect the model parameters. In this work, NIFA belongs to the poisoning attacks. ", "page_idx": 14}, {"type": "text", "text": "Attacker\u2019s knowledge. Generally, according to the knowledge of attackers, the attack methods can be categorized into three types including white-box attack, black-box attack and gray-box attack [42]. As we introduced in Section 3, we propose NIFA within the gray-box attack settings to make our attack more practical in the real world, which is also consistent with multiple prior research on GNN attacks [11, 32, 41]. Different from white-box attacks and black-box attacks, gray-box attacks mean that attackers can only access the training data, including the input graph $\\mathcal{G}$ , the labels $\\boldsymbol{\\wp}$ and the sensitive attribute $s$ of each node. Note that, the model architecture and parameters are invisible to attackers under the gray-box attack settings, which leads to that the attackers need to train a surrogate model in advance to assess the effectiveness of their proposed attacks. ", "page_idx": 14}, {"type": "text", "text": "Attacker\u2019s capability. One merit of NIFA is that there is no need for the attackers to have the authority to modify the existing graph structure, such as adding or deleting edges between existing real nodes, or modifying the existing real nodes\u2019 features. In contrast, NIFA injects $\\nu_{I}$ malicious nodes and poisons the graph $\\mathcal{G}$ into $\\mathcal{G}^{\\prime}$ to launch an attack, which is much more practical for the attackers in the real world. For example, in social networks the attackers only need to sign up multiple zombie accounts and interact with real accounts. Note that, different from some injectionbased attack [12, 32], NIFA will not modify the training set and true node label set $\\boldsymbol{\\wp}$ , as such operations are typically infeasible in the real world. The intrinsic idea of NIFA is to impact the GNN training process through massage propagation on a poisoned graph. ", "page_idx": 14}, {"type": "text", "text": "Within the gray-box attack settings, we also assume that the attackers have sufficient computational resources and budget to train a surrogate model and have access to the real graph as input. Similar to prior attack methods [32], attackers are also required to set thresholds $b$ and $d$ for the number of injected nodes and their degrees respectively to make NIFA deceptive and unnoticeable. ", "page_idx": 14}, {"type": "text", "text": "C Proof ", "text_level": 1, "page_idx": 14}, {"type": "text", "text": "Lemma 1. For target node u that will connect with injected nodes, our proposed node injection strategy will lead to the increase of node-level homophily-ratio $\\mathcal{H}_{u}$ . ", "page_idx": 14}, {"type": "text", "text": "Proof. Given a target node $u$ with $k$ neighbors that have the same sensitive attribute with $u$ , we simply assume it will connect with $n$ injected nodes after node injection. Since all injected nodes in our proposed node injection belong to the same sensitive attribute as target node $u$ , then the node-level homophily-ratio after node injection $\\mathcal{H}_{u}^{\\prime}$ is: ", "page_idx": 14}, {"type": "equation", "text": "$$\n\\mathcal{H}_{u}^{\\prime}=\\frac{k+n}{|\\mathcal{N}_{u}|+n}\\geq\\frac{k}{|\\mathcal{N}_{u}|}=\\mathcal{H}_{u}\n$$", "text_format": "latex", "page_idx": 14}, {"type": "text", "text": "Input: Graph $\\mathcal{G}$ . Hyper-parameters: node budget $b$ , edge budget $d,\\alpha$ and $\\beta$ , learning rates $\\gamma^{S},\\gamma^{F}$ .   \nOutput: Poisoned graph $\\mathcal{G}^{\\prime}$ .   \n1: Initialize Bayesian GNN\u2019s parameter $\\theta_{B}$ , surrogate model\u2019s parameter $\\theta_{S}$ and injected nodes\u2019   \nfeature matrix $\\mathbf{X}_{I}$ .   \n2: Train the Bayesian GNN by Eq. (8) and Eq. (9).   \n3: Estimate the node uncertainty $U$ in the original graph $\\mathcal{G}$ by Eq. (10) and select the target nodes.   \n4: Connect the injected nodes with target nodes according to the homophily-increase principle.   \n5: for $i t e r=1$ to max iter do   \n6: for $s t e p=1$ to max step do   \n7: Compute cross-entropy loss $L_{C E}$ for $\\boldsymbol{S}$ by Eq. (11).   \n8: Update surrogate model: $\\theta_{S}\\gets\\theta_{S}+\\gamma^{S}\\cdot\\nabla_{\\bar{\\theta_{S}}}L_{C E}$ .   \n9: end for   \n10: for $s t e p=1$ to max step do   \n11: Compute $L$ by Eq. (15).   \n12: Update injected feature: $\\mathbf{X}_{I}\\leftarrow\\mathbf{X}_{I}+\\gamma^{F}\\cdot\\nabla_{\\mathbf{X}_{I}}L$ .   \n13: end for   \n14: Clamp $\\mathbf{X}_{I}$ between min and max of $\\mathbf{X}$ .   \n15: end for   \n16: if X is discrete then   \n17: Round $\\mathbf{X}_{I}$ into integer.   \n18: end if   \n19: return $\\mathcal{G}^{\\prime}$ ", "page_idx": 15}, {"type": "text", "text": "Such inequality holds true when $\\vert\\mathcal{N}_{u}\\vert\\ge k$ . ", "page_idx": 15}, {"type": "text", "text": "D Implementation algorithm ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "Due to space limitation, here we provide the complete training process of NIFA in Algorithm 1. The training process and evaluation process are also literally described in Section 4.4. ", "page_idx": 15}, {"type": "text", "text": "E Additional descriptions on victim models ", "text_level": 1, "page_idx": 15}, {"type": "text", "text": "In this part, we give an introduction to the victim models used in our experiment. ", "page_idx": 15}, {"type": "text", "text": "\u2022 GCN [10]: Borrowing the concept of convolution from the computer vision domain, GCN employs convolution operation on the graph from a spectral perspective to learn the node embeddings. ", "page_idx": 15}, {"type": "text", "text": "\u2022 GraphSAGE [14]: Given the potential neighborhood explosion issues in GCN, GraphSAGE samples a fixed number of neighbors at each layer during neighborhood aggregation, which greatly improves the training efficiency. ", "page_idx": 15}, {"type": "text", "text": "\u2022 APPNP [15]: Inspired by PageRank, APPNP decouples the prediction and propagation in the training process, which resolves inherent limited-range issues in message-passing models without introducing any additional parameters. ", "page_idx": 15}, {"type": "text", "text": "\u2022 SGC [39]: SGC empirically finds the redundancy of non-linear activation function, and achieves comparable performance with much higher efficiency. ", "page_idx": 15}, {"type": "text", "text": "\u2022 FairGNN [5]: Through proposing a sensitive attribute estimator and an adversarial learning module, FairGNN maintains high classification accuracy while reducing unfairness in scenarios with limited sensitive attribute information. ", "page_idx": 15}, {"type": "text", "text": "\u2022 FairVGNN [38]: FairVGNN discovers the leakage of sensitive information during information propagation of GNN models, and generates fair node features by automatically identifying and masking sensitive-correlated features. ", "page_idx": 15}, {"type": "text", "text": "\u2022 FairSIN [40]: Instead of filtering out sensitive-related information for fairness, FairSIN deploys a novel sensitive information neutralization mechanism. Specifically, FairSIN will learn to introduce additional fairness facilitating features (F3) during message propagation to neutralize sensitive information while providing more non-sensitive information. ", "page_idx": 15}, {"type": "text", "text": "F Additional descriptions on baselines ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "In this section, we will introduce more details about the baselines used in our experiments. ", "page_idx": 16}, {"type": "text", "text": "\u2022 AFGSM [36]: As a node injection-based attack, AFGSM designs an approximation strategy to linearize the victim model and then generates adversarial perturbation efficiently. In general, AFGSM is scalable to much larger graphs.   \n\u2022 TDGIA [47]: Aiming at attacking the model performance, TDGIA first introduces a topological edge selection strategy to select targeted nodes for node injection, and then generate injected features through smooth feature optimization.   \n\u2022 $\\mathbf{G}^{2}$ A2C [12]: Similar to NIPA [32], $\\mathrm{G^{2}A2C}$ also proposes a node injection attack through reinforcement learning \u2013 Actor Critic. Specifically, $\\mathrm{{G^{2}A2C}}$ devises three core modules including Node Generator, Edge Sampler, Value Predictor to model the full process of node injection.   \n\u2022 FA-GNN [11]: To the best of our knowledge, FA-GNN is the first work to conduct a fairness attack on GNNs. In detail, FA-GNN empirically discovers several edge injection strategies, which could impact the GNN fairness with slight utility compromise.   \n\u2022 FATE [13]: FATE is a meta-learning-based fairness attack framework for GNNs. To be concrete, FATE formulates the fairness attacks as a bi-level optimization problem, where the lower-level optimization guarantees the deceptiveness of an attack while the upper-level optimization is designed to maximize the bias functions.   \n\u2022 G-FairAttack [41]: As a poisoning fairness attack, G-FairAttack consists of two modules, including a surrogate loss function and following constrained optimization for deceptiveness. Like FATE and FA-GNN, G-FairAttack also belongs to graph modification attacks, i.e., the original link structure between existing nodes will be modified during the attack. ", "page_idx": 16}, {"type": "text", "text": "G Reproducibility details ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "The implementation details are first provided in Section 5.1 in the original paper. Here we would like to provide more implementation details from the following four aspects: ", "page_idx": 16}, {"type": "text", "text": "Environment. All experiments are conducted on a server with Intel(R) Xeon(R) Gold 5117 CPU $@$ 2.00GHz and 32 GB Tesla V100 GPU. The experimental environment is based on Ubuntu 18.04 with CUDA 11.0, and our implementation is based on Python 3.8 with PyTorch 1.12.1 and Deep Graph Library (DGL) 1.1.0. ", "page_idx": 16}, {"type": "text", "text": "Victim models. For all victim models, we set the learning rate as 0.001, and the hidden dimension as 128 after careful tuning. For most victim models, the dropout ratio is set to 0 by default. Specifically, for GCN and GraphSAGE, the layer number is set to 2, and we employ mean pooling aggregation for GraphSAGE. For SGC, the hop-number $k$ is set to 1. For APPNP, following the suggestions in the official paper, the teleport probability $\\alpha$ is set as 0.2, and we set the iteration number $k$ as 1 after careful tuning. For FairGNN, we employ the GAT as the backbone model, which shows a better performance in the original paper, and set the dropout ratio as 0.5. The objective weights $\\alpha$ and $\\beta$ are set as 4 and 0.01, respectively. For FairVGNN, GCN is set to be the backbone model, and we set the dropout ratio as 0.5. The prefix cutting threshold $\\epsilon$ is searched from $\\{0.01,0.1,1\\}$ , and the mask density $\\alpha$ is 0.5. The epochs for the generator, discriminator, and classifier are selected from $\\lbrace5,10\\rbrace$ as suggested in the official implementation. For FairSIN, we also utilize GCN as the backbone model, and we set the weight of neutralized feature $\\delta$ as 4 after tuning, and set the hidden dimension as 128 for a fair comparison. All learning rates involved in FairSIN are set to 0.001 after careful fine-tuning and other hyper-parameters are set according to the official implementations5. ", "page_idx": 16}, {"type": "text", "text": "Baselines details. For all baselines that involve graph structure manipulation, the numbers of injected nodes and edges on three datasets are made identical to the settings of our model for a fair comparison. For methods that only inject new nodes, such as AFGSM, TDGIA and G2A2C, we require the number of injected nodes and average degree of injected nodes to be the same as ours. For methods that require to modify the graph structure, such as FA-GNN, FATE and G-FairAttack, we set the number of modified edges to be the same with our injected edges, i.e. the added edges between injected nodes and original nodes. To be concrete, for the AFGSM, across all datasets, we utilize the direct attack setting and allow the model to perturb node features. For TDGIA, the weights $k_{1}$ , and $k_{2}$ , which are used for calculating topological vulnerability are set to 0.9 and 0.1, respectively. For $\\mathrm{G^{2}A2C}$ , the temperature of Gumbel-Softmax is set to 1.0, the discount factor is set to 0.95, and the Adam optimizer is utilized with a learning rate of $10^{-4}$ . Furthermore, we adopt early stopping with a patience of three epochs. For FA-GNN, we utilize the $D D$ strategy, which has the best attack performance in the original paper. For FATE, the perturbation mode is $\\it{f l l p}$ and the attack step is set to 3 as the official implementation6 suggested. For G-FairAttack, the proportion of candidate edges is set to 0.0001 for fast computation on our datasets, and we follow the default settings in the official repository7 for other hyper-parameters. It is worth noting that, G-FairAttack can be utilized as either an evasion attack or a poisoning attack according to the original paper, and we follow the poisoning attack settings to be the same with NIFA. ", "page_idx": 16}, {"type": "text", "text": "", "page_idx": 17}, {"type": "text", "text": "Details for implementing NIFA. We employ a twolayer GCN model as the surrogate model, whose hidden dimension is set to 128, and the dropout ratio is set to 0. The learning rates for optimizing the surrogate model and injected features are both set to 0.001 after tuning. The sampling times $T$ of the Bayesian Network is 20. The objective weights $\\alpha$ and $\\beta$ for all datasets are searched from $\\{0.005,0.01,0.02,0.05,0.1,0.2\\}$ and {2, $4,8,16\\}$ , respectively. The number of injected nodes is set to $1\\%$ of the number of labeled nodes in the original graph, and the degree of injected nodes $d$ is set to be 50, 50, and 24 on three datasets, respectively, which are the average node degrees in the original graph. As for the uncertainty threshold $k\\%$ , we search in a range of $\\left\\{0.\\dot{1},0.25,0.\\dot{5},0.75\\right\\}$ . The hyper-parameter analysis will be further elaborated in Appendix H.3. The max iter and max step in Algorithm 1 and other proposed hyper-parameters for each dataset are summarized in Table A1. ", "page_idx": 17}, {"type": "table", "img_path": "LuqrIkGuru/tmp/c01a17f5b65a808ce592ecb875285074d87ef2755737b5b94f765687e6b34789.jpg", "table_caption": ["Table A1: Hyper-parameters statistics "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "", "page_idx": 17}, {"type": "table", "img_path": "LuqrIkGuru/tmp/db881ca51e270438b4714c4e9c3246fbecc397233a652e219983d8c5c2e80817.jpg", "table_caption": ["Table A2: Comparison of the statistics on the clean graph (Perturbation rate is 0.00) and the graphs poisoned by NIFA with different perturbation rates. For better illustration, we also provide the relative rate of change $(|\\Delta|)$ in the table. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "H Additional experiments ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "H.1 In-depth analysis of the poisoned graph ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "As a poisoning attack, it is crucial to ensure that after the attack, the poisoned graph\u2019s characteristics should remain similar to that of the clean graph. Otherwise, administrators can easily notice the attack through abnormal graph structures or node features. To this end, we conduct an in-depth analysis of the poisoned graph by NIFA from the following two perspectives: ", "page_idx": 17}, {"type": "text", "text": "Structural analysis. Similar to prior work [2, 32], we investigate several key graph characteristics in this section, including Gini Coefficient, Assortativity, Power Law Exponent, Triangle Count, Relative Edge Distribution Entropy and Characteristic Path Length, whose definitions and implementations can be found here8. The graph statistics under different perturbation rates are shown in Table A2. It can be concluded that: (1) Thanks to the low perturbation rate required by NIFA, the poisoned graphs share quite similar characteristics with clean graphs. Under most cases, the relative rate of change $|\\Delta|$ is smaller than $1\\%$ , especially when the perturbation rate is small. (2) With the increase of perturbation rate, the poisoning attack becomes more obvious, which can be verified by the increased $|\\Delta|$ on all graph structure statistics. This observation further supports the necessity of requesting a low perturbation rate for an attack. (3) Several key statistics showcase a consistent trend across the three datasets as the perturbation rate increases. For example, with the increase in attack intensity, the degree assortativity consistently decreases on three datasets, indicating that there are more connections between nodes with significantly different degrees due to the injection of malicious nodes. Similar observations can also be found in key statistics like Triangle Count, Gini Coefficient and Characteristic Path Length, which implies that these statistics can be potentially utilized for fairness attack defense and auditing. ", "page_idx": 18}, {"type": "text", "text": "Feature analysis. Besides graph structural analysis, we also conduct experiments to analyze the nodes\u2019 features of the poisoned graph. In detail, after conducting fairness attacks through NIFA, for both labeled nodes in the real graph and injected nodes, we illustrate their features\u2019 visualization results based on t-SNE [35] in Figure A1. Note that, since the number of injected nodes is ", "page_idx": 18}, {"type": "text", "text": "much smaller than that of the original labeled nodes, we slightly increase the scatter size of injected nodes for better visualization. ", "page_idx": 18}, {"type": "image", "img_path": "LuqrIkGuru/tmp/2829b4c159f73799fce57fcea9190791db3ed011e382c96d8647a386a1c07da0.jpg", "img_caption": ["Figure A1: T-SNE visualization of poisoned graph\u2019s node features "], "img_footnote": [], "page_idx": 18}, {"type": "text", "text": "It can be seen that, 1) the feature layouts of Pokec-z and Pokec-n are quite similar, since both datasets are sampled from the same social graph. 2) On all three datasets, the distributions of injected nodes by NIFA are relatively diverse, which have no obvious patterns, and are hard to recognize from the original labeled nodes. Such observation further verifies the feature deceptiveness of NIFA. ", "page_idx": 18}, {"type": "text", "text": "H.2 Alternative analysis in node selection ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "During the node injection process, NIFA proposes an uncertainty-maximization principle and selects target nodes with the highest model uncertainty score. In fact, besides estimating model uncertainty, there are other alternative methods for finding vulnerable nodes. For example, TDGIA [47] introduces the concept of \u201dtopological vulnerability\u201d, ", "page_idx": 18}, {"type": "table", "img_path": "LuqrIkGuru/tmp/69e47fdafe0670a02e59e41171fbe635b352758273cd82fe8e83630e8bc866d2.jpg", "table_caption": ["Table A3: Attack performance $(\\%)$ with different target node selection strategies. The best attack performance is bolded. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "and selects nodes with low degrees as target nodes. In this part, we also conduct experiments with selecting target nodes with the lowest degree as a variant of NIFA. The victim model is GCN. ", "page_idx": 18}, {"type": "text", "text": "The results are shown in Table A3. It can be seen that, degree-based node selection (denoted as \u201dDegree\u201d) also achieves promising attack performance compared with NIFA (denoted as \u201dUncertainty\u201d), which indicates that model uncertainty is not the only feasible criterion for target node selection. However, the degree-based selection may be ineffective when the graph is extremely dense and has few low-degree nodes, which deserves more careful study in the future. ", "page_idx": 18}, {"type": "text", "text": "H.3 Hyper-parameter analysis ", "text_level": 1, "page_idx": 18}, {"type": "text", "text": "To better understand the different roles of hyper-parameters in NIFA, we study the impact of $\\alpha$ , $\\beta$ , $b$ , and $k$ in this part where GCN is employed as the victim model. ", "page_idx": 18}, {"type": "text", "text": "The impact of $\\alpha$ and $\\beta$ . As the weights of objective functions in Eq. (15), the impacts of $\\alpha$ and $\\beta$ are illustrated in Figure A2 and Figure A3, respectively. For three datasets, they perform best at different $\\alpha$ and $\\beta$ values, indicating that the appropriate values of $\\alpha$ and $\\beta$ depend on the datasets. In contrast, the accuracy remains relatively stable with changes in $\\alpha$ and $\\beta$ , which indicates that our attack is utility-friendly. ", "page_idx": 19}, {"type": "text", "text": "The impact of node injection budget $b$ . We illustrate the impact of the node injection budget $b$ in Figure A4, where the $\\mathbf{X}$ -axis denotes the perturbation rate, i.e. the proportion of $b$ to the number of labeled nodes in the original graph. As expected, the increase of $b$ leads to better fairness attack performance in most cases with more obvious accuracy compromise. Empirically, 0.01 will be a near-optimal choice while being unnoticeable. ", "page_idx": 19}, {"type": "text", "text": "The impact of uncertainty threshold $k$ . The impact of $k$ is illustrated in Figure A5, where we tune $k\\%$ in a set of $\\left\\lbrace0.1,\\;0.25,\\;0.5,\\;0.75\\right\\rbrace$ . It can be seen ", "page_idx": 19}, {"type": "image", "img_path": "LuqrIkGuru/tmp/abfa605a2fbb69e0dc2aa9ce7d568a0de61e705581077b7435a0c84a63618be6.jpg", "img_caption": ["Figure A2: The impact of $\\alpha$ on three datasets "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "LuqrIkGuru/tmp/3227855ffe73e1326dcf1bcee54730cf81b32b49d87a4c3684062f393bdf366b.jpg", "img_caption": ["Figure A3: The impact of $\\beta$ on three datasets "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "LuqrIkGuru/tmp/79c50d915ec0805241d1cff5b7ddb36f4b1a7e1ad0eb536e2158a805ccf7c9ad.jpg", "img_caption": ["Figure A4: The impact of perturbation rate on three datasets "], "img_footnote": [], "page_idx": 19}, {"type": "image", "img_path": "LuqrIkGuru/tmp/4c884baee4a874564ef848691545ce8d504a6e5fc374b6c108558df10812283c.jpg", "img_caption": ["Figure A5: The impact of ${\\bf k}\\%$ on three datasets "], "img_footnote": [], "page_idx": 19}, {"type": "text", "text": "that all datasets show a similar preference for $k\\%$ with an optimal value of 0.5. Intuitively, with a higher $k\\%$ , it is hard for NIFA to attack the target nodes with low uncertainty, whereas, with a lower $k\\bar{\\%}$ , the impact of the attack will be limited by the insufficient number of targeted nodes. ", "page_idx": 19}, {"type": "text", "text": "H.4 Efficiency analysis ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "To evaluate the efficiency and scalability of NIFA, we would like to compare the attack time cost and memory cost between NIFA and two competitive baselines including FATE [13] and GFairAttack [41]. To be fair, the attack budgets for the three models are set to be the same in advance. We report their memory cost and time cost for finishing ", "page_idx": 19}, {"type": "table", "img_path": "LuqrIkGuru/tmp/8769633fca0e908926a3cb00c5c793d0a9ce15ee575f0f946fdb575e138f0ae2.jpg", "table_caption": ["Table A4: Efficiency Analysis of NIFA "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "poisoning attacks on Pokec-z, Pokec-n and DBLP in Table A4. The environment configurations for our experiments are introduced in Section G. It can be seen that, NIFA can be successfully deployed on three datasets with acceptable time cost and memory cost. In contrast, both FATE and G-FairAttack face scalability issues, especially when facing large graphs such as Pokec-z and Pokecn. As shown in Table 1, both Pokec-z and Pokec-n have much more edges compared with DBLP, which causes FATE to report OOM errors and G-FairAttack to fail to finish the attack within 72 hours. ", "page_idx": 19}, {"type": "text", "text": "H.5 Robustness to defense strategies ", "text_level": 1, "page_idx": 19}, {"type": "text", "text": "Besides the defense discussions in Section 6, we analyze the effectiveness of conventional defense strategies in this section. In detail, two classic GNN defense models \u2013 GNNGuard [44] and ElasticGNN [18] are deployed to test their defense capabilities against NIFA. It is worth noting that, both defense models are originally designed for the attacks on prediction utility. We conduct experiments on three datasets, and the victim model is GCN as default. As shown in Table A5, both defense models only maintain the utility performance and failed to fully eliminate the impact of fairness attacks. For example, compared with the performance after the attack, although ElasticGNN reduces the $\\Delta_{S P}$ from $17.36\\%$ to $13.53\\%$ , the fairness is still worse than that before the attack \u2013 $7.13\\%$ . We believe that the main reason behind such observation is that all these defense methods are designed for utility-targetted attacks, whose objectives are totally different from fairness attacks like NIFA. Such observations also indicate that more effective defense mechanisms are still in demand for fairness attacks on GNNs. ", "page_idx": 19}, {"type": "table", "img_path": "LuqrIkGuru/tmp/8da34e20ffcbea9ffbc2a5ce113ea632e10b131428af724e71f7279a33eda0b6.jpg", "table_caption": ["Table A5: The performance of defense strategies against NIFA "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "", "page_idx": 20}, {"type": "text", "text": "H.6 Performance with limited training ratio ", "text_level": 1, "page_idx": 20}, {"type": "table", "img_path": "LuqrIkGuru/tmp/c8f68e2855c0fc5a5e58d42f5944e975cde8365b4e744c2b982497a498bc5b4f.jpg", "table_caption": ["Table A6: The performance of NIFA with more limited training nodes. The victim model is GCN. "], "table_footnote": [], "page_idx": 20}, {"type": "text", "text": "As introduced in Section 5.1, our datasets are all collected from the previous work \u2013 FA-GNN [11], and our train $/$ val / test ratios are set to be consistent with its settings, which is $50\\%$ / $25\\%\\ /\\ 25\\%$ , respectively. However, in more realistic scenarios the percentage of labeled training nodes might be significantly smaller due to the heavy cost of annotation. To evaluate the effectiveness of NIFA under such settings, we ", "page_idx": 20}, {"type": "text", "text": "decrease the training ratio from $50\\%$ to $25\\%$ , $10\\%$ and $5\\%$ , respectively. The attack performance of NIFA on Pokec-z and Pokec-n is shown in Table A6. It can be seen that, even with much fewer labeled training nodes, NIFA still consistently demonstrates promising attack performance. ", "page_idx": 20}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Please refer to the abstract and Section 1. ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 21}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Justification: Please refer to Section 7 for our discussions on the limitations ", "page_idx": 21}, {"type": "text", "text": "Guidelines: ", "page_idx": 21}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \u201dLimitations\u201d section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 21}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 21}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 21}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 21}, {"type": "text", "text": "Justification: Please refer to Section 4.2 and Appendix C for the complete proof. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 22}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 22}, {"type": "text", "text": "Justification: Please refer to Section 5.1 and Appendix G for reproducibility details. Guidelines: ", "page_idx": 22}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 22}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 22}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 22}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: The url of our code and data is released in the Abstract. Section 5.1 and Appendix G also describe our reproducibility details. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/ guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 23}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 23}, {"type": "text", "text": "Justification: Please refer to Section 5.1 and Appendix G for experimental details. Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 23}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 23}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 23}, {"type": "text", "text": "Justification: We report the standard deviations of our experiments after repeating each experiment five times, which is also explained in the text. Please refer to Section 5. ", "page_idx": 23}, {"type": "text", "text": "Guidelines: ", "page_idx": 23}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \u201dYes\u201d if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 23}, {"type": "text", "text": "", "page_idx": 24}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We describe the computer resources and environment in Appendix G. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 24}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We thoroughly discuss the ethical consideration in Appendix A, in which the potential social harms are acknowledged and the code license are provided to avoid malicious use. We also discuss the feasible defensive measures in Section 6 to mitigate potential harmful consequences from our research. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 24}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 24}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 24}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 24}, {"type": "text", "text": "Justification: We thoroughly discuss the ethical consideration in Appendix A, in which the potential social harms are acknowledged and the code license are provided to avoid malicious use. We also discuss the feasible defensive measures in Section 6 to mitigate potential harmful consequences from our research. ", "page_idx": 24}, {"type": "text", "text": "Guidelines: ", "page_idx": 24}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed. \u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact. ", "page_idx": 24}, {"type": "text", "text": "\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 25}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: We describe the code license that will be released with our model in Appendix A. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 25}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 25}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 25}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 25}, {"type": "text", "text": "Justification: All models and baselines from existing assets are properly cited. ", "page_idx": 25}, {"type": "text", "text": "Guidelines: ", "page_idx": 25}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.   \n\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 25}, {"type": "text", "text": "", "page_idx": 26}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 26}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 26}, {"type": "text", "text": "Justification: We thoroughly discuss the training details, license, and limitations of our proposed model in this paper. ", "page_idx": 26}, {"type": "text", "text": "Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 26}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 26}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 26}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 26}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 26}, {"type": "text", "text": "Justification: Our paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 26}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 26}, {"type": "text", "text": "", "page_idx": 27}]