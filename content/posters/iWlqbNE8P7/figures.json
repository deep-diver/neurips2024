[{"figure_path": "iWlqbNE8P7/figures/figures_1_1.jpg", "caption": "Figure 1: (a) High-precision modeling for dynamical systems; (b.1) Classification of classical mechanical systems based on (Tolman, 1938; Lamb and Roberts, 1998);(b.2) Tim-Reversal Symmetry illustration; (b.3) Error accumulation in numerical solvers.", "description": "This figure illustrates the core idea of the paper.  Panel (a) shows how injecting a physics-informed prior (Time-Reversal Symmetry or TRS) and using a TRS loss reduces error accumulation during the ODE integration process, leading to high-precision modeling. Panels (b.1), (b.2), and (b.3) provide supporting details. (b.1) classifies classical mechanical systems based on whether they are energy-conservative, time-reversible, or both. (b.2) illustrates TRS and how it is used in the model. (b.3) depicts the error accumulation that can occur in numerical ODE solvers, which the paper aims to mitigate.", "section": "1 Introduction"}, {"figure_path": "iWlqbNE8P7/figures/figures_3_1.jpg", "caption": "Figure 3: Overall framework of TREAT. 01, 02, 03 are connected agents. It follows the encoder-processor-decoder architecture introduced in Sec 2.1. A novel TRS loss is incorporated to improve modeling accuracy across systems from the numerical aspect, regardless of their physical properties.", "description": "The figure shows the overall framework of the proposed model, TREAT.  It illustrates the encoder, processor (learnable ODE function), and decoder components.  The key feature highlighted is the incorporation of a novel Time-Reversal Symmetry (TRS) loss to improve the model's accuracy across diverse dynamical systems.  The figure visually depicts how forward and reverse trajectories are aligned using the TRS constraint. This method aims to improve numerical accuracy regardless of the underlying physical properties of the system.", "section": "3 Method: TREAT"}, {"figure_path": "iWlqbNE8P7/figures/figures_4_1.jpg", "caption": "Figure 3: Overall framework of TREAT. O1, O2, O3 are connected agents. It follows the encoder-processor-decoder architecture introduced in Sec 2.1. A novel TRS loss is incorporated to improve modeling accuracy across systems from the numerical aspect, regardless of their physical properties.", "description": "This figure illustrates the overall framework of the TREAT model, which is based on a Graph Neural Ordinary Differential Equation (GraphODE) architecture.  The model takes as input a graph G representing the interactions between agents and their historical trajectories X.  An encoder processes this input to compute latent initial states for each agent. A learnable ODE function then evolves these latent states over time, producing latent dynamics. A novel Time-Reversal Symmetry (TRS) loss is incorporated to constrain the forward and reverse trajectories of the system. A decoder finally maps the latent states to predicted output trajectories Y.", "section": "3 Method: TREAT"}, {"figure_path": "iWlqbNE8P7/figures/figures_7_1.jpg", "caption": "Figure 4: Varying prediction lengths across multi-agent datasets (Pendulum MSE is in log values).", "description": "This figure shows the Mean Squared Error (MSE) for different prediction lengths across four multi-agent datasets: Simple Spring, Damped Spring, Forced Spring, and Pendulum.  The x-axis represents the prediction length, and the y-axis represents the MSE.  The Pendulum dataset's MSE is shown on a logarithmic scale due to its significantly higher values. The plot displays the performance of four different models: LG-ODE, TREAT, TRS-ODEN, and HODEN.  The purpose is to demonstrate how the prediction accuracy changes for each model as the prediction length increases, highlighting the model's ability to make accurate predictions over long time horizons.  TREAT consistently exhibits the lowest MSE across all datasets and prediction lengths.", "section": "4.1 Main Results"}, {"figure_path": "iWlqbNE8P7/figures/figures_8_1.jpg", "caption": "Figure 4: Varying prediction lengths across multi-agent datasets (Pendulum MSE is in log values).", "description": "This figure shows the mean squared error (MSE) for different prediction lengths across four multi-agent datasets: Simple Spring, Damped Spring, Forced Spring, and Pendulum.  The x-axis represents the prediction length, and the y-axis represents the MSE.  The figure demonstrates that TREAT consistently outperforms other models, especially as prediction length increases.  The Pendulum dataset shows a particularly significant performance improvement by TREAT, which is highlighted by the use of a logarithmic scale for the y-axis in that plot.", "section": "4.2 Ablation and Sensitivity Analysis"}, {"figure_path": "iWlqbNE8P7/figures/figures_8_2.jpg", "caption": "Figure 3: Overall framework of TREAT. 01, 02, 03 are connected agents. It follows the encoder-processor-decoder architecture introduced in Sec 2.1. A novel TRS loss is incorporated to improve modeling accuracy across systems from the numerical aspect, regardless of their physical properties.", "description": "This figure shows the overall framework of the proposed method TREAT.  It uses a GraphODE model with an encoder, processor (learnable ODE function), and decoder.  A key innovation is the inclusion of a novel Time-Reversal Symmetry (TRS) loss to regularize the model and improve accuracy. The figure illustrates how the model processes input data (X, G) to produce output trajectories (Y), showcasing the forward and reverse trajectories in the latent space.", "section": "3 Method: TREAT"}, {"figure_path": "iWlqbNE8P7/figures/figures_9_1.jpg", "caption": "Figure 4: Varying prediction lengths across multi-agent datasets (Pendulum MSE is in log values).", "description": "This figure shows how the mean squared error (MSE) changes with prediction length for four different multi-agent datasets: Simple Spring, Damped Spring, Forced Spring, and Pendulum.  Each plot displays the MSE for two different models, LG-ODE and TREAT, across varying prediction lengths.  The plots show that TREAT generally maintains significantly lower MSE values than LG-ODE, and that the performance gap widens as prediction length increases.  The Pendulum dataset's MSE is plotted on a logarithmic scale due to its high values.", "section": "4.1 Main Results"}, {"figure_path": "iWlqbNE8P7/figures/figures_17_1.jpg", "caption": "Figure 8: Comparison between two reversal loss implementation", "description": "This figure compares two different implementations of the time-reversal symmetry loss: TREAT's approach based on Lemma 2.1 and TRS-ODEN's approach based on Equation 5.  It illustrates how TREAT's method minimizes the maximum error between the reversed and ground truth trajectories by independently assessing the forward and reverse loss values, while TRS-ODEN's method risks accumulating errors, leading to potentially larger errors.", "section": "A.4 Proof of Lemma 3.2"}, {"figure_path": "iWlqbNE8P7/figures/figures_21_1.jpg", "caption": "Figure 9: Illustration to show the pendulum is highly-sensitive to initial states", "description": "The figure shows the trajectories of a chaotic triple pendulum system with different initial conditions.  Even small perturbations in the initial state (\u0398\u2080) lead to significantly different trajectories over time, highlighting the system's sensitivity to initial conditions and its chaotic nature. This sensitivity poses a challenge for accurate modeling and prediction using machine learning methods.", "section": "C Dataset"}]