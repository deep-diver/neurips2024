[{"figure_path": "Ktx95ZuRjP/tables/tables_6_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with three different hardness levels (Easy, Medium, Hard).  It compares the performance of various methods, including traditional solvers (LKH3, OR-Tools, Greedy), previous neural network approaches (AM, POMO, GFACS, JAMPR, OSLA, MUSLA), and the proposed PIP and PIP-D methods.  The metrics reported include the infeasible rate (both solution and instance level), optimality gap, objective value (tour length), and computation time. The table demonstrates the effectiveness of the proposed PIP and PIP-D frameworks in handling complex constraints, particularly in harder problem instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_7_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with three different hardness levels (Easy, Medium, Hard).  The results are compared across several methods, including traditional solvers (LKH3, OR-Tools, greedy heuristics), prior neural approaches (AM, POMO, JAMPR, MUSLA), and the proposed methods (AM*+PIP, AM*+PIP-D, POMO*+PIP, POMO*+PIP-D).  Metrics reported include the percentage of infeasible solutions (Infeasible%, both at the solution and instance level), objective function values (Obj.), optimality gap (Gap) relative to the LKH3 solver, and computation time (Time).  The table shows how the proposed methods improve solution feasibility and quality compared to existing approaches, particularly for more challenging instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_8_1.jpg", "caption": "Table 3: Results on Medium TSPTW-500.", "description": "This table presents the results of experiments conducted on medium-level TSPTW instances with 500 nodes. It compares the performance of three methods: LKH3, GFACS*, and GFACS* + PIP-D.  The metrics shown are infeasible rate at the solution and instance levels, optimality gap compared to LKH3, and inference time.  This table highlights the effectiveness of the PIP-D framework in improving the feasibility and solution quality of the GFACS* method, especially on larger and more complex problem instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_9_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with varying hardness levels (Easy, Medium, Hard).  Multiple methods are compared, including traditional solvers (LKH3, OR-Tools, Greedy-L, Greedy-C),  prior neural approaches (JAMPR, OSLA, MUSLA, MUSLA adapt), and the proposed methods (AM*+PIP, AM*+PIP-D, POMO*+PIP, POMO*+PIP-D). The table shows the infeasible rate (at both solution and instance level), solution quality (objective value and optimality gap), and computation time for each method across different problem hardness levels. The results demonstrate that the proposed PIP and PIP-D methods significantly improve both solution feasibility and quality compared to baseline approaches.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_9_2.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on TSPTW instances with three different levels of hardness: Easy, Medium, and Hard.  The table compares various methods, including traditional solvers (LKH3, OR-Tools, Greedy approaches) and neural network-based methods (AM, POMO, and their variants with the proposed PIP and PIP-D frameworks), across different problem scales (n=50, n=100).  The metrics reported are the infeasibility rate (both at the solution and instance levels), the solution quality (optimality gap and objective value), and the computation time.  The superscript \u2020 indicates a footnote.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_16_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on TSPTW instances with three different hardness levels (Easy, Medium, Hard).  Multiple methods, including traditional solvers (LKH3, OR-Tools, Greedy), a previous neural approach (MUSLA), and the proposed PIP and PIP-D methods applied to several neural network architectures (AM, POMO), are compared. The table shows the infeasible rate (both solution-level and instance-level), solution objective value (relative gap to the optimal solution obtained by LKH3), and the computational time taken for each method on each instance type. The results demonstrate the effectiveness of PIP and PIP-D in significantly reducing infeasible solutions and improving solution quality, particularly on harder instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_18_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on TSPTW instances with three different hardness levels (Easy, Medium, Hard).  Multiple methods are compared, including traditional solvers (LKH3, OR-Tools, Greedy), prior neural approaches (AM, POMO, JAMPR, MUSLA), and the proposed methods (AM*+PIP, AM*+PIP-D, POMO*+PIP, POMO*+PIP-D). For each method, the table shows the infeasible rate (percentage of infeasible solutions), average solution objective value (Obj.), average optimality gap (Gap) compared to LKH3, and average solution time. The \u2020 symbol indicates that the average results are reported for instances where feasible solutions were found.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_20_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on TSPTW instances with three different hardness levels (Easy, Medium, Hard).  Multiple methods are compared, including traditional solvers (LKH3, ORTools), greedy heuristics, and neural network-based methods (AM, POMO, and their variants with PIP and PIP-D). The table shows the infeasible rate (percentage of infeasible solutions), the average objective value (obtained solution quality), optimality gap, and computation time for each method and hardness level. The asterisk (*) denotes that the model is trained with the Lagrangian multiplier. The \u2020 symbol indicates that the values shown are averages for instances where feasible solutions were found.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_21_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with varying levels of hardness (Easy, Medium, Hard).  The results compare the performance of various methods, including heuristic solvers (LKH3, OR-Tools, Greedy-L, Greedy-C), previous neural network-based methods (JAMPR, OSLA, MUSLA, MUSLA adapt), and the proposed methods (AM*+PIP, AM*+PIP-D, POMO*+PIP, POMO*+PIP-D) across different problem sizes (n=50, n=100).  Metrics include the percentage of infeasible solutions, the solution objective value (Obj.), the optimality gap compared to LKH3, and the computation time. The table highlights the effectiveness of the proposed PIP and PIP-D frameworks in improving solution quality and feasibility, especially in more challenging instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_21_2.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on TSPTW instances with three different hardness levels (Easy, Medium, Hard).  Multiple methods are compared, including traditional solvers (LKH3, OR-Tools, Greedy), prior neural methods (JAMPR, OSLA, MUSLA, AM, POMO), and the proposed PIP and PIP-D methods. The metrics evaluated are infeasible rate (both solution-level and instance-level), solution quality (objective value and optimality gap), and computation time. This table is used to demonstrate the effectiveness of PIP and PIP-D in solving TSPTW problems under different constraint hardness.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_22_1.jpg", "caption": "Table 13: Results under different times on Hard TSPTW-100.", "description": "This table shows the results of experiments conducted on the Hard TSPTW-100 dataset under different inference time budgets. The results include instance-level infeasibility rate (Inst. Infsb%), optimality gap (Gap), the number of sampled solutions (Ns), and inference time.  The table compares the performance of different variants of the POMO model (with and without PIP and PIP-D) under shorter (8 solutions) and longer (80 solutions) inference times. The results highlight the impact of inference time and the effectiveness of the proposed PIP and PIP-D frameworks in improving solution feasibility and optimality.", "section": "5.2 Model performance on large-scale problems"}, {"figure_path": "Ktx95ZuRjP/tables/tables_23_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with three different hardness levels (easy, medium, hard).  It compares the performance of several methods, including traditional solvers (LKH3, OR-Tools), greedy approaches, and neural network-based methods (AM, POMO) with and without the proposed PIP and PIP-D frameworks. For each method and hardness level, the table shows the infeasible rate (percentage of solutions that violate constraints), the average solution objective value, the optimality gap (compared to LKH3), and the computation time. The results demonstrate the effectiveness of the PIP and PIP-D frameworks in improving the solution quality and feasibility rate, particularly in the more challenging instances.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_23_2.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020.", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with three different hardness levels (Easy, Medium, Hard).  Multiple methods are compared, including traditional solvers (LKH3, OR-Tools, Greedy), prior neural network approaches (AM, POMO), and the proposed methods (AM*+PIP, AM*+PIP-D, POMO*+PIP, POMO*+PIP-D). The table shows the infeasible rate (at both the solution and instance level), the optimality gap compared to the optimal solution found by LKH3, the objective function value (total tour length), and the computation time. The results illustrate the effectiveness of the proposed PIP framework in improving the feasibility and solution quality of neural network-based methods for solving TSPTW problems with complex constraints.", "section": "5 Experiments"}, {"figure_path": "Ktx95ZuRjP/tables/tables_24_1.jpg", "caption": "Table 1: Experiments on TSPTW instance with three different hardness\u2020", "description": "This table presents the results of experiments conducted on Traveling Salesman Problem with Time Windows (TSPTW) instances with varying difficulty levels (Easy, Medium, Hard).  It compares different methods, including traditional solvers (LKH3, OR-Tools), greedy heuristics, existing neural network methods (AM, POMO, others), and the proposed PIP and PIP-D methods. The metrics presented include the percentage of infeasible solutions, the objective function value (Obj.), the optimality gap (Gap), and the computation time (Time). The table helps to illustrate the performance of different approaches on TSPTW instances with various constraint hardness levels.", "section": "5 Experiments"}]