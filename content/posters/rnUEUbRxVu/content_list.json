[{"type": "text", "text": "DAPE: Data-Adaptive Positional Encoding for Length Extrapolation ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Chuanyang Zheng1\u2217\u2020 Yihang $\\mathbf{Gao}^{2*}$ Han Shi3 Minbin Huang1 Jingyao Li1 Jing Xiong4 Xiaozhe $\\mathbf{Ren}^{3}$ Michael $\\mathbf{Ng^{5}}$ Xin Jiang3 Zhenguo Li3 Yu Li1 1CUHK 2NUS 3Noah\u2019s Ark Lab 4HKU 5HKBU ", "page_idx": 0}, {"type": "text", "text": "Abstract ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Positional encoding plays a crucial role in transformers, significantly impacting model performance and length generalization. Prior research has introduced absolute positional encoding (APE) and relative positional encoding (RPE) to distinguish token positions in given sequences. However, both APE and RPE remain fixed after model training regardless of input data, limiting their adaptability and flexibility. Hence, we expect that the desired positional encoding should be data-adaptive and can be dynamically adjusted with the given attention. In this paper, we propose a Data-Adaptive Positional Encoding (DAPE) method, which dynamically and semantically adjusts based on input context and learned fixed priors. Experimental validation on real-world datasets (Arxiv, Books3, and CHE) demonstrates that DAPE enhances model performances in terms of trained length and length generalization, where the improvements are statistically significant. The model visualization suggests that our model can keep both local and anti-local information. Finally, we successfully train the model on sequence length 128 and achieve better performance at evaluation sequence length 8192, compared with other static positional encoding methods, revealing the benefit of the adaptive positional encoding method. ", "page_idx": 0}, {"type": "text", "text": "1 Introduction ", "text_level": 1, "page_idx": 0}, {"type": "text", "text": "Transformer-based models have shown state-of-the-art performances in many language processing tasks, including translation [6], question-and-answer [82, 29, 3], and commonsense reasoning [65]. The transformer mainly consists of attention block, feed-forward block, and positional encoding. Recent works [8] have proved that quadratic-cost attention from the softmax is necessary for better performance, especially in long-context processing. The attention block was originally designed by applying softmax to the key-query multiplication, which requires quadratic computational cost. To address such challenges, some efficient transformers were proposed, including sliding window transformers (e.g., Streaming LLMs [77]), linear transformers (e.g., Performer [17]), and sparse transformers (e.g., Reformer and sparse Sinkhorn transformer [66, 25]), etc. However, some negative results exist regarding efficient transformers\u2019 performances [80]. ", "page_idx": 0}, {"type": "text", "text": "It has been noticed recently that well-designed positional encoding significantly improves the model performances, especially in the long-context tasks [33]. While transformer-based models exhibit satisfying performances in tasks of consistent length and distribution, their effectiveness tends to diminish sharply when the input length exceeds the training length, e.g., long document summarization, \u201cneedle in a haystack\u201d search, and long text generation. To avoid the expensive computation in training, the training length is usually preferred to be relatively small due to the quadratic cost of softmax-based transformers. However, real-world applications often require processing longer input sequences, posing a significant challenge. Therefore, there is a growing interest in evaluating model performance by training on shorter sequences while testing on longer inputs. Standard transformers may not distinguish the ordering of tokens without external assistance. In practice, they depend on positional encoding to incorporate positional information, enabling the model to make meaningful token predictions. Without these encodings, token generation would lack the necessary contextual order, rendering the outputs nonsensical. The RoPE [62] positional encoding method demonstrated a notable performance degradation, failing entirely when the input length is double that of the training length [51, 10, 24]. A common characteristic among these positional encodings is their pre-defined and static nature. Specifically, they are fixed across various tasks and models, which may lead to their inability to adapt to varying input lengths and contexts effectively. To address this issue, recent works have introduced Functional Interpolation for Relative Positional Encoding (FIRE) [41], which utilizes a neural network to learn an implicit mapping from input positions to positional bias. A functional approach to positional encoding that dynamically adjusts positional biases based on semantic information (input context) allows the model to empower adaptability beyond the fixed inductive bias as adopted in previous studies (such as RoPE [62] and Alibi [52]). Although FIRE utilizes MLPs to learn positional embeddings, these embeddings remain fixed across different tasks once the training is completed. Intuitively, the learned static positional encoding (such as Kerple and FIRE) is an average optimal solution across all training samples. Consequently, while they might be generally effective, they are inherently suboptimal for any specific instance. This static nature limits their flexibility and applicability in various real-world scenarios that deviate from the training context. In this paper, we introduce a data-adaptive positional encoding (DAPE) method, inspired by the limitations of static PEs. DAPE dynamically adjusts the PE based on the semantic information (e.g., the current attention value) $a$ and the positional indicator $b$ . The proposed PE is represented by MLPs due to their universal approximatability, i.e., $\\mathrm{MLPs}(a,b)$ . We note that DAPE is compatible with all additive relative PEs and offers advantages in terms of interpretability and ease of implementation. The proposed DAPE incorporates both the semantic and the positional information, making the PE adaptive with the input data. The adaptivity allows DAPE to overcome the inflexibility and achieve relatively optimal performance for each individual instance by dynamically adjusting on each specific input data. To the best of our knowledge, this is the first semantically dependent and adaptive positional encoding method introduced in transformer architectures. ", "page_idx": 0}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/ee9bbb38764d412e038fc6d70aa2ca69bd7b08d66ead0ec02b77f8eaf2077711.jpg", "img_caption": ["Figure 1: Visualization of DAPE learned positional biases for the 8192th query position with key positions between 1 and 8192, while the training length is 512. We notice that DAPE learns both local and anti-local position patterns. The model is trained with Equation 2: (1) The Attention is $X W_{Q}(X W_{K})^{\\top}$ ; (2) The Kerple bias is $_B$ ; (3) The DAPE (with Kerple) bias is $\\bar{f}(X W_{Q}(X W_{K})^{\\top},B)$ . More examples are shown in Appendix "], "img_footnote": [], "page_idx": 1}, {"type": "text", "text": "", "page_idx": 1}, {"type": "text", "text": "The paper is organized as follows. In Section 2, we review some related works on positional encoding methods, including absolute and relative positional encodings as well as the potentially no positional encoding in some transformer models. In Section 3, we introduce the proposed DAPE method with implementation on multi-head attention and analysis on computational costs. We conduct comprehensive experiments on DAPE, validating its effectiveness and performances on various language tasks and datasets, as reported in Section 4. In Section 6, some concluding remarks and potential future works are presented. ", "page_idx": 1}, {"type": "text", "text": "2 Related Works ", "text_level": 1, "page_idx": 1}, {"type": "text", "text": "No positional encoding. Haviv et al. [30] show that decoder-only Transformers with causal attention masks can learn positional information even without any explicit positional encoding. Recently, Kazemnejad et al. [33] proved the effectiveness of no positional encoding (NoPE) [71]. Although the NoPE can implicitly catch the positional information, it performs poorly compared with some explicit positional encoding methods [41]. ", "page_idx": 1}, {"type": "text", "text": "", "page_idx": 2}, {"type": "text", "text": "Absolute positional encoding. Vaswani et al. [69] proposed Absolute positional encoding (APE) to endow transformers with positional information. In particular, in the first layer, a (learnable or fixed sinusoidal) real-valued encoding [69, 35, 42, 70, 47] $e_{i}\\in\\mathbb{R}^{d}$ is assigned to each position $i$ , leading to an APE matrix $\\pmb{E}=[e_{1},\\cdots,e_{n}]^{\\top}$ , which will be added to the input sequence. Though simple and straightforward, APE-based Transformers usually generalize poorly to longer sequences [52]. ", "page_idx": 2}, {"type": "text", "text": "Relative positional encoding. Relative Positional Encoding (RPE) is another popular way to encode positional information [58, 56, 52], One popular RPE method in large language models is rotary positional encoding (RoPE) [62, 18, 67]. RoPE rotates the query and key vectors with an angle proportional to their absolute positions before the dot product attention, which results in attention being a function of the relative distance between the tokens, capturing the relative positional information. Press et al. [52] and Kazemnejad et al. [33] found that RoPE-based language models have poor length generalization. To address this, positional interpolation (PI) [11] is proposed to extend the context window. Following the direction, there are LongLora [12], LongRope [24], YaRN [51] and CLEX [10]. Another popular direction is additive positional encoding. For most of these additive RPE methods, the computation of the (pre-softmax) attention logits can be unified using the following formula: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{A_{\\mathrm{RPE}}(X)=X W_{Q}(X W_{K})^{\\top}+B,}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the bias matrix $\\b{B}\\in\\mathbb{R}^{n\\times n}$ is induced by the position encoding function $b:\\mathbb{N}^{2}\\rightarrow\\mathbb{R}$ and the $(i,j)$ -th entry of $_B$ is defined as $b(i,j)$ . Different formulations and parameterizations of $b$ lead to various RPE variants. Several methodologies that facilitate arbitrary sequence lengths include T5\u2019s RPE [56], Alibi [52], Kerple [13], Sandwich [14], and FIRE [41]. Currently, additive RPE delivers relatively robust performance in length extrapolation without necessitating additional operations. Alibi constructs the bias matrix $_B$ utilizing prior knowledge, resulting in a basis matrix devoid of learnable parameters [52]. Conversely, both Kerple [13] and Sandwich [14] incorporate two learnable parameters to facilitate the learning of a bias matrix while retaining some elements of priors. FIRE suggests adopting a learnable continuous function, such as MLPs, to convert input positions to biases [41]. Observing these developments, it becomes evident that the next generation of bias matrices will likely incorporate adaptivity and flexibility. Based on this insight, we propose our method DAPE, a semantically adaptive method. ", "page_idx": 2}, {"type": "text", "text": "3 Method ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "In this section, we formally introduce DAPE (data-adaptive positional encoding), a new relative positional encoding approach that further enhances transformer performance. Compared with previous works on static positional encoding methods, DAPE adopts semantically adaptive positional bias matrices depending on input context. We first demonstrate that most of the popular positional bias matrices are fixed once the training is finished, independent of the input sequences. To address this limitation, we then accordingly develop DAPE that captures the implicit relationships by MLPs and adjusts the bias matrices based on input context. Furthermore, we discuss a variant of DAPE with residual connections and its extensions to multi-head transformers. ", "page_idx": 2}, {"type": "text", "text": "3.1 Additive Relative Positional Encoding ", "text_level": 1, "page_idx": 2}, {"type": "text", "text": "For most additive RPE methods, the computation of pre-softmax attention logits can be unified under the following formula: ", "page_idx": 2}, {"type": "equation", "text": "$$\n\\begin{array}{r}{A_{\\mathrm{RPE}}(X)=X W_{Q}(X W_{K})^{\\top}+B,}\\end{array}\n$$", "text_format": "latex", "page_idx": 2}, {"type": "text", "text": "where the bias matrix $\\b{B}\\in\\mathbb{R}^{n\\times n}$ is induced by the position encoding function $b:\\mathbb{N}^{2}\\rightarrow\\mathbb{R}$ and the $(i,j)$ -th entry of $_B$ is defined as $b(i,j)$ . Various formulations and parameterizations of $b$ give rise to different variants of RPE. Examples of additive RPE include: (1) Alibi: $b(i,j)=-r|i-j|$ , with the scaler $r>0$ as a hyper-parameter; (2) Kerple: $b(i,j)=-r_{1}l o g(1+r_{2}|i-j|)$ with $r_{1}$ and $r_{2}$ are two learnable parameters; (3) FIRE: $\\begin{array}{r}{b(i,j)=f_{\\theta}\\left(\\frac{\\psi(i-j)}{\\psi(\\operatorname*{max}\\{L,i\\})}\\right)}\\end{array}$ \u03c8(m\u03c8a(ix\u2212{jL),i}) , where the positional encoding function $f_{\\theta}$ parameterized by $\\theta$ is learned from data and $\\psi$ is a transformation function aimed at assigning more model capacity to local positions. ", "page_idx": 2}, {"type": "text", "text": "We observe from the formulation of those additive RPEs that they remain static once the training process is completed and depend solely on the positions, regardless of the input context. This inflexibility and lack of adaptivity can lead to performance degradation, especially in tasks involving long-context generation and reasoning. Intuitively, the learned static RPEs are optimal on average across all training samples. However, this means they are suboptimal when considering each individual instance, as they cannot adapt to specific tasks. To address these challenges and enhance model performance, it is essential to adopt an alternative approach using a semantically adaptive RPE that depends on input context. ", "page_idx": 3}, {"type": "text", "text": "3.2 Data-Adaptive Positional Encoding ", "text_level": 1, "page_idx": 3}, {"type": "text", "text": "For simplicity, we first consider the single-head case and the extension to the multi-head transformer will be discussed subsequently. The design of data-adaptive positional encodings in natural language tasks is motivated by the need to capture the intricate relationships between tokens. Arora et al. [5] reveals that associate recall accounts for most of the perplexity difference between transformer, RNNbased, and convolution models. For example, we consider a consistent pairing that \u201cHakuna\u201d is always followed by \u201cMatata\u201d in a long paragraph. This pattern suggests a reduced reliance on positional information in favor of enhancing token embedding similarity, thus allowing for \u2018Hakuna\u2019 to be effectively linked with a preceding \u2018Matata\u2019. Similarly, in tasks involving long-context understanding and search, semantic similarity should be prioritized in the attention mechanism rather than being overshadowed by positional encodings, which can be less relevant over long distances. Consequently, the transformer should preserve information without being influenced overly by positional distance. Instead, a satisfactory PE should integrate both semantic and positional information. Therefore, a semantically dependent positional encoding approach is preferable and expected to enhance model performances. Here, we use the attention $\\mathbf{\\dot{\\boldsymbol{X}}}\\mathbf{\\dot{\\boldsymbol{W}}}_{Q}(\\boldsymbol{X}\\mathbf{\\boldsymbol{W}}_{K})^{\\top}$ to represent the semantic information and positional bias matrices $_B$ (e.g., Alibi and FIRE) to capture positional details. Then the context-adaptive PE is described by $f(X W_{Q}(X W_{K})^{\\top},B)$ , where $f(\\cdot)$ is an implicit function that integrates both semantic and positional data into the desired positional encodings. Thus, the pre-softmax attention logit incorporated with DAPE is formulated as ", "page_idx": 3}, {"type": "equation", "text": "$$\n\\pmb{A}_{\\mathrm{DAPE}}(\\pmb{X})=\\pmb{X}\\pmb{W}_{Q}(\\pmb{X}\\pmb{W}_{K})^{\\top}+f(\\pmb{X}\\pmb{W}_{Q}(\\pmb{X}\\pmb{W}_{K})^{\\top},\\pmb{B}).\n$$", "text_format": "latex", "page_idx": 3}, {"type": "text", "text": "Here, $f:\\mathbb{R}^{T\\times T}\\times\\mathbb{R}^{T\\times T}\\rightarrow\\mathbb{R}^{T\\times T}$ is an element-wise function. In practice, we utilize a two-layer LeakyReLU neural network to parameterize $f(\\cdot)$ due to its universal approximability [36]. All parameters are learned directly from the data during the training process. This architecture allows $f(\\cdot)$ to dynamically adjust positional embeddings based on the input context, ensuring that the encoding method is both adaptive and dependent on the input data. ", "page_idx": 3}, {"type": "text", "text": "Different from FIRE, which also models the implicit positional encoding by MLPs, our approach additionally integrates semantic information. This integration enables the adaptivity, flexibility, and context-dependency of the positional encodings. Significantly, our method is compatible with most additive RPE techniques, as these commonly involve positional bias matrices $_B$ that inherently contain positional relations. Unlike previous RPEs, which rely solely on absolute positional differences, our DAPE method, can be seen as utilizing multi-level positional bias matrices. Here, the bias matrices dynamically adjust based on the input context, offering a more reasonable and responsive encoding mechanism. ", "page_idx": 3}, {"type": "text", "text": "Expressiveness. Due to the universal approximability of (LeakyReLU) neural networks [36], $f(\\cdot)$ is capable of capturing complex relationships between the desired positional encoding and both semantic and positional information. Regardless of the semantic component, when the relative position $i-j$ is used as input, DAPE can realize classical additive RPEs (e.g., Alibi and Kerple), according to [41]. This demonstrates the versatility of DAPE in accommodating traditional encoding schemes while also offering enhanced capabilities. There exists a fundamental trade-off between the expressiveness and computational costs. Wider hidden layers lead to higher expressiveness but also contribute to more computational costs. In practice, we find that two-layer neural networks with 32 hidden units per layer provide sufficient expressiveness to deliver satisfactory performance, balancing complexity and efficiency effectively. ", "page_idx": 3}, {"type": "text", "text": "Discussion. We can also interpret the proposed method from an alternative perspective. In the standard transformer architecture, the pre-softmax attention typically involves the key-query similarity and the positional encoding by either addition (in the form of $a+b$ , e.g., Alibi and Kerple) or multiplication (in the form of $a*b$ , e.g., RoPE). Here, we propose a unified approach by replacing them with learnable MLPs, i.e., ${\\mathrm{MLP}}(a,b)$ . This configuration allows the model to learn the desired relationship between the pre-softmax attention, the key-query similarity and the positional encoding. It can also be regarded as a new transformer architecture that empower the transformer with additional MLPs on pre-softmax attentions. ", "page_idx": 3}, {"type": "text", "text": "", "page_idx": 4}, {"type": "text", "text": "A variant of DAPE with residual connections. It is well-known that deep neural networks may suffer from gradient vanishing. To further enhance the practical performances, we introduce the residual connection for positional information. Consequently, Equation 2 is modified as follows: ", "page_idx": 4}, {"type": "equation", "text": "$$\nA_{\\mathrm{DAPE}}(X)=X W_{Q}(X W_{K})^{\\top}+B+f(X W_{Q}(X W_{K})^{\\top},B).\n$$", "text_format": "latex", "page_idx": 4}, {"type": "text", "text": "In this reformulation, $f(\\cdot)$ acts as an adaptive correction term to the traditionally fixed RPE, dynamically adjusting the positional bias matrices $_B$ based on both semantic and positional inputs. In Section 4, we empirically explore the impact of residual connections in DAPE. Our observations reveal that for well-behaved bias matrices $_B$ , the DAPE model with residual connections, as specified in Equation 3, is preferable. Conversely, if the bias matrix is underperforming but still conveys positional information, the original implementation in Equation 2 is more effective. ", "page_idx": 4}, {"type": "text", "text": "Multi-head DAPE. In its simplest form, DAPE is considered for a single-head case as described in Equation 2 and Equation 3. However, adopting a multi-head mechanism significantly enhances model capabilities. To effectively combine both semantic and positional information, the DAPE in a multi-head setup processes the key-query similarities and bias matrices from all heads. Specifically, for an $h$ -head layer, the function $f(\\cdot)$ inputs a $2h$ -dimensional concatenation of key-query similarities and positional biases. It then outputs $h$ -dimensional vectors, where each element corresponds to the DAPE for the respective head. We have shown the code implementation in Appendix J. Importantly, semantic and positional information across different heads are processed simultaneously within the same MLPs, rather than sequentially. This approach not only improves computational efficiencies through parallel processing but also capitalizes on the richer semantic information available across all heads. Compared to the key-query similarity derived from a single head, the comprehensive attention from all heads yields more substantial semantic information. ", "page_idx": 4}, {"type": "text", "text": "Computational costs analysis. Here, we evaluate the additional computational costs introduced by the DAPE method, compared with the classical positional encoding methods (e.g., Alibi and Kerple). We consider a transformer model with $h$ heads and assume a sequence length of $N$ and all hidden dimensions in the attention layer being $d$ . Then the total computational cost for a standard transformer equipped with classical PEs is $\\mathcal{O}\\left(h N^{2}d+h N d^{2}\\right)$ . When incorporating the proposed DAPE, which employs two-layer MLPs with hidden dimension $D_{\\mathrm{DAPE}}$ , the additional computational costs are $O\\left(h N^{2}\\bar{D_{\\mathrm{DAPE}}}\\right)$ . If the hidden dimensions $D_{\\mathrm{DAPE}}\\ll d$ , the incremental computational cost introduced by DAPE is not significant. ", "page_idx": 4}, {"type": "text", "text": "4 Experiment ", "text_level": 1, "page_idx": 4}, {"type": "text", "text": "Baselines. We evaluate the proposed DAPE against a range of established baselines, including NoPE [33], RoPE [62], YaRN [51], Randomized RoPE [57, 31], T5\u2019s Bias [56], Alibi [52], Kerple [13], and FIRE [41]. For RoPE, the randomized positional encoding [57, 31] is applied to enhance the model performance, extending the randomized length to four times that of the training length. ", "page_idx": 4}, {"type": "text", "text": "Datasets. Our analysis involves training language models on the Arxiv and Books3 datasets, which are frequently used benchmarks for evaluating model performance [52, 13, 41, 24]. We start our evaluation by comparing the last 256 tokens\u2019 zero-shot perplexity across different input lengths. Besides perplexity as evaluation metrics, we also employ the downstream datasets in randomized positional encoding [57] to evaluate DAPE, where details are included in Appendix D. ", "page_idx": 4}, {"type": "text", "text": "Experiment settings. Initially, we compare DAPE with other baselines at training lengths of 128, 512, and 1024, with model size 125M decoder-only Transformers [9], whose configuration is shown in Appendix B. Subsequently, we evaluate the performance of larger model size 350M, DAPE variants and explore the impact of hidden dimension of MLPs $D_{\\mathrm{DAPE}}$ . We also examine the computational efficiency of DAPE, focusing on processing times. Additionally, we provide visualizations of the DAPE bias in the Appendix I. Finally, we also evaluate DAPE on algorithmic reasoning datasets via accuracy metrics. ", "page_idx": 4}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/c44f63450bd6e433c9f08044fff82c842912bee39162ef0e85d68ad6148361a5.jpg", "img_caption": ["Figure 2: Comparisons with baselines: performance with training lengths 128 and 512 on Arxiv and Books3 datasets. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "4.1 Comparisons with Baselines ", "text_level": 1, "page_idx": 5}, {"type": "text", "text": "DAPE\u2019s superior performance within training length and beyond training length, compared to all baselines. As shown in Figure 2 and Table 5, DAPE consistently outperforms established baselines such as RoPE, Alibi, and Kerple across various settings. Notably, DAPE-Kerple (the positional information in DAPE comes from Kerple bias matrices) outstands in both short and long training lengths (128 and 512), compared to previous RoPE, T5\u2019s bias, and so on. It demonstrates that the semantic adaptivity of DAPE significantly enhances its state-of-the-art performance against all other static positional encoding methods. ", "page_idx": 5}, {"type": "text", "text": "The performance on longer training length 1024. As shown in Figure 3, the proposed method consistently delivers state-of-the-art performance for the training length of 1024. When the evaluation extends to 2048, both DAPEKerple and DAPE-FIRE achieve notable results, recording performances of 3.91 and 3.93 perplexity scores, respectively. Remarkably, DAPE-FIRE behaves well at the longer evaluation length of 8192, achieving a performance of 3.91 scores and surpassing Alibi\u2019s score of ", "page_idx": 5}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/a13ba810ae92fe67c92009f08f3c448587bb938a149b4d4ae021c362002cc452.jpg", "img_caption": ["Figure 3: Results on the training length 1024. "], "img_footnote": [], "page_idx": 5}, {"type": "text", "text": "4.28. These findings reveal that DAPE sustains robust performance with a longer training length of   \n1024. ", "page_idx": 5}, {"type": "text", "text": "DAPE enhances intra-length performance, indicating that its lower perplexity may come from thorough utilization of entire sentences but not disregarding long-distance information (Also proved in Figure 1). Compared to Alibi, Kerple, and FIRE, the adapted versions DAPEAlibi, DAPE-Kerple, and DAPE-FIRE demonstrate consistently and significantly better intra-length performance. With the growing sequence length, the Alibi tends to transition from full attention to almost local attention, and this is why Alibi is worse than most baselines within training length but better beyond training lengths. The results (as shown in Table 5) indicate that the superior intralength performance of DAPE is statistically significant, with a p-value less than 0.05. Therefore, the consistent intra-length performances across various training lengths indicate that the lower perplexity of DAPE results from effectively utilizing the entire sequence, rather than focusing on local parts and neglecting long-distance information. ", "page_idx": 5}, {"type": "text", "text": "DAPE significantly improves length extrapolation performance, compared to ALibi, Kerple, and FIRE. DAPE-Kerple significantly surpasses competitors like vanilla Kerple when training and evaluating at different lengths. On the Arxiv dataset trained at a length of 128, DAPE-Kerple achieves a remarkably low perplexity of 5.00 at an evaluation length of 8192, in stark contrast to Kerple\u2019s 31.93. Similarly, on the Books3 dataset with a training length of 512, DAPE-Kerple records a perplexity of 17.88 at the same extended evaluation length, far outperforming Kerple\u2019s 39.31. These results affirm that DAPE, through its semantic adaptivity and flexibility, consistently enhances performance beyond training lengths, eclipsing static positional encoding methods. ", "page_idx": 6}, {"type": "text", "text": "4.2 The Effect of Model Size ", "text_level": 1, "page_idx": 6}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/17d8fbb51b0eb71825f9f6e4754dbfcf09f20e0da765962a76eb0174e21ee726.jpg", "img_caption": ["Figure 4: The effect of model size: for the 350M model, the performance with training lengths 128 and 512 on the Arxiv dataset. "], "img_footnote": [], "page_idx": 6}, {"type": "text", "text": "DAPE enhances performance with increasing model sizes. As the model size grows (as shown in Figure 4), DAPE consistently demonstrates an improvement in performance metrics. When the model size is augmented from $125\\mathrm{M}$ to 350M, the perplexity at an evaluation sequence length of 8192 (with a training length of 512) for DAPE-Alibi shows a notable decrease from 3.82 to 3.57. These numbers are appreciably smaller than those recorded for original Alibi, which decreases from 4.54 to 4.21 in perplexity, indicating a robust performance improvement. Additionally, DAPE-Kerple significantly reduces the perplexity for Kerple, bringing it down from an initial 22.76 to an impressive 3.43. These results confirm that DAPE retains its efficacy and continues to perform well even as the model size is increased, mainly due to the adoption of semantically adaptive PEs. ", "page_idx": 6}, {"type": "text", "text": "DAPE methods almost are ranked top-3 with large model size. With the incremental model size, DAPE-FIRE begins to match, and nearly approach, the performance levels of Alibi. Initially, at a model size of $125\\mathrm{M}$ and a training length of 512, DAPE-FIRE achieves a perplexity of 5.71 at an evaluation sequence length of 8192, while Alibi stands at a perplexity of 4.54. However, as the model size is increased to 350M, the performance gap significantly narrows. Specifically, DAPE-FIRE outperforms Alibi regarding the perplexity scores when the evaluation length is smaller than 4096, as the model size grows for evaluation. In conclusion, as shown in Figure 4, we observe that the DAPE methods almost win the top-3 among all positional encoding methods. This trend underlines the scalability and adaptability of DAPE, emphasizing its potential to handle more substantial computation challenges. ", "page_idx": 6}, {"type": "text", "text": "4.3 Different Variants of DAPE ", "text_level": 1, "page_idx": 6}, {"type": "text", "text": "In this section, we evaluate the performance of DAPE across its various forms. Our analysis focuses on DAPE-Kerple. Notably, as shown in Figure 5, all variants of DAPE surpass the baseline performance of Kerple. The Addition_Residual variant of DAPE, while requiring less computational effort, delivers relatively inferior results. As illustrated in Figure 5, concatenation methods (either Concat or Concat_Residual) outperform the Addition_Residual approach, for both the training length of 128 and 512. Furthermore, both Concat and Concat_Residual exhibit comparable performance metrics. Specifically, at a training length of 128, Concat_Residual records a score of 5.00 and Concat scores 5.03 at an evaluation length of 8192, whereas Add_Residual posts a 5.17 perplexity score. With a training length of 512, Concat_Residual achieves a score of 3.70, and Concat scores 3.69 at an evaluation length of 8192, compared to Add_Residual\u2019s 3.75. Based on the current observation, the different variants of DAPE show comparable performances, compared to baselines. ", "page_idx": 6}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/1a1ee391a66d6601ef8bafe1585efe99e501bd770ba42284243edcea439357de.jpg", "img_caption": ["Figure 5: Different variants of DAPE: the DAPE-Kerple performance under different variants. (1) Add_Residual: $X W_{Q}(X W_{K})^{\\top}+B\\,+\\,f(X W_{Q}(X W_{K})^{\\top}+B)$ ; (2) Concate: $X W_{Q}(X W_{K})^{\\top}\\ +$ $f(X W_{Q}(X W_{K})^{\\top},B)$ ; (3) Concate_Residual: $X W_{Q}(X W_{K})^{\\top}+B+f(X W_{Q}(X W_{K})^{\\top},B)$ . "], "img_footnote": [], "page_idx": 7}, {"type": "text", "text": "4.4 The Effect of the Hidden Dimension $D_{\\mathbf{DAPE}}$ ", "text_level": 1, "page_idx": 7}, {"type": "text", "text": "Even small $D_{\\mathbf{DAPE}}$ can improve the performance. The experiments are conducted with Alibi and DAPE-Alibi. As shown in Appendix Figure 6, when considering the training length 128 and $D_{\\mathrm{DAPE}}$ is set as 4, the DAPE-Alibi achieves 8.25 at evaluation length 128 and 5.67 at length 8192, which is better than Alibi\u2019s 8.31 and 5.85. Whatever $D_{\\mathrm{DAPE}}$ is 4, 16 32, or 64, the performance is always better than the original Alibi at all evaluation lengths. This suggests the effectiveness of DAPE, even with smaller $D_{\\mathrm{DAPE}}$ . ", "page_idx": 7}, {"type": "text", "text": "The choice of $D_{\\mathbf{DAPE}}$ . Based on the experiment, overly small values of $D_{\\mathrm{DAPE}}$ can degrade performance, although they still perform better than the baseline. Conversely, larger values of $D_{\\mathrm{DAPE}}$ increase computational costs. The function $f(\\cdot)$ is implemented as a two-layer MLP, where the input dimension is either the head number or twice the head number, and the output dimension is the head number. Therefore, we recommend setting the hidden dimension to the head number to prevent information loss and ensure the capacity of $\\bar{f}(\\cdot)$ . ", "page_idx": 7}, {"type": "text", "text": "4.5 The Time Cost ", "text_level": 1, "page_idx": 7}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/9ce342ebe5eabc1c2c2e8f85bf9ec93941a91a6c4a5fd7190d66dfcd33aca801.jpg", "table_caption": ["Table 1: The time cost (millisecond) under different testing lengths, with $D_{\\mathbf{DAPE}}$ as 32 and default batch size 1, with training length 512. "], "table_footnote": [], "page_idx": 7}, {"type": "text", "text": "Practical additional time cost. The additional training ratio will gradually decrease with a larger model size, compared to baseline Kerple.. The cost of Feed-Forward Network is: $O(N\\bar{d}_{h e a d}^{2}d_{h i d d e n}^{2}){=}a N d_{h e a d}^{2}d_{h i d d e n}^{2}$ , where a is a constant, $\\Nu$ is the sequence length, $d_{h e a d}$ is the attention head number and $d_{h i d d e n}$ is the dimension for attention calculation. The cost of Attention: $O(N^{2}d_{h e a d}d_{h i d d e n}){=}b N^{2}d_{h e a d}d_{h i d d e n},$ , where $\\mathbf{b}$ is a constant. The additional cost of DAPE: $O(N^{2}d_{h e a d}d_{D A P E}){=}c N^{2}d_{h e a d}d_{D A P E}$ , where c is a constant. The cost ratio is aNd2headd2hiddheena+dbNhi 2dddehneaddhiddheena+dchNi2dddehneaddDAP E =adheadd2hhiedaddenh+idbdNendhiddenh+idcdNendDAP E . Therefore, $d_{h e a d}$ and $d_{h i d d e n})$ , the additional cost ratio of DAPE will greatly become smaller. Also, we have shown in Figure 6 that $d_{D A P E}$ still works well with very small value, such as 4. ", "page_idx": 7}, {"type": "text", "text": "Table 2: Train on length 40 with $200\\mathbf{k}$ steps, and test from lengths 41 to 500. The random accuracy is $50\\%$ , except for MODULAR ARITHMETIC (SIMPLE), CYCLE NAVIGATION, BUCKET SORT, SOLVE EQUATION and MODULAR ARITHMETIC, where it is $20\\%$ . \u2020\u2020\u2020 denotes permutation-invariant tasks, which are expected to be solved without positional information. ", "page_idx": 8}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/fa5c507ba97aa267614f27999d3d223c5146c1c497d4b3e1eaf39ca0ae91a29b.jpg", "table_caption": [], "table_footnote": [], "page_idx": 8}, {"type": "text", "text": "4.6 The Visualization of DAPE ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "In this subsection, we present the visualization of learned positional encoding biases from a DAPEKerple model pretrained on Arxiv (training length is 512). We plot the learned positional encoding bias for the query token at the 8192th position, for all the attention heads from selected layers in Figure 1. We would like to highlight two features of DAPE. First, in different attention heads, the bias matrix of DAPE learns both local and \u201canti-local\u201d attention patterns that emphasize more on far-away keys (just like FIRE), compared to a fixed local inductive bias (such as Kerple and Alibi). Secondly, the bias matrix can be dynamically adjusted with different attention values, compared to the static bias fixed for all attentions. We have shown more examples, including different layers and different samples, in Appendix I. ", "page_idx": 8}, {"type": "text", "text": "4.7 Experiments on CHE Benchmark ", "text_level": 1, "page_idx": 8}, {"type": "text", "text": "Besides employing perplexity as an evaluation metric, we also evaluated DAPE on downstream Chomsky Hierarchy Evaluation Benchmark (CHE) [21] (need to utilize the whole sentence information to generate correct answers) to further discuss its effects. The experimental setup follows randomized positional encodings [57], detailed in Table 4, with the experiment setting shown in Appendix Section D. Overall, FIRE outperforms Kerple in 9 out of 14 tasks, while Kerple outperforms Alibi in 11 out of 14 tasks. This observation aligns with findings in [41], suggesting that the experiments in Table 2 are reliable and reflect the performance of positional encoding in downstream tasks. ", "page_idx": 8}, {"type": "text", "text": "DAPE works better on permutation-variant tasks. DAPE (with Kerple and FIRE) presented the best performance in 10 out of 11 permutation-variant tasks (which require positional information), achieving the second-best performance in the SOLVE EQUATION task. This underscores the efficacy of DAPE with semantic adaptivity in handling permutation-variant challenges. ", "page_idx": 8}, {"type": "text", "text": "DAPE\u2019s performance on permutation-invariant tasks. In tasks that are permutation-invariant, where positional information is non-critical, DAPE demonstrated comparable performance. Notably, DAPE-Alibi achieved scores of 50.30 on PARITY CHECK and 99.38 on BUCKET SORT tasks, compared to the highest scores of 50.97 and 99.57, respectively, demonstrating competitive performances. ", "page_idx": 8}, {"type": "text", "text": "Comparative performance improvements. DAPE consistently enhanced performance across various tasks, especially on permutation-variant tasks. Specifically, DAPE improved upon Alibi and FIRE\u2019s results in all 11 tested permutation-invariant tasks. Similarly, it outperformed Kerple in 10 of these tasks. These results highlight the effectiveness of DAPE over static positional encoding methods like Alibi, Kerple, and FIRE, resulting from its dynamic adaptivity. ", "page_idx": 8}, {"type": "text", "text": "5 Evaluation Protocol ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this work, we initially utilize the model to process the entire input sentence and subsequently select the final 256 tokens for perplexity computation. This approach contrasts with a variety of other studies, which employ methods that process the full sequence during perplexity calculations [51, 31, 12, 24, 10, 41]. As a result, our reported baseline perplexity is comparatively higher than the results presented in ALiBi [52], which adopt a non-overlapping evaluation strategy. This method divides sequences longer than $L$ into multiple segments of length $L$ , thereby yielding lower perplexity figures. ", "page_idx": 9}, {"type": "text", "text": "Though ALiBi [52] and Kerple all claim that they use non-overlapping evaluations, their reported results are different. For example, in the ALiBi paper Table 2, the sinusoidal position encoding perplexity increases from 20.05 (evaluation length 512) to 406.01 (evaluation length (evaluation length 15512), while in Kerple paper Table 3 the sinusoidal position encoding perplexity from 33 to 30046. This may be caused by different evaluation protocols and training strategies. ", "page_idx": 9}, {"type": "text", "text": "Recommended Protocols. We strongly recommend that researchers process the entirety of the sequence before selecting the last $K$ tokens for the purpose of calculating perplexity. The rationale behind processing the whole sentence is that it provides a comprehensive evaluation of the model\u2019s capability to handle long-context dependencies, thus offering a more accurate reflection of its performance. Following this step, we advocate for the selection of the last $K$ tokens to compute perplexity, ensuring that the same number of tokens is used across different evaluation lengths, which promotes consistency and comparability in the results. ", "page_idx": 9}, {"type": "text", "text": "Release this work\u2019s code for future work. In light of this methodology, we have made our code publicly available to other researchers in the field. This initiative aims to facilitate a standardized comparison and evaluation of their respective methods, thereby advancing the collective understanding of model performance in relation to perplexity calculations. ", "page_idx": 9}, {"type": "text", "text": "6 Conclusion ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "In this paper, we propose the data-adaptive positional encoding (DAPE) by incorporating both the semantic and the positional information to improve the model performance. We show that the additional computation introduced by DAPE is not significant under proper choices of hyperparameters. We conduct comprehensive experiments on Arxiv, Books3, and CHE to validate the effectiveness of the proposed method, revealing that the adaptive PE method has advantages over static PEs. We believe that the DAPE could benefti the whole community, especially on length generalization tasks. ", "page_idx": 9}, {"type": "text", "text": "References ", "text_level": 1, "page_idx": 9}, {"type": "text", "text": "[1] Muhammad Adnan, Akhil Arunkumar, Gaurav Jain, Prashant J Nair, Ilya Soloveychik, and Purushotham Kamath. Keyformer: KV cache reduction through key tokens selection for efficient generative inference. arXiv preprint arXiv:2403.09054, 2024.   \n[2] Devanshu Agrawal, Shang Gao, and Martin Gajek. Can\u2019t remember details in long documents? you need some r&r. arXiv preprint arXiv:2403.05004, 2024.   \n[3] Joshua Ainslie, Tao Lei, Michiel de Jong, Santiago Ontanon, Siddhartha Brahma, Yury Zemlyanskiy, David Uthus, Mandy Guo, James Lee-Thorp, Yi Tay, et al. CoLT5: Faster long-range transformers with conditional computation. In The 2023 Conference on Empirical Methods in Natural Language Processing, 2023.   \n[4] Chenxin An, Fei Huang, Jun Zhang, Shansan Gong, Xipeng Qiu, Chang Zhou, and Lingpeng Kong. Training-free long-context scaling of large language models. arXiv preprint arXiv:2402.17463, 2024.   \n[5] Simran Arora, Sabri Eyuboglu, Aman Timalsina, Isys Johnson, Michael Poli, James Zou, Atri Rudra, and Christopher R\u00e9. Zoology: Measuring and improving recall in efficient language models. arXiv preprint arXiv:2312.04927, 2023.   \n[6] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly learning to align and translate. International Conference on Learning Representations, 2015.   \n[7] Maximilian Beck, Korbinian P\u00f6ppel, Markus Spanring, Andreas Auer, Oleksandra Prudnikova, Michael Kopp, G\u00fcnter Klambauer, Johannes Brandstetter, and Sepp Hochreiter. xLSTM: Extended long short-term memory. arXiv preprint arXiv:2405.04517, 2024.   \n[8] Iz Beltagy, Matthew E Peters, and Arman Cohan. Longformer: The long-document transformer. arXiv preprint arXiv:2004.05150, 2020.   \n[9] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are few-shot learners. Advances in Neural Information Processing Systems, 33:1877\u20131901, 2020.   \n[10] Guanzheng Chen, Xin Li, Zaiqiao Meng, Shangsong Liang, and Lidong Bing. CLEX: Continuous length extrapolation for large language models. In International Conference on Learning Representations, 2023.   \n[11] Shouyuan Chen, Sherman Wong, Liangjian Chen, and Yuandong Tian. Extending context window of large language models via positional interpolation. arXiv preprint arXiv:2306.15595, 2023.   \n[12] Yukang Chen, Shengju Qian, Haotian Tang, Xin Lai, Zhijian Liu, Song Han, and Jiaya Jia. LongLoRA: Efficient fine-tuning of long-context large language models. International Conference on Learning Representations, 2023.   \n[13] Ta-Chung Chi, Ting-Han Fan, Peter J Ramadge, and Alexander Rudnicky. KERPLE: Kernelized relative positional embedding for length extrapolation. Advances in Neural Information Processing Systems, 35:8386\u20138399, 2022.   \n[14] Ta-Chung Chi, Ting-Han Fan, Alexander Rudnicky, and Peter Ramadge. Dissecting transformer length extrapolation via the lens of receptive field analysis. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 13522\u201313537, 2023.   \n[15] Ta-Chung Chi, Ting-Han Fan, and Alexander I Rudnicky. Attention alignment and flexible positional embeddings improve transformer length extrapolation. arXiv preprint arXiv:2311.00684, 2023.   \n[16] Noam Chomsky. Three models for the description of language. IRE Transactions on Information Theory, 2(3):113\u2013124, 1956.   \n[17] Krzysztof Marcin Choromanski, Valerii Likhosherstov, David Dohan, Xingyou Song, Andreea Gane, Tamas Sarlos, Peter Hawkins, Jared Quincy Davis, Afroz Mohiuddin, Lukasz Kaiser, David Benjamin Belanger, Lucy J Colwell, and Adrian Weller. Rethinking attention with performers. In International Conference on Learning Representations, 2021.   \n[18] Aakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra, Adam Roberts, Paul Barham, Hyung Won Chung, Charles Sutton, Sebastian Gehrmann, et al. Palm: Scaling language modeling with pathways. Journal of Machine Learning Research, 24(240):1\u2013 113, 2023.   \n[19] Zihang Dai, Zhilin Yang, Yiming Yang, Jaime G Carbonell, Quoc Le, and Ruslan Salakhutdinov. Transformer-XL: Attentive language models beyond a fixed-length context. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 2978\u20132988, 2019.   \n[20] Soham De, Samuel L Smith, Anushan Fernando, Aleksandar Botev, George Cristian-Muraru, Albert Gu, Ruba Haroun, Leonard Berrada, Yutian Chen, Srivatsan Srinivasan, et al. Griffin: Mixing gated linear recurrences with local attention for efficient language models. arXiv preprint arXiv:2402.19427, 2024.   \n[21] Gregoire Deletang, Anian Ruoss, Jordi Grau-Moya, Tim Genewein, Li Kevin Wenliang, Elliot Catt, Chris Cundy, Marcus Hutter, Shane Legg, Joel Veness, et al. Neural networks and the chomsky hierarchy. In International Conference on Learning Representations, 2022.   \n[22] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep bidirectional transformers for language understanding. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), pages 4171\u20134186, 2019.   \n[23] Hantian Ding, Zijian Wang, Giovanni Paolini, Varun Kumar, Anoop Deoras, Dan Roth, and Stefano Soatto. Fewer truncations improve language modeling. arXiv preprint arXiv:2404.10830, 2024.   \n[24] Yiran Ding, Li Lyna Zhang, Chengruidong Zhang, Yuanyuan Xu, Ning Shang, Jiahang Xu, Fan Yang, and Mao Yang. LongRoPE: Extending llm context window beyond 2 million tokens. arXiv preprint arXiv:2402.13753, 2024.   \n[25] Zafeirios Fountas, Martin A Benfeghoul, Adnan Oomerjee, Fenia Christopoulou, Gerasimos Lampouras, Haitham Bou-Ammar, and Jun Wang. Human-like episodic memory for infinite context llms. arXiv preprint arXiv:2407.09450, 2024.   \n[26] Yao Fu, Rameswar Panda, Xinyao Niu, Xiang Yue, Hannaneh Hajishirzi, Yoon Kim, and Hao Peng. Data engineering for scaling language models to $128\\mathbf{k}$ context. arXiv preprint arXiv:2402.10171, 2024.   \n[27] Yihang Gao, Chuanyang Zheng, Enze Xie, Han Shi, Tianyang Hu, Yu Li, Michael K Ng, Zhenguo Li, and Zhaoqiang Liu. On the expressive power of a variant of the looped transformer. arXiv preprint arXiv:2402.13572, 2024.   \n[28] Albert Gu and Tri Dao. Mamba: Linear-time sequence modeling with selective state spaces. arXiv preprint arXiv:2312.00752, 2023.   \n[29] Mandy Guo, Joshua Ainslie, David Uthus, Santiago Ontanon, Jianmo Ni, Yun-Hsuan Sung, and Yinfei Yang. LongT5: Efficient text-to-text transformer for long sequences. Findings of the Association for Computational Linguistics: NAACL, 2022.   \n[30] Adi Haviv, Ori Ram, Ofir Press, Peter Izsak, and Omer Levy. Transformer language models without positional encodings still learn positional information. In Findings of the Association for Computational Linguistics: EMNLP 2022, pages 1382\u20131390, 2022.   \n[31] Zhenyu He, Guhao Feng, Shengjie Luo, Kai Yang, Di He, Jingjing Xu, Zhi Zhang, Hongxia Yang, and Liwei Wang. Two stones hit one bird: Bilevel positional encoding for better length extrapolation. arXiv preprint arXiv:2401.16421, 2024.   \n[32] Hongye Jin, Xiaotian Han, Jingfeng Yang, Zhimeng Jiang, Zirui Liu, Chia-Yuan Chang, Huiyuan Chen, and Xia Hu. LLM maybe LongLM: Self-extend LLM context window without tuning. arXiv preprint arXiv:2401.01325, 2024.   \n[33] Amirhossein Kazemnejad, Inkit Padhi, Karthikeyan Natesan Ramamurthy, Payel Das, and Siva Reddy. The impact of positional encoding on length generalization in transformers. Advances in Neural Information Processing Systems, 36, 2024.   \n[34] Guolin Ke, Di He, and Tie-Yan Liu. Rethinking positional encoding in language pre-training. In International Conference on Learning Representations, 2020.   \n[35] Shun Kiyono, Sosuke Kobayashi, Jun Suzuki, and Kentaro Inui. SHAPE: Shifted absolute position embedding for transformers. In Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages 3309\u20133321, 2021.   \n[36] Moshe Leshno, Vladimir Ya Lin, Allan Pinkus, and Shimon Schocken. Multilayer feedforward networks with a nonpolynomial activation function can approximate any function. Neural Networks, 6(6):861\u2013867, 1993.   \n[37] Jingyao Li, Pengguang Chen, Zexin He, Shaozuo Yu, Shu Liu, and Jiaya Jia. Rethinking out-of-distribution (OOD) detection: Masked image modeling is all you need. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 11578\u201311589, June 2023.   \n[38] Jingyao Li, Pengguang Chen, and Jiaya Jia. Motcoder: Elevating large language models with modular of thought for challenging programming tasks, 2024.   \n[39] Jingyao Li, Pengguang Chen, Shengju Qian, and Jiaya Jia. Tagclip: Improving discrimination ability of open-vocabulary semantic segmentation, 2023.   \n[40] Jingyao Li, Pengguang Chen, Shaozuo Yu, Shu Liu, and Jiaya Jia. Bal: Balancing diversity and novelty for active learning. IEEE Transactions on Pattern Analysis and Machine Intelligence, 46(5):3653\u20133664, 2024.   \n[41] Shanda Li, Chong You, Guru Guruganesh, Joshua Ainslie, Santiago Ontanon, Manzil Zaheer, Sumit Sanghai, Yiming Yang, Sanjiv Kumar, and Srinadh Bhojanapalli. Functional interpolation for relative positions improves long context transformers. In International Conference on Learning Representations, 2023.   \n[42] Tatiana Likhomanenko, Qiantong Xu, Gabriel Synnaeve, Ronan Collobert, and Alex Rogozhnikov. CAPE: Encoding relative positions with continuous augmented positional embeddings. Advances in Neural Information Processing Systems, 34:16079\u201316092, 2021.   \n[43] Bin Lin, Tao Peng, Chen Zhang, Minmin Sun, Lanbo Li, Hanyu Zhao, Wencong Xiao, Qi Xu, Xiafei Qiu, Shen Li, et al. Infinite-LLM: Efficient LLM service for long context with distattention and distributed kvcache. arXiv preprint arXiv:2401.02669, 2024.   \n[44] Jiacheng Liu, Sewon Min, Luke Zettlemoyer, Yejin Choi, and Hannaneh Hajishirzi. Infinigram: Scaling unbounded n-gram language models to a trillion tokens. arXiv preprint arXiv:2401.17377, 2024.   \n[45] Jiaheng Liu, Zhiqi Bai, Yuanxing Zhang, Chenchen Zhang, Yu Zhang, Ge Zhang, Jiakai Wang, Haoran Que, Yukang Chen, Wenbo Su, et al. $\\operatorname{E}^{\\star}$ 2-LLM: Efficient and extreme length extension of large language models. arXiv preprint arXiv:2401.06951, 2024.   \n[46] Xiaoran Liu, Hang Yan, Chenxin An, Xipeng Qiu, and Dahua Lin. Scaling laws of RoPE-based extrapolation. In International Conference on Learning Representations, 2023.   \n[47] Xuanqing Liu, Hsiang-Fu Yu, Inderjit Dhillon, and Cho-Jui Hsieh. Learning to encode position for transformer with continuous dynamical model. In International Conference on Machine Learning, pages 6327\u20136335. PMLR, 2020.   \n[48] Shengjie Luo, Shanda Li, Tianle Cai, Di He, Dinglan Peng, Shuxin Zheng, Guolin Ke, Liwei Wang, and Tie-Yan Liu. Stable, fast and accurate: Kernelized attention with relative positional encoding. Advances in Neural Information Processing Systems, 34:22795\u201322807, 2021.   \n[49] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advances in Neural Information Processing Systems, 32, 2019.   \n[50] Bo Peng, Eric Alcaide, Quentin Anthony, Alon Albalak, Samuel Arcadinho, Huanqi Cao, Xin Cheng, Michael Chung, Matteo Grella, Kranthi Kiran GV, et al. RWKV: Reinventing RNNs for the transformer era. Findings of the Association for Computational Linguistics: EMNLP, 2023.   \n[51] Bowen Peng, Jeffrey Quesnelle, Honglu Fan, and Enrico Shippole. YaRN: Efficient context window extension of large language models. In International Conference on Learning Representations, 2023.   \n[52] Ofir Press, Noah Smith, and Mike Lewis. Train short, test long: Attention with linear biases enables input length extrapolation. In International Conference on Learning Representations, 2021.   \n[53] Zhen Qin, Weigao Sun, Dong Li, Xuyang Shen, Weixuan Sun, and Yiran Zhong. Lightning attention-2: A free lunch for handling unlimited sequence lengths in large language models. arXiv preprint arXiv:2401.04658, 2024.   \n[54] Zhen Qin, Yiran Zhong, and Hui Deng. Exploring transformer extrapolation. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 38, pages 18897\u201318905, 2024.   \n[55] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019.   \n[56] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. Journal of Machine Learning Research, 21(140):1\u201367, 2020.   \n[57] Anian Ruoss, Gr\u00e9goire Del\u00e9tang, Tim Genewein, Jordi Grau-Moya, R\u00f3bert Csord\u00e1s, Mehdi Bennani, Shane Legg, and Joel Veness. Randomized positional encodings boost length generalization of transformers. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers), pages 1889\u20131903, 2023.   \n[58] Peter Shaw, Jakob Uszkoreit, and Ashish Vaswani. Self-attention with relative position representations. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 2 (Short Papers), pages 464\u2013468, 2018.   \n[59] Weijia Shi, Sewon Min, Maria Lomeli, Chunting Zhou, Margaret Li, Victoria Lin, Noah A Smith, Luke Zettlemoyer, Scott Yih, and Mike Lewis. In-context pretraining: Language modeling beyond document boundaries. International Conference on Learning Representations, 2023.   \n[60] Konrad Staniszewski, Szymon Tworkowski, Sebastian Jaszczur, Henryk Michalewski, \u0141ukasz Kucin\u00b4ski, and Piotr Mi\u0142os\u00b4. Structured packing in LLM training improves long context utilization. arXiv preprint arXiv:2312.17296, 2023.   \n[61] Jianlin Su, Murtadha Ahmed, Luo Ao, Mingren Zhu, Yunfeng Liu, et al. Naive bayes-based context extension for large language models. arXiv preprint arXiv:2403.17552, 2024.   \n[62] Jianlin Su, Murtadha Ahmed, Yu Lu, Shengfeng Pan, Wen Bo, and Yunfeng Liu. Roformer: Enhanced transformer with rotary position embedding. Neurocomputing, 568:127063, 2024.   \n[63] Jiankai Sun, Chuanyang Zheng, Enze Xie, Zhengying Liu, Ruihang Chu, Jianing Qiu, Jiaqi Xu, Mingyu Ding, Hongyang Li, Mengzhe Geng, et al. A survey of reasoning with foundation models. arXiv preprint arXiv:2312.11562, 2023.   \n[64] Yutao Sun, Li Dong, Barun Patra, Shuming Ma, Shaohan Huang, Alon Benhaim, Vishrav Chaudhary, Xia Song, and Furu Wei. A length-extrapolatable transformer. Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 14590\u201314604, July 2023.   \n[65] Alon Talmor, Jonathan Herzig, Nicholas Lourie, and Jonathan Berant. Commonsenseqa: A question answering challenge targeting commonsense knowledge. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), pages 4149\u20134158, 2019.   \n[66] Yi Tay, Dara Bahri, Liu Yang, Donald Metzler, and Da-Cheng Juan. Sparse sinkhorn attention. In International Conference on Machine Learning, pages 9438\u20139447. PMLR, 2020.   \n[67] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timoth\u00e9e Lacroix, Baptiste Rozi\u00e8re, Naman Goyal, Eric Hambro, Faisal Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023.   \n[68] Szymon Tworkowski, Konrad Staniszewski, Miko\u0142aj Pacek, Yuhuai Wu, Henryk Michalewski, and Piotr Mi\u0142o\u00b4s. Focused transformer: Contrastive training for context scaling. Advances in Neural Information Processing Systems, 36, 2024.   \n[69] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. Advances in Neural Information Processing Systems, 30, 2017.   \n[70] Benyou Wang, Lifeng Shang, Christina Lioma, Xin Jiang, Hao Yang, Qun Liu, and Jakob Grue Simonsen. On position embeddings in BERT. In International Conference on Learning Representations, 2020.   \n[71] Jie Wang, Tao Ji, Yuanbin Wu, Hang Yan, Tao Gui, Qi Zhang, Xuanjing Huang, and Xiaoling Wang. Length generalization of causal transformers without position encoding. arXiv preprint arXiv:2404.12224, 2024.   \n[72] Suyuchen Wang, Ivan Kobyzev, Peng Lu, Mehdi Rezagholizadeh, and Bang Liu. Resonance RoPE: Improving context length generalization of large language models. arXiv preprint arXiv:2403.00071, 2024.   \n[73] Y Wang, D Ma, and D Cai. With greater text comes greater necessity: Inference-time training helps long text generation. arXiv preprint arXiv:2401.11504, 2024.   \n[74] BigScience Workshop, Teven Le Scao, Angela Fan, Christopher Akiki, Ellie Pavlick, Suzana Ilic\u00b4, Daniel Hesslow, Roman Castagn\u00e9, Alexandra Sasha Luccioni, Fran\u00e7ois Yvon, et al. Bloom: A 176b-parameter open-access multilingual language model. arXiv preprint arXiv:2211.05100, 2022.   \n[75] Wenhao Wu, Yizhong Wang, Yao Fu, Xiang Yue, Dawei Zhu, and Sujian Li. Long context alignment with short instructions and synthesized positions. arXiv preprint arXiv:2405.03939, 2024.   \n[76] Chaojun Xiao, Pengle Zhang, Xu Han, Guangxuan Xiao, Yankai Lin, Zhengyan Zhang, Zhiyuan Liu, Song Han, and Maosong Sun. InfLLM: Unveiling the intrinsic capacity of LLMs for understanding extremely long sequences with training-free memory. arXiv preprint arXiv:2402.04617, 2024.   \n[77] Guangxuan Xiao, Yuandong Tian, Beidi Chen, Song Han, and Mike Lewis. Efficient streaming language models with attention sinks. In International Conference on Learning Representations, 2024.   \n[78] Jing Xiong, Zixuan Li, Chuanyang Zheng, Zhijiang Guo, Yichun Yin, Enze Xie, Zhicheng Yang, Qingxing Cao, Haiming Wang, Xiongwei Han, et al. Dq-lore: Dual queries with low rank approximation re-ranking for in-context learning. arXiv preprint arXiv:2310.02954, 2023.   \n[79] Wenhan Xiong, Jingyu Liu, Igor Molybog, Hejia Zhang, Prajjwal Bhargava, Rui Hou, Louis Martin, Rashi Rungta, Karthik Abinav Sankararaman, Barlas Oguz, et al. Effective long-context scaling of foundation models. arXiv preprint arXiv:2309.16039, 2023.   \n[80] Kai Yang, Jan Ackermann, Zhenyu He, Guhao Feng, Bohang Zhang, Yunzhen Feng, Qiwei Ye, Di He, and Liwei Wang. Do efficient transformers really save computation? International Conference on Machine Learning, 2024.   \n[81] Howard Yen, Tianyu Gao, and Danqi Chen. Long-context language modeling with parallel context encoding. arXiv preprint arXiv:2402.16617, 2024.   \n[82] Jingqing Zhang, Yao Zhao, Mohammad Saleh, and Peter Liu. PEGASUS: Pre-training with extracted gap-sentences for abstractive summarization. In International Conference on Machine Learning, pages 11328\u201311339. PMLR, 2020.   \n[83] Zhenyu Zhang, Runjin Chen, Shiwei Liu, Zhewei Yao, Olatunji Ruwase, Beidi Chen, Xiaoxia Wu, and Zhangyang Wang. Found in the middle: How language models use long contexts better via plug-and-play positional encoding. arXiv preprint arXiv:2403.04797, 2024.   \n[84] Chuanyang Zheng, Zhengying Liu, Enze Xie, Zhenguo Li, and Yu Li. Progressive-hint prompting improves reasoning in large language models. arXiv preprint arXiv:2304.09797, 2023.   \n[85] Hattie Zhou, Arwen Bradley, Etai Littwin, Noam Razin, Omid Saremi, Joshua M. Susskind, Samy Bengio, and Preetum Nakkiran. What algorithms can transformers learn? a study in length generalization. In International Conference on Learning Representations, 2024.   \n[86] Yongchao Zhou, Uri Alon, Xinyun Chen, Xuezhi Wang, Rishabh Agarwal, and Denny Zhou. Transformers can achieve length generalization but not robustly. arXiv preprint arXiv:2402.09371, 2024.   \n[87] Dawei Zhu, Nan Yang, Liang Wang, Yifan Song, Wenhao Wu, Furu Wei, and Sujian Li. PoSE: Efficient context window extension of llms via positional skip-wise training. In International Conference on Learning Representations, 2023.   \n[88] Shiyi Zhu, Jing Ye, Wei Jiang, Qi Zhang, Yifan Wu, and Jianguo Li. CoCA: Fusing position embedding with collinear constrained attention for fine-tuning free context window extending. arXiv e-prints, pages arXiv\u20132309, 2023. ", "page_idx": 9}, {"type": "text", "text": "", "page_idx": 10}, {"type": "text", "text": "", "page_idx": 11}, {"type": "text", "text": "", "page_idx": 12}, {"type": "text", "text": "", "page_idx": 13}, {"type": "text", "text": "", "page_idx": 14}, {"type": "text", "text": "", "page_idx": 15}, {"type": "text", "text": "A Broader impacts ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "Positive societal impacts. We propose a method for length extrapolation, which will be helpful for transformer-based models to process long context. ", "page_idx": 16}, {"type": "text", "text": "Negative societal impacts. This method may be abused for other potential long-context applications. ", "page_idx": 16}, {"type": "text", "text": "B Model Configuration ", "text_level": 1, "page_idx": 16}, {"type": "text", "text": "All experiments are conducted on 8 x A800 GPUs. The 125M model configuration is the following. ", "page_idx": 16}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/52381b5ccfc252a9504948ee3967401f7ae2457dd573a56313724d6333967e26.jpg", "table_caption": ["Table 3: Model Configurations. "], "table_footnote": [], "page_idx": 16}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/2eb3eb35c34736cf9161ccab51f5ce20c36af19109fb019fcf10ac851e0e6701.jpg", "img_caption": ["Figure 6: The effect of $D_{\\mathbf{DAPE}}$ : the performance with training lengths 128 and 512 on the Arxiv dataset. The experiments are conducted with Alibi and DAPE-Alibi. "], "img_footnote": [], "page_idx": 17}, {"type": "text", "text": "D Experiments on Chomsky Hierarchy Evaluation Benchmark (CHE) ", "text_level": 1, "page_idx": 17}, {"type": "text", "text": "Following the framework established by [21, 57], we conduct evaluations of our DAPE on a suite of tasks derived from the domain of formal language recognition. These tasks include modular arithmetic, reversing and duplicating strings, binary operations and bucket sort. Based on the Chomsky hierarchy [16], these tasks are categorized into distinct classes: Regular (R), Context-Free, Context-Sensitive (CS), and Recursively Enumerable. Each class aligns with specific computational models: Regular tasks are solvable using Finite-State Automata (FSA); Deterministic Context-Free tasks can be addressed by an FSA equipped with a deterministic stack; and Context-Sensitive tasks require an FSA complemented by access to a bounded tape. ", "page_idx": 17}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/befc064b6bee3df7480b6a897afa67afc51f6e89ec78f36072e33dc0d76d1646.jpg", "table_caption": ["Table 4: The example of different tasks. \u2020\u2020\u2020 denotes permutation-invariant tasks, which are expected to be solved without positional information. More explanation of tasks can be found in [21]. "], "table_footnote": [], "page_idx": 17}, {"type": "text", "text": "Problem Setting Building upon the framework proposed by Ruoss et al. (2023) [57], we utilize the encoder-only configuration of the original sequence-to-sequence Transformer model, as delineated by Vaswani et al. (2017) [69]. In scenarios that necessitate a multi-token output sequence $y$ , such as the task of string duplication, we extend the input sequence by appending $|y|$ placeholder tokens. Subsequently, we compute the entire Transformer output from this augmented sequence without resorting to autoregressive sampling techniques. Training is conducted on sequences whose lengths are uniformly distributed, sampled from $U(1,N)$ , with $N$ set to 40. Evaluation is performed on sequences that vary in length from $N+1$ to $M$ , where $M$ equals 500. The implemented architecture comprises 5 layers, 8 attention heads, and a feature dimension of 256. The dimension $D_{\\mathrm{DAPE}}$ is established at 64, while the maximum randomized position $L$ is set to 2048. ", "page_idx": 17}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/e8424d98a4f2a1facc6651f870ec7fa7214f9207a0d1abe7e4f560365d3ecf7d.jpg", "table_caption": ["Table 5: The perplexity performances on the Arxiv dataset when the training length is 512 and running with three random seeds. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "According to Table 5, the performances of different methods are evaluated based on perplexity across various validation lengths ranging from 512 to 8192. The results indicate that DAPE-Alibi consistently outperforms the Alibi method, DAPE-Kerple surpasses Kerple, and DAPE-FIRE shows better performance than FIRE, all with p-values less than 0.05, suggesting significant improvements. ", "page_idx": 18}, {"type": "text", "text": "DAPE-Alibi demonstrates lower perplexity values compared to Alibi at all lengths, indicating more effective learning and generalization. Similarly, DAPE-Kerple shows significant improvements over Kerple, especially at larger lengths, where the gap in performance widens. The DAPE-FIRE method also shows notable enhancements over the FIRE method, particularly at higher lengths where standard FIRE struggles with increased perplexity. ", "page_idx": 18}, {"type": "text", "text": "Moreover, DAPE-Alibi, DAPE-Kerple, and DAPE-FIRE not only perform better than their respective original methods but also show superiority over RoPE and T5\u2019s bias across all validation lengths. This suggests that the modifications implemented in DAPE versions provide a more robust and generalized model, capable of maintaining lower perplexity and thus better performance on the Arxiv dataset. ", "page_idx": 18}, {"type": "text", "text": "In conclusion, the statistical analysis confirms that the proposed DAPE variations offer significant improvements in perplexity performance, thereby validating their effectiveness in comparison to their original counterparts and other baseline methods. ", "page_idx": 18}, {"type": "text", "text": "F Data-Adaptive Related Position Encoding Performance Comparison ", "text_level": 1, "page_idx": 18}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/7ed037d68e6948e89f97f3348c499d3749fe87bff8b78c7204ca6df49e228e4b.jpg", "table_caption": ["Table 6: The performance comparison between data-related position encoding, with dataset Books3 and training length 128. "], "table_footnote": [], "page_idx": 18}, {"type": "text", "text": "According to the experiment, the transformer-xl achieves good performance on length extrapolation. Therefore, this also suggests that the position encoding should interact with attention/query/key to further improve the performance. ", "page_idx": 19}, {"type": "text", "text": "G Ablation Study on Bias Matrix ", "text_level": 1, "page_idx": 19}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/b46cca13ea71bc5926a3fb84dbf31ee5e8695a815271d65f78508e7167d718bd.jpg", "table_caption": ["Table 7: Books Dataset Results: Train Length 512 "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "We further conduct an ablation study on the $f$ , proving that $f$ help enhance the bias matrix. DAPE improves the bias matrix for $A_{f i n a l}$ , while the $A_{f i n a l}$ is used to calculate $A_{f i n a l}K$ . For the unseen position, the $B$ partially could handle it (FIRE changes the problem to interpolation), but is not accurate enough so that DAPE helps enhance the bias matrix $B$ via attention score. The experiment suggests two points: 1) The DAPE $\\dot{\\boldsymbol{f}}(Q{\\boldsymbol{K}}^{T},{\\boldsymbol{B}})$ is better than naive $f(B)$ , suggesting that the contextadaptive is important. 2) The $Q K^{T}+B+f(B)$ is better than $Q K^{T}+B$ , suggesting that beneftiing from improving the expressiveness of the bias matrix. ", "page_idx": 19}, {"type": "text", "text": "H The result on 2.7B and 6.7B ", "text_level": 1, "page_idx": 19}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/7a2bb4deb4e1f9e1b82ba8dee85f13209555bb2eb58d4415018fe7435f365454.jpg", "table_caption": ["Table 8: Model Size and Method Comparison with Training Length 512 "], "table_footnote": [], "page_idx": 19}, {"type": "table", "img_path": "rnUEUbRxVu/tmp/b65cf32a4e6f7f168db6bf0ca38f34a1f46cdb17a0c9bc3b7a59858cc1cb51db.jpg", "table_caption": ["Table 9: Model Size and Method Comparison with Training Length 512 "], "table_footnote": [], "page_idx": 19}, {"type": "text", "text": "According to the result, we can find that the proposed DAPE still works well, whatever the model size is 2.7B or 6.7B. With 2.7B model size, RoPE achieves 21.01 on evaluation length 512 and 160.50 on evaluation 4096, while our DAPE-Kerple achieves 20.52 and 19.57 respectively. Also, DAPE-Kerple achieves the best performance, whatever the model size is 2.7B or 6.7B from evaluation length 512 to 8192. This suggests that our proposed DAPE has great scalability. ", "page_idx": 19}, {"type": "text", "text": "I DAPE Visualization ", "text_level": 1, "page_idx": 20}, {"type": "text", "text": "The model is trained with DAPE-Kerple on length 512. ", "page_idx": 20}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/d31be27b133b1dab105e277eb10dbb77fc4f7604ec57421362a98b84f04395dd.jpg", "img_caption": ["I.1 Visualization on length 512 ", "Figure 7: Evaluation Length 512 Example 1: Part 1 "], "img_footnote": [], "page_idx": 20}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/7c20a3d7cf48c908a7be3e65980802522afe33d7373bb75651a12a60ea09df28.jpg", "img_caption": ["Figure 8: Evaluation Length 512 Example 1: Part 2 "], "img_footnote": [], "page_idx": 21}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/6f98a642cf1bdd754d2e735c99d27dd8e1af550e3157806df86e747ee4df37f4.jpg", "img_caption": ["Figure 9: Evaluation Length 512 Example 1: Part 3 "], "img_footnote": [], "page_idx": 22}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/0a89634e86be78c5eecd555ae98a45b8bd0096cf6f7465398ebcb2b544062d3a.jpg", "img_caption": ["Figure 10: Evaluation Length 512 Example 2: Part 1 "], "img_footnote": [], "page_idx": 23}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/340eb8907c77d210678ebe13864db13a74f178b2f6ed648f156a90dbad731557.jpg", "img_caption": ["Figure 11: Evaluation Length 512 Example 2: Part 2 "], "img_footnote": [], "page_idx": 24}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/86b615bca5c2b59cf8a839e543096aa2e3ba57f15aaf1b0a1ed781d430c5c10d.jpg", "img_caption": ["I.2 Visualization on length 2048 ", "Figure 12: Evaluation Length 2048 Example 1: Part 1 "], "img_footnote": [], "page_idx": 25}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/970d5968a3a1c8e047f200c74f77173966a1c0f442a99fa008fedb771964ed4c.jpg", "img_caption": ["Figure 13: Evaluation Length 2048 Example 1: Part 2 "], "img_footnote": [], "page_idx": 26}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/bceca6147dbc21596e3f30bdce53ab770312051fc3bd5bcb8165cd598fde309d.jpg", "img_caption": ["Figure 14: Evaluation Length 2048 Example 1: Part 3 "], "img_footnote": [], "page_idx": 27}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/0e674ef6f93ab8f96f4c95ce39245f063b47a9f7bd9322d8962e9e5fdebea324.jpg", "img_caption": ["Figure 15: Evaluation Length 2048 Example 2: Part 1 "], "img_footnote": [], "page_idx": 28}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/bd2491bb941d3bc2b8583ecb75c799b731ea22f57b6ff044dab19c8c5fee8680.jpg", "img_caption": ["Figure 16: Evaluation Length 2048 Example 2: Part 2 "], "img_footnote": [], "page_idx": 29}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/190ffd038cc40cdd93981b48f491761c05034b40b390a9b7440ea3e4f5a8b313.jpg", "img_caption": ["I.3 Visualization on length 8192 ", "Figure 17: Evaluation Length 8192 Example 1: Part 1 "], "img_footnote": [], "page_idx": 30}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/09358d765c511aae9c01cbd57d796710480059a8817ee9c1183912c5d8b18154.jpg", "img_caption": ["Figure 18: Evaluation Length 8192 Example 1: Part 2 "], "img_footnote": [], "page_idx": 31}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/d90244329ed887a41d423bbf3a21cf56d34917d025543db92096c5f8c5c0f62e.jpg", "img_caption": ["Figure 19: Evaluation Length 8192 Example 1: Part 3 "], "img_footnote": [], "page_idx": 32}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/9361a3e390a712b1bff9cf99cc7ace932167c2eeb36016fee33a05ad58bffa54.jpg", "img_caption": ["Figure 20: Evaluation Length 8192 Example 2: Part 1 "], "img_footnote": [], "page_idx": 33}, {"type": "image", "img_path": "rnUEUbRxVu/tmp/0e948e7fca50f6858556f3ed4232cee9694c11082dc224215f6f7c7993bfb396.jpg", "img_caption": ["Figure 21: Evaluation Length 8192 Example 2: Part 2 "], "img_footnote": [], "page_idx": 34}, {"type": "text", "text": "J Implementation ", "text_level": 1, "page_idx": 35}, {"type": "text", "text": "In this section, we present the implementation of the proposed DAPE module in PyTorch [49]. ", "page_idx": 35}, {"type": "text", "text": "import t o r c h import t o r c h . nn as nn ", "page_idx": 35}, {"type": "text", "text": "class DAPE( nn . Module ) : def _ i n i t _ _ ( s e l f , head_number $=12$ , mlp_width $=32$ ) : \"\"\" DAPE attention bias module. Args: num_heads: number of attention heads. mlp_width: Width of MLP. 11 11 11 super (DAPE, s e l f ) . _ _ i n i t _ _ ( ) s e l f . $\\mathrm{{\\mlp}~=~n n}$ . S e q u e n t i a l ( nn . Linear ( $^{2\\ast}$ head_number , mlp_width ) , nn . LeaklyReLU ( ) , nn . Linear ( mlp_width , num_heads ) ", "page_idx": 35}, {"type": "text", "text": "def forward ( s e l f , a t t e n t i o n : t o r c h . Tensor , b i a s : t o r c h . Tensor ) : 11 1111 ", "page_idx": 35}, {"type": "text", "text": "Args: attention: input sequence , which is q^T \\* k, shape [bsz, num_heads , seq_len , seq_len] bias: bias matrix, which can be generated by Alibi, Kerple FIRE or other additive position encodings shape [1,num_heads , seq_len , seq_len] ", "page_idx": 35}, {"type": "text", "text": "b i a s _ t i l e $=$ r e p e a t ( bias , \u20191 h T T -> b h T T\u2019 , $\\mathtt{b}\\!=$ a t t e n t i o n . shape [ 0 ] ) ", "page_idx": 35}, {"type": "text", "text": "# Concatenate a t t e n t i o n and b i a s a t t e n t i o n _ b i a s _ c o n c a t $=$ t o r c h . c a t ( ( a t t e n t i o n , b i a s _ t i l e ) , $\\mathrm{dim}\\!=\\!1$ ) ", "page_idx": 35}, {"type": "text", "text": "# Rearrange the dimensions f o r MLP p r o c e s s i n g   \na t t e n t i o n _ b i a s _ c o n c a t $=$ r e a r r a n g e ( a t t e n t i o n _ b i a s _ c o n c a t , \u2019b h T T -> b T T h\u2019 ) ", "page_idx": 35}, {"type": "text", "text": "# Apply the MLP a t t e n t i o n _ b i a s _ c o n c a t $=$ s e l f . mlp ( a t t e n t i o n _ b i a s _ c o n c a t ) ", "page_idx": 35}, {"type": "text", "text": "# Rearrange back to o r i g i n a l dimensions   \na t t e n t i o n _ b i a s _ c o n c a t $=$ r e a r r a n g e ( a t t e n t i o n _ b i a s _ c o n c a t , \u2019b T T h -> b h T T\u2019 ) ", "page_idx": 35}, {"type": "text", "text": "return a t t e n t i o n $^+$ b i a s $^+$ a t t e n t i o n _ b i a s _ c o n c a t ", "page_idx": 35}, {"type": "text", "text": "NeurIPS Paper Checklist ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "1. Claims ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Do the main claims made in the abstract and introduction accurately reflect the paper\u2019s contributions and scope? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: We have stated the claim in Abstract and Introduction part (Section 1). We also conduct extensive experiments in Experiment part (Section 4) ", "page_idx": 36}, {"type": "text", "text": "Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the abstract and introduction do not include the claims made in the paper.   \n\u2022 The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.   \n\u2022 The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.   \n\u2022 It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper. ", "page_idx": 36}, {"type": "text", "text": "2. Limitations ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: Does the paper discuss the limitations of the work performed by the authors? ", "page_idx": 36}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Justification: The we discuss the limitation in the Time Cost part (Section 4.5) of Experiment. Guidelines: ", "page_idx": 36}, {"type": "text", "text": "\u2022 The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.   \n\u2022 The authors are encouraged to create a separate \"Limitations\" section in their paper.   \n\u2022 The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.   \n\u2022 The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.   \n\u2022 The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.   \n\u2022 The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.   \n\u2022 If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.   \n\u2022 While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations. ", "page_idx": 36}, {"type": "text", "text": "3. Theory Assumptions and Proofs ", "text_level": 1, "page_idx": 36}, {"type": "text", "text": "Question: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof? ", "page_idx": 36}, {"type": "text", "text": "Answer:[Yes] ", "page_idx": 36}, {"type": "text", "text": "Justification: We have prove the expressiveness of our method in the Method part. Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include theoretical results.   \n\u2022 All the theorems, formulas, and proofs in the paper should be numbered and crossreferenced.   \n\u2022 All assumptions should be clearly stated or referenced in the statement of any theorems.   \n\u2022 The proofs can either appear in the main paper or the supplemental material, but if they appear in the supplemental material, the authors are encouraged to provide a short proof sketch to provide intuition.   \n\u2022 Inversely, any informal proof provided in the core of the paper should be complemented by formal proofs provided in appendix or supplemental material.   \n\u2022 Theorems and Lemmas that the proof relies upon should be properly referenced. ", "page_idx": 37}, {"type": "text", "text": "4. Experimental Result Reproducibility ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Justification: Yes, we have proved the implementation in Method (Section 3) part and model configuration in Appendix Model Configuration. ", "page_idx": 37}, {"type": "text", "text": "Guidelines: ", "page_idx": 37}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.   \n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.   \n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general. releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.   \n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm. (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully. (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results. ", "page_idx": 37}, {"type": "text", "text": "5. Open access to data and code ", "text_level": 1, "page_idx": 37}, {"type": "text", "text": "Question: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material? ", "page_idx": 37}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: We have provided the pytorch implementation code in Appendix Section J. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that paper does not include experiments requiring code.   \n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/ public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).   \n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https: //nips.cc/public/guides/CodeSubmissionPolicy) for more details.   \n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.   \n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.   \n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).   \n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted. ", "page_idx": 38}, {"type": "text", "text": "6. Experimental Setting/Details ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 38}, {"type": "text", "text": "Justification: We have provided the experiment setting in the Experiment (Section 4) part. Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments. \u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them. \u2022 The full details can be provided either with the code, in appendix, or as supplemental material. ", "page_idx": 38}, {"type": "text", "text": "7. Experiment Statistical Significance ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Question: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments? ", "page_idx": 38}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 38}, {"type": "text", "text": "Justification: In the paper, we report the mean perplexity values and standard variance Appendix Section E. Additionally, we also report that the proposed method shows statistically significant improvements over other static PE methods (according to the p-value less than 0.05). ", "page_idx": 38}, {"type": "text", "text": "Guidelines: ", "page_idx": 38}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The authors should answer \"Yes\" if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.   \n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).   \n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)   \n\u2022 The assumptions made should be given (e.g., Normally distributed errors).   \n\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.   \n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a $96\\%$ CI, if the hypothesis of Normality of errors is not verified.   \n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).   \n\u2022 If error bars are reported in tables or plots, The authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text. ", "page_idx": 38}, {"type": "text", "text": "", "page_idx": 39}, {"type": "text", "text": "8. Experiments Compute Resources ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: We have provided the compute resources in the Time Cost part of Experiment (Section 4) and Appendix B. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not include experiments.   \n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.   \n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.   \n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn\u2019t make it into the paper). ", "page_idx": 39}, {"type": "text", "text": "9. Code Of Ethics ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Justification: We have followed the guidelines. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.   \n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.   \n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction). ", "page_idx": 39}, {"type": "text", "text": "10. Broader Impacts ", "text_level": 1, "page_idx": 39}, {"type": "text", "text": "Question: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed? ", "page_idx": 39}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 39}, {"type": "text", "text": "Justification: We have discussed it in the Broad Impact section, which is Appendix Section A. ", "page_idx": 39}, {"type": "text", "text": "Guidelines: ", "page_idx": 39}, {"type": "text", "text": "\u2022 The answer NA means that there is no societal impact of the work performed.   \n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.   \n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.   \n\u2022 The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.   \n\u2022 The authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.   \n\u2022 If there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML). ", "page_idx": 39}, {"type": "text", "text": "", "page_idx": 40}, {"type": "text", "text": "11. Safeguards ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)? ", "page_idx": 40}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 40}, {"type": "text", "text": "Justification: The paper poses no such risks. ", "page_idx": 40}, {"type": "text", "text": "Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper poses no such risks.   \n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.   \n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.   \n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort. ", "page_idx": 40}, {"type": "text", "text": "12. Licenses for existing assets ", "text_level": 1, "page_idx": 40}, {"type": "text", "text": "Question: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected? ", "page_idx": 40}, {"type": "text", "text": "Answer: [Yes] ", "page_idx": 40}, {"type": "text", "text": "Justification: Yes, we have cited the related works. ", "page_idx": 40}, {"type": "text", "text": "Guidelines: ", "page_idx": 40}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not use existing assets.   \n\u2022 The authors should cite the original paper that produced the code package or dataset.   \n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.   \n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.   \n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.   \n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.   \n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided. ", "page_idx": 40}, {"type": "text", "text": "\u2022 If this information is not available online, the authors are encouraged to reach out to the asset\u2019s creators. ", "page_idx": 41}, {"type": "text", "text": "13. New Assets ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets? ", "page_idx": 41}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 41}, {"type": "text", "text": "Justification: The paper does not release new assets. ", "page_idx": 41}, {"type": "text", "text": "Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not release new assets.   \n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.   \n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.   \n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file. ", "page_idx": 41}, {"type": "text", "text": "14. Crowdsourcing and Research with Human Subjects ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)? ", "page_idx": 41}, {"type": "text", "text": "Answer: [NA] ", "page_idx": 41}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.   \n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector. ", "page_idx": 41}, {"type": "text", "text": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Question: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained? ", "page_idx": 41}, {"type": "text", "text": "Answer: [NA] ", "text_level": 1, "page_idx": 41}, {"type": "text", "text": "Justification: The paper does not involve crowdsourcing nor research with human subjects. Guidelines: ", "page_idx": 41}, {"type": "text", "text": "\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.   \n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.   \n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.   \n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review. ", "page_idx": 41}]